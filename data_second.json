[{"repo": "antirez/redis", "language": "C", "readme": "\nThis README is just a fast quick start document. You can find more detailed documentation at redis.io.\nWhat is Redis?\nRedis is often referred as a data structures server. What this means is that Redis provides access to mutable data structures via a set of commands, which are sent using a server-client model with TCP sockets and a simple protocol. So different processes can query and modify the same data structures in a shared way.\nData structures implemented into Redis have a few special properties:\n\nRedis cares to store them on disk, even if they are always served and modified into the server memory. This means that Redis is fast, but that is also non-volatile.\nImplementation of data structures stress on memory efficiency, so data structures inside Redis will likely use less memory compared to the same data structure modeled using an high level programming language.\nRedis offers a number of features that are natural to find in a database, like replication, tunable levels of durability, cluster, high availability.\n\nAnother good example is to think of Redis as a more complex version of memcached, where the operations are not just SETs and GETs, but operations to work with complex data types like Lists, Sets, ordered data structures, and so forth.\nIf you want to know more, this is a list of selected starting points:\n\nIntroduction to Redis data types. http://redis.io/topics/data-types-intro\nTry Redis directly inside your browser. http://try.redis.io\nThe full list of Redis commands. http://redis.io/commands\nThere is much more inside the Redis official documentation. http://redis.io/documentation\n\nBuilding Redis\nRedis can be compiled and used on Linux, OSX, OpenBSD, NetBSD, FreeBSD.\nWe support big endian and little endian architectures, and both 32 bit\nand 64 bit systems.\nIt may compile on Solaris derived systems (for instance SmartOS) but our\nsupport for this platform is best effort and Redis is not guaranteed to\nwork as well as in Linux, OSX, and *BSD there.\nIt is as simple as:\n% make\n\nYou can run a 32 bit Redis binary using:\n% make 32bit\n\nAfter building Redis, it is a good idea to test it using:\n% make test\n\nFixing build problems with dependencies or cached build options\nRedis has some dependencies which are included into the deps directory.\nmake does not automatically rebuild dependencies even if something in\nthe source code of dependencies changes.\nWhen you update the source code with git pull or when code inside the\ndependencies tree is modified in any other way, make sure to use the following\ncommand in order to really clean everything and rebuild from scratch:\nmake distclean\n\nThis will clean: jemalloc, lua, hiredis, linenoise.\nAlso if you force certain build options like 32bit target, no C compiler\noptimizations (for debugging purposes), and other similar build time options,\nthose options are cached indefinitely until you issue a make distclean\ncommand.\nFixing problems building 32 bit binaries\nIf after building Redis with a 32 bit target you need to rebuild it\nwith a 64 bit target, or the other way around, you need to perform a\nmake distclean in the root directory of the Redis distribution.\nIn case of build errors when trying to build a 32 bit binary of Redis, try\nthe following steps:\n\nInstall the packages libc6-dev-i386 (also try g++-multilib).\nTry using the following command line instead of make 32bit:\nmake CFLAGS=\"-m32 -march=native\" LDFLAGS=\"-m32\"\n\nAllocator\nSelecting a non-default memory allocator when building Redis is done by setting\nthe MALLOC environment variable. Redis is compiled and linked against libc\nmalloc by default, with the exception of jemalloc being the default on Linux\nsystems. This default was picked because jemalloc has proven to have fewer\nfragmentation problems than libc malloc.\nTo force compiling against libc malloc, use:\n% make MALLOC=libc\n\nTo compile against jemalloc on Mac OS X systems, use:\n% make MALLOC=jemalloc\n\nVerbose build\nRedis will build with a user friendly colorized output by default.\nIf you want to see a more verbose output use the following:\n% make V=1\n\nRunning Redis\nTo run Redis with the default configuration just type:\n% cd src\n% ./redis-server\n\nIf you want to provide your redis.conf, you have to run it using an additional\nparameter (the path of the configuration file):\n% cd src\n% ./redis-server /path/to/redis.conf\n\nIt is possible to alter the Redis configuration by passing parameters directly\nas options using the command line. Examples:\n% ./redis-server --port 9999 --replicaof 127.0.0.1 6379\n% ./redis-server /etc/redis/6379.conf --loglevel debug\n\nAll the options in redis.conf are also supported as options using the command\nline, with exactly the same name.\nPlaying with Redis\nYou can use redis-cli to play with Redis. Start a redis-server instance,\nthen in another terminal try the following:\n% cd src\n% ./redis-cli\nredis> ping\nPONG\nredis> set foo bar\nOK\nredis> get foo\n\"bar\"\nredis> incr mycounter\n(integer) 1\nredis> incr mycounter\n(integer) 2\nredis>\n\nYou can find the list of all the available commands at http://redis.io/commands.\nInstalling Redis\nIn order to install Redis binaries into /usr/local/bin just use:\n% make install\n\nYou can use make PREFIX=/some/other/directory install if you wish to use a\ndifferent destination.\nMake install will just install binaries in your system, but will not configure\ninit scripts and configuration files in the appropriate place. This is not\nneeded if you want just to play a bit with Redis, but if you are installing\nit the proper way for a production system, we have a script doing this\nfor Ubuntu and Debian systems:\n% cd utils\n% ./install_server.sh\n\nNote: install_server.sh will not work on Mac OSX; it is built for Linux only.\nThe script will ask you a few questions and will setup everything you need\nto run Redis properly as a background daemon that will start again on\nsystem reboots.\nYou'll be able to stop and start Redis using the script named\n/etc/init.d/redis_<portnumber>, for instance /etc/init.d/redis_6379.\nCode contributions\nNote: by contributing code to the Redis project in any form, including sending\na pull request via Github, a code fragment or patch via private email or\npublic discussion groups, you agree to release your code under the terms\nof the BSD license that you can find in the COPYING file included in the Redis\nsource distribution.\nPlease see the CONTRIBUTING file in this source distribution for more\ninformation.\nRedis internals\nIf you are reading this README you are likely in front of a Github page\nor you just untarred the Redis distribution tar ball. In both the cases\nyou are basically one step away from the source code, so here we explain\nthe Redis source code layout, what is in each file as a general idea, the\nmost important functions and structures inside the Redis server and so forth.\nWe keep all the discussion at a high level without digging into the details\nsince this document would be huge otherwise and our code base changes\ncontinuously, but a general idea should be a good starting point to\nunderstand more. Moreover most of the code is heavily commented and easy\nto follow.\nSource code layout\nThe Redis root directory just contains this README, the Makefile which\ncalls the real Makefile inside the src directory and an example\nconfiguration for Redis and Sentinel. You can find a few shell\nscripts that are used in order to execute the Redis, Redis Cluster and\nRedis Sentinel unit tests, which are implemented inside the tests\ndirectory.\nInside the root are the following important directories:\n\nsrc: contains the Redis implementation, written in C.\ntests: contains the unit tests, implemented in Tcl.\ndeps: contains libraries Redis uses. Everything needed to compile Redis is inside this directory; your system just needs to provide libc, a POSIX compatible interface and a C compiler. Notably deps contains a copy of jemalloc, which is the default allocator of Redis under Linux. Note that under deps there are also things which started with the Redis project, but for which the main repository is not antirez/redis.\n\nThere are a few more directories but they are not very important for our goals\nhere. We'll focus mostly on src, where the Redis implementation is contained,\nexploring what there is inside each file. The order in which files are\nexposed is the logical one to follow in order to disclose different layers\nof complexity incrementally.\nNote: lately Redis was refactored quite a bit. Function names and file\nnames have been changed, so you may find that this documentation reflects the\nunstable branch more closely. For instance in Redis 3.0 the server.c\nand server.h files were named redis.c and redis.h. However the overall\nstructure is the same. Keep in mind that all the new developments and pull\nrequests should be performed against the unstable branch.\nserver.h\nThe simplest way to understand how a program works is to understand the\ndata structures it uses. So we'll start from the main header file of\nRedis, which is server.h.\nAll the server configuration and in general all the shared state is\ndefined in a global structure called server, of type struct redisServer.\nA few important fields in this structure are:\n\nserver.db is an array of Redis databases, where data is stored.\nserver.commands is the command table.\nserver.clients is a linked list of clients connected to the server.\nserver.master is a special client, the master, if the instance is a replica.\n\nThere are tons of other fields. Most fields are commented directly inside\nthe structure definition.\nAnother important Redis data structure is the one defining a client.\nIn the past it was called redisClient, now just client. The structure\nhas many fields, here we'll just show the main ones:\nstruct client {\n    int fd;\n    sds querybuf;\n    int argc;\n    robj **argv;\n    redisDb *db;\n    int flags;\n    list *reply;\n    char buf[PROTO_REPLY_CHUNK_BYTES];\n    ... many other fields ...\n}\n\nThe client structure defines a connected client:\n\nThe fd field is the client socket file descriptor.\nargc and argv are populated with the command the client is executing, so that functions implementing a given Redis command can read the arguments.\nquerybuf accumulates the requests from the client, which are parsed by the Redis server according to the Redis protocol and executed by calling the implementations of the commands the client is executing.\nreply and buf are dynamic and static buffers that accumulate the replies the server sends to the client. These buffers are incrementally written to the socket as soon as the file descriptor is writable.\n\nAs you can see in the client structure above, arguments in a command\nare described as robj structures. The following is the full robj\nstructure, which defines a Redis object:\ntypedef struct redisObject {\n    unsigned type:4;\n    unsigned encoding:4;\n    unsigned lru:LRU_BITS; /* lru time (relative to server.lruclock) */\n    int refcount;\n    void *ptr;\n} robj;\n\nBasically this structure can represent all the basic Redis data types like\nstrings, lists, sets, sorted sets and so forth. The interesting thing is that\nit has a type field, so that it is possible to know what type a given\nobject has, and a refcount, so that the same object can be referenced\nin multiple places without allocating it multiple times. Finally the ptr\nfield points to the actual representation of the object, which might vary\neven for the same type, depending on the encoding used.\nRedis objects are used extensively in the Redis internals, however in order\nto avoid the overhead of indirect accesses, recently in many places\nwe just use plain dynamic strings not wrapped inside a Redis object.\nserver.c\nThis is the entry point of the Redis server, where the main() function\nis defined. The following are the most important steps in order to startup\nthe Redis server.\n\ninitServerConfig() setups the default values of the server structure.\ninitServer() allocates the data structures needed to operate, setup the listening socket, and so forth.\naeMain() starts the event loop which listens for new connections.\n\nThere are two special functions called periodically by the event loop:\n\nserverCron() is called periodically (according to server.hz frequency), and performs tasks that must be performed from time to time, like checking for timedout clients.\nbeforeSleep() is called every time the event loop fired, Redis served a few requests, and is returning back into the event loop.\n\nInside server.c you can find code that handles other vital things of the Redis server:\n\ncall() is used in order to call a given command in the context of a given client.\nactiveExpireCycle() handles eviciton of keys with a time to live set via the EXPIRE command.\nfreeMemoryIfNeeded() is called when a new write command should be performed but Redis is out of memory according to the maxmemory directive.\nThe global variable redisCommandTable defines all the Redis commands, specifying the name of the command, the function implementing the command, the number of arguments required, and other properties of each command.\n\nnetworking.c\nThis file defines all the I/O functions with clients, masters and replicas\n(which in Redis are just special clients):\n\ncreateClient() allocates and initializes a new client.\nthe addReply*() family of functions are used by commands implementations in order to append data to the client structure, that will be transmitted to the client as a reply for a given command executed.\nwriteToClient() transmits the data pending in the output buffers to the client and is called by the writable event handler sendReplyToClient().\nreadQueryFromClient() is the readable event handler and accumulates data from read from the client into the query buffer.\nprocessInputBuffer() is the entry point in order to parse the client query buffer according to the Redis protocol. Once commands are ready to be processed, it calls processCommand() which is defined inside server.c in order to actually execute the command.\nfreeClient() deallocates, disconnects and removes a client.\n\naof.c and rdb.c\nAs you can guess from the names these files implement the RDB and AOF\npersistence for Redis. Redis uses a persistence model based on the fork()\nsystem call in order to create a thread with the same (shared) memory\ncontent of the main Redis thread. This secondary thread dumps the content\nof the memory on disk. This is used by rdb.c to create the snapshots\non disk and by aof.c in order to perform the AOF rewrite when the\nappend only file gets too big.\nThe implementation inside aof.c has additional functions in order to\nimplement an API that allows commands to append new commands into the AOF\nfile as clients execute them.\nThe call() function defined inside server.c is responsible to call\nthe functions that in turn will write the commands into the AOF.\ndb.c\nCertain Redis commands operate on specific data types, others are general.\nExamples of generic commands are DEL and EXPIRE. They operate on keys\nand not on their values specifically. All those generic commands are\ndefined inside db.c.\nMoreover db.c implements an API in order to perform certain operations\non the Redis dataset without directly accessing the internal data structures.\nThe most important functions inside db.c which are used in many commands\nimplementations are the following:\n\nlookupKeyRead() and lookupKeyWrite() are used in order to get a pointer to the value associated to a given key, or NULL if the key does not exist.\ndbAdd() and its higher level counterpart setKey() create a new key in a Redis database.\ndbDelete() removes a key and its associated value.\nemptyDb() removes an entire single database or all the databases defined.\n\nThe rest of the file implements the generic commands exposed to the client.\nobject.c\nThe robj structure defining Redis objects was already described. Inside\nobject.c there are all the functions that operate with Redis objects at\na basic level, like functions to allocate new objects, handle the reference\ncounting and so forth. Notable functions inside this file:\n\nincrRefcount() and decrRefCount() are used in order to increment or decrement an object reference count. When it drops to 0 the object is finally freed.\ncreateObject() allocates a new object. There are also specialized functions to allocate string objects having a specific content, like createStringObjectFromLongLong() and similar functions.\n\nThis file also implements the OBJECT command.\nreplication.c\nThis is one of the most complex files inside Redis, it is recommended to\napproach it only after getting a bit familiar with the rest of the code base.\nIn this file there is the implementation of both the master and replica role\nof Redis.\nOne of the most important functions inside this file is replicationFeedSlaves() that writes commands to the clients representing replica instances connected\nto our master, so that the replicas can get the writes performed by the clients:\nthis way their data set will remain synchronized with the one in the master.\nThis file also implements both the SYNC and PSYNC commands that are\nused in order to perform the first synchronization between masters and\nreplicas, or to continue the replication after a disconnection.\nOther C files\n\nt_hash.c, t_list.c, t_set.c, t_string.c, t_zset.c and t_stream.c contains the implementation of the Redis data types. They implement both an API to access a given data type, and the client commands implementations for these data types.\nae.c implements the Redis event loop, it's a self contained library which is simple to read and understand.\nsds.c is the Redis string library, check http://github.com/antirez/sds for more information.\nanet.c is a library to use POSIX networking in a simpler way compared to the raw interface exposed by the kernel.\ndict.c is an implementation of a non-blocking hash table which rehashes incrementally.\nscripting.c implements Lua scripting. It is completely self contained from the rest of the Redis implementation and is simple enough to understand if you are familar with the Lua API.\ncluster.c implements the Redis Cluster. Probably a good read only after being very familiar with the rest of the Redis code base. If you want to read cluster.c make sure to read the Redis Cluster specification.\n\nAnatomy of a Redis command\nAll the Redis commands are defined in the following way:\nvoid foobarCommand(client *c) {\n    printf(\"%s\",c->argv[1]->ptr); /* Do something with the argument. */\n    addReply(c,shared.ok); /* Reply something to the client. */\n}\n\nThe command is then referenced inside server.c in the command table:\n{\"foobar\",foobarCommand,2,\"rtF\",0,NULL,0,0,0,0,0},\n\nIn the above example 2 is the number of arguments the command takes,\nwhile \"rtF\" are the command flags, as documented in the command table\ntop comment inside server.c.\nAfter the command operates in some way, it returns a reply to the client,\nusually using addReply() or a similar function defined inside networking.c.\nThere are tons of commands implementations inside the Redis source code\nthat can serve as examples of actual commands implementations. To write\na few toy commands can be a good exercise to familiarize with the code base.\nThere are also many other files not described here, but it is useless to\ncover everything. We want to just help you with the first steps.\nEventually you'll find your way inside the Redis code base :-)\nEnjoy!\n\n"}, {"repo": "denoland/deno", "language": "TypeScript", "readme": "\nDeno\nA secure runtime for JavaScript and TypeScript.\n\nDeno aims to provide a productive and secure scripting environment for the\nmodern programmer. It is built on top of V8, Rust, and TypeScript.\nPlease read the introduction for\nmore specifics.\nWebsite\nManual\nInstall\nAPI Reference\nStyle Guide\nModule Repository\nReleases\nChat\nMore links\n\n"}, {"repo": "gohugoio/hugo", "language": "Go", "readme": "\n\nA Fast and Flexible Static Site Generator built with love by bep, spf13 and friends in Go.\nWebsite |\nForum |\nDocumentation |\nInstallation Guide |\nContribution Guide |\nTwitter\n\n\n\nOverview\nHugo is a static HTML and CSS website generator written in Go.\nIt is optimized for speed, ease of use, and configurability.\nHugo takes a directory with content and templates and renders them into a full HTML website.\nHugo relies on Markdown files with front matter for metadata, and you can run Hugo from any directory.\nThis works well for shared hosts and other systems where you don\u2019t have a privileged account.\nHugo renders a typical website of moderate size in a fraction of a second.\nA good rule of thumb is that each piece of content renders in around 1 millisecond.\nHugo is designed to work well for any kind of website including blogs, tumbles, and docs.\nSupported Architectures\nCurrently, we provide pre-built Hugo binaries for Windows, Linux, FreeBSD, NetBSD, DragonFly BSD, Open BSD, macOS (Darwin), and Android for x64, i386 and ARM architectures.\nHugo may also be compiled from source wherever the Go compiler tool chain can run, e.g. for other operating systems including Plan 9 and Solaris.\nComplete documentation is available at Hugo Documentation.\nChoose How to Install\nIf you want to use Hugo as your site generator, simply install the Hugo binaries.\nThe Hugo binaries have no external dependencies.\nTo contribute to the Hugo source code or documentation, you should fork the Hugo GitHub project and clone it to your local machine.\nFinally, you can install the Hugo source code with go, build the binaries yourself, and run Hugo that way.\nBuilding the binaries is an easy task for an experienced go getter.\nInstall Hugo as Your Site Generator (Binary Install)\nUse the installation instructions in the Hugo documentation.\nBuild and Install the Binaries from Source (Advanced Install)\nPrerequisite Tools\n\nGit\nGo (at least Go 1.11)\n\nFetch from GitHub\nSince Hugo 0.48, Hugo uses the Go Modules support built into Go 1.11 to build. The easiest is to clone Hugo in a directory outside of GOPATH, as in the following example:\nmkdir $HOME/src\ncd $HOME/src\ngit clone https://github.com/gohugoio/hugo.git\ncd hugo\ngo install\nIf you are a Windows user, substitute the $HOME environment variable above with %USERPROFILE%.\nThe Hugo Documentation\nThe Hugo documentation now lives in its own repository, see https://github.com/gohugoio/hugoDocs. But we do keep a version of that documentation as a git subtree in this repository. To build the sub folder /docs as a Hugo site, you need to clone this repo:\ngit clone git@github.com:gohugoio/hugo.git\nContributing to Hugo\nFor a complete guide to contributing to Hugo, see the Contribution Guide.\nWe welcome contributions to Hugo of any kind including documentation, themes,\norganization, tutorials, blog posts, bug reports, issues, feature requests,\nfeature implementations, pull requests, answering questions on the forum,\nhelping to manage issues, etc.\nThe Hugo community and maintainers are very active and helpful, and the project benefits greatly from this activity.\nAsking Support Questions\nWe have an active discussion forum where users and developers can ask questions.\nPlease don't use the GitHub issue tracker to ask questions.\nReporting Issues\nIf you believe you have found a defect in Hugo or its documentation, use\nthe GitHub issue tracker to report the problem to the Hugo maintainers.\nIf you're not sure if it's a bug or not, start by asking in the discussion forum.\nWhen reporting the issue, please provide the version of Hugo in use (hugo version).\nSubmitting Patches\nThe Hugo project welcomes all contributors and contributions regardless of skill or experience level.\nIf you are interested in helping with the project, we will help you with your contribution.\nHugo is a very active project with many contributions happening daily.\nWe want to create the best possible product for our users and the best contribution experience for our developers,\nwe have a set of guidelines which ensure that all contributions are acceptable.\nThe guidelines are not intended as a filter or barrier to participation.\nIf you are unfamiliar with the contribution process, the Hugo team will help you and teach you how to bring your contribution in accordance with the guidelines.\nFor a complete guide to contributing code to Hugo, see the Contribution Guide.\n\nDependencies\nHugo stands on the shoulder of many great open source libraries, in lexical order:\n\n\n\nDependency\nLicense\n\n\n\n\ngithub.com/BurntSushi/locker\nThe Unlicense\n\n\ngithub.com/BurntSushi/toml\nMIT License\n\n\ngithub.com/PuerkitoBio/purell\nBSD 3-Clause \"New\" or \"Revised\" License\n\n\ngithub.com/PuerkitoBio/urlesc\nBSD 3-Clause \"New\" or \"Revised\" License\n\n\ngithub.com/alecthomas/chroma\nMIT License\n\n\ngithub.com/bep/debounce\nMIT License\n\n\ngithub.com/bep/gitmap\nMIT License\n\n\ngithub.com/bep/go-tocss\nMIT License\n\n\ngithub.com/niklasfasching/go-org\nMIT License\n\n\ngithub.com/cpuguy83/go-md2man\nMIT License\n\n\ngithub.com/danwakefield/fnmatch\nBSD 2-Clause \"Simplified\" License\n\n\ngithub.com/disintegration/imaging\nMIT License\n\n\ngithub.com/dlclark/regexp2\nMIT License\n\n\ngithub.com/eknkc/amber\nMIT License\n\n\ngithub.com/fsnotify/fsnotify\nBSD 3-Clause \"New\" or \"Revised\" License\n\n\ngithub.com/gobwas/glob\nMIT License\n\n\ngithub.com/gorilla/websocket\nBSD 2-Clause \"Simplified\" License\n\n\ngithub.com/hashicorp/go-immutable-radix\nMozilla Public License 2.0\n\n\ngithub.com/hashicorp/golang-lru\nMozilla Public License 2.0\n\n\ngithub.com/hashicorp/hcl\nMozilla Public License 2.0\n\n\ngithub.com/jdkato/prose\nMIT License\n\n\ngithub.com/kyokomi/emoji\nMIT License\n\n\ngithub.com/magiconair/properties\nBSD 2-Clause \"Simplified\" License\n\n\ngithub.com/markbates/inflect\nMIT License\n\n\ngithub.com/mattn/go-isatty\nMIT License\n\n\ngithub.com/mattn/go-runewidth\nMIT License\n\n\ngithub.com/miekg/mmark\nSimplified BSD License\n\n\ngithub.com/mitchellh/hashstructure\nMIT License\n\n\ngithub.com/mitchellh/mapstructure\nMIT License\n\n\ngithub.com/muesli/smartcrop\nMIT License\n\n\ngithub.com/nicksnyder/go-i18n\nMIT License\n\n\ngithub.com/olekukonko/tablewriter\nMIT License\n\n\ngithub.com/pelletier/go-toml\nMIT License\n\n\ngithub.com/pkg/errors\nBSD 2-Clause \"Simplified\" License\n\n\ngithub.com/russross/blackfriday\nSimplified BSD License\n\n\ngithub.com/shurcooL/sanitized_anchor_name\nMIT License\n\n\ngithub.com/spf13/afero\nApache License 2.0\n\n\ngithub.com/spf13/cast\nMIT License\n\n\ngithub.com/spf13/cobra\nApache License 2.0\n\n\ngithub.com/spf13/fsync\nMIT License\n\n\ngithub.com/spf13/jwalterweatherman\nMIT License\n\n\ngithub.com/spf13/nitro\nApache License 2.0\n\n\ngithub.com/spf13/pflag\nBSD 3-Clause \"New\" or \"Revised\" License\n\n\ngithub.com/spf13/viper\nMIT License\n\n\ngithub.com/tdewolff/minify\nMIT License\n\n\ngithub.com/tdewolff/parse\nMIT License\n\n\ngithub.com/wellington/go-libsass\nApache License 2.0\n\n\ngithub.com/yosssi/ace\nMIT License\n\n\ngolang.org/x/image\nBSD 3-Clause \"New\" or \"Revised\" License\n\n\ngolang.org/x/net\nBSD 3-Clause \"New\" or \"Revised\" License\n\n\ngolang.org/x/sync\nBSD 3-Clause \"New\" or \"Revised\" License\n\n\ngolang.org/x/sys\nBSD 3-Clause \"New\" or \"Revised\" License\n\n\ngolang.org/x/text\nBSD 3-Clause \"New\" or \"Revised\" License\n\n\ngopkg.in/yaml.v2\nApache License 2.0\n\n\n\n\n"}, {"repo": "ionic-team/ionic", "language": "TypeScript", "readme": "\nIonic\nIonic is the open-source mobile app development framework that makes it easy to\nbuild top quality native and progressive web apps with web technologies.\nIonic is based on Web Components and comes with many significant performance, usability, and feature improvements over the past versions.\nPackages\n\n\n\nProject\nPackage\nVersion\nLinks\n\n\n\n\nCore\n@ionic/core\n\nREADME.md\n\n\nAngular\n@ionic/angular\n\nREADME.md\n\n\nVue\n@ionic/vue\n\nREADME.md\n\n\nReact\n@ionic/react\n\nREADME.md\n\n\n\nLooking for the ionic-angular package? Ionic 3 has been moved to the ionic-v3 repo. See Earlier Versions.\nGetting Started\nStart a new project by following our quick Getting Started guide.\nWe would love to hear from you! If you have any feedback or run into issues using our framework, please file\nan issue on this repository.\nContributing\nThanks for your interest in contributing! Read up on our guidelines for\ncontributing\nand then look through our issues with a help wanted\nlabel.\nExamples\nThe Ionic Conference App is a full featured Ionic app.\nIt is the perfect starting point for learning and building your own app.\nFuture Goals\nAs Ionic components migrate to the web component standard, a goal of ours is to have Ionic components easily work within all of the popular frameworks.\nEarlier Versions\nThe source code for earlier versions of the Ionic Framework may exist in other repositories. Please open issues and pull requests in their respective repositories.\n\nIonic 2/3: Moved to ionic-team/ionic-v3\nIonic 1: Moved to ionic-team/ionic-v1\n\n\n"}, {"repo": "google/material-design-icons", "language": "CSS", "readme": "\nMaterial design icons\nMaterial design icons is the official icon set from Google.  The icons are designed under the material design guidelines.\n3.0.1 Update\n\nChanged license in package.json.\nAdded missing device symbol sprites.\n\n3.0.0 Update\nLicense change to Apache 2.0!\nGetting Started\nRead the developer guide on how to use the material design icons in your project.\nUsing a font collection\nThe iconfont folder contains pre-generated font files that can be included in a project. This is especially convenient for the web; however, it is generally better to link to the web font hosted on Google Fonts:\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\nRead more in the font portion of our full developer guide.\nUsing symbols and sprites\nThe css-sprite and svg-sprite folders contain pre-generated sprite sheets, as well as svg symbols that can be <use>d more directly and with fewer constraints. Instructions for using them are in the sprites documentation.\nPolymer icons\nIf you wish to use the icon set with Polymer, we recommend consuming them via the <iron-icons> element (<core-icons> in v0.5).\nLicense\nWe have made these icons available for you to incorporate into your products under the Apache License Version 2.0. Feel free to remix and re-share these icons and documentation in your products.\nWe'd love attribution in your app's about screen, but it's not required. The only thing we ask is that you not re-sell these icons.\n\n"}, {"repo": "jekyll/jekyll", "language": "Ruby", "readme": "\nJekyll\n\n\n\n\n\n\n\n\nJekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind GitHub Pages, which you can use to host sites right from your GitHub repositories.\nPhilosophy\nJekyll does what you tell it to do\u00a0\u2014 no more, no less. It doesn't try to outsmart users by making bold assumptions, nor does it burden them with needless complexity and configuration. Put simply, Jekyll gets out of your way and allows you to concentrate on what truly matters: your content.\nSee: https://jekyllrb.com/philosophy\nGetting Started\n\nInstall the gem\nRead up about its Usage and Configuration\nTake a gander at some existing Sites\nFork and Contribute your own modifications\nHave questions? Check out our official forum community Jekyll Talk or #jekyll on irc.freenode.net\n\nDiving In\n\nMigrate from your previous system\nLearn how Front Matter works\nPut information on your site with Variables\nCustomize the Permalinks your posts are generated with\nUse the built-in Liquid Extensions to make your life easier\nUse custom Plugins to generate content specific to your site\nWatch video tutorials from Giraffe Academy\n\nNeed help?\nIf you don't find the answer to your problem in our docs, or in the troubleshooting section, ask the community for help.\nCode of Conduct\nIn order to have a more open and welcoming community, Jekyll adheres to a\ncode of conduct adapted from the Ruby on Rails code of\nconduct.\nPlease adhere to this code of conduct in any interactions you have in the\nJekyll community. It is strictly enforced on all official Jekyll\nrepositories, websites, and resources. If you encounter someone violating\nthese terms, please let one of our core team members know and we will address it as soon as possible.\nCredits\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up in this README with a link to your website. Become a sponsor!\n\n\n\n\n\n\n\n\n\n\nContributors\nThis project exists thanks to all the people who contribute.\n\nBackers\nThank you to all our backers! \ud83d\ude4f Become a backer\n\nLicense\nSee the LICENSE file.\n\n"}, {"repo": "xingshaocheng/architect-awesome", "language": "None", "readme": "\n\u300a\u540e\u7aef\u67b6\u6784\u5e08\u6280\u672f\u56fe\u8c31\u300b\n\u63a8\u8350: \u300aJava\u6280\u672f\u4e66\u7c4d\u5927\u5168\u300b - awesome-java-books\n\u4ece\u521d\u7ea7\u5f00\u53d1\u8005\u5230\u8d44\u6df1\u67b6\u6784\u5e08\uff0c\u770b\u8fd9\u4e9b\u4e66\u5c31\u591f\u4e86\n\n\n\n\n\n\n\n\u6570\u636e\u7ed3\u6784\n\n\u961f\u5217\n\u96c6\u5408\n\u94fe\u8868\u3001\u6570\u7ec4\n\u5b57\u5178\u3001\u5173\u8054\u6570\u7ec4\n\u6808\n\u6811\n\n\u4e8c\u53c9\u6811\n\u5b8c\u5168\u4e8c\u53c9\u6811\n\u5e73\u8861\u4e8c\u53c9\u6811\n\u4e8c\u53c9\u67e5\u627e\u6811\uff08BST\uff09\n\u7ea2\u9ed1\u6811\nB\uff0cB+\uff0cB*\u6811\nLSM \u6811\n\n\nBitSet\n\n\n\u5e38\u7528\u7b97\u6cd5\n\n\u6392\u5e8f\u3001\u67e5\u627e\u7b97\u6cd5\n\n\u9009\u62e9\u6392\u5e8f\n\u5192\u6ce1\u6392\u5e8f\n\u63d2\u5165\u6392\u5e8f\n\u5feb\u901f\u6392\u5e8f\n\u5f52\u5e76\u6392\u5e8f\n\u5e0c\u5c14\u6392\u5e8f\n\u5806\u6392\u5e8f\n\u8ba1\u6570\u6392\u5e8f\n\u6876\u6392\u5e8f\n\u57fa\u6570\u6392\u5e8f\n\u4e8c\u5206\u67e5\u627e\nJava \u4e2d\u7684\u6392\u5e8f\u5de5\u5177\n\n\n\u5e03\u9686\u8fc7\u6ee4\u5668\n\u5b57\u7b26\u4e32\u6bd4\u8f83\n\nKMP \u7b97\u6cd5\n\n\n\u6df1\u5ea6\u4f18\u5148\u3001\u5e7f\u5ea6\u4f18\u5148\n\u8d2a\u5fc3\u7b97\u6cd5\n\u56de\u6eaf\u7b97\u6cd5\n\u526a\u679d\u7b97\u6cd5\n\u52a8\u6001\u89c4\u5212\n\u6734\u7d20\u8d1d\u53f6\u65af\n\u63a8\u8350\u7b97\u6cd5\n\u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5\n\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\n\n\n\u5e76\u53d1\n\nJava \u5e76\u53d1\n\u591a\u7ebf\u7a0b\n\u7ebf\u7a0b\u5b89\u5168\n\u4e00\u81f4\u6027\u3001\u4e8b\u52a1\n\n\u4e8b\u52a1 ACID \u7279\u6027\n\u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b\nMVCC\n\n\n\u9501\n\nJava\u4e2d\u7684\u9501\u548c\u540c\u6b65\u7c7b\n\u516c\u5e73\u9501 & \u975e\u516c\u5e73\u9501\n\u60b2\u89c2\u9501\n\u4e50\u89c2\u9501 & CAS\nABA \u95ee\u9898\nCopyOnWrite\u5bb9\u5668\nRingBuffer\n\u53ef\u91cd\u5165\u9501 & \u4e0d\u53ef\u91cd\u5165\u9501\n\u4e92\u65a5\u9501 & \u5171\u4eab\u9501\n\u6b7b\u9501\n\n\n\n\n\u64cd\u4f5c\u7cfb\u7edf\n\n\u8ba1\u7b97\u673a\u539f\u7406\nCPU\n\n\u591a\u7ea7\u7f13\u5b58\n\n\n\u8fdb\u7a0b\n\u7ebf\u7a0b\n\u534f\u7a0b\nLinux\n\n\n\u8bbe\u8ba1\u6a21\u5f0f\n\n\u8bbe\u8ba1\u6a21\u5f0f\u7684\u516d\u5927\u539f\u5219\n23\u79cd\u5e38\u89c1\u8bbe\u8ba1\u6a21\u5f0f\n\u5e94\u7528\u573a\u666f\n\u5355\u4f8b\u6a21\u5f0f\n\u8d23\u4efb\u94fe\u6a21\u5f0f\nMVC\nIOC\nAOP\nUML\n\u5fae\u670d\u52a1\u601d\u60f3\n\n\u5eb7\u5a01\u5b9a\u5f8b\n\n\n\n\n\u8fd0\u7ef4 & \u7edf\u8ba1 & \u6280\u672f\u652f\u6301\n\n\u5e38\u89c4\u76d1\u63a7\nAPM\n\u7edf\u8ba1\u5206\u6790\n\u6301\u7eed\u96c6\u6210(CI/CD)\n\nJenkins\n\u73af\u5883\u5206\u79bb\n\n\n\u81ea\u52a8\u5316\u8fd0\u7ef4\n\nAnsible\npuppet\nchef\n\n\n\u6d4b\u8bd5\n\nTDD \u7406\u8bba\n\u5355\u5143\u6d4b\u8bd5\n\u538b\u529b\u6d4b\u8bd5\n\u5168\u94fe\u8def\u538b\u6d4b\nA/B \u3001\u7070\u5ea6\u3001\u84dd\u7eff\u6d4b\u8bd5\n\n\n\u865a\u62df\u5316\n\nKVM\nXen\nOpenVZ\n\n\n\u5bb9\u5668\u6280\u672f\n\nDocker\n\n\n\u4e91\u6280\u672f\n\nOpenStack\n\n\nDevOps\n\u6587\u6863\u7ba1\u7406\n\n\n\u4e2d\u95f4\u4ef6\n\nWeb Server\n\nNginx\nOpenResty\nTengine\nApache Httpd\nTomcat\n\n\u67b6\u6784\u539f\u7406\n\u8c03\u4f18\u65b9\u6848\n\n\nJetty\n\n\n\u7f13\u5b58\n\n\u672c\u5730\u7f13\u5b58\n\n\n\u5ba2\u6237\u7aef\u7f13\u5b58\n\u670d\u52a1\u7aef\u7f13\u5b58\n\nWeb\u7f13\u5b58\nMemcached\nRedis\n\n\u67b6\u6784\n\u56de\u6536\u7b56\u7565\n\n\nTair\n\n\n\u6d88\u606f\u961f\u5217\n\n\u6d88\u606f\u603b\u7ebf\n\u6d88\u606f\u7684\u987a\u5e8f\nRabbitMQ\nRocketMQ\nActiveMQ\nKafka\nRedis \u6d88\u606f\u63a8\u9001\nZeroMQ\n\n\n\u5b9a\u65f6\u8c03\u5ea6\n\n\u5355\u673a\u5b9a\u65f6\u8c03\u5ea6\n\u5206\u5e03\u5f0f\u5b9a\u65f6\u8c03\u5ea6\n\n\nRPC\n\nDubbo\nThrift\ngRPC\n\n\n\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6\n\nSharding Jdbc\n\n\n\u65e5\u5fd7\u7cfb\u7edf\n\n\u65e5\u5fd7\u641c\u96c6\n\n\n\u914d\u7f6e\u4e2d\u5fc3\nAPI \u7f51\u5173\n\n\n\u7f51\u7edc\n\n\u534f\u8bae\n\nOSI \u4e03\u5c42\u534f\u8bae\nTCP/IP\nHTTP\nHTTP2.0\nHTTPS\n\n\n\u7f51\u7edc\u6a21\u578b\n\nEpoll\nJava NIO\nkqueue\n\n\n\u8fde\u63a5\u548c\u77ed\u8fde\u63a5\n\u6846\u67b6\n\u96f6\u62f7\u8d1d\uff08Zero-copy\uff09\n\u5e8f\u5217\u5316(\u4e8c\u8fdb\u5236\u534f\u8bae)\n\nHessian\nProtobuf\n\n\n\n\n\u6570\u636e\u5e93\n\n\u57fa\u7840\u7406\u8bba\n\n\u5173\u7cfb\u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u4e09\u5927\u8303\u5f0f\n\n\nMySQL\n\n\u539f\u7406\nInnoDB\n\u4f18\u5316\n\u7d22\u5f15\n\n\u805a\u96c6\u7d22\u5f15, \u975e\u805a\u96c6\u7d22\u5f15\n\u590d\u5408\u7d22\u5f15\n\u81ea\u9002\u5e94\u54c8\u5e0c\u7d22\u5f15(AHI)\n\n\nexplain\n\n\nNoSQL\n\nMongoDB\nHbase\n\n\n\n\n\u641c\u7d22\u5f15\u64ce\n\n\u641c\u7d22\u5f15\u64ce\u539f\u7406\nLucene\nElasticsearch\nSolr\nsphinx\n\n\n\u6027\u80fd\n\n\u6027\u80fd\u4f18\u5316\u65b9\u6cd5\u8bba\n\u5bb9\u91cf\u8bc4\u4f30\nCDN \u7f51\u7edc\n\u8fde\u63a5\u6c60\n\u6027\u80fd\u8c03\u4f18\n\n\n\u5927\u6570\u636e\n\n\u6d41\u5f0f\u8ba1\u7b97\n\nStorm\nFlink\nKafka Stream\n\u5e94\u7528\u573a\u666f\n\n\nHadoop\n\nHDFS\nMapReduce\nYarn\n\n\nSpark\n\n\n\u5b89\u5168\n\nweb \u5b89\u5168\n\nXSS\nCSRF\nSQL \u6ce8\u5165\nHash Dos\n\u811a\u672c\u6ce8\u5165\n\u6f0f\u6d1e\u626b\u63cf\u5de5\u5177\n\u9a8c\u8bc1\u7801\n\n\nDDoS \u9632\u8303\n\u7528\u6237\u9690\u79c1\u4fe1\u606f\u4fdd\u62a4\n\u5e8f\u5217\u5316\u6f0f\u6d1e\n\u52a0\u5bc6\u89e3\u5bc6\n\n\u5bf9\u79f0\u52a0\u5bc6\n\u54c8\u5e0c\u7b97\u6cd5\n\u975e\u5bf9\u79f0\u52a0\u5bc6\n\n\n\u670d\u52a1\u5668\u5b89\u5168\n\u6570\u636e\u5b89\u5168\n\n\u6570\u636e\u5907\u4efd\n\n\n\u7f51\u7edc\u9694\u79bb\n\n\u5185\u5916\u7f51\u5206\u79bb\n\u767b\u5f55\u8df3\u677f\u673a\n\n\n\u6388\u6743\u3001\u8ba4\u8bc1\n\nRBAC\nOAuth2.0\n\u53cc\u56e0\u7d20\u8ba4\u8bc1\uff082FA\uff09\n\u5355\u70b9\u767b\u5f55(SSO)\n\n\n\n\n\u5e38\u7528\u5f00\u6e90\u6846\u67b6\n\n\u5f00\u6e90\u534f\u8bae\n\u65e5\u5fd7\u6846\u67b6\n\nLog4j\u3001Log4j2\nLogback\n\n\nORM\n\u7f51\u7edc\u6846\u67b6\nWeb \u6846\u67b6\n\nSpring \u5bb6\u65cf\n\n\n\u5de5\u5177\u6846\u67b6\n\n\n\u5206\u5e03\u5f0f\u8bbe\u8ba1\n\n\u6269\u5c55\u6027\u8bbe\u8ba1\n\u7a33\u5b9a\u6027 & \u9ad8\u53ef\u7528\n\n\u786c\u4ef6\u8d1f\u8f7d\u5747\u8861\n\u8f6f\u4ef6\u8d1f\u8f7d\u5747\u8861\n\u9650\u6d41\n\u5e94\u7528\u5c42\u5bb9\u707e\n\u8de8\u673a\u623f\u5bb9\u707e\n\u5bb9\u707e\u6f14\u7ec3\u6d41\u7a0b\n\u5e73\u6ed1\u542f\u52a8\n\n\n\u6570\u636e\u5e93\u6269\u5c55\n\n\u8bfb\u5199\u5206\u79bb\u6a21\u5f0f\n\u5206\u7247\u6a21\u5f0f\n\n\n\u670d\u52a1\u6cbb\u7406\n\n\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\n\u670d\u52a1\u8def\u7531\u63a7\u5236\n\n\n\u5206\u5e03\u5f0f\u4e00\u81f4\n\nCAP \u4e0e BASE \u7406\u8bba\n\u5206\u5e03\u5f0f\u9501\n\u5206\u5e03\u5f0f\u4e00\u81f4\u6027\u7b97\u6cd5\n\nPAXOS\nZab\nRaft\nGossip\n\u4e24\u9636\u6bb5\u63d0\u4ea4\u3001\u591a\u9636\u6bb5\u63d0\u4ea4\n\n\n\u5e42\u7b49\n\u5206\u5e03\u5f0f\u4e00\u81f4\u65b9\u6848\n\u5206\u5e03\u5f0f Leader \u8282\u70b9\u9009\u4e3e\nTCC(Try/Confirm/Cancel) \u67d4\u6027\u4e8b\u52a1\n\n\n\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\n\u552f\u4e00ID \u751f\u6210\n\n\u5168\u5c40\u552f\u4e00ID\n\n\n\u4e00\u81f4\u6027Hash\u7b97\u6cd5\n\n\n\u8bbe\u8ba1\u601d\u60f3 & \u5f00\u53d1\u6a21\u5f0f\n\nDDD(Domain-driven Design - \u9886\u57df\u9a71\u52a8\u8bbe\u8ba1)\n\n\u547d\u4ee4\u67e5\u8be2\u804c\u8d23\u5206\u79bb(CQRS)\n\u8d2b\u8840\uff0c\u5145\u8840\u6a21\u578b\n\n\nActor \u6a21\u5f0f\n\u54cd\u5e94\u5f0f\u7f16\u7a0b\n\nReactor\nRxJava\nVert.x\n\n\nDODAF2.0\nServerless\nService Mesh\n\n\n\u9879\u76ee\u7ba1\u7406\n\n\u67b6\u6784\u8bc4\u5ba1\n\u91cd\u6784\n\u4ee3\u7801\u89c4\u8303\n\u4ee3\u7801 Review\nRUP\n\u770b\u677f\u7ba1\u7406\nSCRUM\n\u654f\u6377\u5f00\u53d1\n\u6781\u9650\u7f16\u7a0b\uff08XP\uff09\n\u7ed3\u5bf9\u7f16\u7a0b\nPDCA \u5faa\u73af\u8d28\u91cf\u7ba1\u7406\nFMEA\u7ba1\u7406\u6a21\u5f0f\n\n\n\u901a\u7528\u4e1a\u52a1\u672f\u8bed\n\u6280\u672f\u8d8b\u52bf\n\u653f\u7b56\u3001\u6cd5\u89c4\n\n\u6cd5\u5f8b\n\n\u4e25\u683c\u9075\u5b88\u5211\u6cd5253\u6cd5\u6761\n\n\n\n\n\u67b6\u6784\u5e08\u7d20\u8d28\n\u56e2\u961f\u7ba1\u7406\n\n\u62db\u8058\n\n\n\u8d44\u8baf\n\n\u884c\u4e1a\u8d44\u8baf\n\u516c\u4f17\u53f7\u5217\u8868\n\u535a\u5ba2\n\n\u56e2\u961f\u535a\u5ba2\n\u4e2a\u4eba\u535a\u5ba2\n\n\n\u7efc\u5408\u95e8\u6237\u3001\u793e\u533a\n\u95ee\u7b54\u3001\u8ba8\u8bba\u7c7b\u793e\u533a\n\u884c\u4e1a\u6570\u636e\u5206\u6790\n\u4e13\u9879\u7f51\u7ad9\n\u5176\u4ed6\u7c7b\n\u63a8\u8350\u53c2\u8003\u4e66\n\n\u5728\u7ebf\u7535\u5b50\u4e66\n\u7eb8\u8d28\u4e66\n\n\u5f00\u53d1\u65b9\u9762\n\u67b6\u6784\u65b9\u9762\n\u6280\u672f\u7ba1\u7406\u65b9\u9762\n\u57fa\u7840\u7406\u8bba\n\u5de5\u5177\u65b9\u9762\n\u5927\u6570\u636e\u65b9\u9762\n\n\n\n\n\n\n\u6280\u672f\u8d44\u6e90\n\n\u5f00\u6e90\u8d44\u6e90\n\u624b\u518c\u3001\u6587\u6863\u3001\u6559\u7a0b\n\u5728\u7ebf\u8bfe\u5802\n\u4f1a\u8bae\u3001\u6d3b\u52a8\n\u5e38\u7528APP\n\u627e\u5de5\u4f5c\n\u5de5\u5177\n\u4ee3\u7801\u6258\u7ba1\n\u6587\u4ef6\u670d\u52a1\n\u7efc\u5408\u4e91\u670d\u52a1\u5546\n\nVPS\n\n\n\n\n\n\uff08Toc generated by simple-php-github-toc \uff09\n\u6570\u636e\u7ed3\u6784\n\u961f\u5217\n\n\n\u300ajava\u961f\u5217\u2014\u2014queue\u8be6\u7ec6\u5206\u6790\u300b\n\n\u975e\u963b\u585e\u961f\u5217\uff1aConcurrentLinkedQueue(\u65e0\u754c\u7ebf\u7a0b\u5b89\u5168)\uff0c\u91c7\u7528CAS\u673a\u5236\uff08compareAndSwapObject\u539f\u5b50\u64cd\u4f5c\uff09\u3002\n\u963b\u585e\u961f\u5217\uff1aArrayBlockingQueue(\u6709\u754c)\u3001LinkedBlockingQueue\uff08\u65e0\u754c\uff09\u3001DelayQueue\u3001PriorityBlockingQueue\uff0c\u91c7\u7528\u9501\u673a\u5236\uff1b\u4f7f\u7528 ReentrantLock \u9501\u3002\n\n\n\n\u300aLinkedList\u3001ConcurrentLinkedQueue\u3001LinkedBlockingQueue\u5bf9\u6bd4\u5206\u6790\u300b\n\n\n\u96c6\u5408\n\n\u300aJava Set\u96c6\u5408\u7684\u8be6\u89e3\u300b\n\n\u94fe\u8868\u3001\u6570\u7ec4\n\n\u300aJava\u96c6\u5408\u8be6\u89e3--\u4ec0\u4e48\u662fList\u300b\n\n\u5b57\u5178\u3001\u5173\u8054\u6570\u7ec4\n\n\u300aJava map \u8be6\u89e3 - \u7528\u6cd5\u3001\u904d\u5386\u3001\u6392\u5e8f\u3001\u5e38\u7528API\u7b49\u300b\n\n\u6808\n\n\u300ajava\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u4e4b\u6808\uff08Stack\uff09\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u300b\n\u300aJava Stack \u7c7b\u300b\n\u300ajava stack\u7684\u8be6\u7ec6\u5b9e\u73b0\u5206\u6790\u300b\n\nStack \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\n\u5185\u90e8\u4f7f\u7528\u6570\u7ec4\u4fdd\u5b58\u6570\u636e\uff0c\u4e0d\u591f\u65f6\u7ffb\u500d\u3002\n\n\n\n\u6811\n\u4e8c\u53c9\u6811\n\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u6709\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u3002\n\n\u300a\u4e8c\u53c9\u6811\u300b\n\n\u5b8c\u5168\u4e8c\u53c9\u6811\n\n\u300a\u5b8c\u5168\u4e8c\u53c9\u6811\u300b\n\n\u53f6\u8282\u70b9\u53ea\u80fd\u51fa\u73b0\u5728\u6700\u4e0b\u5c42\u548c\u6b21\u4e0b\u5c42\uff0c\u5e76\u4e14\u6700\u4e0b\u9762\u4e00\u5c42\u7684\u7ed3\u70b9\u90fd\u96c6\u4e2d\u5728\u8be5\u5c42\u6700\u5de6\u8fb9\u7684\u82e5\u5e72\u4f4d\u7f6e\u7684\u4e8c\u53c9\u6811\u3002\n\n\n\n\u5e73\u8861\u4e8c\u53c9\u6811\n\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc71\uff0c\u5e76\u4e14\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u90fd\u662f\u4e00\u68f5\u5e73\u8861\u4e8c\u53c9\u6811\u3002\n\n\u300a\u6d45\u8c08\u6570\u636e\u7ed3\u6784-\u5e73\u8861\u4e8c\u53c9\u6811\u300b\n\u300a\u6d45\u8c08\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784: \u516b \u5e73\u8861\u67e5\u627e\u6811\u4e4b2-3\u6811\u300b\n\n\u4e8c\u53c9\u67e5\u627e\u6811\uff08BST\uff09\n\u4e8c\u53c9\u67e5\u627e\u6811\uff08Binary Search Tree\uff09\uff0c\u4e5f\u79f0\u6709\u5e8f\u4e8c\u53c9\u6811\uff08ordered binary tree\uff09,\u6392\u5e8f\u4e8c\u53c9\u6811\uff08sorted binary tree\uff09\u3002\n\n\u300a\u6d45\u8c08\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784: \u4e03 \u4e8c\u53c9\u67e5\u627e\u6811\u300b\n\n\u7ea2\u9ed1\u6811\n\n\u300a\u6700\u5bb9\u6613\u61c2\u5f97\u7ea2\u9ed1\u6811\u300b\n\n\u6dfb\u52a0\u9636\u6bb5\u540e\uff0c\u5de6\u65cb\u6216\u8005\u53f3\u65cb\u4ece\u800c\u518d\u6b21\u8fbe\u5230\u5e73\u8861\u3002\n\n\n\u300a\u6d45\u8c08\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784: \u4e5d \u5e73\u8861\u67e5\u627e\u6811\u4e4b\u7ea2\u9ed1\u6811\u300b\n\nB\uff0cB+\uff0cB*\u6811\nMySQL\u662f\u57fa\u4e8eB+\u6811\u805a\u96c6\u7d22\u5f15\u7ec4\u7ec7\u8868\n\n\u300aB-\u6811\uff0cB+\u6811\uff0cB*\u6811\u8be6\u89e3\u300b\n\u300aB-\u6811\uff0cB+\u6811\u4e0eB*\u6811\u7684\u4f18\u7f3a\u70b9\u6bd4\u8f83\u300b\n\nB+\u6811\u7684\u53f6\u5b50\u8282\u70b9\u94fe\u8868\u7ed3\u6784\u76f8\u6bd4\u4e8e B-\u6811\u4fbf\u4e8e\u626b\u5e93\uff0c\u548c\u8303\u56f4\u68c0\u7d22\u3002\n\n\n\nLSM \u6811\nLSM\uff08Log-Structured Merge-Trees\uff09\u548c B+ \u6811\u76f8\u6bd4\uff0c\u662f\u727a\u7272\u4e86\u90e8\u5206\u8bfb\u7684\u6027\u80fd\u6765\u6362\u53d6\u5199\u7684\u6027\u80fd(\u901a\u8fc7\u6279\u91cf\u5199\u5165)\uff0c\u5b9e\u73b0\u8bfb\u5199\u4e4b\u95f4\u7684\u5e73\u8861\u3002\nHbase\u3001LevelDB\u3001Tair\uff08Long DB\uff09\u3001nessDB \u91c7\u7528 LSM \u6811\u7684\u7ed3\u6784\u3002LSM\u53ef\u4ee5\u5feb\u901f\u5efa\u7acb\u7d22\u5f15\u3002\n\n\n\u300aLSM\u6811 VS B+\u6811\u300b\n\nB+ \u6811\u8bfb\u6027\u80fd\u597d\uff0c\u4f46\u7531\u4e8e\u9700\u8981\u6709\u5e8f\u7ed3\u6784\uff0c\u5f53key\u6bd4\u8f83\u5206\u6563\u65f6\uff0c\u78c1\u76d8\u5bfb\u9053\u9891\u7e41\uff0c\u9020\u6210\u5199\u6027\u80fd\u8f83\u5dee\u3002\nLSM \u662f\u5c06\u4e00\u4e2a\u5927\u6811\u62c6\u5206\u6210N\u68f5\u5c0f\u6811\uff0c\u5148\u5199\u5230\u5185\u5b58\uff08\u65e0\u5bfb\u9053\u95ee\u9898\uff0c\u6027\u80fd\u9ad8\uff09\uff0c\u5728\u5185\u5b58\u4e2d\u6784\u5efa\u4e00\u9897\u6709\u5e8f\u5c0f\u6811\uff08\u6709\u5e8f\u6811\uff09\uff0c\u968f\u7740\u5c0f\u6811\u8d8a\u6765\u8d8a\u5927\uff0c\u5185\u5b58\u7684\u5c0f\u6811\u4f1aflush\u5230\u78c1\u76d8\u4e0a\u3002\u5f53\u8bfb\u65f6\uff0c\u7531\u4e8e\u4e0d\u77e5\u9053\u6570\u636e\u5728\u54ea\u68f5\u5c0f\u6811\u4e0a\uff0c\u56e0\u6b64\u5fc5\u987b\u904d\u5386\uff08\u4e8c\u5206\u67e5\u627e\uff09\u6240\u6709\u7684\u5c0f\u6811\uff0c\u4f46\u5728\u6bcf\u9897\u5c0f\u6811\u5185\u90e8\u6570\u636e\u662f\u6709\u5e8f\u7684\u3002\n\n\n\n\u300aLSM\u6811\uff08Log-Structured Merge Tree\uff09\u5b58\u50a8\u5f15\u64ce\u300b\n\n\u6781\u7aef\u7684\u8bf4\uff0c\u57fa\u4e8eLSM\u6811\u5b9e\u73b0\u7684HBase\u7684\u5199\u6027\u80fd\u6bd4MySQL\u9ad8\u4e86\u4e00\u4e2a\u6570\u91cf\u7ea7\uff0c\u8bfb\u6027\u80fd\u4f4e\u4e86\u4e00\u4e2a\u6570\u91cf\u7ea7\u3002\n\u4f18\u5316\u65b9\u5f0f\uff1aBloom filter \u66ff\u4ee3\u4e8c\u5206\u67e5\u627e\uff1bcompact \u5c0f\u6570\u4f4d\u5927\u6811\uff0c\u63d0\u9ad8\u67e5\u8be2\u6027\u80fd\u3002\nHbase \u4e2d\uff0c\u5185\u5b58\u4e2d\u8fbe\u5230\u4e00\u5b9a\u9608\u503c\u540e\uff0c\u6574\u4f53flush\u5230\u78c1\u76d8\u4e0a\u3001\u5f62\u6210\u4e00\u4e2a\u6587\u4ef6\uff08B+\u6570\uff09\uff0cHDFS\u4e0d\u652f\u6301update\u64cd\u4f5c\uff0c\u6240\u4ee5Hbase\u505a\u6574\u4f53flush\u800c\u4e0d\u662fmerge update\u3002flush\u5230\u78c1\u76d8\u4e0a\u7684\u5c0f\u6811\uff0c\u5b9a\u671f\u4f1a\u5408\u5e76\u6210\u4e00\u4e2a\u5927\u6811\u3002\n\n\n\nBitSet\n\u7ecf\u5e38\u7528\u4e8e\u5927\u89c4\u6a21\u6570\u636e\u7684\u6392\u91cd\u68c0\u67e5\u3002\n\n\u300aJava Bitset\u7c7b\u300b\n\u300aJava BitSet\uff08\u4f4d\u96c6\uff09\u300b\n\n\u5e38\u7528\u7b97\u6cd5\n\n\u300a\u5e38\u89c1\u6392\u5e8f\u7b97\u6cd5\u53ca\u5bf9\u5e94\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u300b\n\n\u6392\u5e8f\u3001\u67e5\u627e\u7b97\u6cd5\n\n\u300a\u5e38\u89c1\u6392\u5e8f\u7b97\u6cd5\u53ca\u5bf9\u5e94\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u300b\n\n\u9009\u62e9\u6392\u5e8f\n\n\u300aJava\u4e2d\u7684\u7ecf\u5178\u7b97\u6cd5\u4e4b\u9009\u62e9\u6392\u5e8f\uff08SelectionSort\uff09\u300b\n\n\u6bcf\u4e00\u8d9f\u4ece\u5f85\u6392\u5e8f\u7684\u8bb0\u5f55\u4e2d\u9009\u51fa\u6700\u5c0f\u7684\u5143\u7d20\uff0c\u987a\u5e8f\u653e\u5728\u5df2\u6392\u597d\u5e8f\u7684\u5e8f\u5217\u6700\u540e\uff0c\u76f4\u5230\u5168\u90e8\u8bb0\u5f55\u6392\u5e8f\u5b8c\u6bd5\u3002\n\n\n\n\u5192\u6ce1\u6392\u5e8f\n\n\u300a\u5192\u6ce1\u6392\u5e8f\u76842\u79cd\u5199\u6cd5\u300b\n\n\u76f8\u90bb\u5143\u7d20\u524d\u540e\u4ea4\u6362\u3001\u628a\u6700\u5927\u7684\u6392\u5230\u6700\u540e\u3002\n\u65f6\u95f4\u590d\u6742\u5ea6 O(n\u00b2)\n\n\n\n\u63d2\u5165\u6392\u5e8f\n\n\u300a\u6392\u5e8f\u7b97\u6cd5\u603b\u7ed3\u4e4b\u63d2\u5165\u6392\u5e8f\u300b\n\n\u5feb\u901f\u6392\u5e8f\n\n\u300a\u5750\u5728\u9a6c\u6876\u4e0a\u770b\u7b97\u6cd5\uff1a\u5feb\u901f\u6392\u5e8f\u300b\n\n\u4e00\u4fa7\u6bd4\u53e6\u5916\u4e00\u4fa7\u90fd\u5927\u6216\u5c0f\u3002\n\n\n\n\u5f52\u5e76\u6392\u5e8f\n\n\u300a\u56fe\u89e3\u6392\u5e8f\u7b97\u6cd5(\u56db)\u4e4b\u5f52\u5e76\u6392\u5e8f\u300b\n\n\u5206\u800c\u6cbb\u4e4b\uff0c\u5206\u6210\u5c0f\u4efd\u6392\u5e8f\uff0c\u5728\u5408\u5e76(\u91cd\u5efa\u4e00\u4e2a\u65b0\u7a7a\u95f4\u8fdb\u884c\u590d\u5236)\u3002\n\n\n\n\u5e0c\u5c14\u6392\u5e8f\nTODO\n\u5806\u6392\u5e8f\n\n\u300a\u56fe\u89e3\u6392\u5e8f\u7b97\u6cd5(\u4e09)\u4e4b\u5806\u6392\u5e8f\u300b\n\n\u6392\u5e8f\u8fc7\u7a0b\u5c31\u662f\u6784\u5efa\u6700\u5927\u5806\u7684\u8fc7\u7a0b\uff0c\u6700\u5927\u5806\uff1a\u6bcf\u4e2a\u7ed3\u70b9\u7684\u503c\u90fd\u5927\u4e8e\u6216\u7b49\u4e8e\u5176\u5de6\u53f3\u5b69\u5b50\u7ed3\u70b9\u7684\u503c\uff0c\u5806\u9876\u5143\u7d20\u662f\u6700\u5927\u503c\u3002\n\n\n\n\u8ba1\u6570\u6392\u5e8f\n\n\u300a\u8ba1\u6570\u6392\u5e8f\u548c\u6876\u6392\u5e8f\u300b\n\n\u548c\u6876\u6392\u5e8f\u8fc7\u7a0b\u6bd4\u8f83\u50cf\uff0c\u5dee\u522b\u5728\u4e8e\u6876\u7684\u6570\u91cf\u3002\n\n\n\n\u6876\u6392\u5e8f\n\n\u300a\u3010\u554a\u54c8\uff01\u7b97\u6cd5\u3011\u6700\u5feb\u6700\u7b80\u5355\u7684\u6392\u5e8f\u2014\u2014\u6876\u6392\u5e8f\u300b\n\u300a\u6392\u5e8f\u7b97\u6cd5\uff08\u4e09\uff09\uff1a\u8ba1\u6570\u6392\u5e8f\u4e0e\u6876\u6392\u5e8f\u300b\n\n\u6876\u6392\u5e8f\u5c06[0,1)\u533a\u95f4\u5212\u5206\u4e3an\u4e2a\u76f8\u540c\u7684\u5927\u5c0f\u7684\u5b50\u533a\u95f4\uff0c\u8fd9\u4e9b\u5b50\u533a\u95f4\u88ab\u79f0\u4e3a\u6876\u3002\n\u6bcf\u4e2a\u6876\u5355\u72ec\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u518d\u904d\u5386\u6bcf\u4e2a\u6876\u3002\n\n\n\n\u57fa\u6570\u6392\u5e8f\n\u6309\u7167\u4e2a\u4f4d\u3001\u5341\u4f4d\u3001\u767e\u4f4d\u3001...\u4f9d\u6b21\u6765\u6392\u3002\n\n\u300a\u6392\u5e8f\u7b97\u6cd5\u7cfb\u5217\uff1a\u57fa\u6570\u6392\u5e8f\u300b\n\u300a\u57fa\u6570\u6392\u5e8f\u300b\n\n\u4e8c\u5206\u67e5\u627e\n\n\n\u300a\u4e8c\u5206\u67e5\u627e(java\u5b9e\u73b0)\u300b\n\n\u8981\u6c42\u5f85\u67e5\u627e\u7684\u5e8f\u5217\u6709\u5e8f\u3002\n\u65f6\u95f4\u590d\u6742\u5ea6 O(logN)\u3002\n\n\n\n\u300ajava\u5b9e\u73b0\u4e8c\u5206\u67e5\u627e-\u4e24\u79cd\u65b9\u5f0f\u300b\n\nwhile + \u9012\u5f52\u3002\n\n\n\nJava \u4e2d\u7684\u6392\u5e8f\u5de5\u5177\n\n\u300aArrays.sort\u548cCollections.sort\u5b9e\u73b0\u539f\u7406\u89e3\u6790\u300b\n\nCollections.sort\u7b97\u6cd5\u8c03\u7528\u7684\u662f\u5408\u5e76\u6392\u5e8f\u3002\nArrays.sort() \u91c7\u7528\u4e862\u79cd\u6392\u5e8f\u7b97\u6cd5 -- \u57fa\u672c\u7c7b\u578b\u6570\u636e\u4f7f\u7528\u5feb\u901f\u6392\u5e8f\u6cd5\uff0c\u5bf9\u8c61\u6570\u7ec4\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u3002\n\n\n\n\u5e03\u9686\u8fc7\u6ee4\u5668\n\u5e38\u7528\u4e8e\u5927\u6570\u636e\u7684\u6392\u91cd\uff0c\u6bd4\u5982email\uff0curl \u7b49\u3002\n\u6838\u5fc3\u539f\u7406\uff1a\u5c06\u6bcf\u6761\u6570\u636e\u901a\u8fc7\u8ba1\u7b97\u4ea7\u751f\u4e00\u4e2a\u6307\u7eb9\uff08\u4e00\u4e2a\u5b57\u8282\u6216\u591a\u4e2a\u5b57\u8282\uff0c\u4f46\u4e00\u5b9a\u6bd4\u539f\u59cb\u6570\u636e\u8981\u5c11\u5f88\u591a\uff09\uff0c\u5176\u4e2d\u6bcf\u4e00\u4f4d\u90fd\u662f\u901a\u8fc7\u968f\u673a\u8ba1\u7b97\u83b7\u5f97\uff0c\u5728\u5c06\u6307\u7eb9\u6620\u5c04\u5230\u4e00\u4e2a\u5927\u7684\u6309\u4f4d\u5b58\u50a8\u7684\u7a7a\u95f4\u4e2d\u3002\u6ce8\u610f\uff1a\u4f1a\u6709\u4e00\u5b9a\u7684\u9519\u8bef\u7387\u3002\n\u4f18\u70b9\uff1a\u7a7a\u95f4\u548c\u65f6\u95f4\u6548\u7387\u90fd\u5f88\u9ad8\u3002\n\u7f3a\u70b9\uff1a\u968f\u7740\u5b58\u5165\u7684\u5143\u7d20\u6570\u91cf\u589e\u52a0\uff0c\u8bef\u7b97\u7387\u968f\u4e4b\u589e\u52a0\u3002\n\n\u300a\u5e03\u9686\u8fc7\u6ee4\u5668 -- \u7a7a\u95f4\u6548\u7387\u5f88\u9ad8\u7684\u6570\u636e\u7ed3\u6784\u300b\n\u300a\u5927\u91cf\u6570\u636e\u53bb\u91cd\uff1aBitmap\u548c\u5e03\u9686\u8fc7\u6ee4\u5668(Bloom Filter)\u300b\n\u300a\u57fa\u4e8eRedis\u7684\u5e03\u9686\u8fc7\u6ee4\u5668\u7684\u5b9e\u73b0\u300b\n\n\u57fa\u4e8e Redis \u7684 Bitmap \u6570\u636e\u7ed3\u6784\u3002\n\n\n\u300a\u7f51\u7edc\u722c\u866b\uff1aURL\u53bb\u91cd\u7b56\u7565\u4e4b\u5e03\u9686\u8fc7\u6ee4\u5668(BloomFilter)\u7684\u4f7f\u7528\u300b\n\n\u4f7f\u7528Java\u4e2d\u7684 BitSet \u7c7b \u548c \u52a0\u6743\u548chash\u7b97\u6cd5\u3002\n\n\n\n\u5b57\u7b26\u4e32\u6bd4\u8f83\nKMP \u7b97\u6cd5\nKMP\uff1aKnuth-Morris-Pratt\u7b97\u6cd5\uff08\u7b80\u79f0KMP\uff09\n\u6838\u5fc3\u539f\u7406\u662f\u5229\u7528\u4e00\u4e2a\u201c\u90e8\u5206\u5339\u914d\u8868\u201d\uff0c\u8df3\u8fc7\u5df2\u7ecf\u5339\u914d\u8fc7\u7684\u5143\u7d20\u3002\n\n\u300a\u5b57\u7b26\u4e32\u5339\u914d\u7684KMP\u7b97\u6cd5\u300b\n\n\u6df1\u5ea6\u4f18\u5148\u3001\u5e7f\u5ea6\u4f18\u5148\n\n\u300a\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22BFS\u548c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22DFS\u300b\n\n\u8d2a\u5fc3\u7b97\u6cd5\n\n\u300a\u7b97\u6cd5\uff1a\u8d2a\u5a6a\u7b97\u6cd5\u57fa\u7840\u300b\n\u300a\u5e38\u89c1\u7b97\u6cd5\u53ca\u95ee\u9898\u573a\u666f\u2014\u2014\u8d2a\u5fc3\u7b97\u6cd5\u300b\n\n\u56de\u6eaf\u7b97\u6cd5\n\n\u300a \u4e94\u5927\u5e38\u7528\u7b97\u6cd5\u4e4b\u56db\uff1a\u56de\u6eaf\u6cd5\u300b\n\n\u526a\u679d\u7b97\u6cd5\n\n\u300a\u03b1-\u03b2\u526a\u679d\u7b97\u6cd5\u300b\n\n\u52a8\u6001\u89c4\u5212\n\n\u300a\u8be6\u89e3\u52a8\u6001\u89c4\u5212\u2014\u2014\u90b9\u535a\u8bb2\u52a8\u6001\u89c4\u5212\u300b\n\u300a\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u7684\u4e2a\u4eba\u7406\u89e3\u300b\n\n\u6734\u7d20\u8d1d\u53f6\u65af\n\n\n\u300a\u5e26\u4f60\u641e\u61c2\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u7b97\u6cd5\u300b\n\nP(B|A)=P(A|B)P(B)/P(A)\n\n\n\n\u300a\u8d1d\u53f6\u65af\u63a8\u65ad\u53ca\u5176\u4e92\u8054\u7f51\u5e94\u75281\u300b\n\n\n\u300a\u8d1d\u53f6\u65af\u63a8\u65ad\u53ca\u5176\u4e92\u8054\u7f51\u5e94\u75282\u300b\n\n\n\u63a8\u8350\u7b97\u6cd5\n\n\u300a\u63a8\u8350\u7b97\u6cd5\u7efc\u8ff0\u300b\n\u300aTOP 10 \u5f00\u6e90\u7684\u63a8\u8350\u7cfb\u7edf\u7b80\u4ecb\u300b\n\n\u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5\n\n\u300a\u7b97\u6cd5\u5bfc\u8bba--\u6700\u5c0f\u751f\u6210\u6811\uff08Kruskal\u548cPrim\u7b97\u6cd5\uff09\u300b\n\n\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\n\n\u300aDijkstra\u7b97\u6cd5\u8be6\u89e3\u300b\n\n\u5e76\u53d1\nJava \u5e76\u53d1\n\nJava \u5e76\u53d1\u77e5\u8bc6\u5408\u96c6\nJAVA\u5e76\u53d1\u77e5\u8bc6\u56fe\u8c31\n\n\u591a\u7ebf\u7a0b\n\n\u300a40\u4e2aJava\u591a\u7ebf\u7a0b\u95ee\u9898\u603b\u7ed3\u300b\n\n\u7ebf\u7a0b\u5b89\u5168\n\n\u300aJava\u5e76\u53d1\u7f16\u7a0b\u2014\u2014\u7ebf\u7a0b\u5b89\u5168\u53ca\u89e3\u51b3\u673a\u5236\u7b80\u4ecb\u300b\n\n\u4e00\u81f4\u6027\u3001\u4e8b\u52a1\n\u4e8b\u52a1 ACID \u7279\u6027\n\n\u300a\u6570\u636e\u5e93\u4e8b\u52a1ACID\u7279\u6027\u300b\n\n\u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b\n\n\n\u672a\u63d0\u4ea4\u8bfb\uff1a\u4e00\u4e2a\u4e8b\u52a1\u53ef\u4ee5\u8bfb\u53d6\u53e6\u4e00\u4e2a\u672a\u63d0\u4ea4\u7684\u6570\u636e\uff0c\u5bb9\u6613\u51fa\u73b0\u810f\u8bfb\u7684\u60c5\u51b5\u3002\n\n\n\u8bfb\u63d0\u4ea4\uff1a\u4e00\u4e2a\u4e8b\u52a1\u7b49\u53e6\u5916\u4e00\u4e2a\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u540e\u624d\u53ef\u4ee5\u8bfb\u53d6\u6570\u636e\uff0c\u4f46\u4f1a\u51fa\u73b0\u4e0d\u53ef\u91cd\u590d\u8bfb\u7684\u60c5\u51b5\uff08\u591a\u6b21\u8bfb\u53d6\u7684\u6570\u636e\u4e0d\u4e00\u81f4\uff09\uff0c\u8bfb\u53d6\u8fc7\u7a0b\u4e2d\u51fa\u73b0UPDATE\u64cd\u4f5c\uff0c\u4f1a\u591a\u3002\uff08\u5927\u591a\u6570\u6570\u636e\u5e93\u9ed8\u8ba4\u7ea7\u522b\u662fRC\uff0c\u6bd4\u5982SQL Server\uff0cOracle\uff09\uff0c\u8bfb\u53d6\u7684\u65f6\u5019\u4e0d\u53ef\u4ee5\u4fee\u6539\u3002\n\n\n\u53ef\u91cd\u590d\u8bfb\uff1a \u540c\u4e00\u4e2a\u4e8b\u52a1\u91cc\u786e\u4fdd\u6bcf\u6b21\u8bfb\u53d6\u7684\u65f6\u5019\uff0c\u83b7\u5f97\u7684\u662f\u540c\u6837\u7684\u6570\u636e\uff0c\u4f46\u4e0d\u4fdd\u969c\u539f\u59cb\u6570\u636e\u88ab\u5176\u4ed6\u4e8b\u52a1\u66f4\u65b0\uff08\u5e7b\u8bfb\uff09\uff0cMysql InnoDB \u5c31\u662f\u8fd9\u4e2a\u7ea7\u522b\u3002\n\n\n\u5e8f\u5217\u5316\uff1a\u6240\u6709\u4e8b\u7269\u4e32\u884c\u5904\u7406\uff08\u727a\u7272\u4e86\u6548\u7387\uff09\n\n\n\u300a\u7406\u89e3\u4e8b\u52a1\u76844\u79cd\u9694\u79bb\u7ea7\u522b\u300b\n\n\n\u6570\u636e\u5e93\u4e8b\u52a1\u7684\u56db\u5927\u7279\u6027\u53ca\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\n\n\n\u300aMySQL\u7684InnoDB\u7684\u5e7b\u8bfb\u95ee\u9898 \u300b\n\n\u5e7b\u8bfb\u7684\u4f8b\u5b50\u975e\u5e38\u6e05\u695a\u3002\n\u901a\u8fc7 SELECT ... FOR UPDATE \u89e3\u51b3\u3002\n\n\n\n\u300a\u4e00\u7bc7\u6587\u7ae0\u5e26\u4f60\u8bfb\u61c2MySQL\u548cInnoDB\u300b\n\n\u56fe\u89e3\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u3001\u5e7b\u8bfb\u95ee\u9898\u3002\n\n\n\nMVCC\n\n\n\u300a\u3010mysql\u3011\u5173\u4e8einnodb\u4e2dMVCC\u7684\u4e00\u4e9b\u7406\u89e3\u300b\n\ninnodb \u4e2d MVCC \u7528\u5728 Repeatable-Read \u9694\u79bb\u7ea7\u522b\u3002\nMVCC \u4f1a\u4ea7\u751f\u5e7b\u8bfb\u95ee\u9898\uff08\u66f4\u65b0\u65f6\u5f02\u5e38\u3002\uff09\n\n\n\n\u300a\u8f7b\u677e\u7406\u89e3MYSQL MVCC \u5b9e\u73b0\u673a\u5236\u300b\n\n\u901a\u8fc7\u9690\u85cf\u7248\u672c\u5217\u6765\u5b9e\u73b0 MVCC \u63a7\u5236\uff0c\u4e00\u5217\u8bb0\u5f55\u521b\u5efa\u65f6\u95f4\u3001\u4e00\u5217\u8bb0\u5f55\u5220\u9664\u65f6\u95f4\uff0c\u8fd9\u91cc\u7684\u65f6\u95f4\n\u6bcf\u6b21\u53ea\u64cd\u4f5c\u6bd4\u5f53\u524d\u7248\u672c\u5c0f\uff08\u6216\u7b49\u4e8e\uff09\u7684 \u884c\u3002\n\n\n\n\u9501\nJava\u4e2d\u7684\u9501\u548c\u540c\u6b65\u7c7b\n\n\n\u300aJava\u4e2d\u7684\u9501\u5206\u7c7b\u300b\n\n\u4e3b\u8981\u5305\u62ec synchronized\u3001ReentrantLock\u3001\u548c ReadWriteLock\u3002\n\n\n\n\u300aJava\u5e76\u53d1\u4e4bAQS\u8be6\u89e3\u300b\n\n\n\u300aJava\u4e2d\u4fe1\u53f7\u91cf Semaphore\u300b\n\n\u6709\u6570\u91cf\u63a7\u5236\n\u7533\u8bf7\u7528 acquire\uff0c\u7533\u8bf7\u4e0d\u8981\u5219\u963b\u585e\uff1b\u91ca\u653e\u7528 release\u3002\n\n\n\n\u300ajava\u5f00\u53d1\u4e2d\u7684Mutex vs Semaphore\u300b\n\n\u7b80\u5355\u7684\u8bf4 \u5c31\u662fMutex\u662f\u6392\u5b83\u7684\uff0c\u53ea\u6709\u4e00\u4e2a\u53ef\u4ee5\u83b7\u53d6\u5230\u8d44\u6e90\uff0c Semaphore\u4e5f\u5177\u6709\u6392\u5b83\u6027\uff0c\u4f46\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u53ef\u4ee5\u83b7\u53d6\u7684\u8d44\u6e90\u7684\u5bf9\u8c61\u3002\n\n\n\n\u516c\u5e73\u9501 & \u975e\u516c\u5e73\u9501\n\u516c\u5e73\u9501\u7684\u4f5c\u7528\u5c31\u662f\u4e25\u683c\u6309\u7167\u7ebf\u7a0b\u542f\u52a8\u7684\u987a\u5e8f\u6765\u6267\u884c\u7684\uff0c\u4e0d\u5141\u8bb8\u5176\u4ed6\u7ebf\u7a0b\u63d2\u961f\u6267\u884c\u7684\uff1b\u800c\u975e\u516c\u5e73\u9501\u662f\u5141\u8bb8\u63d2\u961f\u7684\u3002\n\n\u300a\u516c\u5e73\u9501\u4e0e\u975e\u516c\u5e73\u9501\u300b\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b ReentrantLock \u548c synchronized \u90fd\u662f\u975e\u516c\u5e73\u9501\u3002ReentrantLock \u53ef\u4ee5\u8bbe\u7f6e\u6210\u516c\u5e73\u9501\u3002\n\n\n\n\u60b2\u89c2\u9501\n\u60b2\u89c2\u9501\u5982\u679c\u4f7f\u7528\u4e0d\u5f53\uff08\u9501\u7684\u6761\u6570\u8fc7\u591a\uff09\uff0c\u4f1a\u5f15\u8d77\u670d\u52a1\u5927\u9762\u79ef\u7b49\u5f85\u3002\u63a8\u8350\u4f18\u5148\u4f7f\u7528\u4e50\u89c2\u9501+\u91cd\u8bd5\u3002\n\n\n\u300a\u3010MySQL\u3011\u60b2\u89c2\u9501&\u4e50\u89c2\u9501\u300b\n\n\u4e50\u89c2\u9501\u7684\u65b9\u5f0f\uff1a\u7248\u672c\u53f7+\u91cd\u8bd5\u65b9\u5f0f\n\u60b2\u89c2\u9501\uff1a\u901a\u8fc7 select ... for update \u8fdb\u884c\u884c\u9501(\u4e0d\u53ef\u8bfb\u3001\u4e0d\u53ef\u5199\uff0cshare \u9501\u53ef\u8bfb\u4e0d\u53ef\u5199)\u3002\n\n\n\n\u300aMysql\u67e5\u8be2\u8bed\u53e5\u4f7f\u7528select.. for update\u5bfc\u81f4\u7684\u6570\u636e\u5e93\u6b7b\u9501\u5206\u6790\u300b\n\nmysql\u7684innodb\u5b58\u50a8\u5f15\u64ce\u5b9e\u52a1\u9501\u867d\u7136\u662f\u9501\u884c\uff0c\u4f46\u5b83\u5185\u90e8\u662f\u9501\u7d22\u5f15\u7684\u3002\n\u9501\u76f8\u540c\u6570\u636e\u7684\u4e0d\u540c\u7d22\u5f15\u6761\u4ef6\u53ef\u80fd\u4f1a\u5f15\u8d77\u6b7b\u9501\u3002\n\n\n\n\u300aMysql\u5e76\u53d1\u65f6\u7ecf\u5178\u5e38\u89c1\u7684\u6b7b\u9501\u539f\u56e0\u53ca\u89e3\u51b3\u65b9\u6cd5\u300b\n\n\n\u4e50\u89c2\u9501 & CAS\n\n\u300a\u4e50\u89c2\u9501\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\u2014\u2014CAS\u300b\n\n\u548cMySQL\u4e50\u89c2\u9501\u65b9\u5f0f\u76f8\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u662f\u901a\u8fc7\u548c\u539f\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\n\n\n\nABA \u95ee\u9898\n\u7531\u4e8e\u9ad8\u5e76\u53d1\uff0c\u5728CAS\u4e0b\uff0c\u66f4\u65b0\u540e\u53ef\u80fd\u6b64A\u975e\u5f7cA\u3002\u901a\u8fc7\u7248\u672c\u53f7\u53ef\u4ee5\u89e3\u51b3\uff0c\u7c7b\u4f3c\u4e8e\u4e0a\u6587Mysql \u4e2d\u63d0\u5230\u7684\u7684\u4e50\u89c2\u9501\u3002\n\n\u300aJava CAS \u548cABA\u95ee\u9898\u300b\n\u300aJava \u4e2d ABA\u95ee\u9898\u53ca\u907f\u514d\u300b\n\nAtomicStampedReference \u548c AtomicStampedReference\u3002\n\n\n\nCopyOnWrite\u5bb9\u5668\n\u53ef\u4ee5\u5bf9CopyOnWrite\u5bb9\u5668\u8fdb\u884c\u5e76\u53d1\u7684\u8bfb\uff0c\u800c\u4e0d\u9700\u8981\u52a0\u9501\u3002CopyOnWrite\u5e76\u53d1\u5bb9\u5668\u7528\u4e8e\u8bfb\u591a\u5199\u5c11\u7684\u5e76\u53d1\u573a\u666f\u3002\u6bd4\u5982\u767d\u540d\u5355\uff0c\u9ed1\u540d\u5355\uff0c\u5546\u54c1\u7c7b\u76ee\u7684\u8bbf\u95ee\u548c\u66f4\u65b0\u573a\u666f\uff0c\u4e0d\u9002\u5408\u9700\u8981\u6570\u636e\u5f3a\u4e00\u81f4\u6027\u7684\u573a\u666f\u3002\n\n\n\u300aJAVA\u4e2d\u5199\u65f6\u590d\u5236(Copy-On-Write)Map\u5b9e\u73b0\u300b\n\n\u5b9e\u73b0\u8bfb\u5199\u5206\u79bb\uff0c\u8bfb\u53d6\u53d1\u751f\u5728\u539f\u59cb\u6570\u636e\u4e0a\uff0c\u5199\u5165\u53d1\u751f\u5728\u526f\u672c\u4e0a\u3002\n\u4e0d\u7528\u52a0\u9501\uff0c\u901a\u8fc7\u6700\u7ec8\u4e00\u81f4\u5b9e\u73b0\u4e00\u81f4\u6027\u3002\n\n\n\n\u300a\u804a\u804a\u5e76\u53d1-Java\u4e2d\u7684Copy-On-Write\u5bb9\u5668\u300b\n\n\nRingBuffer\n\n\u300a\u7ebf\u7a0b\u5b89\u5168\u7684\u65e0\u9501RingBuffer\u7684\u5b9e\u73b0\u3010\u4e00\u4e2a\u8bfb\u7ebf\u7a0b\uff0c\u4e00\u4e2a\u5199\u7ebf\u7a0b\u3011\u300b\n\n\u53ef\u91cd\u5165\u9501 & \u4e0d\u53ef\u91cd\u5165\u9501\n\n\n\u300a\u53ef\u91cd\u5165\u9501\u548c\u4e0d\u53ef\u91cd\u5165\u9501\u300b\n\n\u901a\u8fc7\u7b80\u5355\u4ee3\u7801\u4e3e\u4f8b\u8bf4\u660e\u53ef\u91cd\u5165\u9501\u548c\u4e0d\u53ef\u91cd\u5165\u9501\u3002\n\u53ef\u91cd\u5165\u9501\u6307\u540c\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u518d\u6b21\u83b7\u5f97\u4e4b\u524d\u5df2\u7ecf\u83b7\u5f97\u7684\u9501\u3002\n\u53ef\u91cd\u5165\u9501\u53ef\u4ee5\u7528\u6237\u907f\u514d\u6b7b\u9501\u3002\nJava\u4e2d\u7684\u53ef\u91cd\u5165\u9501\uff1asynchronized \u548c java.util.concurrent.locks.ReentrantLock\n\n\n\n\u300aReenTrantLock\u53ef\u91cd\u5165\u9501\uff08\u548csynchronized\u7684\u533a\u522b\uff09\u603b\u7ed3\u300b\n\nsynchronized \u4f7f\u7528\u65b9\u4fbf\uff0c\u7f16\u8bd1\u5668\u6765\u52a0\u9501\uff0c\u662f\u975e\u516c\u5e73\u9501\u3002\nReenTrantLock \u4f7f\u7528\u7075\u6d3b\uff0c\u9501\u7684\u516c\u5e73\u6027\u53ef\u4ee5\u5b9a\u5236\u3002\n\u76f8\u540c\u52a0\u9501\u573a\u666f\u4e0b\uff0c\u63a8\u8350\u4f7f\u7528 synchronized\u3002\n\n\n\n\u4e92\u65a5\u9501 & \u5171\u4eab\u9501\n\u4e92\u65a5\u9501\uff1a\u540c\u65f6\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u83b7\u5f97\u9501\u3002\u6bd4\u5982\uff0cReentrantLock \u662f\u4e92\u65a5\u9501\uff0cReadWriteLock \u4e2d\u7684\u5199\u9501\u662f\u4e92\u65a5\u9501\u3002\n\u5171\u4eab\u9501\uff1a\u53ef\u4ee5\u6709\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u6216\u7684\u9501\u3002\u6bd4\u5982\uff0cSemaphore\u3001CountDownLatch \u662f\u5171\u4eab\u9501\uff0cReadWriteLock \u4e2d\u7684\u8bfb\u9501\u662f\u5171\u4eab\u9501\u3002\n\n\u300aReadWriteLock\u573a\u666f\u5e94\u7528\u300b\n\n\u6b7b\u9501\n\n\n\u300a\u201c\u6b7b\u9501\u201d\u56db\u4e2a\u5fc5\u8981\u6761\u4ef6\u7684\u5408\u7406\u89e3\u91ca\u300b\n\n\u4e92\u65a5\u3001\u6301\u6709\u3001\u4e0d\u53ef\u5265\u593a\u3001\u73af\u5f62\u7b49\u5f85\u3002\n\n\n\nJava\u5982\u4f55\u67e5\u770b\u6b7b\u9501\uff1f\n\nJConsole \u53ef\u4ee5\u8bc6\u522b\u6b7b\u9501\u3002\n\n\n\njava\u591a\u7ebf\u7a0b\u7cfb\u5217\uff1a\u6b7b\u9501\u53ca\u68c0\u6d4b\n\njstack \u53ef\u4ee5\u663e\u793a\u6b7b\u9501\u3002\n\n\n\n\u64cd\u4f5c\u7cfb\u7edf\n\u8ba1\u7b97\u673a\u539f\u7406\n\n\u300a\u64cd\u4f5c\u7cfb\u7edf\u57fa\u7840\u77e5\u8bc6\u2014\u2014\u64cd\u4f5c\u7cfb\u7edf\u7684\u539f\u7406\uff0c\u7c7b\u578b\u548c\u7ed3\u6784\u300b\n\nCPU\n\u591a\u7ea7\u7f13\u5b58\n\u5178\u578b\u7684 CPU \u6709\u4e09\u7ea7\u7f13\u5b58\uff0c\u8ddd\u79bb\u6838\u5fc3\u8d8a\u8fd1\uff0c\u901f\u5ea6\u8d8a\u5feb\uff0c\u7a7a\u95f4\u8d8a\u5c0f\u3002L1 \u4e00\u822c 32k\uff0cL2 \u4e00\u822c 256k\uff0cL3 \u4e00\u822c12M\u3002\u5185\u5b58\u901f\u5ea6\u9700\u8981200\u4e2a CPU \u5468\u671f\uff0cCPU \u7f13\u5b58\u9700\u89811\u4e2aCPU\u5468\u671f\u3002\n\n\u300a\u4eceJava\u89c6\u89d2\u7406\u89e3CPU\u7f13\u5b58\u548c\u4f2a\u5171\u4eab\u300b\n\n\u8fdb\u7a0b\nTODO\n\u7ebf\u7a0b\n\n\u300a\u7ebf\u7a0b\u7684\u751f\u547d\u5468\u671f\u53ca\u72b6\u6001\u8f6c\u6362\u8be6\u89e3\u300b\n\n\u534f\u7a0b\n\n\u300a\u7ec8\u7ed3python\u534f\u7a0b----\u4eceyield\u5230actor\u6a21\u578b\u7684\u5b9e\u73b0\u300b\n\n\u7ebf\u7a0b\u7684\u8c03\u5ea6\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\uff0c\u534f\u7a0b\u8c03\u5ea6\u662f\u7a0b\u5e8f\u81ea\u884c\u8d1f\u8d23\n\u4e0e\u7ebf\u7a0b\u76f8\u6bd4\uff0c\u534f\u7a0b\u51cf\u5c11\u4e86\u65e0\u8c13\u7684\u64cd\u4f5c\u7cfb\u7edf\u5207\u6362.\n\u5b9e\u9645\u4e0a\u5f53\u9047\u5230IO\u64cd\u4f5c\u65f6\u505a\u5207\u6362\u624d\u66f4\u6709\u610f\u4e49\uff0c\uff08\u56e0\u4e3aIO\u64cd\u4f5c\u4e0d\u7528\u5360\u7528CPU\uff09\uff0c\u5982\u679c\u6ca1\u9047\u5230IO\u64cd\u4f5c\uff0c\u6309\u7167\u65f6\u95f4\u7247\u5207\u6362.\n\n\n\nLinux\n\n\u300aLinux \u547d\u4ee4\u5927\u5168\u300b\n\n\u8bbe\u8ba1\u6a21\u5f0f\n\u8bbe\u8ba1\u6a21\u5f0f\u7684\u516d\u5927\u539f\u5219\n\n\u300a\u8bbe\u8ba1\u6a21\u5f0f\u7684\u516d\u5927\u539f\u5219\u300b\n\n\u5f00\u95ed\u539f\u5219\uff1a\u5bf9\u6269\u5c55\u5f00\u653e,\u5bf9\u4fee\u6539\u5173\u95ed\uff0c\u591a\u4f7f\u7528\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u3002\n\u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff1a\u57fa\u7c7b\u53ef\u4ee5\u88ab\u5b50\u7c7b\u66ff\u6362\uff0c\u4f7f\u7528\u62bd\u8c61\u7c7b\u7ee7\u627f,\u4e0d\u4f7f\u7528\u5177\u4f53\u7c7b\u7ee7\u627f\u3002\n\u4f9d\u8d56\u5012\u8f6c\u539f\u5219\uff1a\u8981\u4f9d\u8d56\u4e8e\u62bd\u8c61,\u4e0d\u8981\u4f9d\u8d56\u4e8e\u5177\u4f53\uff0c\u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b,\u4e0d\u9488\u5bf9\u5b9e\u73b0\u7f16\u7a0b\u3002\n\u63a5\u53e3\u9694\u79bb\u539f\u5219\uff1a\u4f7f\u7528\u591a\u4e2a\u9694\u79bb\u7684\u63a5\u53e3,\u6bd4\u4f7f\u7528\u5355\u4e2a\u63a5\u53e3\u597d\uff0c\u5efa\u7acb\u6700\u5c0f\u7684\u63a5\u53e3\u3002\n\u8fea\u7c73\u7279\u6cd5\u5219\uff1a\u4e00\u4e2a\u8f6f\u4ef6\u5b9e\u4f53\u5e94\u5f53\u5c3d\u53ef\u80fd\u5c11\u5730\u4e0e\u5176\u4ed6\u5b9e\u4f53\u53d1\u751f\u76f8\u4e92\u4f5c\u7528\uff0c\u901a\u8fc7\u4e2d\u95f4\u7c7b\u5efa\u7acb\u8054\u7cfb\u3002\n\u5408\u6210\u590d\u7528\u539f\u5219\uff1a\u5c3d\u91cf\u4f7f\u7528\u5408\u6210/\u805a\u5408,\u800c\u4e0d\u662f\u4f7f\u7528\u7ee7\u627f\u3002\n\n\n\n23\u79cd\u5e38\u89c1\u8bbe\u8ba1\u6a21\u5f0f\n\n\u300a\u8bbe\u8ba1\u6a21\u5f0f\u300b\n\u300a23\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u5168\u89e3\u6790\u300b\n\u300a\u8bbe\u8ba1\u6a21\u5f0f\u7c7b\u56fe\u4e0e\u793a\u4f8b\u300b\n\n\u5e94\u7528\u573a\u666f\n\n\n\u300a\u7ec6\u6570JDK\u91cc\u7684\u8bbe\u8ba1\u6a21\u5f0f\u300b\n\n\n\u7ed3\u6784\u578b\u6a21\u5f0f\uff1a\n\n\u9002\u914d\u5668\uff1a\u7528\u6765\u628a\u4e00\u4e2a\u63a5\u53e3\u8f6c\u5316\u6210\u53e6\u4e00\u4e2a\u63a5\u53e3\uff0c\u5982 java.util.Arrays#asList()\u3002\n\u6865\u63a5\u6a21\u5f0f\uff1a\u8fd9\u4e2a\u6a21\u5f0f\u5c06\u62bd\u8c61\u548c\u62bd\u8c61\u64cd\u4f5c\u7684\u5b9e\u73b0\u8fdb\u884c\u4e86\u89e3\u8026\uff0c\u8fd9\u6837\u4f7f\u5f97\u62bd\u8c61\u548c\u5b9e\u73b0\u53ef\u4ee5\u72ec\u7acb\u5730\u53d8\u5316\uff0c\u5982JDBC\uff1b\n\u7ec4\u5408\u6a21\u5f0f\uff1a\u4f7f\u5f97\u5ba2\u6237\u7aef\u770b\u6765\u5355\u4e2a\u5bf9\u8c61\u548c\u5bf9\u8c61\u7684\u7ec4\u5408\u662f\u540c\u7b49\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u67d0\u4e2a\u7c7b\u578b\u7684\u65b9\u6cd5\u540c\u65f6\u4e5f\u63a5\u53d7\u81ea\u8eab\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570\uff0c\u5982 Map.putAll\uff0cList.addAll\u3001Set.addAll\u3002\n\u88c5\u9970\u8005\u6a21\u5f0f\uff1a\u52a8\u6001\u7684\u7ed9\u4e00\u4e2a\u5bf9\u8c61\u9644\u52a0\u989d\u5916\u7684\u529f\u80fd\uff0c\u8fd9\u4e5f\u662f\u5b50\u7c7b\u7684\u4e00\u79cd\u66ff\u4ee3\u65b9\u5f0f\uff0c\u5982 java.util.Collections#checkedList|Map|Set|SortedSet|SortedMap\u3002\n\u4eab\u5143\u6a21\u5f0f\uff1a\u4f7f\u7528\u7f13\u5b58\u6765\u52a0\u901f\u5927\u91cf\u5c0f\u5bf9\u8c61\u7684\u8bbf\u95ee\u65f6\u95f4\uff0c\u5982 valueOf(int)\u3002\n\u4ee3\u7406\u6a21\u5f0f\uff1a\u4ee3\u7406\u6a21\u5f0f\u662f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u5bf9\u8c61\u6765\u4ee3\u66ff\u4e00\u4e2a\u590d\u6742\u7684\u6216\u8005\u521b\u5efa\u8017\u65f6\u7684\u5bf9\u8c61\uff0c\u5982 java.lang.reflect.Proxy\n\n\n\n\u521b\u5efa\u6a21\u5f0f:\n\n\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\uff1a\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u534f\u8bae\u6765\u751f\u6210\u4e00\u7cfb\u5217\u7684\u76f8\u5173\u6216\u8005\u72ec\u7acb\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u7528\u6307\u5b9a\u5177\u4f53\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u5982 java.util.Calendar#getInstance()\u3002\n\u5efa\u9020\u6a21\u5f0f(Builder)\uff1a\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b\u6765\u6784\u5efa\u53e6\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u4ee5\u7b80\u5316\u590d\u6742\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u5982\uff1ajava.lang.StringBuilder#append()\u3002\n\u5de5\u5382\u65b9\u6cd5\uff1a\u5c31\u662f \u4e00\u4e2a\u8fd4* \u56de\u5177\u4f53\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u591a\u4e2a\uff0c\u5982 java.lang.Object#toString()\u3001java.lang.Class#newInstance()\u3002\n\u539f\u578b\u6a21\u5f0f\uff1a\u4f7f\u5f97\u7c7b\u7684\u5b9e\u4f8b\u80fd\u591f\u751f\u6210\u81ea\u8eab\u7684\u62f7\u8d1d\u3001\u5982\uff1ajava.lang.Object#clone()\u3002\n\u5355\u4f8b\u6a21\u5f0f\uff1a\u5168\u5c40\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5982 java.lang.Runtime#getRuntime()\u3002\n\n\n\n\u884c\u4e3a\u6a21\u5f0f\uff1a\n\n\u8d23\u4efb\u94fe\u6a21\u5f0f\uff1a\u901a\u8fc7\u628a\u8bf7\u6c42\u4ece\u4e00\u4e2a\u5bf9\u8c61\u4f20\u9012\u5230\u94fe\u6761\u4e2d\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u7684\u65b9\u5f0f\uff0c\u76f4\u5230\u8bf7\u6c42\u88ab\u5904\u7406\u5b8c\u6bd5\uff0c\u4ee5\u5b9e\u73b0\u5bf9\u8c61\u95f4\u7684\u89e3\u8026\u3002\u5982 javax.servlet.Filter#doFilter()\u3002\n\u547d\u4ee4\u6a21\u5f0f\uff1a\u5c06\u64cd\u4f5c\u5c01\u88c5\u5230\u5bf9\u8c61\u5185\uff0c\u4ee5\u4fbf\u5b58\u50a8\uff0c\u4f20\u9012\u548c\u8fd4\u56de\uff0c\u5982\uff1ajava.lang.Runnable\u3002\n\u89e3\u91ca\u5668\u6a21\u5f0f\uff1a\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8bed\u8a00\u7684\u8bed\u6cd5\uff0c\u7136\u540e\u89e3\u6790\u76f8\u5e94\u8bed\u6cd5\u7684\u8bed\u53e5\uff0c\u5982\uff0cjava.text.Format\uff0cjava.text.Normalizer\u3002\n\u8fed\u4ee3\u5668\u6a21\u5f0f\uff1a\u63d0\u4f9b\u4e00\u4e2a\u4e00\u81f4\u7684\u65b9\u6cd5\u6765\u987a\u5e8f\u8bbf\u95ee\u96c6\u5408\u4e2d\u7684\u5bf9\u8c61\uff0c\u5982 java.util.Iterator\u3002\n\u4e2d\u4ecb\u8005\u6a21\u5f0f\uff1a\u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u4e2d\u95f4\u5bf9\u8c61\u6765\u8fdb\u884c\u6d88\u606f\u5206\u53d1\u4ee5\u53ca\u51cf\u5c11\u7c7b\u4e4b\u95f4\u7684\u76f4\u63a5\u4f9d\u8d56\uff0cjava.lang.reflect.Method#invoke()\u3002\n\u7a7a\u5bf9\u8c61\u6a21\u5f0f\uff1a\u5982 java.util.Collections#emptyList()\u3002\n\u89c2\u5bdf\u8005\u6a21\u5f0f\uff1a\u5b83\u4f7f\u5f97\u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u7075\u6d3b\u7684\u5c06\u6d88\u606f\u53d1\u9001\u7ed9\u611f\u5174\u8da3\u7684\u5bf9\u8c61\uff0c\u5982 java.util.EventListener\u3002\n\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\uff1a\u8ba9\u5b50\u7c7b\u53ef\u4ee5\u91cd\u5199\u65b9\u6cd5\u7684\u4e00\u90e8\u5206\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u91cd\u5199\uff0c\u5982 java.util.Collections#sort()\u3002\n\n\n\n\n\n\u300aSpring-\u6d89\u53ca\u5230\u7684\u8bbe\u8ba1\u6a21\u5f0f\u6c47\u603b\u300b\n\n\n\u300aMybatis\u4f7f\u7528\u7684\u8bbe\u8ba1\u6a21\u5f0f\u300b\n\n\n\u5355\u4f8b\u6a21\u5f0f\n\n\u300a\u5355\u4f8b\u6a21\u5f0f\u7684\u4e09\u79cd\u5b9e\u73b0 \u4ee5\u53ca\u5404\u81ea\u7684\u4f18\u7f3a\u70b9\u300b\n\u300a\u5355\u4f8b\u6a21\u5f0f\uff0d\uff0d\u53cd\u5c04\uff0d\uff0d\u9632\u6b62\u5e8f\u5217\u5316\u7834\u574f\u5355\u4f8b\u6a21\u5f0f\u300b\n\n\u4f7f\u7528\u679a\u4e3e\u7c7b\u578b\u3002\n\n\n\n\u8d23\u4efb\u94fe\u6a21\u5f0f\nTODO\nMVC\n\n\u300aMVC \u6a21\u5f0f\u300b\n\n\u6a21\u578b(model)\uff0d\u89c6\u56fe(view)\uff0d\u63a7\u5236\u5668(controller)\n\n\n\nIOC\n\n\u300a\u7406\u89e3 IOC\u300b\n\u300aIOC \u7684\u7406\u89e3\u4e0e\u89e3\u91ca\u300b\n\n\u6b63\u5411\u63a7\u5236\uff1a\u4f20\u7edf\u901a\u8fc7new\u7684\u65b9\u5f0f\u3002\u53cd\u5411\u63a7\u5236\uff0c\u901a\u8fc7\u5bb9\u5668\u6ce8\u5165\u5bf9\u8c61\u3002\n\u4f5c\u7528\uff1a\u7528\u4e8e\u6a21\u5757\u89e3\u8026\u3002\nDI\uff1aDependency Injection\uff0c\u5373\u4f9d\u8d56\u6ce8\u5165\uff0c\u53ea\u5173\u5fc3\u8d44\u6e90\u4f7f\u7528\uff0c\u4e0d\u5173\u5fc3\u8d44\u6e90\u6765\u6e90\u3002\n\n\n\nAOP\n\n\u300a\u8f7b\u677e\u7406\u89e3AOP(\u9762\u5411\u5207\u9762\u7f16\u7a0b)\u300b\n\u300aSpring AOP\u8be6\u89e3\u300b\n\u300aSpring AOP\u7684\u5b9e\u73b0\u539f\u7406\u300b\n\nSpring AOP\u4f7f\u7528\u7684\u52a8\u6001\u4ee3\u7406\uff0c\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f\uff1aJDK\u52a8\u6001\u4ee3\u7406\u548cCGLIB\u52a8\u6001\u4ee3\u7406\u3002\n\n\n\u300aSpring AOP \u5b9e\u73b0\u539f\u7406\u4e0e CGLIB \u5e94\u7528\u300b\n\nSpring AOP \u6846\u67b6\u5bf9 AOP \u4ee3\u7406\u7c7b\u7684\u5904\u7406\u539f\u5219\u662f\uff1a\u5982\u679c\u76ee\u6807\u5bf9\u8c61\u7684\u5b9e\u73b0\u7c7b\u5b9e\u73b0\u4e86\u63a5\u53e3\uff0cSpring AOP \u5c06\u4f1a\u91c7\u7528 JDK \u52a8\u6001\u4ee3\u7406\u6765\u751f\u6210 AOP \u4ee3\u7406\u7c7b\uff1b\u5982\u679c\u76ee\u6807\u5bf9\u8c61\u7684\u5b9e\u73b0\u7c7b\u6ca1\u6709\u5b9e\u73b0\u63a5\u53e3\uff0cSpring AOP \u5c06\u4f1a\u91c7\u7528 CGLIB \u6765\u751f\u6210 AOP \u4ee3\u7406\u7c7b\n\n\n\nUML\n\n\u300aUML\u6559\u7a0b\u300b\n\n\u5fae\u670d\u52a1\u601d\u60f3\n\n\u300a\u5fae\u670d\u52a1\u67b6\u6784\u8bbe\u8ba1\u300b\n\u300a\u5fae\u670d\u52a1\u67b6\u6784\u6280\u672f\u6808\u9009\u578b\u624b\u518c\u300b\n\n\u5eb7\u5a01\u5b9a\u5f8b\n\n\n\u300a\u5fae\u670d\u52a1\u67b6\u6784\u7684\u7406\u8bba\u57fa\u7840 - \u5eb7\u5a01\u5b9a\u5f8b\u300b\n\n\u5b9a\u5f8b\u4e00\uff1a\u7ec4\u7ec7\u6c9f\u901a\u65b9\u5f0f\u4f1a\u901a\u8fc7\u7cfb\u7edf\u8bbe\u8ba1\u8868\u8fbe\u51fa\u6765\uff0c\u5c31\u662f\u8bf4\u67b6\u6784\u7684\u5e03\u5c40\u548c\u7ec4\u7ec7\u7ed3\u6784\u4f1a\u6709\u76f8\u4f3c\u3002\n\u5b9a\u5f8b\u4e8c\uff1a\u65f6\u95f4\u518d\u591a\u4e00\u4ef6\u4e8b\u60c5\u4e5f\u4e0d\u53ef\u80fd\u505a\u7684\u5b8c\u7f8e\uff0c\u4f46\u603b\u6709\u65f6\u95f4\u505a\u5b8c\u4e00\u4ef6\u4e8b\u60c5\u3002\u4e00\u53e3\u6c14\u5403\u4e0d\u6210\u80d6\u5b50\uff0c\u5148\u641e\u5b9a\u80fd\u641e\u5b9a\u7684\u3002\n\u5b9a\u5f8b\u4e09\uff1a\u7ebf\u578b\u7cfb\u7edf\u548c\u7ebf\u578b\u7ec4\u7ec7\u67b6\u6784\u95f4\u6709\u6f5c\u5728\u7684\u5f02\u8d28\u540c\u6001\u7279\u6027\u3002\u79cd\u74dc\u5f97\u74dc\uff0c\u505a\u72ec\u7acb\u81ea\u6cbb\u7684\u5b50\u7cfb\u7edf\u51cf\u5c11\u6c9f\u901a\u6210\u672c\u3002\n\u5b9a\u5f8b\u56db\uff1a\u5927\u7684\u7cfb\u7edf\u7ec4\u7ec7\u603b\u662f\u6bd4\u5c0f\u7cfb\u7edf\u66f4\u503e\u5411\u4e8e\u5206\u89e3\u3002\u5408\u4e45\u5fc5\u5206\uff0c\u5206\u800c\u6cbb\u4e4b\u3002\n\n\n\n\u300a\u5fae\u670d\u52a1\u67b6\u6784\u6838\u2f3c20\u8bb2\u300b\n\n\n\u8fd0\u7ef4 & \u7edf\u8ba1 & \u6280\u672f\u652f\u6301\n\u5e38\u89c4\u76d1\u63a7\n\n\n\u300a\u817e\u8baf\u4e1a\u52a1\u7cfb\u7edf\u76d1\u63a7\u7684\u4fee\u70bc\u4e4b\u8def\u300b\n\n\u76d1\u63a7\u7684\u65b9\u5f0f\uff1a\u4e3b\u52a8\u3001\u88ab\u52a8\u3001\u65c1\u8def(\u6bd4\u5982\u8206\u60c5\u76d1\u63a7)\n\u76d1\u63a7\u7c7b\u578b\uff1a \u57fa\u7840\u76d1\u63a7\u3001\u670d\u52a1\u7aef\u76d1\u63a7\u3001\u5ba2\u6237\u7aef\u76d1\u63a7\u3001\n\u76d1\u63a7\u3001\u7528\u6237\u7aef\u76d1\u63a7\n\u76d1\u63a7\u7684\u76ee\u6807\uff1a\u5168\u3001\u5757\u3001\u51c6\n\u6838\u5fc3\u6307\u6807\uff1a\u8bf7\u6c42\u91cf\u3001\u6210\u529f\u7387\u3001\u8017\u65f6\n\n\n\n\u300a\u5f00\u6e90\u8fd8\u662f\u5546\u7528\uff1f\u5341\u5927\u4e91\u8fd0\u7ef4\u76d1\u63a7\u5de5\u5177\u6a2a\u8bc4\u300b\n\nZabbix\u3001Nagios\u3001Ganglia\u3001Zenoss\u3001Open-falcon\u3001\u76d1\u63a7\u5b9d\u3001 360\u7f51\u7ad9\u670d\u52a1\u76d1\u63a7\u3001\u963f\u91cc\u4e91\u76d1\u63a7\u3001\u767e\u5ea6\u4e91\u89c2\u6d4b\u3001\u5c0f\u871c\u8702\u7f51\u7ad9\u76d1\u6d4b\u7b49\u3002\n\n\n\n\u300a\u76d1\u63a7\u62a5\u8b66\u7cfb\u7edf\u642d\u5efa\u53ca\u4e8c\u6b21\u5f00\u53d1\u7ecf\u9a8c\u300b\n\n\n\u547d\u4ee4\u884c\u76d1\u63a7\u5de5\u5177\n\n\n\u300a\u5e38\u7528\u547d\u4ee4\u884c\u76d1\u63a7\u5de5\u5177\u300b\n\ntop\u3001sar\u3001tsar\u3001nload\n\n\n\n\u300a20\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\u76d1\u63a7 Linux \u7cfb\u7edf\u6027\u80fd\u300b\n\n\n\u300aJVM\u6027\u80fd\u8c03\u4f18\u76d1\u63a7\u5de5\u5177jps\u3001jstack\u3001jmap\u3001jhat\u3001jstat\u3001hprof\u4f7f\u7528\u8be6\u89e3\u300b\n\n\nAPM\nAPM \u2014  Application Performance Management\n\n\n\u300aDapper\uff0c\u5927\u89c4\u6a21\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u8ddf\u8e2a\u7cfb\u7edf\u300b\n\n\nCNCF OpenTracing\uff0c\u4e2d\u6587\u7248\n\n\n\u4e3b\u8981\u5f00\u6e90\u8f6f\u4ef6\uff0c\u6309\u5b57\u6bcd\u6392\u5e8f\n\nApache SkyWalking\nCAT\nCNCF jaeger\nPinpoint\nZipkin\n\n\n\n\u300a\u5f00\u6e90APM\u6280\u672f\u9009\u578b\u4e0e\u5b9e\u6218\u300b\n\n\u4e3b\u8981\u57fa\u4e8e Google\u7684Dapper\uff08\u5927\u89c4\u6a21\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u8ddf\u8e2a\u7cfb\u7edf\uff09 \u601d\u60f3\u3002\n\n\n\n\u7edf\u8ba1\u5206\u6790\n\n\n\u300a\u6d41\u91cf\u7edf\u8ba1\u7684\u57fa\u7840\uff1a\u57cb\u70b9\u300b\n\n\u5e38\u7528\u6307\u6807\uff1a\u8bbf\u95ee\u4e0e\u8bbf\u5ba2\u3001\u505c\u7559\u65f6\u957f\u3001\u8df3\u51fa\u7387\u3001\u9000\u51fa\u7387\u3001\u8f6c\u5316\u7387\u3001\u53c2\u4e0e\u5ea6\n\n\n\n\u300aAPP\u57cb\u70b9\u5e38\u7528\u7684\u7edf\u8ba1\u5de5\u5177\u3001\u57cb\u70b9\u76ee\u6807\u548c\u57cb\u70b9\u5185\u5bb9\u300b\n\n\u7b2c\u4e09\u65b9\u7edf\u8ba1\uff1a\u53cb\u76df\u3001\u767e\u5ea6\u79fb\u52a8\u3001\u9b54\u65b9\u3001App Annie\u3001talking data\u3001\u795e\u7b56\u6570\u636e\u7b49\u3002\n\n\n\n\u300a\u7f8e\u56e2\u70b9\u8bc4\u524d\u7aef\u65e0\u75d5\u57cb\u70b9\u5b9e\u8df5\u300b\n\n\u6240\u8c13\u65e0\u75d5\u3001\u5373\u901a\u8fc7\u53ef\u89c6\u5316\u5de5\u5177\u914d\u7f6e\u91c7\u96c6\u8282\u70b9\uff0c\u5728\u524d\u7aef\u81ea\u52a8\u89e3\u6790\u914d\u7f6e\u5e76\u4e0a\u62a5\u57cb\u70b9\u6570\u636e\uff0c\u800c\u975e\u786c\u7f16\u7801\u3002\n\n\n\n\u6301\u7eed\u96c6\u6210(CI/CD)\n\n\u300a\u6301\u7eed\u96c6\u6210\u662f\u4ec0\u4e48\uff1f\u300b\n\u300a8\u4e2a\u6d41\u884c\u7684\u6301\u7eed\u96c6\u6210\u5de5\u5177\u300b\n\nJenkins\n\n\u300a\u4f7f\u7528Jenkins\u8fdb\u884c\u6301\u7eed\u96c6\u6210\u300b\n\n\u73af\u5883\u5206\u79bb\n\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u751f\u6210\u73af\u5883\u5206\u79bb\u3002\n\n\u300a\u5f00\u53d1\u73af\u5883\u3001\u751f\u4ea7\u73af\u5883\u3001\u6d4b\u8bd5\u73af\u5883\u7684\u57fa\u672c\u7406\u89e3\u548c\u533a\u300b\n\n\u81ea\u52a8\u5316\u8fd0\u7ef4\nAnsible\n\n\u300aAnsible\u4e2d\u6587\u6743\u5a01\u6307\u5357\u300b\n\u300aAnsible\u57fa\u7840\u914d\u7f6e\u548c\u4f01\u4e1a\u7ea7\u9879\u76ee\u5b9e\u7528\u6848\u4f8b\u300b\n\npuppet\n\n\u300a\u81ea\u52a8\u5316\u8fd0\u7ef4\u5de5\u5177\u2014\u2014puppet\u8be6\u89e3\u300b\n\nchef\n\n\u300aChef \u7684\u5b89\u88c5\u4e0e\u4f7f\u7528\u300b\n\n\u6d4b\u8bd5\nTDD \u7406\u8bba\n\n\u300a\u6df1\u5ea6\u89e3\u8bfb - TDD\uff08\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\uff09\u300b\n\n\u57fa\u4e8e\u6d4b\u8bd5\u7528\u4f8b\u7f16\u7801\u529f\u80fd\u4ee3\u7801\uff0cXP\uff08Extreme Programming\uff09\u7684\u6838\u5fc3\u5b9e\u8df5.\n\u597d\u5904\uff1a\u4e00\u6b21\u5173\u6ce8\u4e00\u4e2a\u70b9\uff0c\u964d\u4f4e\u601d\u7ef4\u8d1f\u62c5\uff1b\u8fce\u63a5\u9700\u6c42\u53d8\u5316\u6216\u6539\u5584\u4ee3\u7801\u7684\u8bbe\u8ba1\uff1b\u63d0\u524d\u6f84\u6e05\u9700\u6c42\uff1b\u5feb\u901f\u53cd\u9988\uff1b\n\n\n\n\u5355\u5143\u6d4b\u8bd5\n\n\u300aJava\u5355\u5143\u6d4b\u8bd5\u4e4bJUnit\u7bc7\u300b\n\u300aJUnit 4 \u4e0e TestNG \u5bf9\u6bd4\u300b\n\nTestNG \u8986\u76d6 JUnit \u529f\u80fd\uff0c\u9002\u7528\u4e8e\u66f4\u590d\u6742\u7684\u573a\u666f\u3002\n\n\n\u300a\u5355\u5143\u6d4b\u8bd5\u4e3b\u8981\u7684\u6d4b\u8bd5\u529f\u80fd\u70b9\u300b\n\n\u6a21\u5757\u63a5\u53e3\u6d4b\u8bd5\u3001\u5c40\u90e8\u6570\u636e\u7ed3\u6784\u6d4b\u8bd5\u3001\u8def\u5f84\u6d4b\u8bd5 \u3001\u9519\u8bef\u5904\u7406\u6d4b\u8bd5\u3001\u8fb9\u754c\u6761\u4ef6\u6d4b\u8bd5 \u3002\n\n\n\n\u538b\u529b\u6d4b\u8bd5\n\n\u300aApache ab \u6d4b\u8bd5\u4f7f\u7528\u6307\u5357\u300b\n\u300a\u5927\u578b\u7f51\u7ad9\u538b\u529b\u6d4b\u8bd5\u53ca\u4f18\u5316\u65b9\u6848\u300b\n\u300a10\u5927\u4e3b\u6d41\u538b\u529b/\u8d1f\u8f7d/\u6027\u80fd\u6d4b\u8bd5\u5de5\u5177\u63a8\u8350\u300b\n\u300a\u771f\u5b9e\u6d41\u91cf\u538b\u6d4b\u5de5\u5177 tcpcopy\u5e94\u7528\u6d45\u6790\u300b\n\u300anGrinder \u7b80\u6613\u4f7f\u7528\u6559\u7a0b\u300b\n\n\u5168\u94fe\u8def\u538b\u6d4b\n\n\u300a\u4eac\u4e1c618\uff1a\u5347\u7ea7\u5168\u94fe\u8def\u538b\u6d4b\u65b9\u6848\uff0c\u6253\u9020\u519b\u6f14\u673a\u5668\u4ebaForceBot\u300b\n\u300a\u997f\u4e86\u4e48\u5168\u94fe\u8def\u538b\u6d4b\u7684\u63a2\u7d22\u4e0e\u5b9e\u8df5\u300b\n\u300a\u56db\u5927\u8bed\u8a00\uff0c\u516b\u5927\u6846\u67b6\uff5c\u6ef4\u6ef4\u5168\u94fe\u8def\u538b\u6d4b\u89e3\u51b3\u4e4b\u9053\u300b\n\u300a\u5168\u94fe\u8def\u538b\u6d4b\u7ecf\u9a8c\u300b\n\nA/B \u3001\u7070\u5ea6\u3001\u84dd\u7eff\u6d4b\u8bd5\n\n\n\u300a\u6280\u672f\u5e72\u8d27 | AB \u6d4b\u8bd5\u548c\u7070\u5ea6\u53d1\u5e03\u63a2\u7d22\u53ca\u5b9e\u8df5\u300b\n\n\n\u300anginx \u6839\u636eIP \u8fdb\u884c\u7070\u5ea6\u53d1\u5e03\u300b\n\n\n\u300a\u84dd\u7eff\u90e8\u7f72\u3001A/B \u6d4b\u8bd5\u4ee5\u53ca\u7070\u5ea6\u53d1\u5e03\u300b\n\n\n\u865a\u62df\u5316\n\n\u300aVPS\u7684\u4e09\u79cd\u865a\u62df\u6280\u672fOpenVZ\u3001Xen\u3001KVM\u4f18\u7f3a\u70b9\u6bd4\u8f83\u300b\n\nKVM\n\n\u300aKVM\u8be6\u89e3\uff0c\u592a\u8be6\u7ec6\u592a\u6df1\u5165\u4e86\uff0c\u7ecf\u5178\u300b\n\u300a\u3010\u56fe\u6587\u3011KVM \u865a\u62df\u673a\u5b89\u88c5\u8be6\u89e3\u300b\n\nXen\n\n\u300aXen\u865a\u62df\u5316\u57fa\u672c\u539f\u7406\u8be6\u89e3\u300b\n\nOpenVZ\n\n\u300a\u5f00\u6e90Linux\u5bb9\u5668 OpenVZ \u5feb\u901f\u4e0a\u624b\u6307\u5357\u300b\n\n\u5bb9\u5668\u6280\u672f\nDocker\n\n\u300a\u51e0\u5f20\u56fe\u5e2e\u4f60\u7406\u89e3 docker \u57fa\u672c\u539f\u7406\u53ca\u5feb\u901f\u5165\u95e8\u300b\n\u300aDocker \u6838\u5fc3\u6280\u672f\u4e0e\u5b9e\u73b0\u539f\u7406\u300b\n\u300aDocker \u6559\u7a0b\u300b\n\n\u4e91\u6280\u672f\nOpenStack\n\n\u300aOpenStack\u6784\u67b6\u77e5\u8bc6\u68b3\u7406\u300b\n\nDevOps\n\n\u300a\u4e00\u5206\u949f\u544a\u8bc9\u4f60\u7a76\u7adfDevOps\u662f\u4ec0\u4e48\u9b3c\uff1f\u300b\n\u300aDevOps\u8be6\u89e3\u300b\n\n\u6587\u6863\u7ba1\u7406\n\nConfluence-\u6536\u8d39\u6587\u6863\u7ba1\u7406\u7cfb\u7edf\nGitLab?\nWiki\n\n\u4e2d\u95f4\u4ef6\nWeb Server\nNginx\n\n\n\u300aNgnix\u7684\u57fa\u672c\u5b66\u4e60-\u591a\u8fdb\u7a0b\u548cApache\u7684\u6bd4\u8f83\u300b\n\nNginx \u901a\u8fc7\u5f02\u6b65\u975e\u963b\u585e\u7684\u4e8b\u4ef6\u5904\u7406\u673a\u5236\u5b9e\u73b0\u9ad8\u5e76\u53d1\u3002Apache \u6bcf\u4e2a\u8bf7\u6c42\u72ec\u5360\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u975e\u5e38\u6d88\u8017\u7cfb\u7edf\u8d44\u6e90\u3002\n\u4e8b\u4ef6\u9a71\u52a8\u9002\u5408\u4e8eIO\u5bc6\u96c6\u578b\u670d\u52a1(Nginx)\uff0c\u591a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u9002\u5408\u4e8eCPU\u5bc6\u96c6\u578b\u670d\u52a1(Apache)\uff0c\u6240\u4ee5Nginx\u9002\u5408\u505a\u53cd\u5411\u4ee3\u7406\uff0c\u800c\u975eweb\u670d\u52a1\u5668\u4f7f\u7528\u3002\n\n\n\n\u300anginx\u4e0eApache\u7684\u5bf9\u6bd4\u4ee5\u53ca\u4f18\u7f3a\u70b9\u300b\n\nnginx\u53ea\u9002\u5408\u9759\u6001\u548c\u53cd\u5411\u4ee3\u7406\uff0c\u4e0d\u9002\u5408\u5904\u7406\u52a8\u6001\u8bf7\u6c42\u3002\n\n\n\nOpenResty\n\n\u5b98\u65b9\u7f51\u7ad9\n\u300a\u6d45\u8c08 OpenResty\u300b\n\n\u901a\u8fc7 Lua \u6a21\u5757\u53ef\u4ee5\u5728Nginx\u4e0a\u8fdb\u884c\u5f00\u53d1\u3002\n\n\nagentzh \u7684 Nginx \u6559\u7a0b\n\nTengine\n\n\u5b98\u65b9\u7f51\u7ad9\n\nApache Httpd\n\n\u5b98\u65b9\u7f51\u7ad9\n\nTomcat\n\u67b6\u6784\u539f\u7406\n\n\n\u300aTOMCAT\u539f\u7406\u8be6\u89e3\u53ca\u8bf7\u6c42\u8fc7\u7a0b\u300b\n\n\n\u300aTomcat\u670d\u52a1\u5668\u539f\u7406\u8be6\u89e3\u300b\n\n\n\u300aTomcat \u7cfb\u7edf\u67b6\u6784\u4e0e\u8bbe\u8ba1\u6a21\u5f0f,\u7b2c 1 \u90e8\u5206: \u5de5\u4f5c\u539f\u7406\u300b\n\n\n\u300a\u56db\u5f20\u56fe\u5e26\u4f60\u4e86\u89e3Tomcat\u7cfb\u7edf\u67b6\u6784\u300b\n\n\n\u300aJBoss vs. Tomcat: Choosing A Java Application Server\u300b\n\nTomcat \u662f\u8f7b\u91cf\u7ea7\u7684 Serverlet \u5bb9\u5668\uff0c\u6ca1\u6709\u5b9e\u73b0\u5168\u90e8 JEE \u7279\u6027\uff08\u6bd4\u5982\u6301\u4e45\u5316\u548c\u4e8b\u52a1\u5904\u7406\uff09\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u7ec4\u4ef6\u4ee3\u66ff\uff0c\u6bd4\u5982Spring\u3002\nJboss \u5b9e\u73b0\u5168\u90e8\u4e86JEE\u7279\u6027\uff0c\u8f6f\u4ef6\u5f00\u6e90\u514d\u8d39\u3001\u6587\u6863\u6536\u8d39\u3002\n\n\n\n\u8c03\u4f18\u65b9\u6848\n\n\n\u300aTomcat \u8c03\u4f18\u65b9\u6848\u300b\n\n\u542f\u52a8NIO\u6a21\u5f0f\uff08\u6216\u8005APR\uff09\uff1b\u8c03\u6574\u7ebf\u7a0b\u6c60\uff1b\u7981\u7528AJP\u8fde\u63a5\u5668\uff08Nginx+tomcat\u7684\u67b6\u6784\uff0c\u4e0d\u9700\u8981AJP\uff09\uff1b\n\n\n\n\u300atomcat http\u534f\u8bae\u4e0eajp\u534f\u8bae\u300b\n\n\n\u300aAJP\u4e0eHTTP\u6bd4\u8f83\u548c\u5206\u6790\u300b\n\nAJP \u534f\u8bae\uff088009\u7aef\u53e3\uff09\u7528\u4e8e\u964d\u4f4e\u548c\u524d\u7aefServer\uff08\u5982Apache\uff0c\u800c\u4e14\u9700\u8981\u652f\u6301AJP\u534f\u8bae\uff09\u7684\u8fde\u63a5\u6570(\u524d\u7aef)\uff0c\u901a\u8fc7\u957f\u8fde\u63a5\u63d0\u9ad8\u6027\u80fd\u3002\n\u5e76\u53d1\u9ad8\u65f6\uff0cAJP\u534f\u8bae\u4f18\u4e8eHTTP\u534f\u8bae\u3002\n\n\n\nJetty\n\n\u300aJetty \u7684\u5de5\u4f5c\u539f\u7406\u4ee5\u53ca\u4e0e Tomcat \u7684\u6bd4\u8f83\u300b\n\u300ajetty\u548ctomcat\u4f18\u52bf\u6bd4\u8f83\u300b\n\n\u67b6\u6784\u6bd4\u8f83:Jetty\u7684\u67b6\u6784\u6bd4Tomcat\u7684\u66f4\u4e3a\u7b80\u5355\u3002\n\u6027\u80fd\u6bd4\u8f83\uff1aJetty\u548cTomcat\u6027\u80fd\u65b9\u9762\u5dee\u5f02\u4e0d\u5927\uff0cJetty\u9ed8\u8ba4\u91c7\u7528NIO\u7ed3\u675f\u5728\u5904\u7406I/O\u8bf7\u6c42\u4e0a\u66f4\u5360\u4f18\u52bf\uff0cTomcat\u9ed8\u8ba4\u91c7\u7528BIO\u5904\u7406I/O\u8bf7\u6c42\uff0cTomcat\u9002\u5408\u5904\u7406\u5c11\u6570\u975e\u5e38\u7e41\u5fd9\u7684\u94fe\u63a5\uff0c\u5904\u7406\u9759\u6001\u8d44\u6e90\u65f6\u6027\u80fd\u8f83\u5dee\u3002\n\u5176\u4ed6\u65b9\u9762\uff1aJetty\u7684\u5e94\u7528\u66f4\u52a0\u5feb\u901f\uff0c\u4fee\u6539\u7b80\u5355\uff0c\u5bf9\u65b0\u7684Servlet\u89c4\u8303\u7684\u652f\u6301\u8f83\u597d;Tomcat \u5bf9JEE\u548cServlet \u652f\u6301\u66f4\u52a0\u5168\u9762\u3002\n\n\n\n\u7f13\u5b58\n\n\u300a\u7f13\u5b58\u5931\u6548\u7b56\u7565\uff08FIFO \u3001LRU\u3001LFU\u4e09\u79cd\u7b97\u6cd5\u7684\u533a\u522b\uff09\u300b\n\n\u672c\u5730\u7f13\u5b58\n\n\n\u300aHashMap\u672c\u5730\u7f13\u5b58\u300b\n\n\n\u300aEhCache\u672c\u5730\u7f13\u5b58\u300b\n\n\u5806\u5185\u3001\u5806\u5916\u3001\u78c1\u76d8\u4e09\u7ea7\u7f13\u5b58\u3002\n\u53ef\u6309\u7167\u7f13\u5b58\u7a7a\u95f4\u5bb9\u91cf\u8fdb\u884c\u8bbe\u7f6e\u3002\n\u6309\u7167\u65f6\u95f4\u3001\u6b21\u6570\u7b49\u8fc7\u671f\u7b56\u7565\u3002\n\n\n\n\u300aGuava Cache\u300b\n\n\u7b80\u5355\u8f7b\u91cf\u3001\u65e0\u5806\u5916\u3001\u78c1\u76d8\u7f13\u5b58\u3002\n\n\n\n\u300aNginx\u672c\u5730\u7f13\u5b58\u300b\n\n\n\u300aPagespeed\u2014\u61d2\u4eba\u5de5\u5177\uff0c\u670d\u52a1\u5668\u7aef\u52a0\u901f\u300b\n\n\n\u5ba2\u6237\u7aef\u7f13\u5b58\n\n\n\u300a\u6d4f\u89c8\u5668\u7aef\u7f13\u5b58\u300b\n\n\u4e3b\u8981\u662f\u5229\u7528 Cache-Control \u53c2\u6570\u3002\n\n\n\n\u300aH5 \u548c\u79fb\u52a8\u7aef WebView \u7f13\u5b58\u673a\u5236\u89e3\u6790\u4e0e\u5b9e\u6218\u300b\n\n\n\u670d\u52a1\u7aef\u7f13\u5b58\nWeb\u7f13\u5b58\n\nnuster - nuster cache\nvarnish - varnish cache\nsquid - squid cache\n\nMemcached\n\n\n\u300aMemcached \u6559\u7a0b\u300b\n\n\n\u300a\u6df1\u5165\u7406\u89e3Memcached\u539f\u7406\u300b\n\n\u91c7\u7528\u591a\u8def\u590d\u7528\u6280\u672f\u63d0\u9ad8\u5e76\u53d1\u6027\u3002\nslab\u5206\u914d\u7b97\u6cd5\uff1a memcached\u7ed9Slab\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u9ed8\u8ba4\u662f1MB\u3002\u5206\u914d\u7ed9Slab\u4e4b\u540e \u628aslab\u7684\u5207\u5206\u6210\u5927\u5c0f\u76f8\u540c\u7684chunk\uff0cChunk\u662f\u7528\u4e8e\u7f13\u5b58\u8bb0\u5f55\u7684\u5185\u5b58\u7a7a\u95f4\uff0cChunk \u7684\u5927\u5c0f\u9ed8\u8ba4\u6309\u71671.25\u500d\u7684\u901f\u5ea6\u9012\u589e\u3002\u597d\u5904\u662f\u4e0d\u4f1a\u9891\u7e41\u7533\u8bf7\u5185\u5b58\uff0c\u63d0\u9ad8IO\u6548\u7387\uff0c\u574f\u5904\u662f\u4f1a\u6709\u4e00\u5b9a\u7684\u5185\u5b58\u6d6a\u8d39\u3002\n\n\n\n\u300aMemcached\u8f6f\u4ef6\u5de5\u4f5c\u539f\u7406\u300b\n\n\n\u300aMemcache\u6280\u672f\u5206\u4eab\uff1a\u4ecb\u7ecd\u3001\u4f7f\u7528\u3001\u5b58\u50a8\u3001\u7b97\u6cd5\u3001\u4f18\u5316\u3001\u547d\u4e2d\u7387\u300b\n\n\n\u300amemcache \u4e2d add \u3001 set \u3001replace \u7684\u533a\u522b\u300b\n\n\u533a\u522b\u5728\u4e8e\u5f53key\u5b58\u5728\u8fd8\u662f\u4e0d\u5b58\u5728\u65f6\uff0c\u8fd4\u56de\u503c\u662ftrue\u548cfalse\u7684\u3002\n\n\n\n\u300amemcached\u5168\u9762\u5256\u6790\u300b\n\n\nRedis\n\n\n\u300aRedis \u6559\u7a0b\u300b\n\n\n\u300aredis\u5e95\u5c42\u539f\u7406\u300b\n\n\u4f7f\u7528 ziplist \u5b58\u50a8\u94fe\u8868\uff0cziplist\u662f\u4e00\u79cd\u538b\u7f29\u94fe\u8868\uff0c\u5b83\u7684\u597d\u5904\u662f\u66f4\u80fd\u8282\u7701\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u4e3a\u5b83\u6240\u5b58\u50a8\u7684\u5185\u5bb9\u90fd\u662f\u5728\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\u5f53\u4e2d\u7684\u3002\n\u4f7f\u7528 skiplist(\u8df3\u8dc3\u8868)\u6765\u5b58\u50a8\u6709\u5e8f\u96c6\u5408\u5bf9\u8c61\u3001\u67e5\u627e\u4e0a\u5148\u4ece\u9ad8Level\u67e5\u8d77\u3001\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7ea2\u9ed1\u6811\u76f8\u5f53\uff0c\u5b9e\u73b0\u5bb9\u6613\uff0c\u65e0\u9501\u3001\u5e76\u53d1\u6027\u597d\u3002\n\n\n\n\u300aRedis\u6301\u4e45\u5316\u65b9\u5f0f\u300b\n\nRDB\u65b9\u5f0f\uff1a\u5b9a\u671f\u5907\u4efd\u5feb\u7167\uff0c\u5e38\u7528\u4e8e\u707e\u96be\u6062\u590d\u3002\u4f18\u70b9\uff1a\u901a\u8fc7fork\u51fa\u7684\u8fdb\u7a0b\u8fdb\u884c\u5907\u4efd\uff0c\u4e0d\u5f71\u54cd\u4e3b\u8fdb\u7a0b\u3001RDB \u5728\u6062\u590d\u5927\u6570\u636e\u96c6\u65f6\u7684\u901f\u5ea6\u6bd4 AOF \u7684\u6062\u590d\u901f\u5ea6\u8981\u5feb\u3002\u7f3a\u70b9\uff1a\u4f1a\u4e22\u6570\u636e\u3002\nAOF\u65b9\u5f0f\uff1a\u4fdd\u5b58\u64cd\u4f5c\u65e5\u5fd7\u65b9\u5f0f\u3002\u4f18\u70b9\uff1a\u6062\u590d\u65f6\u6570\u636e\u4e22\u5931\u5c11\uff0c\u7f3a\u70b9\uff1a\u6587\u4ef6\u5927\uff0c\u56de\u590d\u6162\u3002\n\u4e5f\u53ef\u4ee5\u4e24\u8005\u7ed3\u5408\u4f7f\u7528\u3002\n\n\n\n\u300a\u5206\u5e03\u5f0f\u7f13\u5b58--\u5e8f\u52173--\u539f\u5b50\u64cd\u4f5c\u4e0eCAS\u4e50\u89c2\u9501\u300b\n\n\n\u67b6\u6784\n\n\u300aRedis\u5355\u7ebf\u7a0b\u67b6\u6784\u300b\n\n\u56de\u6536\u7b56\u7565\n\n\u300aredis\u7684\u56de\u6536\u7b56\u7565\u300b\n\nTair\n\n\u5b98\u65b9\u7f51\u7ad9\n\u300aTair\u548cRedis\u7684\u5bf9\u6bd4\u300b\n\u7279\u70b9\uff1a\u53ef\u4ee5\u914d\u7f6e\u5907\u4efd\u8282\u70b9\u6570\u76ee\uff0c\u901a\u8fc7\u5f02\u6b65\u540c\u6b65\u5230\u5907\u4efd\u8282\u70b9\n\u4e00\u81f4\u6027Hash\u7b97\u6cd5\u3002\n\u67b6\u6784\uff1a\u548cHadoop \u7684\u8bbe\u8ba1\u601d\u60f3\u7c7b\u4f3c\uff0c\u6709Configserver\uff0cDataServer\uff0cConfigserver \u901a\u8fc7\u5fc3\u8df3\u6765\u68c0\u6d4b\uff0cConfigserver\u4e5f\u6709\u4e3b\u5907\u5173\u7cfb\u3002\n\n\u51e0\u79cd\u5b58\u50a8\u5f15\u64ce:\n\nMDB\uff0c\u5b8c\u5168\u5185\u5b58\u6027\uff0c\u53ef\u4ee5\u7528\u6765\u5b58\u50a8Session\u7b49\u6570\u636e\u3002\nRdb\uff08\u7c7b\u4f3c\u4e8eRedis\uff09\uff0c\u8f7b\u91cf\u5316\uff0c\u53bb\u9664\u4e86aof\u4e4b\u7c7b\u7684\u64cd\u4f5c\uff0c\u652f\u6301Restfull\u64cd\u4f5c\nLDB\uff08LevelDB\u5b58\u50a8\u5f15\u64ce\uff09\uff0c\u6301\u4e45\u5316\u5b58\u50a8\uff0cLDB \u4f5c\u4e3ardb\u7684\u6301\u4e45\u5316\uff0cgoogle\u5b9e\u73b0\uff0c\u6bd4\u8f83\u9ad8\u6548\uff0c\u7406\u8bba\u57fa\u7840\u662fLSM(Log-Structured-Merge Tree)\u7b97\u6cd5\uff0c\u73b0\u5728\u5185\u5b58\u4e2d\u4fee\u6539\u6570\u636e\uff0c\u8fbe\u5230\u4e00\u5b9a\u91cf\u65f6\uff08\u548c\u5185\u5b58\u6c47\u603b\u7684\u65e7\u6570\u636e\u4e00\u540c\u5199\u5165\u78c1\u76d8\uff09\u518d\u5199\u5165\u78c1\u76d8\uff0c\u5b58\u50a8\u66f4\u52a0\u9ad8\u6548\uff0c\u53bf\u6bd4\u55bbHash\u7b97\u6cd5\u3002\nTair\u91c7\u7528\u5171\u4eab\u5185\u5b58\u6765\u5b58\u50a8\u6570\u636e\uff0c\u5982\u679c\u670d\u52a1\u6302\u6389\uff08\u975e\u670d\u52a1\u5668\uff09\uff0c\u91cd\u542f\u670d\u52a1\u4e4b\u540e\uff0c\u6570\u636e\u4ea6\u7136\u8fd8\u5728\u3002\n\n\u6d88\u606f\u961f\u5217\n\n\n\u300a\u6d88\u606f\u961f\u5217-\u63a8/\u62c9\u6a21\u5f0f\u5b66\u4e60 & ActiveMQ\u53caJMS\u5b66\u4e60\u300b\n\nRabbitMQ \u6d88\u8d39\u8005\u9ed8\u8ba4\u662f\u63a8\u6a21\u5f0f\uff08\u4e5f\u652f\u6301\u62c9\u6a21\u5f0f\uff09\u3002\nKafka \u9ed8\u8ba4\u662f\u62c9\u6a21\u5f0f\u3002\nPush\u65b9\u5f0f\uff1a\u4f18\u70b9\u662f\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5feb\u5730\u5c06\u6d88\u606f\u53d1\u9001\u7ed9\u6d88\u8d39\u8005\uff0c\u7f3a\u70b9\u662f\u5982\u679c\u6d88\u8d39\u8005\u5904\u7406\u80fd\u529b\u8ddf\u4e0d\u4e0a\uff0c\u6d88\u8d39\u8005\u7684\u7f13\u51b2\u533a\u53ef\u80fd\u4f1a\u6ea2\u51fa\u3002\nPull\u65b9\u5f0f\uff1a\u4f18\u70b9\u662f\u6d88\u8d39\u7aef\u53ef\u4ee5\u6309\u5904\u7406\u80fd\u529b\u8fdb\u884c\u62c9\u53bb\uff0c\u7f3a\u70b9\u662f\u4f1a\u589e\u52a0\u6d88\u606f\u5ef6\u8fdf\u3002\n\n\n\n\u300aKafka\u3001RabbitMQ\u3001RocketMQ\u7b49\u6d88\u606f\u4e2d\u95f4\u4ef6\u7684\u5bf9\u6bd4 \u2014\u2014 \u6d88\u606f\u53d1\u9001\u6027\u80fd\u548c\u533a\u522b\u300b\n\n\n\u6d88\u606f\u603b\u7ebf\n\u6d88\u606f\u603b\u7ebf\u76f8\u5f53\u4e8e\u5728\u6d88\u606f\u961f\u5217\u4e4b\u4e0a\u505a\u4e86\u4e00\u5c42\u5c01\u88c5\uff0c\u7edf\u4e00\u5165\u53e3\uff0c\u7edf\u4e00\u7ba1\u63a7\u3001\u7b80\u5316\u63a5\u5165\u6210\u672c\u3002\n\n\u300a\u6d88\u606f\u603b\u7ebfVS\u6d88\u606f\u961f\u5217\u300b\n\n\u6d88\u606f\u7684\u987a\u5e8f\n\n\u300a\u5982\u4f55\u4fdd\u8bc1\u6d88\u8d39\u8005\u63a5\u6536\u6d88\u606f\u7684\u987a\u5e8f\u300b\n\nRabbitMQ\n\u652f\u6301\u4e8b\u52a1\uff0c\u63a8\u62c9\u6a21\u5f0f\u90fd\u662f\u652f\u6301\u3001\u9002\u5408\u9700\u8981\u53ef\u9760\u6027\u6d88\u606f\u4f20\u8f93\u7684\u573a\u666f\u3002\n\n\u300aRabbitMQ\u7684\u5e94\u7528\u573a\u666f\u4ee5\u53ca\u57fa\u672c\u539f\u7406\u4ecb\u7ecd\u300b\n\u300a\u6d88\u606f\u961f\u5217\u4e4b RabbitMQ\u300b\n\u300aRabbitMQ\u4e4b\u6d88\u606f\u786e\u8ba4\u673a\u5236\uff08\u4e8b\u52a1+Confirm\uff09\u300b\n\nRocketMQ\nJava\u5b9e\u73b0\uff0c\u63a8\u62c9\u6a21\u5f0f\u90fd\u662f\u652f\u6301\uff0c\u541e\u5410\u91cf\u900a\u4e8eKafka\u3002\u53ef\u4ee5\u4fdd\u8bc1\u6d88\u606f\u987a\u5e8f\u3002\n\n\u300aRocketMQ \u5b9e\u6218\u4e4b\u5feb\u901f\u5165\u95e8\u300b\n\u300aRocketMQ \u6e90\u7801\u89e3\u6790\u300b\n\nActiveMQ\n\u7eafJava\u5b9e\u73b0\uff0c\u517c\u5bb9JMS\uff0c\u53ef\u4ee5\u5185\u5d4c\u4e8eJava\u5e94\u7528\u4e2d\u3002\n\n\u300aActiveMQ\u6d88\u606f\u961f\u5217\u4ecb\u7ecd\u300b\n\nKafka\n\u9ad8\u541e\u5410\u91cf\u3001\u91c7\u7528\u62c9\u6a21\u5f0f\u3002\u9002\u5408\u9ad8IO\u573a\u666f\uff0c\u6bd4\u5982\u65e5\u5fd7\u540c\u6b65\u3002\n\n\u5b98\u65b9\u7f51\u7ad9\n\u300a\u5404\u6d88\u606f\u961f\u5217\u5bf9\u6bd4\uff0cKafka\u6df1\u5ea6\u89e3\u6790\uff0c\u4f17\u4eba\u63a8\u8350\uff0c\u7cbe\u5f69\u597d\u6587\uff01\u300b\n\u300aKafka\u5206\u533a\u673a\u5236\u4ecb\u7ecd\u4e0e\u793a\u4f8b\u300b\n\nRedis \u6d88\u606f\u63a8\u9001\n\u751f\u4ea7\u8005\u3001\u6d88\u8d39\u8005\u6a21\u5f0f\u5b8c\u5168\u662f\u5ba2\u6237\u7aef\u884c\u4e3a\uff0clist \u548c \u62c9\u6a21\u5f0f\u5b9e\u73b0\uff0c\u963b\u585e\u7b49\u5f85\u91c7\u7528 blpop \u6307\u4ee4\u3002\n\n\u300aRedis\u5b66\u4e60\u7b14\u8bb0\u4e4b\u5341\uff1aRedis\u7528\u4f5c\u6d88\u606f\u961f\u5217\u300b\n\nZeroMQ\nTODO\n\u5b9a\u65f6\u8c03\u5ea6\n\u5355\u673a\u5b9a\u65f6\u8c03\u5ea6\n\n\n\u300alinux\u5b9a\u65f6\u4efb\u52a1cron\u914d\u7f6e\u300b\n\n\n\u300aLinux cron\u8fd0\u884c\u539f\u7406\u300b\n\nfork \u8fdb\u7a0b + sleep \u8f6e\u8be2\n\n\n\n\u300aQuartz\u4f7f\u7528\u603b\u7ed3\u300b\n\n\n\u300aQuartz\u6e90\u7801\u89e3\u6790 ---- \u89e6\u53d1\u5668\u6309\u65f6\u542f\u52a8\u539f\u7406\u300b\n\n\n\u300aquartz\u539f\u7406\u63ed\u79d8\u548c\u6e90\u7801\u89e3\u8bfb\u300b\n\n\u5b9a\u65f6\u8c03\u5ea6\u5728 QuartzSchedulerThread \u4ee3\u7801\u4e2d\uff0cwhile()\u65e0\u9650\u5faa\u73af\uff0c\u6bcf\u6b21\u5faa\u73af\u53d6\u51fa\u65f6\u95f4\u5c06\u5230\u7684trigger\uff0c\u89e6\u53d1\u5bf9\u5e94\u7684job\uff0c\u76f4\u5230\u8c03\u5ea6\u5668\u7ebf\u7a0b\u88ab\u5173\u95ed\u3002\n\n\n\n\u5206\u5e03\u5f0f\u5b9a\u65f6\u8c03\u5ea6\n\n\n\u300a\u8fd9\u4e9b\u4f18\u79c0\u7684\u56fd\u4ea7\u5206\u5e03\u5f0f\u4efb\u52a1\u8c03\u5ea6\u7cfb\u7edf\uff0c\u4f60\u7528\u8fc7\u51e0\u4e2a\uff1f\u300b\n\nopencron\u3001LTS\u3001XXL-JOB\u3001Elastic-Job\u3001Uncode-Schedule\u3001Antares\n\n\n\n\u300aQuartz\u4efb\u52a1\u8c03\u5ea6\u7684\u57fa\u672c\u5b9e\u73b0\u539f\u7406\u300b\n\nQuartz\u96c6\u7fa4\u4e2d\uff0c\u72ec\u7acb\u7684Quartz\u8282\u70b9\u5e76\u4e0d\u4e0e\u53e6\u4e00\u5176\u7684\u8282\u70b9\u6216\u662f\u7ba1\u7406\u8282\u70b9\u901a\u4fe1\uff0c\u800c\u662f\u901a\u8fc7\u76f8\u540c\u7684\u6570\u636e\u5e93\u8868\u6765\u611f\u77e5\u5230\u53e6\u4e00Quartz\u5e94\u7528\u7684\n\n\n\n\u300aElastic-Job-Lite \u6e90\u7801\u89e3\u6790\u300b\n\n\n\u300aElastic-Job-Cloud \u6e90\u7801\u89e3\u6790\u300b\n\n\nRPC\n\n\n\u300a\u4ece\u96f6\u5f00\u59cb\u5b9e\u73b0RPC\u6846\u67b6 - RPC\u539f\u7406\u53ca\u5b9e\u73b0\u300b\n\n\u6838\u5fc3\u89d2\u8272\uff1aServer: \u66b4\u9732\u670d\u52a1\u7684\u670d\u52a1\u63d0\u4f9b\u65b9\u3001Client: \u8c03\u7528\u8fdc\u7a0b\u670d\u52a1\u7684\u670d\u52a1\u6d88\u8d39\u65b9\u3001Registry: \u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\u7684\u6ce8\u518c\u4e2d\u5fc3\u3002\n\n\n\n\u300a\u5206\u5e03\u5f0fRPC\u6846\u67b6\u6027\u80fd\u5927\u6bd4\u62fc dubbo\u3001motan\u3001rpcx\u3001gRPC\u3001thrift\u7684\u6027\u80fd\u6bd4\u8f83\u300b\n\n\nDubbo\n\n\u5b98\u65b9\u7f51\u7ad9\ndubbo\u5b9e\u73b0\u539f\u7406\u7b80\u5355\u4ecb\u7ecd\n\n** SPI **\nTODO\nThrift\n\n\u5b98\u65b9\u7f51\u7ad9\n\u300aThrift RPC\u8be6\u89e3\u300b\n\n\u652f\u6301\u591a\u8bed\u8a00\uff0c\u901a\u8fc7\u4e2d\u95f4\u8bed\u8a00\u5b9a\u4e49\u63a5\u53e3\u3002\n\n\n\ngRPC\n\u670d\u52a1\u7aef\u53ef\u4ee5\u8ba4\u8bc1\u52a0\u5bc6\uff0c\u5728\u5916\u7f51\u73af\u5883\u4e0b\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\u3002\n\n\u5b98\u65b9\u7f51\u7ad9\n\u300a\u4f60\u5e94\u8be5\u77e5\u9053\u7684RPC\u539f\u7406\u300b\n\n\u6570\u636e\u5e93\u4e2d\u95f4\u4ef6\nSharding Jdbc\n\n\u5b98\u7f51\n\u6e90\u7801\u89e3\u6790\n\n\u65e5\u5fd7\u7cfb\u7edf\n\u65e5\u5fd7\u641c\u96c6\n\n\u300a\u4ece\u96f6\u5f00\u59cb\u642d\u5efa\u4e00\u4e2aELKB\u65e5\u5fd7\u6536\u96c6\u7cfb\u7edf\u300b\n\u300a\u7528ELK\u642d\u5efa\u7b80\u5355\u7684\u65e5\u5fd7\u6536\u96c6\u5206\u6790\u7cfb\u7edf\u300b\n\u300a\u65e5\u5fd7\u6536\u96c6\u7cfb\u7edf-\u63a2\u7a76\u300b\n\n\u914d\u7f6e\u4e2d\u5fc3\n\n\nApollo - \u643a\u7a0b\u5f00\u6e90\u7684\u914d\u7f6e\u4e2d\u5fc3\u5e94\u7528\n\nSpring Boot \u548c Spring Cloud\n\u652f\u6301\u63a8\u3001\u62c9\u6a21\u5f0f\u66f4\u65b0\u914d\u7f6e\n\u652f\u6301\u591a\u79cd\u8bed\u8a00\n\n\n\n\u300a\u57fa\u4e8ezookeeper\u5b9e\u73b0\u7edf\u4e00\u914d\u7f6e\u7ba1\u7406\u300b\n\n\n\u300a Spring Cloud Config \u5206\u5e03\u5f0f\u914d\u7f6e\u4e2d\u5fc3\u4f7f\u7528\u6559\u7a0b\u300b\n\n\nservlet 3.0 \u5f02\u6b65\u7279\u6027\u53ef\u7528\u4e8e\u914d\u7f6e\u4e2d\u5fc3\u7684\u5ba2\u6237\u7aef\n\n\u300aservlet3.0 \u65b0\u7279\u6027\u2014\u2014\u5f02\u6b65\u5904\u7406\u300b\n\nAPI \u7f51\u5173\n\u4e3b\u8981\u804c\u8d23\uff1a\u8bf7\u6c42\u8f6c\u53d1\u3001\u5b89\u5168\u8ba4\u8bc1\u3001\u534f\u8bae\u8f6c\u6362\u3001\u5bb9\u707e\u3002\n\n\n\u300aAPI\u7f51\u5173\u90a3\u4e9b\u513f\u300b\n\n\n\u300a\u8c08API\u7f51\u5173\u7684\u80cc\u666f\u3001\u67b6\u6784\u4ee5\u53ca\u843d\u5730\u65b9\u6848\u300b\n\n\n\u300a\u4f7f\u7528Zuul\u6784\u5efaAPI Gateway\u300b\n\n\n\u300aSpring Cloud Gateway \u6e90\u7801\u89e3\u6790\u300b\n\n\n\u300aHTTP API\u7f51\u5173\u9009\u62e9\u4e4b\u4e00Kong\u4ecb\u7ecd\u300b\n\n\n\u7f51\u7edc\n\u534f\u8bae\nOSI \u4e03\u5c42\u534f\u8bae\n\n\u300aOSI\u4e03\u5c42\u534f\u8bae\u6a21\u578b\u3001TCP/IP\u56db\u5c42\u6a21\u578b\u5b66\u4e60\u7b14\u8bb0\u300b\n\nTCP/IP\n\n\u300a\u6df1\u5165\u6d45\u51fa TCP/IP \u534f\u8bae\u300b\n\u300aTCP\u534f\u8bae\u4e2d\u7684\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b\u300b\n\nHTTP\n\n\u300ahttp\u534f\u8bae\u8be6\u89e3(\u8d85\u8be6\u7ec6)\u300b\n\nHTTP2.0\n\n\u300aHTTP 2.0 \u539f\u7406\u8be6\u7ec6\u5206\u6790\u300b\n\u300aHTTP2.0\u7684\u57fa\u672c\u5355\u4f4d\u4e3a\u4e8c\u8fdb\u5236\u5e27\u300b\n\n\u5229\u7528\u4e8c\u8fdb\u5236\u5e27\u8d1f\u8d23\u4f20\u8f93\u3002\n\u591a\u8def\u590d\u7528\u3002\n\n\n\nHTTPS\n\n\n\u300ahttps\u539f\u7406\u901a\u4fd7\u4e86\u89e3\u300b\n\n\u4f7f\u7528\u975e\u5bf9\u79f0\u52a0\u5bc6\u534f\u5546\u52a0\u5bc6\u7b97\u6cd5\n\u4f7f\u7528\u5bf9\u79f0\u52a0\u5bc6\u65b9\u5f0f\u4f20\u8f93\u6570\u636e\n\u4f7f\u7528\u7b2c\u4e09\u65b9\u673a\u6784\u7b7e\u53d1\u7684\u8bc1\u4e66\uff0c\u6765\u52a0\u5bc6\u516c\u94a5\uff0c\u7528\u4e8e\u516c\u94a5\u7684\u5b89\u5168\u4f20\u8f93\u3001\u9632\u6b62\u88ab\u4e2d\u95f4\u4eba\u4e32\u6539\u3002\n\n\n\n\u300a\u516b\u5927\u514d\u8d39SSL\u8bc1\u4e66-\u7ed9\u4f60\u7684\u7f51\u7ad9\u514d\u8d39\u6dfb\u52a0Https\u5b89\u5168\u52a0\u5bc6\u300b\n\n\n\u7f51\u7edc\u6a21\u578b\n\n\n\u300aweb\u4f18\u5316\u5fc5\u987b\u4e86\u89e3\u7684\u539f\u7406\u4e4bI/o\u7684\u4e94\u79cd\u6a21\u578b\u548cweb\u7684\u4e09\u79cd\u5de5\u4f5c\u6a21\u5f0f\u300b\n\n\u4e94\u79cdI/O\u6a21\u578b\uff1a\u963b\u585eI/O\uff0c\u975e\u963b\u585eI/O\uff0cI/O\u590d\u7528\u3001\u4e8b\u4ef6(\u4fe1\u53f7)\u9a71\u52a8I/O\u3001\u5f02\u6b65I/O\uff0c\u524d\u56db\u79cdI/O\u5c5e\u4e8e\u540c\u6b65\u64cd\u4f5c\uff0cI/O\u7684\u7b2c\u4e00\u9636\u6bb5\u4e0d\u540c\u3001\u7b2c\u4e8c\u9636\u6bb5\u76f8\u540c\uff0c\u6700\u540e\u7684\u4e00\u79cd\u5219\u5c5e\u4e8e\u5f02\u6b65\u64cd\u4f5c\u3002\n\u4e09\u79cd Web Server \u5de5\u4f5c\u65b9\u5f0f\uff1aPrefork(\u591a\u8fdb\u7a0b)\u3001Worker\u65b9\u5f0f(\u7ebf\u7a0b\u65b9\u5f0f)\u3001Event\u65b9\u5f0f\u3002\n\n\n\n\u300aselect\u3001poll\u3001epoll\u4e4b\u95f4\u7684\u533a\u522b\u603b\u7ed3\u300b\n\nselect\uff0cpoll\uff0cepoll\u672c\u8d28\u4e0a\u90fd\u662f\u540c\u6b65I/O\uff0c\u56e0\u4e3a\u4ed6\u4eec\u90fd\u9700\u8981\u5728\u8bfb\u5199\u4e8b\u4ef6\u5c31\u7eea\u540e\u81ea\u5df1\u8d1f\u8d23\u8fdb\u884c\u8bfb\u5199\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u8bfb\u5199\u8fc7\u7a0b\u662f\u963b\u585e\u7684\u3002\nselect \u6709\u6253\u5f00\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u91cf\u9650\u5236\uff0c\u9ed8\u8ba41024\uff082048 for x64\uff09\uff0c100\u4e07\u5e76\u53d1\uff0c\u5c31\u8981\u75281000\u4e2a\u8fdb\u7a0b\u3001\u5207\u6362\u5f00\u9500\u5927\uff1bpoll\u91c7\u7528\u94fe\u8868\u7ed3\u6784\uff0c\u6ca1\u6709\u6570\u91cf\u9650\u5236\u3002\nselect\uff0cpoll \u201c\u9192\u7740\u201d\u7684\u65f6\u5019\u8981\u904d\u5386\u6574\u4e2afd\u96c6\u5408\uff0c\u800cepoll\u5728\u201c\u9192\u7740\u201d\u7684\u65f6\u5019\u53ea\u8981\u5224\u65ad\u4e00\u4e0b\u5c31\u7eea\u94fe\u8868\u662f\u5426\u4e3a\u7a7a\u5c31\u884c\u4e86\uff0c\u901a\u8fc7\u56de\u8c03\u673a\u5236\u8282\u7701\u5927\u91cfCPU\u65f6\u95f4\uff1bselect\uff0cpoll\u6bcf\u6b21\u8c03\u7528\u90fd\u8981\u628afd\u96c6\u5408\u4ece\u7528\u6237\u6001\u5f80\u5185\u6838\u6001\u62f7\u8d1d\u4e00\u6b21\uff0c\u800cepoll\u53ea\u8981\u4e00\u6b21\u62f7\u8d1d\u3002\npoll\u4f1a\u968f\u7740\u5e76\u53d1\u589e\u52a0\uff0c\u6027\u80fd\u9010\u6e10\u4e0b\u964d\uff0cepoll\u91c7\u7528\u7ea2\u9ed1\u6811\u7ed3\u6784\uff0c\u6027\u80fd\u7a33\u5b9a\uff0c\u4e0d\u4f1a\u968f\u7740\u8fde\u63a5\u6570\u589e\u52a0\u800c\u964d\u4f4e\u3002\n\n\n\n\u300aselect\uff0cpoll\uff0cepoll\u6bd4\u8f83  \u300b\n\n\u5728\u8fde\u63a5\u6570\u5c11\u5e76\u4e14\u8fde\u63a5\u90fd\u5341\u5206\u6d3b\u8dc3\u7684\u60c5\u51b5\u4e0b\uff0cselect\u548cpoll\u7684\u6027\u80fd\u53ef\u80fd\u6bd4epoll\u597d\uff0c\u6bd5\u7adfepoll\u7684\u901a\u77e5\u673a\u5236\u9700\u8981\u5f88\u591a\u51fd\u6570\u56de\u8c03\u3002\n\n\n\n\u300a\u6df1\u5165\u7406\u89e3Java NIO\u300b\n\nNIO \u662f\u4e00\u79cd\u540c\u6b65\u975e\u963b\u585e\u7684 IO \u6a21\u578b\u3002\u540c\u6b65\u662f\u6307\u7ebf\u7a0b\u4e0d\u65ad\u8f6e\u8be2 IO \u4e8b\u4ef6\u662f\u5426\u5c31\u7eea\uff0c\u975e\u963b\u585e\u662f\u6307\u7ebf\u7a0b\u5728\u7b49\u5f85 IO \u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u540c\u65f6\u505a\u5176\u4ed6\u4efb\u52a1\n\n\n\n\u300aBIO\u4e0eNIO\u3001AIO\u7684\u533a\u522b\u300b\n\n\n\u300a\u4e24\u79cd\u9ad8\u6548\u7684\u670d\u52a1\u5668\u8bbe\u8ba1\u6a21\u578b\uff1aReactor\u548cProactor\u6a21\u578b\u300b\n\n\nEpoll\n\n\u300aepoll\u4f7f\u7528\u8be6\u89e3\uff08\u7cbe\u9ad3\uff09\u300b\n\nJava NIO\n\n\u300a\u6df1\u5165\u7406\u89e3Java NIO\u300b\n\u300aJava NIO\u7f16\u5199Socket\u670d\u52a1\u5668\u7684\u4e00\u4e2a\u4f8b\u5b50\u300b\n\nkqueue\n\n\u300akqueue\u7528\u6cd5\u7b80\u4ecb\u300b\n\n\u8fde\u63a5\u548c\u77ed\u8fde\u63a5\n\n\u300aTCP/IP\u7cfb\u5217\u2014\u2014\u957f\u8fde\u63a5\u4e0e\u77ed\u8fde\u63a5\u7684\u533a\u522b\u300b\n\n\u6846\u67b6\n\n\u300aNetty\u539f\u7406\u5256\u6790\u300b\n\nReactor \u6a21\u5f0f\u4ecb\u7ecd\u3002\nNetty \u662f Reactor \u6a21\u5f0f\u7684\u4e00\u79cd\u5b9e\u73b0\u3002\n\n\n\n\u96f6\u62f7\u8d1d\uff08Zero-copy\uff09\n\n\u300a\u5bf9\u4e8e Netty ByteBuf \u7684\u96f6\u62f7\u8d1d(Zero Copy) \u7684\u7406\u89e3\u300b\n\n\u591a\u4e2a\u7269\u7406\u5206\u79bb\u7684buffer\uff0c\u901a\u8fc7\u903b\u8f91\u4e0a\u5408\u5e76\u6210\u4e3a\u4e00\u4e2a\uff0c\u4ece\u800c\u907f\u514d\u4e86\u6570\u636e\u5728\u5185\u5b58\u4e4b\u95f4\u7684\u62f7\u8d1d\u3002\n\n\n\n\u5e8f\u5217\u5316(\u4e8c\u8fdb\u5236\u534f\u8bae)\nHessian\n\n\u300aHessian\u539f\u7406\u5206\u6790\u300b\nBinary-RPC;\u4e0d\u4ec5\u4ec5\u662f\u5e8f\u5217\u5316\n\nProtobuf\n\n\n\u300aProtobuf\u534f\u8bae\u7684Java\u5e94\u7528\u4f8b\u5b50\u300b\nGoolge\u51fa\u54c1\u3001\u5360\u7528\u7a7a\u95f4\u548c\u6548\u7387\u5b8c\u80dc\u5176\u4ed6\u5e8f\u5217\u5316\u7c7b\u5e93\uff0c\u5982Hessian\uff1b\u9700\u8981\u7f16\u5199  .proto \u6587\u4ef6\u3002\n\n\n\u300aProtocol Buffers\u5e8f\u5217\u5316\u534f\u8bae\u53ca\u5e94\u7528\u300b\n\n\u5173\u4e8e\u534f\u8bae\u7684\u89e3\u91ca\uff1b\u7f3a\u70b9\uff1a\u53ef\u8bfb\u6027\u5dee;\n\n\n\n\u300a\u7b80\u5355\u7684\u4f7f\u7528 protobuf \u548c protostuff\u300b\n\nprotostuff \u7684\u597d\u5904\u662f\u4e0d\u7528\u5199 .proto \u6587\u4ef6\uff0cJava \u5bf9\u8c61\u76f4\u63a5\u5c31\u53ef\u4ee5\u5e8f\u5217\u5316\u3002\n\n\n\n\u6570\u636e\u5e93\n\u57fa\u7840\u7406\u8bba\n\u5173\u7cfb\u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u4e09\u5927\u8303\u5f0f\n\n\u300a\u6570\u636e\u5e93\u7684\u4e09\u5927\u8303\u5f0f\u4ee5\u53ca\u4e94\u5927\u7ea6\u675f\u300b\n\n\u7b2c\u4e00\u8303\u5f0f\uff1a\u6570\u636e\u8868\u4e2d\u7684\u6bcf\u4e00\u5217\uff08\u6bcf\u4e2a\u5b57\u6bb5\uff09\u5fc5\u987b\u662f\u4e0d\u53ef\u62c6\u5206\u7684\u6700\u5c0f\u5355\u5143\uff0c\u4e5f\u5c31\u662f\u786e\u4fdd\u6bcf\u4e00\u5217\u7684\u539f\u5b50\u6027\uff1b\n\u7b2c\u4e8c\u8303\u5f0f\uff082NF\uff09\uff1a\u6ee1\u8db31NF\u540e\uff0c\u8981\u6c42\u8868\u4e2d\u7684\u6240\u6709\u5217\uff0c\u90fd\u5fc5\u987b\u4f9d\u8d56\u4e8e\u4e3b\u952e\uff0c\u800c\u4e0d\u80fd\u6709\u4efb\u4f55\u4e00\u5217\u4e0e\u4e3b\u952e\u6ca1\u6709\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u8868\u53ea\u63cf\u8ff0\u4e00\u4ef6\u4e8b\u60c5\uff1b\n\u7b2c\u4e09\u8303\u5f0f\uff1a\u5fc5\u987b\u5148\u6ee1\u8db3\u7b2c\u4e8c\u8303\u5f0f\uff082NF\uff09\uff0c\u8981\u6c42\uff1a\u8868\u4e2d\u7684\u6bcf\u4e00\u5217\u53ea\u4e0e\u4e3b\u952e\u76f4\u63a5\u76f8\u5173\u800c\u4e0d\u662f\u95f4\u63a5\u76f8\u5173\uff0c\uff08\u8868\u4e2d\u7684\u6bcf\u4e00\u5217\u53ea\u80fd\u4f9d\u8d56\u4e8e\u4e3b\u952e\uff09\uff1b\n\n\n\nMySQL\n\u539f\u7406\n\n\n\u300aMySQL\u7684InnoDB\u7d22\u5f15\u539f\u7406\u8be6\u89e3\u300b\n\n\n\u300aMySQL\u5b58\u50a8\u5f15\u64ce\uff0d\uff0dMyISAM\u4e0eInnoDB\u533a\u522b\u300b\n\n\u4e24\u79cd\u7c7b\u578b\u6700\u4e3b\u8981\u7684\u5dee\u522b\u5c31\u662fInnodb \u652f\u6301\u4e8b\u52a1\u5904\u7406\u4e0e\u5916\u952e\u548c\u884c\u7ea7\u9501\n\n\n\n\u300amyisam\u548cinnodb\u7d22\u5f15\u5b9e\u73b0\u7684\u4e0d\u540c\u300b\n\n\nInnoDB\n\n\u300a\u4e00\u7bc7\u6587\u7ae0\u5e26\u4f60\u8bfb\u61c2Mysql\u548cInnoDB\u300b\n\n\u4f18\u5316\n\n\n\u300aMySQL36\u6761\u519b\u89c4\u300b\n\n\n\u300aMYSQL\u6027\u80fd\u4f18\u5316\u7684\u6700\u4f7320+\u6761\u7ecf\u9a8c\u300b\n\n\n\u300aSQL\u4f18\u5316\u4e4b\u9053\u300b\n\n\n\u300amysql\u6570\u636e\u5e93\u6b7b\u9501\u7684\u4ea7\u751f\u539f\u56e0\u53ca\u89e3\u51b3\u529e\u6cd5\u300b\n\n\n\u300a\u5bfc\u81f4\u7d22\u5f15\u5931\u6548\u7684\u53ef\u80fd\u60c5\u51b5\u300b\n\n\n\u300a MYSQL\u5206\u9875limit\u901f\u5ea6\u592a\u6162\u4f18\u5316\u65b9\u6cd5\u300b\n\n\u539f\u5219\u4e0a\u5c31\u662f\u7f29\u5c0f\u626b\u63cf\u8303\u56f4\u3002\n\n\n\n\u7d22\u5f15\n\u805a\u96c6\u7d22\u5f15, \u975e\u805a\u96c6\u7d22\u5f15\n\n\u300aMySQL \u805a\u96c6\u7d22\u5f15/\u975e\u805a\u96c6\u7d22\u5f15\u7b80\u8ff0\u300b\n\u300aMyISAM\u548cInnoDB\u7684\u7d22\u5f15\u5b9e\u73b0\u300b\n\nMyISAM \u662f\u975e\u805a\u96c6\uff0cInnoDB \u662f\u805a\u96c6\n\u590d\u5408\u7d22\u5f15\n\n\n\u300a\u590d\u5408\u7d22\u5f15\u7684\u4f18\u70b9\u548c\u6ce8\u610f\u4e8b\u9879\u300b\n\n\u6587\u4e2d\u6709\u4e00\u5904\u9519\u8bef\uff1a\n\n\n\u5bf9\u4e8e\u590d\u5408\u7d22\u5f15,\u5728\u67e5\u8be2\u4f7f\u7528\u65f6,\u6700\u597d\u5c06\u6761\u4ef6\u987a\u5e8f\u6309\u627e\u7d22\u5f15\u7684\u987a\u5e8f,\u8fd9\u6837\u6548\u7387\u6700\u9ad8; select * from table1 where col1=A AND col2=B AND col3=D \u5982\u679c\u4f7f\u7528 where col2=B AND col1=A \u6216\u8005 where col2=B \u5c06\u4e0d\u4f1a\u4f7f\u7528\u7d22\u5f15\n\n\n\u539f\u6587\u4e2d\u63d0\u5230\u7d22\u5f15\u662f\u6309\u7167\u201ccol1\uff0ccol2\uff0ccol3\u201d\u7684\u987a\u5e8f\u521b\u5efa\u7684\uff0c\u800cmysql\u5728\u6309\u7167\u6700\u5de6\u524d\u7f00\u7684\u7d22\u5f15\u5339\u914d\u539f\u5219\uff0c\u4e14\u4f1a\u81ea\u52a8\u4f18\u5316 where \u6761\u4ef6\u7684\u987a\u5e8f\uff0c\u5f53\u6761\u4ef6\u4e2d\u53ea\u6709 col2=B AND col1=A \u65f6\uff0c\u4f1a\u81ea\u52a8\u8f6c\u5316\u4e3a col1=A AND col2=B\uff0c\u6240\u4ee5\u4f9d\u7136\u4f1a\u4f7f\u7528\u7d22\u5f15\u3002\n\n\n\n\u300aMySQL\u67e5\u8be2where\u6761\u4ef6\u7684\u987a\u5e8f\u5bf9\u67e5\u8be2\u6548\u7387\u7684\u5f71\u54cd\u300b\n\n\n\u81ea\u9002\u5e94\u54c8\u5e0c\u7d22\u5f15(AHI)\n\n\u300aInnoDB\u5b58\u50a8\u5f15\u64ce\u2014\u2014\u81ea\u9002\u5e94\u54c8\u5e0c\u7d22\u5f15\u300b\n\nexplain\n\n\u300aMySQL \u6027\u80fd\u4f18\u5316\u795e\u5668 Explain \u4f7f\u7528\u5206\u6790\u300b\n\nNoSQL\nMongoDB\n\nMongoDB \u6559\u7a0b\n\u300aMongodb\u76f8\u5bf9\u4e8e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u4f18\u7f3a\u70b9\u300b\n\n\u4f18\u70b9\uff1a\u5f31\u4e00\u81f4\u6027\uff08\u6700\u7ec8\u4e00\u81f4\uff09\uff0c\u66f4\u80fd\u4fdd\u8bc1\u7528\u6237\u7684\u8bbf\u95ee\u901f\u5ea6\uff1b\u5185\u7f6eGridFS\uff0c\u652f\u6301\u5927\u5bb9\u91cf\u7684\u5b58\u50a8\uff1bSchema-less \u6570\u636e\u5e93\uff0c\u4e0d\u7528\u9884\u5148\u5b9a\u4e49\u7ed3\u6784\uff1b\u5185\u7f6eSharding\uff1b\u76f8\u6bd4\u4e8e\u5176\u4ed6NoSQL\uff0c\u7b2c\u4e09\u65b9\u652f\u6301\u4e30\u5bcc\uff1b\u6027\u80fd\u4f18\u8d8a\uff1b\n\u7f3a\u70b9\uff1amongodb\u4e0d\u652f\u6301\u4e8b\u52a1\u64cd\u4f5c\uff1bmongodb\u5360\u7528\u7a7a\u95f4\u8fc7\u5927\uff1bMongoDB\u6ca1\u6709\u5982MySQL\u90a3\u6837\u6210\u719f\u7684\u7ef4\u62a4\u5de5\u5177\uff0c\u8fd9\u5bf9\u4e8e\u5f00\u53d1\u548cIT\u8fd0\u8425\u90fd\u662f\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u5730\u65b9\uff1b\n\n\n\nHbase\n\n\n\u300a\u7b80\u660e HBase \u5165\u95e8\u6559\u7a0b\uff08\u5f00\u7bc7\uff09\u300b\n\n\n\u300a\u6df1\u5165\u5b66\u4e60HBase\u67b6\u6784\u539f\u7406\u300b\n\n\n\u300a\u4f20\u7edf\u7684\u884c\u5b58\u50a8\u548c\uff08HBase\uff09\u5217\u5b58\u50a8\u7684\u533a\u522b\u300b\n\n\n\u300aHbase\u4e0e\u4f20\u7edf\u6570\u636e\u5e93\u7684\u533a\u522b\u300b\n\n\u7a7a\u6570\u636e\u4e0d\u5b58\u50a8\uff0c\u8282\u7701\u7a7a\u95f4\uff0c\u4e14\u9002\u7528\u4e8e\u5e76\u53d1\u3002\n\n\n\n\u300aHBase Rowkey\u8bbe\u8ba1\u300b\n\nrowkey \u6309\u7167\u5b57\u5178\u987a\u5e8f\u6392\u5217\uff0c\u4fbf\u4e8e\u6279\u91cf\u626b\u63cf\u3002\n\u901a\u8fc7\u6563\u5217\u53ef\u4ee5\u907f\u514d\u70ed\u70b9\u3002\n\n\n\n\u641c\u7d22\u5f15\u64ce\n\u641c\u7d22\u5f15\u64ce\u539f\u7406\n\n\u300a\u5012\u6392\u7d22\u5f15--\u641c\u7d22\u5f15\u64ce\u5165\u95e8\u300b\n\nLucene\n\n\u300aLucene\u5165\u95e8\u7b80\u4ecb\u300b\n\nElasticsearch\n\n\u300aElasticsearch\u5b66\u4e60\uff0c\u8bf7\u5148\u770b\u8fd9\u4e00\u7bc7\uff01\u300b\n\u300aElasticsearch\u7d22\u5f15\u539f\u7406\u300b\n\nSolr\n\n\u300a Apache Solr\u5165\u95e8\u6559\u7a0b\u300b\n\u300aelasticsearch\u4e0esolr\u6bd4\u8f83\u300b\n\nsphinx\n\n\u300aSphinx \u7684\u4ecb\u7ecd\u548c\u539f\u7406\u63a2\u7d22\u300b\n\n\u6027\u80fd\n\u6027\u80fd\u4f18\u5316\u65b9\u6cd5\u8bba\n\n\n\u300a15\u5929\u7684\u6027\u80fd\u4f18\u5316\u5de5\u4f5c\uff0c5\u65b9\u9762\u7684\u8c03\u4f18\u7ecf\u9a8c\u300b\n\n\u4ee3\u7801\u5c42\u9762\u3001\u4e1a\u52a1\u5c42\u9762\u3001\u6570\u636e\u5e93\u5c42\u9762\u3001\u670d\u52a1\u5668\u5c42\u9762\u3001\u524d\u7aef\u4f18\u5316\u3002\n\n\n\n\u300a\u7cfb\u7edf\u6027\u80fd\u4f18\u5316\u7684\u51e0\u4e2a\u65b9\u9762\u300b\n\n\n\u5bb9\u91cf\u8bc4\u4f30\n\n\u300a\u8054\u7f51\u6027\u80fd\u4e0e\u5bb9\u91cf\u8bc4\u4f30\u7684\u65b9\u6cd5\u8bba\u548c\u5178\u578b\u6848\u4f8b\u300b\n\u300a\u4e92\u8054\u7f51\u67b6\u6784\uff0c\u5982\u4f55\u8fdb\u884c\u5bb9\u91cf\u8bbe\u8ba1\uff1f\u300b\n\n\u8bc4\u4f30\u603b\u8bbf\u95ee\u91cf\u3001\u8bc4\u4f30\u5e73\u5747\u8bbf\u95ee\u91cfQPS\u3001\u8bc4\u4f30\u9ad8\u5cf0QPS\u3001\u8bc4\u4f30\u7cfb\u7edf\u3001\u5355\u673a\u6781\u9650QPS\n\n\n\nCDN \u7f51\u7edc\n\n\u300aCDN\u52a0\u901f\u539f\u7406\u300b\n\u300a\u56fd\u5185\u6709\u54ea\u4e9b\u6bd4\u8f83\u597d\u7684 CDN\uff1f\u300b\n\n\u8fde\u63a5\u6c60\n\n\u300a\u4e3b\u6d41Java\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u6bd4\u8f83\u4e0e\u5f00\u53d1\u914d\u7f6e\u5b9e\u6218\u300b\n\n\u6027\u80fd\u8c03\u4f18\n\n\u300a\u4e5d\u5927Java\u6027\u80fd\u8c03\u8bd5\u5de5\u5177\uff0c\u5fc5\u5907\u81f3\u5c11\u4e00\u6b3e\u300b\n\n\u5927\u6570\u636e\n\u6d41\u5f0f\u8ba1\u7b97\nStorm\n\n\u5b98\u65b9\u7f51\u7ad9\n\u300a\u6700\u8be6\u7ec6\u7684Storm\u5165\u95e8\u6559\u7a0b\u300b\n\nFlink\n\n\u300aFlink\u4e4b\u4e00 Flink\u57fa\u672c\u539f\u7406\u4ecb\u7ecd\u300b\n\nKafka Stream\n\n\u300aKafka Stream\u8c03\u7814\uff1a\u4e00\u79cd\u8f7b\u91cf\u7ea7\u6d41\u8ba1\u7b97\u6a21\u5f0f\u300b\n\n\u5e94\u7528\u573a\u666f\n\u4f8b\u5982\uff1a\n\n\u5e7f\u544a\u76f8\u5173\u5b9e\u65f6\u7edf\u8ba1\uff1b\n\u63a8\u8350\u7cfb\u7edf\u7528\u6237\u753b\u50cf\u6807\u7b7e\u5b9e\u65f6\u66f4\u65b0\uff1b\n\u7ebf\u4e0a\u670d\u52a1\u5065\u5eb7\u72b6\u51b5\u5b9e\u65f6\u76d1\u6d4b\uff1b\n\u5b9e\u65f6\u699c\u5355\uff1b\n\u5b9e\u65f6\u6570\u636e\u7edf\u8ba1\u3002\n\nHadoop\n\n\u300a\u7528\u901a\u4fd7\u6613\u61c2\u7684\u8bdd\u8bf4\u4e0bhadoop\u662f\u4ec0\u4e48,\u80fd\u505a\u4ec0\u4e48\u300b\n\u300a\u53f2\u4e0a\u6700\u8be6\u7ec6\u7684Hadoop\u73af\u5883\u642d\u5efa\u300b\n\nHDFS\n\n\u300a\u3010Hadoop\u5b66\u4e60\u3011HDFS\u57fa\u672c\u539f\u7406\u300b\n\nMapReduce\n\n\u300a\u7528\u901a\u4fd7\u6613\u61c2\u7684\u5927\u767d\u8bdd\u8bb2\u89e3Map/Reduce\u539f\u7406\u300b\n\u300a \u7b80\u5355\u7684map-reduce\u7684java\u4f8b\u5b50\u300b\n\nYarn\n\n\u300a\u521d\u6b65\u638c\u63e1Yarn\u7684\u67b6\u6784\u53ca\u539f\u7406\u300b\n\nSpark\n\n\u300aSpark(\u4e00): \u57fa\u672c\u67b6\u6784\u53ca\u539f\u7406\u300b\n\u300a\u5b50\u96e8\u5927\u6570\u636e\u4e4bSpark\u5165\u95e8\u6559\u7a0b(Python\u7248)\u300b\n\n\u5b89\u5168\nweb \u5b89\u5168\nXSS\n\n\u300axss\u653b\u51fb\u539f\u7406\u4e0e\u89e3\u51b3\u65b9\u6cd5\u300b\n\nCSRF\n\n\u300aCSRF\u539f\u7406\u53ca\u9632\u8303\u300b\n\nSQL \u6ce8\u5165\n\n\u300aSQL\u6ce8\u5165\u300b\n\nHash Dos\n\n\u300a\u90aa\u6076\u7684JAVA HASH DOS\u653b\u51fb\u300b\n\n\u5229\u7528JsonObject \u4e0a\u4f20\u5927Json\uff0cJsonObject \u5e95\u5c42\u4f7f\u7528HashMap\uff1b\u4e0d\u540c\u7684\u6570\u636e\u4ea7\u751f\u76f8\u540c\u7684hash\u503c\uff0c\u4f7f\u5f97\u6784\u5efaHash\u901f\u5ea6\u53d8\u6162\uff0c\u8017\u5c3dCPU\u3002\n\n\n\u300a\u4e00\u79cd\u9ad8\u7ea7\u7684DoS\u653b\u51fb-Hash\u78b0\u649e\u653b\u51fb\u300b\n\u300a\u5173\u4e8eHash Collision DoS\u6f0f\u6d1e\uff1a\u89e3\u6790\u4e0e\u89e3\u51b3\u65b9\u6848\u300b\n\n\u811a\u672c\u6ce8\u5165\n\n\u300a\u4e0a\u4f20\u6587\u4ef6\u6f0f\u6d1e\u539f\u7406\u53ca\u9632\u8303\u300b\n\n\u6f0f\u6d1e\u626b\u63cf\u5de5\u5177\n\n\u300aDVWA\u300b\nW3af\nOpenVAS\u8be6\u89e3\n\n\u9a8c\u8bc1\u7801\n\n\n\u300a\u9a8c\u8bc1\u7801\u539f\u7406\u5206\u6790\u53ca\u5b9e\u73b0\u300b\n\n\n\u300a\u8be6\u89e3\u6ed1\u52a8\u9a8c\u8bc1\u7801\u7684\u5b9e\u73b0\u539f\u7406\u300b\n\n\u6ed1\u52a8\u9a8c\u8bc1\u7801\u662f\u6839\u636e\u4eba\u5728\u6ed1\u52a8\u6ed1\u5757\u7684\u54cd\u5e94\u65f6\u95f4\uff0c\u62d6\u62fd\u901f\u5ea6\uff0c\u65f6\u95f4\uff0c\u4f4d\u7f6e\uff0c\u8f68\u8ff9\uff0c\u91cd\u8bd5\u6b21\u6570\u7b49\u6765\u8bc4\u4f30\u98ce\u9669\u3002\n\n\n\n\u300a\u6dd8\u5b9d\u6ed1\u52a8\u9a8c\u8bc1\u7801\u7814\u7a76\u300b\n\n\nDDoS \u9632\u8303\n\n\u300a\u5b66\u4e60\u624b\u518c\uff1aDDoS\u7684\u653b\u51fb\u65b9\u5f0f\u53ca\u9632\u5fa1\u624b\u6bb5\u300b\n\u300a\u514d\u8d39DDoS\u653b\u51fb\u6d4b\u8bd5\u5de5\u5177\u5927\u5408\u96c6\u300b\n\n\u7528\u6237\u9690\u79c1\u4fe1\u606f\u4fdd\u62a4\n\n\u7528\u6237\u5bc6\u7801\u975e\u660e\u6587\u4fdd\u5b58\uff0c\u52a0\u52a8\u6001salt\u3002\n\u8eab\u4efd\u8bc1\u53f7\uff0c\u624b\u673a\u53f7\u5982\u679c\u8981\u663e\u793a\uff0c\u7528 \u201c*\u201d \u66ff\u4ee3\u90e8\u5206\u5b57\u7b26\u3002\n\u8054\u7cfb\u65b9\u5f0f\u5728\u7684\u663e\u793a\u4e0e\u5426\u7531\u7528\u6237\u81ea\u5df1\u63a7\u5236\u3002\nTODO\n\n\n\n\u300a\u4e2a\u4eba\u9690\u79c1\u5305\u62ec\u54ea\u4e9b\u300b\n\n\n\u300a\u5728\u4e92\u8054\u7f51\u4e0a\uff0c\u9690\u79c1\u7684\u8303\u56f4\u5305\u62ec\u54ea\u4e9b\uff1f\u300b\n\n\n\u300a\u7528\u6237\u5bc6\u7801\u4fdd\u5b58\u300b\n\n\n\u5e8f\u5217\u5316\u6f0f\u6d1e\n\n\u300aLib\u4e4b\u8fc7\uff1fJava\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u901a\u7528\u5229\u7528\u5206\u6790\u300b\n\n\u52a0\u5bc6\u89e3\u5bc6\n\u5bf9\u79f0\u52a0\u5bc6\n\n\u300a\u5e38\u89c1\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u300b\n\nDES\u30013DES\u3001Blowfish\u3001AES\nDES \u91c7\u7528 56\u4f4d\u79d8\u94a5\uff0cBlowfish \u91c7\u75281\u5230448\u4f4d\u53d8\u957f\u79d8\u94a5\uff0cAES 128\uff0c192\u548c256\u4f4d\u957f\u5ea6\u7684\u79d8\u94a5\u3002\nDES \u79d8\u94a5\u592a\u77ed\uff08\u53ea\u670956\u4f4d\uff09\u7b97\u6cd5\u76ee\u524d\u5df2\u7ecf\u88ab AES \u53d6\u4ee3\uff0c\u5e76\u4e14 AES \u6709\u786c\u4ef6\u52a0\u901f\uff0c\u6027\u80fd\u5f88\u597d\u3002\n\n\n\n\u54c8\u5e0c\u7b97\u6cd5\n\n\n\u300a\u5e38\u7528\u7684\u54c8\u5e0c\u7b97\u6cd5\u300b\n\nMD5 \u548c SHA-1 \u5df2\u7ecf\u4e0d\u518d\u5b89\u5168\uff0c\u5df2\u88ab\u5f03\u7528\u3002\n\u76ee\u524d SHA-256 \u662f\u6bd4\u8f83\u5b89\u5168\u7684\u3002\n\n\n\n\u300a\u57fa\u4e8eHash\u6458\u8981\u7b7e\u540d\u7684\u516c\u7f51URL\u7b7e\u540d\u9a8c\u8bc1\u8bbe\u8ba1\u65b9\u6848\u300b\n\n\n\u975e\u5bf9\u79f0\u52a0\u5bc6\n\n\u300a\u5e38\u89c1\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u300b\n\n\nRSA\u3001DSA\u3001ECDSA(\u87ba\u65cb\u66f2\u7ebf\u52a0\u5bc6\u7b97\u6cd5)\n\n\n\u548c RSA \u4e0d\u540c\u7684\u662f DSA \u4ec5\u80fd\u7528\u4e8e\u6570\u5b57\u7b7e\u540d\uff0c\u4e0d\u80fd\u8fdb\u884c\u6570\u636e\u52a0\u5bc6\u89e3\u5bc6\uff0c\u5176\u5b89\u5168\u6027\u548cRSA\u76f8\u5f53\uff0c\u4f46\u5176\u6027\u80fd\u8981\u6bd4RSA\u5feb\u3002\n\n\n256\u4f4d\u7684ECC\u79d8\u94a5\u7684\u5b89\u5168\u6027\u7b49\u540c\u4e8e3072\u4f4d\u7684RSA\u79d8\u94a5\u3002\n\u300a\u533a\u5757\u94fe\u7684\u52a0\u5bc6\u6280\u672f\u300b\n\n\n\n\n\u670d\u52a1\u5668\u5b89\u5168\n\n\u300aLinux\u5f3a\u5316\u8bba\uff1a15\u6b65\u6253\u9020\u4e00\u4e2a\u5b89\u5168\u7684Linux\u670d\u52a1\u5668\u300b\n\n\u6570\u636e\u5b89\u5168\n\u6570\u636e\u5907\u4efd\nTODO\n\u7f51\u7edc\u9694\u79bb\n\u5185\u5916\u7f51\u5206\u79bb\nTODO\n\u767b\u5f55\u8df3\u677f\u673a\n\u5728\u5185\u5916\u73af\u5883\u4e2d\u901a\u8fc7\u8df3\u677f\u673a\u767b\u5f55\u5230\u7ebf\u4e0a\u4e3b\u673a\u3002\n\n\u300a\u642d\u5efa\u7b80\u6613\u5821\u5792\u673a\u300b\n\n\u6388\u6743\u3001\u8ba4\u8bc1\nRBAC\n\n\u300a\u57fa\u4e8e\u7ec4\u7ec7\u89d2\u8272\u7684\u6743\u9650\u8bbe\u8ba1\u300b\n\u300a\u6743\u9650\u7cfb\u7edf\u4e0eRBAC\u6a21\u578b\u6982\u8ff0\u300b\n\u300aSpring\u6574\u5408Shiro\u505a\u6743\u9650\u63a7\u5236\u6a21\u5757\u8be6\u7ec6\u6848\u4f8b\u5206\u6790\u300b\n\nOAuth2.0\n\n\u300a\u7406\u89e3OAuth 2.0\u300b\n\u300a\u4e00\u5f20\u56fe\u641e\u5b9aOAuth2.0\u300b\n\n\u53cc\u56e0\u7d20\u8ba4\u8bc1\uff082FA\uff09\n2FA - Two-factor authentication\uff0c\u7528\u4e8e\u52a0\u5f3a\u767b\u5f55\u9a8c\u8bc1\n\u5e38\u7528\u505a\u6cd5\u662f \u767b\u5f55\u5bc6\u7801 + \u624b\u673a\u9a8c\u8bc1\u7801\uff08\u6216\u8005\u4ee4\u724cKey\uff0c\u7c7b\u4f3c\u4e8e\u4e0e\u7f51\u94f6\u7684 USB key\uff09\n\n\u3010\u300a\u53cc\u56e0\u7d20\u8ba4\u8bc1\uff082FA\uff09\u6559\u7a0b\u300b\u3011(http://www.ruanyifeng.com/blog/2017/11/2fa-tutorial.html)\n\n\u5355\u70b9\u767b\u5f55(SSO)\n\n\n\u300a\u5355\u70b9\u767b\u5f55\u539f\u7406\u4e0e\u7b80\u5355\u5b9e\u73b0\u300b\n\n\nCAS\u5355\u70b9\u767b\u5f55\u6846\u67b6\n\n\n\u5e38\u7528\u5f00\u6e90\u6846\u67b6\n\u5f00\u6e90\u534f\u8bae\n\n\n\u300a\u5f00\u6e90\u534f\u8bae\u7684\u9009\u62e9\u300b\n\n\n\u5982\u4f55\u9009\u62e9\u4e00\u4e2a\u5f00\u6e90\u8f6f\u4ef6\u534f\u8bae\n\n\n\u65e5\u5fd7\u6846\u67b6\nLog4j\u3001Log4j2\n\n\u300alog4j \u8be6\u7ec6\u8bb2\u89e3\u300b\n\u300alog4j2 \u5b9e\u9645\u4f7f\u7528\u8be6\u89e3\u300b\n\u300aLog4j1,Logback\u4ee5\u53caLog4j2\u6027\u80fd\u6d4b\u8bd5\u5bf9\u6bd4\u300b\n\nLog4J \u5f02\u6b65\u65e5\u5fd7\u6027\u80fd\u4f18\u5f02\u3002\n\n\n\nLogback\n\n\u300a\u6700\u5168LogBack \u8be6\u89e3\u3001\u542bjava\u6848\u4f8b\u548c\u914d\u7f6e\u8bf4\u660e\u300b\n\nORM\n\n\u300aORM\u6846\u67b6\u4f7f\u7528\u4f18\u7f3a\u70b9\u300b\n\n\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3002\n\n\n\nMyBatis\uff1a\n\n\n\u300amybatis\u7f13\u5b58\u673a\u5236\u8be6\u89e3\u300b\n\n\u4e00\u7ea7\u7f13\u5b58\u662fSqlSession\u7ea7\u522b\u7684\u7f13\u5b58\uff0c\u7f13\u5b58\u7684\u6570\u636e\u53ea\u5728SqlSession\u5185\u6709\u6548\n\u4e8c\u7ea7\u7f13\u5b58\u662fmapper\u7ea7\u522b\u7684\u7f13\u5b58\uff0c\u540c\u4e00\u4e2anamespace\u516c\u7528\u8fd9\u4e00\u4e2a\u7f13\u5b58\uff0c\u6240\u4ee5\u5bf9SqlSession\u662f\u5171\u4eab\u7684\uff1b\u4f7f\u7528 LRU \u673a\u5236\u6e05\u7406\u7f13\u5b58\uff0c\u901a\u8fc7 cacheEnabled \u53c2\u6570\u5f00\u542f\u3002\n\n\n\n\u300aMyBatis\u5b66\u4e60\u4e4b\u4ee3\u7801\u751f\u6210\u5668Generator\u300b\n\n\n\u7f51\u7edc\u6846\u67b6\nTODO\nWeb \u6846\u67b6\nSpring \u5bb6\u65cf\nSpring\n\nSpring \u7b80\u660e\u6559\u7a0b\n\nSpring Boot\n\n\u5b98\u65b9\u7f51\u7ad9\n\u300aSpring Boot\u57fa\u7840\u6559\u7a0b\u300b\n\nSpring Cloud\n\nSpring Boot \u4e2d\u6587\u7d22\u5f15\u7ad9\nSpring Cloud \u4e2d\u6587\u6587\u6863\n\u300aSpring Cloud\u57fa\u7840\u6559\u7a0b\u300b\n\n\u5de5\u5177\u6846\u67b6\n\n\u300aApache Commons \u5de5\u5177\u7c7b\u4ecb\u7ecd\u53ca\u7b80\u5355\u4f7f\u7528\u300b\n\u300aGoogle guava \u4e2d\u6587\u6559\u7a0b\u300b\n\n\u5206\u5e03\u5f0f\u8bbe\u8ba1\n\u6269\u5c55\u6027\u8bbe\u8ba1\n\n\n\u300a\u67b6\u6784\u5e08\u4e0d\u53ef\u4e0d\u77e5\u7684\u5341\u5927\u53ef\u6269\u5c55\u67b6\u6784\u300b\n\n\u603b\u7ed3\u4e0b\u6765\uff0c\u901a\u7528\u7684\u5957\u8def\u5c31\u662f\u5206\u5e03\u3001\u7f13\u5b58\u53ca\u5f02\u6b65\u5904\u7406\u3002\n\n\n\n\u300a\u53ef\u6269\u5c55\u6027\u8bbe\u8ba1\u4e4b\u6570\u636e\u5207\u5206\u300b\n\n\u6c34\u5e73\u5207\u5206+\u5782\u76f4\u5207\u5206\n\u5229\u7528\u4e2d\u95f4\u4ef6\u8fdb\u884c\u5206\u7247\u5982\uff0cMySQL Proxy\u3002\n\u5229\u7528\u5206\u7247\u7b56\u7565\u8fdb\u884c\u5207\u5206\uff0c\u5982\u6309\u7167ID\u53d6\u6a21\u3002\n\n\n\n\u300a\u8bf4\u8bf4\u5982\u4f55\u5b9e\u73b0\u53ef\u6269\u5c55\u6027\u7684\u5927\u578b\u7f51\u7ad9\u67b6\u6784\u300b\n\n\u5206\u5e03\u5f0f\u670d\u52a1+\u6d88\u606f\u961f\u5217\u3002\n\n\n\n\u300a\u5927\u578b\u7f51\u7ad9\u6280\u672f\u67b6\u6784\uff08\u4e03\uff09--\u7f51\u7ad9\u7684\u53ef\u6269\u5c55\u6027\u67b6\u6784\u300b\n\n\n\u7a33\u5b9a\u6027 & \u9ad8\u53ef\u7528\n\n\n\u300a\u7cfb\u7edf\u8bbe\u8ba1\uff1a\u5173\u4e8e\u9ad8\u53ef\u7528\u7cfb\u7edf\u7684\u4e00\u4e9b\u6280\u672f\u65b9\u6848\u300b\n\n\u53ef\u6269\u5c55\uff1a\u6c34\u5e73\u6269\u5c55\u3001\u5782\u76f4\u6269\u5c55\u3002 \u901a\u8fc7\u5197\u4f59\u90e8\u7f72\uff0c\u907f\u514d\u5355\u70b9\u6545\u969c\u3002\n\u9694\u79bb\uff1a\u907f\u514d\u5355\u4e00\u4e1a\u52a1\u5360\u7528\u5168\u90e8\u8d44\u6e90\u3002\u907f\u514d\u4e1a\u52a1\u4e4b\u95f4\u7684\u76f8\u4e92\u5f71\u54cd 2. \u673a\u623f\u9694\u79bb\u907f\u514d\u5355\u70b9\u6545\u969c\u3002\n\u89e3\u8026\uff1a\u964d\u4f4e\u7ef4\u62a4\u6210\u672c\uff0c\u964d\u4f4e\u8026\u5408\u98ce\u9669\u3002\u51cf\u5c11\u4f9d\u8d56\uff0c\u51cf\u5c11\u76f8\u4e92\u95f4\u7684\u5f71\u54cd\u3002\n\u9650\u6d41\uff1a\u6ed1\u52a8\u7a97\u53e3\u8ba1\u6570\u6cd5\u3001\u6f0f\u6876\u7b97\u6cd5\u3001\u4ee4\u724c\u6876\u7b97\u6cd5\u7b49\u7b97\u6cd5\u3002\u9047\u5230\u7a81\u53d1\u6d41\u91cf\u65f6\uff0c\u4fdd\u8bc1\u7cfb\u7edf\u7a33\u5b9a\u3002\n\u964d\u7ea7\uff1a\u7d27\u6025\u60c5\u51b5\u4e0b\u91ca\u653e\u975e\u6838\u5fc3\u529f\u80fd\u7684\u8d44\u6e90\u3002\u727a\u7272\u975e\u6838\u5fc3\u4e1a\u52a1\uff0c\u4fdd\u8bc1\u6838\u5fc3\u4e1a\u52a1\u7684\u9ad8\u53ef\u7528\u3002\n\u7194\u65ad\uff1a\u5f02\u5e38\u60c5\u51b5\u8d85\u51fa\u9608\u503c\u8fdb\u5165\u7194\u65ad\u72b6\u6001\uff0c\u5feb\u901f\u5931\u8d25\u3002\u51cf\u5c11\u4e0d\u7a33\u5b9a\u7684\u5916\u90e8\u4f9d\u8d56\u5bf9\u6838\u5fc3\u670d\u52a1\u7684\u5f71\u54cd\u3002\n\u81ea\u52a8\u5316\u6d4b\u8bd5\uff1a\u901a\u8fc7\u5b8c\u5584\u7684\u6d4b\u8bd5\uff0c\u51cf\u5c11\u53d1\u5e03\u5f15\u8d77\u7684\u6545\u969c\u3002\n\u7070\u5ea6\u53d1\u5e03\uff1a\u7070\u5ea6\u53d1\u5e03\u662f\u901f\u5ea6\u4e0e\u5b89\u5168\u6027\u4f5c\u4e3a\u59a5\u534f\uff0c\u80fd\u591f\u6709\u6548\u51cf\u5c11\u53d1\u5e03\u6545\u969c\u3002\n\n\n\n\u300a\u5173\u4e8e\u9ad8\u53ef\u7528\u7684\u7cfb\u7edf\u300b\n\n\u8bbe\u8ba1\u539f\u5219\uff1a\u6570\u636e\u4e0d\u4e22(\u6301\u4e45\u5316)\uff1b\u670d\u52a1\u9ad8\u53ef\u7528(\u670d\u52a1\u526f\u672c)\uff1b\u7edd\u5bf9\u7684100%\u9ad8\u53ef\u7528\u5f88\u96be\uff0c\u76ee\u6807\u662f\u505a\u5230\u5c3d\u53ef\u80fd\u591a\u76849\uff0c\u598299.999%\uff08\u5168\u5e74\u7d2f\u8ba1\u53ea\u67095\u5206\u949f\uff09\u3002\n\n\n\n\u786c\u4ef6\u8d1f\u8f7d\u5747\u8861\n\n\n\u300a\u8f6c\uff01\uff01\u8d1f\u8f7d\u5747\u8861\u5668\u6280\u672fNginx\u548cF5\u7684\u4f18\u7f3a\u70b9\u5bf9\u6bd4\u300b\n\n\u4e3b\u8981\u662f\u548cF5\u5bf9\u6bd4\u3002\n\n\n\n\u300a\u8f6f/\u786c\u4ef6\u8d1f\u8f7d\u5747\u8861\u4ea7\u54c1 \u4f60\u77e5\u591a\u5c11\uff1f\u300b\n\n\n\u8f6f\u4ef6\u8d1f\u8f7d\u5747\u8861\n\n\n\u300a\u51e0\u79cd\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u300b\n\u8f6e\u5bfb\u3001\u6743\u91cd\u3001\u8d1f\u8f7d\u3001\u6700\u5c11\u8fde\u63a5\u3001QoS\n\n\n\u300aDNS\u8d1f\u8f7d\u5747\u8861\u300b\n\n\u914d\u7f6e\u7b80\u5355\uff0c\u66f4\u65b0\u901f\u5ea6\u6162\u3002\n\n\n\n\u300aNginx\u8d1f\u8f7d\u5747\u8861\u300b\n\n\u7b80\u5355\u8f7b\u91cf\u3001\u5b66\u4e60\u6210\u672c\u4f4e\uff1b\u4e3b\u8981\u9002\u7528\u4e8eweb\u5e94\u7528\u3002\n\n\n\n\u300a\u501f\u52a9LVS+Keepalived\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861 \u300b\n\n\u914d\u7f6e\u6bd4\u8f83\u8d1f\u8f7d\u3001\u53ea\u652f\u6301\u52304\u5c42\uff0c\u6027\u80fd\u8f83\u9ad8\u3002\n\n\n\n\u300aHAProxy\u7528\u6cd5\u8be6\u89e3 \u5168\u7f51\u6700\u8be6\u7ec6\u4e2d\u6587\u6587\u6863\u300b\n\n\u652f\u6301\u5230\u4e03\u5c42\uff08\u6bd4\u5982HTTP\uff09\u3001\u529f\u80fd\u6bd4\u8f83\u5168\u9762\uff0c\u6027\u80fd\u4e5f\u4e0d\u9519\u3002\n\n\n\n\u300aHaproxy+Keepalived+MySQL\u5b9e\u73b0\u8bfb\u5747\u8861\u8d1f\u8f7d\u300b\n\n\u4e3b\u8981\u662f\u7528\u6237\u8bfb\u8bf7\u6c42\u7684\u8d1f\u8f7d\u5747\u8861\u3002\n\n\n\n\u300arabbitmq+haproxy+keepalived\u5b9e\u73b0\u9ad8\u53ef\u7528\u96c6\u7fa4\u642d\u5efa\u300b\n\n\n\u9650\u6d41\n\n\u300a\u8c08\u8c08\u9ad8\u5e76\u53d1\u7cfb\u7edf\u7684\u9650\u6d41\u300b\n\n\u8ba1\u6570\u5668\uff1a\u901a\u8fc7\u6ed1\u52a8\u7a97\u53e3\u8ba1\u6570\u5668\uff0c\u63a7\u5236\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u8bf7\u6c42\u6b21\u6570\uff0c\u7b80\u5355\u7c97\u66b4\u3002\n\u6f0f\u6876\u7b97\u6cd5\uff1a\u56fa\u5b9a\u5bb9\u91cf\u7684\u6f0f\u6876\uff0c\u6f0f\u6876\u6ee1\u4e86\u5c31\u4e22\u5f03\u8bf7\u6c42\uff0c\u6bd4\u8f83\u5e38\u7528\u3002\n\u4ee4\u724c\u6876\u7b97\u6cd5\uff1a\u56fa\u5b9a\u5bb9\u91cf\u7684\u4ee4\u724c\u6876\uff0c\u6309\u7167\u4e00\u5b9a\u901f\u7387\u6dfb\u52a0\u4ee4\u724c\uff0c\u5904\u7406\u8bf7\u6c42\u524d\u9700\u8981\u62ff\u5230\u4ee4\u724c\uff0c\u62ff\u4e0d\u5230\u4ee4\u724c\u5219\u4e22\u5f03\u8bf7\u6c42\uff0c\u6216\u8fdb\u5165\u4e22\u961f\u5217\uff0c\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236\u6dfb\u52a0\u4ee4\u724c\u7684\u901f\u7387\uff0c\u6765\u63a7\u5236\u6574\u4f53\u901f\u5ea6\u3002Guava \u4e2d\u7684 RateLimiter \u662f\u4ee4\u724c\u6876\u7684\u5b9e\u73b0\u3002\nNginx \u9650\u6d41\uff1a\u901a\u8fc7 limit_req \u7b49\u6a21\u5757\u9650\u5236\u5e76\u53d1\u8fde\u63a5\u6570\u3002\n\n\n\n\u5e94\u7528\u5c42\u5bb9\u707e\n\n\n\u300a\u9632\u96ea\u5d29\u5229\u5668\uff1a\u7194\u65ad\u5668 Hystrix \u7684\u539f\u7406\u4e0e\u4f7f\u7528\u300b\n\n\u96ea\u5d29\u6548\u5e94\u539f\u56e0\uff1a\u786c\u4ef6\u6545\u969c\u3001\u786c\u4ef6\u6545\u969c\u3001\u7a0b\u5e8fBug\u3001\u91cd\u8bd5\u52a0\u5927\u6d41\u91cf\u3001\u7528\u6237\u5927\u91cf\u8bf7\u6c42\u3002\n\u96ea\u5d29\u7684\u5bf9\u7b56\uff1a\u9650\u6d41\u3001\u6539\u8fdb\u7f13\u5b58\u6a21\u5f0f(\u7f13\u5b58\u9884\u52a0\u8f7d\u3001\u540c\u6b65\u8c03\u7528\u6539\u5f02\u6b65)\u3001\u81ea\u52a8\u6269\u5bb9\u3001\u964d\u7ea7\u3002\nHystrix\u8bbe\u8ba1\u539f\u5219\uff1a\n\n\u8d44\u6e90\u9694\u79bb\uff1aHystrix\u901a\u8fc7\u5c06\u6bcf\u4e2a\u4f9d\u8d56\u670d\u52a1\u5206\u914d\u72ec\u7acb\u7684\u7ebf\u7a0b\u6c60\u8fdb\u884c\u8d44\u6e90\u9694\u79bb, \u4ece\u800c\u907f\u514d\u670d\u52a1\u96ea\u5d29\u3002\n\u7194\u65ad\u5f00\u5173\uff1a\u670d\u52a1\u7684\u5065\u5eb7\u72b6\u51b5 = \u8bf7\u6c42\u5931\u8d25\u6570 / \u8bf7\u6c42\u603b\u6570\uff0c\u901a\u8fc7\u9608\u503c\u8bbe\u5b9a\u548c\u6ed1\u52a8\u7a97\u53e3\u63a7\u5236\u5f00\u5173\u3002\n\u547d\u4ee4\u6a21\u5f0f\uff1a\u901a\u8fc7\u7ee7\u627f HystrixCommand \u6765\u5305\u88c5\u670d\u52a1\u8c03\u7528\u903b\u8f91\u3002\n\n\n\n\n\n\u300a\u7f13\u5b58\u7a7f\u900f\uff0c\u7f13\u5b58\u51fb\u7a7f\uff0c\u7f13\u5b58\u96ea\u5d29\u89e3\u51b3\u65b9\u6848\u5206\u6790\u300b\n\n\n\u300a\u7f13\u5b58\u51fb\u7a7f\u3001\u5931\u6548\u4ee5\u53ca\u70ed\u70b9key\u95ee\u9898\u300b\n\n\u4e3b\u8981\u7b56\u7565\uff1a\u5931\u6548\u77ac\u95f4\uff1a\u5355\u673a\u4f7f\u7528\u9501\uff1b\u4f7f\u7528\u5206\u5e03\u5f0f\u9501\uff1b\u4e0d\u8fc7\u671f\uff1b\n\u70ed\u70b9\u6570\u636e\uff1a\u70ed\u70b9\u6570\u636e\u5355\u72ec\u5b58\u50a8\uff1b\u4f7f\u7528\u672c\u5730\u7f13\u5b58\uff1b\u5206\u6210\u591a\u4e2a\u5b50key\uff1b\n\n\n\n\u8de8\u673a\u623f\u5bb9\u707e\n\n\n\u300a\u201c\u5f02\u5730\u591a\u6d3b\u201d\u591a\u673a\u623f\u90e8\u7f72\u7ecf\u9a8c\u8c08\u300b\n\n\u901a\u8fc7\u81ea\u7814\u4e2d\u95f4\u4ef6\u8fdb\u884c\u6570\u636e\u540c\u6b65\u3002\n\n\n\n\u300a\u5f02\u5730\u591a\u6d3b\uff08\u5f02\u5730\u53cc\u6d3b\uff09\u5b9e\u8df5\u7ecf\u9a8c\u300b\n\n\u6ce8\u610f\u5ef6\u8fdf\u95ee\u9898\uff0c\u591a\u6b21\u8de8\u673a\u623f\u8c03\u7528\u4f1a\u5c06\u5ef6\u65f6\u653e\u5927\u6570\u500d\u3002\n\u5efa\u623f\u95f4\u4e13\u7ebf\u5f88\u5927\u6982\u7387\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u505a\u597d\u8fd0\u7ef4\u548c\u7a0b\u5e8f\u5c42\u9762\u7684\u5bb9\u9519\u3002\n\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u7a0b\u5e8f\u7aef\u6570\u636e\u53cc\u5199\uff0c\u8981\u6709\u81ea\u52a8\u540c\u6b65\u65b9\u6848\u3002\n\u6570\u636e\u6c38\u4e0d\u5728\u9ad8\u5ef6\u8fdf\u548c\u8f83\u5dee\u7f51\u7edc\u8d28\u91cf\u4e0b\uff0c\u8003\u8651\u540c\u6b65\u8d28\u91cf\u95ee\u9898\u3002\n\u6838\u5fc3\u4e1a\u52a1\u548c\u6b21\u8981\u4e1a\u52a1\u5206\u800c\u6cbb\u4e4b\uff0c\u751a\u81f3\u53ea\u8003\u8651\u6838\u5fc3\u4e1a\u52a1\u3002\n\u5f02\u5730\u591a\u6d3b\u76d1\u63a7\u90e8\u7f72\u3001\u6d4b\u8bd5\u4e5f\u8981\u8ddf\u4e0a\u3002\n\u4e1a\u52a1\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\u8003\u8651\u7528\u6237\u5206\u533a\uff0c\u5c24\u5176\u662f\u6e38\u620f\u3001\u90ae\u7bb1\u4e1a\u52a1\u3002\n\u63a7\u5236\u8de8\u673a\u623f\u6d88\u606f\u4f53\u5927\u5c0f\uff0c\u8d8a\u5c0f\u8d8a\u597d\u3002\n\u8003\u8651\u4f7f\u7528docker\u5bb9\u5668\u865a\u62df\u5316\u6280\u672f\uff0c\u63d0\u9ad8\u52a8\u6001\u8c03\u5ea6\u80fd\u529b\u3002\n\n\n\n\u5bb9\u707e\u6280\u672f\u53ca\u5efa\u8bbe\u7ecf\u9a8c\u4ecb\u7ecd\n\n\n\u5bb9\u707e\u6f14\u7ec3\u6d41\u7a0b\n\n\u300a\u4f9d\u8d56\u6cbb\u7406\u3001\u7070\u5ea6\u53d1\u5e03\u3001\u6545\u969c\u6f14\u7ec3\uff0c\u963f\u91cc\u7535\u5546\u6545\u969c\u6f14\u7ec3\u7cfb\u7edf\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u6218\u7ecf\u9a8c\u300b\n\n\u5e38\u89c1\u6545\u969c\u753b\u50cf\n\u6848\u4f8b\uff1a\u9884\u6848\u6709\u6548\u6027\u3001\u9884\u6848\u6709\u6548\u6027\u3001\u6545\u969c\u590d\u73b0\u3001\u67b6\u6784\u5bb9\u707e\u6d4b\u8bd5\u3001\u53c2\u6570\u8c03\u4f18\u3001\u53c2\u6570\u8c03\u4f18\u3001\u6545\u969c\u7a81\u88ad\u3001\u8054\u5408\u6f14\u7ec3\u3002\n\n\n\n\u5e73\u6ed1\u542f\u52a8\n\n\n\u5e73\u6ed1\u91cd\u542f\u5e94\u7528\u601d\u8def\n1.\u7aef\u6d41\u91cf\uff08\u5982vip\u5c42\uff09\u30012. flush \u6570\u636e(\u5982\u679c\u6709)\u30013, \u91cd\u542f\u5e94\u7528\n\n\n\u300aJVM\u5b89\u5168\u9000\u51fa\uff08\u5982\u4f55\u4f18\u96c5\u7684\u5173\u95edjava\u670d\u52a1\uff09\u300b\n\u63a8\u8350\u63a8\u51fa\u65b9\u5f0f\uff1aSystem.exit\uff0cKill SIGTERM\uff1b\u4e0d\u63a8\u8350 kill-9\uff1b\u7528 Runtime.addShutdownHook \u6ce8\u518c\u94a9\u5b50\u3002\n\n\n\u300a\u5e38\u89c1Java\u5e94\u7528\u5982\u4f55\u4f18\u96c5\u5173\u95ed\u300b\nJava\u3001Spring\u3001Dubbo \u4f18\u96c5\u5173\u95ed\u65b9\u5f0f\u3002\n\n\n\u6570\u636e\u5e93\u6269\u5c55\n\u8bfb\u5199\u5206\u79bb\u6a21\u5f0f\n\n\n\u300aMysql\u4e3b\u4ece\u65b9\u6848\u7684\u5b9e\u73b0\u300b\n\n\n\u300a\u642d\u5efaMySQL\u4e3b\u4ece\u590d\u5236\u7ecf\u5178\u67b6\u6784\u300b\n\n\n\u300aHaproxy+\u591a\u53f0MySQL\u4ece\u670d\u52a1\u5668(Slave) \u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u300b\n\n\n\u300aDRBD+Heartbeat+Mysql\u9ad8\u53ef\u7528\u8bfb\u5199\u5206\u79bb\u67b6\u6784\u300b\n\nDRDB \u8fdb\u884c\u78c1\u76d8\u590d\u5236\uff0c\u907f\u514d\u5355\u70b9\u95ee\u9898\u3002\n\n\n\n\u300aMySQL Cluster \u65b9\u5f0f\u300b\n\n\n\u5206\u7247\u6a21\u5f0f\n\n\n\u300a\u5206\u5e93\u5206\u8868\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u53ca\u65b9\u6848\u300b\n\n\u4e2d\u95f4\u4ef6\uff1a \u8f7b\u91cf\u7ea7\uff1asharding-jdbc\u3001TSharding\uff1b\u91cd\u91cf\u7ea7\uff1aAtlas\u3001MyCAT\u3001Vitess\u7b49\u3002\n\u95ee\u9898\uff1a\u4e8b\u52a1\u3001Join\u3001\u8fc1\u79fb\u3001\u6269\u5bb9\u3001ID\u3001\u5206\u9875\u7b49\u3002\n\u4e8b\u52a1\u8865\u507f\uff1a\u5bf9\u6570\u636e\u8fdb\u884c\u5bf9\u5e10\u68c0\u67e5;\u57fa\u4e8e\u65e5\u5fd7\u8fdb\u884c\u6bd4\u5bf9;\u5b9a\u671f\u540c\u6807\u51c6\u6570\u636e\u6765\u6e90\u8fdb\u884c\u540c\u6b65\u7b49\u3002\n\u5206\u5e93\u7b56\u7565\uff1a\u6570\u503c\u8303\u56f4\uff1b\u53d6\u6a21\uff1b\u65e5\u671f\u7b49\u3002\n\u5206\u5e93\u6570\u91cf\uff1a\u901a\u5e38 MySQL \u5355\u5e93 5\u5343\u4e07\u6761\u3001Oracle \u5355\u5e93\u4e00\u4ebf\u6761\u9700\u8981\u5206\u5e93\u3002\n\n\n\n\u300aMySql\u5206\u8868\u548c\u8868\u5206\u533a\u8be6\u89e3\u300b\n\n\u5206\u533a\uff1a\u662fMySQL\u5185\u90e8\u673a\u5236\uff0c\u5bf9\u5ba2\u6237\u7aef\u900f\u660e\uff0c\u6570\u636e\u5b58\u50a8\u5728\u4e0d\u540c\u6587\u4ef6\u4e2d\uff0c\u8868\u9762\u4e0a\u770b\u662f\u540c\u4e00\u4e2a\u8868\u3002\n\u5206\u8868\uff1a\u7269\u7406\u4e0a\u521b\u5efa\u4e0d\u540c\u7684\u8868\u3001\u5ba2\u6237\u7aef\u9700\u8981\u7ba1\u7406\u5206\u8868\u8def\u7531\u3002\n\n\n\n\u670d\u52a1\u6cbb\u7406\n\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\n\n\n\u300a\u6c38\u4e0d\u5931\u8054\uff01\u5982\u4f55\u5b9e\u73b0\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\u7684\u670d\u52a1\u53d1\u73b0\uff1f\u300b\n\n\u5ba2\u6237\u7aef\u670d\u52a1\u53d1\u73b0\u6a21\u5f0f\uff1a\u5ba2\u6237\u7aef\u76f4\u63a5\u67e5\u8be2\u6ce8\u518c\u8868\uff0c\u540c\u65f6\u81ea\u5df1\u8d1f\u8d23\u8d1f\u8f7d\u5747\u8861\u3002Eureka \u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002\n\u670d\u52a1\u5668\u7aef\u670d\u52a1\u53d1\u73b0\u6a21\u5f0f\uff1a\u5ba2\u6237\u7aef\u901a\u8fc7\u8d1f\u8f7d\u5747\u8861\u67e5\u8be2\u670d\u52a1\u5b9e\u4f8b\u3002\n\n\n\n\u300aSpringCloud\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u6bd4\u8f83:Consul vs Zookeeper vs Etcd vs Eureka\u300b\n\nCAP\u652f\u6301\uff1aConsul\uff08CA\uff09\u3001zookeeper\uff08cp\uff09\u3001etcd\uff08cp\uff09 \u3001euerka\uff08ap\uff09\n\u4f5c\u8005\u8ba4\u4e3a\u76ee\u524d Consul \u5bf9 Spring cloud \u7684\u652f\u6301\u6bd4\u8f83\u597d\u3002\n\n\n\n\u300a\u57fa\u4e8eZookeeper\u7684\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\u300b\n\n\u4f18\u70b9\uff1aAPI\u7b80\u5355\u3001Pinterest\uff0cAirbnb \u5728\u7528\u3001\u591a\u8bed\u8a00\u3001\u901a\u8fc7watcher\u673a\u5236\u6765\u5b9e\u73b0\u914d\u7f6ePUSH\uff0c\u80fd\u5feb\u901f\u54cd\u5e94\u914d\u7f6e\u53d8\u5316\u3002\n\n\n\n\u670d\u52a1\u8def\u7531\u63a7\u5236\n\n\u300a\u5206\u5e03\u5f0f\u670d\u52a1\u6846\u67b6\u5b66\u4e60\u7b14\u8bb04 \u670d\u52a1\u8def\u7531\u300b\n\n\u539f\u5219\uff1a\u900f\u660e\u5316\u8def\u7531\n\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\uff1a\u968f\u673a\u3001\u8f6e\u8be2\u3001\u670d\u52a1\u8c03\u7528\u5ef6\u8fdf\u3001\u4e00\u81f4\u6027\u54c8\u5e0c\u3001\u7c98\u6ede\u8fde\u63a5\n\u672c\u5730\u8def\u7531\u4f18\u5148\u7b56\u7565\uff1ainjvm(\u4f18\u5148\u8c03\u7528jvm\u5185\u90e8\u7684\u670d\u52a1)\uff0cinnative(\u4f18\u5148\u4f7f\u7528\u76f8\u540c\u7269\u7406\u673a\u7684\u670d\u52a1),\u539f\u5219\u4e0a\u627e\u8ddd\u79bb\u6700\u8fd1\u7684\u670d\u52a1\u3002\n\u914d\u7f6e\u65b9\u5f0f\uff1a\u7edf\u4e00\u6ce8\u518c\u8868\uff1b\u672c\u5730\u914d\u7f6e\uff1b\u52a8\u6001\u4e0b\u53d1\u3002\n\n\n\n\u5206\u5e03\u5f0f\u4e00\u81f4\nCAP \u4e0e BASE \u7406\u8bba\n\n\u300a\u4ece\u5206\u5e03\u5f0f\u4e00\u81f4\u6027\u8c08\u5230CAP\u7406\u8bba\u3001BASE\u7406\u8bba\u300b\n\n\u4e00\u81f4\u6027\u5206\u7c7b\uff1a\u5f3a\u4e00\u81f4(\u7acb\u5373\u4e00\u81f4)\uff1b\u5f31\u4e00\u81f4(\u53ef\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u5b9e\u73b0\u4e00\u81f4\uff0c\u6bd4\u5982\u79d2\u7ea7)\uff1b\u6700\u7ec8\u4e00\u81f4(\u5f31\u4e00\u81f4\u7684\u4e00\u79cd\uff0c\u4e00\u5b9a\u65f6\u95f4\u5185\u6700\u7ec8\u4e00\u81f4)\nCAP\uff1a\u4e00\u81f4\u6027\u3001\u53ef\u7528\u6027\u3001\u5206\u533a\u5bb9\u9519\u6027(\u7f51\u7edc\u6545\u969c\u5f15\u8d77)\nBASE\uff1aBasically Available\uff08\u57fa\u672c\u53ef\u7528\uff09\u3001Soft state\uff08\u8f6f\u72b6\u6001\uff09\u548cEventually consistent\uff08\u6700\u7ec8\u4e00\u81f4\u6027\uff09\nBASE\u7406\u8bba\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u5373\u4f7f\u65e0\u6cd5\u505a\u5230\u5f3a\u4e00\u81f4\u6027\uff0c\u4f46\u6bcf\u4e2a\u5e94\u7528\u90fd\u53ef\u4ee5\u6839\u636e\u81ea\u8eab\u4e1a\u52a1\u7279\u70b9\uff0c\u91c7\u7528\u9002\u5f53\u7684\u65b9\u5f0f\u6765\u4f7f\u7cfb\u7edf\u8fbe\u5230\u6700\u7ec8\u4e00\u81f4\u6027\u3002\n\n\n\n\u5206\u5e03\u5f0f\u9501\n\n\n\u300a\u5206\u5e03\u5f0f\u9501\u7684\u51e0\u79cd\u5b9e\u73b0\u65b9\u5f0f\u300b\n\n\u57fa\u4e8e\u6570\u636e\u5e93\u7684\u5206\u5e03\u5f0f\u9501\uff1a\u4f18\u70b9\uff1a\u64cd\u4f5c\u7b80\u5355\u3001\u5bb9\u6613\u7406\u89e3\u3002\u7f3a\u70b9\uff1a\u5b58\u5728\u5355\u70b9\u95ee\u9898\u3001\u6570\u636e\u5e93\u6027\u80fd\u591f\u5f00\u9500\u8f83\u5927\u3001\u4e0d\u53ef\u91cd\u5165\uff1b\n\u57fa\u4e8e\u7f13\u5b58\u7684\u5206\u5e03\u5f0f\u9501\uff1a\u4f18\u70b9\uff1a\u975e\u963b\u585e\u3001\u6027\u80fd\u597d\u3002\u7f3a\u70b9\uff1a\u64cd\u4f5c\u4e0d\u597d\u5bb9\u6613\u9020\u6210\u9501\u65e0\u6cd5\u91ca\u653e\u7684\u60c5\u51b5\u3002\nZookeeper \u5206\u5e03\u5f0f\u9501\uff1a\u901a\u8fc7\u6709\u5e8f\u4e34\u65f6\u8282\u70b9\u5b9e\u73b0\u9501\u673a\u5236\uff0c\u81ea\u5df1\u5bf9\u5e94\u7684\u8282\u70b9\u9700\u8981\u6700\u5c0f\uff0c\u5219\u88ab\u8ba4\u4e3a\u662f\u83b7\u5f97\u4e86\u9501\u3002\u4f18\u70b9\uff1a\u96c6\u7fa4\u53ef\u4ee5\u900f\u660e\u89e3\u51b3\u5355\u70b9\u95ee\u9898\uff0c\u907f\u514d\u9501\u4e0d\u88ab\u91ca\u653e\u95ee\u9898\uff0c\u540c\u65f6\u9501\u53ef\u4ee5\u91cd\u5165\u3002\u7f3a\u70b9\uff1a\u6027\u80fd\u4e0d\u5982\u7f13\u5b58\u65b9\u5f0f\uff0c\u541e\u5410\u91cf\u4f1a\u968f\u7740zk\u96c6\u7fa4\u89c4\u6a21\u53d8\u5927\u800c\u4e0b\u964d\u3002\n\n\n\n\u300a\u57fa\u4e8eZookeeper\u7684\u5206\u5e03\u5f0f\u9501\u300b\n\n\u6e05\u695a\u7684\u539f\u7406\u63cf\u8ff0 + Java \u4ee3\u7801\u793a\u4f8b\u3002\n\n\n\n\u300ajedisLock\u2014redis\u5206\u5e03\u5f0f\u9501\u5b9e\u73b0\u300b\n\n\u57fa\u4e8e setnx(set if ont exists)\uff0c\u6709\u5219\u8fd4\u56defalse\uff0c\u5426\u5219\u8fd4\u56detrue\u3002\u5e76\u652f\u6301\u8fc7\u671f\u65f6\u95f4\u3002\n\n\n\n\u300aMemcached \u548c Redis \u5206\u5e03\u5f0f\u9501\u65b9\u6848\u300b\n\n\u5229\u7528 memcached \u7684 add\uff08\u6709\u522b\u4e8eset\uff09\u64cd\u4f5c\uff0c\u5f53key\u5b58\u5728\u65f6\uff0c\u8fd4\u56defalse\u3002\n\n\n\n\u5206\u5e03\u5f0f\u4e00\u81f4\u6027\u7b97\u6cd5\nPAXOS\n\n\u300a\u5206\u5e03\u5f0f\u7cfb\u5217\u6587\u7ae0\u2014\u2014Paxos\u7b97\u6cd5\u539f\u7406\u4e0e\u63a8\u5bfc\u300b\n\u300aPaxos-->Fast Paxos-->Zookeeper\u5206\u6790\u300b\n\u300a\u3010\u5206\u5e03\u5f0f\u3011Zookeeper\u4e0ePaxos\u300b\n\nZab\n\n\u300aZab\uff1aZookeeper \u4e2d\u7684\u5206\u5e03\u5f0f\u4e00\u81f4\u6027\u534f\u8bae\u4ecb\u7ecd\u300b\n\nRaft\n\n\u300aRaft \u4e3a\u4ec0\u4e48\u662f\u66f4\u6613\u7406\u89e3\u7684\u5206\u5e03\u5f0f\u4e00\u81f4\u6027\u7b97\u6cd5\u300b\n\n\u4e09\u79cd\u89d2\u8272\uff1aLeader\uff08\u9886\u8896\uff09\u3001Follower\uff08\u7fa4\u4f17\uff09\u3001Candidate\uff08\u5019\u9009\u4eba\uff09\n\u901a\u8fc7\u968f\u673a\u7b49\u5f85\u7684\u65b9\u5f0f\u53d1\u51fa\u6295\u7968\uff0c\u5f97\u7968\u591a\u7684\u83b7\u80dc\u3002\n\n\n\nGossip\n\n\u300aGossip\u7b97\u6cd5\u300b\n\n\u4e24\u9636\u6bb5\u63d0\u4ea4\u3001\u591a\u9636\u6bb5\u63d0\u4ea4\n\n\u300a\u5173\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001\u4e24\u9636\u6bb5\u63d0\u4ea4\u534f\u8bae\u3001\u4e09\u9636\u63d0\u4ea4\u534f\u8bae\u300b\n\n\u5e42\u7b49\n\n\u300a\u5206\u5e03\u5f0f\u7cfb\u7edf---\u5e42\u7b49\u6027\u8bbe\u8ba1\u300b\n\n\u5e42\u7b49\u7279\u6027\u7684\u4f5c\u7528\uff1a\u8be5\u8d44\u6e90\u5177\u5907\u5e42\u7b49\u6027\uff0c\u8bf7\u6c42\u65b9\u65e0\u9700\u62c5\u5fc3\u91cd\u590d\u8c03\u7528\u4f1a\u4ea7\u751f\u9519\u8bef\u3002\n\u5e38\u89c1\u4fdd\u8bc1\u5e42\u7b49\u7684\u624b\u6bb5\uff1aMVCC\uff08\u7c7b\u4f3c\u4e8e\u4e50\u89c2\u9501\uff09\u3001\u53bb\u91cd\u8868(\u552f\u4e00\u7d22\u5f15)\u3001\u60b2\u89c2\u9501\u3001\u4e00\u6b21\u6027token\u3001\u5e8f\u5217\u53f7\u65b9\u5f0f\u3002\n\n\n\n\u5206\u5e03\u5f0f\u4e00\u81f4\u65b9\u6848\n\n\u300a\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e8b\u52a1\u4e00\u81f4\u6027\u89e3\u51b3\u65b9\u6848\u300b\n\u300a\u4fdd\u8bc1\u5206\u5e03\u5f0f\u7cfb\u7edf\u6570\u636e\u4e00\u81f4\u6027\u76846\u79cd\u65b9\u6848\u300b\n\n\u5206\u5e03\u5f0f Leader \u8282\u70b9\u9009\u4e3e\n\n\u300a\u5229\u7528zookeeper\u5b9e\u73b0\u5206\u5e03\u5f0fleader\u8282\u70b9\u9009\u4e3e\u300b\n\nTCC(Try/Confirm/Cancel) \u67d4\u6027\u4e8b\u52a1\n\n\u300a\u4f20\u7edf\u4e8b\u52a1\u4e0e\u67d4\u6027\u4e8b\u52a1\u300b\n\n\u57fa\u4e8eBASE\u7406\u8bba\uff1a\u57fa\u672c\u53ef\u7528\u3001\u67d4\u6027\u72b6\u6001\u3001\u6700\u7ec8\u4e00\u81f4\u3002\n\u89e3\u51b3\u65b9\u6848\uff1a\u8bb0\u5f55\u65e5\u5fd7+\u8865\u507f\uff08\u6b63\u5411\u8865\u5145\u6216\u8005\u56de\u6eda\uff09\u3001\u6d88\u606f\u91cd\u8bd5(\u8981\u6c42\u7a0b\u5e8f\u8981\u5e42\u7b49)\uff1b\u201c\u65e0\u9501\u8bbe\u8ba1\u201d\u3001\u91c7\u7528\u4e50\u89c2\u9501\u673a\u5236\u3002\n\n\n\n\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\n\n\u8bf4\u8bf4\u5206\u5e03\u5f0f\u6587\u4ef6\u5b58\u50a8\u7cfb\u7edf-\u57fa\u672c\u67b6\u6784 \uff1f\n\u300a\u5404\u79cd\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u7684\u6bd4\u8f83\u300b \uff1f\n\nHDFS\uff1a\u5927\u6279\u91cf\u6570\u636e\u8bfb\u5199\uff0c\u7528\u4e8e\u9ad8\u541e\u5410\u91cf\u7684\u573a\u666f\uff0c\u4e0d\u9002\u5408\u5c0f\u6587\u4ef6\u3002\nFastDFS\uff1a\u8f7b\u91cf\u7ea7\u3001\u9002\u5408\u5c0f\u6587\u4ef6\u3002\n\n\n\n\u552f\u4e00ID \u751f\u6210\n\u5168\u5c40\u552f\u4e00ID\n\n\n\u300a\u9ad8\u5e76\u53d1\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u751f\u6210\u5168\u5c40\u552f\u4e00Id\u6c47\u603b\u300b\n\nTwitter \u65b9\u6848\uff08Snowflake \u7b97\u6cd5\uff09\uff1a41\u4f4d\u65f6\u95f4\u6233+10\u4f4d\u673a\u5668\u6807\u8bc6\uff08\u6bd4\u5982IP\uff0c\u670d\u52a1\u5668\u540d\u79f0\u7b49\uff09+12\u4f4d\u5e8f\u5217\u53f7(\u672c\u5730\u8ba1\u6570\u5668)\nFlicker \u65b9\u6848\uff1aMySQL\u81ea\u589eID + \"REPLACE INTO XXX:SELECT LAST_INSERT_ID();\"\nUUID\uff1a\u7f3a\u70b9\uff0c\u65e0\u5e8f\uff0c\u5b57\u7b26\u4e32\u8fc7\u957f\uff0c\u5360\u7528\u7a7a\u95f4\uff0c\u5f71\u54cd\u68c0\u7d22\u6027\u80fd\u3002\nMongoDB \u65b9\u6848\uff1a\u5229\u7528 ObjectId\u3002\u7f3a\u70b9\uff1a\u4e0d\u80fd\u81ea\u589e\u3002\n\n\n\n\u300aTDDL \u5728\u5206\u5e03\u5f0f\u4e0b\u7684SEQUENCE\u539f\u7406\u300b\n\n\u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa sequence \u8868\uff0c\u7528\u4e8e\u8bb0\u5f55\uff0c\u5f53\u524d\u5df2\u88ab\u5360\u7528\u7684id\u6700\u5927\u503c\u3002\n\u6bcf\u53f0\u5ba2\u6237\u7aef\u4e3b\u673a\u53d6\u4e00\u4e2aid\u533a\u95f4\uff08\u6bd4\u5982 1000~2000\uff09\u7f13\u5b58\u5728\u672c\u5730\uff0c\u5e76\u66f4\u65b0 sequence \u8868\u4e2d\u7684id\u6700\u5927\u503c\u8bb0\u5f55\u3002\n\u5ba2\u6237\u7aef\u4e3b\u673a\u4e4b\u95f4\u53d6\u4e0d\u540c\u7684id\u533a\u95f4\uff0c\u7528\u5b8c\u518d\u53d6\uff0c\u4f7f\u7528\u4e50\u89c2\u9501\u673a\u5236\u63a7\u5236\u5e76\u53d1\u3002\n\n\n\n\u4e00\u81f4\u6027Hash\u7b97\u6cd5\n\n\u300a\u4e00\u81f4\u6027\u54c8\u5e0c\u7b97\u6cd5\u300b\n\n\u8bbe\u8ba1\u601d\u60f3 & \u5f00\u53d1\u6a21\u5f0f\nDDD(Domain-driven Design - \u9886\u57df\u9a71\u52a8\u8bbe\u8ba1)\n\n\n\u300a\u6d45\u8c08\u6211\u5bf9DDD\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\u7684\u7406\u89e3\u300b\n\n\u6982\u5ff5\uff1aDDD \u4e3b\u8981\u5bf9\u4f20\u7edf\u8f6f\u4ef6\u5f00\u53d1\u6d41\u7a0b(\u5206\u6790-\u8bbe\u8ba1-\u7f16\u7801)\u4e2d\u5404\u9636\u6bb5\u7684\u5272\u88c2\u95ee\u9898\u800c\u63d0\u51fa\uff0c\u907f\u514d\u7531\u4e8e\u4e00\u5f00\u59cb\u5206\u6790\u4e0d\u660e\u6216\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u4fe1\u606f\u6d41\u8f6c\u4e0d\u4e00\u81f4\u800c\u9020\u6210\u8f6f\u4ef6\u65e0\u6cd5\u4ea4\u4ed8\uff08\u548c\u9700\u6c42\u65b9\u8bbe\u60f3\u4e0d\u4e00\u81f4\uff09\u7684\u95ee\u9898\u3002DDD \u5f3a\u8c03\u4e00\u5207\u4ee5\u9886\u57df\uff08Domain\uff09\u4e3a\u4e2d\u5fc3\uff0c\u5f3a\u8c03\u9886\u57df\u4e13\u5bb6\uff08Domain Expert\uff09\u7684\u4f5c\u7528\uff0c\u5f3a\u8c03\u5148\u5b9a\u4e49\u597d\u9886\u57df\u6a21\u578b\u4e4b\u540e\u5728\u8fdb\u884c\u5f00\u53d1\uff0c\u5e76\u4e14\u9886\u57df\u6a21\u578b\u53ef\u4ee5\u6307\u5bfc\u5f00\u53d1\uff08\u6240\u8c13\u7684\u9a71\u52a8\uff09\u3002\n\u8fc7\u7a0b\uff1a\u7406\u89e3\u9886\u57df\u3001\u62c6\u5206\u9886\u57df\u3001\u7ec6\u5316\u9886\u57df\uff0c\u6a21\u578b\u7684\u51c6\u786e\u6027\u53d6\u51b3\u4e8e\u6a21\u578b\u7684\u7406\u89e3\u6df1\u5ea6\u3002\n\u8bbe\u8ba1\uff1aDDD \u4e2d\u63d0\u51fa\u4e86\u5efa\u6a21\u5de5\u5177\uff0c\u6bd4\u5982\u805a\u5408\u3001\u5b9e\u4f53\u3001\u503c\u5bf9\u8c61\u3001\u5de5\u5382\u3001\u4ed3\u50a8\u3001\u9886\u57df\u670d\u52a1\u3001\u9886\u57df\u4e8b\u4ef6\u6765\u5e2e\u52a9\u9886\u57df\u5efa\u6a21\u3002\n\n\n\n\u300a\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\u7684\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3\u300b\n\n\u9886\u57df\uff08Doamin\uff09\u672c\u8d28\u4e0a\u5c31\u662f\u95ee\u9898\u57df\uff0c\u6bd4\u5982\u4e00\u4e2a\u7535\u5546\u7cfb\u7edf\uff0c\u4e00\u4e2a\u8bba\u575b\u7cfb\u7edf\u7b49\u3002\n\u754c\u9650\u4e0a\u4e0b\u6587\uff08Bounded Context\uff09\uff1a\u9610\u8ff0\u5b50\u57df\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u6210\u4e00\u4e2a\u5b50\u7cfb\u7edf\u6216\u7ec4\u4ef6\u6a21\u5757\u3002\n\u9886\u57df\u6a21\u578b\uff08Domain Model\uff09\uff1aDDD\u7684\u6838\u5fc3\u662f\u5efa\u7acb\uff08\u7528\u901a\u7528\u63cf\u8ff0\u8bed\u8a00\u3001\u5de5\u5177\u2014\u9886\u57df\u901a\u7528\u8bed\u8a00\uff09\u6b63\u786e\u7684\u9886\u57df\u6a21\u578b\uff1b\u53cd\u5e94\u4e1a\u52a1\u9700\u6c42\u7684\u672c\u8d28\uff0c\u5305\u62ec\u5b9e\u4f53\u548c\u8fc7\u7a0b\uff1b\u5176\u8d2f\u7a7f\u8f6f\u4ef6\u5206\u6790\u3001\u8bbe\u8ba1\u3001\u5f00\u53d1 \u7684\u6574\u4e2a\u8fc7\u7a0b\uff1b\u5e38\u7528\u8868\u8fbe\u9886\u57df\u6a21\u578b\u7684\u65b9\u5f0f\uff1a\u56fe\u3001\u4ee3\u7801\u6216\u6587\u5b57\uff1b\n\u9886\u57df\u901a\u7528\u8bed\u8a00\uff1a\u9886\u57df\u4e13\u5bb6\u3001\u5f00\u53d1\u8bbe\u8ba1\u4eba\u5458\u90fd\u80fd\u7acb\u5373\u7684\u8bed\u8a00\u6216\u5de5\u5177\u3002\n\u7ecf\u5178\u5206\u5c42\u67b6\u6784\uff1a\u7528\u6237\u754c\u9762/\u5c55\u793a\u5c42\u3001\u5e94\u7528\u5c42\u3001\u9886\u57df\u5c42\u3001\u57fa\u7840\u8bbe\u65bd\u5c42\uff0c\u662f\u56db\u5c42\u67b6\u6784\u6a21\u5f0f\u3002\n\u4f7f\u7528\u7684\u6a21\u5f0f\uff1a\n\n\u5173\u8054\u5c3d\u91cf\u5c11\uff0c\u5c3d\u91cf\u5355\u9879\uff0c\u5c3d\u91cf\u964d\u4f4e\u6574\u4f53\u590d\u6742\u5ea6\u3002\n\u5b9e\u4f53\uff08Entity\uff09\uff1a\u9886\u57df\u4e2d\u7684\u552f\u4e00\u6807\u793a\uff0c\u4e00\u4e2a\u5b9e\u4f53\u7684\u5c5e\u6027\u5c3d\u91cf\u5c11\uff0c\u5c11\u5219\u6e05\u6670\u3002\n\u503c\u5bf9\u8c61\uff08Value Object\uff09\uff1a\u6ca1\u6709\u552f\u4e00\u6807\u8bc6\uff0c\u4e14\u5c5e\u6027\u503c\u4e0d\u53ef\u53d8\uff0c\u5c0f\u4e8c\u7b80\u5355\u7684\u5bf9\u8c61\uff0c\u6bd4\u5982Date\u3002\n\u9886\u57df\u670d\u52a1\uff08Domain Service\uff09\uff1a \u534f\u8c03\u591a\u4e2a\u9886\u57df\u5bf9\u8c61\uff0c\u53ea\u6709\u65b9\u6cd5\u6ca1\u6709\u72b6\u6001(\u4e0d\u5b58\u6570\u636e)\uff1b\u53ef\u4ee5\u5206\u4e3a\u5e94\u7528\u5c42\u670d\u52a1\uff0c\u9886\u57df\u5c42\u670d\u52a1\u3001\u57fa\u7840\u5c42\u670d\u52a1\u3002\n\u805a\u5408\u53ca\u805a\u5408\u6839\uff08Aggregate\uff0cAggregate Root\uff09\uff1a\u805a\u5408\u5b9a\u4e49\u4e86\u4e00\u7ec4\u5177\u6709\u5185\u805a\u5173\u7cfb\u7684\u76f8\u5173\u5bf9\u8c61\u7684\u96c6\u5408\uff1b\u805a\u5408\u6839\u662f\u5bf9\u805a\u5408\u5f15\u7528\u7684\u552f\u4e00\u5143\u7d20\uff1b\u5f53\u4fee\u6539\u4e00\u4e2a\u805a\u5408\u65f6\uff0c\u5fc5\u987b\u5728\u4e8b\u52a1\u7ea7\u522b\uff1b\u5927\u90e8\u5206\u9886\u57df\u6a21\u578b\u4e2d\uff0c\u670970%\u7684\u805a\u5408\u901a\u5e38\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f53\uff0c30%\u53ea\u67092~3\u4e2a\u5b9e\u4f53\uff1b\u5982\u679c\u4e00\u4e2a\u805a\u5408\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f53\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b9e\u4f53\u5c31\u662f\u805a\u5408\u6839\uff1b\u5982\u679c\u6709\u591a\u4e2a\u5b9e\u4f53\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u601d\u8003\u805a\u5408\u5185\u54ea\u4e2a\u5bf9\u8c61\u6709\u72ec\u7acb\u5b58\u5728\u7684\u610f\u4e49\u5e76\u4e14\u53ef\u4ee5\u548c\u5916\u90e8\u76f4\u63a5\u8fdb\u884c\u4ea4\u4e92\uff1b\n\u5de5\u5382\uff08Factory\uff09\uff1a\u7c7b\u4f3c\u4e8e\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u7684\u5de5\u5382\u6a21\u5f0f\u3002\n\u4ed3\u50a8\uff08Repository\uff09\uff1a\u6301\u4e45\u5316\u5230DB\uff0c\u7ba1\u7406\u5bf9\u8c61\uff0c\u4e14\u53ea\u5bf9\u805a\u5408\u8bbe\u8ba1\u4ed3\u50a8\u3002\n\n\n\n\n\n\u300a\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1(DDD)\u5b9e\u73b0\u4e4b\u8def\u300b\n\n\u805a\u5408\uff1a\u6bd4\u5982\u4e00\u8f86\u6c7d\u8f66\uff08Car\uff09\u5305\u542b\u4e86\u5f15\u64ce\uff08Engine\uff09\u3001\u8f66\u8f6e\uff08Wheel\uff09\u548c\u6cb9\u7bb1\uff08Tank\uff09\u7b49\u7ec4\u4ef6\uff0c\u7f3a\u4e00\u4e0d\u53ef\u3002\n\n\n\n\u300a\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\u7cfb\u5217\uff082\uff09\u6d45\u6790VO\u3001DTO\u3001DO\u3001PO\u7684\u6982\u5ff5\u3001\u533a\u522b\u548c\u7528\u5904\u300b\n\n\n\u547d\u4ee4\u67e5\u8be2\u804c\u8d23\u5206\u79bb(CQRS)\nCQRS \u2014 Command Query Responsibility Seperation\n\n\n\u300a\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\u7cfb\u5217 (\u516d)\uff1aCQRS\u300b\n\n\u6838\u5fc3\u601d\u60f3\uff1a\u8bfb\u5199\u5206\u79bb\uff08\u67e5\u8be2\u548c\u66f4\u65b0\u5728\u4e0d\u540c\u7684\u65b9\u6cd5\u4e2d\uff09\uff0c\u4e0d\u540c\u7684\u6d41\u7a0b\u53ea\u662f\u4e0d\u540c\u7684\u8bbe\u8ba1\u65b9\u5f0f\uff0cCQ\u4ee3\u7801\u5206\u79bb\uff0c\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u4f1a\u6709\u660e\u663e\u4f53\u73b0\uff08\u6709\u5197\u4f59\u6570\u636e\u7684\u60c5\u51b5\u4e0b\uff09\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u9ad8\u6027\u80fd\u3002\n\n\n\n\u300aDDD CQRS\u67b6\u6784\u548c\u4f20\u7edf\u67b6\u6784\u7684\u4f18\u7f3a\u70b9\u6bd4\u8f83\u300b\n\n\u6700\u7ec8\u4e00\u81f4\u7684\u8bbe\u8ba1\u7406\u5ff5\uff1b\u4f9d\u8d56\u4e8e\u9ad8\u53ef\u7528\u6d88\u606f\u4e2d\u95f4\u4ef6\u3002\n\n\n\n\u300aCQRS\u67b6\u6784\u7b80\u4ecb\u300b\n\n\u4e00\u4e2a\u5b9e\u73b0 CQRS \u7684\u62bd\u8c61\u6848\u4f8b\u3002\n\n\n\n\u300a\u6df1\u5ea6\u957f\u6587\uff1a\u6211\u5bf9CQRS/EventSourcing\u67b6\u6784\u7684\u601d\u8003\u300b\n\nCQRS \u6a21\u5f0f\u5206\u6790 + 12306 \u62a2\u7968\u6848\u4f8b\n\n\n\n\u8d2b\u8840\uff0c\u5145\u8840\u6a21\u578b\n\n\u300a\u8d2b\u8840\uff0c\u5145\u8840\u6a21\u578b\u7684\u89e3\u91ca\u4ee5\u53ca\u4e00\u4e9b\u7ecf\u9a8c\u300b\n\n\u5931\u8840\u6a21\u578b\uff1a\u8001\u5b50\u548c\u513f\u5b50\u5206\u522b\u5b9a\u4e49\uff0c\u76f8\u4e92\u4e0d\u77e5\u9053\uff0c\u4e8c\u8005\u5b9e\u4f53\u5b9a\u4e49\u4e2d\u5b8c\u5168\u6ca1\u6709\u4e1a\u52a1\u903b\u8f91\uff0c\u901a\u8fc7\u5916\u90e8Service\u8fdb\u884c\u5173\u8054\u3002\n\u8d2b\u8840\u6a21\u578b\uff1a\u8001\u5b50\u77e5\u9053\u513f\u5b50\uff0c\u513f\u5b50\u4e5f\u77e5\u9053\u8001\u5b50\uff1b\u90e8\u5206\u4e1a\u52a1\u903b\u8f91\u653e\u5230\u5b9e\u4f53\u4e2d\uff1b\u4f18\u70b9\uff1a\u5404\u5c42\u5355\u9879\u4f9d\u8d56\uff0c\u7ed3\u6784\u6e05\u695a\uff0c\u6613\u4e8e\u7ef4\u62a4\uff1b\u7f3a\u70b9\uff1a\u4e0d\u7b26\u5408OO\u601d\u60f3\uff0c\u76f8\u6bd4\u4e8e\u5145\u8840\u6a21\u5f0f\uff0cService\u5c42\u8f83\u4e3a\u539a\u91cd\uff1b\n\u5145\u8840\u6a21\u578b\uff1a\u548c\u8d2b\u8840\u6a21\u578b\u7c7b\u4f3c\uff0c\u533a\u522b\u5728\u4e8e\u5982\u4f55\u5212\u5206\u4e1a\u52a1\u903b\u8f91\u3002\u4f18\u70b9\uff1aService\u5c42\u6bd4\u8f83\u8584\uff0c\u53ea\u5145\u5f53Facade\u7684\u89d2\u8272\uff0c\u4e0d\u548cDAO\u6253\u4ea4\u9053\u3001\u590d\u5408OO\u601d\u60f3\uff1b\u7f3a\u70b9\uff1a\u975e\u5355\u9879\u4f9d\u8d56\uff0cDO\u548cDAO\u4e4b\u95f4\u53cc\u5411\u4f9d\u8d56\u3001\u548cService\u5c42\u7684\u903b\u8f91\u5212\u5206\u5bb9\u6613\u9020\u6210\u6df7\u4e71\u3002\n\u80bf\u80c0\u6a21\u5f0f\uff1a\u662f\u4e00\u79cd\u6781\u7aef\u60c5\u51b5\uff0c\u53d6\u6d88Service\u5c42\u3001\u5168\u90e8\u4e1a\u52a1\u903b\u8f91\u653e\u5728DO\u4e2d\uff1b\u4f18\u70b9\uff1a\u7b26\u5408OO\u601d\u60f3\u3001\u7b80\u5316\u4e86\u5206\u5c42\uff1b\u7f3a\u70b9\uff1a\u66b4\u9732\u4fe1\u606f\u8fc7\u591a\u3001\u5f88\u591a\u975eDO\u903b\u8f91\u4e5f\u4f1a\u5f3a\u884c\u5e76\u5165DO\u3002\u8fd9\u79cd\u6a21\u5f0f\u5e94\u8be5\u907f\u514d\u3002\n\u4f5c\u8005\u4e3b\u5f20\u4f7f\u7528\u8d2b\u8840\u6a21\u5f0f\u3002\n\n\n\nActor \u6a21\u5f0f\nTODO\n\u54cd\u5e94\u5f0f\u7f16\u7a0b\nReactor\nTODO\nRxJava\nTODO\nVert.x\nTODO\nDODAF2.0\n\n\u300aDODAF2.0\u65b9\u6cd5\u8bba\u300b\n\u300aDODAF2.0\u4e4b\u80fd\u529b\u89c6\u89d2\u5982\u4f55\u843d\u5730\u300b\n\nServerless\n\u65e0\u9700\u8fc7\u591a\u5173\u7cfb\u670d\u52a1\u5668\u7684\u670d\u52a1\u67b6\u6784\u7406\u5ff5\u3002\n\n\n\u300a\u4ec0\u4e48\u662fServerless\u65e0\u670d\u52a1\u5668\u67b6\u6784\uff1f\u300b\n\nServerless \u4e0d\u4ee3\u8868\u51fa\u53bb\u670d\u52a1\u5668\uff0c\u800c\u662f\u53bb\u9664\u5bf9\u670d\u52a1\u5668\u8fd0\u884c\u72b6\u6001\u7684\u5173\u5fc3\u3002\nServerless \u4ee3\u8868\u4e00\u601d\u7ef4\u65b9\u5f0f\u7684\u8f6c\u53d8\uff0c\u4ece\u201c\u6784\u5efa\u4e00\u5957\u670d\u52a1\u5728\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\uff0c\u5bf9\u5bf9\u4e2a\u4e8b\u4ef6\u8fdb\u884c\u54cd\u5e94\u8f6c\u53d8\u4e3a\u6784\u5efa\u4e00\u4e2a\u4e3a\u670d\u52a1\u5668\uff0c\u6765\u54cd\u5e94\u4e00\u4e2a\u4e8b\u4ef6\u201d\u3002\nServerless \u4e0d\u4ee3\u8868\u67d0\u4e2a\u5177\u4f53\u7684\u6846\u67b6\u3002\n\n\n\n\u300a\u5982\u4f55\u7406\u89e3Serverless\uff1f\u300b\n\n\u4f9d\u8d56\u4e8e Baas \uff08(Mobile) Backend as a Service\uff09 \u548c Faas \uff08Functions as a service\uff09\n\n\n\nService Mesh\n\n\u300a\u4ec0\u4e48\u662fService Mesh\uff1f\u300b\n\u300a\u521d\u8bc6 Service Mesh\u300b\n\n\u9879\u76ee\u7ba1\u7406\n\u67b6\u6784\u8bc4\u5ba1\n\n\u300a\u67b6\u6784\u8bbe\u8ba1\u4e4b\u5982\u4f55\u8bc4\u5ba1\u67b6\u6784\u8bbe\u8ba1\u8bf4\u660e\u4e66\u300b\n\u300a\u4eba\u4eba\u90fd\u662f\u67b6\u6784\u5e08\uff1a\u975e\u529f\u80fd\u6027\u9700\u6c42\u300b\n\n\u91cd\u6784\n\n\u300a\u67b6\u6784\u4e4b\u91cd\u6784\u768412\u6761\u519b\u89c4\u300b\n\n\u4ee3\u7801\u89c4\u8303\n\n\u300a\u963f\u91cc\u5df4\u5df4Java\u5f00\u53d1\u624b\u518c\u300b\n\n\u4ee3\u7801 Review\n\u5236\u5ea6\u8fd8\u662f\u5236\u5ea6!\n\u53e6\u5916\uff0c\u6bcf\u4e2a\u516c\u53f8\u9700\u8981\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u548c\u76ee\u6807\u5236\u5b9a\u81ea\u5df1\u7684 check list\n\n\n\u300a\u4e3a\u4ec0\u4e48\u4f60\u505a\u4e0d\u597d Code Review\uff1f\u300b\n\n\u4ee3\u7801 review \u505a\u7684\u597d\uff0c\u5728\u4e8e\u5236\u5ea6\u5efa\u8bbe\u3002\n\n\n\n\u300a\u4ece\u96f6\u5f00\u59cbCode Review\u300b\n\n\n\u300aCode Review Checklist\u300b\n\n\n\u300aJava Code Review Checklist\u300b\n\n\n\u300a\u5982\u4f55\u7528 gitlab \u505a code review\u300b\n\n\nRUP\n\n\u300a\u8fd0\u7528RUP 4+1\u89c6\u56fe\u65b9\u6cd5\u8fdb\u884c\u8f6f\u4ef6\u67b6\u6784\u8bbe\u8ba1\u300b\n\n\u770b\u677f\u7ba1\u7406\n\n\u300a\u8bf4\u8bf4\u770b\u677f\u5728\u9879\u76ee\u4e2d\u7684\u5e94\u7528\u300b\n\nSCRUM\nSCRUM - \u4e89\u7403\n\n\n3\u4e2a\u89d2\u8272:Product Owner(PO) \u4ea7\u54c1\u8d1f\u8d23\u4eba;Scrum Master\uff08SM\uff09\uff0c\u63a8\u52a8Scrum\u6267\u884c;Team \u5f00\u53d1\u56e2\u961f\u3002\n\n\n3\u4e2a\u5de5\u4ef6\uff1aProduct Backlog \u4ea7\u54c1TODOLIST\uff0c\u542b\u4f18\u5148\u7ea7;Sprint Backlog \u529f\u80fd\u5f00\u53d1 TODO LIST\uff1b\u71c3\u5c3d\u56fe\uff1b\n\n\n\u4e94\u4e2a\u4ef7\u503c\u89c2\uff1a\u4e13\u6ce8\u3001\u52c7\u6c14\u3001\u516c\u5f00\u3001\u627f\u8bfa\u3001\u5c0a\u91cd\u3002\n\n\n\u300a\u654f\u6377\u9879\u76ee\u7ba1\u7406\u6d41\u7a0b-Scrum\u6846\u67b6\u6700\u5168\u603b\u7ed3\uff01\u300b\n\n\n\u300a\u654f\u6377\u5176\u5b9e\u5f88\u7b80\u53553---\u654f\u6377\u65b9\u6cd5\u4e4bscrum\u300b\n\n\n\u654f\u6377\u5f00\u53d1\nTODO\n\u6781\u9650\u7f16\u7a0b\uff08XP\uff09\nXP - eXtreme Programming\n\n\u300a\u4e3b\u6d41\u654f\u6377\u5f00\u53d1\u65b9\u6cd5\uff1a\u6781\u9650\u7f16\u7a0bXP\u300b\n\n\n\u662f\u4e00\u79cd\u6307\u5bfc\u5f00\u53d1\u4eba\u5458\u7684\u65b9\u6cd5\u8bba\u3002\n\n\n4\u5927\u4ef7\u503c\uff1a\n\n\u6c9f\u901a\uff1a\u9f13\u52b1\u53e3\u5934\u6c9f\u901a\uff0c\u63d0\u9ad8\u6548\u7387\u3002\n\u7b80\u5355\uff1a\u591f\u7528\u5c31\u597d\u3002\n\u53cd\u9988\uff1a\u53ca\u65f6\u53cd\u9988\u3001\u901a\u77e5\u76f8\u5173\u4eba\u3002\n\u52c7\u6c14\uff1a\u63d0\u5021\u62e5\u62b1\u53d8\u5316\uff0c\u6562\u4e8e\u91cd\u6784\u3002\n\n\n\n5\u4e2a\u539f\u5219\uff1a\u5feb\u901f\u53cd\u9988\u3001\u7b80\u5355\u6027\u5047\u8bbe\u3001\u9010\u6b65\u4fee\u6539\u3001\u63d0\u5021\u66f4\u6539\uff08\u5c0f\u6b65\u5feb\u8dd1\uff09\u3001\u4f18\u8d28\u5de5\u4f5c\uff08\u4fdd\u8bc1\u8d28\u91cf\u7684\u524d\u63d0\u4e0b\u4fdd\u8bc1\u5c0f\u6b65\u5feb\u8dd1\uff09\u3002\n\n\n5\u4e2a\u5de5\u4f5c\uff1a\u9636\u6bb5\u6027\u51b2\u523a\uff1b\u51b2\u523a\u8ba1\u5212\u4f1a\u8bae\uff1b\u6bcf\u65e5\u7ad9\u7acb\u4f1a\u8bae\uff1b\u51b2\u523a\u540ereview\uff1b\u56de\u987e\u4f1a\u8bae\u3002\n\n\n\n\n\u7ed3\u5bf9\u7f16\u7a0b\n\u8fb9\u5199\u7801\uff0c\u8fb9review\u3002\u80fd\u591f\u589e\u5f3a\u4ee3\u7801\u8d28\u91cf\u3001\u51cf\u5c11bug\u3002\n\n\u300a\u7ed3\u5bf9\u7f16\u7a0b\u300b\n\nPDCA \u5faa\u73af\u8d28\u91cf\u7ba1\u7406\nP\u2014\u2014PLAN \u7b56\u5212\uff0cD\u2014\u2014DO \u5b9e\u65bd\uff0cC\u2014\u2014CHECK \u68c0\u67e5\uff0cA\u2014\u2014ACT \u6539\u8fdb\n\n\u300aPDCA\u300b\n\nFMEA\u7ba1\u7406\u6a21\u5f0f\nTODO\n\u901a\u7528\u4e1a\u52a1\u672f\u8bed\nTODO\n\u6280\u672f\u8d8b\u52bf\nTODO\n\u653f\u7b56\u3001\u6cd5\u89c4\n\u6cd5\u5f8b\n\n\n\u300a\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u7f51\u7edc\u5b89\u5168\u6cd5\u300b\n\n2016\u5e7411\u67087\u65e5\u53d1\u5e03\uff0c\u81ea2017\u5e746\u67081\u65e5\u8d77\u65bd\u884c\n\n\n\n\u300a\u4e2a\u4eba\u4fe1\u606f\u4fdd\u62a4\u6cd5\u300b\n\n\u4e2a\u4eba\u4fe1\u606f\u4fdd\u62a4\u6cd5\u662f\u4e00\u90e8\u4fdd\u62a4\u4e2a\u4eba\u4fe1\u606f\u7684\u6cd5\u5f8b\u6761\u6b3e\uff0c\u73b0\u5c1a\u5728\u5236\u8ba2\u4e2d\uff0c2019\u5168\u56fd\u4e24\u4f1a\u4fe1\u606f\u5b89\u5168\u76f8\u5173\u63d0\u6848\u4e2d\uff0c\u6709\u653f\u534f\u59d4\u5458\u547c\u5401\u5173\u6ce8\u5927\u6570\u636e\u65f6\u4ee3\u9690\u79c1\u4fdd\u62a4\uff0c\u52a0\u901f\u7acb\u6cd5\u3002\n\n\n\n\u300a\u6700\u9ad8\u4eba\u6c11\u6cd5\u9662\u3001\u6700\u9ad8\u4eba\u6c11\u68c0\u5bdf\u9662\u5173\u4e8e\u529e\u7406\u4fb5\u72af\u516c\u6c11\u4e2a\u4eba\u4fe1\u606f\u5211\u4e8b\u6848\u4ef6\u9002\u7528\u6cd5\u5f8b\u82e5\u5e72\u95ee\u9898\u7684\u89e3\u91ca\u300b\n\n\u300a\u89e3\u91ca\u300b\u5171\u5341\u4e09\u6761\uff0c\u81ea2017\u5e746\u67081\u65e5\u8d77\u65bd\u884c\n\n\n\n1\u3001\u5bf9\u4e8e\u884c\u8e2a\u8f68\u8ff9\u4fe1\u606f\u3001\u901a\u4fe1\u5185\u5bb9\u3001\u5f81\u4fe1\u4fe1\u606f\u3001\u8d22\u4ea7\u4fe1\u606f\uff0c\u975e\u6cd5\u83b7\u53d6\u3001\u51fa\u552e\u6216\u8005\u63d0\u4f9b50\u6761\u4ee5\u4e0a\u5373\u7b97\u201c\u60c5\u8282\u4e25\u91cd\u201d\uff1b\n2\u3001\u5bf9\u4e8e\u4f4f\u5bbf\u4fe1\u606f\u3001\u901a\u4fe1\u8bb0\u5f55\u3001\u5065\u5eb7\u751f\u7406\u4fe1\u606f\u3001\u4ea4\u6613\u4fe1\u606f\u7b49\u5176\u4ed6\u53ef\u80fd\u5f71\u54cd\u4eba\u8eab\u3001\u8d22\u4ea7\u5b89\u5168\u7684\u516c\u6c11\u4e2a\u4eba\u4fe1\u606f\uff0c\u6807\u51c6\u5219\u662f 500\u6761\u4ee5\u4e0a\uff1b\n3\u3001\u5bf9\u4e8e\u5176\u4ed6\u516c\u6c11\u4e2a\u4eba\u4fe1\u606f\uff0c\u6807\u51c6\u4e3a 5000\u6761\u4ee5\u4e0a\u3002\n\n\n\n\n\u300a\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u7535\u5b50\u5546\u52a1\u6cd5\u300b\n\n2018\u5e748\u670831\u65e5\uff0c\u5341\u4e09\u5c4a\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a\u7b2c\u4e94\u6b21\u4f1a\u8bae\u8868\u51b3\u901a\u8fc7\u300a\u7535\u5b50\u5546\u52a1\u6cd5\u300b\uff0c\u81ea2019\u5e741\u67081\u65e5\u8d77\u65bd\u884c\n\u89e3\u8bfb\u7535\u5b50\u5546\u52a1\u6cd5\uff08\u4e00\uff09\u4ec0\u4e48\u662f\u7535\u5546\n\u89e3\u8bfb\u7535\u5b50\u5546\u52a1\u6cd5\uff08\u4e8c\uff09\u7535\u5546\u7ecf\u8425\u8005\n\u89e3\u8bfb\u7535\u5b50\u5546\u52a1\u6cd5\uff08\u4e09\uff09\u7535\u5546\u884c\u4e3a\u89c4\u8303\n\u89e3\u8bfb\u7535\u5b50\u5546\u52a1\u6cd5\uff08\u56db\uff09\u7535\u5546\u7684\u6cd5\u5f8b\u5173\u7cfb\n\u89e3\u8bfb\u7535\u5b50\u5546\u52a1\u6cd5\uff08\u5916\u4f20\uff09\u7535\u5546\u6323\u94b1\u7684\u79d8\u5bc6\n\u89e3\u8bfb\u7535\u5b50\u5546\u52a1\u6cd5\uff08\u5916\u4f20\uff09\u7535\u5546\u6a21\u5f0f\n\n\n\n\u7a0b\u5e8f\u5458\u9700\u8981\u77e5\u9053\u7684\u6cd5\u5f8b\u5e38\u8bc6\n\n\n\u767d\u8bdd\u6cd5\u5f8b42\u8bb2-\u4e3a\u7a0b\u5e8f\u5458\u6253\u9020\u7684\u4e13\u5c5e\u6cd5\u5f8b\u6b66\u5668\n\n\n\u4e25\u683c\u9075\u5b88\u5211\u6cd5253\u6cd5\u6761\n\u6211\u56fd\u5211\u6cd5\u7b2c253\u6761\u4e4b\u4e00\u89c4\u5b9a\uff1a\n\n\n\u56fd\u5bb6\u673a\u5173\u6216\u8005\u91d1\u878d\u3001\u7535\u4fe1\u3001\u4ea4\u901a\u3001\u6559\u80b2\u3001\u533b\u7597\u7b49\u5355\u4f4d\u7684\u5de5\u4f5c\u4eba\u5458\uff0c\u8fdd\u53cd\u56fd\u5bb6\u89c4\u5b9a\uff0c\u5c06\u672c\u5355\u4f4d\u5728\u5c65\u884c\u804c\u8d23\u6216\u8005\u63d0\u4f9b\u670d\u52a1\u8fc7\u7a0b\u4e2d\u83b7\u5f97\u7684\u516c\u6c11\u4e2a\u4eba\u4fe1\u606f\uff0c\u51fa\u552e\u6216\u8005\u975e\u6cd5\u63d0\u4f9b\u7ed9\u4ed6\u4eba\uff0c\u60c5\u8282\u4e25\u91cd\u7684\uff0c\u59043\u5e74\u4ee5\u4e0b\u6709\u671f\u5f92\u5211\u6216\u8005\u62d8\u5f79\uff0c\u5e76\u5904\u6216\u8005\u5355\u5904\u7f5a\u91d1\u3002\n\u7a83\u53d6\u6216\u8005\u4ee5\u5176\u4ed6\u65b9\u6cd5\u975e\u6cd5\u83b7\u53d6\u4e0a\u8ff0\u4fe1\u606f\uff0c\u60c5\u8282\u4e25\u91cd\u7684\uff0c\u4f9d\u7167\u524d\u6b3e\u7684\u89c4\u5b9a\u5904\u7f5a\u3002\n\u5355\u4f4d\u72af\u524d\u4e24\u6b3e\u7f6a\u7684\uff0c\u5bf9\u5355\u4f4d\u5224\u5904\u7f5a\u91d1\uff0c\u5e76\u5bf9\u5176\u76f4\u63a5\u8d1f\u8d23\u7684\u4e3b\u7ba1\u4eba\u5458\u548c\u5176\u4ed6\u76f4\u63a5\u8d23\u4efb\u4eba\u5458\uff0c\u4f9d\u7167\u5404\u8be5\u6b3e\u7684\u89c4\u5b9a\u5904\u7f5a\u3002\n\n\n\u6700\u9ad8\u4eba\u6c11\u6cd5\u9662\u3001\u6700\u9ad8\u4eba\u6c11\u68c0\u5bdf\u9662\u5173\u4e8e\u6267\u884c\u300a\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u5211\u6cd5\u300b\u786e\u5b9a\u7f6a\u540d\u7684\u8865\u5145\u89c4\u5b9a\uff08\u56db\uff09\u89c4\u5b9a\uff1a\u89e6\u72af\u5211\u6cd5\u7b2c253\u6761\u4e4b\u4e00\u7b2c1\u6b3e\u4e4b\u89c4\u5b9a\uff0c\u6784\u6210\u201c\u51fa\u552e\u3001\u975e\u6cd5\u63d0\u4f9b\u516c\u6c11\u4e2a\u4eba\u4fe1\u606f\u7f6a\u201d\uff1b\u89e6\u72af\u5211\u6cd5\u7b2c253\u6761\u4e4b\u4e00\u7b2c2\u6b3e\u4e4b\u89c4\u5b9a\uff0c\u6784\u6210\u201c\u975e\u6cd5\u83b7\u53d6\u516c\u6c11\u4e2a\u4eba\u4fe1\u606f\u7f6a\u201d\n\n\u300a\u975e\u6cd5\u83b7\u53d6\u516c\u6c11\u4e2a\u4eba\u4fe1\u606f\u7f6a\u300b\n\n\u907f\u98ce\u6e2f\u539f\u5219\n\u201c\u907f\u98ce\u6e2f\u201d\u539f\u5219\u662f\u6307\u5728\u53d1\u751f\u8457\u4f5c\u6743\u4fb5\u6743\u6848\u4ef6\u65f6\uff0c\u5f53ISP\uff08\u7f51\u7edc\u670d\u52a1\u63d0\u4f9b\u5546\uff09\u53ea\u63d0\u4f9b\u7a7a\u95f4\u670d\u52a1\uff0c\u5e76\u4e0d\u5236\u4f5c\u7f51\u9875\u5185\u5bb9\uff0c\u5982\u679cISP\u88ab\u544a\u77e5\u4fb5\u6743\uff0c\u5219\u6709\u5220\u9664\u7684\u4e49\u52a1\uff0c\u5426\u5219\u5c31\u88ab\u89c6\u4e3a\u4fb5\u6743\u3002\u5982\u679c\u4fb5\u6743\u5185\u5bb9\u65e2\u4e0d\u5728ISP\u7684\u670d\u52a1\u5668\u4e0a\u5b58\u50a8\uff0c\u53c8\u6ca1\u6709\u88ab\u544a\u77e5\u54ea\u4e9b\u5185\u5bb9\u5e94\u8be5\u5220\u9664\uff0c\u5219ISP\u4e0d\u627f\u62c5\u4fb5\u6743\u8d23\u4efb\u3002 \u540e\u6765\u907f\u98ce\u6e2f\u539f\u5219\u4e5f\u88ab\u5e94\u7528\u5728\u641c\u7d22\u5f15\u64ce\u3001\u7f51\u7edc\u5b58\u50a8\u3001\u5728\u7ebf\u56fe\u4e66\u9986\u7b49\u65b9\u9762\u3002\n\n\u300a\u907f\u98ce\u6e2f\u539f\u5219\u300b\n\n\u67b6\u6784\u5e08\u7d20\u8d28\n\n\n\u300a\u67b6\u6784\u5e08\u753b\u50cf\u300b\n\n\u4e1a\u52a1\u7406\u89e3\u548c\u62bd\u8c61\u80fd\u529b\nNB\u7684\u4ee3\u7801\u80fd\u529b\n\u5168\u9762\uff1a1. \u5728\u9762\u5bf9\u4e1a\u52a1\u95ee\u9898\u4e0a\uff0c\u67b6\u6784\u5e08\u8111\u6d77\u91cc\u662f\u5426\u4f1a\u6d6e\u73b0\u51fa\u591a\u79cd\u6280\u672f\u65b9\u6848\uff1b2. \u5728\u505a\u7cfb\u7edf\u8bbe\u8ba1\u65f6\u662f\u5426\u8003\u8651\u5230\u4e86\u8db3\u591f\u591a\u7684\u65b9\u65b9\u9762\u9762\uff1b3. \u5728\u505a\u7cfb\u7edf\u8bbe\u8ba1\u65f6\u662f\u5426\u8003\u8651\u5230\u4e86\u8db3\u591f\u591a\u7684\u65b9\u65b9\u9762\u9762\uff1b\n\u5168\u5c40\uff1a\u662f\u5426\u8003\u8651\u5230\u4e86\u5bf9\u4e0a\u4e0b\u6e38\u7684\u7cfb\u7edf\u7684\u5f71\u54cd\u3002\n\u6743\u8861\uff1a\u6743\u8861\u6295\u5165\u4ea7\u51fa\u6bd4\uff1b\u4f18\u5148\u7ea7\u548c\u8282\u594f\u63a7\u5236\uff1b\n\n\n\n\u300a\u5173\u4e8e\u67b6\u6784\u4f18\u5316\u548c\u8bbe\u8ba1\uff0c\u67b6\u6784\u5e08\u5fc5\u987b\u77e5\u9053\u7684\u4e8b\u60c5\u300b\n\n\u8981\u53bb\u8003\u8651\u7684\u7ec6\u8282\uff1a\u6a21\u5757\u5316\u3001\u8f7b\u8026\u5408\u3001\u65e0\u5171\u4eab\u67b6\u6784\uff1b\u51cf\u5c11\u5404\u4e2a\u7ec4\u4ef6\u4e4b\u524d\u7684\u4f9d\u8d56\u3001\u6ce8\u610f\u670d\u52a1\u4e4b\u95f4\u4f9d\u8d56\u6240\u6709\u9020\u6210\u7684\u94fe\u5f0f\u5931\u8d25\u53ca\u5f71\u54cd\u7b49\u3002\n\u57fa\u7840\u8bbe\u65bd\u3001\u914d\u7f6e\u3001\u6d4b\u8bd5\u3001\u5f00\u53d1\u3001\u8fd0\u7ef4\u7efc\u5408\u8003\u8651\u3002\n\u8003\u8651\u4eba\u3001\u56e2\u961f\u3001\u548c\u7ec4\u7ec7\u7684\u5f71\u54cd\u3002\n\n\n\n\u300a\u5982\u4f55\u624d\u80fd\u771f\u6b63\u7684\u63d0\u9ad8\u81ea\u5df1\uff0c\u6210\u4e3a\u4e00\u540d\u51fa\u8272\u7684\u67b6\u6784\u5e08\uff1f\u300b\n\n\n\u300a\u67b6\u6784\u5e08\u7684\u5fc5\u5907\u7d20\u8d28\u548c\u6210\u957f\u9014\u5f84\u300b\n\n\u7d20\u8d28\uff1a\u4e1a\u52a1\u7406\u89e3\u3001\u6280\u672f\u5e7f\u5ea6\u3001\u6280\u672f\u6df1\u5ea6\u3001\u4e30\u5bcc\u7ecf\u9a8c\u3001\u6c9f\u901a\u80fd\u529b\u3001\u52a8\u624b\u80fd\u529b\u3001\u7f8e\u5b66\u7d20\u517b\u3002\n\u6210\u957f\u8def\u5f84\uff1a2\u5e74\u79ef\u7d2f\u77e5\u8bc6\u30014\u5e74\u79ef\u7d2f\u6280\u80fd\u548c\u7ec4\u5185\u5f71\u54cd\u529b\u30017\u5e74\u79ef\u7d2f\u90e8\u95e8\u5185\u5f71\u54cd\u529b\u30017\u5e74\u4ee5\u4e0a\u79ef\u7d2f\u8de8\u90e8\u95e8\u5f71\u54cd\u529b\u3002\n\n\n\n\u300a\u67b6\u6784\u8bbe\u8ba1\u5e08\u2014\u4f60\u5728\u54ea\u5c42\u697c\uff1f\u300b\n\n\u7b2c\u4e00\u5c42\u7684\u67b6\u6784\u5e08\u770b\u5230\u7684\u53ea\u662f\u4ea7\u54c1\u672c\u8eab\n\u7b2c\u4e8c\u5c42\u7684\u67b6\u6784\u5e08\u4e0d\u4ec5\u770b\u5230\u81ea\u5df1\u7684\u4ea7\u54c1\uff0c\u8fd8\u770b\u5230\u4e86\u6574\u4f53\u7684\u65b9\u6848\n\u7b2c\u4e09\u5c42\u7684\u67b6\u6784\u5e08\u770b\u5230\u7684\u662f\u5546\u4e1a\u4ef7\u503c\n\n\n\n\u56e2\u961f\u7ba1\u7406\nTODO\n\u62db\u8058\n\u8d44\u8baf\n\u884c\u4e1a\u8d44\u8baf\n\n36kr\nTechweb\n\n\u516c\u4f17\u53f7\u5217\u8868\nTODO\n\u535a\u5ba2\n\u56e2\u961f\u535a\u5ba2\n\n\u963f\u91cc\u4e2d\u95f4\u4ef6\u535a\u5ba2\n\u7f8e\u56e2\u70b9\u8bc4\u6280\u672f\u56e2\u961f\u535a\u5ba2\n\n\u4e2a\u4eba\u535a\u5ba2\n\n\u962e\u4e00\u5cf0\u7684\u7f51\u7edc\u65e5\u5fd7\n\u9177\u58f3 - COOLSHELL-\u9648\u7693\nhellojava-\u963f\u91cc\u6bd5\u7384\nCm's Blog\n\u7a0b\u5e8f\u733fDD-\u7fdf\u6c38\u8d85-\u300aSpring Cloud\u5fae\u670d\u52a1\u5b9e\u6218\u300b\u4f5c\u8005\n\n\u7efc\u5408\u95e8\u6237\u3001\u793e\u533a\n\u56fd\u5185\uff1a\n\n\nCSDN\n\u8001\u724c\u6280\u672f\u793e\u533a\u3001\u4e0d\u5fc5\u89e3\u91ca\u3002\n\n\n51cto.com\n\n\nITeye\n\n\u504f Java \u65b9\u5411\n\n\n\n\u535a\u5ba2\u56ed\n\n\nChinaUnix\n\n\u504f Linux \u65b9\u5411\n\n\n\n\u5f00\u6e90\u4e2d\u56fd\u793e\u533a\n\n\nInfoQ\n\n\n\u6df1\u5ea6\u5f00\u6e90\n\n\n\u4f2f\u4e50\u5728\u7ebf\n\n\u6db5\u76d6 IT\u804c\u573a\u3001Web\u524d\u7aef\u3001\u540e\u7aef\u3001\u79fb\u52a8\u7aef\u3001\u6570\u636e\u5e93\u7b49\u65b9\u9762\u5185\u5bb9\uff0c\u504f\u6280\u672f\u7aef\u3002\n\n\n\nITPUB\n\n\n\u817e\u8baf\u4e91\u2014 \u4e91+\u793e\u533a\n\n\n\u963f\u91cc\u4e91\u2014 \u4e91\u6816\u793e\u533a\n\n\nIBM DeveloperWorks\n\n\n\u5f00\u53d1\u8005\u5934\u6761\n\n\nLinkedKeeper\n\n\n\u56fd\u5916\uff1a\n\nDZone\nReddit\n\n\u95ee\u7b54\u3001\u8ba8\u8bba\u7c7b\u793e\u533a\n\nsegmentfault\n\n\u95ee\u7b54+\u4e13\u680f\n\n\n\u77e5\u4e4e\nstackoverflow\n\n\u884c\u4e1a\u6570\u636e\u5206\u6790\n\n\n\u827e\u745e\u7f51\n\n\nQUEST MOBILE\n\n\n\u56fd\u5bb6\u6570\u636e\n\n\nTalkingData\n\n\n\u4e13\u9879\u7f51\u7ad9\n\n\n\u6d4b\u8bd5:\n\n\u9886\u6d4b\u56fd\u9645\n\u6d4b\u8bd5\u7a9d\nTesterHome\n\n\n\n\u8fd0\u7ef4:\n\n\u8fd0\u7ef4\u6d3e\nAbcdocker\n\n\n\nJava:\n\nImportNew\n\n\u4e13\u6ce8\u4e8e Java \u6280\u672f\u5206\u4eab\n\n\nHowToDoInJava\n\n\u82f1\u6587\u535a\u5ba2\n\n\n\n\n\n\u5b89\u5168\n\n\u7ea2\u9ed1\u8054\u76df\nFreeBuf\n\n\n\n\u5927\u6570\u636e\n\n\u4e2d\u56fd\u5927\u6570\u636e\n\n\n\n\u5176\u4ed6\u4e13\u9898\u7f51\u7ad9\uff1a\n\nInfoQ\n\n\u504f\u91cd\u4e8e\u57fa\u7840\u67b6\u6784\u3001\u8fd0\u7ef4\u65b9\u5411\n\n\nDockerInfo\n\n\u4e13\u6ce8\u4e8e Docker \u5e94\u7528\u53ca\u54a8\u8be2\u3001\u6559\u7a0b\u7684\u7f51\u7ad9\n\n\nLinux\u516c\u793e\n\nLinux \u4e3b\u9898\u793e\u533a\n\n\n\n\n\n\u5176\u4ed6\u7c7b\n\n\u7a0b\u5e8f\u5458\u6280\u80fd\u56fe\u8c31\n\n\u63a8\u8350\u53c2\u8003\u4e66\n\u5728\u7ebf\u7535\u5b50\u4e66\n\n\n\u300a\u6df1\u5165\u7406\u89e3Spring Cloud\u4e0e\u5fae\u670d\u52a1\u6784\u5efa\u300b\n\n\n\u300a\u963f\u91cc\u6280\u672f\u53c2\u8003\u56fe\u518c-\u7814\u53d1\u7bc7\u300b\n\n\n\u300a\u963f\u91cc\u6280\u672f\u53c2\u8003\u56fe\u518c-\u7b97\u6cd5\u7bc7\u300b\n\n\n\u300a2018\u7f8e\u56e2\u70b9\u8bc4\u6280\u672f\u5e74\u8d27\uff08\u5408\u8f91\uff09\u300b70M\n\n\nInfoQ\u300a\u67b6\u6784\u5e08\u300b\u6708\u520a\n\n\n\u300a\u67b6\u6784\u5e08\u4e4b\u8def\u300b\n\n\n\u7eb8\u8d28\u4e66\n\u66f4\u591a\u67b6\u6784\u65b9\u9762\u4e66\u7c4d\u53c2\u8003: awesome-java-books\n\u5f00\u53d1\u65b9\u9762\n\n\u300a\u963f\u91cc\u5df4\u5df4Java\u5f00\u53d1\u624b\u518c\u300b\u8be6\u60c5\n\n\u67b6\u6784\u65b9\u9762\n\n\n\u300a\u8f6f\u4ef6\u67b6\u6784\u5e08\u768412\u9879\u4fee\u70bc\uff1a\u6280\u672f\u6280\u80fd\u7bc7\u300b\u8be6\u60c5\n\n\n\u300a\u67b6\u6784\u4e4b\u7f8e\u300b\u8be6\u60c5\n\n\n\u300a\u5206\u5e03\u5f0f\u670d\u52a1\u67b6\u6784\u300b\u8be6\u60c5\n\n\n\u300a\u804a\u804a\u67b6\u6784\u300b \u8be6\u60c5\n\n\n\u300a\u4e91\u539f\u751f\u5e94\u7528\u67b6\u6784\u5b9e\u8df5\u300b\u8be6\u60c5\n\n\n\u300a\u4ebf\u7ea7\u6d41\u91cf\u7f51\u7ad9\u67b6\u6784\u6838\u5fc3\u6280\u672f\u300b\u8be6\u60c5\n\n\n\u300a\u6dd8\u5b9d\u6280\u672f\u8fd9\u5341\u5e74\u300b\u8be6\u60c5\n\n\n\u300a\u4f01\u4e1aIT\u67b6\u6784\u8f6c\u578b\u4e4b\u9053-\u4e2d\u53f0\u6218\u7565\u601d\u60f3\u4e0e\u67b6\u6784\u5b9e\u6218\u300b \u8be6\u60c5\n\n\n\u300a\u9ad8\u53ef\u7528\u67b6\u6784\uff08\u7b2c1\u5377\uff09\u300b\u8be6\u60c5\n\n\n\u6280\u672f\u7ba1\u7406\u65b9\u9762\n\n\u300aCTO\u8bf4\u300b\u8be6\u60c5\n\u300a\u6280\u672f\u7ba1\u7406\u4e4b\u5dc5\u300b\u8be6\u60c5\n\u300a\u7f51\u6613\u4e00\u5343\u96f6\u4e00\u591c\uff1a\u4e92\u8054\u7f51\u4ea7\u54c1\u9879\u76ee\u7ba1\u7406\u5b9e\u6218\u300b\u8be6\u60c5\n\n\u57fa\u7840\u7406\u8bba\n\n\u300a\u6570\u5b66\u4e4b\u7f8e\u300b\u8be6\u60c5\n\u300a\u7f16\u7a0b\u73e0\u7391\u300b\u8be6\u60c5\n\n\u5de5\u5177\u65b9\u9762\nTODO\n\u5927\u6570\u636e\u65b9\u9762\n\u6280\u672f\u8d44\u6e90\n\u5f00\u6e90\u8d44\u6e90\n\n\ngithub\n\n\nApache \u8f6f\u4ef6\u57fa\u91d1\u4f1a\n\n\n\u624b\u518c\u3001\u6587\u6863\u3001\u6559\u7a0b\n\u56fd\u5185\uff1a\n\n\nW3Cschool\n\n\nRunoob.com\n\nHTML \u3001 CSS\u3001XML\u3001Java\u3001Python\u3001PHP\u3001\u8bbe\u8ba1\u6a21\u5f0f\u7b49\u5165\u95e8\u624b\u518c\u3002\n\n\n\nLove2.io\n\n\u5f88\u591a\u5f88\u591a\u4e2d\u6587\u5728\u7ebf\u7535\u5b50\u4e66\uff0c\u662f\u4e00\u4e2a\u5168\u65b0\u7684\u5f00\u6e90\u6280\u672f\u6587\u6863\u5206\u4eab\u5e73\u53f0\u3002\n\n\n\ngitbook.cn\n\n\u4ed8\u8d39\u7535\u5b50\u4e66\u3002\n\n\n\nApacheCN\n\nAI\u3001\u5927\u6570\u636e\u65b9\u9762\u7cfb\u5217\u4e2d\u6587\u6587\u6863\u3002\n\n\n\n\u56fd\u5916\uff1a\n\nQuick Code\n\n\u514d\u8d39\u5728\u7ebf\u6280\u672f\u6559\u7a0b\u3002\n\n\ngitbook.com\n\n\u6709\u90e8\u5206\u4e2d\u6587\u7535\u5b50\u4e66\u3002\n\n\nCheatography\n\nCheat Sheets \u5927\u5168\uff0c\u5355\u9875\u6587\u6863\u7f51\u7ad9\u3002\n\n\nTutorialspoint\n\n\u77e5\u540d\u6559\u7a0b\u7f51\u7ad9\uff0c\u63d0\u4f9bJava\u3001Python\u3001JS\u3001SQL\u3001\u5927\u6570\u636e\u7b49\u9ad8\u8d28\u91cf\u5165\u95e8\u6559\u7a0b\u3002\n\n\n\n\u5728\u7ebf\u8bfe\u5802\n\n\u5b66\u5f92\u65e0\u5fe7\n\u6781\u5ba2\u65f6\u95f4\nsegmentfault\n\u65af\u8fbe\u514b\u5b66\u9662\n\u725b\u5ba2\u7f51\n\u6781\u5ba2\u5b66\u9662\n51CTO\u5b66\u9662\n\n\u4f1a\u8bae\u3001\u6d3b\u52a8\n\nQCon\nArchSummit\nGITC\u5168\u7403\u4e92\u8054\u7f51\u6280\u672f\u5927\u4f1a\n\n\u6d3b\u52a8\u53d1\u5e03\u5e73\u53f0:\n\n\u6d3b\u52a8\u884c\n\n\u5e38\u7528APP\n\n\u6781\u5ba2\u65f6\u95f4\n\u5f97\u5230\n\n\u627e\u5de5\u4f5c\n\nBoss\u76f4\u8058\n\u62c9\u52fe\u7f51\n\u730e\u8058\n100Offer\n\n\u5de5\u5177\n\n\u6781\u5ba2\u641c\u7d22\n\n\u6280\u672f\u6587\u7ae0\u641c\u7d22\u5f15\u64ce\u3002\n\n\n\n\u4ee3\u7801\u6258\u7ba1\n\nCoding\n\u7801\u4e91\n\n\u6587\u4ef6\u670d\u52a1\n\n\u4e03\u725b\n\u53c8\u62cd\u4e91\n\n\u7efc\u5408\u4e91\u670d\u52a1\u5546\n\n\u963f\u91cc\u4e91\n\u817e\u8baf\u4e91\n\u767e\u5ea6\u4e91\n\u65b0\u6d6a\u4e91\n\u91d1\u5c71\u4e91\n\u4e9a\u9a6c\u900a\u4e91(AWS)\n\u8c37\u6b4c\u4e91\n\u5fae\u8f6f\u4e91\n\nVPS\n\nLinode\nDigitalOcean\nVultr\n\n\n"}, {"repo": "awesome-selfhosted/awesome-selfhosted", "language": "JavaScript", "readme": "\nAwesome-Selfhosted\n \nSelf-hosting is the practice of locally hosting and managing applications instead of renting from SaaSS providers.\nThis is a list of Free Software network services and web applications which can be hosted locally. Non-Free software is listed on the Non-Free page.\nSee Contributing.\n\n\nList of Software\n\nAnalytics\nArchiving and Digital Preservation (DP)\nAutomation\nBlogging Platforms\nBookmarks and Link Sharing\nCalendaring and Contacts Management\nCommunication systems\n\nCustom communication systems\nEmail\n\nComplete solutions\nMail Transfer Agents\nMail Delivery Agents\nMailing lists and newsletters\nWebmail clients\n\n\nIRC\nSIP/IPBX\nSocial Networks and Forums\nXMPP\n\nXMPP Servers\nXMPP Web Clients\n\n\n\n\nConference Management\nContent Management Systems (CMS)\n\nE-commerce\n\n\nDNS\nDocument Management\nE-books and Integrated Library Systems (ILS)\nFederated Identity/Authentication\nFeed Readers\nFile Sharing and Synchronization\n\nDistributed filesystems\nFile transfer/synchronization\nPeer-to-peer filesharing\nObject storage/file servers\nSingle-click/drag-n-drop upload\nWeb based file managers\n\n\nGames\nGateways and terminal sharing\nGroupware\nHuman Resources Management (HRM)\nInternet of Things (IoT)\nKnowledge Management Tools\nLearning and Courses\nMaps and Global Positioning System (GPS)\nMedia Streaming\n\nMultimedia Streaming\nAudio Streaming\nVideo Streaming\n\n\nMisc/Other\nMoney, Budgeting and Management\nMonitoring\nNote-taking and Editors\nOffice Suites\nPassword Managers\nPastebins\nPersonal Dashboards\nPhoto and Video Galleries\nPolls and Events\n\nBooking and Scheduling\n\n\nProxy\nRead it Later Lists\nResource Planning\n\nEnterprise Resource Planning\n\n\nSearch Engines\nSoftware Development\n\nProject Management\nBug Trackers\nIDE/Tools\nContinuous Integration\nUX testing\nFaaS/Serverless\nAPI Management\nDocumentation Generators\nLocalization\n\n\nStatic site generators\nTask management/To-do lists\nTicketing\nURL Shorteners\nVPN\nWeb servers\nWikis\n\n\nSelf-hosting Solutions\nList of Licenses\nExternal links\nContributing\nLicense\n\n\nAnalytics\nFor personal analytics/dashboards, see Personal Dashboards\n^        back to top        ^\nWeb Analytics\n\nAckee - Self-hosted analytics tool for those who care about privacy. (Demo, Source Code) MIT Nodejs\nAWStats - Generates web, streaming, ftp or mail server statistics graphically. (Source Code) GPL-3.0 Perl\nCountly - Real time mobile and web analytics, crash reporting and push notifications platform. (Source Code) AGPL-3.0 Javascript\nDruid - Distributed, column-oriented, real-time analytics data store. (Source Code) Apache-2.0 Java\nFathom Analytics - Simple & trustworthy website analytics. (Source Code) MIT Go\nGoAccess - Real-time web log analyzer and interactive viewer that runs in a terminal. (Source Code) GPL-2.0 C\nGoatCounter - Simple web statistics. No tracking of personal data. (Source Code) AGPL-3.0 Go\nHastic - Hackable time series pattern recognition tool with UI for Grafana. (Source Code) Apache-2.0 Python/Nodejs\nKISSS - Very minimalistic (KISS) website statistics tool. (Source Code) MIT Go\nKoko Analytics - Privacy-friendly and open source analytics plugin for WordPress. (Source Code) GPL-3.0 PHP\nMatomo - Leading open-source analytics platform that gives you more than just powerful analytics, formerly known as Piwik. (Source Code) GPL-3.0 PHP\nOpen Web Analytics - Google Analytics and Matomo alternative. (Source Code) GPL-2.0 PHP\nRakam - Custom analytics platform that allows you to create your own analytics services. Integrate with any data source (web, mobile, IoT etc.), analyze data with SQL and create dashboards. (Source Code) Apache-2.0 Java\nSerposcope - Serposcope is a free and open-source rank tracker to monitor websites ranking in Google and improve your SEO performances. (Source Code) MIT Java\nSnowplow - Have every single event, from your websites, mobile apps, desktop applications and server-side systems, stored in your own data warehouse and available to action in real-time. (Source Code) Apache-2.0 Scala\n\nBusiness Intelligence\n\nMetabase - Simple Dashboarding and GUI Query tool, Nightly Emails and Slack Integration w/ PostgreSQL, MySQL, Redshift and other DBs. (Source Code) AGPL-3.0 Clojure\nRedash - connect to over 18 types of databases (SQL and \"NoSQL\"), query your data, visualize it and create dashboards. Everything has a URL that can be shared. Slack and HipChat integration. (Demo, Source Code) BSD-2-Clause Python\nSuperset - Modern, enterprise-ready business intelligence web application. (Source Code) Apache-2.0 Python\n\nSocial Media\n\nIG Monitoring - \u26a0 Instagram Analytics and Stats. (Demo, Source Code) MIT PHP\nSocioboard - \u26a0 Social media management, analytics, and reporting platform supporting nine social media networks out-of-the-box. (Source Code) GPL-3.0 C#/JavaScript\n\nArchiving and Digital Preservation (DP)\n^        back to top        ^\nSome Content Management System solutions also feature archiving and digital preservation.\n\nAccess to Memory (AtoM) - Web-based, open source application for standards-based archival description and access in a multilingual, multi-repository environment. (Demo, Source Code) AGPL-3.0-only PHP\nArchivematica - Mature digital preservation system designed to maintain standards-based, long-term access to collections of digital objects. (Demo, Source Code) AGPL-3.0-only Python\nArchiveBox - Self-hosted \"wayback machine\" that creates HTML & screenshot archives of sites from your bookmarks, browsing history, RSS feeds, or other sources. (Source Code) MIT Python\nArchivesSpace - Archives information management application for managing and providing Web access to archives, manuscripts and digital objects. (Demo, Source Code) ECL-2.0 Ruby\nCollective Access: Providence - Highly configurable Web-based framework for management, description, and discovery of digital and physical collections supporting a variety of metadata standards, data types, and media formats. (Source Code) GPL-3.0-only PHP\nCKAN - CKAN is a tool for making open data websites. (Source Code) AGPL-3.0 Python\n\nAutomation\n^        back to top        ^\nSee also Internet of Things (IoT)\n\nAccelerated Text - Automatically generate multiple natural language descriptions of your data varying in wording and structure. Apache-2.0 Clojure\nActiveWorkflow - An intelligent process and workflow automation platform based on software agents. MIT Ruby\nAlltube - Web interface for youtube-dl, a program to download videos and audio from more than 100 websites. (Source Code) GPL-3.0 PHP\nAmIUnique - Learn how identifiable you are on the Internet (browser fingerprinting tool). (Source Code) MIT Java\nBeehive - Flexible event and agent system, which allows you to create your own agents that perform automated tasks triggered by events and filters. AGPL-3.0 Go\nCouchPotato - CouchPotato is an automatic Video Library Manager for Movies. Automatic torrent/nzb searching, downloading, and processing at the qualities you want. (Source Code) GPL-3.0 Python\nEpisodes \u26a0 - Self Hosted TV show Episode tracker and recommender built using django, bootstrap4. MIT Python\nfeed2toot - Feed2toot parses a RSS feed, extracts the last entries and sends them to Mastodon. (Source Code) GPL-3.0 Python\nfeedmixer - FeedMixer is a WSGI (Python3) micro web service which takes a list of feed URLs and returns a new feed consisting of the most recent n entries from each given feed(Returns Atom, RSS, or JSON). (Demo) WTFPL Python\nGekko - Gekko is a Bitcoin TA trading and backtesting bot which support multiple exchanges and cryptocurrencies. (Source Code) MIT Nodejs\nHeadphones - Automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, \u00b5Torrent, Deluge and Blackhole. GPL-3.0 Python\nHealthchecks - Django app which listens for pings and sends alerts when pings are late. (Source Code) BSD-3-Clause Python\nhomebank-converter - Web app to convert an export bank file to compatible Homebank csv. (Demo) AGPL-3.0 HTML5\nHRConvert2 - Drag-and-drop file conversion server with session based authentication, automatic temporary file maintenance, and logging capability. GPL-3.0 PHP\nHuginn - Allows you to build agents that monitor and act on your behalf. MIT Ruby\nHttp2pic - Website screenshots/renderer. It uses the wkhtmltox to render websites with various options. (Source Code) Apache 2.0 PHP/Javascript\nKibitzr - Lightweight personal web assistant with powerful integrations. (Source Code) MIT Python\nLazyLibrarian \u26a0 - LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info. GPL-3.0 Python\nLeon - Open-source personal assistant who can live on your server. (Demo, Source Code) MIT Node.js\nLidarr - Lidarr is a music collection manager for Usenet and BitTorrent users. (Source Code) GPL-3.0 C#\nMedusa - Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic. GPL-3.0 Python\nn8n - Free node based Workflow Automation Tool. Easily automate tasks across different services. (Source Code) Apache-2.0 Nodejs\nnefarious - Web application that automates downloading Movies and TV Shows. GPL-3.0 Python\nPoffer \u26a0 - Tool that makes it easier to share the content you like thanks to Pocket+Buffer. (Source Code) MIT Nodejs\npyLoad - Lightweight, customizable and remotely manageable downloader for 1-click-hosting sites like rapidshare.com or uploaded.to. (Source Code) GPL-3.0 Python\nRadarr - Radarr is an independent fork of Sonarr reworked for automatically downloading movies via Usenet and BitTorrent, \u00e0 la Couchpotato. (Source Code) GPL-3.0 C#\nSickRage - SickRage is an automatic Video Library Manager for TV Shows. Automatic torrent/nzb searching, downloading, and processing at the qualities you want. (Source Code) GPL-3.0 Python\nSonarr - Automatic TV Shows downloader and manager for Usenet and BitTorrent. It can grab, sort and rename new episodes and automatically upgrade the quality of files already downloaded when a better quality format becomes available. (Source Code) GPL-3.0 C#\nTriggerHappy - Open source clone of IFTTT, a bridge between your internet services. (Source Code) BSD-3-Clause Python\nWebUI-aria2 - Interface to interact with the aria2 downloader. Very simple to use, just download and open index.html in any web browser. (Demo) MIT HTML5\nZenbot 3 - Zenbot is a lightweight, extendable, artificially intelligent trading bot for Bitcoin, Ether, Litecoin, and more. MIT Node.js\n\nBlogging Platforms\n^        back to top        ^\nSee also Static Site Generators, Content Management Systems and WeblogMatrix\n\nAnchor CMS - Free, lightweight, faster-than-a-bullet, simple blogging system, made for art\u2013directed posts. (Source Code) GPL-3.0 PHP\nAntville - Free, open source project aimed at the development of a high performance, feature rich weblog hosting software. (Source Code) Apache-2.0 Javascript\nBlogotext - Free blog-engine written in PHP and using SQLite. This offers you both an unmatched simplicity during installation and great performances. (Source Code) MIT PHP\nBludit \u26a0 - Simple application to build a site or blog in seconds. Bludit uses flat-files (text files in JSON format) to store posts and pages. (Demo, Source Code) MIT PHP\nCadmus - Cadmus is an extremely lightweight, flat-file blogging platform powered by Markdown. MIT PHP\nCanvas - A Laravel publishing platform. (Source Code) MIT PHP\nChyrp Lite - Extra-awesome, extra-lightweight blog engine. (Source Code) BSD-3-Clause PHP\nDante Stories - Self hosted Medium platform built with Ruby on Rails. (Source Code) MIT Ruby\nDotclear - Take control over your blog. (Source Code) GPL-2.0 PHP\nFormtools - Powerful, flexible, free and open source PHP/MySQL script to manage your forms and data. (Source Code) GPL-2.0 PHP\nGhost - Just a blogging platform. (Source Code) MIT Nodejs\nHexo - Fast, simple and powerful blog framework, powered by Node.js. (Source Code) MIT Nodejs\nHotglue - Freehand CMS which allows to construct websites directly in a web-browser. It uses flat files for storage and provides an intuitive GUI. (Demo, Source Code) GPL-3.0 PHP\nhtmly - Databaseless Blogging Platform (Flat-File Blog). (Demo, Source Code) GPL-2.0 PHP\nKnown - Single website for all your content. (Source Code) Apache-2.0 PHP\nNoddity - It's a blog, it's a wiki, it's a fast CMS. (Source Code) WTFPL Nodejs\nPlume - Federated blogging engine, based on ActivityPub. (Source Code) AGPL-3.0 Rust\nPluXml - XML-based blog/CMS platform. (Source Code) GPL-1.0 PHP\nPostleaf - Open source blogging platform with inline editing, handlebar templates, and a beautiful user interface. (Source Code) MIT Nodejs\n\nBookmarks and Link Sharing\n^        back to top        ^\n\ndyu/bookmarks - Single-threaded/process bookmark app powered by leveldb and uWebSockets. Supports importing from Delicious and Chrome. (Demo) Apache-2.0 Java\nEspial - An open-source, web-based bookmarking server. AGPL-3.0 Haskell\nFirefox Auth Server - This project implements the core server-side API for Firefox Accounts. (Source Code) MPL-2.0 Nodejs\n\nFirefox Content Server - Static server that hosts Firefox Account sign up, sign in, email verification, etc. flows. MPL-2.0 Java\nFirefox Sync Server - Sync Firefox bookmarks, passwords, history, tabs, preferences. (Source Code) MPL-2.0 Python\n\n\nGeekmarks - Personal bookmarking service focused on speed and organization using hierarchical tags. (Source Code) BSD-2-Clause Go\ngolinks - Web application that allows you to create smart bookmarks, commands and aliases by pointing your web browser's default search engine at a running instance. Similar to bunny1 or yubnub. (Demo) MIT Go\nLobsters - Run your own link aggregation site. (Source Code) BSD-3-Clause Ruby\nNo Fuss Bookmarks - Very simple software and service to store bookmarks especially designed for hackers (that don't need fancy interfaces, but nice API). (Source Code) GPL-3.0 Python\nPinry - The tiling image board system for people who want to save, tag, and share images, videos, and webpages. (Source Code) BSD-2-Clause Python\nShaarli - Personal, minimalist, super-fast, no-database bookmarking and link sharing platform. (Demo) Zlib PHP\nShiori - Simple bookmark manager built with Go. MIT Go\nunmark - Open source to do app for links. MIT PHP\nxBrowserSync - Open source tool for syncing browser data between browsers and devices. (Source Code) MIT Nodejs\nymarks - Keep your browser's bookmarks synchronized without limiting yourself to one provider. WTFPL C\n\nCalendaring and Contacts Management\n^        back to top        ^\nSome Groupware solutions also feature calendar/address book editing and synchronization.\nSee https://en.wikipedia.org/wiki/Comparison_of_CalDAV_and_CardDAV_implementations\nCalDAV or CardDAV servers\n\nBa\u00efkal - Lightweight CalDAV and CardDAV server based on sabre/dav. (Source Code) GPL-3.0 PHP\nCalendarServer - Apple, Inc.'s standards-compliant server implementing the CalDAV and CardDAV protocols shipped with macOS Server. (Source Code) Apache-2.0 Python\ncalypso - Python-based CalDAV and CardDAV server, forked from Radicale. (Source Code) GPL-3.0 Python\nDAViCal - Server for calendar sharing (CalDAV) that uses a PostgreSQL database as a data store. (Source Code) GPL-2.0 PHP\nDavis - A simple, dockerizable and fully translatable admin interface for sabre/dav based on Symfony 5 and Bootstrap 4, largely inspired by Ba\u00efkal. MIT PHP\nDecSync CC - Serverless contacts, calendar synchronization using your own file syncing method i.e Syncthing, Nextcloud etc. (Source Code) GPL-3.0 Kotlin\nEteSync Server - End-to-end encrypted and journaled personal information server supporting calendar and contact data, offering its own clients. (Source Code) AGPL-3.0 Python/Django\nRadicale - Simple calendar and contact server with extremely low administrative overhead. (Source Code) GPL-3.0 Python\nSabreDAV - Open source CardDAV, CalDAV, and WebDAV framework and server. (Source Code) MIT PHP\nXandikos - Open source CardDAV, CalDAV and WebDAV server with minimal administrative overhead, backed by a Git repository. (Source Code) GPL-3.0 Python\n\nCalDAV or CardDAV clients.\n\nAgenDAV - Multilanguage CalDAV web client with a rich AJAX interface and shared calendars support. (Source Code) GPL-3.0 PHP\nDAVDroid - Open-source CalDAV/CardDAV suite and sync app for Android. (Source Code) GPL-3.0 Java\nInfCloud - Open source CalDAV/CardDAV web client implementation. (Demo, Source Code) AGPL-3.0 Javascript\nEteSync Web - EteSync's official Web-based client (i.e., their Web app). (Demo, Source Code) AGPL-3.0 TypeScript\n\nCommunication systems\n^        back to top        ^\nCustom communication systems\n\nCentrifugo - Language-agnostic real-time messaging (Websocket or SockJS) server. (Demo) MIT Go\nCherry - Tiny webchat server. GPL-2.0 Go\nFreenet - Anonymously share files, browse and publish \"freesites\" (web sites accessible only through Freenet) and chat on forums. (Source Code) GPL-2.0 Java\nFriends - P2P chat powered by the web. (Source Code) MIT Nodejs\nGNUnet - Free software framework for decentralized, peer-to-peer networking. (Source Code) GPL-3.0 C\nGotify - Self-hosted notification server with Android and CLI clients, similar to PushBullet. (Source Code, Clients) MIT Go\nHawkpost - HawkPost is a web app that lets you create unique links that you can share with a person that desires to send you important information but doesn't know how to encrypt it. The message is encrypted in their browser and sent to your email address. (Source Code) MIT Python\nJitsi Meet - Jitsi Meet is an OpenSource (MIT) WebRTC Javascript application that uses Jitsi Videobridge to provide high quality, scalable video conferences. (Source Code) MIT Javascript\nJitsi Video Bridge - WebRTC compatible Selective Forwarding Unit (SFU) that allows for multiuser video communication. (Source Code) Apache-2.0 Java\nKandan - Kandan is an Open Source Alternative to HipChat. (Source Code) AGPL-3.0 Ruby\nKChat - PHP Based Live Chat Application. Apache-2.0 PHP\nLeapChat - Ephemeral, encrypted, in-browser chat rooms. AGPL-3.0 JavaScript\nLets-Chat - Self hosted chat suite written in Node. (Source Code) MIT Nodejs\nLibreNews - Decentralized and secure breaking news notification system. (Source Code) GPL-3.0 Python\nLive Helper Chat - Live Support chat for your website. (Source Code) Apache-2.0 PHP\nMattermost - Open-source, on-prem Slack-alternative. It can be integrated with Gitlab. (Source Code) AGPL-3.0/Apache Go\nMiAOU - Multi-room persistent chat server. (Source Code) MIT Nodejs\nMibew - Mibew Messenger is an open-source live support application written in PHP and MySQL. It enables one-on-one chat assistance in real-time directly from your website. (Demo, Source Code) Apache-2.0 PHP\nMumble - Low-latency, high quality voice/text chat software. (Source Code, Clients) BSD-3-Clause C++\nNode-Chat - Not-so-basic open-source chat with admin features. MIT Nodejs\nRallly - Rallly is a free collaborative scheduling service. (Source Code) CC-BY-SA-4.0 Nodejs\nRetroShare - Secured and decentralized communication system. Offers decentralized chat, forums, messaging, file transfer. (Source Code) GPL-2.0 \u0421++\nJami - Free and universal communication platform which preserves the user's privacy and freedoms (formerly GNU Ring). (Source Code) GPL-3.0 C++\nRocket.Chat - Teamchat solution similar to Gitter.im or Slack. (Source Code) MIT Nodejs\nSpectrum 2 - Spectrum 2 is an open source instant messaging transport.  It allows users to chat together even when they are using different IM networks. (Source Code) GPL-3.0 C++\nSpreed - WebRTC audio/video calls, conferencing server, and web client. (Source Code) AGPL-3.0 Go\nSynapse - Server for Matrix, an open standard for decentralized persistent communication. (Source Code) Apache-2.0 Python\n\nMatrix Console Web - Web client meant to be a showcase of Matrix capabilities, and reference implementation of the Matrix standard. (Source Code) Apache-2.0 Javascript\nRiot.im - Fully-featured Matrix client for Web, iOS & Android. (Source Code) Apache-2.0 Javascript\n\n\nSyndie - Syndie is a libre system for operating distributed forums. CC0-1.0 Java\nTextBelt \u26a0 - Outgoing SMS API that uses carrier-specific gateways to deliver your text messages for free, and without ads. MIT Javascript\nTox - Distributed, secure messenger with audio and video chat capabilities. (Source Code) GPL-3.0 C\nTuber - Peer-to-peer video chat that works. (Source Code) MIT Javascript\nZeroNet \u26a0 - Open, free, and uncensorable websites, using Bitcoin cryptography and BitTorrent network. (Source Code) GNU Python\nZulip - Zulip is a powerful, open source group chat application. (Source Code) Apache/Other Python\n\nEmail\n^        back to top        ^\nComplete solutions\nSimple deployment of a mail server, e.g. for inexperienced or impatient admins.\n\ndocker-mailserver - Fullstack but simple mail server (smtp, imap, antispam, antivirus, etc.). Only configuration files, no SQL database. Keep it simple and versioned. Easy to deploy and upgrade. MIT Docker\nInboxen - Inboxen is a service that provides you with an infinite number of unique inboxes. (Source Code) GPL-3.0 Python\nhomebox - Suite of Ansible scripts to deploy a fully functional mail server on Debian. Unobtrusive and automatic as much as possible, focusing on stability and security. GPL-3.0 Shell\niRedMail - Full-featured mail server solution based on Postfix and Dovecot. (Source Code) GPL-3.0 Shell\nMailcow - Mail server suite based on Dovecot, Postfix and other open source software, that provides a modern Web UI for administration. (Source Code) GPL-2.0 PHP\nMailu - Mailu is a simple yet full-featured mail server as a set of Docker images. (Demo, Source Code) MIT Docker/Python\nMail-in-a-Box - Turns any Ubuntu server into a fully functional mail server with one command. (Source Code) CC0-1.0 Shell\nModoboa - Modoboa is a mail hosting and management platform including a modern and simplified Web User Interface. (Source Code) MIT Python\nQmailtoaster - Stable, full-featured, easy-to-install mail server based on qmail. (Source Code) Multiple Linux\nSimple NixOS Mailserver - Complete mailserver solution leveraging the Nix Ecosystem. GPL-3.0 Nix\nwildduck - Scalable no-SPOF IMAP/POP3 mail server. (Source Code) EUPL-1.2 Node.js\n\nMail Transfer Agents\nMTAs / SMTP servers\n\nchasquid - SMTP (email) server with a focus on simplicity, security, and ease of operation. (Source Code) Apache-2.0 Go\nCourier MTA - Fast, scalable, enterprise mail/groupware server providing ESMTP, IMAP, POP3, webmail, mailing list, basic web-based calendaring and scheduling services. (Source Code) GPL-3.0 C\nExim - Message transfer agent (MTA) developed at the University of Cambridge. (Source Code) GPL-3.0 C\nHaraka - High-performance, pluginable SMTP server written in Javascript. (Source Code) MIT Javascript\nMailCatcher - Ruby gem that deploys a simply SMTP MTA gateway that accepts all mail and displays in web interface. Useful for debugging or development. (Source Code) MIT Ruby\nMaildrop - Disposable email SMTP server, also useful for development. MIT Scala\nMailHog - Small Golang executable which runs an SMTP MTA gateway that accepts all mail and displays in web interface. Useful for debugging or development. MIT Go\nOpenSMTPD - Secure SMTP server implementation from the OpenBSD project. (Source Code) ISC C\nPostfix - Fast, easy to administer, and secure Sendmail replacement. IPL-1.0 C\nQmail - Secure Sendmail replacement. (Source Code) CC0-1.0 C\nSendmail - Message transfer agent (MTA). Sendmail C\nSlimta - Mail Transfer Library built on Python. (Source Code) MIT Python\n\nMail Delivery Agents\nMDAs - IMAP/POP3 software\n\nCyrus IMAP/POP3 - Intended to be run on sealed servers, where normal users are not permitted to log in. (Source Code) BSD-3-Clause-Attribution C\nDovecot - IMAP and POP3 server written primarily with security in mind. (Source Code) MIT/LGPL-2.1 C\nPiler - feature rich open source email archiving solution. (Source Code) GPL-3.0 C\n\nMailing lists and Newsletters\nMailing lists servers and mass mailing software - one message to many recipients.\n\nDada Mail - Web-based list management system that can be used for announcement lists and/or discussion lists. (Source Code) GPL-2.0 Perl\nListmonk - High performance, self-hosted newsletter and mailing list manager with a modern dashboard. (Source Code) AGPL-3.0 Go\nMail For Good \u26a0 - Open source email campaign management tool for nonprofits. BSD-3-Clause Javascript\nMailman - The Gnu mailing list server. GPL-3.0 Python\nMailtrain - self hosted newsletter application built on Node.js (v5+) and MySQL (v5.5+ or MariaDB). (Source Code) GPL-3.0 Nodejs\nMailyHerald - Self-hosted Mailchimp alternative that you can easily integrate with your site. Helps you send and manage your application mailings. It support email marketing and conducting the daily stream of notifications you send to your users. (Source Code) LGPL-3.0 Ruby\nMautic - Mautic is marketing automation software (email, social and more). (Source Code) GPL-3.0 PHP\nphpList - Newsletter and email marketing with advanced management of subscribers, bounces, and plugins. (Source Code) AGPL-3.0 PHP\nPostal - Fully featured open source mail delivery platform for incoming and outgoing e-mail. MIT Ruby\nSchleuder - GPG-enabled mailing list manager with resending-capabilities. (Source Code) GPL-3.0 Ruby\nSympa - Mailing list manager. GPL-2.0 Perl\n\nWebmail clients\n\nAfterlogic WebMail Lite - Fast and easy-to-use webmail front-end for your existing IMAP mail server, Plesk or cPanel. (Demo, Source Code) AGPL-3.0 PHP\nCypht - Feed reader for your email accounts. (Source Code) GPL-2.0 PHP\nIMP - HORDE application that provides webmail access to IMAP and POP3 accounts. (Demo, Source Code) GPL-2.0 PHP\nMailCare - Open source disposable email address service. (Source Code) MIT PHP\nMailpile - Webmail client with search, filtering, encryption features and more. (Source Code) AGPL-3.0 Python\nRainLoop - Simple, modern and fast webmail with IMAP/SMTP Support and multi accounting. (Demo, Source Code). AGPL-3.0 PHP\nRoundcube - Browser-based IMAP client with an application-like user interface. (Source Code) GPL-3.0 PHP\nSquirrelMail - Another browser-based IMAP client. (Source Code) GPL-2.0 PHP\n\nIRC\n^        back to top        ^\nIRC communication software\n\nConvos - Always online web IRC client. (Demo, Source Code) Artistic-2.0 Perl\nInspIRCd - Modular IRC server written in C++ for Linux, BSD, Windows, and macOS. (Source Code) GFDL-1.2-only C++\nDispatch - Self-hosted web IRC client written in Go. (Demo) MIT Go\nKiwi IRC - Responsive web IRC client with theming support. (Demo), (Source Code) Apache-2.0 Nodejs\nngircd - Free, portable and lightweight Internet Relay Chat server for small or private networks. (Source Code) GPL-2.0 C\nThe Lounge - Self-hosted web IRC client. (Demo, Source Code) MIT Nodejs\nQuassel IRC - distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core. (Source Code) GPL-2.0 C++\nRobust IRC - RobustIRC is IRC without netsplits. Distributed IRC server, based on RobustSession protocol. (Source Code) BSD-3-Clause Go\nTiny Tiny IRC - An open source AJAX-powered chat platform with support for IRC (Source Code). GPL-3.0 PHP/Java\nWeechat - Fast, light and extensible chat client. GPL-3.0 C\n\nGlowing Bear - A web frontend for WeeChat. (Demo) GPL-3.0 JavaScript\n\n\nZNC - Advanced IRC bouncer. (Source Code) Apache-2.0 C++\n\nSIP\n^        back to top        ^\nSIP/IPBX telephony software\n\nAsterisk - Easy to use but advanced IP PBX system, VoIP gateway and conference server. GPL-2.0 C\nASTPP - is an Open Source VoIP Billing Solution for Freeswitch. It supports prepaid and postpaid billing with call rating and credit control. It also provides many other features. (Source Code) AGPL-3.0 PHP\nFreepbx - Web-based open source GUI that controls and manages Asterisk. (Source Code) GPL-2.0 PHP\nFreeSWITCH - Scalable open source cross-platform telephony platform. (Source Code) MPL-2.0 C\nFusionPBX - Open source project that provides a customizable and flexible web interface to the very powerful and highly scalable multi-platform voice switch called FreeSWITCH. (Source Code) MPL-1.1 PHP\nHomer - Troubleshooting and monitoring VoIP calls. (Source Code) AGPL-3.0 Angular/C\nKamailio - Modular SIP server (registrar/proxy/router/etc). (Source Code) GPL-2.0 C\nKazoo - KAZOO is an open-source, highly scalable software platform designed to provide carrier-grade VoIP switch functions and features. (Source Code) MPL-1.1 Erlang\nOstel - Secure SIP telephony setup with ZRTP encryption. GPL-3.0 Ruby\nSipXcom - Open source unified communications system. (Source Code) AGPL-3.0 Java\nTapir - Troubleshooting and real-time monitoring of VoIP-based systems. (Source Code) Apache-2.0 Java/Kotlin\nWazo - Full-featured IPBX solution built atop Asterisk with integrated Web administration interface and REST-ful API. (Source Code) GPL-3.0 Python\n\nSocial Networks and Forums\n^        back to top        ^\n\nAbilian SBE - Open Source Collaboration and Social Networking framework and platform. LGPL-2.1 Python\nAnahita - Open Source Social Networking Framework and Platform. (Source Code) GPL-3.0 PHP\nbbPress - bbPress is forum software with a twist from the creators of WordPress. Easily setup discussion forums inside your WordPress.org powered site. (Source Code) GPL-2.0 PHP\nBootcamp - Enterprise social network. (Source Code) MIT Python\nBuddycloud - Tools, libraries, services and a community to build user-to-user, group and social messaging into your app. Saves time. Scales up. Supports you. (Source Code) Apache-2.0 Java\nBuddyPress - Powerful plugin that takes your WordPress.org powered site beyond the blog with social-network features like user profiles, activity streams, user groups, and more. (Source Code) GPL-2.0 PHP\ncartulary - RSS reader, readability tool, article archiver, microblogger, social graph manager and reading list manager. CDDL-1.0 PHP\nCommento - Commento is a discussion platform that you can embed on your blog, news articles, and any place where you want your readers to add comments. MIT GO\nCoral - A better commenting experience from Vox Media. (Source Code) Apache-2.0 Nodejs\ndiaspora* - Distributed social networking server. (Demo, Source Code) AGPL-3.0 Ruby\nDiscourse - Advanced forum / community solution based on Ruby and JS. (Demo, Source Code) GPL-2.0 Ruby\ndyu/comments - Real-time, markdown-enabled comment engine powered by leveldb. (Demo) Apache-2.0 Java\nElgg - Powerful open source social networking engine. (Source Code) GPL-2.0 PHP\nFlarum - Delightfully simple forums. Flarum is the next-generation forum software that makes online discussion fun again. (Source Code) MIT PHP\nflaskbb - FlaskBB is forum software written in Python using the microframework Flask. You can easily create new topics, posts and send other users private messages. It also includes basic administration and moderation tools. (Source Code) BSD-3-Clause Python\nFluxBB - Fast, light, user-friendly forum software for your website. (Source Code) GPL-2.0 PHP\nFriendica - Social Communication Server. (Source Code) AGPL-3.0 PHP\nGNU social - Social communication software for both public and private communications. (Source Code) AGPL-3.0 PHP\nHubzilla - Decentralized identity, privacy, publishing, sharing, cloud storage, and communications/social platform. (Source Code) MIT PHP\nHumHub - Flexible kit for private social networks. (Source Code) AGPL-3.0 PHP\nIsso - Lightweight commenting server written in Python and Javascript. It aims to be a drop-in replacement for Disqus. (Source Code) MIT Python\nLemmy - A link aggregator / reddit clone for the fediverse. Reddit alternative built in Rust. (Source Code) AGPL-3.0 Rust\nLoomio - Loomio is a collaborative decision-making tool that makes it easy for anyone to participate in decisions which affect them. (Source Code) AGPL-3.0 Ruby\nMastodon - Federated microblogging server, an alternative to GNU social. (Source Code) AGPL-3.0 Ruby\nMisago - Misago is fully featured modern forum application that is fast, scalable and responsive. (Source Code) GPL-2.0 Python\nMovim - Modern, federated social network based on XMPP, with a fully featured group-chat, subscriptions and microblogging. (Source Code) AGPL-3.0 PHP\nMyBB - Free, extensible forum software package. (Source Code) LGPL-3.0 PHP\nNewebe - Distributed Social Network. (Source Code) AGPL-3.0 Python\nNodeBB - Node.js based forum software built for the modern web. (Source Code) GPL-3.0 Nodejs\nOrange Forum - Orange Forum is an easy to deploy forum that has minimal dependencies and uses very little javascript. (Demo, Source Code) BSD-3-Clause Go\nOSSN - Open Source Social Network (OSSN) is a social networking software written in PHP. It allows you to make a social networking website and helps your members build social relationships, with people who share similar professional or personal interests. (Source Code) GPL-2.0 PHP\nOxwall - Oxwall is used for a wide range of projects starting from family sites and custom social networks to collaboration tools and enterprise community solutions. (Source Code) CPAL-1.0 PHP\nPatchwork - Decentralized messaging and sharing app built on top of Secure Scuttlebutt (SSB). AGPL-3.0-only NodeJS\nphpBB - Flat-forum bulletin board software solution that can be used to stay in touch with a group of people or can power your entire website. (Source Code) GPL-2.0 PHP\nPixelFed - Pixelfed is an open-source, federated platform alternate to Instagram. (Source Code) AGPL-3.0 PHP\\HTML\\Vue\nPleroma - Federated microblogging server, Mastodon, GNU social, & ActivityPub compatible. (Source Code) AGPL-3.0 Elixir\nPPnet - Create and host your own social network. MIT Javascript\nPump.io - Stream server that does most of what people really want from a social network. (Source Code) Apache-2.0 Nodejs\nremark42 - A lightweight and simple comment engine, which doesn't spy on users. It can be embedded into blogs, articles or any other place where readers add comments. (Demo, Source Code) MIT Go\nScoold - Stack Overflow in a JAR. An enterprise-ready Q&A platform with full-text search, SAML, LDAP integration and social login support. (Demo, Source Code) Apache-2.0 Java\nSimple Machines Forum - Free, professional grade software package that allows you to set up your own online community within minutes. (Source Code) BSD-3-Clause PHP\nSocialhome - Federated and decentralized profile builder and social network engine. (Demo, Source Code) AGPL-3.0 Python\nTalkyard - Create a community, where your users can suggest ideas and get questions answered. And have friendly open-ended discussions and chat (Slack/StackOverflow/Discourse/Reddit/Disqus hybrid). (Demo, Source Code) AGPL-3.0 Scala\nTokumei - Anonymous microblogging platform. (Source Code) ISC rc\nThredded - Forums, feature-rich and simple. (Demo, Source Code) MIT Ruby\ntwister - Fully decentralized P2P microblogging platform leveraging the free software implementations of Bitcoin and BitTorrent protocols. (Source Code) MIT C++\nVanilla Forums - Simple and flexible forum software. (Source Code) GPL-2.0 PHP\n\nXMPP\n^        back to top        ^\nExtensible Messaging and Presence Protocol software\nXMPP Servers\n\nejabberd - XMPP instant messaging server. (Source Code) GPL-2.0 Erlang\nKontalk - Kontalk is an Open Source Messenger, similar to WhatsApp (app for android only currently), including end-to-end encryption, server is based on Tigase XMPP Server. (Source Code) GPL-3.0 Java\nMetronome IM - Fork of Prosody IM. (Source Code) MIT Lua\nMongooseIM - Mobile messaging platform with a focus on performance and scalability. (Source Code) GPL-2.0 Erlang\nOpenfire - Real time collaboration (RTC) server. (Source Code) Apache-2.0 Java\nProsody IM - Feature-rich and easy to configure XMPP server. (Source Code) MIT Lua\nTigase - XMPP server implementation in Java. GPL-3.0 Java\n\nXMPP Web Clients\n\nCandy - Multi user XMPP client written in Javascript. (Source Code) MIT Javascript\nConverse.js - Free and open-source XMPP chat client in your browser. (Source Code) MPL-2.0 Javascript\nJSXC - Real-time XMPP web chat application with video calls, file transfer and encrypted communication. There are also versions for Nextcloud/Owncloud and SOGo. (Source Code) MIT Javascript\nKaiwa - Web based chat client in the style of common paid alternatives. (Source Code) MIT Nodejs\nSalut \u00e0 Toi - Multipurpose, multi frontend, libre and decentralized communication tool. (Source Code) AGPL-3.0 Python\n\nLibervia - Web frontend from Salut \u00e0 Toi. (Source Code) AGPL-3.0 Python\n\n\n\nConference Management\n^        back to top        ^\n\nBigBlueButton - Supports real-time sharing of audio, video, slides (with whiteboard controls), chat, and the screen. Instructors can engage remote students with polling, emojis, and breakout rooms. (Demo, Source Code) LGPL-3.0 Java\nConference Organizing Distribution (COD) - Create conference and event websites built on top of Drupal. (Source Code) GPL-1.0 PHP\nfrab - web-based conference planning and management system. It helps to collect submissions, to manage talks and speakers and to create a schedule. (Source Code) MIT Ruby\nindico - A feature-rich event management system, made @ CERN, the place where the Web was born. (Demo, Source code) MIT Python\nOpen Conference Systems (OCS) - is a free Web publishing tool that will create a complete Web presence for your scholarly conference. (Demo, Source Code) GPL-1.0 PHP\nOpenCFP - OpenCFP is a PHP-based conference talk submission system. MIT PHP\nOpenConferenceWare - An open source web application for supporting conference-like events. This customizable, general-purpose platform provides proposals, sessions, schedules, tracks, user profiles. (Source Code) MIT Ruby\nosem - Event management tailored to free Software conferences. (Demo, Source Code) MIT Ruby\npretalx - Web-based event management, including running a Call for Papers, reviewing submissions, and scheduling talks. Exports and imports for various related tools. (Source Code) Apache-2.0 Python\n\nContent Management Systems (CMS)\n^        back to top        ^\nCMS are a practical way to setup a website with many features. CMS often come with third party plugins, themes and functionality that is easy to add and customize to your needs. See also Blogging Platforms and Static Site Generators\n\nAPIQ CMS - Simple and powerful Ruby on Rails CMS for developers. MIT Ruby\nApostrophe - Node.js CMS with a focus on extensible in-context editing tools. (Demo, Source Code) MIT Nodejs\nBackdrop CMS - Comprehensive CMS for small to medium sized businesses and non-profits. (Source Code) GPL-2.0 PHP\nBaun - Modern, lightweight, extensible CMS for PHP. (Source Code) MIT PHP\nBigTree CMS - Straightforward, well documented, and capable written with PHP and MySQL. (Source Code) LGPL-2.1 PHP\nBolt CMS - Open source Content Management Tool, which strives to be as simple and straightforward as possible. (Demo, Source Code) MIT PHP\nCMS Made Simple - Open source content management system, faster and easier management of website contents, scalable for small businesses to large corporations. (Source Code) GPL-1.0 PHP\nCockpit - Simple Content Platform to manage any structured content. (Source Code) MIT PHP\nConcrete 5 CMS - Open source content management system. (Source Code) MIT PHP\nContao - Contao is a powerful open source CMS that allows you to create professional websites and scalable web applications. (Source Code) LGPL-3.0 PHP\nCouchCMS - Simple Open-Source CMS for designers. (Source Code) CPAL-1.0 PHP\nDirectus - Directus is a powerful and intuitive headless CMS for managing SQL databases with custom architectures. Built around a robust and extensible API, this decoupled content management framework is perfect for websites, apps, or multi-client projects. (Source Code) GPL-3.0 PHP\nDrupal - Advanced open source content management platform. (Source Code) GPL-2.0 PHP\neLabFTW - Online lab notebook for research labs. Store experiments, use a database to find reagents or protocols, use trusted timestamping to legally timestamp an experiment, export as pdf or zip archive, share with collaborators\u2026. (Demo, Source Code) AGPL-3.0 PHP\nExpressa - Content Management System for powering database driven websites using JSON schemas. Provides permission management and automatic REST APIs. MIT Nodejs\nGetSimple CMS - The Simplest Content Management System. Ever. (Source Code) GPL-3.0 PHP\nImpressPages CMS - Easy code meets easy admin. (Demo, Source Code) GPL-3.0/MIT PHP\nJoomla! - Advanced Content Management System (CMS). (Source Code) GPL-2.0 PHP\nKeystoneJS - CMS and Web Application Platform. (Demo, Source Code) MIT Nodejs\nMODX - MODX is an advanced content management and publishing platform. The current version is called 'Revolution'. (Source Code) GPL-2.0 PHP\nNeos - Neos or TYPO3 Neos (for version 1) is a modern, open source CMS. (Source Code) GPL-3.0 PHP\nNoosfero - Noosfero is a web platform for social and solidarity economy networks with blog, e-Portfolios, CMS, RSS, thematic discussion, events agenda and collective intelligence for solidarity economy in the same system. AGPL-3.0 Ruby\noctober - Free, open-source, self-hosted CMS platform. (Source Code) MIT PHP\nOmeka - Create complex narratives and share rich collections, adhering to Dublin Core standards with Omeka on your server, designed for scholars, museums, libraries, archives, and enthusiasts. (Demo, Source Code) GPL-3.0 PHP\nPagekit - New modern CMS to create and share. (Source Code) MIT PHP\nPico - Stupidly simple, blazing fast, flat file CMS. (Source Code) MIT PHP\nPimcore - Multi-Channel Experience and Engagement Management Platform. (Source Code) GPL-3.0-or-later PHP\nPlone - Powerful open-source CMS system. (Source Code) ZPL-2.0 Python\nProcessWire - ProcessWire is an open source content management system (CMS) and web application framework aimed at the needs of designers, developers and their clients. (Source Code) MPL-2.0 PHP\nPropertyWebBuilder - Ultimate Ruby on Rails engine for creating real estate websites. (Demo, Source Code) MIT Ruby\nPublify - Simple but full featured web publishing software. (Source Code) MIT Ruby\nREDAXO - Simple, flexible and useful content management system (documentation only available in German). (Source Code) MIT PHP\nRedaxscript - Ultra lightweight CMS for MySQL, SQLite and PostgreSQL. (Demo, Source Code) GPL-3.0 PHP\nRoadiz -  Modern CMS based on a node system which can handle many types of services. (Source Code) MIT PHP\nSilverStripe - Easy to use CMS with powerful MVC framework underlying. (Demo, Source Code) BSD-3-Clause PHP\nSPIP - Publication system for the Internet aimed at collaborative work, multilingual environments, and simplicity of use for web authors. (Source Code) GPL-2.0 PHP\nSquidex - Headless CMS, based on MongoDB, CQRS and Event Sourcing. (Demo, Source Code) MIT .NET\nStrapi - The most advanced open-source Content Management Framework (headless-CMS) to build powerful API with no effort. (Source Code) MIT Nodejs\nSubrion - Subrion is a free open source content management system that allows you to build websites for any purpose. Yes, from blog to corporate mega portal. (Demo, Source Code) GPL-3.0 PHP\nTextpattern - Flexible, elegant and easy-to-use CMS. (Demo, Source Code) GPL-2.0 PHP\nTYPO3 - Powerful and advanced CMS with a large community. (Source Code) GPL-2.0 PHP\nUmbraco - The friendly CMS. Free and open source with an amazing community. (Source Code) MIT .NET\nWagtail - Django content management system focused on flexibility and user experience. (Source Code) BSD-3-Clause Python\nWonderCMS - WonderCMS is the smallest flat file CMS since 2008. (Demo, Source Code) MIT PHP\nWordPress - World's most-used blogging and CMS engine. (Source Code) GPL-2.0 PHP\nWriteFreely - Writing software for starting a minimalist, federated blog \u2014 or an entire community. (Source Code) AGPL 3.0 Go\n\nRecipe management\n\nOpenEats - Recipe management site that allows users to create, store, share and rate recipes, create grocery lists, and more. (Demo) MIT Python\n\nE-commerce\n\nAttendize - Ticket selling and event management platform. (Source Code) AAL PHP\nBagisto - Leading Laravel open source e-commerce framework with multi-inventory sources, taxation, localization, dropshipping and more exciting features. (Demo, Source Code) MIT PHP\nCoreShop - CoreShop is a e-commerce plugin for Pimcore. (Source Code) GPL-3.0 PHP\nDrupal Commerce - Drupal Commerce is a popular e-commerce module for Drupal CMS, with support for dozens of payment, shipping, and shopping related modules. (Source Code) GPL-2.0 PHP\nMagento - Leading provider of open omnichannel innovation. (Demo, Source Code) OSL-3.0 PHP\nMicroweber - Drag and Drop CMS and online shop. (Demo, Source Code) Apache-2.0 PHP\nOpenBazaar - Decentralized marketplace using cryptocurrency. (Source Code) MIT Go\nOpenCart - Free open source shopping cart solution. (Source Code) GPL-3.0 PHP\nOpen Classifieds - Free open-source, self-hosted CMS for classifieds sites. (Source Code) GPL-3.0 PHP\nOpen Source POS - Open Source Point of Sale is a web based point of sale system. (Source Code) MIT PHP\nOXID eShop - OXID eShop is a flexible open source e-commerce software with a wide range of functionalities. (Demo, Source Code) GPL-3.0 PHP\nOpen Food Network - Online marketplace for local food. It enables a network of independent online food stores that connect farmers and food hubs with individuals and local businesses. (Source Code) AGPL-3.0 Ruby\nPrestaShop - PrestaShop offers a free, open-source and fully scalable e-commerce solution. (Demo, Source Code) OSL-3.0 PHP\nPretix - Django based ticket sales platform for events. (Source Code) Apache-2.0 Python\nReaction Commerce - Customizable, real-time reactive, JavaScript commerce platform. (Source Code) GPL-3.0 Nodejs\nSaleor - Django based open-sourced e-commerce storefront. (Demo, Source Code) BSD-3-Clause Python\nSharetribe - An open source platform to create your own peer-to-peer marketplace, also available with SaaS model. (Source Code) MIT Ruby\nShuup - Django powered fully customizable open source e-commerce framework for small and large sites. (Source Code) AGPL-3.0 Python\nShopware Community Edition - PHP based open source e-commerce software made in Germany. (Demo, Source Code) AGPL-3.0 PHP\nSylius - Symfony2 powered open source full-stack platform for eCommerce. (Demo, Source Code) MIT PHP\nThelia - Thelia is an open source and flexible e-commerce solution. (Demo, Source Code) LGPL-3.0 PHP\nWooCommerce - WordPress based e-commerce solution. (Source Code) GPL-3.0 PHP\n\nDNS\n^        back to top        ^\nSee https://github.com/n1trux/awesome-sysadmin#dns\n\nCoreDNS - Plugin driven DNS Server with support for proxying to Google's DNS-over-HTTPS. (Source Code) Apache-2.0 Go\nnsupdate.info - nsupdate.info is a dynamic DNS service. (Demo, Source Code) BSD-3-Clause Python\nSPF Toolbox - Application to look up DNS records such as SPF, MX, Whois, and more. (Source Code) MIT PHP\n\nDocument Management\n^        back to top        ^\n\nCaseBox - Manage all your organization's information in one system. (Source Code) AGPL-3.0 PHP/Java\nDOCAT - Host your docs. Simple. Versioned. Fancy. MIT Python/docker\nEdPaper - PDF organizer with users management. MIT PHP\nEveryDocs - A simple Document Management System for private use with basic functionality to organize your documents digitally. GPL-3.0 Ruby\nMayan EDMS - Free Open Source Electronic Document Management System. An electronic vault for your documents with preview generation, OCR, and automatic categorization among other features. (Source Code) Apache-2.0 Python\nPaperless - Scan, index, and archive all of your paper documents. GPL-3.0 Python\nTeedy - (Ex SismicsDocs) Lightweight document management system packed with all the features you can expect from big expensive solutions. (Source Code), (Demo) GPL-2.0 Java\n\nE-books and Integrated Library Systems (ILS)\n^        back to top        ^\nSome Content Management System and Archiving and Digital Preservation solutions also overlap with library and institutional repository software.\nPersonal e-book management software.\n\nCalibre - E-book library manager that can view, convert, and catalog e-books in most of the major e-book formats and provides a built-in Web server for remote clients. (Demo, Source code) GPL-3.0 Python\n\nBicBucStriim - Provides web-based access to your Calibre Library's e-book collection. (Source Code) MIT PHP\nCalibre Web - Web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database. GPL-3.0 Python\nCOPS - Lightweight e-book server alternative to Calibre content server or Calibre2OPDS. (Demo, Source Code) GPL-2.0 PHP\nThe Epube - Self-hosted web EPUB reader using EPUB.js, Bootstrap, and Calibre. (Source Code) GPL-3.0 PHP\n\n\nPolar Bookshelf - Polar is a personal knowledge repository for PDF and web content supporting incremental reading and document annotation. (Source Code) GPL Javascript\n\nEnterprise-class library management software.\n\nEvergreen - Highly-scalable software for libraries that helps library patrons find library materials, and helps libraries manage, catalog, and circulate those materials. (Source Code) GPL-2.0 PL/pgSQL\nKoha - Enterprise-class ILS with modules for acquisitions, circulation, cataloging, label printing, offline circulation for when Internet access is not available, and much more. (Demo, Source Code) GPL-3.0 Perl\n\nInstitutional repository and digital library software.\n\nDSpace - Turnkey repository application providing durable access to digital resources. (Source Code) BSD-3-Clause Java\nEPrints - Digital document management system with a flexible metadata and workflow model primarily aimed at academic institutions. (Demo, Source Code) GPL-3.0 Perl\nFedora Commons Repository - Robust and modular repository system for the management and dissemination of digital content especially suited for digital libraries and archives, both for access and preservation. (Source Code) Apache-2.0 Java\nIslandora - Drupal module for browsing and managing Fedora-based digital repositories. (Source Code) GPL-3.0 PHP\nSamvera Hyrax - Front-end for the Samvera framework, which itself is a Ruby on Rails application for browsing and managing Fedora-based digital repositories. (Source Code) Apache-2.0 Ruby\n\nFederated Identity/Authentication\n^        back to top        ^\nSee https://github.com/n1trux/awesome-sysadmin#identity-management\nFeed Readers\n^        back to top        ^\n\nCommaFeed - Google Reader inspired self-hosted RSS reader. (Source Code) Apache-2.0 Java\nFeedbin - Simple, fast and nice looking RSS reader. (Source Code) MIT Ruby\nFeedHQ - FeedHQ is a web-based feed reader. (Source Code) BSD-3-Clause Python\nFreshRSS - Self-hostable RSS feed aggregator. (Demo, Source Code, Mobile app) AGPL-3.0 PHP\nJARR - JARR (Just Another RSS Reader) is a web-based news aggregator and reader (fork of Newspipe). (Demo, Source Code) AGPL-3.0 Python\nKriss Feed - Simple and smart (or stupid) feed reader. (Demo, Source Code) CC0-1.0 PHP\nLeed - Leed (for Light Feed) is a Free and minimalist RSS aggregator. (Source Code) AGPL-3.0 PHP\nLeselys - Your very elegant RSS reader. AGPL-3.0 Python\nLite-Reader - Read your feeds on your own machine with a simple and lite application. (Demo) BSD-3-Clause PHP\nMoonmoon - simple feed aggregator (planet like): it only aggregates feeds and spits them out in one single page. (Source Code) BSD-3-Clause PHP\nMiniflux - Miniflux 2 is a minimalist and open source news reader, written in Go and PostgreSQL. (Source Code) Apache-2.0 Go\nNewsBlur - NewsBlur is a personal news reader that brings people together to talk about the world. A new sound of an old instrument. (Source Code) MIT Python\nNewspipe - Newspipe is a web news aggregator and reader. (Demo) AGPL-3.0 Python\nNunux Reader - Simple, fast and reactive RSS reader. (Source Code) GPL-3.0 Nodejs\nReader-Self - Self-hosted rss reader (php / mysql or sqlite) - Google Reader alternative. (Source Code) GPL-3.0 PHP\nRSS Monster - RSS Monster is an easy to use web-based RSS aggregator and reader compatible with the Fever API, created as an alternative for Google Reader. MIT PHP\nSelfoss - New multipurpose rss reader, live stream, mashup, aggregation web application. (Source Code) AGPL-3.0 PHP\nSismics Reader - Free and open source feeds reader, including all major Google Reader features. (Demo, Source Code) GPL-2.0 Java\nStringer - Work-in-progress self-hosted, anti-social RSS reader. MIT Ruby\nTemboz - Two-column feed reader emphasizing filtering capabilities to manage information overload. MIT Python\nTiny Tiny RSS - Open source web-based news feed (RSS/Atom) reader and aggregator. (Demo, Source Code) GPL-3.0 PHP\n\ngritttt-rss - More features for Tiny Tiny RSS. (Source Code) BSD-2-Clause Python\nttrss-mobile - Mobile webapp for Tiny Tiny RSS. AGPL-3.0 Javascript\nttrss-reader - Light and responsive client for TTRSS. GPL-2.0 Javascript\n\n\nWinds \u26a0 - Open source and beautiful RSS reader built using React/Redux/Sails/Node and Stream. It showcases personalized feeds powered by the Stream API. (Demo, Source Code) BSD-3-Clause Nodejs\n\nRSS/Atom automation\n\nFull-Text RSS - Extract article content from news sites and blogs and convert RSS feeds that contain only extracts of stories to full-text feeds. Developed by FiveFilters.org. (Source Code) GPL-3.0 PHP\nPolitePol - Online tool for creation of RSS feeds for any web page. (Demo) MIT Python\nRSS Fulltext Proxy - Mirrors RSS feeds to return the full content of the items, extracted from the website. MIT NodeJS\nRSS Merger - PHP script which will take multiple RSS / Atom feeds as input and merge them into a single RSS feed. GPL-2.0 PHP\nRSS-Bridge - rss-bridge is a PHP project capable of generating ATOM feeds for websites which don't have one. Public domain PHP\nRSS2EMail - Fetches RSS/Atom-feeds and pushes new Content to any email-receiver, supports OPML. (Source Code) GPL-2.0 Python\nScreaming Liquid Tiger - Simple script to automatically generate valid RSS and Atom feeds from a list of media files in the same folder. MIT PHP\n\nFile Sharing and Synchronization\n^        back to top        ^\nSome Groupware solutions also feature file sharing and synchronization.\nDistributed filesystems\n^        back to top        ^\nSee https://github.com/n1trux/awesome-sysadmin#distributed-filesystems\nFile transfer/synchronization\n\nGit Annex - File synchronization between computers, servers, external drives. (Source Code) GPL-3.0 Haskell\nKinto - Kinto is a minimalist JSON storage service with synchronisation and sharing abilities. (Source Code) Apache-2.0 Python\nNextcloud - Access and share your files, calendars, contacts, mail and more from any device, on your terms. (Demo, Source Code) AGPL-3.0 PHP\nOpenSSH/SFTP - Secure File Transfer Program. (Source Code) BSD-2-Clause C\nownCloud - All-in-one solution for saving, synchronizing, viewing, editing and sharing files, calendars, address books and more. (Source Code, Clients) AGPL-3.0 PHP\nPydio - Turn any web server into a powerful file management system and an alternative to mainstream cloud storage providers. (Source Code) AGPL-3.0 PHP\nSamba - Samba is the standard Windows interoperability suite of programs for Linux and Unix. It provides secure, stable and fast file and print services for all clients using the SMB/CIFS protocol. (Source Code) GPL-3.0 C\nSeafile - File hosting and sharing solution primary for teams and organizations. (Source Code) GPL-2.0 C\nSparkleShare - Self hosted, instant, secure file sync. (Source Code) GPL-3.0 C#\nSyncany - Secure file sync software for arbitrary storage backends, an open-source cloud storage and filesharing application. Securely synchronize your files to any kind of storage. GPL-3.0 Java\nSyncthing - Syncthing is an open source peer-to-peer file synchronisation tool. (Source Code) MPL-2.0 Go\nUnison - Unison is a file-synchronization tool for OSX, Unix, and Windows. GPL-3.0 OCaml\nZ-Push - Implementation of Microsoft\u2019s ActiveSync protocol. (Source Code) AGPL-3.0 PHP\n\nPeer-to-peer filesharing\n\nbittorrent-tracker - Simple, robust, BitTorrent tracker (client and server) implementation. (Source Code) MIT Nodejs\ncloud-torrent - Torrent Web Client with HTTP retrievable or streamable downloaded files. AGPL-3.0 Go\nDat Project - Powerful decentralized file sharing applications built from a large ecosystem of modules. (Source Code) MIT Nodejs\nFilePizza - Peer-to-peer file transfers in your browser. (Source Code) BSD-3-Clause Nodejs\nFirefox Send - A file sharing experiment which allows you to send encrypted files to other users. MPL-2.0 Nodejs\ninstant.io - Streaming file transfer over WebTorrent. (Demo) MIT Nodejs\nMagnetico - Magnetico is the first autonomous (self-hosted) BitTorrent DHT search engine suite that is designed for end-users. AGPL-3.0 Python\nMagnetissimo - Search engine that indexes all popular torrent sites. MIT Elixir\nOpentracker - Open and free bittorrent tracker. It aims for minimal resource usage and is intended to run at your wlan router. (Source Code) Beerware C\npeerflix-server - Downloads torrent files and provides a direct link download or a direct link stream. MIT Nodejs\nqBittorrent - Free cross-platform bittorrent client with a feature rich Web UI for remote access. (Source Code) GPL-2.0 C++\nrartracker - Complete private bittorrent tracker. WTFPL PHP\nTorrents.csv - A self-hostable torrent search engine. GPL-3.0 Rust\nTransmission - Fast, easy, Free Bittorrent client. (Source Code) GPL-3.0 C\n\nObject storage/file servers\n\nMinio - Minio is an open source object storage server compatible with Amazon S3 APIs. (Source Code) Apache-2.0 Go\nZenko CloudServer - Zenko CloudServer, an open-source Node.js implementation of a server handling the Amazon S3 protocol. (Source Code) Apache-2.0 Nodejs\n\nSingle-click/drag-n-drop upload\n\nBoZoN - Minimalist Drag and drop file sharing app. AGPL-3.0 PHP\nCoquelicot - Coquelicot is a \u201cone-click\u201d file sharing web application with a focus on protecting users\u2019 privacy. (Source Code) AGPL-3.0 Ruby\ndroppy - droppy is a self-hosted cloud server with an interface similar to desktop file managers and has capabilities to edit files on-the-fly as well as view and playback media directly in the browser. (Demo) BSD-2-Clause Nodejs\nelixire - Simple yet advanced screenshot uploading and link shortening service. (Source Code, Clients) AGPL-3.0 Python\nfibridge - Stream huge files out of your browser without having to upload. (Demo) MIT Rust\nFileShelter - FileShelter is a self-hosted software that allows you to easily share files over the Internet. (Demo) GPL-3.0 C++\nFiles Sharing - Open Source and self-hosted files sharing application based on unique and temporary links. GPL-3.0 PHP\nimg.bi - img.bi is a secure image hosting. Images are encrypted using AES-256 with random key in browser before upload. GPL-3.0 Nodejs\nimgpush - imgpush is a self-hosted file upload service that can easily be integrated into other webapps. MIT Python\nipfs.pics - ipfs.pics is a distributed image hosting website. AGPL-3.0 PHP\nJirafeau - Jirafeau is a web site permitting to upload a file in a simple way and give an unique link to it. (Demo) AGPL-3.0 PHP\nlinx - File sharing application and pastebin with API, auto-expiry, deletion keys, and web seed support. (Demo) GPL-3.0 Go\nlufi - Let's Upload that FIle, client-side encrypted. (Demo, Source Code) AGPL-3.0 Perl\nlutim - Let's Upload That Image. AGPL-3.0 Perl\nOnionShare - Securely and anonymously share a file of any size. GPL-2.0 Python\nPictShare - PictShare is a multi lingual, open source image hosting service with a simple resizing and upload API. (Source Code) Apache-2.0 PHP\nPlik - Plik is a scalable and friendly temporary file upload system. (Demo) MIT Go\nPomf - Simple file uploading and sharing, source for the now shut down site Pomf.se. MIT PHP\nProjectSend - Upload files and assign them to specific clients you create. Give access to those files to your clients. (Source Code) GPL-2.0 PHP\nPsiTransfer - Simple open source self-hosted file sharing solution with robust up-/download-resume and password protection. BSD-2-Clause Nodejs\nSharry - Share files easily over the internet between authenticated and anonymous users (both ways) with resumable up- and downloads. GPL-3.0 Scala/Java\nUguu - Stores files and deletes after X amount of time. (Source Code) MIT PHP\nUp1 - Client-side Encrypted Image Host. MIT Nodejs\nuPste - Private file hosting application with an emphasis on serving technology communities. (Source Code) AGPL-3.0 PHP\nXBackBone - A simple, fast and lightweight file manager with instant sharing tools integration, like ShareX (a free and open-source screenshot utility for Windows). AGPL-3.0 PHP\nYouTransfer - YouTransfer is a simple but elegant self-hosted file transfer and sharing solution. (Demo, Source Code) Apache-2.0 Nodejs\n\nCommand-line file upload\n\nBeauties - Minimalist file sharing written in Go, to be used primarily from Unix shell (e.g. with curl). Can be built as a Debian package for easy install. MIT Go\ntransfer.sh - Easy file sharing from the command line. (Source Code) MIT Go\n\nWeb based file managers\n\nApaxy - Theme built to enhance the experience of browsing web directories, using the mod_autoindex Apache module and some CSS to override the default style of a directory listing. (Source Code) Unlicense HTML\nDirectoryLister - Simple PHP based directory lister that lists a directory and all it's sub-directories and allows you to navigate there within. (Source Code) MIT PHP\nEncode Explorer - Encode Explorer is a single page file browser, it is simple and functional. (Demo, Source Code) MIT PHP\nexplorer - Highly-configurable directory listing made with nodejs. (Source Code) MIT Nodejs\nfilebrowser - Web File Manager which can be used as a middleware or standalone app. (Source Code) Apache-2.0 Go/VueJS\nFilestash - A web file manager that lets you manage your data anywhere it is located: FTP, SFTP, WebDAV, Git, S3, Minio, Dropbox, or Google Drive . (Demo, Source Code) AGPL-3.0 Go\ngoBrowser - Simple http file browser. GPL-3.0 Go\nGossa - Gossa is a light and simple webserver for your files. MIT Go\nh5ai - Modern file indexer for HTTP web servers with focus on your files. Directories are displayed in a appealing way and browsing them is enhanced by different views, a breadcrumb and a tree overview. (Demo, Source Code) MIT PHP\nIFM - Single script file manager. MIT PHP\nResourceSpace - ResourceSpace open source digital asset management software is the simple, fast, and free way to organise your digital assets. (Demo, Source Code) Other PHP\ns3server - Simple HTTP interface to index and browse files in a public S3 or Google Cloud Storage bucket. (Demo) MIT Go\nSprut.io - 2 panel file manager with drag and drop features, code editor, text search, hotkeys. (Demo, Source Code) GPL-3.0 Python\nSurfer - Simple static file server with webui to manage files. MIT Nodejs\nTagSpaces - TagSpaces is an offline, cross-platform file manager and organiser that also can function as a note taking app. The WebDAV version of the application can be installed on top of a WebDAV servers such as Nextcloud or ownCloud. (Demo, Source Code) AGPL-3.0 Javascript\n\nGames\n^        back to top        ^\nGames, game servers and control panels.\n\nA Dark Room - Minimalist text adventure game for your browser. (Demo) MPL-2.0 HTML5\nAgar.IO Clone - Agar.io clone written with Socket.IO and HTML5 canvas. MIT Nodejs\nbattlecraft - Fully distributed multiplayer browser game. Apache-2.0 Erlang\nClumsy Bird - MelonJS port of the famous Flappy Bird Game. (Demo) MIT Nodejs\nelevatorsaga - The elevator programming game. (Source Code) MIT Javascript\nHextris - Fast paced HTML5 puzzle game inspired by Tetris. (Demo) GPL-3.0 HTML5\nLegend of the Green Dragon - Legend of the Green Dragon is a text-based RPG originally developed by Eric Stevens and JT Traub as a remake of and homage to the classic BBS Door game, Legend of the Red Dragon, by Seth Able Robinson. (Demo) AGPL-3.0 PHP\nLila - The forever free, adless and open source chess server powering lichess.org, with official iOS and Android client apps. (Source Code) AGPL-3.0 Scala\nMinetest - An open source voxel game engine. Play one of our many games, mod a game to your liking, make your own game, or play on a multiplayer server. (Source Code) LGPL-2.1/CC-BY-SA-3.0/Other C++\nPosio - Geography multiplayer game. MIT Python\npiqueserver - Server for openspades, the first-person shooter in a destructible voxel world. (Clients) GPL-3.0 Python/C++\nRconCli - CLI for executing queries on a remote Valve Source dedicated server using the RCON Protocol. MIT Go\nSourceBans++ - Admin, ban, and communication management system for games running on the Source engine. (Source Code) CC-BY-SA-4.0 PHP\nTeeworlds - Open source 2D retro multiplayer shooter. (Source Code) BSD-3-Clause/Other C++\nTournamentMango - TournamentMango is an open source tournament bracket and user management system. You can build an archive of players and keep track of all their scores over time as well as their regular characters, games, and aliases. MIT Javascript\n\nGateways and terminal sharing\n^        back to top        ^\n\nasciinema - Web app for hosting asciicasts. (Demo) Apache-2.0 Elixir/Docker\nGateOne - Gate One is an HTML5 web-based terminal emulator and SSH client. (Source Code) AGPL-3.0 Python\nGuacamole - Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC and RDP. (Source Code) Apache-2.0 Java/C\noneye - Cloud software to access your data from everywhere with any browser. (Demo, Source Code) AGPL-3.0 PHP\nOS.js - Desktop implementation for your browser with a fully-fledged window manager, Application APIs, GUI toolkits and filesystem abstraction. (Demo, Source Code) BSD-2-Clause Nodejs\ntmate - Instant terminal sharing. (Source Code) ISC C\n\nGroupware\n^        back to top        ^\n\nCitadel - Groupware including email, calendar/scheduling, address books, forums, mailing lists, IM, wiki and blog engines, RSS aggregation and more. (Source Code) GPL-3.0 C\nCozy Cloud - Personal cloud where you can read your emails or manage and sync your contact, files or calendars, with an app store full of community contributions. (Source Code) GPL-3.0 Nodejs\negroupware - Software suite including calendars, address books, notepad, project management tools, client relationship management tools (CRM), knowledge management tools, a wiki and a CMS. (Source Code) GPL-2.0 PHP\nEspoCRM - CRM with a frontend designed as a single page application, and a REST API. (Demo, Source Code) GPL-3.0 PHP\nHorde - The Horde Project is about creating high quality Open Source applications and libraries, based on PHP and the Horde Framework. (Demo, Source Code) GPL-2.0 PHP\nHRCloud2 - Full-featured home hosted Cloud Drive, Personal Assistant, App Launcher, File Converter, Streamer, Share Tool and more. GPL-3.0 PHP\nKolab - Kolab community is a unified communication and collaboration system. (Source Code) GPL-2.0/LGPL-2.1/GPL-3.0 C++/Python/PHP\nKopano - Groupware suite including e-mail, calendars, tasks, todos and notes. Featuring a modern WebApp, DeskApp and mobile access over Z-Push/ActiveSync. (Demo, Source Code) AGPL-3.0 C/Python/PHP\nOpenmeetings - Openmeetings provides video conferencing, instant messaging, white board, collaborative document editing and other groupware tools using API functions of the Red5 Streaming Server for Remoting and Streaming. (Source Code) Apache-2.0 Java\nSOGo - SOGo offers multiple ways to access the calendaring and messaging data. CalDAV, CardDAV, GroupDAV, as well as ActiveSync, including native Outlook compatibility and Web interface. (Demo, Source Code) LGPL-2.1 Objective-C\nSuiteCRM - The award-winning, enterprise-class open source CRM. (Source Code) AGPL-3.0 PHP\nTine 2.0 - Contacts, Calendar, Tasks, WebDAV, ActiveSync, VOIP, Mail-Client, CRM, Sales, Projects, Timetracker. (Demo, Source Code) AGPL-3.0/Other PHP\nZimbra Collaboration - Email, calendar, collaboration server with Web interface and lots of integrations. (Source Code) GPL-2.0/CPAL-1.0 Java\n\nHuman Resources Management (HRM)\n^        back to top        ^\n\nadmidio - Admidio is a free open source user management system for websites of organizations and groups. The system has a flexible role model so that it\u2019s possible to reflect the structure and permissions of your organization. (Demo, Source Code) GPL-2.0 PHP\nIceHrm - IceHrm employee management system allows companies to centralize confidential employee information. (Demo, Source Code) Apache-2.0 PHP\nOrangeHRM - OrangeHRM is a comprehensive HRM system that captures all the essential functionalities required for any enterprise. (Source Code) GPL-2.0 PHP\nSentrifugo - Sentrifugo is a HRM system that can be easily configured to meet your organizational needs. (Source Code) GPL-3.0 PHP\nTimeOff.Management - Simple yet powerful absence management software for small and medium size business. (Demo, Source Code) MIT Nodejs\n\nInternet Of Things (IoT)\n^        back to top        ^\n\nDeviceHive - Open Source IoT Platform with a wide range of integration options. (Demo, Source Code) Apache-2.0 Java\nDomoticz - Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. (Source Code, Clients) GPL-3.0 C/C++\nFHEM - FHEM is used to automate common tasks in the household like switching lamps and heating. It can also be used to log events like temperature or power consumption. You can control it via web or smartphone frontends, telnet or TCP/IP directly. (Source Code) GPL-3.0 Perl\nGladys - Gladys is an open-source home assistant which runs on your Raspberry Pi. (Source Code) MIT Nodejs\nHome Assistant - Open-source home automation platform. (Demo, Source Code) MIT Python\nNode RED - Browser-based flow editor that helps you wiring hardware devices, APIs and online services to create IoT solutions. (Source Code) Apache-2.0 Nodejs\nopenHAB - Vendor and technology agnostic open source software for home automation. (Source Code) EPL-1.0 Java\nThingsboard - Open-source IoT Platform - Device management, data collection, processing and visualization. (Demo, Source Code) Apache-2.0 Java\nThingspeak - Open source \u201cInternet of Things\u201d application and API to store and retrieve data from things using HTTP. (Demo, Source Code) GPL-3.0 Ruby\n\nKnowledge Management Tools\n^        back to top        ^\n\nMindmaps - Open source, offline capable, mind mapping application. (Demo) AGPL-3.0 HTML5\nMy Mind - Web application for creating and managing mind maps. (Demo) MIT Javascript\nTagTool - Collaborative knowledge management tool. Create word clouds and link the elements. (Demo, Source Code) MIT Python\nWeaviate - GraphQL based Knowledge Graph. (Demo) BSD-3-Clause Go\n\nLearning and Courses\n^        back to top        ^\n\nCanvas LMS - Canvas is the trusted, open-source learning management system (LMS) that is revolutionizing the way we educate. (Demo, Source Code) AGPL-3.0 Ruby\nChamilo LMS - Chamilo LMS allows you to create a virtual campus for the provision of online or semi-online training. (Source Code) GPL-3.0 PHP\nedX - The Open edX platform is open-source code that powers edX.org. (Source Code) AGPL-3.0 Python\nILIAS - ILIAS is the Learning Management System that can cope with anything you throw at it. (Demo, Source Code) GPL-3.0 PHP\nMahara - Open Source fully featured web application to build students electronic portfolio. (Source Code) GPL-3.0 PHP\nMoodle - Moodle is a learning and courses platform with one of the largest open source communities worldwide. (Demo, Source Code) GPL-3.0 PHP\nOpen eClass - Open eClass is an advanced e-learning solution that can enhance the teaching and learning process. (Demo, Source Code) GPL-2.0 PHP\nOpenOLAT - OpenOLAT is a web-based learning management system for teaching, education, assessment and communication. (Demo, Source Code) Apache-2.0 Java\nRELATE - RELATE is a web-based courseware package, includes features such as: flexible rules, statistics, multi-course support, class calendar. (Source Code) MIT Python\nRosarioSIS - RosarioSIS, free Student Information System for school management. (Demo, Source Code) GPL-2.0 PHP\nSakai - The Sakai project provides a flexible and feature-rich environment for teaching, learning, research and other collaboration. (Demo, Source Code) ECL-2.0 Java\n\nMaps and Global Positioning System (GPS)\n^        back to top        ^\nSee also awesome-gis.\n\nGraphHopper - Fast routing library and server using OpenStreetMap. (Source Code) Apache-2.0 Java\nHauk - Easy to setup location sharing platform that lets you temporarily share your location with anyone in real-time. (Demo) Apache-2.0 PHP\nMapBBCodeShare - Tool for sharing custom OSM maps. Support for annotated markers, polygons, lines, multi-format import/export, multiple layers, shortlinks. (Demo) WTFPL/Other PHP\nOpen Source Routing Machine (OSRM) - High performance routing engine designed to run on OpenStreetMap data and offering an HTTP API, C++ library interface, and NodeJS wrapper. (Demo, Source Code) BSD-2-Clause C++\nNominatim - Server application for reverse geocoding (address -> coordinates) on OpenStreetMap data. (Source Code) GPL-2.0 C\nOpenGTS - Entry-level fleet tracking system. Supports variety of tracking devices and protocols. Comes with rich web-interface and reporting features. (Demo, Source Code) Apache-2.0 Java\nOpenStreetMap - Collaborative project to create a free editable map of the world. (Source Code, Clients) GPL-2.0 Ruby\nOpenTripPlanner - Multimodal trip planning software based on OpenStreetMap data and consuming published GTFS-formatted data to suggest routes using local public transit systems. (Source Code) LGPL-3.0 Java/JavaScript\nOrion - Powerful OwnTracks API-compliant location data visualization frontend for the web. (Demo) MIT Python/Nodejs\nOwnTracks Recorder \u26a0 - Store and access data published by OwnTracks location tracking apps. GPL-2.0 C/Lua\nTileServer GL - Vector and raster maps with GL styles. Server side rendering by Mapbox GL Native. Map tile server for Mapbox GL JS, Android, iOS, Leaflet, OpenLayers, GIS via WMTS, etc. (Source Code) BSD-2-Clause Nodejs\nTileServer PHP - Serve map tiles from any PHP hosting. BSD-2-Clause PHP\nTraccar - Java application to track GPS positions. Supports loads of tracking devices and protocols, has an Android and iOS App. Has a web interface to view your trips. (Demo, Source Code) Apache-2.0 Java\n\u03bclogger - Collect geolocation from users in real-time and display their GPS tracks on a website. (Demo) GPL-3.0 PHP\nuMap - Create maps with OpenStreetMap layers in a minute and embed them in your site. (Source Code) WTFPL Python\n\nMedia Streaming\n^        back to top        ^\nSee also https://en.wikipedia.org/wiki/List_of_streaming_media_systems, https://en.wikipedia.org/wiki/Comparison_of_streaming_media_systems\nMultimedia Streaming\n\nDarwin Streaming Server - High performance server for streaming QuickTime and MPEG-4 media over RTP and RTSP protocols. Originated as Apple\u2019s QTSS. (Source Code) APSL-2.0 C++\nGerbera - Gerbera is an UPnP Media Server. It allows you to stream your digital media throughout your home network and listen to/watch it on a variety of UPnP compatible devices. (Source Code) GPL-2.0 C++\nhomehost \u26a0 - Self-hosted React + Redux app that streams your media collection (music, movies, books, podcasts, comics etc). MIT Nodejs\nIcecast 2 - streaming audio/video server which can be used to create an Internet radio station or a privately running jukebox and many things in between. (Source Code, Clients) GPL-2.0 C\nJellyfin - Streaming audio/video server with a slick UI and robust transcoding capabilities (fork of Emby). (Source Code) GPL-2.0 C#\nKaraoke Forever - Host awesome karaoke parties where everyone can easily find and queue songs from their phone's web browser. The player is also browser-based with support for MP3+G, MP4 and WebGL visualizations. (Source Code) ISC Nodejs\nMistServer - Streaming media server that works well in any streaming environment. (Source Code) AGPL-3.0 C++\nReadyMedia - Simple media server software, with the aim of being fully compliant with DLNA/UPnP-AV clients. Formerly known as MiniDLNA. (Source Code) GPL-2.0 C\nRygel - Rygel is a UPnP AV MediaServer that allows you to easily share audio, video, and pictures. Media player software may use Rygel to become a MediaRenderer that may be controlled remotely by a UPnP or DLNA Controller. (Source Code) GPL-3.0 C\n\u00fcWave \u26a0 - \u00fcWave is a self-hosted collaborative listening platform. Users take turns playing media\u2014songs, talks, gameplay videos, or anything else\u2014from a variety of media sources like YouTube and SoundCloud. (Demo, Source Code) MIT Nodejs\n\nAudio Streaming\n\nAmpache - Web based audio/video streaming application. (Demo, Source Code) AGPL-3.0 PHP\nAirsonic - Open-source web-based media streamer and jukebox. A fork of Subsonic's last open-source release, before it switched licenses. (Source Code, Clients) GPL-3.0 Java\nAzuraCast - A modern and accessible self-hosted web radio management suite. (Source Code) Apache-2.0 PHP\nBeets - Music library manager and MusicBrainz tagger (command-line and Web interface). (Source Code) MIT Python\nBlack Candy - Music streaming server built with Rails and Stimulus. MIT Ruby\ncloudtunes \u26a0 - Web-based music player for the cloud. MIT Python\nCompactd - Remote music player that supports adding content. MIT Nodejs\nFriendsRadio \u26a0 - Share music with your friends from Youtube and Soundcloud. (Demo) MIT Nodejs\nFunkwhale - Modern, web-based, convivial, multi-user and free music server. (Demo, Source Code) BSD-3-Clause Python/Django\nGNU FM - Running music community websites, alternative to last.fm. (Source Code) AGPL-3.0 PHP\ngonic - Lightweight music streaming server. Subsonic compatible. GPL-3.0 Go\nGroove Basin - Music player server with a web-based user interface inspired by Amarok 1.4. MIT Nodejs\nkoel - Personal music streaming server that works. (Source Code) MIT PHP\nLibreTime - Simple, open source platform that lets you broadcast streaming radio on the web (fork of Airtime). (Source Code) AGPL-3.0 PHP\nLMS - Access your self-hosted music using a web interface. (Demo) GPL-3.0 C++\nMopidy - Extensible music server. Offers a superset of the mpd API, as well as integration with 3rd party services like Spotify, SoundCloud etc. (Source Code) Apache-2.0 Python\n\nMoped - Responsive HTML5 + Javascript client for the Mopidy music server. MIT HTML5\nMopidy MusicBox - Web Client for Mopidy Music Server. Apache-2.0 HTML5\nMopidy-Party - Mopidy web extension designed for party! Let your guests manage the sound. Apache-2.0 Python\n\n\nmpd - Daemon to remotely play music, stream music, handle and organize playlists. Many clients available. (Source Code, Clients) GPL-2.0 C++\n\nympd - Standalone MPD Web GUI written in C, utilizing Websockets and Bootstrap/JS. (Source Code) GPL-2.0 C\n\n\nmStream - Music streaming server with GUI management tools. Runs on Mac, Windows, and Linux. (Demo, Source Code) GPL-2.0 Nodejs\nMusic Browser - Browser and streamer for your music collection. It is runs on most operating systems, and is light enough to run flawlessly on NAS devices. GPL-3.0 PHP\nmusikcube - Streaming audio server with Linux/macOS/Windows/Android clients. (Source Code) BSD-3-Clause C++\nPolaris - Music browsing and streaming application optimized for large music collections, ease of use and high performance. MIT Rust\nSonerezh - Self-hosted, web-based application for stream your music, everywhere. (Demo, Source Code) GPL-3.0 PHP\nVolumio - A free and open source linux distribution, designed and fine-tuned exclusively for music playback. (Source Code) GPLv3 NodeJS\n\nVideo Streaming\n\nBluecherry - Closed-circuit television (CCTV) software application which supports IP and Analog cameras. (Source Code) GPL-2.0 PHP\ncrtmpserver - High performance RTMP/RTSP streaming server. GPL-3.0 C++\nCyTube - CyTube is a web application providing media synchronization, chat, and more for an arbitrary number of channels. (Demo) MIT Nodejs\nHellowlol HTPC Manager fork - Fully responsive interface to manage all your favorite media on your HTPC. MIT Python\nMyflix - Self-hosted, super lightweight Netflix alternative. MIT Shell\nOddworks - Oddworks is an open source video distribution platform built to destroy the barriers to streaming television with SDKs for Roku, Apple iOS/tvOS, Google Android, and Amazon FireTV. MIT Nodejs\nOpen Streaming Platform - Self-Hosted alternative to Twitch and Youtube Live for live and on-demand video streaming. (Source Code) MIT Python\nPeerTube - Decentralized video streaming platform using P2P (BitTorrent) directly in the web browser. (Source Code) AGPL-3.0 Nodejs\nRapidbay - Self-hosted torrent videostreaming service/torrent client that allows searching and playing videos from torrents in the browser or from a Chromecast/AppleTV/Smart TV. MIT Python/Docker\nRestreamer - Restreamer allows you to do h.264 real-time video streaming on your website without a streaming provider. (Source Code) Apache-2.0 Nodejs/Docker\nShinobiCE - Open Source CCTV software written in Node with both IP and local camera support. AGPL-3.0/GPL-3.0 Nodejs\nStreama - Self hosted streaming media server. (Source Code) MIT Java\nVideoLAN Client (VLC) - Cross-platform multimedia player client and server supporting most multimedia files as well as DVDs, Audio CDs, VCDs, and various streaming protocols. (Source Code) Multiple C\nZoneminder - Closed-circuit television (CCTV) software application which supports IP, USB and Analog cameras. (Source Code) GPL-2.0 PHP\n\nMisc/Other\n^        back to top        ^\n\n411 - Alert Management Web Application. MIT PHP\nAlertHub \u26a0 - AlertHub is a simple tool to get alerted from GitHub releases. MIT Nodejs\nAnchr - Anchr is a toolbox for tiny tasks on the internet, including bookmark collections, URL shortening and (encrypted) image uploads. (Source Code) GPL-3.0 Nodejs\nAnuko - Anuko provides simple time and project tracking on a selfhosted basis. (Demo, Source Code) Other PHP\nasciiflow - Flow Diagram Drawing Tool. (Source Code) GPL-3.0 Java/JavaScript\nblynk - Platform with iOS and Android apps to control Arduino, ESP8266, Raspberry Pi and similar microcontroller boards over the Internet. (Source Code) AGPL-3.0 Java\nCachet - An open source status page system for everyone. (Demo, Source Code) BSD-3-Clause PHP\nCUPS - The Common Unix Print System uses Internet Printing Protocol (IPP) to support printing to local and network printers. (Source Code) GPL-2.0 C\nCyberChef - Perform all manner of \"cyber\" operations within a web browser such as AES, DES and Blowfish encryption and decryption, creating hexdumps, calculating hashes, and much more. (Demo) Apache-2.0 JavaScript\nDomainMOD - Application to manage your domains and other internet assets in a central location. DomainMOD includes a Data Warehouse framework that allows you to import your WHM/cPanel web server data so that you can view, export, and report on your data. (Demo, Source Code) GPL-3.0 PHP\nFlox \u26a0 - Self hosted movie, TV series and anime watch list with a 3-point rating system. Uses The Movie Database backend for information. (Demo) MIT PHP\nformspree \u26a0 - Just send your form to our URL and we'll forward it to your email. No PHP, Javascript or sign up required. (Demo, Source Code) AGPL-3.0 Python\nGeneWeb - GeneWeb is an open source genealogy software written in OCaml. It comes with a Web interface and can be used off-line or as a Web service. (Demo, Source Code) GPL-2.0 OCAML\nHow Secure Is My Password - Rather than just saying a password is \"weak\" or \"strong\", How Secure is My Password? lets your users know how long it would take someone to crack their password. (Demo) MIT Javascript\ngoogle-webfonts-helper \u26a0 - Hassle-Free Way to Self-Host Google Fonts. Get eot, ttf, svg, woff and woff2 files + CSS snippets. (Demo) MIT Nodejs\nytdl-webserver - Docker-ready webserver for downloading youtube videos. MIT Nodejs\nJournal - Simple journaling with encrypted entries and sharing capabilities. MIT Ruby\nKimai - Simple time and project tracking. (Demo, Source Code) GPL-3.0 PHP\nKing Phisher - King Phisher is a tool for testing and promoting user awareness by simulating real world phishing attacks. BSD-3-Clause Python\nMaily Form - Self-hosted service you can use to place forms on static sites. It uses nodemailer and you can host it with Docker. GPL-3.0 Nodejs/Docker\nMonica - Personal relationship manager, and a new kind of CRM to organize interactions with your friends and family. (Source Code) AGPL-3.0 PHP\nMusical Artifacts - Helping to catalog, preserve and free the artifacts you need to produce music. (Source Code) MIT Ruby\nnnmm - Super tiny pastebin/url minifier \"microservice\". Beerware PHP\nNotica - Lets you send browser notifications from your terminal to your desktop or phone. No installation or registration is required. (Source Code) MIT Nodejs\nOmbi - A content request system for Plex/Emby, connects to SickRage, CouchPotato, Sonarr, with a growing feature set. (Demo, Source Code) GPL-2.0 C#\noTranscribe - Free web app to take the pain out of transcribing recorded interviews. (Source Code) MIT JavaScript\nPassCheck - A web application featuring some handy password tools, including a password generator, strength checker and HaveIBeenPwned breach checker. (Source Code) MIT JavaScript\nReleaseBell - Send release notifications for starred Github repos. (Source Code) MIT Nodejs\nrevealjs - Framework for easily creating beautiful presentations using HTML. (Demo, Source Code) MIT JavaScript\nRevive Adserver - World's most popular free, open source ad serving system. Formerly known as OpenX Adserver and phpAdsNew. (Source Code) GPL-2.0-or-later PHP\nSANE Network Scanning - Allow remote clients to access image acquisition devices (scanners) available on the local host. (Source Code) GPL-2.0 C\nTeslaMate - A powerful data logger for Tesla vehicles. MIT Elixir\nTrello Burndown \u26a0 - Easy to use SCRUM burndown chart for Trello boards. MIT Go/Docker\nUlterius - Ulterius is an open-source remote desktop software with lots of awesome functions. (Demo, Source Code) MPL-2.0 C#\nViMbAdmin - Provides a web based virtual mailbox administration system to allow mail administrators to easily manage domains, mailboxes and aliases. (Demo, Source Code) GPL-3.0 PHP\nWeb fonts repository - Simple webfont hosting. Google Fonts alternative for your own fonts. MIT PHP\nwebtrees - Webtrees is the web's leading on-line collaborative genealogy application. (Demo, Source Code) GPL-3.0 PHP\n\nMoney, Budgeting and Management\n^        back to top        ^\nSee also https://github.com/n1trux/awesome-sysadmin#it-asset-management\n\nAkaunting - Akaunting is a free, online and open source accounting software designed for small businesses and freelancers. (Source Code) GPL-3.0 PHP\nBTCPay Server - A self-hosted Bitcoin and other cryptocurrencies payment processor. (Demo, Source Code) MIT C#\nBennedetto - Bennedetto is a simple, turn-based budget management app. GPL-3.0 Python\nBoodle - Simple accounting single-page application in Clojure and ClojureScript. EPL-1.0 Clojure\nBudget App - Budget App is an open source personal budgeting application. Apache-2.0 Java\nDot Ledger - Web-based personal finance management tool. (Demo, Source Code) Apache-2.0 Ruby\nEconomizzer - An easy and secure system for you to manage your personal money and achieve your goals, and can be accessed by computer, tablet or smartphone. (Demo, Source Code) MIT PHP\nExMoney - Self-hosted personal finance app. ISC Elixir\nFirefly III - Firefly III is a modern financial manager. It helps you to keep track of your money and make budget forecasts. It supports credit cards, has an advanced rule engine and can import data from many banks. It's powered by Laravel and requires PHP7.3. (Demo, Source Code) AGPL-3.0 PHP\nFava - Fava is the web frontend of Beancount, a text based double-entry accounting system. (Demo, Source Code) MIT Python\nGalette - Galette is a membership management web application towards non profit organizations. (Source Code) GPL-3.0 PHP\nGRR - Assets management and booking for small/medium companies. (Source Code) GPL-2.0 PHP\nHospital Run - Hospital Run is offline enabled hospital management software. (Source Code, Demo) GPL-3.0 Nodejs\nInventaire - Collaborative resources mapper project, while yet only focused on exploring books mapping with wikidata and ISBNs. (Source Code) AGPL-3.0 Nodejs\nInvoice Ninja - Powerful tool to invoice clients online. (Demo, Source Code) AAL PHP\nInvoicePlane - Manage quotes, invoices, payments and customers for your small business. MIT PHP\nIHateMoney - Manage your shared expenses, easily. (Demo, Source Code) BSD-3-Clause Python\nKresus - Open source personal finance manager. (Demo, Source Code) MIT Nodejs\nOnTrack - A simple app to track spend and set goals. MIT Ruby/React\nPartKeepr - PartKeepr is an electronic part inventory management software. It helps you to keep track of your available parts and assist you with re-ordering parts. (Demo, Source Code) GPL-3.0 PHP\nSilverStrike - Personal finance management made easy. (Demo, Source Code) MIT Python/Django\nStockazNG - Asset Management System. MIT Python\n\nMonitoring\n^        back to top        ^\nSee https://github.com/n1trux/awesome-sysadmin#monitoring and https://github.com/n1trux/awesome-sysadmin#metric--metric-collection\nNote-taking and Editors\n^        back to top        ^\nSee also Wikis\n\nBulletNotes - Workflowy / Dynalist clone with Kanban (Trello) and Calendar functionality. Organize everything. (Source Code) MIT Nodejs\nBoostnote - The note-taking app for programmers that focuses on markdown, snippets, and customizability. (Source Code) GPL-3.0 JavaScript\nCodiMD - Realtime collaborative markdown notes on all platforms, formerly HackMD CE. (Source Code) AGPL-3.0 Node.js\ndillinger - The last Markdown editor, ever. (Source Code) MIT Nodejs\nDnote - A simple and encrypted notebook for developers. Protect your privacy and stay focused. (Source Code) AGPL-3.0 Go\nDocPHT - With DocPHT you can take notes and quickly document anything and without the use of any database. (Demo, Source Code) MIT PHP\ndraw.io - Diagram software for making flowcharts, process diagrams, org charts, UML, ER and network diagrams. (Source Code) Apache-2.0 JavaScript\nJoplin - Joplin is a note taking application with Markdown editor and encryption support for mobile and desktop platforms. Runs client-side and syncs through self hosted Nextcloud or similar. Consider it like open source alternative to Evernote. (Source Code) MIT Nodejs\nLeanote - Leanote, Not Just A Notepad! Open source cloud notepad. (Demo, Source Code) GPL-2.0 Go\nMarkdown Edit - Online markdown editor/viewer. (Source Code) MIT HTML5\nMeemo - Personal notes stream with Markdown support. (Source Code) MIT Nodejs\nminimalist-web-notepad - Minimalist notepad.cc clone. Apache-2.0 PHP\nMiniNote - Simple Markdown note-taking app with persistence. MIT Nodejs\nOpenNote - OpenNote was built to be an open web-based alternative to Microsoft OneNote (T) and EverNote. (Demo) MIT HTML5\nPaperwork - OpenSource note-taking and archiving alternative to Evernote, Microsoft OneNote and Google Keep. (Source Code) MIT PHP\nsavepad - Minimalist notepad based on notepad.cc. MIT PHP\nShareLaTex - Web-based collaborative LaTeX editor. (Source Code) AGPL-3.0 Ruby\nStandard Notes - Simple and private notes app. Protect your privacy while getting more done. That's Standard Notes. (Demo, Source Code) GPL-3.0 Ruby\nturndown - HTML to Markdown converter written in JavaScript. (Source Code) MIT Javascript\nTrilium Notes - Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases. AGPL-3.0 Nodejs\nTurtl - Totally private personal database and note taking app. (Source Code) GPL-3.0 CommonLisp\nWriting - Lightweight distraction-free text editor, in the browser (Markdown and LaTeX supported). No lag when writing. (Source Code) MIT Javascript\n\nOffice Suites\n^        back to top        ^\n\n Collabora Online Development Edition - Collabora Online Development Edition (CODE) is a powerful LibreOffice-based online office that supports all major document, spreadsheet and presentation file formats, which you can integrate in your own infrastructure. (Source Code) MPL-2.0 C++\nCryptPad - CryptPad is the zero knowledge realtime collaborative editor (rich-text, files, source-code, ...). (Source Code) AGPL-3.0 Nodejs\nEtherCalc - Web spreadsheet. (Source Code) CPAL-1.0/Other Nodejs\nEtherDraw - Intuitive collaborative drawing web based tool. Apache-2.0 Nodejs\nEtherpad - Etherpad is a highly customizable Open Source online editor providing collaborative editing in really real-time. (Demo, Source Code) Apache-2.0 Nodejs\nInfinoted - Server for Gobby, a multi-platform collaborative text editor. (Source Code) MIT C++\nONLYOFFICE - Office suite that enables you to manage documents, projects, team and customer relations in one place. (Source Code) AGPL-3.0 Nodejs\nPHPOffice - PHPOffice contains libraries which permits to write and read files from most office suites. LGPL-3.0 PHP\nWebODF - Tools and libraries to view and edit Open Document Format (ODF) files. (Source Code) AGPL-3.0 HTML5\n\nPassword Managers\n^        back to top        ^\n\nBitwarden \u26a0 - Password manager with webapp, browser extension, and mobile app. (Source Code) AGPL-3.0 C#\nbitwarden_rs - Lightweight Bitwarden server API implementation written in Rust. GPL-3.0 Rust\nkeeweb - This webapp is a browser and desktop password manager compatible with KeePass databases. (Source Code) MIT HTML5\nShaark - All in one plateform for your links, stories, passwords and albums. Built with Laravel and Vue.js. (Demo) MIT PHP\nPassbolt - Password manager dedicated for managing passwords in a collaborative way on any Web server, using a MySQL database backend. (Source Code) AGPL-3.0 PHP\nPassIt - Simple password manage with sharing features by group and user, but no administration interface. (Demo, Source Code) AGPL-3.0 Python\nPsono - A promising password managers fully featured for teams. (Demo, Source Code) Apache-2.0 Python\nsysPass - Multiuser password management system. (Demo, Source Code) GPL-3.0 PHP\nTeampass - Password manager dedicated for managing passwords in a collaborative way. One symmetric key is used to encrypt all shared/team passwords and stored server side in a file and the database. works on any server Apache, MySQL and PHP. (Source Code) GPL-3.0 PHP\n\nPastebins\n^        back to top        ^\n\n0bin - Client side encrypted pastebin. WTFPL Python\nbepasty - A pastebin for all kinds of files. (Source Code) BSD-2-Clause Python\nbin - a paste bin. WTFPL/0BSD Rust\ncryptonote - Simple open source web application that lets users encrypt and share messages that can only be read once. (Source Code) MIT Ruby\nEdPaste - Self-hosted pastebin written in Laravel (PHP Framework). MIT PHP\nfiche - Command line pastebin, all you need is netcat. (Demo) MIT C\nFugacious - Open source short-term secure messaging (OSSSM). (Source Code) CC0-1.0 Ruby\nGIST - GIST is an open-source application to share code. (Demo) GPL-3.0 PHP\nhastebin - Open source pastebin written in node.js. (Demo, Source Code) MIT Nodejs\nmojopaste - Perl based pastebin. (Demo, Source Code) Artistic-2.0 Perl\nNoteHub - Free and Hassle-free Pastebin for Markdown Pages. Simple, clean, password provided, generated-short link. MIT Nodejs\nPaste - Paste is forked from the original source pastebin.com used before it was bought. (Source Code) GPL-3.0 PHP\npastebin - Simple pastebin service with convenient api and CLI. (Demo) MIT Go\npb - Lightweight pastebin (and url shortener) built using flask. GPL-3.0 Python\npbnh - Pastebin inspired from project pb and hastebin, with an API and a SQL-based backend. MIT Python\nPrivateBin - PrivateBin is a minimalist, opensource online pastebin/discussion board where the server has zero knowledge of hosted data. (Demo, Source Code) Zlib PHP\nSharpPaste - Cross-platform C# pastebin with client-side AES-256 encryption that just works. MIT C#/NancyFX\nSnibox - Code snippets manager with attractive tag-oriented interface. (Demo, Source Code) MIT Ruby\nsnipt - Long-term memory for coders. Share and store code snippets. MIT Python\nStikked - Advanced and beautiful pastebin. (Demo) GPL-3.0 PHP\nSup3rS3cretMes5age - Very simple (to deploy and to use) secret message service using Hashicorp Vault as a secrets storage. MIT Go\n\nPersonal Dashboards\n^        back to top        ^\nSee also Monitoring\n\nBaby Buddy - Helps caregivers track baby sleep, feedings, diaper changes, and tummy time. (Demo) BSD-2-Clause Python\nDj Diabetes - My Glucose Manager - follow your daily health. BSD-3-Clause Python\nHabitica - Habit tracker app which treats your goals like a Role Playing Game. Previously called HabitRPG. (Source Code) GPL-3.0/CC-BY-NC-SA-3.0/CC-BY-SA-3.0 Nodejs\nHeimdall - Heimdall is an elegant solution to organise all your web applications. (Source Code) MIT PHP\nHomepage - Simple, standalone, self-hosted PHP page that is your window to your server and the web. MIT PHP\nHomer - A dead simple static homepage to expose your server services, with an easy yaml configuration and connectivity check. Apache-2.0 HTML5\niDashboard-PHP - HTPC Dashboard to load website services. MIT PHP\nOrganizr - Organizr aims to be your one stop shop for your Servers Frontend. GPL-3.0 PHP\nsimple-dash - A simple, fully responsive Dashboard to forward to the services of your choice. (Demo) MIT Javascript\nTipboard - In-house, tasty, local dashboarding system. (Source Code) Apache-2.0 Python\nwger - Web-based personal workout, fitness and weight logger/tracker. It can also be used as a simple gym management utility and offers a full REST API as well. (Demo, Source Code) AGPL-3.0 Python\n\nPhoto and Video Galleries\n^        back to top        ^\n\nChevereto Free - Powerful and fast image hosting script that allows you to create your very own full featured image hosting website in just minutes. (Source Code) AGPL-3.0 PHP\nCoppermine - Multilingual photo gallery that integrates with various bulletin boards. Includes upload approval and password protected albums. (Demo, Source Code) GPL-3.0 PHP\nCumulusClips - Your own video sharing website with CumulusClips video sharing script. You can build a YouTube clone where users can upload, rate, comment on videos, and much more. (Demo) GPL-2.0 PHP\nGallery CSS - Gallery.css is all CSS. Think: Simple, maintainable and understandable galleries without the use of Javascript. (Source Code) MIT CSS\nLychee - Open source grid and album based photo-management-system. (Source Code) MIT PHP\nMediaDrop - Video, audio and podcast publication platform. (Source Code) GPL-3.0 Python\nMediagoblin - Free software media publishing platform that anyone can run. You can think of it as a decentralized alternative to Flickr, YouTube, SoundCloud, etc. (Source Code) AGPL-3.0 Python\nMinigalNano - MinigalNano is a very simple image gallery. It adheres to the KISS principle and is very easy to install. MinigalNano does not have a web admin interface: You just upload your images in the photo folder on your server (using FTP, SFTP). AGPL-3.0 PHP\nOwnPhotos - Self hosted wannabe Google Photos clone, with a slight focus on cool graphs. MIT Python\nPhotato - Self-hosted photo gallery, accessible through a responsive WebUI. Directly uses and indexes a specific folder in the filesystem. AGPL-3.0 Java\nPhotofloat - Web 2.0 Photo Gallery Done Right via Static JSON and Dynamic Javascript. (Demo) GPL-2.0 Python\nPhotoLight - The easiest photo gallery there is. GPL-3.0 PHP\nPhotonix - A new web-based photo management application with object recognition, location awareness, color analysis and other ML algorithms. (Demo, Source Code) AGPL-3.0 Python\nPhotoPrism - Personal photo management powered by Go and Google TensorFlow.  Browse, organize, and share your personal photo collection, using the latest technologies to automatically tag and find pictures. (Source Code) MIT Go\nPhotoshow - Responsive Web Gallery. GPL-3.0 PHP\nPiwigo - Photo gallery software for the web, built by an active community of users and developers. (Demo, Source Code) GPL-2.0 PHP\nPlumi - Create your own sophisticated video-sharing site. (Source Code) GPL-2.0 Python\nQuru Image Server - High performance dynamically resizing image server offering directory based access control cropping, rotation, color management and other tools. (Demo, Source Code) AGPL-3.0 Python\nsigal - Yet another simple static gallery generator. MIT Python\nUberGallery - UberGallery is an easy to use, simple to manage, web photo gallery. UberGallery does not require a database and supports JPEG, GIF and PNG file types. Simply upload your images and UberGallery will automatically generate thumbnails and output HTML. (Source Code) MIT PHP\nVideobin - Simple video upload and sharing service with transcoding. (Demo, Source Code) GPL-3.0 Python\nZenphoto - Open-source gallery and CMS project. (Source Code) GPL-2.0 PHP\n\nPolls and Events\n^        back to top        ^\n\nCalagator - Event aggregator. (Source Code) MIT Ruby\nClerk - Simple event logger to keep track of periodic events, habits, etc. as they occur. GPL-3.0 PHP\ndudle - Online scheduling application. (Demo, Source Code) AGPL-3.0 Ruby\nFider - Open source alternative to UserVoice for customer feedback. (Demo, Source Code) MIT Go\nFramadate - Online service for planning an appointment or make a decision quickly and easily: Make a poll, Define dates or subjects to choose, Send the poll link to your friends or colleagues, Discuss and make a decision. (Demo, Source Code) CECILL-B PHP\nhitobito - A web application to manage complex group hierarchies with members, events and a lot more. (Demo, Source Code) AGPL-3.0 Ruby\nJD Esurvey - Open source enterprise survey web application. (Source Code) AGPL-3.0 Java\nKy\u00e9l\u00e0 - Participation polls for group events. (Demo, Source Code) AGPL-3.0 PHP\nLimeSurvey - Feature-rich Open Source web based polling software. Supports extensive survey logic. (Demo, Source code) GPL-2.0 PHP\nOpen Event Server - Enables organizers to manage events from concerts to conferences and meet-ups. GPL-3.0 Python\nPHPBack - The open source feedback system. (Demo, Source Code) GPL-3.0 PHP\n\nBooking and Scheduling\n\nAlf.io - The open source ticket reservation system. (Demo, Source Code) GPL-3.0 Java\nBooked - A web-based calendar and resource scheduling system that allows administered management of reservations on any number of resources. (Demo, Source Code) GPL-3.0 PHP\nEasy!Appointments - A highly customizable web application that allows your customers to book appointments with you via the web. (Demo, Source Code) GPL-3.0 PHP\n\nProxy\n^        back to top        ^\n\nhttp2-serverpush-proxy - Reverse proxy that helps to automatically utilize HTTP/2.0's server push mechanism for static websites. Available as middleware and standalone application. MIT Nodejs\nimgproxy - Fast and secure standalone server for resizing and converting remote images. It works great when you need to resize multiple images on the fly without preparing a ton of cached resized images or re-doing it every time the design changes. MIT Go/Docker\ninlets - Expose your local endpoints to the Internet - with a Kubernetes integration, Docker image and CLI available. MIT Go/Docker\niodine - IPv4 over DNS tunnel solution, enabling you to start up a socks5 proxy listener. (Source Code) ISC C\nmicroproxy - lightweight non-caching HTTP/HTTPS proxy server. MIT Go\nminiProxy - Simple web proxy written in PHP that can allow you to bypass Internet content filters, or to browse the internet anonymously. Only one php file. (Source Code) GPL-3.0 PHP\nOranjeproxy - Anonymizing web proxy. (Source Code) GPL-2.0 PHP\nPHP-Proxy - Web proxy script built specifically to be fast, easy to modify and to support video sites such as YouTube. (Demo, Source Code) MIT PHP\nPomerium - An identity-aware reverse proxy, successor to now obsolete oauth_proxy. It inserts an OAuth step before proxying your request to the backend, so that you can safely expose your self-hosted websites to public Internet. (Source Code) Apache-2.0 Go\nPound - Light-weight reverse proxy and load balancer for HTTP/HTTPS. GPL-2.0 C\nPrivoxy - Non-caching web proxy with advanced filtering capabilities for enhancing privacy, modifying web page data and HTTP headers, controlling access, and removing ads and other obnoxious Internet junk. GPL-2.0 C\nRedbird - A modern reverse proxy for node that includes cluster, HTTP2, LetsEncrypt, and Docker support. BSD-2-Clause Javascript\nsish - Open source serveo/ngrok alternative providing HTTP(S)/WS(S)/TCP tunnels to localhost using only SSH. MIT Go\nsocks5-proxy-server - SOCKS5 proxy server with built-in authentication and Telegram-bot for user management and user statistics on data spent (handy when you pay per GB of data). It is dockerised and simple to install. Apache-2.0 NodeJS\nSOCKS5Engine - Lightweight & resource-efficient SOCKS5 proxy server, optimized for high-load. AGPL-3.0 Go\nSquid - Caching proxy for the Web supporting HTTP, HTTPS, FTP, and more. It reduces bandwidth and improves response times by caching and reusing frequently-requested web pages. (Source Code) GPL-2.0 C\nSwiperproxy - Lightning-fast, open source web proxy that is easy for you to run and customize. (Source Code) MIT Python\nTinyproxy - Light-weight HTTP/HTTPS proxy daemon. (Source Code) GPL-2.0 C\nTraefik - Tr\u00e6f\u026ak is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. It supports several backends (Docker, Swarm, Mesos/Marathon, \u2026) to manage its configuration automatically and dynamically. (Source Code) MIT Go\n\nRead it Later Lists\n^        back to top        ^\n\nNunux Keeper - Your personal content curation service. (Source Code) GPL-3.0 Nodejs\nWallabag - Wallabag, formerly Poche, is a web application allowing you to save articles to read them later with improved readability. (Demo, Source Code) MIT PHP\n\nResource Planning\n^        back to top        ^\n\nfarmOS - Web-based farm record keeping application. (Source Code) GPL-2.0 PHP\ngrocy - ERP beyond your fridge - grocy is a web-based self-hosted groceries & household management solution for your home. (Demo, Source Code) MIT PHP\nTania - Tania is a free and open source farming management system for everyone. You can manage your areas, reservoirs, farm tasks, inventories, and the crop growing progress. Apache-2.0 Go\n\nEnterprise Resource Planning\n\nERPNext - Free open source ERP system. (Demo, Source Code) GPL-3.0 Python\nLedgerSMB - Integrated accounting and ERP system for small and midsize businesses, with double entry accounting, budgeting, invoicing, quotations, projects, orders and inventory management, shipping and more. (Demo, Source Code) GPL-2.0 Perl\nOdoo - Free open source ERP system. (Demo, Source Code) LGPL-3.0 Python\nTryton - Free open source business solution. (Demo, Source Code) GPL-3.0 Python\n\nSearch Engines\n^        back to top        ^\n\nAmbar - Document Search Engine (OCR, Store & Search). (Demo, Source Code) MIT Nodejs/Python\nGigablast - open source search engine. (Source Code) Apache-2.0 C++\nMeiliSearch - Ultra relevant, instant and typo-tolerant full-text search API. (Source Code) MIT Rust\nSearx - Privacy-respecting, hackable metasearch engine. (Demo, Source Code) AGPL-3.0 Python\nYacy - Peer based, decentralized search engine server. (Demo, Source Code) GPL-2.0 Java\n\nSoftware Development\n^        back to top        ^\nProject Management\nSee also Ticketing, Task management/To-do lists, awesome-sysadmin/Code Review\n\nBonobo Git Server - Set up your own self hosted git server on IIS for Windows. Manage users and have full control over your repositories with a nice user friendly graphical interface. (Source Code) MIT C#\nFossil - Distributed version control system featuring wiki and bug tracker. BSD-2-Clause-FreeBSD C\nGoodwork - Self hosted project management and collaboration tool powered by Laravel & VueJS. (Demo) MIT PHP\nGitblit - Pure Java stack for managing, viewing, and serving Git repositories. (Source Code) Apache-2.0 Java\ngitbucket - Easily installable GitHub clone powered by Scala. (Source Code) Apache-2.0 Scala/Java\nGitea - Community managed fork of Gogs, lightweight code hosting solution. (Demo, Source Code) MIT Go\nGitLab - Self Hosted Git repository management, code reviews, issue tracking, activity feeds and wikis. (Demo, Source Code) MIT Ruby\nGitlist - Web-based git repository browser - GitList allows you to browse repositories using your favorite browser, viewing files under different revisions, commit history and diffs. (Source Code) BSD-3-Clause PHP\nGitolite - Gitolite allows you to setup git hosting on a central server, with fine-grained access control and many more powerful features. (Source Code) GPL-2.0 Perl\nGitPrep - Portable Github clone. (Demo, Source Code) Artistic-2.0 Perl\nGit WebUI - Standalone web based user interface for git repositories. Apache-2.0 Python\nGogs - Painless self-hosted Git Service written in Go. (Demo, Source Code) MIT Go\nKallithea - Source code management system that supports two leading version control systems, Mercurial and Git, with a web interface. (Source Code) GPL-3.0 Python\nKlaus - Simple, easy-to-set-up Git web viewer that Just Works. ISC Python\nLavagna - Lavagna is an open-source issue/project management tool designed for small teams. Lightweight, pure Java, easy to install, easy to use. (Source Code) GPL-3.0 Java\nLeantime - Leantime is a lean project management system for small teams and startups helping to manage projects from ideation through delivery. (Source Code) GPL-2.0 PHP\nOctobox \u26a0 - Take back control of your GitHub Notifications. (Source Code) AGPL-3.0 Ruby\nOpenProject - OpenProject is a web-based project management system. (Source Code) GPL-3.0 Ruby\nPhabricator - Collection of web applications that help build better software. (Demo, Source Code) Apache-2.0 PHP\nPhproject - High performance full-featured project management system. (Demo, Source Code) GPL-3.0 PHP\nProjeQtOr - A complete, mature, multi-user project management system with extensive functionality for all phases of a project. (Demo, Source Code) AGPL-3.0 PHP\nRedmine - Redmine is a flexible project management web application. (Demo, Source Code) GPL-2.0 Ruby\nRhodeCode - RhodeCode is an open source platform for software development teams. It unifies and simplifies repository management for Git, Subversion, and Mercurial. (Demo, Source Code) AGPL-3.0 Python\nSCM Manager - The easiest way to share and manage your Git, Mercurial and Subversion repositories over http. (Source Code) BSD-3-Clause Java\nTaiga - Agile Project Management Tool based on the Kanban and Scrum methods. (Source Code) AGPL-3.0 Python\nTitra - Time-tracking solution for freelancers and small teams. (Demo, Source Code) GPL-3.0 JavaScript\nTrac - Trac is an enhanced wiki and issue tracking system for software development projects. BSD-3-Clause Python\nTuleap - Tuleap is a libre suite to plan, track, code and collaborate on software projects. (Source Code) GPL-2.0 PHP\nUVDesk - UVDesk community is a service oriented, event driven extensible opensource helpdesk system that can be used by your organization to provide efficient support to your clients effortlessly whichever way you imagine. (Demo, Source Code) MIT PHP\nZenTao - An agile(scrum) project management system/tool. (Demo, Source Code) ZPL-1.2 PHP\n\nBug Trackers\nSee Ticketing\nIDE/Tools\n\nBabelfish - Self-hosted server for source code parsing. It can parse any file, in any supported language, extract an Abstract Syntax Tree from it, and convert it to a Universal Abstract Syntax Tree which can enable further analysis and transformation. (Source Code) GPL-3.0 Go\nCode-Server - Visual Studio Code in the browser, hosted on a remote server. (Source Code) MIT Nodejs/Docker\nEclipse Che - Open source workspace server and cloud IDE. (Source Code) EPL-1.0 Docker/Java\nICEcoder - ICEcoder is a web IDE / browser based code editor, which allows you to develop websites directly within the web browser. (Demo, Source Code) MIT PHP\nJS Bin - Open source collaborative web development debugging tool. (Source Code) MIT Nodejs\nJudge0 API - Open source API to compile and run source code. (Source Code) GPL-3.0 Ruby\nKoding - The simplest way to manage your entire Dev Infrastructure. (Source Code) Apache-2.0 Nodejs\nML Workspace - All-in-one web-based IDE for machine learning and data science. Apache-2.0 Docker\nRegexr - RegExr is a HTML/JS based tool for creating, testing, and learning about Regular Expressions. (Source Code) MIT Nodejs\nRequestBin - Inspect HTTP requests. Debug webhooks. MIT python\nRStudio Server - Web browser based IDE for R. (Source Code) AGPL-3.0 Java/C++\nsourcegraph - Sourcegraph is a fast, open-source, fully-featured code search and navigation engine written in Go. (Source Code) Apache-2.0 Go\n\nContinuous Integration\nSee awesome-sysadmin/Continuous Integration & Continuous Deployment\nUX testing\n\nUier - Codeless or low-code User Experience test editing and management using Selenium to perform testing or UI automation. Uier tends to be a free self hostable alternative to Applitools, Endtest, Ghost Inspector, Usetrace, Screenster and many others. Apache-2.0 Nodejs\nSelenoid - Lightweight Selenium hub implementation launching browsers within Docker containers. (Source Code) Apache-2.0 Go\nZalenium - Allows anyone to have a disposable and flexible Docker-based Selenium Grid infrastructure featuring video recording, live preview and online/offline dashboards. Apache-2.0 Java/Shell\n\nFaaS/Serverless\nServerless computing on Wikipedia\n\nfx - fx is a tool to help you do Function as a Service with painless on your own servers. MIT Go\nIronFunctions - The serverless microservices platform by iron.io. Apache-2.0 Go\nLocalStack - LocalStack is a fully functional local AWS cloud stack. This includes Lambda for serverless computation. (Source Code) Apache-2.0 Python/Other\nOpenFaaS - Serverless Functions Made Simple for Docker & Kubernetes. (Source Code) MIT Go\n\nAPI Management\n\nDreamFactory - Turns any SQL/NoSQL/Structured data into Restful API. (Source Code) Apache-2.0 PHP\nEndpoint - Super simple mock HTTP API endpoints that return static JSON data, for testing webhooks and client libraries in development. MIT Nodejs\nFusio - Open-source API management platform which helps to build and manage REST APIs. (Demo, Source Code) AGPL-3.0 PHP\nHapttic - Simple HTTP server that forwards all requests to a shell script to handle webhooks you receive. Apache-2.0 Go\nKong - The World\u2019s Most Popular Open Source Microservice API Gateway and Platform. (Source Code) Apache-2.0 Lua\nPara - Flexible and modular backend framework/server for object persistence, API development and authentication. (Source Code) Apache-2.0 Java\nTyk - Fast and scalable open source API Gateway. Out of the box, Tyk offers an API Management Platform with an API Gateway, API Analytics, Developer Portal and API Management Dashboard. (Source Code) MPL-2.0 Go\n\nDocumentation Generators\nSee also Static site generators\n\nDocstore - Static document hosting without any server-side processing, does not require you to recompile every time you change an article. Clone the repository and add articles in the text/ directory to get started. (Source Code) BSD-3-Clause Javascript\nFlatdoc - Small Javascript file that fetches Markdown files and renders them as full pages. MIT Javascript\nmarkdown-tree - Serve a hierarchy / tree directory of markdown files. Use intended for small sites built in markdown. MIT Ruby\nRead the Docs - Host documentation, making it fully searchable and easy to find; import your docs using any major version control system, including Mercurial, Git, Subversion, and Bazaar. (Demo, Source Code) MIT Python\n\nLocalization\n\nAccent - Open-source, self-hosted, developer-oriented translation tool. (Source Code) BSD-3-Clause Elixir\nPootle - Online translation and localization tool. (Source Code) GPL-3.0 Python\nWeblate - Web-based translation tool with tight version control integration. (Demo, Source Code) GPL-3.0 Python\nZanata - Web-based translation platform for translators, content creators and developers to manage localisation projects. (Source Code) GPL-2.0 Java\n\nStatic site generators\n^        back to top        ^\nSee https://staticsitegenerators.net and https://www.staticgen.com\nTask management/To-do lists\n^        back to top        ^\nSee also Project Management and Ticketing.\n\nCrepido - Create (kanban) boards to track users and projects from flat markdown files. MIT Nodejs\nKanboard - Simple and open source visual task board. (Source Code) MIT PHP\nmyTinyTodo - Simple way to manage your todo list in AJAX style. Uses PHP, jQuery, SQLite/MySQL. GTD compliant. (Demo, Source Code) GPL-2.0 PHP\nNullboard - Single-page minimalist kanban board; compact, highly readable and quick to use. (Demo) BSD-2-Clause Javascript\nPHP Task/Todo list - Simple task/todo list that uses a JSON text file for the tasks. MIT PHP\nRestyaboard - Open source Trello-like kanban board. (Demo, Source Code) OSL-3.0 PHP\nTaskBoard - Kanban-inspired app for keeping track of things that need to get done. (Demo, Source Code) MIT PHP\nTaskfreak - Simple but efficient web based task manager written in PHP. GPL-3.0 PHP\nTasks - Simple tasks and notes manager written in PHP, jQuery and Bootstrap using a custom flat file database. MPL-2.0 PHP\nTasks - Kanban based to-do list manager written in Go. MIT Go\ntasks.php - Simple task/todo list manager. MIT PHP\nTaskwarrior - Taskwarrior is Free and Open Source Software that manages your TODO list from your command line. It is flexible, fast, efficient, and unobtrusive. It does its job then gets out of your way. (Source Code) MIT C++\nTinyissue - Simple Issue Tracking for Teams. MIT PHP\ntodo - Simple todo list manager. (Demo) MIT Go\ntodoMini - Mobile friendly zero-feature TODO list web app. Unix philosophy. (Demo, Source Code) GPL-3.0 PHP/Clojure\nTracks - Web-based application to help you implement David Allen\u2019s Getting Things Done\u2122 methodology. (Source Code) GPL-2.0 Ruby\nVolition - Opinionated open-source task management. MIT Ruby\nWekan - Open-source Trello-like kanban. (Demo, Source Code) MIT Nodejs\n\nTicketing\n^        back to top        ^\nSee also Task management/To-do lists and Project Management\n\nBugzilla - General-purpose bugtracker and testing tool originally developed and used by the Mozilla project. MPL-2.0 Perl\nBumpy Booby - Simple, responsive and highly customizable PHP bug tracking system. (Source Code) MIT PHP\nCerb - Group-based e-mail management project. (Source Code) DPL PHP\nDeskulu - Opensource helpdesk and ticketing system based on Drupal 7. (Demo) GPL-2.0 PHP\nDiamanteDesk - DiamanteDesk is FREE Open Source easy-to-use help-desk solution. (Demo, Source Code) OSL-3.0 PHP\ndjango-todo - django-todo is a pluggable, multi-user, multi-group, multi-list todo and ticketing system - a reusable app designed to be dropped into any existing Django project. (Source Code) BSD-3-Clause Python/Django\nFlyspray - Uncomplicated, web-based bug tracking system. (Source Code) GPL-2.0 PHP\nFreeScout - Open source clone of Help Scout: email-based customer support application, help desk and shared mailbox. AGPL-3.0 PHP\nHelpy - Helpy is a modern, open source helpdesk customer support application. Features include knowledgebase, community discussions and support tickets integrated with email. (Demo, Source Code) MIT Ruby\nHuBoard \u26a0 - Instant project management for your GitHub issues (Connects directly GitHub API). MIT Ruby\nMantisBT - Self hosted bug tracker, fits best for software development. (Demo), (Source Code) GPL-2.0 PHP\nOpenSupports - Multi language ticket system with FAQ, role management, metrics and canned response features. (Demo, Source Code) GPL-3.0 PHP\nosTicket - Manage, organize and archive all your support requests and responses in one place. (Source Code) GPL-2.0 PHP\nOTRS - Trouble ticket system for assigning tickets to incoming queries and tracking further communications. (Source Code) AGPL-3.0 Perl\nRequest Tracker - An enterprise-grade issue tracking system. (Source Code) GPL-2.0 Perl\nSentry On-Premise - A powerful error tracking platform with wide language support and a robust API. (Source Code) BSD-3-Clause Python/Django\nSIT - SCM-agnostic, file-based, offline-first, immutable issue tracker. (Source Code) MIT Apache-2.0 Rust\nTheBugGenie - friendly project management and issue tracking tool, with extensive user rights system. (Source Code) MPL-2.0 PHP\nZammad - Easy to use but powerful open-source support and ticketing system. (Source Code) AGPL-3.0 Ruby\n\nURL Shorteners\n^        back to top        ^\n\ndevShort - A simple and privacy-friendly URL shortener for web developers, admins and all professionals. (Demo) MIT PHP\nKutt - A modern URL shortener with support for custom domains. (Source Code) MIT Nodejs\nLink-shortener-bot \u26a0 - URL shortener using a Telegram Bot. (Demo) MIT Ruby\nLinkr - Beautiful, fast URL shortening. MIT Python/Nodejs\nliteshort - User-friendly, actually lightweight, and configurable URL shortener. (Demo) MIT Python\nLstu - Let's SHorten That Url - Lightweight URL shortener. WTFPL Perl\nNimbus - URL shortener and file sharer with a drag-and-drop OS X menu bar client and web interface. MIT Python\nPolr - Modern, minimalist, modular, and lightweight URL shortener. (Source Code) GPL-2.0 PHP\nreduc.io - URL shortener service written in Scala, using Akka-Http and Redis. MIT Scala\nschort - No login, no javascript, just short links. (Demo) CC0-1.0 Python\nShlink - URL shortener with REST API and command line interface. Includes official progressive web application and docker images. (Source Code, Clients)) MIT PHP\nshorturl - Simple URL shortener with very tiny URLs. (Demo) MIT Go\nshuri - SHort URI - Lightweight URL shortener. MIT PHP\nSimple-URL-Shortener - KISS URL shortener, public or private (with account). Minimalist and lightweight. No dependencies. (Demo) MIT PHP\nurl-shortener \u26a0 - Shitty url shortener, emoji and AI powered. MIT Nodejs\nURL-Shortener - Make your long links short and only uses lowercase, so you can write and spell them faster. (Demo) GPL-3.0 PHP\nYOURLS - YOURLS is a set of PHP scripts that will allow you to run Your Own URL Shortener. Features include password protection, URL customization, bookmarklets, statistics, API, plugins, jsonp. (Source Code) MIT PHP\n\nVPN\n^        back to top        ^\nSee https://github.com/n1trux/awesome-sysadmin#vpn\nWeb servers\n^        back to top        ^\nSee https://github.com/n1trux/awesome-sysadmin#web\nWikis\n^        back to top        ^\nSee also Documentation Generators, Wikimatrix, Wiki Engines on WikiIndex, List of wiki software on wikipedia, Comparison of wiki software on wikipedia.\n\nBookStack - BookStack is a simple, self-hosted, easy-to-use platform for organizing and storing information. It allows for documentation to be stored in a book like fashion. (Demo, Source Code) MIT PHP\nCowyo - Cowyo is a feature-rich wiki for minimalists. (Demo) MIT Go\ndjango-wiki - Wiki system with complex functionality for simple integration and a superb interface. Store your knowledge with style: Use django models. (Demo) GPL-3.0 Python\nDocumize - Modern Docs + Wiki software with built-in workflow, single binary executable, just bring MySQL/Percona. (Source Code) AGPL-3.0 Go\nDokuwiki - Easy to use, lightweight, standards-compliant wiki engine with a simple syntax allowing reading the data outside the wiki. All data is stored in plain files, therefore no database is required. (Source Code) GPL-2.0 PHP\nGitit - Wiki program that stores pages and uploaded files in a git repository, which can then be modified using the VCS command line tools or the wiki's web interface. GPL-2.0 Haskell\nGollum - Simple, Git-powered wiki with a sweet API and local frontend. MIT Ruby\njingo - Git based wiki engine written for node.js, with a decent design, a search capability and good typography. MIT Nodejs\nMediawiki - MediaWiki is a free and open-source wiki software package written in PHP. It serves as the platform for Wikipedia and the other Wikimedia projects, used by hundreds of millions of people each month. (Demo, (Source Code) GPL-2.0 PHP\nMoinMoin - Advanced, easy to use and extensible WikiEngine with a large community of users. (Source Code) GPL-2.0 Python\nOlelo - Olelo is a wiki that stores pages in a Git repository, supports many markup styles and has an extensible, hackable architecture. (Demo) MIT Ruby\nOutline \u26a0 - An open, extensible, wiki for your team built using React and Node.js. (Source Code) BSD-3-Clause Nodejs\nPepperminty Wiki - Complete markdown-powered wiki contained in a single PHP file. (Demo) MPL-2.0 PHP\nPineDocs - Simple, fast, customizable and lightweight site for browsing files. GPL-3.0 PHP\nPmWiki - Wiki-based system for collaborative creation and maintenance of websites. GPL-3.0 PHP\nRaneto - Raneto is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase. MIT Nodejs\nTiddlyWiki - Reusable non-linear personal web notebook. (Source Code) BSD-3-Clause Nodejs\nTiki - Wiki CMS Groupware with the most built-in features. (Demo, Source Code) LGPL-2.1 PHP\nTWiki - TWiki is a Perl-based structured wiki application, typically used to run a collaboration platform, knowledge or document management system, a knowledge base, or team portal. (Demo, Source Code) GPL-1.0 Perl\nwiki - Simple Markdown based wiki engine. (Demo) MIT Go\nWiki.js - Modern, lightweight and powerful wiki app built on NodeJS, Git and Markdown. (Demo) AGPL-3.0 Nodejs\nWiKiss - Wiki, simple to use and install. (Source Code) GPL-2.0 PHP\nXWiki - Second generation wiki that allows the user to extend its functionalities with a powerful extension-based architecture. (Demo, Source Code) LGPL-2.1 Java\n\nSelf-hosting Solutions\n^        back to top        ^\n\n1Backend - Self-host web apps, microservices and lambdas on your server. Advanced features enable service reuse and composition. AGPL-3.0 Go\nAnsible-NAS - Build a full-featured home server with this playbook and an Ubuntu box. MIT YAML/Docker\nCharjaBox - Highly configurable Ansible based Homeserver setup using Docker. GPL-3.0 YAML/Ansible/Docker\nCloud Computer - A computer in the cloud that deploys with one click and makes applications accessible through a web browser. (Source Code) MIT Docker\nDietPi - Minimal Debian OS optimized for single-board computers, which allows you to easily install and manage several services for selfhosting at home. (Source Code) GPL-2.0 Shell\nDockSTARTer - DockSTARTer helps you get started with home server apps running in Docker. (Source Code) MIT Shell\nDPlatform - Deploy self-hosted apps easily: simple, bloat-free, independent installation. (Source Code) MIT Shell\nFreedomBone - Home server configuration based on Debian. (Source Code) AGPL-3.0 Shell\nFreedomBox - Community project to develop, design and promote personal servers running free software for private, personal, communications. GPL-3.0 Python/Other\nFreeNAS - Network-attached storage (NAS) software based on FreeBSD and the OpenZFS file system. Support for SMB, AFP, NFS, iSCSI, SSH, rsync and FTP/TFTP protocols. Advanced features include full-disk encryption and plug-ins. (Source Code) BSD-3-Clause Python/Other\nHomelabOS - Your very own offline-first privacy-centric open-source data-center. MIT Docker\nOpenMediaVault - OpenMediaVault is the next generation network attached storage (NAS) solution based on Debian Linux. It contains services like SSH, (S)FTP, SMB/CIFS, DAAP media server, RSync, BitTorrent client and many more. (Source Code) GPL-3.0 PHP\nPiratebox - DIY anonymous offline file-sharing and communications system built with free software and inexpensive off-the-shelf hardware. (Source Code). GPL-3.0 Python/Other\nPuffin - Lightweight webapp catalog based on containers, with user interface \u00e0 la mobile app store. AGPL-3.0 Python/Docker\nSandstorm - Personal server for running self-hosted apps easily and securely. (Demo, Source Code) Apache-2.0 C++/Other\nsovereign - Set of Ansible playbooks to build and maintain your own private cloud: email, calendar, contacts, file sync, IRC bouncer, VPN, and more. GPL-3.0 YAML/Other\nSyncloud - Your own online file storage, social network or email server. (Source Code) GPL-3.0 Python/Other\nUBOS - Linux distro that runs on indie boxes (personal servers and IoT devices). Single-command installation and management of apps - Jenkins, Mediawiki, Owncloud, WordPress, etc., and other features. GPL-3.0 Perl/Other\nWikiSuite - The most comprehensive and integrated Free / Libre / Open Source software suite ever developed. (Source Code) Multiple ClearOS\nYunoHost - Server operating system aiming to make self-hosting accessible to everyone. (Demo, Source Code) AGPL-3.0 Python/Other\n\n\nList of Licenses\n^        back to top        ^\n\n\u26a0  - Depends on a third party network service\n0BSD - BSD Zero-Clause Licence\nAAL - Attribution Assurance License\nAGPL-3.0 - GNU Affero General Public License 3.0\nAGPL-3.0-only - GNU Affero General Public License 3.0 only\nApache-2.0 - Apache, Version 2.0\nAPSL-2.0 - Apple Public Source License, Version 2.0\nArtistic-2.0 - Artistic License Version 2.0\nBeerware - Beerware License\nBSD-2-Clause - BSD 2-clause \"Simplified\"\nBSD-2-Clause-FreeBSD - BSD 2-Clause FreeBSD License\nBSD-3-Clause - BSD 3-Clause \"New\" or \"Revised\"\nBSD-3-Clause-Attribution - BSD with attribution\nCC-BY-NC-SA-3.0 - Creative Commons Attribution-NonCommercial-ShareAlike 3.0 International License\nCC-BY-SA-3.0 - Creative Commons Attribution-ShareAlike 3.0 International License\nCC-BY-SA-4.0 - Creative Commons Attribution-ShareAlike 4.0 International License\nCC0-1.0 - Public Domain\nCDDL-1.0 - Common Development and Distribution License\nCECILL-B - CEA CNRS INRIA Logiciel Libre\nCPAL-1.0 - Common Public Attribution License Version 1.0\nDPL - Devblocks Public License 1.0\nECL-2.0 - Educational Community License, Version 2.0 \nEPL-1.0 - Eclipse Public License, Version 1.0\nEUPL-1.2 - European Union Public License 1.2\nGFDL-1.1-only - GNU Free Documentation License v1.1\nGFDL-1.1-or-later - GNU Free Documentation License v1.1\nGFDL-1.2-only - GNU Free Documentation License v1.2\nGFDL-1.2-or-later - GNU Free Documentation License v1.2\nGFDL-1.3-only - GNU Free Documentation License v1.2\nGFDL-1.3-or-later - GNU Free Documentation License v1.2\nGPL-1.0 - GNU General Public License\nGPL-2.0 - GNU General Public License 2.0\nGPL-3.0-only - GNU General Public License v3.0 only\nGPL-3.0-or-later - GNU General Public License v3.0 or later\nGPL-3.0 - GNU General Public License 3.0\nGPL-3.0-only - GNU General Public License 3.0\nIPL-1.0 - IBM Public License\nISC - Internet Systems Consortium License\nLGPL-2.1 - Lesser General Public License 2.1\nLGPL-3.0 - Lesser General Public License 3.0\nMIT - MIT License\nMPL-1.1 - Mozilla Public License Version 1.1\nMPL-2.0 - Mozilla Public License\nMultiple - Various different licenses, for different components of the project's software.\nOSL-3.0 - Open Software License 3.0\nOther - Non-standard license, usually unique to the project itself.\nSendmail - Sendmail License\nUnlicense - The Unlicense\nWTFPL - Do What the Fuck You Want to Public License\nZlib - Zlib/libpng License\nZPL-1.2 - Zope Public License 1.2\nZPL-2.0 - Zope Public License 2.0\n\n\nExternal links\n^        back to top        ^\n\nAwesome Big Data - Curated list of awesome big data frameworks, resources and other awesomeness.\nAwesome Public Datasets - List of high quality, topic-centric public data sources.\nAwesome Sysadmin - Curated list of amazingly awesome open source sysadmin resources.\nLists of software aimed at privacy and decentralization in some form: PRISM Break, privacytools.io, Alternative Internet, Libre Projects\nDynamic Domain Name services: Afraid.org, Pagekite\nCommunities/forums: /r/selfhosted, IndieWeb\nMirrors: GitHub.com, Gitlab.com\n\n\nContributing\nContributing guidelines can be found in .github/CONTRIBUTING.md.\nAuthors\nThe list of authors can be found in AUTHORS.md.\nLicense\nThis list is under the Creative Commons Attribution-ShareAlike 3.0 Unported License.\n\n"}, {"repo": "protocolbuffers/protobuf", "language": "C++", "readme": "\nProtocol Buffers - Google's data interchange format\nCopyright 2008 Google Inc.\nhttps://developers.google.com/protocol-buffers/\nOverview\nProtocol Buffers (a.k.a., protobuf) are Google's language-neutral,\nplatform-neutral, extensible mechanism for serializing structured data. You\ncan find protobuf's documentation on the Google Developers site.\nThis README file contains protobuf installation instructions. To install\nprotobuf, you need to install the protocol compiler (used to compile .proto\nfiles) and the protobuf runtime for your chosen programming language.\nProtocol Compiler Installation\nThe protocol compiler is written in C++. If you are using C++, please follow\nthe C++ Installation Instructions to install protoc along\nwith the C++ runtime.\nFor non-C++ users, the simplest way to install the protocol compiler is to\ndownload a pre-built binary from our release page:\nhttps://github.com/protocolbuffers/protobuf/releases\nIn the downloads section of each release, you can find pre-built binaries in\nzip packages: protoc-$VERSION-$PLATFORM.zip. It contains the protoc binary\nas well as a set of standard .proto files distributed along with protobuf.\nIf you are looking for an old version that is not available in the release\npage, check out the maven repo here:\nhttps://repo1.maven.org/maven2/com/google/protobuf/protoc/\nThese pre-built binaries are only provided for released versions. If you want\nto use the github master version at HEAD, or you need to modify protobuf code,\nor you are using C++, it's recommended to build your own protoc binary from\nsource.\nIf you would like to build protoc binary from source, see the C++ Installation\nInstructions.\nProtobuf Runtime Installation\nProtobuf supports several different programming languages. For each programming\nlanguage, you can find instructions in the corresponding source directory about\nhow to install protobuf runtime for that specific language:\n\n\n\nLanguage\nSource\nUbuntu\nMacOS\nWindows\n\n\n\n\nC++ (include C++ runtime and protoc)\nsrc\n\n\n\n\n\nJava\njava\n\n\n\n\n\nPython\npython\n\n\n\n\n\nObjective-C\nobjectivec\n\n\n\n\n\nC#\ncsharp\n\n\n\n\n\nJavaScript\njs\n\n\n\n\n\nRuby\nruby\n\n\n\n\n\nGo\ngolang/protobuf\n\n\n\n\n\nPHP\nphp\n\n\n\n\n\nDart\ndart-lang/protobuf\n\n\n\n\n\n\nQuick Start\nThe best way to learn how to use protobuf is to follow the tutorials in our\ndeveloper guide:\nhttps://developers.google.com/protocol-buffers/docs/tutorials\nIf you want to learn from code examples, take a look at the examples in the\nexamples directory.\nDocumentation\nThe complete documentation for Protocol Buffers is available via the\nweb at:\nhttps://developers.google.com/protocol-buffers/\n\n"}, {"repo": "nvm-sh/nvm", "language": "Shell", "readme": "\nNode Version Manager   \nTable of Contents\n\nInstallation and Update\n\nInstall & Update script\n\nAnsible\n\n\nVerify installation\nImportant Notes\nGit install\nManual Install\nManual upgrade\n\n\nUsage\n\nLong-term support\nMigrating global packages while installing\nDefault global packages from file while installing\nio.js\nSystem version of node\nListing versions\n\nSuppressing colorized output\n\n\n.nvmrc\nDeeper Shell Integration\n\nbash\n\nAutomatically call nvm use\n\n\nzsh\n\nCalling nvm use automatically in a directory with a .nvmrc file\n\n\n\n\n\n\nLicense\nRunning tests\nBash completion\n\nUsage\n\n\nCompatibility Issues\nInstalling nvm on Alpine Linux\nRemoval\n\nManual Uninstall\n\n\nDocker for development environment\nProblems\nMac OS \"troubleshooting\"\n\nInstallation and Update\nInstall & Update script\nTo install or update nvm, you should run the install script. To do that, you may either download and run the script manually, or use the following cURL or Wget command:\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash\nRunning either of the above commands downloads a script and runs it. The script clones the nvm repository to ~/.nvm, and adds the source lines from the snippet below to your profile (~/.bash_profile, ~/.zshrc, ~/.profile, or ~/.bashrc).\n\nexport NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm\nNote: If the environment variable $XDG_CONFIG_HOME is present, it will place the nvm files there.\nNote: You can add --no-use to the end of the above script (...nvm.sh --no-use) to postpone using nvm until you manually use it.\nYou can customize the install source, directory, profile, and version using the NVM_SOURCE, NVM_DIR, PROFILE, and NODE_VERSION variables.\nEg: curl ... | NVM_DIR=\"path/to/nvm\". Ensure that the NVM_DIR does not contain a trailing slash.\nNB. The installer can use git, curl, or wget to download nvm, whatever is available.\nNote: On Linux, after running the install script, if you get nvm: command not found or see no feedback from your terminal after you type command -v nvm, simply close your current terminal, open a new terminal, and try verifying again.\nNote: Since OS X 10.9, /usr/bin/git has been preset by Xcode command line tools, which means we can't properly detect if Git is installed or not. You need to manually install the Xcode command line tools before running the install script, otherwise, it'll fail. (see #1782)\nNote: On OS X, if you get nvm: command not found after running the install script, one of the following might be the reason:\n\nYour system may not have a .bash_profile file where the command is set up. Create one with touch ~/.bash_profile and run the install script again\nYou might need to restart your terminal instance. Try opening a new tab/window in your terminal and retry.\n\nIf the above doesn't fix the problem, you may try the following:\n\n\nOpen your .bash_profile (or ~/.zshrc, ~/.profile, or ~/.bashrc) and add the following line of code: source ~/<your_profile_file>. E.g. source ~/.bashrc or source ~/.zshrc.\n\n\nIf the above don't work, try adding the snippet from the install section that finds the correct nvm directory and loads nvm, to your profile (~/.bash_profile, ~/.zshrc, ~/.profile, or ~/.bashrc).\n\n\nFor more information about this issue and possible workarounds, please refer here\n\n\nAnsible\nYou can use a task:\n- name: nvm\n  shell: >\n    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash\n  args:\n    creates: \"{{ ansible_env.HOME }}/.nvm/nvm.sh\"\n\nVerify installation\nTo verify that nvm has been installed, do:\ncommand -v nvm\nwhich should output nvm if the installation was successful. Please note that which nvm will not work, since nvm is a sourced shell function, not an executable binary.\nImportant Notes\nIf you're running a system without prepackaged binary available, which means you're going to install nodejs or io.js from its source code, you need to make sure your system has a C++ compiler. For OS X, Xcode will work, for Debian/Ubuntu based GNU/Linux, the build-essential and libssl-dev packages work.\nNote: nvm does not support Windows (see #284), but may work in WSL (Windows Subsystem for Linux) depending on the version of WSL. For Windows, two alternatives exist, which are neither supported nor developed by us:\n\nnvm-windows\nnodist\n\nNote: nvm does not support Fish either (see #303). Alternatives exist, which are neither supported nor developed by us:\n\nbass allows you to use utilities written for Bash in fish shell\nfast-nvm-fish only works with version numbers (not aliases) but doesn't significantly slow your shell startup\nplugin-nvm plugin for Oh My Fish, which makes nvm and its completions available in fish shell\nfnm - fisherman-based version manager for fish\nfish-nvm - Wrapper around nvm for fish, delays sourcing nvm until it's actually used.\n\nNote: We still have some problems with FreeBSD, because there is no official pre-built binary for FreeBSD, and building from source may need patches; see the issue ticket:\n\n[#900] [Bug] nodejs on FreeBSD may need to be patched\nnodejs/node#3716\n\nNote: On OS X, if you do not have Xcode installed and you do not wish to download the ~4.3GB file, you can install the Command Line Tools. You can check out this blog post on how to just that:\n\nHow to Install Command Line Tools in OS X Mavericks & Yosemite (Without Xcode)\n\nNote: On OS X, if you have/had a \"system\" node installed and want to install modules globally, keep in mind that:\n\nWhen using nvm you do not need sudo to globally install a module with npm -g, so instead of doing sudo npm install -g grunt, do instead npm install -g grunt\nIf you have an ~/.npmrc file, make sure it does not contain any prefix settings (which is not compatible with nvm)\nYou can (but should not?) keep your previous \"system\" node install, but nvm will only be available to your user account (the one used to install nvm). This might cause version mismatches, as other users will be using /usr/local/lib/node_modules/* VS your user account using ~/.nvm/versions/node/vX.X.X/lib/node_modules/*\n\nHomebrew installation is not supported. If you have issues with homebrew-installed nvm, please brew uninstall it, and install it using the instructions below, before filing an issue.\nNote: If you're using zsh you can easily install nvm as a zsh plugin. Install zsh-nvm and run nvm upgrade to upgrade.\nNote: Git versions before v1.7 may face a problem of cloning nvm source from GitHub via https protocol, and there is also different behavior of git before v1.6, and git prior to v1.17.10 can not clone tags, so the minimum required git version is v1.7.10. If you are interested in the problem we mentioned here, please refer to GitHub's HTTPS cloning errors article.\nGit install\nIf you have git installed (requires git v1.7.10+):\n\nclone this repo in the root of your user profile\n\n\ncd ~/ from anywhere then git clone https://github.com/nvm-sh/nvm.git .nvm\n\n\ncd ~/.nvm and check out the latest version with git checkout v0.35.1\nactivate nvm by sourcing it from your shell: . nvm.sh\n\nNow add these lines to your ~/.bashrc, ~/.profile, or ~/.zshrc file to have it automatically sourced upon login:\n(you may have to add to more than one of the above files)\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\nManual Install\nFor a fully manual install, execute the following lines to first clone the nvm repository into $HOME/.nvm, and then load nvm:\nexport NVM_DIR=\"$HOME/.nvm\" && (\n  git clone https://github.com/nvm-sh/nvm.git \"$NVM_DIR\"\n  cd \"$NVM_DIR\"\n  git checkout `git describe --abbrev=0 --tags --match \"v[0-9]*\" $(git rev-list --tags --max-count=1)`\n) && \\. \"$NVM_DIR/nvm.sh\"\nNow add these lines to your ~/.bashrc, ~/.profile, or ~/.zshrc file to have it automatically sourced upon login:\n(you may have to add to more than one of the above files)\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm\nManual upgrade\nFor manual upgrade with git (requires git v1.7.10+):\n\nchange to the $NVM_DIR\npull down the latest changes\ncheck out the latest version\nactivate the new version\n\n(\n  cd \"$NVM_DIR\"\n  git fetch --tags origin\n  git checkout `git describe --abbrev=0 --tags --match \"v[0-9]*\" $(git rev-list --tags --max-count=1)`\n) && \\. \"$NVM_DIR/nvm.sh\"\nUsage\nTo download, compile, and install the latest release of node, do this:\nnvm install node # \"node\" is an alias for the latest version\nTo install a specific version of node:\nnvm install 6.14.4 # or 10.10.0, 8.9.1, etc\nThe first version installed becomes the default. New shells will start with the default version of node (e.g., nvm alias default).\nYou can list available versions using ls-remote:\nnvm ls-remote\nAnd then in any new shell just use the installed version:\nnvm use node\nOr you can just run it:\nnvm run node --version\nOr, you can run any arbitrary command in a subshell with the desired version of node:\nnvm exec 4.2 node --version\nYou can also get the path to the executable to where it was installed:\nnvm which 5.0\nIn place of a version pointer like \"0.10\" or \"5.0\" or \"4.2.1\", you can use the following special default aliases with nvm install, nvm use, nvm run, nvm exec, nvm which, etc:\n\nnode: this installs the latest version of node\niojs: this installs the latest version of io.js\nstable: this alias is deprecated, and only truly applies to node v0.12 and earlier. Currently, this is an alias for node.\nunstable: this alias points to node v0.11 - the last \"unstable\" node release, since post-1.0, all node versions are stable. (in SemVer, versions communicate breakage, not stability).\n\nLong-term support\nNode has a schedule for long-term support (LTS) You can reference LTS versions in aliases and .nvmrc files with the notation lts/* for the latest LTS, and lts/argon for LTS releases from the \"argon\" line, for example. In addition, the following commands support LTS arguments:\n\nnvm install --lts / nvm install --lts=argon / nvm install 'lts/*' / nvm install lts/argon\nnvm uninstall --lts / nvm uninstall --lts=argon / nvm uninstall 'lts/*' / nvm uninstall lts/argon\nnvm use --lts / nvm use --lts=argon / nvm use 'lts/*' / nvm use lts/argon\nnvm exec --lts / nvm exec --lts=argon / nvm exec 'lts/*' / nvm exec lts/argon\nnvm run --lts / nvm run --lts=argon / nvm run 'lts/*' / nvm run lts/argon\nnvm ls-remote --lts / nvm ls-remote --lts=argon nvm ls-remote 'lts/*' / nvm ls-remote lts/argon\nnvm version-remote --lts / nvm version-remote --lts=argon / nvm version-remote 'lts/*' / nvm version-remote lts/argon\n\nAny time your local copy of nvm connects to https://nodejs.org, it will re-create the appropriate local aliases for all available LTS lines. These aliases (stored under $NVM_DIR/alias/lts), are managed by nvm, and you should not modify, remove, or create these files - expect your changes to be undone, and expect meddling with these files to cause bugs that will likely not be supported.\nMigrating global packages while installing\nIf you want to install a new version of Node.js and migrate npm packages from a previous version:\nnvm install node --reinstall-packages-from=node\nThis will first use \"nvm version node\" to identify the current version you're migrating packages from. Then it resolves the new version to install from the remote server and installs it. Lastly, it runs \"nvm reinstall-packages\" to reinstall the npm packages from your prior version of Node to the new one.\nYou can also install and migrate npm packages from specific versions of Node like this:\nnvm install 6 --reinstall-packages-from=5\nnvm install v4.2 --reinstall-packages-from=iojs\nNote that reinstalling packages explicitly does not update the npm version \u2014 this is to ensure that npm isn't accidentally upgraded to a broken version for the new node version.\nTo update npm at the same time add the --latest-npm flag, like this:\nnvm install lts/* --reinstall-packages-from=default --latest-npm\nor, you can at any time run the following command to get the latest supported npm version on the current node version:\nnvm install-latest-npm\nIf you've already gotten an error to the effect of \"npm does not support Node.js\", you'll need to (1) revert to a previous node version (nvm ls & nvm use <your latest _working_ version from the ls>, (2) delete the newly created node version (nvm uninstall <your _broken_ version of node from the ls>), then (3) rerun your nvm install with the --latest-npm flag.\nDefault global packages from file while installing\nIf you have a list of default packages you want installed every time you install a new version, we support that too -- just add the package names, one per line, to the file $NVM_DIR/default-packages. You can add anything npm would accept as a package argument on the command line.\n# $NVM_DIR/default-packages\n\nrimraf\nobject-inspect@1.0.2\nstevemao/left-pad\nio.js\nIf you want to install io.js:\nnvm install iojs\nIf you want to install a new version of io.js and migrate npm packages from a previous version:\nnvm install iojs --reinstall-packages-from=iojs\nThe same guidelines mentioned for migrating npm packages in node are applicable to io.js.\nSystem version of node\nIf you want to use the system-installed version of node, you can use the special default alias \"system\":\nnvm use system\nnvm run system --version\nListing versions\nIf you want to see what versions are installed:\nnvm ls\nIf you want to see what versions are available to install:\nnvm ls-remote\nSuppressing colorized output\nnvm ls, nvm ls-remote and nvm alias usually produce colorized output. You can disable colors with the --no-colors option (or by setting the environment variable TERM=dumb):\nnvm ls --no-colors\nTERM=dumb nvm ls\nTo restore your PATH, you can deactivate it:\nnvm deactivate\nTo set a default Node version to be used in any new shell, use the alias 'default':\nnvm alias default node\nTo use a mirror of the node binaries, set $NVM_NODEJS_ORG_MIRROR:\nexport NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist\nnvm install node\n\nNVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist nvm install 4.2\nTo use a mirror of the io.js binaries, set $NVM_IOJS_ORG_MIRROR:\nexport NVM_IOJS_ORG_MIRROR=https://iojs.org/dist\nnvm install iojs-v1.0.3\n\nNVM_IOJS_ORG_MIRROR=https://iojs.org/dist nvm install iojs-v1.0.3\nnvm use will not, by default, create a \"current\" symlink. Set $NVM_SYMLINK_CURRENT to \"true\" to enable this behavior, which is sometimes useful for IDEs. Note that using nvm in multiple shell tabs with this environment variable enabled can cause race conditions.\n.nvmrc\nYou can create a .nvmrc file containing a node version number (or any other string that nvm understands; see nvm --help for details) in the project root directory (or any parent directory).\nAfterwards, nvm use, nvm install, nvm exec, nvm run, and nvm which will use the version specified in the .nvmrc file if no version is supplied on the command line.\nFor example, to make nvm default to the latest 5.9 release, the latest LTS version, or the latest node version for the current directory:\n$ echo \"5.9\" > .nvmrc\n\n$ echo \"lts/*\" > .nvmrc # to default to the latest LTS version\n\n$ echo \"node\" > .nvmrc # to default to the latest version\nThen when you run nvm:\n$ nvm use\nFound '/path/to/project/.nvmrc' with version <5.9>\nNow using node v5.9.1 (npm v3.7.3)\nnvm use et. al. will traverse directory structure upwards from the current directory looking for the .nvmrc file. In other words, running nvm use et. al. in any subdirectory of a directory with an .nvmrc will result in that .nvmrc being utilized.\nThe contents of a .nvmrc file must be the <version> (as described by nvm --help) followed by a newline. No trailing spaces are allowed, and the trailing newline is required.\nDeeper Shell Integration\nYou can use avn to deeply integrate into your shell and automatically invoke nvm when changing directories. avn is not supported by the nvm development team. Please report issues to the avn team.\nIf you prefer a lighter-weight solution, the recipes below have been contributed by nvm users. They are not supported by the nvm development team. We are, however, accepting pull requests for more examples.\nbash\nAutomatically call nvm use\nPut the following at the end of your $HOME/.bashrc:\nfind-up () {\n    path=$(pwd)\n    while [[ \"$path\" != \"\" && ! -e \"$path/$1\" ]]; do\n        path=${path%/*}\n    done\n    echo \"$path\"\n}\n\ncdnvm(){\n    cd \"$@\";\n    nvm_path=$(find-up .nvmrc | tr -d '[:space:]')\n\n    # If there are no .nvmrc file, use the default nvm version\n    if [[ ! $nvm_path = *[^[:space:]]* ]]; then\n\n        declare default_version;\n        default_version=$(nvm version default);\n\n        # If there is no default version, set it to `node`\n        # This will use the latest version on your machine\n        if [[ $default_version == \"N/A\" ]]; then\n            nvm alias default node;\n            default_version=$(nvm version default);\n        fi\n\n        # If the current version is not the default version, set it to use the default version\n        if [[ $(nvm current) != \"$default_version\" ]]; then\n            nvm use default;\n        fi\n\n        elif [[ -s $nvm_path/.nvmrc && -r $nvm_path/.nvmrc ]]; then\n        declare nvm_version\n        nvm_version=$(<\"$nvm_path\"/.nvmrc)\n\n        declare locally_resolved_nvm_version\n        # `nvm ls` will check all locally-available versions\n        # If there are multiple matching versions, take the latest one\n        # Remove the `->` and `*` characters and spaces\n        # `locally_resolved_nvm_version` will be `N/A` if no local versions are found\n        locally_resolved_nvm_version=$(nvm ls --no-colors \"$nvm_version\" | tail -1 | tr -d '\\->*' | tr -d '[:space:]')\n\n        # If it is not already installed, install it\n        # `nvm install` will implicitly use the newly-installed version\n        if [[ \"$locally_resolved_nvm_version\" == \"N/A\" ]]; then\n            nvm install \"$nvm_version\";\n        elif [[ $(nvm current) != \"$locally_resolved_nvm_version\" ]]; then\n            nvm use \"$nvm_version\";\n        fi\n    fi\n}\nalias cd='cdnvm'\nThis alias would search 'up' from your current directory in order to detect a .nvmrc file. If it finds it, it will switch to that version; if not, it will use the default version.\nzsh\nCalling nvm use automatically in a directory with a .nvmrc file\nPut this into your $HOME/.zshrc to call nvm use automatically whenever you enter a directory that contains an\n.nvmrc file with a string telling nvm which node to use:\n# place this after nvm initialization!\nautoload -U add-zsh-hook\nload-nvmrc() {\n  local node_version=\"$(nvm version)\"\n  local nvmrc_path=\"$(nvm_find_nvmrc)\"\n\n  if [ -n \"$nvmrc_path\" ]; then\n    local nvmrc_node_version=$(nvm version \"$(cat \"${nvmrc_path}\")\")\n\n    if [ \"$nvmrc_node_version\" = \"N/A\" ]; then\n      nvm install\n    elif [ \"$nvmrc_node_version\" != \"$node_version\" ]; then\n      nvm use\n    fi\n  elif [ \"$node_version\" != \"$(nvm version default)\" ]; then\n    echo \"Reverting to nvm default version\"\n    nvm use default\n  fi\n}\nadd-zsh-hook chpwd load-nvmrc\nload-nvmrc\nLicense\nnvm is released under the MIT license.\nCopyright (C) 2010 Tim Caswell and Jordan Harband\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nRunning tests\nTests are written in Urchin. Install Urchin (and other dependencies) like so:\nnpm install\n\nThere are slow tests and fast tests. The slow tests do things like install node\nand check that the right versions are used. The fast tests fake this to test\nthings like aliases and uninstalling. From the root of the nvm git repository,\nrun the fast tests like this:\nnpm run test/fast\n\nRun the slow tests like this:\nnpm run test/slow\n\nRun all of the tests like this:\nnpm test\n\nNota bene: Avoid running nvm while the tests are running.\nBash completion\nTo activate, you need to source bash_completion:\n[[ -r $NVM_DIR/bash_completion ]] && \\. $NVM_DIR/bash_completion\nPut the above sourcing line just below the sourcing line for nvm in your profile (.bashrc, .bash_profile).\nUsage\nnvm:\n\n$ nvm Tab\n\nalias               deactivate          install             ls                  run                 unload\nclear-cache         exec                list                ls-remote           unalias             use\ncurrent             help                list-remote         reinstall-packages  uninstall           version\n\nnvm alias:\n\n$ nvm alias Tab\n\ndefault\n\n\n$ nvm alias my_alias Tab\n\nv0.6.21        v0.8.26       v0.10.28\n\nnvm use:\n\n$ nvm use Tab\n\nmy_alias        default        v0.6.21        v0.8.26       v0.10.28\n\nnvm uninstall:\n\n$ nvm uninstall Tab\n\nmy_alias        default        v0.6.21        v0.8.26       v0.10.28\n\nCompatibility Issues\nnvm will encounter some issues if you have some non-default settings set. (see #606)\nThe following are known to cause issues:\nInside ~/.npmrc:\nprefix='some/path'\nEnvironment Variables:\n$NPM_CONFIG_PREFIX\n$PREFIX\nShell settings:\nset -e\nInstalling nvm on Alpine Linux\nIn order to provide the best performance (and other optimisations), nvm will download and install pre-compiled binaries for Node (and npm) when you run nvm install X. The Node project compiles, tests and hosts/provides these pre-compiled binaries which are built for mainstream/traditional Linux distributions (such as Debian, Ubuntu, CentOS, RedHat et al).\nAlpine Linux, unlike mainstream/traditional Linux distributions, is based on BusyBox, a very compact (~5MB) Linux distribution. BusyBox (and thus Alpine Linux) uses a different C/C++ stack to most mainstream/traditional Linux distributions - musl. This makes binary programs built for such mainstream/traditional incompatible with Alpine Linux, thus we cannot simply nvm install X on Alpine Linux and expect the downloaded binary to run correctly - you'll likely see \"...does not exist\" errors if you try that.\nThere is a -s flag for nvm install which requests nvm download Node source and compile it locally.\nIf installing nvm on Alpine Linux is still what you want or need to do, you should be able to achieve this by running the following from you Alpine Linux shell:\napk add -U curl bash ca-certificates openssl ncurses coreutils python2 make gcc g++ libgcc linux-headers grep util-linux binutils findutils\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash\nThe Node project has some desire but no concrete plans (due to the overheads of building, testing and support) to offer Alpine-compatible binaries.\nAs a potential alternative, @mhart (a Node contributor) has some Docker images for Alpine Linux with Node and optionally, npm, pre-installed.\nRemoval\nManual Uninstall\nTo remove nvm manually, execute the following:\n$ rm -rf \"$NVM_DIR\"\nEdit ~/.bashrc (or other shell resource config) and remove the lines below:\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm\n[[ -r $NVM_DIR/bash_completion ]] && \\. $NVM_DIR/bash_completion\nDocker for development environment\nTo make the development and testing work easier, we have a Dockerfile for development usage, which is based on Ubuntu 14.04 base image, prepared with essential and useful tools for nvm development, to build the docker image of the environment, run the docker command at the root of nvm repository:\n$ docker build -t nvm-dev .\nThis will package your current nvm repository with our pre-defined development environment into a docker image named nvm-dev, once it's built with success, validate your image via docker images:\n$ docker images\n\nREPOSITORY         TAG                 IMAGE ID            CREATED             SIZE\nnvm-dev            latest              9ca4c57a97d8        7 days ago          650 MB\nIf you got no error message, now you can easily involve in:\n$ docker run -h nvm-dev -it nvm-dev\n\nnvm@nvm-dev:~/.nvm$\nPlease note that it'll take about 8 minutes to build the image and the image size would be about 650MB, so it's not suitable for production usage.\nFor more information and documentation about docker, please refer to its official website:\n\nhttps://www.docker.com/\nhttps://docs.docker.com/\n\nProblems\n\n\nIf you try to install a node version and the installation fails, be sure to run nvm cache clear to delete cached node downloads, or you might get an error like the following:\ncurl: (33) HTTP server doesn't seem to support byte ranges. Cannot resume.\n\n\nWhere's my sudo node? Check out #43\n\n\nAfter the v0.8.6 release of node, nvm tries to install from binary packages. But in some systems, the official binary packages don't work due to incompatibility of shared libs. In such cases, use -s option to force install from source:\n\n\nnvm install -s 0.8.6\n\nIf setting the default alias does not establish the node version in new shells (i.e. nvm current yields system), ensure that the system's node PATH is set before the nvm.sh source line in your shell profile (see #658)\n\nMac OS \"troubleshooting\"\nnvm node version not found in vim shell\nIf you set node version to a version other than your system node version nvm use 6.2.1 and open vim and run :!node -v you should see v6.2.1 if you see your system version v0.12.7. You need to run:\nsudo chmod ugo-x /usr/libexec/path_helper\nMore on this issue in dotphiles/dotzsh.\n\n"}, {"repo": "ReactTraining/react-router", "language": "JavaScript", "readme": "\n\n\n\n\n\n\n  React Router\n\n\n  Declarative routing for React\n\n\n\n\n\n\nDocs\nView the docs here\nMigrating from 2.x/3.x?\n3.x docs\n2.x docs\nPackages\nThis repository is a monorepo that we manage using Lerna. That means that we actually publish several packages to npm from the same codebase, including:\n\n\n\nPackage\nVersion\nDocs\nDescription\n\n\n\n\nreact-router\n\n \nThe core of React Router\n\n\nreact-router-dom\n\n \nDOM bindings for React Router\n\n\nreact-router-native\n\n \nReact Native bindings for React Router\n\n\nreact-router-config\n\n\nStatic route config helpers\n\n\n\n\nRedux users: The react-router-redux package is now deprecated. See Redux Integration for a better approach.\n\nChanges\nDetailed release notes for a given version can be found on our releases page.\nFor change notes prior to version 4, please see the CHANGES.md file.\nFunding\nYou may provide financial support for this project by donating via Open Collective, attending one of our workshops, or purchasing one of our online courses. Thank you for your support!\nAbout\nreact-router is developed and maintained by React Training and many amazing contributors. If you're interested in learning more about what React can do for your company, please get in touch!\n\n"}, {"repo": "scikit-learn/scikit-learn", "language": "Python", "readme": "\n    \n \n \n\n\nscikit-learn\nscikit-learn is a Python module for machine learning built on top of\nSciPy and is distributed under the 3-Clause BSD license.\nThe project was started in 2007 by David Cournapeau as a Google Summer\nof Code project, and since then many volunteers have contributed. See\nthe About us page\nfor a list of core contributors.\nIt is currently maintained by a team of volunteers.\nWebsite: http://scikit-learn.org\n\nInstallation\n\nDependencies\nscikit-learn requires:\n\nPython (>= 3.5)\nNumPy (>= 1.11.0)\nSciPy (>= 0.17.0)\njoblib (>= 0.11)\n\nScikit-learn 0.20 was the last version to support Python 2.7 and Python 3.4.\nscikit-learn 0.21 and later require Python 3.5 or newer.\nScikit-learn plotting capabilities (i.e., functions start with plot_\nand classes end with \"Display\") require Matplotlib (>= 1.5.1). For running the\nexamples Matplotlib >= 1.5.1 is required. A few examples require\nscikit-image >= 0.12.3, a few examples require pandas >= 0.18.0.\n\nUser installation\nIf you already have a working installation of numpy and scipy,\nthe easiest way to install scikit-learn is using pip\npip install -U scikit-learn\n\nor conda:\nconda install scikit-learn\n\nThe documentation includes more detailed installation instructions.\n\nChangelog\nSee the changelog\nfor a history of notable changes to scikit-learn.\n\nDevelopment\nWe welcome new contributors of all experience levels. The scikit-learn\ncommunity goals are to be helpful, welcoming, and effective. The\nDevelopment Guide\nhas detailed information about contributing code, documentation, tests, and\nmore. We've included some basic information in this README.\n\nImportant links\n\nOfficial source code repo: https://github.com/scikit-learn/scikit-learn\nDownload releases: https://pypi.org/project/scikit-learn/\nIssue tracker: https://github.com/scikit-learn/scikit-learn/issues\n\n\nSource code\nYou can check the latest sources with the command:\ngit clone https://github.com/scikit-learn/scikit-learn.git\n\n\nContributing\nTo learn more about making a contribution to scikit-learn, please see our\nContributing guide.\n\nTesting\nAfter installation, you can launch the test suite from outside the\nsource directory (you will need to have pytest >= 3.3.0 installed):\npytest sklearn\n\nSee the web page http://scikit-learn.org/dev/developers/advanced_installation.html#testing\nfor more information.\n\nRandom number generation can be controlled during testing by setting\nthe SKLEARN_SEED environment variable.\n\nSubmitting a Pull Request\nBefore opening a Pull Request, have a look at the\nfull Contributing page to make sure your code complies\nwith our guidelines: http://scikit-learn.org/stable/developers/index.html\n\nProject History\nThe project was started in 2007 by David Cournapeau as a Google Summer\nof Code project, and since then many volunteers have contributed. See\nthe About us page\nfor a list of core contributors.\nThe project is currently maintained by a team of volunteers.\nNote: scikit-learn was previously referred to as scikits.learn.\n\nHelp and Support\n\nDocumentation\n\nHTML documentation (stable release): http://scikit-learn.org\nHTML documentation (development version): http://scikit-learn.org/dev/\nFAQ: http://scikit-learn.org/stable/faq.html\n\n\nCommunication\n\nMailing list: https://mail.python.org/mailman/listinfo/scikit-learn\nIRC channel: #scikit-learn at webchat.freenode.net\nStack Overflow: https://stackoverflow.com/questions/tagged/scikit-learn\nWebsite: http://scikit-learn.org\n\n\nCitation\nIf you use scikit-learn in a scientific publication, we would appreciate citations: http://scikit-learn.org/stable/about.html#citing-scikit-learn\n\n"}, {"repo": "apache/incubator-echarts", "language": "JavaScript", "readme": "\nECharts\n\n\n\nECharts is a free, powerful charting and visualization library offering an easy way of adding intuitive, interactive, and highly customizable charts to your commercial products. It is written in pure JavaScript and based on zrender, which is a whole new lightweight canvas library.\nNow ECharts is an incubator project of Apache Software Foundation.\nPlease check its incubator status here\n\u4e2d\u6587\u5b98\u7f51 | ENGLISH HOMEPAGE\n  \nGet ECharts\nYou may choose one of the following methods:\n\nDownload from Official Website in \u4e2d\u6587\u4e0b\u8f7d\u9875\nDownload from Official Website in English\nnpm install echarts --save\nCDN: jsDelivr CDN\n\nDocs\n\n\nTutorial\n\n\u4e2d\u6587\nEnglish\n\n\n\nAPI\n\n\u4e2d\u6587\nEnglish\n\n\n\nOption Manual\n\n\u4e2d\u6587\nEnglish\n\n\n\nGet Help\n\nGitHub Issues for bug report and feature requests\nEmail dev@echarts.apache.org for general questions\nSubscribe mailing list to get updated with the project\n\nBuild\nBuild echarts source code:\nExecute the instructions in the root directory of the echarts:\n(Node.js is required)\n# Install the dependencies from NPM:\nnpm install\n\n# If intending to build and get all types of the \"production\" files:\nnpm run release\n# The same as `node build/build.js --release`\n\n# If only intending to get `dist/echarts.js`, which is usually\n# enough in dev or running the tests:\nnpm run build\n# The same as `node build/build.js`\n\n# Get the same \"production\" files as `node build/build.js`, while\n# watching the editing of the source code. Usually used in dev.\nnpm run watch\n# The same as `node build/build.js -w`\n\n# Check the manual:\nnpm run help\n# The same as `node build/build.js --help`\nThen the \"production\" files are generated in the dist directory.\nMore custom build approaches can be checked in this tutorial: Create Custom Build of ECharts please.\nContribution\nIf you wish to debug locally or make pull requests, please refer to contributing document.\nResources\nAwesome ECharts\nhttps://github.com/ecomfe/awesome-echarts\nExtensions\n\n\nECharts GL An extension pack of ECharts, which provides 3D plots, globe visualization, and WebGL acceleration.\n\n\nLiquidfill \u6c34\u7403\u56fe\n\n\nWordcloud \u5b57\u7b26\u4e91\n\n\nBaidu Map \u767e\u5ea6\u5730\u56fe\u6269\u5c55\n\n\nvue-echarts ECharts component for Vue.js\n\n\necharts-stat Statistics tool for ECharts\n\n\nLicense\nECharts is available under the Apache License V2.\nCode of Conduct\nPlease refer to Apache Code of Conduct.\nPaper\nDeqing Li, Honghui Mei, Yi Shen, Shuang Su, Wenli Zhang, Junting Wang, Ming Zu, Wei Chen.\nECharts: A Declarative Framework for Rapid Construction of Web-based Visualization.\nVisual Informatics, 2018.\n\n"}, {"repo": "jgthms/bulma", "language": "CSS", "readme": "\nBulma\nBulma is a modern CSS framework based on Flexbox.\n\n\n\n\n\n\n\nQuick install\nBulma is constantly in development! Try it out now:\nNPM\nnpm install bulma\nor\nYarn\nyarn add bulma\nBower\nbower install bulma\nImport\nAfter installation, you can import the CSS file into your project using this snippet:\nimport 'bulma/css/bulma.css'\nCDN\nhttps://www.jsdelivr.com/package/npm/bulma\nFeel free to raise an issue or submit a pull request.\nCSS only\nBulma is a CSS framework. As such, the sole output is a single CSS file: bulma.css\nYou can either use that file, \"out of the box\", or download the Sass source files to customize the variables.\nThere is no JavaScript included. People generally want to use their own JS implementation (and usually already have one). Bulma can be considered \"environment agnostic\": it's just the style layer on top of the logic.\nBrowser Support\nBulma uses autoprefixer to make (most) Flexbox features compatible with earlier browser versions. According to Can I use, Bulma is compatible with recent versions of:\n\nChrome\nEdge\nFirefox\nOpera\nSafari\n\nInternet Explorer (10+) is only partially supported.\nDocumentation\nThe documentation resides in the docs directory, and is built with the Ruby-based Jekyll tool.\nBrowse the online documentation here.\nRelated projects\n\n\n\nProject\nDescription\n\n\n\n\nBulma with Attribute Modules\nAdds support for attribute-based selectors\n\n\nBulma with Rails\nIntegrates Bulma with the rails asset pipeline\n\n\nVue Admin (dead)\nVue Admin framework powered by Bulma\n\n\nBulmaswatch\nFree themes for Bulma\n\n\nGoldfish (read-only)\nVault UI with Bulma, Golang, and Vue Admin\n\n\nember-bulma\nEmber addon providing a collection of UI components for Bulma\n\n\nBloomer\nA set of React components for Bulma\n\n\nReact-bulma\nReact.js components for Bulma\n\n\nBuefy\nLightweight UI components for Vue.js based on Bulma\n\n\nvue-bulma-components\nBulma components for Vue.js with straightforward syntax\n\n\nBulmaJS\nJavascript integration for Bulma. Written in ES6 with a data-* API\n\n\nBulma-modal-fx\nA set of modal window effects with CSS transitions and animations for Bulma\n\n\nBulma Stylus\nUp-to-date 1:1 translation to Stylus\n\n\nBulma.styl (read-only)\n1:1 Stylus translation of Bulma 0.6.11\n\n\nelm-bulma\nBulma + Elm\n\n\nelm-bulma-classes\nBulma classes prepared for usage with Elm\n\n\nBulma Customizer\nBulma Customizer \u2013 Create your own bespoke Bulma build\n\n\nFulma\nWrapper around Bulma for fable-react\n\n\nLaravel Enso\nSPA Admin Panel built with Bulma, VueJS and Laravel\n\n\nDjango Bulma\nIntegrates Bulma with Django\n\n\nBulma Templates\nFree Templates for Bulma\n\n\nReact Bulma Components\nAnother React wrap on React for Bulma.io\n\n\npurescript-bulma\nPureScript bindings for Bulma\n\n\nVue Datatable\nBulma themed datatable based on Vue, Laravel & JSON templates\n\n\nbulma-fluent\nFluent Design Theme for Bulma inspired by Microsoft\u2019s Fluent Design System\n\n\ncsskrt-csskrt\nAutomatically add Bulma classes to HTML files\n\n\nbulma-pagination-react\nBulma pagination as a react component\n\n\nbulma-helpers\nFunctional / Atomic CSS classes for Bulma\n\n\nbulma-swatch-hook\nBulma swatches as a react hook and a component\n\n\nBulmaWP (read-only)\nStarter WordPress theme for Bulma\n\n\nRalma\nStateless Ractive.js Components for Bulma\n\n\nDjango Simple Bulma\nLightweight integration of Bulma and Bulma-Extensions for your Django app\n\n\nrbx\nComprehensive React UI Framework written in TypeScript\n\n\nAwesome Bulma Templates\nFree real-world Templates built with Bulma\n\n\nTrunx\nSuper Saiyan React components, son of awesome Bulma, implemented in TypeScript\n\n\n@aybolit/bulma\nWeb Components library inspired by Bulma and Bulma-extensions\n\n\nDrulma\nDrupal theme for Bulma.\n\n\nBulrush\nA Bulma-based Python Pelican blog theme\n\n\nBulma Variable Export\nAccess Bulma Variables in Javascript/Typescript in project using Webpack\n\n\nBulmil\nAn agnostic UI components library based on Web Components, made with Bulma & Stencil.\n\n\nSvelte Bulma Components\nLibrary of UI components to be used in Svelte.js or standalone.\n\n\n\nCopyright and license\nCode copyright 2019 Jeremy Thomas. Code released under the MIT license.\n\n"}, {"repo": "yangshun/tech-interview-handbook", "language": "JavaScript", "readme": "\nTech Interview Handbook\n\n\n\n\n\n\nCredits: Illustration by @yangheng\n\n\nRead on the website\n\n\nWhat is this?\nCarefully curated content to help you ace your next technical interview, with a focus on algorithms. System design questions are in-progress. Besides the usual algorithm questions, other awesome stuff includes:\n\nHow to prepare for coding interviews\nInterview Cheatsheet - Straight-to-the-point Do's and Don'ts\nAlgorithm tips and the best practice questions categorized by topic\n\"Front-end Job Interview Questions\" answers\nInterview formats of the top tech companies\nBehavioral questions asked by the top tech companies\nGood questions to ask your interviewers at the end of the interviews\nHelpful resume tips to get your resume noticed and the Do's and Don'ts\n\nHelp from you in contributing content would be very much appreciated!\nWhy do I want this?\nThis repository has practical content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful as well.\nWho is this for?\nAnybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.\n\n\n\ud83d\udcb0 Looking for a job? Sign up for free with Triplebyte to efficiently interview with top tech companies! \ud83d\udcb0\n\n\nHow is this repository different?\nThere are many awesome books like Cracking the Coding Interview and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top quality curated content directly for your consumption.\nAlso, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. \ud83d\ude0e\nLooking for Front End content?\nFront end-related content have been extracted out into a separate repository - Front End Interview Handbook.\nContents\nA Docusaurus website has been created to provide a better reading experience. Check out the website here!\nRelated\nIf you are interested in how data structures are implemented, check out Lago, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that is able to be used in production and also a reference resource for revising Data Structures and Algorithms.\nContributing\nThere are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.\nContributors\nThis project exists thanks to all the people who contributed. [Contribute]. \nBackers\nThank you to all our backers! \ud83d\ude4f [Become a backer]\n\n\nSponsors\nSupport this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [Become a sponsor]\n         \nMaintainers\n\nYangshun Tay\nLouie Tan\n\nDisclaimer\nI am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Facebook)\n\n"}, {"repo": "yarnpkg/yarn", "language": "JavaScript", "readme": "\n\n\n\n\n\n\n  Fast, reliable, and secure dependency management.\n\n\n\n\n\n\n\n\n\nFast: Yarn caches every package it has downloaded, so it never needs to download the same package again. It also does almost everything concurrently to maximize resource utilization. This means even faster installs.\nReliable: Using a detailed but concise lockfile format and a deterministic algorithm for install operations, Yarn is able to guarantee that any installation that works on one system will work exactly the same on another system.\nSecure: Yarn uses checksums to verify the integrity of every installed package before its code is executed.\nFeatures\n\nOffline Mode. If you've installed a package before,\u00a0then\u00a0you can install it again without\u00a0an\u00a0internet connection.\nDeterministic. The same dependencies will be installed in the same exact way on any machine, regardless of\u00a0installation\u00a0order.\nNetwork Performance. Yarn efficiently queues\u00a0requests and\u00a0avoids request waterfalls in order to maximize network utilization.\nNetwork Resilience. A single request that fails will not cause the entire installation to fail. Requests are automatically retried upon failure.\nFlat Mode. Yarn resolves mismatched versions of dependencies to a single version to avoid creating duplicates.\nMore emojis. \ud83d\udc08\n\nInstalling Yarn\nRead the Installation Guide on our website for detailed instructions on how to install Yarn.\nUsing Yarn\nRead the Usage Guide on our website for detailed instructions on how to use Yarn.\nContributing to Yarn\nContributions are always welcome, no matter how large or small. Substantial feature requests should be proposed as an RFC. Before contributing, please read the code of conduct.\nSee Contributing.\nPrior art\nYarn wouldn't exist if it wasn't for excellent prior art. Yarn has been inspired by the following projects:\n\nBundler\nCargo\nnpm\n\nCredits\nThanks to Sam Holmes for donating the npm package name!\n\n"}, {"repo": "papers-we-love/papers-we-love", "language": "None", "readme": "\n\n\nPapers We Love (PWL) is a community built around reading, discussing and learning more about academic computer science papers. This repository serves as a directory of some of the best papers the community can find, bringing together documents scattered across the web. You can also visit the Papers We Love site for more info.\nDue to licenses we cannot always host the papers themselves (when we do, you will see a \ud83d\udcdc emoji next to its title in the directory README) but we can provide links to their locations.\nIf you enjoy the papers, perhaps stop by a local chapter meetup and join in on the vibrant discussions around them. You can also discuss PWL events, the content in this repository, and/or anything related to PWL on our Slack, after signing-up to join it, or on our #paperswelove IRC channel on freenode.\nChapters\nHere are our official chapters. Let us know if you are interested in starting one in your city!\n\nAmsterdam\nAthens\nAtlanta\nBangalore\nBarcelona\nBeijing\nBelfast\nBerlin\nBhubaneswar\nBoston\nBrasilia\nBoulder\nBucharest\nBuenos Aires\nCairo\nChattanooga\nChicago\nColumbus, Ohio\nDallas\nGothenburg\nGuadalajara\nHamburg\nHyderabad\nIasi\nIowa City\nKathmandu\nKyiv\nLebanon\nLondon\nLos Angeles\nMadrid\nMedell\u00edn\nMontreal\nMumbai\nMunich\nNew York City\nParis\nPhiladelphia\nPortland\nPorto\nPune\nRaleigh-Durham\nReykjav\u00edk\nRio de Janeiro\nSan Diego\nSan Francisco\nSeattle\nSeoul, Korea\nSingapore\nSt. Louis\nTeresina\nToronto\nVienna\nWashington, DC\nWinnipeg\nZ\u00fcrich\n\nAll of our meetups follow our Code of Conduct.\nPast Presentations\nCheck out our YouTube and MixCloud (audio-only format) channels.\nInfo\nWe're looking for pull requests related to papers we should add, better organization of the papers we do have, and/or links to other paper-repos we should point to.\nOther Good Places to Find Papers\n\n2 Minute Papers\nBell System Technical Journal, 1922-1983\nBest Paper Awards in Computer Science\nFacebook\nGoogle Scholar (choose a subcategory)\nMicrosoft Research\nFunctional Programming Books Review\nMIT's Artificial Intelligence Lab Publications\nMIT's Distributed System's Reading Group\narXiv Paper Repository\nSciRate\ncat-v.org\ny-archive\nnetlib\nServices Engineering Reading List\nReadings in Distributed Systems\nGradual Typing Bibliography\nSecurity Data Science Papers\nResearch Papers from Robert Harper, Carnegie Mellon University\nLobste.rs tagged as PDF\nThe Morning Paper\n\nPlease check out our wiki-page for links to blogs, books, exchanges that are worth a good read.\nHow To Read a Paper\nReading a paper is not the same as reading a blogpost or a novel. Here are a few handy resources to help you get started.\n\nHow to read an academic article\nAdvice on reading academic papers\nHow to read and understand a scientific paper\nShould I Read Papers?\nThe Refreshingly Rewarding Realm of Research Papers\n\nApplications/Ideas built around Papers We Love\n\nLove a Paper - @loveapaper\n\nContributing Guidelines\nPlease take a look at our CONTRIBUTING.md file.\nCopyright\nThe name \"Papers We Love\" and the logos for the organization are copyrighted, and under the ownership of Papers We Love Ltd, all rights reserved. When starting a chapter, please review our guidelines and ask us about using the logo.\n\n"}, {"repo": "necolas/normalize.css", "language": "CSS", "readme": "\nnormalize.css\n\n\nA modern alternative to CSS resets\n\n \n\n\nNPM\nnpm install --save normalize.css\nCDN\nSee https://yarnpkg.com/en/package/normalize.css\nDownload\nSee https://necolas.github.io/normalize.css/latest/normalize.css\nWhat does it do?\n\nPreserves useful defaults, unlike many CSS resets.\nNormalizes styles for a wide range of elements.\nCorrects bugs and common browser inconsistencies.\nImproves usability with subtle modifications.\nExplains what code does using detailed comments.\n\nBrowser support\n\nChrome\nEdge\nFirefox ESR+\nInternet Explorer 10+\nSafari 8+\nOpera\n\nExtended details and known issues\nAdditional detail and explanation of the esoteric parts of normalize.css.\npre, code, kbd, samp\nThe font-family: monospace, monospace hack fixes the inheritance and scaling\nof font-size for preformatted text. The duplication of monospace is\nintentional. Source.\nsub, sup\nNormally, using sub or sup affects the line-box height of text in all\nbrowsers. Source.\nselect\nBy default, Chrome on OS X and Safari on OS X allow very limited styling of\nselect, unless a border property is set. The default font weight on optgroup\nelements cannot safely be changed in Chrome on OSX and Safari on OS X.\n[type=\"checkbox\"]\nIt is recommended that you do not style checkbox and radio inputs as Firefox's\nimplementation does not respect box-sizing, padding, or width.\n[type=\"number\"]\nCertain font size values applied to number inputs cause the cursor style of the\ndecrement button to change from default to text.\n[type=\"search\"]\nThe search input is not fully stylable by default. In Chrome and Safari on\nOSX/iOS you can't control font, padding, border, or background. In\nChrome and Safari on Windows you can't control border properly. It will apply\nborder-width but will only show a border color (which cannot be controlled)\nfor the outer 1px of that border. Applying -webkit-appearance: textfield\naddresses these issues without removing the benefits of search inputs (e.g.\nshowing past searches).\nContributing\nPlease read the contribution guidelines in order to make the\ncontribution process easy and effective for everyone involved.\n\n"}, {"repo": "goldbergyoni/nodebestpractices", "language": "JavaScript", "readme": "\nNode.js Best Practices\n\n\n\n\n\n  \n\n\n Follow us on Twitter! @nodepractices\n\nRead in a different language: CN, BR, RU (ES, FR, HE, KR and TR in progress!)\n\nBuilt and maintained by our Steering Committee and Collaborators\nLatest Best Practices and News\n\n\n\u2705 New best practice: 7.1: Don't block the event loop by Keith Holliday\n\n\n\ud83c\uddf7\ud83c\uddfa Russian translation: The amazing Alex Ivanov has just published a Russian translation\n\n\nWe seek typescript contributors: want to help contributing TypeScript examples? please approach by opening an issue\n\n\n\nWelcome! 3 Things You Ought To Know First\n1. You are, in fact, reading dozens of the best Node.js articles - this repository is a summary and curation of the top-ranked content on Node.js best practices, as well as content written here by collaborators\n2. It is the largest compilation, and it is growing every week - currently, more than 80 best practices, style guides, and architectural tips are presented. New issues and pull requests are created every day to keep this live book updated. We'd love to see you contributing here, whether that is fixing code mistakes, helping with translations, or suggesting brilliant new ideas. See our writing guidelines here\n3. Most best practices have additional info - most bullets include a \ud83d\udd17Read More link that expands on the practice with code examples, quotes from selected blogs and more information\n\nTable of Contents\n\nProject Structure Practices (5)\nError Handling Practices (11) \nCode Style Practices (12) \nTesting And Overall Quality Practices (12) \nGoing To Production Practices (18) \nSecurity Practices (25)\nPerformance Practices (2) (Work In Progress\ufe0f \u270d\ufe0f)\n\n\n1. Project Structure Practices\n 1.1 Structure your solution by components\nTL;DR: The worst large applications pitfall is maintaining a huge code base with hundreds of dependencies - such a monolith slows down developers as they try to incorporate new features. Instead, partition your code into components, each gets its own folder or a dedicated codebase, and ensure that each unit is kept small and simple. Visit 'Read More' below to see examples of correct project structure\nOtherwise: When developers who code new features struggle to realize the impact of their change and fear to break other dependent components - deployments become slower and riskier. It's also considered harder to scale-out when all the business units are not separated\n\ud83d\udd17 Read More: structure by components\n\n 1.2 Layer your components, keep Express within its boundaries\nTL;DR: Each component should contain 'layers' - a dedicated object for the web, logic, and data access code. This not only draws a clean separation of concerns but also significantly eases mocking and testing the system. Though this is a very common pattern, API developers tend to mix layers by passing the web layer objects (Express req, res) to business logic and data layers - this makes your application dependent on and accessible by Express only\nOtherwise: App that mixes web objects with other layers cannot be accessed by testing code, CRON jobs, and other non-Express callers\n\ud83d\udd17 Read More: layer your app\n\n 1.3 Wrap common utilities as npm packages\nTL;DR: In a large app that constitutes a large code base, cross-cutting-concern utilities like logger, encryption and alike, should be wrapped by your own code and exposed as private npm packages. This allows sharing them among multiple code bases and projects\nOtherwise: You'll have to invent your own deployment and dependency wheel\n\ud83d\udd17 Read More: Structure by feature\n\n 1.4 Separate Express 'app' and 'server'\nTL;DR: Avoid the nasty habit of defining the entire Express app in a single huge file - separate your 'Express' definition to at least two files: the API declaration (app.js) and the networking concerns (WWW). For even better structure, locate your API declaration within components\nOtherwise: Your API will be accessible for testing via HTTP calls only (slower and much harder to generate coverage reports). It probably won't be a big pleasure to maintain hundreds of lines of code in a single file\n\ud83d\udd17 Read More: separate Express 'app' and 'server'\n\n 1.5 Use environment aware, secure and hierarchical config\nTL;DR: A perfect and flawless configuration setup should ensure (a) keys can be read from file AND from environment variable (b) secrets are kept outside committed code (c) config is hierarchical for easier findability. There are a few packages that can help tick most of those boxes like rc, nconf and config\nOtherwise: Failing to satisfy any of the config requirements will simply bog down the development or devops team. Probably both\n\ud83d\udd17 Read More: configuration best practices\n\n\u2b06 Return to top\n2. Error Handling Practices\n 2.1 Use Async-Await or promises for async error handling\nTL;DR: Handling async errors in callback style is probably the fastest way to hell (a.k.a the pyramid of doom). The best gift you can give to your code is using a reputable promise library or async-await instead which enables a much more compact and familiar code syntax like try-catch\nOtherwise: Node.js callback style, function(err, response), is a promising way to un-maintainable code due to the mix of error handling with casual code, excessive nesting, and awkward coding patterns\n\ud83d\udd17 Read More: avoiding callbacks\n\n 2.2 Use only the built-in Error object\nTL;DR: Many throw errors as a string or as some custom type \u2013 this complicates the error handling logic and the interoperability between modules. Whether you reject a promise, throw an exception or emit an error \u2013 using only the built-in Error object will increase uniformity and prevent loss of information\nOtherwise: When invoking some component, being uncertain which type of errors come in return \u2013 it makes proper error handling much harder. Even worse, using custom types to describe errors might lead to loss of critical error information like the stack trace!\n\ud83d\udd17 Read More: using the built-in error object\n\n 2.3 Distinguish operational vs programmer errors\nTL;DR: Operational errors (e.g. API received an invalid input) refer to known cases where the error impact is fully understood and can be handled thoughtfully. On the other hand, programmer error (e.g. trying to read undefined variable) refers to unknown code failures that dictate to gracefully restart the application\nOtherwise: You may always restart the application when an error appears, but why let ~5000 online users down because of a minor, predicted, operational error? the opposite is also not ideal \u2013 keeping the application up when an unknown issue (programmer error) occurred might lead to an unpredicted behavior. Differentiating the two allows acting tactfully and applying a balanced approach based on the given context\n\ud83d\udd17 Read More: operational vs programmer error\n\n 2.4 Handle errors centrally, not within an Express middleware\nTL;DR: Error handling logic such as mail to admin and logging should be encapsulated in a dedicated and centralized object that all endpoints (e.g. Express middleware, cron jobs, unit-testing) call when an error comes in\nOtherwise: Not handling errors within a single place will lead to code duplication and probably to improperly handled errors\n\ud83d\udd17 Read More: handling errors in a centralized place\n\n 2.5 Document API errors using Swagger or GraphQL\nTL;DR: Let your API callers know which errors might come in return so they can handle these thoughtfully without crashing. For RESTful APIs, this is usually done with documentation frameworks like Swagger. If you're using GraphQL, you can utilize your schema and comments as well.\nOtherwise: An API client might decide to crash and restart only because it received back an error it couldn\u2019t understand. Note: the caller of your API might be you (very typical in a microservice environment)\n\ud83d\udd17 Read More: documenting API errors in Swagger or GraphQL\n\n 2.6 Exit the process gracefully when a stranger comes to town\nTL;DR: When an unknown error occurs (a developer error, see best practice 2.3) - there is uncertainty about the application healthiness. A common practice suggests restarting the process carefully using a process management tool like Forever or PM2\nOtherwise: When an unfamiliar exception occurs, some object might be in a faulty state (e.g. an event emitter which is used globally and not firing events anymore due to some internal failure) and all future requests might fail or behave crazily\n\ud83d\udd17 Read More: shutting the process\n\n 2.7 Use a mature logger to increase error visibility\nTL;DR: A set of mature logging tools like Winston, Bunyan, Log4js or Pino, will speed-up error discovery and understanding. So forget about console.log\nOtherwise: Skimming through console.logs or manually through messy text file without querying tools or a decent log viewer might keep you busy at work until late\n\ud83d\udd17 Read More: using a mature logger\n\n 2.8 Test error flows using your favorite test framework\nTL;DR: Whether professional automated QA or plain manual developer testing \u2013 Ensure that your code not only satisfies positive scenarios but also handles and returns the right errors. Testing frameworks like Mocha & Chai can handle this easily (see code examples within the \"Gist popup\")\nOtherwise: Without testing, whether automatically or manually, you can\u2019t rely on your code to return the right errors. Without meaningful errors \u2013 there\u2019s no error handling\n\ud83d\udd17 Read More: testing error flows\n\n 2.9 Discover errors and downtime using APM products\nTL;DR: Monitoring and performance products (a.k.a APM) proactively gauge your codebase or API so they can automagically highlight errors, crashes and slow parts that you were missing\nOtherwise: You might spend great effort on measuring API performance and downtimes, probably you\u2019ll never be aware which are your slowest code parts under real-world scenario and how these affect the UX\n\ud83d\udd17 Read More: using APM products\n\n 2.10 Catch unhandled promise rejections\nTL;DR: Any exception thrown within a promise will get swallowed and discarded unless a developer didn\u2019t forget to explicitly handle. Even if your code is subscribed to process.uncaughtException! Overcome this by registering to the event process.unhandledRejection\nOtherwise: Your errors will get swallowed and leave no trace. Nothing to worry about\n\ud83d\udd17 Read More: catching unhandled promise rejection\n\n 2.11 Fail fast, validate arguments using a dedicated library\nTL;DR: This should be part of your Express best practices \u2013 Assert API input to avoid nasty bugs that are much harder to track later. The validation code is usually tedious unless you are using a very cool helper library like Joi\nOtherwise: Consider this \u2013 your function expects a numeric argument \u201cDiscount\u201d which the caller forgets to pass, later on, your code checks if Discount!=0 (amount of allowed discount is greater than zero), then it will allow the user to enjoy a discount. OMG, what a nasty bug. Can you see it?\n\ud83d\udd17 Read More: failing fast\n\n\u2b06 Return to top\n3. Code Style Practices\n 3.1 Use ESLint\nTL;DR: ESLint is the de-facto standard for checking possible code errors and fixing code style, not only to identify nitty-gritty spacing issues but also to detect serious code anti-patterns like developers throwing errors without classification. Though ESLint can automatically fix code styles, other tools like prettier and beautify are more powerful in formatting the fix and work in conjunction with ESLint\nOtherwise: Developers will focus on tedious spacing and line-width concerns and time might be wasted overthinking the project's code style\n\ud83d\udd17 Read More: Using ESLint and Prettier\n\n 3.2 Node.js specific plugins\nTL;DR: On top of ESLint standard rules that cover vanilla JavaScript, add Node.js specific plugins like eslint-plugin-node, eslint-plugin-mocha and eslint-plugin-node-security\nOtherwise: Many faulty Node.js code patterns might escape under the radar. For example, developers might require(variableAsPath) files with a variable given as path which allows attackers to execute any JS script. Node.js linters can detect such patterns and complain early\n\n 3.3 Start a Codeblock's Curly Braces on the Same Line\nTL;DR: The opening curly braces of a code block should be on the same line as the opening statement\nCode Example\n// Do\nfunction someFunction() {\n  // code block\n}\n\n// Avoid\nfunction someFunction()\n{\n  // code block\n}\nOtherwise: Deferring from this best practice might lead to unexpected results, as seen in the StackOverflow thread below:\n\ud83d\udd17 Read more: \"Why do results vary based on curly brace placement?\" (StackOverflow)\n\n 3.4 Separate your statements properly\nNo matter if you use semicolons or not to separate your statements, knowing the common pitfalls of improper linebreaks or automatic semicolon insertion, will help you to eliminate regular syntax errors.\nTL;DR: Use ESLint to gain awareness about separation concerns. Prettier or Standardjs can automatically resolve these issues.\nOtherwise: As seen in the previous section, JavaScript's interpreter automatically adds a semicolon at the end of a statement if there isn't one, or considers a statement as not ended where it should, which might lead to some undesired results. You can use assignments and avoid using immediate invoked function expressions to prevent most of unexpected errors.\nCode example\n// Do\nfunction doThing() {\n    // ...\n}\n\ndoThing()\n\n// Do\n\nconst items = [1, 2, 3]\nitems.forEach(console.log)\n\n// Avoid \u2014 throws exception\nconst m = new Map()\nconst a = [1,2,3]\n[...m.values()].forEach(console.log)\n> [...m.values()].forEach(console.log)\n>  ^^^\n> SyntaxError: Unexpected token ...\n\n// Avoid \u2014 throws exception\nconst count = 2 // it tries to run 2(), but 2 is not a function\n(function doSomething() {\n  // do something amazing\n}())\n// put a semicolon before the immediate invoked function, after the const definition, save the return value of the anonymous function to a variable or avoid IIFEs alltogether\n\ud83d\udd17 Read more: \"Semi ESLint rule\"\n\ud83d\udd17 Read more: \"No unexpected multiline ESLint rule\"\n\n 3.5 Name your functions\nTL;DR: Name all functions, including closures and callbacks. Avoid anonymous functions. This is especially useful when profiling a node app. Naming all functions will allow you to easily understand what you're looking at when checking a memory snapshot\nOtherwise: Debugging production issues using a core dump (memory snapshot) might become challenging as you notice significant memory consumption from anonymous functions\n\n 3.6 Use naming conventions for variables, constants, functions and classes\nTL;DR: Use lowerCamelCase when naming constants, variables and functions and UpperCamelCase (capital first letter as well) when naming classes. This will help you to easily distinguish between plain variables/functions, and classes that require instantiation. Use descriptive names, but try to keep them short\nOtherwise: Javascript is the only language in the world which allows invoking a constructor (\"Class\") directly without instantiating it first. Consequently, Classes and function-constructors are differentiated by starting with UpperCamelCase\n3.6 Code Example\n// for class name we use UpperCamelCase\nclass SomeClassExample {}\n\n// for const names we use the const keyword and lowerCamelCase\nconst config = {\n  key: 'value'\n};\n\n// for variables and functions names we use lowerCamelCase\nlet someVariableExample = 'value';\nfunction doSomething() {}\n\n 3.7 Prefer const over let. Ditch the var\nTL;DR: Using const means that once a variable is assigned, it cannot be reassigned. Preferring const will help you to not be tempted to use the same variable for different uses, and make your code clearer. If a variable needs to be reassigned, in a for loop, for example, use let to declare it. Another important aspect of let is that a variable declared using it is only available in the block scope in which it was defined. var is function scoped, not block scoped, and shouldn't be used in ES6 now that you have const and let at your disposal\nOtherwise: Debugging becomes way more cumbersome when following a variable that frequently changes\n\ud83d\udd17 Read more: JavaScript ES6+: var, let, or const? \n\n 3.8 Require modules first, not inside functions\nTL;DR: Require modules at the beginning of each file, before and outside of any functions. This simple best practice will not only help you easily and quickly tell the dependencies of a file right at the top but also avoids a couple of potential problems\nOtherwise: Requires are run synchronously by Node.js. If they are called from within a function, it may block other requests from being handled at a more critical time. Also, if a required module or any of its own dependencies throw an error and crash the server, it is best to find out about it as soon as possible, which might not be the case if that module is required from within a function\n\n 3.9 Require modules by folders, opposed to the files directly\nTL;DR: When developing a module/library in a folder, place an index.js file that exposes the module's internals so every consumer will pass through it. This serves as an 'interface' to your module and eases future changes without breaking the contract\nOtherwise: Changing the internal structure of files or the signature may break the interface with clients\n3.9 Code example\n// Do\nmodule.exports.SMSProvider = require('./SMSProvider');\nmodule.exports.SMSNumberResolver = require('./SMSNumberResolver');\n\n// Avoid\nmodule.exports.SMSProvider = require('./SMSProvider/SMSProvider.js');\nmodule.exports.SMSNumberResolver = require('./SMSNumberResolver/SMSNumberResolver.js');\n\n 3.10 Use the === operator\nTL;DR: Prefer the strict equality operator === over the weaker abstract equality operator ==. == will compare two variables after converting them to a common type. There is no type conversion in ===, and both variables must be of the same type to be equal\nOtherwise: Unequal variables might return true when compared with the == operator\n3.10 Code example\n'' == '0'           // false\n0 == ''             // true\n0 == '0'            // true\n\nfalse == 'false'    // false\nfalse == '0'        // true\n\nfalse == undefined  // false\nfalse == null       // false\nnull == undefined   // true\n\n' \\t\\r\\n ' == 0     // true\nAll statements above will return false if used with ===\n\n 3.11 Use Async Await, avoid callbacks\nTL;DR: Node 8 LTS now has full support for Async-await. This is a new way of dealing with asynchronous code which supersedes callbacks and promises. Async-await is non-blocking, and it makes asynchronous code look synchronous. The best gift you can give to your code is using async-await which provides a much more compact and familiar code syntax like try-catch\nOtherwise: Handling async errors in callback style is probably the fastest way to hell - this style forces to check errors all over, deal with awkward code nesting and makes it difficult to reason about the code flow\n\ud83d\udd17Read more: Guide to async await 1.0\n\n 3.12 Use arrow function expressions (=>)\nTL;DR: Though it's recommended to use async-await and avoid function parameters when dealing with older APIs that accept promises or callbacks - arrow functions make the code structure more compact and keep the lexical context of the root function (i.e. this)\nOtherwise: Longer code (in ES5 functions) is more prone to bugs and cumbersome to read\n\ud83d\udd17 Read more: It\u2019s Time to Embrace Arrow Functions\n\n\u2b06 Return to top\n4. Testing And Overall Quality Practices\n 4.1 At the very least, write API (component) testing\nTL;DR: Most projects just don't have any automated testing due to short timetables or often the 'testing project' ran out of control and was abandoned. For that reason, prioritize and start with API testing which is the easiest way to write and provides more coverage than unit testing (you may even craft API tests without code using tools like Postman. Afterward, should you have more resources and time, continue with advanced test types like unit testing, DB testing, performance testing, etc\nOtherwise: You may spend long days on writing unit tests to find out that you got only 20% system coverage\n\n 4.2 Include 3 parts in each test name\nTL;DR: Make the test speak at the requirements level so it's self explanatory also to QA engineers and developers who are not familiar with the code internals. State in the test name what is being tested (unit under test), under what circumstances and what is the expected result\nOtherwise: A deployment just failed, a test named \u201cAdd product\u201d failed. Does this tell you what exactly is malfunctioning?\n\ud83d\udd17 Read More: Include 3 parts in each test name\n\n 4.3 Structure tests by the AAA pattern\nTL;DR: Structure your tests with 3 well-separated sections: Arrange, Act & Assert (AAA). The first part includes the test setup, then the execution of the unit under test and finally the assertion phase. Following this structure guarantees that the reader spends no brain CPU on understanding the test plan\nOtherwise: Not only you spend long daily hours on understanding the main code, now also what should have been the simple part of the day (testing) stretches your brain\n\ud83d\udd17 Read More: Structure tests by the AAA pattern\n\n 4.4 Detect code issues with a linter\nTL;DR: Use a code linter to check basic quality and detect anti-patterns early. Run it before any test and add it as a pre-commit git-hook to minimize the time needed to review and correct any issue. Also check Section 3 on Code Style Practices\nOtherwise: You may let pass some anti-pattern and possible vulnerable code to your production environment.\n\n 4.5 Avoid global test fixtures and seeds, add data per-test\nTL;DR: To prevent tests coupling and easily reason about the test flow, each test should add and act on its own set of DB rows. Whenever a test needs to pull or assume the existence of some DB data - it must explicitly add that data and avoid mutating any other records\nOtherwise: Consider a scenario where deployment is aborted due to failing tests, team is now going to spend precious investigation time that ends in a sad conclusion: the system works well, the tests however interfere with each other and break the build\n\ud83d\udd17 Read More: Avoid global test fixtures\n\n 4.6 Constantly inspect for vulnerable dependencies\nTL;DR: Even the most reputable dependencies such as Express have known vulnerabilities. This can get easily tamed using community and commercial tools such as \ud83d\udd17 npm audit and \ud83d\udd17 snyk.io that can be invoked from your CI on every build\nOtherwise: Keeping your code clean from vulnerabilities without dedicated tools will require to constantly follow online publications about new threats. Quite tedious\n\n 4.7 Tag your tests\nTL;DR: Different tests must run on different scenarios: quick smoke, IO-less, tests should run when a developer saves or commits a file, full end-to-end tests usually run when a new pull request is submitted, etc. This can be achieved by tagging tests with keywords like #cold #api #sanity so you can grep with your testing harness and invoke the desired subset. For example, this is how you would invoke only the sanity test group with Mocha: mocha --grep 'sanity'\nOtherwise: Running all the tests, including tests that perform dozens of DB queries, any time a developer makes a small change can be extremely slow and keeps developers away from running tests\n\n 4.8 Check your test coverage, it helps to identify wrong test patterns\nTL;DR: Code coverage tools like Istanbul/NYC are great for 3 reasons: it comes for free (no effort is required to benefit this reports), it helps to identify a decrease in testing coverage, and last but not least it highlights testing mismatches: by looking at colored code coverage reports you may notice, for example, code areas that are never tested like catch clauses (meaning that tests only invoke the happy paths and not how the app behaves on errors). Set it to fail builds if the coverage falls under a certain threshold\nOtherwise: There won't be any automated metric telling you when a large portion of your code is not covered by testing\n\n 4.9 Inspect for outdated packages\nTL;DR: Use your preferred tool (e.g. 'npm outdated' or npm-check-updates to detect installed packages which are outdated, inject this check into your CI pipeline and even make a build fail in a severe scenario. For example, a severe scenario might be when an installed package is 5 patch commits behind (e.g. local version is 1.3.1 and repository version is 1.3.8) or it is tagged as deprecated by its author - kill the build and prevent deploying this version\nOtherwise: Your production will run packages that have been explicitly tagged by their author as risky\n\n 4.10 Use production-like env for e2e testing\nTL;DR: End to end (e2e) testing which includes live data used to be the weakest link of the CI process as it depends on multiple heavy services like DB. Use an environment which is as closed to your real production as possible like a-continue\nOtherwise: Without docker-compose teams must maintain a testing DB for each testing environment including developers' machines, keep all those DBs in sync so test results won't vary across environments\n\n 4.11 Refactor regularly using static analysis tools\nTL;DR: Using static analysis tools helps by giving objective ways to improve code quality and keeps your code maintainable. You can add static analysis tools to your CI build to fail when it finds code smells. Its main selling points over plain linting are the ability to inspect quality in the context of multiple files (e.g. detect duplications), perform advanced analysis (e.g. code complexity) and follow the history and progress of code issues. Two examples of tools you can use are Sonarqube (2,600+ stars) and Code Climate (1,500+ stars).\nOtherwise: With poor code quality, bugs and performance will always be an issue that no shiny new library or state of the art features can fix\n\ud83d\udd17 Read More: Refactoring!\n\n 4.12 Carefully choose your CI platform (Jenkins vs CircleCI vs Travis vs Rest of the world)\nTL;DR: Your continuous integration platform (CICD) will host all the quality tools (e.g test, lint) so it should come with a vibrant ecosystem of plugins. Jenkins used to be the default for many projects as it has the biggest community along with a very powerful platform at the price of complex setup that demands a steep learning curve. Nowadays, it has become much easier to set up a CI solution using SaaS tools like CircleCI and others. These tools allow crafting a flexible CI pipeline without the burden of managing the whole infrastructure. Eventually, it's a trade-off between robustness and speed - choose your side carefully\nOtherwise: Choosing some niche vendor might get you blocked once you need some advanced customization. On the other hand, going with Jenkins might burn precious time on infrastructure setup\n\ud83d\udd17 Read More: Choosing CI platform\n\n\u2b06 Return to top\n5. Going To Production Practices\n 5.1. Monitoring\nTL;DR: Monitoring is a game of finding out issues before customers do \u2013 obviously this should be assigned unprecedented importance. The market is overwhelmed with offers thus consider starting with defining the basic metrics you must follow (my suggestions inside), then go over additional fancy features and choose the solution that ticks all boxes. Click \u2018The Gist\u2019 below for an overview of the solutions\nOtherwise: Failure === disappointed customers. Simple\n\ud83d\udd17 Read More: Monitoring!\n\n 5.2. Increase transparency using smart logging\nTL;DR: Logs can be a dumb warehouse of debug statements or the enabler of a beautiful dashboard that tells the story of your app. Plan your logging platform from day 1: how logs are collected, stored and analyzed to ensure that the desired information (e.g. error rate, following an entire transaction through services and servers, etc) can really be extracted\nOtherwise: You end up with a black box that is hard to reason about, then you start re-writing all logging statements to add additional information\n\ud83d\udd17 Read More: Increase transparency using smart logging\n\n 5.3. Delegate anything possible (e.g. gzip, SSL) to a reverse proxy\nTL;DR: Node is awfully bad at doing CPU intensive tasks like gzipping, SSL termination, etc. You should use \u2018real\u2019 middleware services like nginx, HAproxy or cloud vendor services instead\nOtherwise: Your poor single thread will stay busy doing infrastructural tasks instead of dealing with your application core and performance will degrade accordingly\n\ud83d\udd17 Read More: Delegate anything possible (e.g. gzip, SSL) to a reverse proxy\n\n 5.4. Lock dependencies\nTL;DR: Your code must be identical across all environments, but amazingly npm lets dependencies drift across environments by default \u2013 when you install packages at various environments it tries to fetch packages\u2019 latest patch version. Overcome this by using npm config files, .npmrc, that tell each environment to save the exact (not the latest) version of each package. Alternatively, for finer grained control use npm shrinkwrap. *Update: as of NPM5, dependencies are locked by default. The new package manager in town, Yarn, also got us covered by default\nOtherwise: QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code\n\ud83d\udd17 Read More: Lock dependencies\n\n 5.5. Guard process uptime using the right tool\nTL;DR: The process must go on and get restarted upon failures. For simple scenarios, process management tools like PM2 might be enough but in today's \u2018dockerized\u2019 world, cluster management tools should be considered as well\nOtherwise: Running dozens of instances without a clear strategy and too many tools together (cluster management, docker, PM2) might lead to DevOps chaos\n\ud83d\udd17 Read More: Guard process uptime using the right tool\n\n 5.6. Utilize all CPU cores\nTL;DR: At its basic form, a Node app runs on a single CPU core while all others are left idling. It\u2019s your duty to replicate the Node process and utilize all CPUs \u2013 For small-medium apps you may use Node Cluster or PM2. For a larger app consider replicating the process using some Docker cluster (e.g. K8S, ECS) or deployment scripts that are based on Linux init system (e.g. systemd)\nOtherwise: Your app will likely utilize only 25% of its available resources(!) or even less. Note that a typical server has 4 CPU cores or more, naive deployment of Node.js utilizes only 1 (even using PaaS services like AWS beanstalk!)\n\ud83d\udd17 Read More: Utilize all CPU cores\n\n 5.7. Create a \u2018maintenance endpoint\u2019\nTL;DR: Expose a set of system-related information, like memory usage and REPL, etc in a secured API. Although it\u2019s highly recommended to rely on standard and battle-tests tools, some valuable information and operations are easier done using code\nOtherwise: You\u2019ll find that you\u2019re performing many \u201cdiagnostic deploys\u201d \u2013 shipping code to production only to extract some information for diagnostic purposes\n\ud83d\udd17 Read More: Create a \u2018maintenance endpoint\u2019\n\n 5.8. Discover errors and downtime using APM products\nTL;DR: Application monitoring and performance products (a.k.a APM) proactively gauge codebase and API so they can auto-magically go beyond traditional monitoring and measure the overall user-experience across services and tiers. For example, some APM products can highlight a transaction that loads too slow on the end-users side while suggesting the root cause\nOtherwise: You might spend great effort on measuring API performance and downtimes, probably you\u2019ll never be aware which is your slowest code parts under real-world scenario and how these affect the UX\n\ud83d\udd17 Read More: Discover errors and downtime using APM products\n\n 5.9. Make your code production-ready\nTL;DR: Code with the end in mind, plan for production from day 1. This sounds a bit vague so I\u2019ve compiled a few development tips that are closely related to production maintenance (click Gist below)\nOtherwise: A world champion IT/DevOps guy won\u2019t save a system that is badly written\n\ud83d\udd17 Read More: Make your code production-ready\n\n 5.10. Measure and guard the memory usage\nTL;DR: Node.js has controversial relationships with memory: the v8 engine has soft limits on memory usage (1.4GB) and there are known paths to leak memory in Node\u2019s code \u2013 thus watching Node\u2019s process memory is a must. In small apps, you may gauge memory periodically using shell commands but in medium-large apps consider baking your memory watch into a robust monitoring system\nOtherwise: Your process memory might leak a hundred megabytes a day like how it happened at Walmart\n\ud83d\udd17 Read More: Measure and guard the memory usage\n\n 5.11. Get your frontend assets out of Node\nTL;DR: Serve frontend content using dedicated middleware (nginx, S3, CDN) because Node performance really gets hurt when dealing with many static files due to its single-threaded model\nOtherwise: Your single Node thread will be busy streaming hundreds of html/images/angular/react files instead of allocating all its resources for the task it was born for \u2013 serving dynamic content\n\ud83d\udd17 Read More: Get your frontend assets out of Node\n\n 5.12. Be stateless, kill your servers almost every day\nTL;DR: Store any type of data (e.g. user sessions, cache, uploaded files) within external data stores. Consider \u2018killing\u2019 your servers periodically or use \u2018serverless\u2019 platform (e.g. AWS Lambda) that explicitly enforces a stateless behavior\nOtherwise: Failure at a given server will result in application downtime instead of just killing a faulty machine. Moreover, scaling-out elasticity will get more challenging due to the reliance on a specific server\n\ud83d\udd17 Read More: Be stateless, kill your Servers almost every day\n\n 5.13. Use tools that automatically detect vulnerabilities\nTL;DR: Even the most reputable dependencies such as Express have known vulnerabilities (from time to time) that can put a system at risk. This can be easily tamed using community and commercial tools that constantly check for vulnerabilities and warn (locally or at GitHub), some can even patch them immediately\nOtherwise: Keeping your code clean from vulnerabilities without dedicated tools will require you to constantly follow online publications about new threats. Quite tedious\n\ud83d\udd17 Read More: Use tools that automatically detect vulnerabilities\n\n 5.14. Assign a transaction id to each log statement\nTL;DR: Assign the same identifier, transaction-id: {some value}, to each log entry within a single request. Then when inspecting errors in logs, easily conclude what happened before and after. Unfortunately, this is not easy to achieve in Node due to its async nature, see code examples inside\nOtherwise: Looking at a production error log without the context \u2013 what happened before \u2013 makes it much harder and slower to reason about the issue\n\ud83d\udd17 Read More: Assign \u2018TransactionId\u2019 to each log statement\n\n 5.15. Set NODE_ENV=production\nTL;DR: Set the environment variable NODE_ENV to \u2018production\u2019 or \u2018development\u2019 to flag whether production optimizations should get activated \u2013 many npm packages determine the current environment and optimize their code for production\nOtherwise: Omitting this simple property might greatly degrade performance. For example, when using Express for server-side rendering omitting NODE_ENV makes it slower by a factor of three!\n\ud83d\udd17 Read More: Set NODE_ENV=production\n\n 5.16. Design automated, atomic and zero-downtime deployments\nTL;DR: Research shows that teams who perform many deployments lower the probability of severe production issues. Fast and automated deployments that don\u2019t require risky manual steps and service downtime significantly improve the deployment process. You should probably achieve this using Docker combined with CI tools as they became the industry standard for streamlined deployment\nOtherwise: Long deployments -> production downtime & human-related error -> team unconfident in making deployment -> fewer deployments and features\n\n 5.17. Use an LTS release of Node.js\nTL;DR: Ensure you are using an LTS version of Node.js to receive critical bug fixes, security updates and performance improvements\nOtherwise: Newly discovered bugs or vulnerabilities could be used to exploit an application running in production, and your application may become unsupported by various modules and harder to maintain\n\ud83d\udd17 Read More: Use an LTS release of Node.js\n\n 5.18. Don't route logs within the app\nTL;DR: Log destinations should not be hard-coded by developers within the application code, but instead should be defined by the execution environment the application runs in. Developers should write logs to stdout using a logger utility and then let the execution environment (container, server, etc.) pipe the stdout stream to the appropriate destination (i.e. Splunk, Graylog, ElasticSearch, etc.).\nOtherwise: Application handling log routing === hard to scale, loss of logs, poor separation of concerns\n\ud83d\udd17 Read More: Log Routing\n\n\u2b06 Return to top\n6. Security Best Practices\n\n\n\n 6.1. Embrace linter security rules\n \nTL;DR: Make use of security-related linter plugins such as eslint-plugin-security to catch security vulnerabilities and issues as early as possible, preferably while they're being coded. This can help catching security weaknesses like using eval, invoking a child process or importing a module with a string literal (e.g. user input). Click 'Read more' below to see code examples that will get caught by a security linter\nOtherwise: What could have been a straightforward security weakness during development becomes a major issue in production. Also, the project may not follow consistent code security practices, leading to vulnerabilities being introduced, or sensitive secrets committed into remote repositories\n\ud83d\udd17 Read More: Lint rules\n\n 6.2. Limit concurrent requests using a middleware\n\nTL;DR: DOS attacks are very popular and relatively easy to conduct. Implement rate limiting using an external service such as cloud load balancers, cloud firewalls, nginx, rate-limiter-flexible package, or (for smaller and less critical apps) a rate-limiting middleware (e.g. express-rate-limit)\nOtherwise: An application could be subject to an attack resulting in a denial of service where real users receive a degraded or unavailable service.\n\ud83d\udd17 Read More: Implement rate limiting\n\n 6.3 Extract secrets from config files or use packages to encrypt them\n \nTL;DR: Never store plain-text secrets in configuration files or source code. Instead, make use of secret-management systems like Vault products, Kubernetes/Docker Secrets, or using environment variables. As a last resort, secrets stored in source control must be encrypted and managed (rolling keys, expiring, auditing, etc). Make use of pre-commit/push hooks to prevent committing secrets accidentally\nOtherwise: Source control, even for private repositories, can mistakenly be made public, at which point all secrets are exposed. Access to source control for an external party will inadvertently provide access to related systems (databases, apis, services, etc).\n\ud83d\udd17 Read More: Secret management\n\n 6.4. Prevent query injection vulnerabilities with ORM/ODM libraries\n\nTL;DR: To prevent SQL/NoSQL injection and other malicious attacks, always make use of an ORM/ODM or a database library that escapes data or supports named or indexed parameterized queries, and takes care of validating user input for expected types. Never just use JavaScript template strings or string concatenation to inject values into queries as this opens your application to a wide spectrum of vulnerabilities. All the reputable Node.js data access libraries (e.g. Sequelize, Knex, mongoose) have built-in protection against injection attacks.\nOtherwise: Unvalidated or unsanitized user input could lead to operator injection when working with MongoDB for NoSQL, and not using a proper sanitization system or ORM will easily allow SQL injection attacks, creating a giant vulnerability.\n\ud83d\udd17 Read More: Query injection prevention using ORM/ODM libraries\n\n 6.5. Collection of generic security best practices\nTL;DR: This is a collection of security advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.\n\ud83d\udd17 Read More: Common security best practices\n\n 6.6. Adjust the HTTP response headers for enhanced security\n\nTL;DR: Your application should be using secure headers to prevent attackers from using common attacks like cross-site scripting (XSS), clickjacking and other malicious attacks. These can be configured easily using modules like helmet.\nOtherwise: Attackers could perform direct attacks on your application's users, leading to huge security vulnerabilities\n\ud83d\udd17 Read More: Using secure headers in your application\n\n 6.7. Constantly and automatically inspect for vulnerable dependencies\n\nTL;DR: With the npm ecosystem it is common to have many dependencies for a project. Dependencies should always be kept in check as new vulnerabilities are found. Use tools like npm audit or snyk to track, monitor and patch vulnerable dependencies. Integrate these tools with your CI setup so you catch a vulnerable dependency before it makes it to production.\nOtherwise: An attacker could detect your web framework and attack all its known vulnerabilities.\n\ud83d\udd17 Read More: Dependency security\n\n 6.8. Avoid using the Node.js crypto library for handling passwords, use Bcrypt\n\nTL;DR: Passwords or secrets (API keys) should be stored using a secure hash + salt function like bcrypt, that should be a preferred choice over its JavaScript implementation due to performance and security reasons.\nOtherwise: Passwords or secrets that are persisted without using a secure function are vulnerable to brute forcing and dictionary attacks that will lead to their disclosure eventually.\n\ud83d\udd17 Read More: Use Bcrypt\n\n 6.9. Escape HTML, JS and CSS output\n\nTL;DR: Untrusted data that is sent down to the browser might get executed instead of just being displayed, this is commonly referred as a cross-site-scripting (XSS) attack. Mitigate this by using dedicated libraries that explicitly mark the data as pure content that should never get executed (i.e. encoding, escaping)\nOtherwise: An attacker might store malicious JavaScript code in your DB which will then be sent as-is to the poor clients\n\ud83d\udd17 Read More: Escape output\n\n 6.10. Validate incoming JSON schemas\n \nTL;DR: Validate the incoming requests' body payload and ensure it meets expectations, fail fast if it doesn't. To avoid tedious validation coding within each route you may use lightweight JSON-based validation schemas such as jsonschema or joi\nOtherwise: Your generosity and permissive approach greatly increases the attack surface and encourages the attacker to try out many inputs until they find some combination to crash the application\n\ud83d\udd17 Read More: Validate incoming JSON schemas\n\n 6.11. Support blacklisting JWTs\n\nTL;DR: When using JSON Web Tokens (for example, with Passport.js), by default there's no mechanism to revoke access from issued tokens. Once you discover some malicious user activity, there's no way to stop them from accessing the system as long as they hold a valid token. Mitigate this by implementing a blacklist of untrusted tokens that are validated on each request.\nOtherwise: Expired, or misplaced tokens could be used maliciously by a third party to access an application and impersonate the owner of the token.\n\ud83d\udd17 Read More: Blacklist JSON Web Tokens\n\n 6.12. Prevent brute-force attacks against authorization\n\nTL;DR: A simple and powerful technique is to limit authorization attempts using two metrics:\n\nThe first is number of consecutive failed attempts by the same user unique ID/name and IP address.\nThe second is number of failed attempts from an IP address over some long period of time. For example, block an IP address if it makes 100 failed attempts in one day.\n\nOtherwise: An attacker can issue unlimited automated password attempts to gain access to privileged accounts on an application\n\ud83d\udd17 Read More: Login rate limiting\n\n 6.13. Run Node.js as non-root user\n\nTL;DR: There is a common scenario where Node.js runs as a root user with unlimited permissions. For example, this is the default behaviour in Docker containers. It's recommended to create a non-root user and either bake it into the Docker image (examples given below) or run the process on this user's behalf by invoking the container with the flag \"-u username\"\nOtherwise: An attacker who manages to run a script on the server gets unlimited power over the local machine (e.g. change iptable and re-route traffic to his server)\n\ud83d\udd17 Read More: Run Node.js as non-root user\n\n 6.14. Limit payload size using a reverse-proxy or a middleware\n \nTL;DR: The bigger the body payload is, the harder your single thread works in processing it. This is an opportunity for attackers to bring servers to their knees without tremendous amount of requests (DOS/DDOS attacks). Mitigate this limiting the body size of incoming requests on the edge (e.g. firewall, ELB) or by configuring express body parser to accept only small-size payloads\nOtherwise: Your application will have to deal with large requests, unable to process the other important work it has to accomplish, leading to performance implications and vulnerability towards DOS attacks\n\ud83d\udd17 Read More: Limit payload size\n\n 6.15. Avoid JavaScript eval statements\n  \nTL;DR: eval is evil as it allows executing custom JavaScript code during run time. This is not just a performance concern but also an important security concern due to malicious JavaScript code that may be sourced from user input. Another language feature that should be avoided is new Function constructor. setTimeout and setInterval should never be passed dynamic JavaScript code either.\nOtherwise: Malicious JavaScript code finds a way into text passed into eval or other real-time evaluating JavaScript language functions, and will gain complete access to JavaScript permissions on the page. This vulnerability is often manifested as an XSS attack.\n\ud83d\udd17 Read More: Avoid JavaScript eval statements\n\n 6.16. Prevent evil RegEx from overloading your single thread execution\n\nTL;DR: Regular Expressions, while being handy, pose a real threat to JavaScript applications at large, and the Node.js platform in particular. A user input for text to match might require an outstanding amount of CPU cycles to process. RegEx processing might be inefficient to an extent that a single request that validates 10 words can block the entire event loop for 6 seconds and set the CPU on \ud83d\udd25. For that reason, prefer third-party validation packages like validator.js instead of writing your own Regex patterns, or make use of safe-regex to detect vulnerable regex patterns\nOtherwise: Poorly written regexes could be susceptible to Regular Expression DoS attacks that will block the event loop completely. For example, the popular moment package was found vulnerable with malicious RegEx usage in November of 2017\n\ud83d\udd17 Read More: Prevent malicious RegEx\n\n 6.17. Avoid module loading using a variable\n  \nTL;DR: Avoid requiring/importing another file with a path that was given as parameter due to the concern that it could have originated from user input. This rule can be extended for accessing files in general (i.e. fs.readFile()) or other sensitive resource access with dynamic variables originating from user input. Eslint-plugin-security linter can catch such patterns and warn early enough\nOtherwise: Malicious user input could find its way to a parameter that is used to require tampered files, for example, a previously uploaded file on the filesystem, or access already existing system files.\n\ud83d\udd17 Read More: Safe module loading\n\n 6.18. Run unsafe code in a sandbox\n  \nTL;DR: When tasked to run external code that is given at run-time (e.g. plugin), use any sort of 'sandbox' execution environment that isolates and guards the main code against the plugin. This can be achieved using a dedicated process (e.g. cluster.fork()), serverless environment or dedicated npm packages that act as a sandbox\nOtherwise: A plugin can attack through an endless variety of options like infinite loops, memory overloading, and access to sensitive process environment variables\n\ud83d\udd17 Read More: Run unsafe code in a sandbox\n\n 6.19. Take extra care when working with child processes\n  \nTL;DR: Avoid using child processes when possible and validate and sanitize input to mitigate shell injection attacks if you still have to. Prefer using child_process.execFile which by definition will only execute a single command with a set of attributes and will not allow shell parameter expansion.\nOtherwise: Naive use of child processes could result in remote command execution or shell injection attacks due to malicious user input passed to an unsanitized system command.\n\ud83d\udd17 Read More: Be cautious when working with child processes\n\n 6.20. Hide error details from clients\n\nTL;DR: An integrated express error handler hides the error details by default. However, great are the chances that you implement your own error handling logic with custom Error objects (considered by many as a best practice). If you do so, ensure not to return the entire Error object to the client, which might contain some sensitive application details\nOtherwise: Sensitive application details such as server file paths, third party modules in use, and other internal workflows of the application which could be exploited by an attacker, could be leaked from information found in a stack trace\n\ud83d\udd17 Read More: Hide error details from client\n\n 6.21. Configure 2FA for npm or Yarn\n\nTL;DR: Any step in the development chain should be protected with MFA (multi-factor authentication), npm/Yarn are a sweet opportunity for attackers who can get their hands on some developer's password. Using developer credentials, attackers can inject malicious code into libraries that are widely installed across projects and services. Maybe even across the web if published in public. Enabling 2-factor-authentication in npm leaves almost zero chances for attackers to alter your package code.\nOtherwise: Have you heard about the eslint developer who's password was hijacked?\n\n 6.22. Modify session middleware settings\n\nTL;DR: Each web framework and technology has its known weaknesses\u200a-\u200atelling an attacker which web framework we use is a great help for them. Using the default settings for session middlewares can expose your app to module- and framework-specific hijacking attacks in a similar way to the X-Powered-By header. Try hiding anything that identifies and reveals your tech stack (E.g. Node.js, express)\nOtherwise: Cookies could be sent over insecure connections, and an attacker might use session identification to identify the underlying framework of the web application, as well as module-specific vulnerabilities\n\ud83d\udd17 Read More: Cookie and session security\n\n 6.23. Avoid DOS attacks by explicitly setting when a process should crash\n\nTL;DR: The Node process will crash when errors are not handled. Many best practices even recommend to exit even though an error was caught and got handled. Express, for example, will crash on any asynchronous error\u200a-\u200aunless you wrap routes with a catch clause. This opens a very sweet attack spot for attackers who recognize what input makes the process crash and repeatedly send the same request. There's no instant remedy for this but a few techniques can mitigate the pain: Alert with critical severity anytime a process crashes due to an unhandled error, validate the input and avoid crashing the process due to invalid user input, wrap all routes with a catch and consider not to crash when an error originated within a request (as opposed to what happens globally)\nOtherwise: This is just an educated guess: given many Node.js applications, if we try passing an empty JSON body to all POST requests\u200a-\u200aa handful of applications will crash. At that point, we can just repeat sending the same request to take down the applications with ease\n\n 6.24. Prevent unsafe redirects\n\nTL;DR: Redirects that do not validate user input can enable attackers to launch phishing scams, steal user credentials, and perform other malicious actions.\nOtherwise: If an attacker discovers that you are not validating external, user-supplied input, they may exploit this vulnerability by posting specially-crafted links on forums, social media, and other public places to get users to click it.\n\ud83d\udd17 Read More: Prevent unsafe redirects\n\n 6.25. Avoid publishing secrets to the npm registry\n\nTL;DR: Precautions should be taken to avoid the risk of accidentally publishing secrets to public npm registries. An .npmignore file can be used to blacklist specific files or folders, or the files array in package.json can act as a whitelist.\nOtherwise: Your project's API keys, passwords or other secrets are open to be abused by anyone who comes across them, which may result in financial loss, impersonation, and other risks.\n\ud83d\udd17 Read More: Avoid publishing secrets\n\n\u2b06 Return to top\n7. Draft: Performance Best Practices\nOur contributors are working on this section. Would you like to join?\n\n 7.1. Don't block the event loop\nTL;DR: Avoid CPU intensive tasks as they will block the mostly single-threaded Event Loop and offload those to a dedicated thread, process or even a different technology based on the context.\nOtherwise: As the Event Loop is blocked, Node.js will be unable to handle other request thus causing delays for concurrent users. 3000 users are waiting for a response, the content is ready to be served, but one single request blocks the server from dispatching the results back\n\ud83d\udd17 Read More: Do not block the event loop\n\n 7.2. Prefer native JS methods over user-land utils like Lodash\nTL;DR: It's often more penalising to use utility libraries like lodash and underscore over native methods as it leads to unneeded dependencies and slower performance.\nBear in mind that with the introduction of the new V8 engine alongside the new ES standards, native methods were improved in such a way that it's now about 50% more performant than utility libraries.\nOtherwise: You'll have to maintain less performant projects where you could have simply used what was already available or dealt with a few more lines in exchange of a few more files.\n\ud83d\udd17 Read More: Native over user land utils\n\nMilestones\nTo maintain this guide and keep it up to date, we are constantly updating and improving the guidelines and best practices with the help of the community. You can follow our milestones and join the working groups if you want to contribute to this project\n\nTranslations\nAll translations are contributed by the community. We will be happy to get any help with either completed, ongoing or new translations!\nCompleted translations\n\n Brazilian Portuguese - Courtesy of Marcelo Melo\n Chinese - Courtesy of Matt Jin\n Russian - Courtesy of Alex Ivanov\n\nTranslations in progress\n\n French (Discussion)\n Hebrew (Discussion)\n Korean - Courtesy of Sangbeom Han (Discussion)\n Spanish (Discussion)\n Turkish (Discussion)\n\n\nSteering Committee\nMeet the steering committee members - the people who work together to provide guidance and future direction to the project. In addition, each member of the committee leads a project tracked under our Github projects.\n\nYoni Goldberg\n\n\nIndependent Node.js consultant who works with customers in USA, Europe, and Israel on building large scale scalable Node applications. Many of the best practices above were first published at goldbergyoni.com. Reach Yoni at @goldbergyoni or me@goldbergyoni.com\n\n\nBruno Scheufler\n\n\ud83d\udcbb full-stack web engineer, Node.js & GraphQL enthusiast\n\n\nKyle Martin\n\n\nFull Stack Developer & Site Reliability Engineer based in New Zealand, interested in web application security, and architecting and building Node.js applications to perform at global scale.\n\n\nSagir Khan\n\n\n\nDeep specialist in JavaScript and its ecosystem \u2014 React, Node.js, MongoDB, pretty much anything that involves using JavaScript/JSON in any layer of the system \u2014 building products using the web platform for the world\u2019s most recognized brands. Individual Member of the Node.js Foundation, collaborating on the Community Committee's Website Redesign Initiative.\n\nCollaborators\nThank you to all our collaborators! \ud83d\ude4f\nOur collaborators are members who are contributing to the repository on a regular basis, through suggesting new best practices, triaging issues, reviewing pull requests and more. If you are interested in helping us guide thousands of people to craft better Node.js applications, please read our contributor guidelines \ud83c\udf89\n\n\n\n\n\n\n\n\n\nIdo Richter (Founder)\nKeith Holliday\n\n\n\nPast collaborators\n\n\n\n\n\n\n\n\nRefael Ackermann\n\n\n\n\nThank You Notes\nWe appreciate any contribution, from a single word fix to a new best practice. View our contributors and contributing documentation here!\n\n\n"}, {"repo": "FreeCodeCampChina/freecodecamp.cn", "language": "CSS", "readme": "\n\n\u626b\u7801\u52a0\u5165 FCC-China \u793e\u7fa4\nFreeCodeCampChina's open source codebase and curriculum\nfreeCodeCamp is a friendly open source community where you learn to code and help nonprofits.\nWe help our campers build job-worthy portfolios of real apps used by real people, while helping nonprofits.\nYou start by working through our self-paced, browser-based full stack JavaScript curriculum.\nBy working through our curriculum, you can earn four certifications:\n1. Front End Certification\nThe first section will teach you the basics of how webpages work and also introduce you to JavaScript programming.\nSkills you'll practice include HTML, CSS, JavaScript, jQuery and Bootstrap.\nTo earn this certification, you'll build 10 front-end projects and implement many JavaScript algorithms.\n2. Data Visualization Certification\nThe second section builds upon the first and introduces you to more advanced topics such as Sass, React and D3.\nTo earn this certification, you'll build 5 React-apps and 5 Data visualization apps using D3.js.\n3. Back End Certification\nThe third section introduces you to back end development using Node.js, Express, and MongoDB. It also teaches you about the important concept of source control using Git.\nTo earn this certification, you'll build 5 APIs and 5 full stack apps.\nWe will accept solutions implemented in any programming language, as long as both a live demo and the source code are publicly accessible.\n4. Full Stack Certification\nThe fourth section is where you'll get real-world experience by working on projects for nonprofits.\nWe'll pair you with another camper, an agile project manager, and a stakeholder from a nonprofit organization. Together, you'll plan, build and maintain apps that help that nonprofit carry out its mission more effectively.\nFor this certification, you'll work on two projects from scratch and then maintain/upgrade two existing projects.\n\nThis code is running live at freeCodeCamp.cn. We also have Gitter chat rooms, a Medium publication, an interactive forum, a wiki knowledgebase, and even a YouTube channel.\nJoin our community here.\nFound a bug?\nDo not file an issue until you have followed these steps:\n\nRead the Help I've Found a Bug article and follow its instructions.\nAsk for confirmation in the appropriate Help Room.\nPlease do not open an issue without a 3rd party confirmation of your problem.\n\nContributing\nWe welcome pull requests from freeCodeCamp campers (our students) and seasoned JavaScript developers alike! Please follow these steps to contribute.\nLicense\nCopyright (c) 2017 freeCodeCamp.\nThe content of this repository bound by the following LICENSE(S)\n\nThe computer software is licensed under the BSD-3-Clause.\nThe curricular content as in the ./seed/challenges or subdirectories and our wiki are licensed under the CC-BY-SA-4.0\nThe translation of this website follows the license of CC-BY-NC-4.0\uff0cDo not use (it) for commercial/business purpose. \n\n\n"}, {"repo": "thedaviddias/Front-End-Checklist", "language": "JavaScript", "readme": "\n\n\n\n\n\n\u00a0 Front-End Checklist\n\u00a0 \n\nThe Front-End Checklist is an exhaustive list of all elements you need to have / to test before launching your website / HTML page to production.\n\n\u00a0 \n\u00a0\u00a0\u00a0 \n\u00a0 \n\u00a0 \u00a0 \n\u00a0\u00a0\u00a0 \n\u00a0 \n\u00a0 \n\u00a0\u00a0\u00a0 \n\u00a0 \n\u00a0 \u00a0 \u00a0 \n\u00a0\u00a0\u00a0 \n\n\u00a0 \u00a0 \n\u00a0\u00a0\u00a0 \n\u00a0 \n\n\n\u00a0 How To Use \u2022 Contributing \u2022 Website \u2022 Product Hunt\n\n\nOther Checklists:\n\n\u00a0 \ud83c\udfae Front-End Performance Checklist \u2022 \ud83d\udc8e Front-End Design Checklist\n\nIt is based on Front-End developers' years of experience, with the additions coming from some other open-source checklists.\nTable of Contents\n\nHead\nHTML\nWebfonts\nCSS\nImages\nJavaScript\nSecurity\nPerformance\nAccessibility\nSEO\nTranslations\n\n\nHow to use?\nAll items in the Front-End Checklist are required for the majority of the projects, but some elements can be omitted or are not essential (in the case of an administration web app, you may not need RSS feed for example). We choose to use 3 levels of flexibility:\n\n means that the item is recommended but can be omitted in some particular situations.\n means that the item is highly recommended and can eventually be omitted in some really particular cases. Some elements, if omitted, can have bad repercussions in terms of performance or SEO.\n means that the item can't be omitted by any reason. You may cause a dysfunction in your page or have accessibility or SEO issues. The testing priority needs to be on these elements first.\n\nSome resources possess an emoticon to help you understand which type of content / help you may find on the checklist:\n\n\ud83d\udcd6: documentation or article\n\ud83d\udee0: online tool / testing tool\n\ud83d\udcf9: media or video content\n\n\nYou can contribute to the Front-End Checklist App reading the README_APP file which explain everything about the project.\n\n\nHead\n\nNotes: You can find a list of everything that could be found in the <head> of an HTML document.\n\nMeta tag\n\n Doctype:  The Doctype is HTML5 and is at the top of all your HTML pages.\n\n<!doctype html> <!-- HTML5 -->\n\n\n\ud83d\udcd6 Determining the character encoding - HTML5 W3C\n\n\nThe next 2 meta tags (Charset and Viewport) need to come first in the head.\n\n Charset:  The charset (UTF-8) is declared correctly.\n\n<!-- Set character encoding for the document -->\n<meta charset=\"utf-8\">\n\n Viewport:  The viewport is declared correctly.\n\n<!-- Viewport for responsive web design -->\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n\n Title:  A title is used on all pages (SEO: Google calculates the pixel width of the characters used in the title, and it cuts off between 472 and 482 pixels. The average character limit would be around 55-characters).\n\n<!-- Document Title -->\n<title>Page Title less than 55 characters</title>\n\n\n\ud83d\udcd6 Title - HTML - MDN\n\ud83d\udee0 SERP Snippet Generator\n\n\n\n Description:  A meta description is provided, it is unique and doesn't possess more than 150 characters.\n\n<!-- Meta Description -->\n<meta name=\"description\" content=\"Description of the page less than 150 characters\">\n\n\n\ud83d\udcd6 Meta Description - HTML - MDN\n\n\n\n Favicons:  Each favicon has been created and displays correctly. If you have only a favicon.ico, put it at the root of your site. Normally you won't need to use any markup. However, it's still good practice to link to it using the example below. Today, PNG format is recommended over .ico format (dimensions: 32x32px).\n\n<!-- Standard favicon -->\n<link rel=\"icon\" type=\"image/x-icon\" href=\"https://example.com/favicon.ico\">\n<!-- Recommended favicon format -->\n<link rel=\"icon\" type=\"image/png\" href=\"https://example.com/favicon.png\">\n\n\n\ud83d\udee0 Favicon Generator\n\ud83d\udee0 RealFaviconGenerator\n\ud83d\udcd6 Favicon Cheat Sheet\n\ud83d\udcd6 Favicons, Touch Icons, Tile Icons, etc. Which Do You Need? - CSS Tricks\n\ud83d\udcd6 PNG favicons - caniuse\n\n\n\n Apple Web App Meta:  Apple meta-tags are present.\n\n<!-- Apple Touch Icon (at least 200x200px) -->\n<link rel=\"apple-touch-icon\" href=\"/custom-icon.png\">\n\n<!-- To run web application in full-screen -->\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n\n<!-- Status Bar Style (see Supported Meta Tags below for available values) -->\n<!-- Has no effect unless you have the previous meta tag -->\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\n\n\n\ud83d\udcd6 Configuring Web Applications\n\ud83d\udcd6 Supported Meta Tags\n\n\n\n Windows Tiles:  Windows tiles are present and linked.\n\n<!-- Microsoft Tiles -->\n<meta name=\"msapplication-config\" content=\"browserconfig.xml\" />\nMinimum required xml markup for the browserconfig.xml file is as follows:\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<browserconfig>\n   <msapplication>\n     <tile>\n        <square70x70logo src=\"small.png\"/>\n        <square150x150logo src=\"medium.png\"/>\n        <wide310x150logo src=\"wide.png\"/>\n        <square310x310logo src=\"large.png\"/>\n     </tile>\n   </msapplication>\n</browserconfig>\n\n\n\ud83d\udcd6 Browser configuration schema reference\n\n\n\n Canonical:  Use rel=\"canonical\" to avoid duplicate content.\n\n<!-- Helps prevent duplicate content issues -->\n<link rel=\"canonical\" href=\"http://example.com/2017/09/a-new-article-to-read.html\">\n\n\n\ud83d\udcd6 Use canonical URLs - Search Console Help - Google Support\n\ud83d\udcd6 5 common mistakes with rel=canonical - Google Webmaster Blog\n\n\nHTML tags\n\n Language attribute:  The lang attribute of your website is specified and related to the language of the current page.\n\n<html lang=\"en\">\n\n Direction attribute:  The direction of lecture is specified on the html tag (It can be used on another HTML tag).\n\n<html dir=\"rtl\">\n\n\n\ud83d\udcd6 dir - HTML - MDN\n\n\n\n Alternate language:  The language tag of your website is specified and related to the language of the current page.\n\n<link rel=\"alternate\" href=\"https://es.example.com/\" hreflang=\"es\">\n\n Conditional comments:  Conditional comments are present for IE if needed.\n\n\n\n\ud83d\udcd6 About conditional comments (Internet Explorer) - MSDN - Microsoft\n\n\n\n\n RSS feed:  If your project is a blog or has articles, an RSS link was provided.\n\n\n CSS Critical:  The CSS critical (or \"above the fold\") collects all the CSS used to render the visible portion of the page. It is embedded before your principal CSS call and between <style></style> in a single line (minified).\n\n\n\n\n\ud83d\udee0 Critical by Addy Osmani on GitHub automates this.\n\n\n\n CSS order:  All CSS files are loaded before any JavaScript files in the <head>. (Except the case where sometimes JS files are loaded asynchronously on top of your page).\n\nSocial meta\nVisualize and generate automatically our social meta tags with Meta Tags\nFacebook OG and Twitter Cards are, for any website, highly recommended. The other social media tags can be considered if you target a particular presence on those and want to ensure the display.\n\n Facebook Open Graph:  All Facebook Open Graph (OG) are tested and no one is missing or with a false information. Images need to be at least 600 x 315 pixels, although 1200 x 630 pixels is recommended.\n\n\nNotes: Using og:image:width and og:image:height will specify the image dimensions to the crawler so that it can render the image immediately without having to asynchronously download and process it.\n\n<meta property=\"og:type\" content=\"website\">\n<meta property=\"og:url\" content=\"https://example.com/page.html\">\n<meta property=\"og:title\" content=\"Content Title\">\n<meta property=\"og:image\" content=\"https://example.com/image.jpg\">\n<meta property=\"og:description\" content=\"Description Here\">\n<meta property=\"og:site_name\" content=\"Site Name\">\n<meta property=\"og:locale\" content=\"en_US\">\n<!-- Next tags are optional but recommended -->\n<meta property=\"og:image:width\" content=\"1200\">\n<meta property=\"og:image:height\" content=\"630\">\n\n\n\ud83d\udcd6 A Guide to Sharing for Webmasters\n\ud83d\udcd6 Best Practices - Sharing\n\ud83d\udee0 Test your page with the Facebook OG testing\n\n\n\n Twitter Card: \n\n<meta name=\"twitter:card\" content=\"summary\">\n<meta name=\"twitter:site\" content=\"@site_account\">\n<meta name=\"twitter:creator\" content=\"@individual_account\">\n<meta name=\"twitter:url\" content=\"https://example.com/page.html\">\n<meta name=\"twitter:title\" content=\"Content Title\">\n<meta name=\"twitter:description\" content=\"Content description less than 200 characters\">\n<meta name=\"twitter:image\" content=\"https://example.com/image.jpg\">\n\n\n\ud83d\udcd6 Getting started with cards \u2014 Twitter Developers\n\ud83d\udee0 Test your page with the Twitter card validator\n\n\n\u2b06 back to top\n\nHTML\nBest practices\n\n HTML5 Semantic Elements:  HTML5 Semantic Elements are used appropriately (header, section, footer, main...).\n\n\n\n\ud83d\udcd6 HTML Reference\n\n\n\n\n Error pages:  Error 404 page and 5xx exist. Remember that the 5xx error pages need to have their CSS integrated (no external call on the current server).\n\n\n Noopener:  In case you are using external links with target=\"_blank\", your link should have a rel=\"noopener\" attribute to prevent tab nabbing. If you need to support older versions of Firefox, use rel=\"noopener noreferrer\".\n\n\n\n\n\ud83d\udcd6 About rel=noopener\n\n\n\n Clean up comments:  Unnecessary code needs to be removed before sending the page to production.\n\nHTML testing\n\n W3C compliant:  All pages need to be tested with the W3C validator to identify possible issues in the HTML code.\n\n\n\n\ud83d\udee0 W3C validator\n\n\n\n HTML Lint:  I use tools to help me analyze any issues I could have on my HTML code.\n\n\n\n\ud83d\udee0 Dirty markup\n\n\n\n\n\ud83d\udee0 webhint\n\n\n\n Link checker:  There are no broken links in my page, verify that you don't have any 404 error.\n\n\n\n\ud83d\udee0 W3C Link Checker\n\n\n\n Adblockers test:  Your website shows your content correctly with adblockers enabled (You can provide a message encouraging people to disable their adblocker).\n\n\n\n\ud83d\udcd6 Use AdBlocking in your Dev Environment\n\n\n\u2b06 back to top\n\nWebfonts\n\nNotes: Using webfonts may cause Flash Of Unstyled Text/Flash Of Invisible Text - consider having fallback fonts and/or utilizing webfont loaders to control behavior.\n\n\ud83d\udcd6 Google Technical considerations about webfonts\n\n\n\n Webfont format:  WOFF, WOFF2 and TTF are supported by all modern browsers.\n\n\n\n\ud83d\udcd6 WOFF - Web Open Font Format - Caniuse.\n\ud83d\udcd6 WOFF 2.0 - Web Open Font Format - Caniuse.\n\ud83d\udcd6 TTF/OTF - TrueType and OpenType font support\n\ud83d\udcd6 Using @font-face - CSS-Tricks\n\n\n\n\n Webfont size:  Webfont sizes don't exceed 2 MB (all variants included).\n\n\n Webfont loader:  Control loading behavior with a webfont loader\n\n\n\n\n\ud83d\udee0 Typekit Web Font Loader\n\n\n\u2b06 back to top\n\nCSS\n\nNotes: Take a look at CSS guidelines and Sass Guidelines followed by most  Front-End developers. If you have a doubt about CSS properties, you can visit CSS Reference. There is also a short Code Guide for consistency.\n\n\n Responsive Web Design:  The website is using responsive web design.\n CSS Print:  A print stylesheet is provided and is correct on each page.\n Preprocessors:  Your project is using a CSS preprocessor (e.g Sass, Less, Stylus).\n Unique ID:  If IDs are used, they are unique to a page.\n Reset CSS:  A CSS reset (reset, normalize or reboot) is used and up to date. (If you are using a CSS Framework like Bootstrap or Foundation, a Normalize is already included into it.)\n\n\n\n\ud83d\udcd6 Reset.css\n\ud83d\udcd6 Normalize.css\n\ud83d\udcd6 Reboot\n\n\n\n JS prefix:  All classes (or id- used in JavaScript files) begin with js- and are not styled into the CSS files.\n\n<div id=\"js-slider\" class=\"my-slider\">\n<!-- Or -->\n<div id=\"id-used-by-cms\" class=\"js-slider my-slider\">\n\n embedded or inline CSS:  Avoid at all cost embedding CSS in <style> tags or using inline CSS: only use for valid reasons (e.g. background-image for slider, critical CSS).\n Vendor prefixes:  CSS vendor prefixes are used and are generated accordingly with your browser support compatibility.\n\n\n\n\ud83d\udee0 Autoprefixer CSS online\n\n\nPerformance\n\n Concatenation:  CSS files are concatenated in a single file (Not for HTTP/2).\n Minification:  All CSS files are minified.\n Non-blocking:  CSS files need to be non-blocking to prevent the DOM from taking time to load.\n\n\n\n\ud83d\udcd6 loadCSS by filament group\n\ud83d\udcd6 Example of preload CSS using loadCSS\n\n\n\n Unused CSS:  Remove unused CSS.\n\n\n\n\ud83d\udee0 UnCSS Online\n\ud83d\udee0 PurifyCSS\n\ud83d\udee0 PurgeCSS\n\ud83d\udee0 Chrome DevTools Coverage\n\n\nCSS testing\n\n Stylelint:  All CSS or SCSS files are without any errors.\n\n\n\n\ud83d\udee0 stylelint, a CSS linter\n\ud83d\udcd6 Sass guidelines\n\n\n\n\n Responsive web design:  All pages were tested at the following breakpoints: 320px, 768px, 1024px (can be more / different according to your analytics).\n\n\n CSS Validator:  The CSS was tested and pertinent errors were corrected.\n\n\n\n\n\ud83d\udee0 CSS Validator\n\n\n\n Desktop Browsers:  All pages were tested on all current desktop browsers (Safari, Firefox, Chrome, Internet Explorer, EDGE...).\n Mobile Browsers:  All pages were tested on all current mobile browsers (Native browser, Chrome, Safari...).\n OS:  All pages were tested on all current OS (Windows, Android, iOS, Mac...).\n\n\n Design fidelity:  Depending the project and the quality of the creatives, you may be asked to be close to the design. You can use some tools to compare creatives with your code implementation and ensure consistency.\n\n\nPixel Perfect - Chrome Extension\n\n\n Reading direction:  All pages need to be tested for LTR and RTL languages if they need to be supported.\n\n\n\n\ud83d\udcd6 Building RTL-Aware Web Apps & Websites: Part 1 - Mozilla Hacks\n\ud83d\udcd6 Building RTL-Aware Web Apps & Websites: Part 2 - Mozilla Hacks\n\n\n\u2b06 back to top\n\nImages\n\nNotes: For a complete understanding of image optimization, check the free ebook Essential Image Optimization from Addy Osmani.\n\nBest practices\n\n Optimization:  All images are optimized to be rendered in the browser. WebP format could be used for critical pages (like Homepage).\n\n\n\n\ud83d\udee0 Imagemin\n\ud83d\udee0 Use ImageOptim to optimise your images for free.\n\ud83d\udee0 Use Kraken.io awesome alternative for both png and jpg optimization. Up to 1mb per files on free plan.\n\ud83d\udee0 TinyPNG losslessly optimise png, apng (animated png) and jpg images. Free and paid version available.\n\ud83d\udee0 ZorroSVG jpg-like compression for transparent images using svg masking.\n\ud83d\udee0 SVGO a Nodejs-based tool for optimizing SVG vector graphics files.\n\ud83d\udee0 SVGOMG a web-based GUI version of SVGO for optimising your svgs online.\n\n\n\n Picture/Srcset:  You use picture/srcset to provide the most appropriate image for the current viewport of the user.\n\n\n\n\ud83d\udcd6 How to Build Responsive Images with srcset\n\n\n\n Retina:  You provide layout images 2x or 3x, support retina display.\n Sprite:  Small images are in a sprite file (in the case of icons, they can be in an SVG sprite image).\n Width and Height:  Set width and height attributes on <img> if the final rendered image size is known (can be omitted for CSS sizing).\n Alternative text:  All <img> have an alternative text which describe the image visually.\n\n\n\n\ud83d\udcd6 Alt-texts: The Ultimate Guide\n\n\n\n Lazy loading:  Images are lazyloaded (A noscript fallback is always provided).\n\n\u2b06 back to top\n\nJavaScript\nBest practices\n\n JavaScript Inline:  You don't have any JavaScript code inline (mixed with your HTML code).\n Concatenation:  JavaScript files are concatenated.\n Minification:  JavaScript files are minified (you can add the .min suffix).\n\n\n\n\ud83d\udcd6 Minify Resources (HTML, CSS, and JavaScript)\n\n\n\n JavaScript security: \n\n\n\n\ud83d\udcd6 Guidelines for Developing Secure Applications Utilizing JavaScript\n\n\n\n noscript tag:  Use <noscript> tag in the HTML body if a script type on the page is unsupported or if scripting is currently turned off in the browser. This will be helpful in client-side rendering heavy apps such as React.js, see examples.\n\n<noscript>\n  You need to enable JavaScript to run this app.\n</noscript>\n\n Non-blocking:  JavaScript files are loaded asynchronously using async or deferred using defer attribute.\n\n\n\n\ud83d\udcd6 Remove Render-Blocking JavaScript\n\n\n\n Optimized and updated JS libraries:  All JavaScript libraries used in your project are necessary (prefer Vanilla Javascript for simple functionalities), updated to their latest version and don't overwhelm your JavaScript with unnecessary methods.\n\n\n\n\ud83d\udcd6 You may not need jQuery\n\ud83d\udcd6 Vanilla JavaScript for building powerful web applications\n\n\n\n Modernizr:  If you need to target some specific features you can use a custom Modernizr to add classes in your <html> tag.\n\n\n\n\ud83d\udee0 Customize your Modernizr\n\n\nJavaScript testing\n\n ESLint:  No errors are flagged by ESLint (based on your configuration or standards rules).\n\n\n\n\ud83d\udcd6 ESLint - The pluggable linting utility for JavaScript and JSX\n\n\n\u2b06 back to top\n\nSecurity\nScan and check your web site\n\n\nsecurityheaders.io\nObservatory by Mozilla\n\n\nBest practices\n\n HTTPS:  HTTPS is used on every pages and for all external content (plugins, images...).\n\n\n\n\ud83d\udee0 Let's Encrypt - Free SSL/TLS Certificates\n\ud83d\udee0 Free SSL Server Test\n\ud83d\udcd6 Strict Transport Security\n\n\n\n HTTP Strict Transport Security (HSTS):  The HTTP header is set to 'Strict-Transport-Security'.\n\n\n\n\ud83d\udee0 Check HSTS preload status and eligibility\n\ud83d\udcd6 HTTP Strict Transport Security Cheat Sheet - OWASP\n\ud83d\udcd6 Transport Layer Protection Cheat Sheet - OWASP\n\n\n\n Cross Site Request Forgery (CSRF):  You ensure that requests made to your server-side are legitimate and originate from your website / app to prevent CSRF attacks.\n\n\n\n\ud83d\udcd6 Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet  - OWASP\n\n\n\n Cross Site Scripting (XSS):  Your page or website is free from XSS possible issues.\n\n\n\n\ud83d\udcd6 XSS (Cross Site Scripting) Prevention Cheat Sheet  - OWASP\n\ud83d\udcd6 DOM based XSS Prevention Cheat Sheet  - OWASP\n\n\n\n Content Type Options:  Prevents Google Chrome and Internet Explorer from trying to mime-sniff the content-type of a response away from the one being declared by the server.\n\n\n\n\ud83d\udcd6 X-Content-Type-Options - Scott Helme\n\n\n\n X-Frame-Options (XFO):  Protects your visitors against clickjacking attacks.\n\n\n\n\ud83d\udcd6 X-Frame-Options - Scott Helme\n\ud83d\udcd6 RFC7034 - HTTP Header Field X-Frame-Options\n\n\n\n Content Security Policy:  Defines how content is loaded on your site and from where it is permitted to be loaded. Can also be used to protect against clickjacking attacks.\n\n\n\n\ud83d\udcd6 Content Security Policy - An Introduction - Scott Helme\n\ud83d\udcd6 CSP Cheat Sheet - Scott Helme\n\ud83d\udcd6 CSP Cheat Sheet - OWASP\n\ud83d\udcd6 Content Security Policy Reference\n\n\n\u2b06 back to top\n\nPerformance\nBest practices\n\n Goals to achieve:  Your pages should reach these goals:\n\nFirst Meaningful Paint under 1 second\nTime To Interactive under 5 seconds for the \"average\" configuration (a $200 Android on a slow 3G network with 400ms RTT and 400kbps transfer speed) and under 2 seconds for repeat visits\nCritical file size under 170Kb gzipped\n\n\n\n\n\n\ud83d\udee0 Website Page Analysis\n\ud83d\udee0 WebPageTest\n\ud83d\udcd6 Size Limit: Make the Web lighter\n\n\n\n\n Minified HTML:  Your HTML is minified.\n\n\n Lazy loading:  Images, scripts and CSS need to be lazy loaded to improve the response time of the current page (See details in their respective sections).\n\n\n Cookie size:  If you are using cookies be sure each cookie doesn't exceed 4096 bytes and your domain name doesn't have more than 20 cookies.\n\n\n\n\n\ud83d\udcd6 Cookie specification: RFC 6265\n\ud83d\udcd6 Cookies\n\ud83d\udee0 Browser Cookie Limits\n\n\n\n Third party components:  Third party iframes or components relying on external JS (like sharing buttons) are replaced by static components when possible, thus limiting calls to external APIs and keeping your users activity private.\n\n\n\n\ud83d\udee0 Simple sharing buttons generator\n\n\nPreparing upcoming requests\n\n\n\ud83d\udcd6 Explanation of the following techniques\n\n\n\n DNS resolution:  DNS of third-party services that may be needed are resolved in advance during idle time using dns-prefetch.\n\n<link rel=\"dns-prefetch\" href=\"https://example.com\">\n\n Preconnection:  DNS lookup, TCP handshake and TLS negotiation with services that will be needed soon is done in advance during idle time using preconnect.\n\n<link rel=\"preconnect\" href=\"https://example.com\">\n\n Prefetching:  Resources that will be needed soon (e.g. lazy loaded images) are requested in advance during idle time using prefetch.\n\n<link rel=\"prefetch\" href=\"image.png\">\n\n Preloading:  Resources needed in the current page (e.g. scripts placed at the end of <body>) in advance using preload.\n\n<link rel=\"preload\" href=\"app.js\">\n\n\n\ud83d\udcd6 Difference between prefetch and preload\n\n\nPerformance testing\n\n Google PageSpeed:  All your pages were tested (not only the homepage) and have a score of at least 90/100.\n\n\n\n\ud83d\udee0 Google PageSpeed\n\ud83d\udee0 Test your mobile speed with Google\n\ud83d\udee0 WebPagetest - Website Performance and Optimization Test\n\ud83d\udee0 GTmetrix - Website speed and performance optimization\n\ud83d\udee0 Speedrank - Improve the performance of your website\n\n\n\u2b06 back to top\n\nAccessibility\n\nNotes: You can watch the playlist A11ycasts with Rob Dodson \ud83d\udcf9\n\nBest practices\n\n Progressive enhancement:  Major functionality like main navigation and search should work without JavaScript enabled.\n\n\n\n\ud83d\udcd6 Enable / Disable JavaScript in Chrome Developer Tools\n\n\n\n Color contrast:  Color contrast should at least pass WCAG AA (AAA for mobile).\n\n\n\n\ud83d\udee0 Contrast ratio\n\n\nHeadings\n\n H1:  All pages have an H1 which is not the title of the website.\n Headings:  Headings should be used properly and in the right order (H1 to H6).\n\n\n\n\ud83d\udcf9 Why headings and landmarks are so important -- A11ycasts #18\n\n\nSemantics\n\n Specific HTML5 input types are used:  This is especially important for mobile devices that show customized keypads and widgets for different types.\n\n\n\n\ud83d\udcd6 Mobile Input Types\n\n\nForm\n\n Label:  A label is associated with each input form element. In case a label can't be displayed, use aria-label instead.\n\n\n\n\ud83d\udcd6 Using the aria-label attribute - MDN\n\n\nAccessibility testing\n\n Accessibility standards testing:  Use the WAVE tool to test if your page respects the accessibility standards.\n\n\n\n\ud83d\udee0 Wave testing\n\n\n\n Keyboard navigation:  Test your website using only your keyboard in a previsible order. All interactive elements are reachable and usable.\n Screen-reader:  All pages were tested in a screen-reader (VoiceOver, ChromeVox, NVDA or Lynx).\n Focus style:  If the focus is disabled, it is replaced by visible state in CSS.\n\n\n\n\ud83d\udcf9 Managing Focus - A11ycasts #22\n\n\n\u2b06 back to top\n\nSEO\n\n Google Analytics:  Google Analytics is installed and correctly configured.\n\n\n\n\ud83d\udee0 Google Analytics\n\ud83d\udee0 GA Checker (and others)\n\n\n\n Headings logic:  Heading text helps to understand the content in the current page.\n\n\n\n\ud83d\udee0 Tota11y, tab Headings\n\n\n\n sitemap.xml:  A sitemap.xml exists and was submitted to Google Search Console (previously Google Webmaster Tools).\n\n\n\n\ud83d\udee0 Sitemap generator\n\n\n\n robots.txt:  The robots.txt is not blocking webpages.\n\n\n\n\ud83d\udcd6 The robots.txt file\n\ud83d\udee0 Test your robots.txt with Google Robots Testing Tool\n\n\n\n Structured Data:  Pages using structured data are tested and are without errors. Structured data helps crawlers understand the content in the current page.\n\n\n\n\ud83d\udcd6 Introduction to Structured Data - Search - Google Developers\n\ud83d\udcd6 RDFa - Linked Data in HTML\n\ud83d\udcd6 JSON-LD\n\ud83d\udcd6 Microdata\n\ud83d\udee0 Test your page with the Structured Data Testing Tool\n\ud83d\udee0 Complete list of vocabularies that can be used as structured data. Schema.org Full Hierarchy\n\n\n\n Sitemap HTML:  An HTML sitemap is provided and is accessible via a link in the footer of your website.\n\n\n\n\ud83d\udcd6 Sitemap guidelines - Google Support\n\n\n\n Pagination link tags:  Provide rel=\"prev\" and rel=\"next\" to indicate paginated content.\n\n\n\n\ud83d\udee0 Pagination (rel=\"prev/next\") Testing Tool\n\n\n\n\n\ud83d\udcd6 Pagination guidelines - Google Support\n\n\n<!-- Example: Pagination link tags for page 2 of a paginated list -->\n<link rel=\"prev\" href=\"https://example.com/?page=1\">\n<link rel=\"next\" href=\"https://example.com/?page=3\">\n\u2b06 back to top\n\nTranslations\nThe Front-End Checklist is also available in other languages. Thanks for all translators and their awesome work!\n\n\ud83c\uddef\ud83c\uddf5 Japanese: miya0001/Front-End-Checklist\n\ud83c\uddea\ud83c\uddf8 Spanish: eoasakura/Front-End-Checklist-ES\n\ud83c\udde8\ud83c\uddf3 Chinese: JohnsenZhou/Front-End-Checklist\n\ud83c\uddf0\ud83c\uddf7 Korean: kesuskim/Front-End-Checklist\n\ud83c\udde7\ud83c\uddf7 Portuguese: jcezarms/Front-End-Checklist\n\ud83c\uddfb\ud83c\uddf3 Vietnamese: euclid1990/Front-End-Checklist\n\ud83c\uddf9\ud83c\uddfc Traditional Chinese: EngineLin/Front-End-Checklist\n\ud83c\uddeb\ud83c\uddf7 French: ynizon/Front-End-Checklist\n\ud83c\uddf7\ud83c\uddfa Russian: ungear/Front-End-Checklist\n\ud83c\uddf9\ud83c\uddf7 Turkish: eraycetinay/Front-End-Checklist\n\ud83c\udde9\ud83c\uddea German: xfuture603/Front-End-Checklist\n\n\nFront-End Checklist Badge\nIf you want to show you are following the rules of the Front-End Checklist, put this badge on your README file!\n\u2794 \n[![Front\u2011End_Checklist followed](https://img.shields.io/badge/Front\u2011End_Checklist-followed-brightgreen.svg)](https://github.com/thedaviddias/Front-End-Checklist/)\n\u2b06 back to top\n\nContributing\nOpen an issue or a pull request to suggest changes or additions.\nGuide\nThe Front-End Checklist repository consists of two branches:\n1. master\nThis branch consists of the README.md file that is automatically reflected on the Front-End Checklist website.\n2. develop\nThis branch will be used to make some significant changes to the structure, content if needed. It is preferable to use the master branch to fix small errors or add a new item.\nSupport\nIf you have any question or suggestion, don't hesitate to use Gitter or Twitter:\n\nChat on Gitter\nFacebook\nTwitter\n\nAuthor\nDavid Dias\nContributors\nThis project exists thanks to all the people who contribute. [Contribute].\n\nBackers\nThank you to all our backers! \ud83d\ude4f [Become a backer]\n\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\nLicense\n\n\u2b06 back to top\n\n"}, {"repo": "Dogfalo/materialize", "language": "JavaScript", "readme": "\n\n\n\n\n\nMaterializeCSS\n\n  Materialize, a CSS Framework based on material design.\n  \n-- Browse the docs --\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable of Contents\n\nQuickstart\nDocumentation\nSupported Browsers\nChangelog\nTesting\nContributing\nCopyright and license\n\nQuickstart:\nRead the getting started guide for more information on how to use materialize.\n\nDownload the latest release of materialize directly from GitHub. (Beta)\nClone the repo: git clone https://github.com/Dogfalo/materialize.git (Beta: git clone -b v1-dev https://github.com/Dogfalo/materialize.git)\nInclude the files via cdnjs. More here. (Beta)\nInstall with npm: npm install materialize-css (Beta: npm install materialize-css@next)\nInstall with Bower: bower install materialize (DEPRECATED)\nInstall with Atmosphere: meteor add materialize:materialize (Beta: meteor add materialize:materialize@=1.0.0-beta)\n\nDocumentation\nThe documentation can be found at http://materializecss.com. To run the documentation locally on your machine, you need Node.js installed on your computer.\nRunning documentation locally\nRun these commands to set up the documentation:\ngit clone https://github.com/Dogfalo/materialize\ncd materialize\nnpm install\nThen run grunt monitor to compile the documentation. When it finishes, open a new browser window and navigate to localhost:8000. We use BrowserSync to display the documentation.\nDocumentation for previous releases\nPrevious releases and their documentation are available for download.\nSupported Browsers:\nMaterialize is compatible with:\n\nChrome 35+\nFirefox 31+\nSafari 9+\nOpera\nEdge\nIE 11+\n\nChangelog\nFor changelogs, check out the Releases section of materialize or the CHANGELOG.md.\nTesting\nWe use Jasmine as our testing framework and we're trying to write a robust test suite for our components. If you want to help, here's a starting guide on how to write tests in Jasmine.\nContributing\nCheck out the CONTRIBUTING document in the root of the repository to learn how you can contribute. You can also browse the help-wanted tag in our issue tracker to find things to do.\nCopyright and license\nCode Copyright 2018 Materialize. Code released under the MIT license.\n\n"}, {"repo": "wasabeef/awesome-android-ui", "language": "None", "readme": "\nList of Android UI/UX Libraries\n\nA curated list of awesome Android UI/UX libraries.\nOther lists\n\nLooking for Core Library? Check out wasabeef/awesome-android-libraries.\nLooking for iOS? Check out cjwirth/awesome-ios-ui\n\nMaintainers\n wasabeef\n ogaclejapan\nIndex (light-weight pages)\n\nMaterial\nLayout\nButton\nList / Grid\nViewPager\nLabel / Form\nImage\nSeekBar\nProgress\nMenu\nActionBar\nDialog\nCalendar\nGraph\nAnimation\nParallax\nEffect (Blur... etc)\nOther\n\nMaterial\n\n\n\nName\nLicense\nDemo\n\n\n\n\nMaterialDesignLibrary\nApache License V2\n             \n\n\nDrawerArrowDrawable\nApache License V2\n\n\n\nMaterialTabs\nApache License V2\n  \n\n\nPagerSlidingTabStrip\nApache License V2\n\n\n\nmaterial-ripple\nApache License V2\n\n\n\nRippleEffect\nMIT\n\n\n\nLDrawer\nApache License V2\n\n\n\nmaterial-design-icons\nApache License V2\n\n\n\nAndroidMaterialDesignToolbar\nApache License V2\n\n\n\nMaterialEditText\nApache License V2\n\n\n\nmaterial-menu\nApache License V2\n \n\n\nmaterial-dialogs\nApache License V2\n  \n\n\nAlertDialogPro\nApache License V2\n   \n\n\nMaterialNavigationDrawer\nApache License V2\n\n\n\nMaterialDialog\nApache License V2\n \n\n\nmaterialish-progress\nApache License V2\n \n\n\nFloatingActionButton\nMIT\n\n\n\nandroid-floating-action-button\nApache License V2\n \n\n\nMaterialSheetFab\nMIT\n\n\n\nCircularReveal\nApache License V2\n\n\n\nmaterial-range-bar\nApache License V2\n \n\n\nLollipop-AppCompat-Widgets-Skeleton\nApache License V2\n\n\n\nCarbon\nApache License V2\nNONE\n\n\nmaterial-calendarview\nApache License V2\n\n\n\nMaterial\nApache License V2\n          \n\n\nMaterial Icon Library\nApache License V2\n\n\n\nFAB-Loading\nApache License V2\n\n\n\nMaterialTextField\nApache License V2\n\n\n\nMaterialDateRangePicker\nApache License V2\n \n\n\nTapTargetView\nApache License V2\n\n\n\nSpotlight\nApache License V2\n \n\n\nMaterialTapTargetPrompt\nApache License V2\n\n\n\nMaterialShadows\nMIT\n<img src=\"/art/MaterialShadows.png\" \u3044width=\"100%\"> \n\n\n\nLayout\n\n\n\nName\nLicense\nDemo\n\n\n\n\nWaveView\nApache License V2\n\n\n\nResideLayout\nApache License V2\n\n\n\nAndroidSwipeLayout\nMIT\n \n\n\nSwipeBackLayout\nApache License V2\n \n\n\nMaskable Layout\nApache License V2\n\n\n\nExpandableLayout\nMIT\n\n\n\nandroid-PullRefreshLayout\nMIT\n\n\n\nTileView\nMIT\n \n\n\nShowcaseView\nApache License V2\n \n\n\nUltra Pull To Refresh\nApache License V2\n   \n\n\nAndroidViewHover\nUnKnown\n\n\n\nDraggablePanel\nApache License V2\n \n\n\nSlidr\nApache License V2\n\n\n\nPhoenix Pull-to-Refresh\nApache License V2\n\n\n\nPull-to-Refresh.Tours\nApache License V2\n\n\n\nInboxLayout\nMIT\n\n\n\nSwipeBack\nApache License V2\n \n\n\nArcLayout\nApache License V2\n\n\n\nDragger\nApache License V2\n\n\n\nPhysicsLayout\nApache License V2\n\n\n\nBottomSheet\nLicense\n\n\n\nBubbles for Android\nApache License V2\n\n\n\nAndroidSlidingUpPanel\nApache License V2\n\n\n\nandroid-transition\nApache License V2\n\n\n\nCircleRefreshLayout\nMIT\n\n\n\nWaveSwipeRefreshLayout\nApache License V2\n\n\n\nFloatingView\nApache License V2\n\n\n\nFrenchToast\nApache License V2\n\n\n\nAndroidSweetSheet\nApache License V2\n\n\n\nFABRevealLayout\nApache License V2\n\n\n\nToggleExpandLayout\nMIT\n\n\n\nFlowingDrawer\nApache License V2\n\n\n\nWaveView\nApache License V2\n\n\n\nFoldableLayout\nApache License V2\n\n\n\nTriangleLabelView\nApache License V2\n\n\n\nFlexboxLayout\nApache License V2\n \n\n\nVorolay\nApache License V2\n \n\n\nHover\nMIT\n\n\n\nFerrisWheel\nApache License V2\n\n\n\n\nButton\n\n\n\nName\nLicense\nDemo\n\n\n\n\ncircular-progress-button\nApache License V2\n\n\n\nandroid-process-button\nApache License V2\n \n\n\nandroid-circlebutton\nApache License V2\n\n\n\nandroid-flat-button\nApache License V2\n\n\n\nMovingButton\nMIT\n\n\n\nLabelView\nApache License V2\n\n\n\n\nList / Grid\n\n\n\nName\nLicense\nDemo\n\n\n\n\nSuperRecyclerView\nApache License V2\nNONE\n\n\nRecyclerViewSwipeDismiss\nBSD 2 License\n\n\n\nFlabbyListView\nApache License V2\n \n\n\nrecyclerview-stickyheaders\nMIT\n\n\n\nParallaxListView\nUnKnown\n\n\n\nPullZoomView\nApache License V2\n\n\n\nSwipeMenuListView\nMIT\n\n\n\ndiscrollview\nApache License V2\n\n\n\nStickyListHeaders\nApache License V2\n\n\n\nListBuddies\nApache License V2\n<img src=\"/art/ListBuddies.png\" width=\"49%\"/ > <img src=\"/art/ListBuddies.gif\" width=\"49%\"/ >\n\n\nAndroid-ObservableScrollView\nApache License V2\n             \n\n\nAsymmetricGridView\nApache License V2\n \n\n\nDynamicGrid\nMIT\n\n\n\nAndroidStaggeredGrid\nApache License V2\n\n\n\nSwipeListView\nApache License V2\n\n\n\nandroid-parallax-recyclerview\nApache License V2\n \n\n\nBlurStickyHeaderListView\nMIT\n\n\n\nRecyclerView Animators\nApache License V2\n \n\n\nRecyclerView-FlexibleDivider\nApache License V2\n \n\n\nAndroidTreeView\nApache License V2\n \n\n\nRecyclerViewFastScroller\nApache License V2\n \n\n\nRecyclerView-MultipleViewTypesAdapter\nApache License V2\n\n\n\nSwipeToAction\nApache License V2\n\n\n\nAdvanced Recyclerview\nApache License V2\n\n\n\nRecyclerItemDecoration\nApache License V2\n \n\n\nMaterialRecents\nApache License V2\n\n\n\nDividers\nApache License V2\n\n\n\nDrag Select Recycler View\nMIT\n\n\n\nsticky-headers-recyclerview\nApache License V2\n\n\n\n\nViewPager\n\n\n\nName\nLicense\nDemo\n\n\n\n\nParallaxPagerTransformer\nApache License V2\n\n\n\nViewPagerTransforms\nApache License V2\n\n\n\nCircleIndicator\nMIT\n\n\n\nAndroid ViewPagerIndicator\nApache License V2\n\n\n\nAndroid-ParallaxHeaderViewPager\nApache License V2\n\n\n\nfreepager\nApache License V2\n\n\n\nSpringIndicator\nApache License V2\n\n\n\nSmartTabLayout\nApache License V2\n\n\n\nFlipViewPager.Draco\nApache License V2\n\n\n\nMaterialViewPager\nApache License V2\n \n\n\nAndroidRubberIndicator\nMIT\n\n\n\nHollyViewPager\nApache License V2\n\n\n\nSCViewPager\nApache License V2\n\n\n\nSwipeSelector\nApache License V2\n\n\n\nNavigationTabStrip\nApache License V2 & MIT\n\n\n\nNavigationTabBar\nApache License V2 & MIT\n \n\n\nUltraViewPager\nMIT\n   \n\n\n\nLabel / Form\n\n\n\nName\nLicense\nDemo\n\n\n\n\nShimmer-android\nApache License V2\n\n\n\nShimmer for Android\nBSD 2 License\n\n\n\nTitanic\nApache License V2\n\n\n\nMatchView\nApache License V2\n\n\n\nandroid-autofittextview\nApache License V2\n\n\n\nSecretTextView\nApache License V2\n\n\n\nTextJustify-Android\nApache License V2\n \n\n\nRoundedLetterView\nApache License V2\n\n\n\nTextDrawable\nApache License V2\n \n\n\nBabushkaText\nApache License V2\n\n\n\nExpandableTextView\nApache License V2\n\n\n\nFloat Labeled EditText\nApache License V2\n\n\n\nSizeAdjustingTextView\nGNU License\nNONE\n\n\nParkedTextView\nMIT\n\n\n\nMaterial Code input\nApache License V2\n  \n\n\nTextSurface\nApache License V2\n\n\n\nEmailAutoCompleteTextView\nApache License V2\n\n\n\nTab Digit\nApache License V2\n \n\n\nRotatingText\nMIT\n\n\n\n\nImage\n\n\n\nName\nLicense\nDemo\n\n\n\n\nTouchImageView\nLICENSE\nNONE\n\n\nCircleImageView\nApache License V2\n\n\n\nandroid-shape-imageview\nApache License V2\n \n\n\nGifImageView\nMIT\n\n\n\ncropper\nApache License V2\n\n\n\nandroid-crop\nApache License V2\n\n\n\nSelectableRoundedImageView\nApache License V2\n\n\n\nRoundedImageView\nApache License V2\n \n\n\nCropImageView\nApache License V2\n\n\n\nBitmapMerger\nMIT\n \n\n\nScrolling Image View\nMIT\n\n\n\nPixelate Android\nMIT\n\n\n\nSimpleCropView\nMIT\n\n\n\nandroid-anyshape\nMIT\n \n\n\nPanoramaImageView\nMIT\n\n\n\n\nSeekBar\n\n\n\nName\nLicense\nDemo\n\n\n\n\nDiscreteSeekBar\nApache License V2\n \n\n\nSeekBarCompat\nApache License V2\n\n\n\nPreviewSeekBar\nApache License V2\n\n\n\n\nProgress\n\n\n\nName\nLicense\nDemo\n\n\n\n\nSmoothProgressBar\nApache License V2\n\n\n\nNumberProgressBar\nMIT\n\n\n\nCircleProgress\nUnKnown\n\n\n\nandroid-square-progressbar\nUnKnown\n  \n\n\nGoogleProgressBar\nApache License V2\n  \n\n\nAndroid-RoundCornerProgressBar\nApache License V2\n \n\n\nElasticDownload\nApache License V2\n \n\n\nFABProgressCircle\nApache License V2\n\n\n\nLoading\nApache License V2\n  \n\n\nAnimated Circle Loading View\nApache License V2\n\n\n\nAndroidFillableLoaders\nApache License V2\n \n\n\nspots-dialog\nMIT\n\n\n\nAVLoadingIndicatorView\nApache License V2\n\n\n\nLoadingDots\nMIT\n\n\n\nColorArcProgerssBar\nApache License V2\n\n\n\nArcProgressStackView\nApache License V2\n \n\n\nWaveLoadingView\nApache License V2\n\n\n\nCatLoadingView\nMIT\n\n\n\nWaveLoading\nMIT\n\n\n\n\nMenu\n\n\n\nName\nLicense\nDemo\n\n\n\n\nCircularFloatingActionMenu\nMIT\n\n\n\nAndroidResideMenu\nMIT\n\n\n\nFolder-ResideMenu\nApache License V2\n\n\n\nSide-Menu.Android\nApache License V2\n\n\n\nContext-Menu.Android\nApache License V2\n\n\n\nGuillotineMenu-Android\nApache License V2\n\n\n\nandroid-snake-menu\nApache License V2\n\n\n\nBoomMenu\nApache License V2\n \n\n\n\nActionBar\n\n\n\nName\nLicense\nDemo\n\n\n\n\nFadingActionBar\nApache License V2\n\n\n\nGlassActionBar\nApache License V2\n\n\n\nNotBoringActionBar\nApache License V2\n\n\n\n\nDialog\n\n\n\nName\nLicense\nDemo\n\n\n\n\nDialogPlus\nApache License V2\n \n\n\nSweet Alert\nMIT\n\n\n\nFlycoDialog-Matser\nMIT\n\n\n\n\nCalendar\n\n\n\nName\nLicense\nDemo\n\n\n\n\nCaldroid\nMIT\n\n\n\nandroid-times-square\nApache License V2\n\n\n\nAndroid-MonthCalendarWidget\nApache License V2\n\n\n\nandroid-betterpickers\nApache License V2\n\n\n\nAndroid-Week-View\nApache License V2\n\n\n\nSilkCal\nMIT\n\n\n\nSublimePicker\nApache License V2\n  \n\n\nMaterialDateTimePicker\nApache License V2\n \n\n\nCompactCalendarView\nMIT\n\n\n\n\nGraph\n\n\n\nName\nLicense\nDemo\n\n\n\n\nEazeGraph\nApache License V2\n   \n\n\nGraphView\nApache License V2\n \n\n\nhellocharts-android\nApache License V2\n  \n\n\nMPAndroidChart\nApache License V2\n   \n\n\nWilliamChart\nApache License V2\n \n\n\n\nAnimation\n\n\n\nName\nLicense\nDemo\n\n\n\n\nAndroidViewAnimations\nMIT\n\n\n\nListViewAnimations\nApache License V2\n\n\n\nAndroidImageSlider\nMIT\n\n\n\ntransitions-everywhere\nApache License V2\n\n\n\nAndroid Ripple Background\nMIT\n \n\n\nandroid-flip\nMIT\n \n\n\nFragmentTransactionExtended\nApache License V2\n \n\n\nKenBurnsView\nApache License V2\n\n\n\nrebound\nBSD 2 License\nhttp://facebook.github.io/rebound/\n\n\nReachability\nApache License V2\n\n\n\nAnimationEasingFunctions\nMIT\n\n\n\nEasyAndroidAnimations\nApache License V2\n\n\n\nandroid-pathview\nApache License V2\n\n\n\nViewRevealAnimator\nApache License V2\n\n\n\nArcAnimator\nMIT\n \n\n\nSearchMenuAnim\nUnKnown\n\n\n\nCross View\nApache License V2\n \n\n\nWoWoViewPager\nApache License V2\n \n\n\nLottie for Android\nApache License V2\n \n\n\nRichPath\nApache License V2\n\n\n\n\nParallax\n\n\n\nName\nLicense\nDemo\n\n\n\n\nParallaxEverywhere\nMIT\n\n\n\n\nEffect\n\n\n\nName\nLicense\nDemo\n\n\n\n\nEtsyBlur\nApache License V2\n\n\n\nBlurDialogFragment\nApache License V2\n \n\n\nBlurBehind\nMIT\n \n\n\nAndroid StackBlur\nApache License V2\n\n\n\nEdgeEffectOverride\nApache License V2\n\n\n\nExplosionField\nApache License V2\n\n\n\nBrokenView\nMIT\n\n\n\nTrianglify\nApache License V2\n\n\n\nShineButton\nMIT\n\n\n\n\nOther\n\n\n\nName\nLicense\nDemo\n\n\n\n\nSwipecards\nApache License V2\n\n\n\nAndroid-Bootstrap\nMIT\n\n\n\nAndroid PDFView\nGPL V3\n\n\n\nDspec\nApache License V2\n\n\n\nLolliPin\nApache License V2\n\n\n\nDrawableView\nApache License V2\n\n\n\nMaterial Shadow 9-Patch\nApache License V2\n\n\n\nSimpleFingerGestures\nApache License v2\n   \n\n\nDecor\nApache License V2\n\n\n\nVoice Recording Visualizer\nApache License V2\n\n\n\nEasyFonts\nApache License V2\n\n\n\nAndroid Sliding Activity Library\nApache License V2\n \n\n\nSnake View\nApache License V2\n\n\n\nRotatable\nMIT\n\n\n\nStatusBarUtil\nApache License V2\n\n\n\nHorizon - Simple visual equaliser for Android\nApache License V2\n\n\n\nStepper Touch\nApache License V2\n\n\n\nKonfetti\nISC\n\n\n\n\n\n"}, {"repo": "awesomedata/awesome-public-datasets", "language": "None", "readme": "\nAwesome Public Datasets\n\n\nNOTICE: This repo is automatically generated by apd-core.\nPlease DO NOT modify this file directly. We have provided\na new way\nto contribute to Awesome Public Datasets. The original PR entrance directly on repo is closed forever.\n\n I am well.\n Please fix me.\n\nThis list of a topic-centric public data sources\nin high quality. They are collected and tidied from blogs, answers, and user responses.\nMost of the data sets listed below are free, however, some are not.\nOther amazingly awesome lists can be found in sindresorhus's awesome list.\n\nTable of Contents\n\nAgriculture\nBiology\nClimate+Weather\nComplexNetworks\nComputerNetworks\nDataChallenges\nEarthScience\nEconomics\nEducation\nEnergy\nFinance\nGIS\nGovernment\nHealthcare\nImageProcessing\nMachineLearning\nMuseums\nNaturalLanguage\nNeuroscience\nPhysics\nProstateCancer\nPsychology+Cognition\nPublicDomains\nSearchEngines\nSocialNetworks\nSocialSciences\nSoftware\nSports\nTimeSeries\nTransportation\neSports\nComplementary Collections\n\n\n\nAgriculture\n\n Hyperspectral benchmark dataset on soil moisture\n U.S. Department of Agriculture's Nutrient Database\n U.S. Department of Agriculture's PLANTS Database\n\n\nBiology\n\n 1000 Genomes [fixme]\n American Gut (Microbiome Project)\n Broad Bioimage Benchmark Collection (BBBC)\n Broad Cancer Cell Line Encyclopedia (CCLE)\n Cell Image Library\n Complete Genomics Public Data\n EBI ArrayExpress\n EBI Protein Data Bank in Europe\n ENCODE project\n Electron Microscopy Pilot Image Archive (EMPIAR)\n Ensembl Genomes\n Gene Expression Omnibus (GEO)\n Gene Ontology (GO) - GO annotation files\n Global Biotic Interactions (GloBI)\n Harvard Medical School (HMS) LINCS Project\n Human Genome Diversity Project\n Human Microbiome Project (HMP)\n ICOS PSP Benchmark\n International HapMap Project\n Journal of Cell Biology DataViewer [fixme]\n KEGG - KEGG is a database resource for understanding high-level functions [...]\n MIT Cancer Genomics Data\n NCBI Proteins\n NCBI Taxonomy\n NCI Genomic Data Commons\n NIH Microarray data\n OpenSNP genotypes data\n Pathguid - Protein-Protein Interactions Catalog\n Protein Data Bank\n Psychiatric Genomics Consortium\n PubChem Project\n PubGene (now Coremine Medical)\n Sanger Catalogue of Somatic Mutations in Cancer (COSMIC)\n Sanger Genomics of Drug Sensitivity in Cancer Project (GDSC)\n Sequence Read Archive(SRA)\n Stanford Microarray Data\n Stowers Institute Original Data Repository\n Systems Science of Biological Dynamics (SSBD) Database\n The Cancer Genome Atlas (TCGA), available via Broad GDAC\n The Catalogue of Life\n The Personal Genome Project\n UCSC Public Data\n UniGene\n Universal Protein Resource (UnitProt)\n\n\nClimate+Weather\n\n Actuaries Climate Index\n Australian Weather\n Aviation Weather Center - Consistent, timely and accurate weather [...]\n Brazilian Weather - Historical data (In Portuguese) - Data related to [...]\n Canadian Meteorological Centre\n Climate Data from UEA (updated monthly)\n Dutch Weather - The KNMI Data Center (KDC) portal provides access to KNMI [...]\n European Climate Assessment & Dataset\n Global Climate Data Since 1929\n NASA Global Imagery Browse Services\n NOAA Bering Sea Climate\n NOAA Climate Datasets\n NOAA Realtime Weather Models\n NOAA SURFRAD Meteorology and Radiation Datasets\n The World Bank Open Data Resources for Climate Change\n UEA Climatic Research Unit\n WU Historical Weather Worldwide\n WorldClim - Global Climate Data\n\n\nComplexNetworks\n\n AMiner Citation Network Dataset\n CrossRef DOI URLs\n DBLP Citation dataset\n DIMACS Road Networks Collection\n NBER Patent Citations\n NIST complex networks data collection\n Network Repository with Interactive Exploratory Analysis Tools\n Protein-protein interaction network\n PyPI and Maven Dependency Network\n Scopus Citation Database\n Small Network Data\n Stanford GraphBase\n Stanford Large Network Dataset Collection\n Stanford Longitudinal Network Data Sources [fixme]\n The Koblenz Network Collection\n The Laboratory for Web Algorithmics (UNIMI)\n UCI Network Data Repository\n UFL sparse matrix collection\n WSU Graph Database [fixme]\n\n\nComputerNetworks\n\n 3.5B Web Pages from CommonCrawl 2012\n 53.5B Web clicks of 100K users in Indiana Univ.\n CAIDA Internet Datasets\n CRAWDAD Wireless datasets from Dartmouth Univ.\n ClueWeb09 - 1B web pages\n ClueWeb12 - 733M web pages\n CommonCrawl Web Data over 7 years\n Criteo click-through data\n Internet-Wide Scan Data Repository\n MIRAGE-2019 - MIRAGE-2019 is a human-generated dataset for mobile traffic [...]\n OONI: Open Observatory of Network Interference - Internet censorship data\n Open Mobile Data by MobiPerf\n The Peer-to-Peer Trace Archive - Real-world measurements play a key role [...]\n Rapid7 Sonar Internet Scans\n UCSD Network Telescope, IPv4 /8 net\n\n\nDataChallenges\n\n Bruteforce Database\n Challenges in Machine Learning\n CrowdANALYTIX dataX\n D4D Challenge of Orange [fixme]\n DrivenData Competitions for Social Good\n ICWSM Data Challenge (since 2009)\n KDD Cup by Tencent 2012\n Kaggle Competition Data\n Localytics Data Visualization Challenge\n Netflix Prize\n Space Apps Challenge\n Telecom Italia Big Data Challenge\n TravisTorrent Dataset - MSR'2017 Mining Challenge\n TunedIT - Data mining & machine learning data sets, algorithms, challenges\n Yelp Dataset Challenge\n\n\nEarthScience\n\n 38-Cloud (Cloud Detection) - Contains 38 Landsat 8 scene images and their [...]\n AQUASTAT - Global water resources and uses\n BODC - marine data of ~22K vars\n EOSDIS - NASA's earth observing system data\n Earth Models\n Integrated Marine Observing System (IMOS) - roughly 30TB of ocean measurements\n Marinexplore - Open Oceanographic Data\n Alabama Real-Time Coastal Observing System\n National Estuarine Research Reserves System-Wide Monitoring Program - [...]\n Oil and Gas Authority Open Data - The dataset covers 12,500 offshore [...]\n Smithsonian Institution Global Volcano and Eruption Database\n USGS Earthquake Archives\n\n\nEconomics\n\n American Economic Association (AEA)\n EconData from UMD\n Economic Freedom of the World Data\n Historical MacroEconomic Statistics\n INFORUM - Interindustry Forecasting at the University of Maryland\n DBnomics \u2013 the world's economic database - Aggregates hundreds of [...]\n International Trade Statistics\n Internet Product Code Database\n Joint External Debt Data Hub\n Jon Haveman International Trade Data Links\n OpenCorporates Database of Companies in the World\n Our World in Data\n SciencesPo World Trade Gravity Datasets\n The Atlas of Economic Complexity\n The Center for International Data\n The Observatory of Economic Complexity\n UN Commodity Trade Statistics [fixme]\n UN Human Development Reports\n\n\nEducation\n\n College Scorecard Data\n Student Data from Free Code Camp\n\n\nEnergy\n\n AMPds\n BLUEd\n COMBED\n ECO\n EIA\n Global Power Plant Database - The Global Power Plant Database is a [...]\n HES - Household Electricity Study, UK\n HFED\n PLAID - The Plug Load Appliance Identification Dataset\n REDD\n Smart Meter Data Portal - The Smart Meter Data Portal is part of the [...]\n Tracebase\n UK-DALE - UK Domestic Appliance-Level Electricity [fixme]\n WHITED\n iAWE\n\n\nFinance\n\n Blockmodo Coin Registry - A registry of JSON formatted information files [...]\n CBOE Futures Exchange\n Google Finance\n Google Trends\n NASDAQ\n NYSE Market Data\n OANDA\n OSU Financial data [fixme]\n Quandl\n St Louis Federal\n Yahoo Finance\n\n\nGIS\n\n ArcGIS Open Data portal\n Cambridge, MA, US, GIS data on GitHub\n Factual Global Location Data\n IEEE Geoscience and Remote Sensing Society DASE Website\n Geo Maps - High Quality GeoJSON maps programmatically generated\n Geo Spatial Data from ASU\n Geo Wiki Project - Citizen-driven Environmental Monitoring\n GeoFabrik - OSM data extracted to a variety of formats and areas\n GeoNames Worldwide\n Global Administrative Areas Database (GADM) - Geospatial data organized [...]\n Homeland Infrastructure Foundation-Level Data\n Landsat 8 on AWS\n List of all countries in all languages\n National Weather Service GIS Data Portal\n Natural Earth - vectors and rasters of the world\n OpenAddresses\n OpenStreetMap (OSM)\n Pleiades - Gazetteer and graph of ancient places\n Reverse Geocoder using OSM data\n Robin Wilson - Free GIS Datasets\n TIGER/Line - U.S. boundaries and roads\n TZ Timezones shapfiles\n TwoFishes - Foursquare's coarse geocoder\n UN Environmental Data\n World boundaries from  the U.S. Department of State\n World countries in multiple formats\n\n\nGovernment\n\n Alberta, Province of Canada\n Antwerp, Belgium\n Argentina (non official)\n Datos Argentina - Portal de datos abiertos de la Rep\u00fablica Argentina. [...]\n Austin, TX, US\n Australia (abs.gov.au)\n Australia (data.gov.au)\n Austria (data.gv.at)\n Baton Rouge, LA, US\n Beersheba, Israel - Open Data Portal (Smart7 OpenData)\n Belgium\n Brazil\n Buenos Aires, Argentina\n Calgary, AB, Canada\n Cambridge, MA, US\n Canada\n Chicago\n Chile\n China\n Dallas Open Data\n DataBC - data from the Province of British Columbia\n Denver Open Data\n Durham, NC Open Data\n Edmonton, AB, Canada\n England LGInform\n EuroStat\n EveryPolitician - Ongoing project collating and sharing data on every [...]\n Federal Committee on Statistical Methodology (FCSM) (formerly FedStats)\n Finland\n France\n Fredericton, NB, Canada\n Gatineau, QC, Canada\n Germany\n Ghent, Belgium\n Glasgow, Scotland, UK\n Greece\n Guardian world governments\n Halifax, NS, Canada\n Helsinki Region, Finland\n Hong Kong, China [fixme]\n Houston, TX, US\n Indian Government Data\n Indonesian Data Portal\n Ireland's Open Data Portal\n Israel's Open Data Portal\n Italy - Il Portale dati.gov.it \u00e8 il catalogo nazionale dei metadati [...]\n Japan\n Laval, QC, Canada\n Lexington, KY\n London Datastore, UK\n London, ON, Canada\n Los Angeles Open Data\n Luxembourg - Luxembourgish Open Data Portal\n MassGIS, Massachusetts, U.S.\n Metropolitain Transportation Commission (MTC), California, US\n Mexico\n Missisauga, ON, Canada\n Moldova\n Moncton, NB, Canada\n Montreal, QC, Canada\n Mountain View, California, US (GIS)\n NYC Open Data [fixme]\n NYC betanyc\n Netherlands\n New Zealand\n OECD\n Oakland, California, US\n Oklahoma\n Open Data for Africa\n Open Government Data (OGD) Platform India\n OpenDataSoft's list of 1,600 open data\n Oregon\n Ottawa, ON, Canada\n Palo Alto, California, US\n OpenDataPhilly - OpenDataPhilly is a catalog of open data in the [...]\n Portland, Oregon\n Portugal - Pordata organization\n Puerto Rico Government\n Quebec City, QC, Canada\n Quebec Province of Canada\n Regina SK, Canada\n Rio de Janeiro, Brazil\n Romania\n Russia\n San Diego, CA\n San Antonio, TX - Community Information Now - CI:Now is a nonprofit [...] [fixme]\n San Francisco Data sets\n San Jose, California, US\n San Mateo County, California, US\n Saskatchewan, Province of Canada\n Seattle\n Singapore Government Data\n South Africa Trade Statistics\n South Africa\n State of Utah, US\n Switzerland\n Taiwan gov\n Taiwan\n Tel-Aviv Open Data\n Texas Open Data\n The World Bank [fixme]\n Toronto, ON, Canada\n Tunisia\n U.K. Government Data [fixme]\n U.S. American Community Survey [fixme]\n U.S. CDC Public Health datasets\n U.S. Census Bureau\n U.S. Department of Housing and Urban Development (HUD)\n U.S. Federal Government Agencies\n U.S. Federal Government Data Catalog\n U.S. Food and Drug Administration (FDA)\n U.S. National Center for Education Statistics (NCES)\n U.S. Open Government\n UK 2011 Census Open Atlas Project\n U.S. Patent and Trademark Office (USPTO) Bulk Data Products\n Uganda Bureau of Statistics\n Ukraine\n United Nations\n Uruguay [fixme]\n Valley Transportation Authority (VTA), California, US [fixme]\n Vancouver, BC Open Data Catalog\n Victoria, BC, Canada\n Vienna, Austria\n U.S. Congressional Research Service (CRS) Reports\n\n\nHealthcare\n\n Composition of Foods Raw, Processed, Prepared USDA National Nutrient Database for Standard [...]\n EHDP Large Health Data Sets\n GDC - GDC supports several cancer genome programs for CCG, TCGA, TARGET etc.\n Gapminder World demographic databases\n MeSH, the vocabulary thesaurus used for indexing articles for PubMed\n Medicare Coverage Database (MCD), U.S.\n Medicare Data Engine of medicare.gov Data\n Medicare Data File\n Number of Ebola Cases and Deaths in Affected Countries (2014)\n Open-ODS (structure of the UK NHS)\n OpenPaymentsData, Healthcare financial relationship data\n PhysioBank Databases - A large and growing archive of physiological data.\n The Cancer Imaging Archive (TCIA)\n The Cancer Genome Atlas project (TCGA)\n World Health Organization Global Health Observatory\n Informatics for Integrating Biology & the Bedside\n\n\nImageProcessing\n\n 10k US Adult Faces Database\n 2GB of Photos of Cats\n Adience Unfiltered faces for gender and age classification\n Affective Image Classification\n Animals with attributes\n CADDY Underwater Stereo-Vision Dataset of divers' hand gestures - [...]\n Caltech Pedestrian Detection Benchmark\n Chars74K dataset - Character Recognition in Natural Images (both English [...]\n Danbooru Tagged Anime Illustration Dataset - A large-scale anime image [...]\n DukeMTMC Data Set - DukeMTMC aims to accelerate advances in multi-target [...] [fixme]\n Face Recognition Benchmark\n Flickr: 32 Class Brand Logos [fixme]\n GDXray - X-ray images for X-ray testing and Computer Vision\n HumanEva Dataset - The HumanEva-I dataset contains 7 calibrated video [...]\n ImageNet (in WordNet hierarchy)\n Indoor Scene Recognition\n International Affective Picture System, UFL\n KITTI Vision Benchmark Suite\n Labeled Information Library of Alexandria - Biology and Conservation - [...]\n MNIST database of handwritten digits, near 1 million examples\n Massive Visual Memory Stimuli, MIT\n Open Images From Google - Pictures with segmentation masks for 2.8 [...]\n SUN database, MIT\n Several Shape-from-Silhouette Datasets [fixme]\n Stanford Dogs Dataset\n The Action Similarity Labeling (ASLAN) Challenge\n The Oxford-IIIT Pet Dataset\n Violent-Flows - Crowd Violence / Non-violence Database and benchmark\n Visual genome\n YouTube Faces Database\n\n\nMachineLearning\n\n All-Age-Faces Dataset - Contains 13'322 Asian face images distributed [...]\n Context-aware data sets from five domains\n Delve Datasets for classification and regression\n Discogs Monthly Data\n Free Music Archive\n IMDb Database\n Keel Repository for classification, regression and time series [fixme]\n Labeled Faces in the Wild (LFW)\n Lending Club Loan Data\n Machine Learning Data Set Repository\n Million Song Dataset\n More Song Datasets\n MovieLens Data Sets\n New Yorker caption contest ratings\n RDataMining - \"R and Data Mining\" ebook data\n Registered Meteorites on Earth\n Restaurants Health Score Data in San Francisco\n UCI Machine Learning Repository\n Yahoo! Ratings and Classification Data\n YouTube-BoundingBoxes\n Youtube 8m\n eBay Online Auctions (2012)\n\n\nMuseums\n\n Canada Science and Technology Museums Corporation's Open Data\n Cooper-Hewitt's Collection Database\n Minneapolis Institute of Arts metadata\n Natural History Museum (London) Data Portal\n Rijksmuseum Historical Art Collection\n Tate Collection metadata\n The Getty vocabularies\n\n\nNaturalLanguage\n\n Automatic Keyphrase Extraction\n Blizzard Challenge Speech - The speech + text data comes from [...]\n Blogger Corpus\n CLiPS Stylometry Investigation Corpus\n ClueWeb09 FACC\n ClueWeb12 FACC\n DBpedia - 4.58M things with 583M facts\n Flickr Personal Taxonomies\n Freebase of people, places, and things\n German Political Speeches Corpus - Collection of political speeches from [...]\n Google Books Ngrams (2.2TB)\n Google MC-AFP - Generated based on the public available Gigaword dataset [...]\n Google Web 5gram (1TB, 2006)\n Gutenberg eBooks List\n Hansards text chunks of Canadian Parliament\n LJ Speech - Speech dataset consisting of 13,100 short audio clips of a [...]\n M-AILabs Speech - The M-AILABS Speech Dataset is the first large dataset [...] [fixme]\n Microsoft MAchine Reading COmprehension Dataset (or MS MARCO)\n Machine Comprehension Test (MCTest) of text from Microsoft Research\n Machine Translation of European languages\n Making Sense of Microposts 2013 - Concept Extraction [fixme]\n Making Sense of Microposts 2016 - Named Entity rEcognition and Linking\n Multi-Domain Sentiment Dataset (version 2.0)\n Noisy speech database for training speech enhancement algorithms and TTS [...]\n Open Multilingual Wordnet\n POS/NER/Chunk annotated data\n Personae Corpus\n SMS Spam Collection in English\n SaudiNewsNet Collection of Saudi Newspaper Articles (Arabic, 30K articles)\n Stanford Question Answering Dataset (SQuAD)\n USENET postings corpus of 2005~2011\n Universal Dependencies\n Webhose - News/Blogs in multiple languages\n Wikidata - Wikipedia databases\n Wikipedia Links data - 40 Million Entities in Context\n WordNet databases and tools\n WorldTree Corpus of Explanation Graphs for Elementary Science Questions - [...]\n\n\nNeuroscience\n\n Allen Institute Datasets\n Brain Catalogue\n Brainomics\n CodeNeuro Datasets [fixme]\n Collaborative Research in Computational Neuroscience (CRCNS)\n FCP-INDI\n Human Connectome Project\n NDAR\n NIMH Data Archive\n NeuroData\n NeuroMorpho - NeuroMorpho.Org is a centrally curated inventory of [...]\n Neuroelectro\n OASIS\n OpenNEURO\n OpenfMRI\n Study Forrest\n\n\nPhysics\n\n CERN Open Data Portal\n Crystallography Open Database\n IceCube - South Pole Neutrino Observatory\n Ligo Open Science Center (LOSC) - Gravitational wave data from the LIGO [...]\n NASA Exoplanet Archive\n NSSDC (NASA) data of 550 space spacecraft\n Sloan Digital Sky Survey (SDSS) - Mapping the Universe\n\n\nProstateCancer\n\n EOPC-DE-Early-Onset-Prostate-Cancer-Germany - Early Onset Prostate Cancer [...]\n GENIE - Data from the Genomics Evidence Neoplasia Information Exchange [...]\n Genomic-Hallmarks-Prostate-Adenocarcinoma-CPC-GENE - Comprehensive [...]\n MSK-IMPACT-Clinical-Sequencing-Cohort-MSKCC-Prostate-Cancer - Targeted [...]\n Metastatic-Prostate-Adenocarcinoma-MCTP - Comprehensive profiling of 61 [...]\n Metastatic-Prostate-Cancer-SU2CPCF-Dream-Team - Comprehensive analysis of [...]\n NPCR-2001-2015 - Database from CDC's National Program of Cancer [...]\n NPCR-2005-2015 - Database from CDC's National Program of Cancer [...]\n NaF-Prostate - NaF Prostate is a collection of F-18 NaF positron emission [...]\n Neuroendocrine-Prostate-Cancer - Whole exome and RNA Seq data of [...]\n PLCO-Prostate-Diagnostic-Procedures - The Prostate Diagnostic Procedures [...]\n PLCO-Prostate-Medical-Complications - The Prostate Medical Complications [...]\n PLCO-Prostate-Screening-Abnormalities - The Prostate Screening [...]\n PLCO-Prostate-Screening - The Prostate Screening dataset (177,315 [...]\n PLCO-Prostate-Treatments - The Prostate Treatments dataset (13,409 [...]\n PLCO-Prostate - The Prostate dataset is a comprehensive dataset that [...]\n PRAD-CA-Prostate-Adenocarcinoma-Canada - Prostate Adenocarcinoma - [...]\n PRAD-FR-Prostate-Adenocarcinoma-France - Prostate Adenocarcinoma - [...]\n PRAD-UK-Prostate-Adenocarcinoma-United-Kingdom - Prostate Adenocarcinoma [...]\n PROSTATEx-Challenge - Retrospective set of prostate MR studies. All [...]\n Prostate-3T - The Prostate-3T project provided imaging data to TCIA as [...]\n Prostate-Adenocarcinoma-Broad-Cornell-2012 - Comprehensive profiling of [...]\n Prostate-Adenocarcinoma-Broad-Cornell-2013 - Comprehensive profiling of [...]\n Prostate-Adenocarcinoma-CNA-study-MSKCC - Copy-number profiling of 103 [...]\n Prostate-Adenocarcinoma-Fred-Hutchinson-CRC - Comprehensive profiling of [...]\n Prostate Adenocarcinoma (MSKCC/DFCI) - Whole Exome Sequencing of 1013 [...]\n Prostate-Adenocarcinoma-MSKCC - MSKCC Prostate Oncogenome Project. 181 [...]\n Prostate-Adenocarcinoma-Organoids-MSKCC - Exome profiling of prostate [...]\n Prostate-Adenocarcinoma-Sun-Lab - Whole-genome and Transcriptome [...]\n Prostate-Adenocarcinoma-TCGA-PanCancer-Atlas - Comprehensive TCGA [...]\n Prostate-Adenocarcinoma-TCGA - Integrated profiling of 333 primary [...]\n Prostate-Diagnosis - PCa T1- and T2-weighted magnetic resonance images [...]\n Prostate-Fused-MRI-Pathology - The Prostate Fused-MRI-Pathology [...]\n Prostate-MRI - The Prostate-MRI collection of prostate Magnetic Resonance [...]\n Prostate-R - The popular statistical package R contains a prostate cancer [...]\n QIN-PROSTATE-Repeatability - The QIN-PROSTATE-Repeatability dataset is a [...]\n QIN-PROSTATE - The QIN PROSTATE collection of the Quantitative Imaging [...]\n SEER-YR1973_2015.SEER9 - The SEER November 2017 Research Data files from [...]\n SEER-YR1992_2015.SJ_LA_RG_AK - The SEER November 2017 Research Data files [...]\n SEER-YR2000_2015.CA_KY_LO_NJ_GA - The SEER November 2017 Research Data [...]\n SEER-YR2000_2015.CA_KY_LO_NJ_GA - The July - December 2005 diagnoses for [...]\n TCGA-PRAD-US - TCGA Prostate Adenocarcinoma (499 samples).\n\n\nPsychology+Cognition\n\n OSU Cognitive Modeling Repository Datasets [fixme]\n\n\nPublicDomains\n\n Amazon\n Archive.org Datasets\n Archive-it from Internet Archive\n CMU JASA data archive\n CMU StatLab collections\n Data.World [fixme]\n Data360\n Enigma Public\n Google\n Grand Comics Database - The Grand Comics Database (GCD) is a nonprofit, [...]\n Infochimps [fixme]\n KDNuggets Data Collections\n Microsoft Azure Data Market Free DataSets\n Microsoft Data Science for Research\n Microsoft Research Open Data\n Numbray\n Open Library Data Dumps\n Reddit Datasets\n RevolutionAnalytics Collection\n Sample R data sets\n StatSci.org\n Stats4Stem R data sets (archived)\n The Washington Post List\n UCLA SOCR data collection\n UFO Reports\n Wikileaks 911 pager intercepts\n Yahoo Webscope\n\n\nSearchEngines\n\n Academic Torrents of data sharing from UMB\n DataMarket (Qlik) [fixme]\n Datahub.io\n Harvard Dataverse Network of scientific data\n ICPSR (UMICH)\n Institute of Education Sciences\n National Technical Reports Library\n Open Data Certificates (beta)\n OpenDataNetwork - A search engine of all Socrata powered data portals\n Statista.com - statistics and Studies\n Zenodo - An open dependable home for the long-tail of science\n\n\nSocialNetworks\n\n 72 hours #gamergate Twitter Scrape\n Ancestry.com Forum Dataset over 10 years\n CMU Enron Email of 150 users\n Cheng-Caverlee-Lee September 2009 - January 2010 Twitter Scrape\n EDRM Enron EMail of 151 users, hosted on S3\n Facebook Data Scrape (2005)\n Facebook Social Networks from LAW (since 2007)\n Foursquare from UMN/Sarwat (2013)\n GitHub Collaboration Archive\n Google Scholar citation relations [fixme]\n High-Resolution Contact Networks from Wearable Sensors\n Indie Map: social graph and crawl of top IndieWeb sites\n Mobile Social Networks from UMASS\n Network Twitter Data\n Reddit Comments\n Skytrax' Air Travel Reviews Dataset\n Social Twitter Data\n SourceForge.net Research Data\n Twitter Data for Online Reputation Management\n Twitter Data for Sentiment Analysis\n Twitter Graph of entire Twitter site\n Twitter Scrape Calufa May 2011 [fixme]\n UNIMI/LAW Social Network Datasets\n United States Congress Twitter Data - Daily datasets with tweets of 1100+ [...]\n Yahoo! Graph and Social Data\n Youtube Video Social Graph in 2007,2008\n\n\nSocialSciences\n\n ACLED (Armed Conflict Location & Event Data Project)\n Canadian Legal Information Institute\n Center for Systemic Peace Datasets - Conflict Trends, Polities, State Fragility, etc [fixme]\n Correlates of War Project\n Cryptome Conspiracy Theory Items\n Datacards [fixme]\n European Social Survey\n FBI Hate Crime 2013 - aggregated data\n Fragile States Index [fixme]\n GDELT Global Events Database\n General Social Survey (GSS) since 1972\n German Social Survey\n Global Religious Futures Project\n Gun Violence Data - A comprehensive, accessible database that contains [...]\n Humanitarian Data Exchange\n INFORM Index for Risk Management [fixme]\n Institute for Demographic Studies\n International Networks Archive\n International Social Survey Program ISSP\n International Studies Compendium Project\n James McGuire Cross National Data\n MIT Reality Mining Dataset\n MacroData Guide by Norsk samfunnsvitenskapelig datatjeneste\n Microsoft Academic Knowledge Graph - The Microsoft Academic Knowledge [...]\n Minnesota Population Center\n Notre Dame Global Adaptation Index (ND-GAIN)\n Open Crime and Policing Data in England, Wales and Northern Ireland\n OpenSanctions - A global database of persons and companies of political, [...]\n Paul Hensel General International Data Page\n PewResearch Internet Survey Project\n PewResearch Society Data Collection\n Political Polarity Data [fixme]\n StackExchange Data Explorer\n Terrorism Research and Analysis Consortium\n Texas Inmates Executed Since 1984\n Titanic Survival Data Set\n UCB's Archive of Social Science Data (D-Lab) [fixme]\n UCLA Social Sciences Data Archive\n UN Civil Society Database\n UPJOHN for Labor Employment Research\n Universities Worldwide\n Uppsala Conflict Data Program\n World Bank Open Data\n WorldPop project - Worldwide human population distributions\n\n\nSoftware\n\n FLOSSmole data about free, libre, and open source software development\n GHTorrent - Scalable, queriable, offline mirror of data offered through [...]\n Libraries.io Open Source Repository and Dependency Metadata\n Public Git Archive - a Big Code dataset for all \u2013 dataset of 182,014 top- [...]\n Code duplicates - 2k Java file and 600 Java function pairs labeled as [...]\n Commit messages - 1.3 billion GitHub commit messages till March 2019\n Pull Request review comments - 25.3 million GitHub PR review comments [...]\n Source Code Identifiers - 41.7 million distinct splittable identifiers [...]\n\n\nSports\n\n American Ninja Warrior Obstacles - Contains every obstacle in the history [...]\n Betfair Historical Exchange Data\n Cricsheet Matches (cricket)\n Ergast Formula 1, from 1950 up to date (API)\n Football/Soccer resources (data and APIs)\n Lahman's Baseball Database\n Pinhooker: Thoroughbred Bloodstock Sale Data\n Pro Kabadi season 1 to 7 - Pro Kabadi League is a professional-level [...]\n Retrosheet Baseball Statistics\n Tennis database of rankings, results, and stats for ATP\n Tennis database of rankings, results, and stats for WTA\n\n\nTimeSeries\n\n 3W dataset - To the best of its authors' knowledge, this is the first [...]\n Databanks International Cross National Time Series Data Archive\n Hard Drive Failure Rates\n Heart Rate Time Series from MIT\n Time Series Data Library (TSDL) from MU [fixme]\n UC Riverside Time Series Dataset\n\n\nTransportation\n\n Airlines OD Data 1987-2008\n Ford GoBike Data (formerly Bay Area Bike Share Data)\n Bike Share Systems (BSS) collection\n Dutch Traffic Information\n GeoLife GPS Trajectory from Microsoft Research\n German train system by Deutsche Bahn\n Hubway Million Rides in MA [fixme]\n Montreal BIXI Bike Share\n NYC Taxi Trip Data 2009-\n NYC Taxi Trip Data 2013 (FOIA/FOILed)\n NYC Uber trip data April 2014 to September 2014\n Open Traffic collection\n OpenFlights - airport, airline and route data\n Philadelphia Bike Share Stations (JSON)\n Plane Crash Database, since 1920\n RITA Airline On-Time Performance data\n RITA/BTS transport data collection (TranStat)\n Renfe (Spanish National Railway Network) dataset\n Toronto Bike Share Stations (JSON and GBFS files)\n Transport for London (TFL)\n Travel Tracker Survey (TTS) for Chicago\n U.S. Bureau of Transportation Statistics (BTS)\n U.S. Domestic Flights 1990 to 2009\n U.S. Freight Analysis Framework since 2007\n\n\neSports\n\n OpenDota data dump\n\n\nComplementary Collections\n\nData Packaged Core Datasets\nDatabase of Scientific Code Contributions\nA growing collection of public datasets: CoolDatasets.\nDataWrangling: Some Datasets Available on the Web\nInside-r: Finding Data on the Internet\nOpenDataMonitor: An overview of available open data resources in Europe\nQuora: Where can I find large datasets open to the public?\nRS.io: 100+ Interesting Data Sets for Statistics\nStaTrek: Leveraging open data to understand urban lives\n\n\n"}, {"repo": "NARKOZ/hacker-scripts", "language": "JavaScript", "readme": "\nHacker Scripts\nBased on a true\nstory:\n\nxxx: OK, so, our build engineer has left for another company. The dude was literally living inside the terminal. You know, that type of a guy who loves Vim, creates diagrams in Dot and writes wiki-posts in Markdown... If something - anything - requires more than 90 seconds of his time, he writes a script to automate that.\n\n\nxxx: So we're sitting here, looking through his, uhm, \"legacy\"\n\n\nxxx: You're gonna love this\n\n\nxxx: smack-my-bitch-up.sh - sends a text message \"late at work\" to his wife (apparently). Automatically picks reasons from an array of strings, randomly. Runs inside a cron-job. The job fires if there are active SSH-sessions on the server after 9pm with his login.\n\n\nxxx: kumar-asshole.sh - scans the inbox for emails from \"Kumar\" (a DBA at our clients). Looks for keywords like \"help\", \"trouble\", \"sorry\" etc. If keywords are found - the script SSHes into the clients server and rolls back the staging database to the latest backup. Then sends a reply \"no worries mate, be careful next time\".\n\n\nxxx: hangover.sh - another cron-job that is set to specific dates. Sends automated emails like \"not feeling well/gonna work from home\" etc. Adds a random \"reason\" from another predefined array of strings. Fires if there are no interactive sessions on the server at 8:45am.\n\n\nxxx: (and the oscar goes to) fucking-coffee.sh - this one waits exactly 17 seconds (!), then opens a telnet session to our coffee-machine (we had no frikin idea the coffee machine is on the network, runs linux and has a TCP socket up and running) and sends something like sys brew. Turns out this thing starts brewing a mid-sized half-caf latte and waits another 24 (!) seconds before pouring it into a cup. The timing is exactly how long it takes to walk to the machine from the dudes desk.\n\n\nxxx: holy sh*t I'm keeping those\n\nOriginal: http://bash.im/quote/436725 (in Russian)\nPull requests with other implementations (Python, Perl, Shell, etc) are welcome.\nUsage\nYou need these environment variables:\n# used in `smack-my-bitch-up` and `hangover` scripts\nTWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nTWILIO_AUTH_TOKEN=yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n\n# used in `kumar_asshole` script\nGMAIL_USERNAME=admin@example.org\nGMAIL_PASSWORD=password\nFor Ruby scripts you need to install gems:\ngem install dotenv twilio-ruby gmail\nCron jobs\n# Runs `smack-my-bitch-up.sh` monday to friday at 9:20 pm.\n20 21 * * 1-5 /path/to/scripts/smack-my-bitch-up.sh >> /path/to/smack-my-bitch-up.log 2>&1\n\n# Runs `hangover.sh` monday to friday at 8:45 am.\n45 8 * * 1-5 /path/to/scripts/hangover.sh >> /path/to/hangover.log 2>&1\n\n# Runs `kumar-asshole.sh` every 10 minutes.\n*/10 * * * * /path/to/scripts/kumar-asshole.sh\n\n# Runs `fucking-coffee.sh` hourly from 9am to 6pm on weekdays.\n0 9-18 * * 1-5 /path/to/scripts/fucking-coffee.sh\n\nCode is released under WTFPL.\n\n"}, {"repo": "nwjs/nw.js", "language": "C++", "readme": "\nnode-webkit is renamed NW.js\n\nOfficial site: https://nwjs.io\nIntroduction\nNW.js is an app runtime based on Chromium and node.js. You can\nwrite native apps in HTML and JavaScript with NW.js. It also lets you\ncall Node.js modules directly from the DOM and enables a new way of writing\nnative applications with all Web technologies.\nIt was created in the Intel Open Source Technology Center.\nBuilding a Cross-platform Desktop App with NW.js\nCreating Desktop Applications With node-webkit\nWebApp to DesktopApp with node-webkit (slides)\nEssay on the history and internals of the project\nFeatures\n\nApps written in modern HTML5, CSS3, JS and WebGL.\nComplete support for Node.js APIs and all its third party modules.\nGood performance: Node and WebKit run in the same thread: Function calls are made straightforward; objects are in the same heap and can just reference each other.\nEasy to package and distribute apps.\nAvailable on Linux, Mac OS X and Windows.\n\nDownloads\n\n\nv0.43.0: (Dec 11, 2019, based off of Node.js v13.3.0, Chromium 79.0.3945.79) : release notes\nNOTE You might want the SDK build. Please read the release notes.\n\n\nLinux: 32bit / 64bit\n\n\nWindows: 32bit / 64bit\n\n\nMac 10.10+: 64bit\n\n\nUse Legacy build for Win XP and early OSX.\n\n\nlatest nightly build from git tip: https://dl.nwjs.io/live-build/\n\n\nPrevious versions; See the mapping file for the version info in previous releases.\n\n\nDemos and real apps\nYou may also be interested in our demos repository and the List of apps and companies using nw.js.\nQuick Start\nCreate index.html:\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Hello World!</title>\n  </head>\n  <body>\n    <h1>Hello World!</h1>\n    We are using node.js <script>document.write(process.version)</script>.\n  </body>\n</html>\nCreate package.json:\n{\n  \"name\": \"nw-demo\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index.html\"\n}\nRun:\n$ /path/to/nw .  (suppose the current directory contains 'package.json')\nNote: on Windows, you can drag the folder containing package.json to nw.exe to open it.\nNote: on OSX, the executable binary is in a hidden directory within the .app file. To run node-webkit on OSX, type:\n/path/to/nwjs.app/Contents/MacOS/nwjs . (suppose the current directory contains 'package.json')\nDocuments\nOfficial documentation: http://docs.nwjs.io/\nFor more information on how to write/package/run apps, see:\n\nHow to run apps\nHow to package and distribute your apps\nHow to use Node.js modules in node-webkit\n\nAnd our Wiki for much more.\nCommunity\nWe use the google group as\nour mailing list (use English only). Subscribe via nwjs-general+subscribe@googlegroups.com.\nNOTE: Links to the old google group (e.g. https://groups.google.com/forum/#!msg/node-webkit/doRWZ07LgWQ/4fheV8FF8zsJ) that are no longer working can be fixed by replacing node-webkit with nwjs-general (e.g https://groups.google.com/forum/#!msg/nwjs-general/doRWZ07LgWQ/4fheV8FF8zsJ).\nIssues are being tracked here on GitHub.\nThe source code for NW.js and the daily development spans across multiple repositories in this organization. This repository is for the purpose of issue tracking, landing page and part of the source code.\nVerifying Binaries\nStarting from 0.32.0 the stable and nightly download directories contain a SHASUMS256.txt\nfile that lists the SHA checksums for each file available for download, as well as the\nchecksums for the files inside the download package.\nThe SHASUMS256.txt can be downloaded using curl.\n$ curl -O https://dl.nwjs.io/vx.y.z/SHASUMS256.txt\nTo check that a downloaded file matches the checksum, run\nit through sha256sum with a command such as:\n$ grep nwjs-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -\nThe stable releases (but not Nightlies) also have the GPG detached\nsignature of SHASUMS256.txt available as SHASUMS256.txt.asc. You can use gpg\nto verify that SHASUMS256.txt has not been tampered with.\nTo verify SHASUMS256.txt has not been altered, you will first need to import\nthe GPG key of NW.js maintainer to create releases.\nUse this command to import the key:\n$ gpg --keyserver pool.sks-keyservers.net --recv-keys 78680FA9E21BB40A\n(Key fingerprint is 1E8B EE8D 5B0C 4CBC D6D1  9E26 7868 0FA9 E21B B40A)\n\nNext, download the SHASUMS256.txt.asc for the release:\n$ curl -O https://dl.nwjs.io/vx.y.z/SHASUMS256.txt.asc\nAfter downloading the appropriate SHASUMS256.txt and SHASUMS256.txt.asc files,\nyou can then use gpg --verify SHASUMS256.txt.asc SHASUMS256.txt to verify\nthat the file has been signed by an authorized member of the NW.js team.\nOnce verified, use the SHASUMS256.txt file to get the checksum for\nthe binary verification command above.\nLicense\nNW.js's code in this repo uses the MIT license, see our LICENSE file. To redistribute the binary, see How to package and distribute your apps\n\n"}, {"repo": "aymericdamien/TensorFlow-Examples", "language": "Jupyter Notebook", "readme": "\nTensorFlow Examples\nThis tutorial was designed for easily diving into TensorFlow, through examples. For readability, it includes both notebooks and source codes with explanation, for both TF v1 & v2.\nIt is suitable for beginners who want to find clear and concise examples about TensorFlow. Besides the traditional 'raw' TensorFlow implementations, you can also find the latest TensorFlow API practices (such as layers, estimator, dataset, ...).\nUpdate (08/17/2019): Added new TensorFlow 2.0 examples! (more coming soon).\nIf you are using older TensorFlow version (0.11 and under), please take a look here.\nTutorial index\n0 - Prerequisite\n\nIntroduction to Machine Learning.\nIntroduction to MNIST Dataset.\n\n1 - Introduction\n\nHello World (notebook) (code). Very simple example to learn how to print \"hello world\" using TensorFlow.\nBasic Operations (notebook) (code). A simple example that cover TensorFlow basic operations.\nTensorFlow Eager API basics (notebook) (code). Get started with TensorFlow's Eager API.\n\n2 - Basic Models\n\nLinear Regression (notebook) (code). Implement a Linear Regression with TensorFlow.\nLinear Regression (eager api) (notebook) (code). Implement a Linear Regression using TensorFlow's Eager API.\nLogistic Regression (notebook) (code). Implement a Logistic Regression with TensorFlow.\nLogistic Regression (eager api) (notebook) (code). Implement a Logistic Regression using TensorFlow's Eager API.\nNearest Neighbor (notebook) (code). Implement Nearest Neighbor algorithm with TensorFlow.\nK-Means (notebook) (code). Build a K-Means classifier with TensorFlow.\nRandom Forest (notebook) (code). Build a Random Forest classifier with TensorFlow.\nGradient Boosted Decision Tree (GBDT) (notebook) (code). Build a Gradient Boosted Decision Tree (GBDT) with TensorFlow.\nWord2Vec (Word Embedding) (notebook) (code). Build a Word Embedding Model (Word2Vec) from Wikipedia data, with TensorFlow.\n\n3 - Neural Networks\nSupervised\n\nSimple Neural Network (notebook) (code). Build a simple neural network (a.k.a Multi-layer Perceptron) to classify MNIST digits dataset. Raw TensorFlow implementation.\nSimple Neural Network (tf.layers/estimator api) (notebook) (code). Use TensorFlow 'layers' and 'estimator' API to build a simple neural network (a.k.a Multi-layer Perceptron) to classify MNIST digits dataset.\nSimple Neural Network (eager api) (notebook) (code). Use TensorFlow Eager API to build a simple neural network (a.k.a Multi-layer Perceptron) to classify MNIST digits dataset.\nConvolutional Neural Network (notebook) (code). Build a convolutional neural network to classify MNIST digits dataset. Raw TensorFlow implementation.\nConvolutional Neural Network (tf.layers/estimator api) (notebook) (code). Use TensorFlow 'layers' and 'estimator' API to build a convolutional neural network to classify MNIST digits dataset.\nRecurrent Neural Network (LSTM) (notebook) (code). Build a recurrent neural network (LSTM) to classify MNIST digits dataset.\nBi-directional Recurrent Neural Network (LSTM) (notebook) (code). Build a bi-directional recurrent neural network (LSTM) to classify MNIST digits dataset.\nDynamic Recurrent Neural Network (LSTM) (notebook) (code). Build a recurrent neural network (LSTM) that performs dynamic calculation to classify sequences of different length.\n\nUnsupervised\n\nAuto-Encoder (notebook) (code). Build an auto-encoder to encode an image to a lower dimension and re-construct it.\nVariational Auto-Encoder (notebook) (code). Build a variational auto-encoder (VAE), to encode and generate images from noise.\nGAN (Generative Adversarial Networks) (notebook) (code). Build a Generative Adversarial Network (GAN) to generate images from noise.\nDCGAN (Deep Convolutional Generative Adversarial Networks) (notebook) (code). Build a Deep Convolutional Generative Adversarial Network (DCGAN) to generate images from noise.\n\n4 - Utilities\n\nSave and Restore a model (notebook) (code). Save and Restore a model with TensorFlow.\nTensorboard - Graph and loss visualization (notebook) (code). Use Tensorboard to visualize the computation Graph and plot the loss.\nTensorboard - Advanced visualization (notebook) (code). Going deeper into Tensorboard; visualize the variables, gradients, and more...\n\n5 - Data Management\n\nBuild an image dataset (notebook) (code). Build your own images dataset with TensorFlow data queues, from image folders or a dataset file.\nTensorFlow Dataset API (notebook) (code). Introducing TensorFlow Dataset API for optimizing the input data pipeline.\nLoad and Parse data (notebook). Build efficient data pipeline (Numpy arrays, Images, CSV files, custom data, ...).\nBuild and Load TFRecords (notebook). Convert data into TFRecords format, and load them.\nImage Transformation (i.e. Image Augmentation) (notebook). Apply various image augmentation techniques, to generate distorted images for training.\n\n6 - Multi GPU\n\nBasic Operations on multi-GPU (notebook) (code). A simple example to introduce multi-GPU in TensorFlow.\nTrain a Neural Network on multi-GPU (notebook) (code). A clear and simple TensorFlow implementation to train a convolutional neural network on multiple GPUs.\n\nTensorFlow 2.0\nThe tutorial index for TF v2 is available here: TensorFlow 2.0 Examples.\nDataset\nSome examples require MNIST dataset for training and testing. Don't worry, this dataset will automatically be downloaded when running examples.\nMNIST is a database of handwritten digits, for a quick description of that dataset, you can check this notebook.\nOfficial Website: http://yann.lecun.com/exdb/mnist/.\nInstallation\nTo download all the examples, simply clone this repository:\ngit clone https://github.com/aymericdamien/TensorFlow-Examples\n\nTo run them, you also need the latest version of TensorFlow. To install it:\npip install tensorflow\n\nor (with GPU support):\npip install tensorflow_gpu\n\nFor more details about TensorFlow installation, you can check TensorFlow Installation Guide\nMore Examples\nThe following examples are coming from TFLearn, a library that provides a simplified interface for TensorFlow. You can have a look, there are many examples and pre-built operations and layers.\nTutorials\n\nTFLearn Quickstart. Learn the basics of TFLearn through a concrete machine learning task. Build and train a deep neural network classifier.\n\nExamples\n\nTFLearn Examples. A large collection of examples using TFLearn.\n\n\n"}, {"repo": "scutan90/DeepLearning-500-questions", "language": "None", "readme": "\n\u7981\u6b62\u8f6c\u8f7d\uff0c\u7981\u6b62\u8f6c\u8f7d\uff0c\u7981\u6b62\u8f6c\u8f7d\uff01\nGitHub\u4e0a\u975e\u6700\u65b0\u5185\u5bb9\uff0c\u6700\u65b0\u5185\u5bb9\u8bf7\u671f\u5f85\u65b0\u4e66\u3002\n\u8bf7\u63d0\u4ea4\u5185\u5bb9\u7684\u5404\u4f4d\uff0c\u79c1\u52a0\u5fae\u4fe1tan_weixin88.\u63d0\u4ea4\u4e2a\u4eba\u4fe1\u606f\uff1a\u59d3\u540d-\u6bd5\u4e1a\u5b66\u6821-\u5b66\u5386-\u5de5\u4f5c\u5355\u4f4d-\u804c\u4f4d-\u7535\u8bdd-\u90ae\u7bb1\n\u5b66\u4e60\u4ea4\u6d41\u7fa4\n\n\n    \u5b66\u4e60\u4ea4\u6d41\u7fa4\n\n\u7406\u89e3CNN\u3001CNN\u53ef\u89c6\u5316  CNN-Visualization\nhttps://github.com/scutan90/CNN-Visualization\n\u6df1\u5ea6\u5b66\u4e60\u4e73\u817a\u764c\u8bc6\u522b\u4e0e\u8bca\u65ad\nhttps://github.com/scutan90/Breast-imaging-Deeplearning\n\u82f1\u6587\u7248\u672c\nEnglish version\n1. \u7248\u6743\u58f0\u660e\n\u8bf7\u5c0a\u91cd\u4f5c\u8005\u7684\u77e5\u8bc6\u4ea7\u6743\uff0c\u7248\u6743\u6240\u6709\uff0c\u7ffb\u7248\u5fc5\u7a76\u3002   \u672a\u7ecf\u8bb8\u53ef\uff0c\u4e25\u7981\u8f6c\u53d1\u5185\u5bb9\uff01\n\u8bf7\u5927\u5bb6\u4e00\u8d77\u7ef4\u62a4\u81ea\u5df1\u7684\u52b3\u52a8\u6210\u679c\uff0c\u8fdb\u884c\u76d1\u7763\u3002  \u672a\u7ecf\u8bb8\u53ef\uff0c \u4e25\u7981\u8f6c\u53d1\u5185\u5bb9\uff01 \u3000\u3000\u3000\n2018.6.27 TanJiyong\n2. \u6982\u8ff0\n\u672c\u9879\u76ee\u662f\u5927\u5bb6\u5bf9AI\u7684\u76f8\u5173\u77e5\u8bc6\u8fdb\u884c\u6574\u5408\uff0c\u96c6\u601d\u5e7f\u76ca\uff0c\u4ee5\u4fbf\u5f62\u6210 \u5185\u5bb9\u5145\u5b9e\uff0c\u8986\u76d6\u5168\u9762\u7684\u6587\u96c6\u3002\n3. \u52a0\u5165\u4ee5\u53ca\u6587\u6863\u89c4\u8303\n1\u3001\u5bfb\u6c42\u6709\u613f\u610f\u7ee7\u7eed\u5b8c\u5584\u7684\u670b\u53cb\u3001\u7f16\u8f91\u3001\u5199\u624b\uff1b\u5982\u6709\u610f\u5408\u4f5c\uff0c\u5b8c\u5584\u51fa\u4e66\uff08\u6210\u4e3a\u5171\u540c\u4f5c\u8005\uff09\u3002\n2\u3001\u6240\u6709\u63d0\u4ea4\u5185\u5bb9\u7684\u8d21\u732e\u8005\uff0c\u5c06\u4f1a\u5728\u6587\u4e2d\u4f53\u73b0\u8d21\u732e\u8005\u4e2a\u4eba\u4fe1\u606f\uff08\u4f8b\uff1a\u5927\u4f6c-\u897f\u6e56\u5927\u5b66\uff09\n3\u3001\u4e3a\u4e86\u8ba9\u5185\u5bb9\u66f4\u5145\u5b9e\u5b8c\u5584\uff0c\u96c6\u601d\u5e7f\u76ca\uff0c\u6b22\u8fceFork\u8be5\u9879\u76ee\u5e76\u53c2\u4e0e\u7f16\u5199\u3002\u8bf7\u5728\u4fee\u6539MD\u6587\u4ef6\u7684\u540c\u65f6\uff08\u6216\u76f4\u63a5\u7559\u8a00\uff09\u5907\u6ce8\u81ea\u5df1\u7684\u59d3\u540d\uff0d\u5355\u4f4d\uff08\u5927\u4f6c\uff0d\u65af\u5766\u798f\u5927\u5b66\uff09\uff0c\u4e00\u7ecf\u91c7\u7eb3\uff0c\u4f1a\u5728\u539f\u6587\u4e2d\u663e\u793a\u8d21\u732e\u8005\u7684\u4fe1\u606f\uff0c\u8c22\u8c22\uff01\n4\u3001\u63a8\u8350\u4f7f\u7528typora-Markdown\u9605\u8bfb\u5668\uff1ahttps://typora.io/\n\u8bbe\u7f6e\uff1a\n\u6587\u4ef6->\u504f\u597d\u8bbe\u7f6e\n\nMarkdown\u6269\u5c55\u8bed\u6cd5\n\n\u5185\u8054\u516c\u5f0f\n\u4e0b\u6807\n\u4e0a\u6807\n\u9ad8\u4eae\n\u56fe\u8868\n\n\n\n\u90fd\u6253\u52fe\n\n\u6570\u5b66\u516c\u5f0f\n\n\u81ea\u52a8\u6dfb\u52a0\u5e8f\u53f7\n\n\n\n\u90fd\u6253\u52fe\n\u4f8b\u5b50\uff1a\n### 3.3.2 \u5982\u4f55\u5bfb\u627e\u8d85\u53c2\u6570\u7684\u6700\u4f18\u503c\uff1f\uff08\u8d21\u732e\u8005\uff1a\u5927\u4f6c\uff0d\u65af\u5766\u798f\u5927\u5b66\uff09\n\n\u5728\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u65f6\uff0c\u603b\u6709\u4e00\u4e9b\u96be\u641e\u7684\u8d85\u53c2\u6570\u3002\u4f8b\u5982\u6743\u91cd\u8870\u51cf\u5927\u5c0f\uff0c\u9ad8\u65af\u6838\u5bbd\u5ea6\u7b49\u7b49\u3002\u7b97\u6cd5\u4e0d\u4f1a\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\uff0c\u800c\u662f\u9700\u8981\u4f60\u53bb\u8bbe\u7f6e\u5b83\u4eec\u7684\u503c\u3002\u8bbe\u7f6e\u7684\u503c\u5bf9\u7ed3\u679c\u4ea7\u751f\u8f83\u5927\u5f71\u54cd\u3002\u5e38\u89c1\u8bbe\u7f6e\u8d85\u53c2\u6570\u7684\u505a\u6cd5\u6709\uff1a\n\n1. \u731c\u6d4b\u548c\u68c0\u67e5\uff1a\u6839\u636e\u7ecf\u9a8c\u6216\u76f4\u89c9\uff0c\u9009\u62e9\u53c2\u6570\uff0c\u4e00\u76f4\u8fed\u4ee3\u3002\n2. \u7f51\u683c\u641c\u7d22\uff1a\u8ba9\u8ba1\u7b97\u673a\u5c1d\u8bd5\u5728\u4e00\u5b9a\u8303\u56f4\u5185\u5747\u5300\u5206\u5e03\u7684\u4e00\u7ec4\u503c\u3002\n3. \u968f\u673a\u641c\u7d22\uff1a\u8ba9\u8ba1\u7b97\u673a\u968f\u673a\u6311\u9009\u4e00\u7ec4\u503c\u3002\n4. \u8d1d\u53f6\u65af\u4f18\u5316\uff1a\u4f7f\u7528\u8d1d\u53f6\u65af\u4f18\u5316\u8d85\u53c2\u6570\uff0c\u4f1a\u9047\u5230\u8d1d\u53f6\u65af\u4f18\u5316\u7b97\u6cd5\u672c\u8eab\u5c31\u9700\u8981\u5f88\u591a\u7684\u53c2\u6570\u7684\u56f0\u96be\u3002\n5. \u5728\u826f\u597d\u521d\u59cb\u731c\u6d4b\u7684\u524d\u63d0\u4e0b\u8fdb\u884c\u5c40\u90e8\u4f18\u5316\uff1a\u8fd9\u5c31\u662f MITIE \u7684\u65b9\u6cd5\uff0c\u5b83\u4f7f\u7528 BOBYQA \u7b97\u6cd5\uff0c\u5e76\u6709\u4e00\u4e2a\u7cbe\u5fc3\u9009\u62e9\u7684\u8d77\u59cb\u70b9\u3002\u7531\u4e8e BOBYQA \u53ea\u5bfb\u627e\u6700\u8fd1\u7684\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5426\u6210\u529f\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u662f\u5426\u6709\u4e00\u4e2a\u597d\u7684\u8d77\u70b9\u3002\u5728 MITIE \u7684\u60c5\u4e0b,\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u597d\u7684\u8d77\u70b9\uff0c\u4f46\u8fd9\u4e0d\u662f\u4e00\u4e2a\u666e\u904d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\u901a\u5e38\u4f60\u4e0d\u4f1a\u77e5\u9053\u597d\u7684\u8d77\u70b9\u5728\u54ea\u91cc\u3002\u4ece\u597d\u7684\u65b9\u9762\u6765\u8bf4\uff0c\u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u9002\u5408\u5bfb\u627e\u5c40\u90e8\u6700\u4f18\u89e3\u3002\u7a0d\u540e\u6211\u4f1a\u518d\u8ba8\u8bba\u8fd9\u4e00\u70b9\u3002\n6. \u6700\u65b0\u63d0\u51fa\u7684 LIPO \u7684\u5168\u5c40\u4f18\u5316\u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u6ca1\u6709\u53c2\u6570\uff0c\u800c\u4e14\u7ecf\u9a8c\u8bc1\u6bd4\u968f\u673a\u641c\u7d22\u65b9\u6cd5\u597d\u3002\n4. \u8d21\u732e\u4e0e\u9879\u76ee\u6982\u89c8\n\u5df2\u63d0\u4ea4MD\u7248\u672c\u7ae0\u8282\uff1a\u8bf7\u67e5\u770bMarkDown\n5. \u66f4\u591a\n\n\n\u5bfb\u6c42\u6709\u613f\u610f\u7ee7\u7eed\u5b8c\u5584\u7684\u670b\u53cb\u3001\u7f16\u8f91\u3001\u5199\u624b; \u5982\u6709\u610f\u5408\u4f5c\uff0c\u5b8c\u5584\u51fa\u4e66\uff08\u6210\u4e3a\u5171\u540c\u4f5c\u8005\uff09\u3002\n\u6240\u6709\u63d0\u4ea4\u5185\u5bb9\u7684\u8d21\u732e\u8005\uff0c\u5c06\u4f1a\u5728\u6587\u4e2d\u4f53\u73b0\u8d21\u732e\u8005\u4e2a\u4eba\u4fe1\u606f\uff08\u5927\u4f6c-\u897f\u6e56\u5927\u5b66\uff09\u3002\n\n\n\u8054\u7cfb\u65b9\u5f0f\uff1a\u8bf7\u8054\u7cfbscutjy2015@163.com\u3000(\u552f\u4e00\u5b98\u65b9\u90ae\u7bb1)\uff1b\u3000\u5fae\u4fe1Tan\uff1a\n(\u8fdb\u7fa4\u5148\u5728MD\u7248\u672c\u589e\u52a0\u3001\u6539\u5584\u3001\u63d0\u4ea4\u5185\u5bb9\u540e\uff0c\u66f4\u6613\u8fdb\u7fa4\uff0c\u4eab\u53d7\u5206\u4eab\u77e5\u8bc6\u5e2e\u52a9\u4ed6\u4eba\u3002)\n\n\n\nMarkdown\u9605\u8bfb\u5668\u63a8\u8350\uff1ahttps://typora.io/ \u514d\u8d39\u4e14\u5bf9\u4e8e\u6570\u5b66\u516c\u5f0f\u663e\u793a\u652f\u6301\u7684\u6bd4\u8f83\u597d\u3002\n\n\n\u6ce8\u610f\uff0c\u73b0\u51fa\u73b0\u4e0d\u6cd5\u5206\u5b50\u5192\u5145\u53d1\u8d77\u4eba\uff0c\u8bf7\u5e7f\u5927\u4f19\u4f34\u513f\u77e5\u6089\uff01\n\n\n\u63a5\u4e0b\u6765\uff0c\u5c06\u63d0\u4f9bMD\u7248\u672c\uff0c\u5927\u5bb6\u4e00\u8d77\u7f16\u8f91\u5b8c\u5584\uff0c\u656c\u8bf7\u671f\u5f85\uff01\u5e0c\u671b\u8e0a\u8dc3\u63d0\u5efa\u8bae\uff0c\u8865\u5145\u4fee\u6539\u5185\u5bb9\uff01\n\n\n6. \u53cb\u60c5\u94fe\u63a5\nFlyAI-AI\u7ade\u8d5b\u5e73\u53f0\n7. \u76ee\u5f55\n\u7b2c\u4e00\u7ae0 \u6570\u5b66\u57fa\u7840\t1\n1.1 \u6807\u91cf\u3001\u5411\u91cf\u3001\u5f20\u91cf\u4e4b\u95f4\u7684\u8054\u7cfb\t1\n1.2 \u5f20\u91cf\u4e0e\u77e9\u9635\u7684\u533a\u522b\uff1f\t1\n1.3 \u77e9\u9635\u548c\u5411\u91cf\u76f8\u4e58\u7ed3\u679c\t1\n1.4 \u5411\u91cf\u548c\u77e9\u9635\u7684\u8303\u6570\u5f52\u7eb3\t1\n1.5 \u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u77e9\u9635\u4e3a\u6b63\u5b9a\uff1f\t2\n1.6 \u5bfc\u6570\u504f\u5bfc\u8ba1\u7b97\t3\n1.7 \u5bfc\u6570\u548c\u504f\u5bfc\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t3\n1.8 \u7279\u5f81\u503c\u5206\u89e3\u4e0e\u7279\u5f81\u5411\u91cf\t3\n1.9 \u5947\u5f02\u503c\u4e0e\u7279\u5f81\u503c\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f\t4\n1.10 \u673a\u5668\u5b66\u4e60\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u6982\u7387\uff1f\t4\n1.11 \u53d8\u91cf\u4e0e\u968f\u673a\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t4\n1.12 \u5e38\u89c1\u6982\u7387\u5206\u5e03\uff1f\t5\n1.13 \u4e3e\u4f8b\u7406\u89e3\u6761\u4ef6\u6982\u7387\t9\n1.14 \u8054\u5408\u6982\u7387\u4e0e\u8fb9\u7f18\u6982\u7387\u8054\u7cfb\u533a\u522b\uff1f\t10\n1.15 \u6761\u4ef6\u6982\u7387\u7684\u94fe\u5f0f\u6cd5\u5219\t10\n1.16 \u72ec\u7acb\u6027\u548c\u6761\u4ef6\u72ec\u7acb\u6027\t11\n1.17 \u671f\u671b\u3001\u65b9\u5dee\u3001\u534f\u65b9\u5dee\u3001\u76f8\u5173\u7cfb\u6570\u603b\u7ed3\t11\n\u7b2c\u4e8c\u7ae0 \u673a\u5668\u5b66\u4e60\u57fa\u7840\t14\n2.1 \u5404\u79cd\u5e38\u89c1\u7b97\u6cd5\u56fe\u793a\t14\n2.2 \u76d1\u7763\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5b66\u4e60\u3001\u534a\u76d1\u7763\u5b66\u4e60\u3001\u5f31\u76d1\u7763\u5b66\u4e60\uff1f\t15\n2.3 \u76d1\u7763\u5b66\u4e60\u6709\u54ea\u4e9b\u6b65\u9aa4\t16\n2.4 \u591a\u5b9e\u4f8b\u5b66\u4e60\uff1f\t17\n2.5 \u5206\u7c7b\u7f51\u7edc\u548c\u56de\u5f52\u7684\u533a\u522b\uff1f\t17\n2.6 \u4ec0\u4e48\u662f\u795e\u7ecf\u7f51\u7edc\uff1f\t17\n2.7 \u5e38\u7528\u5206\u7c7b\u7b97\u6cd5\u7684\u4f18\u7f3a\u70b9\uff1f\t18\n2.8 \u6b63\u786e\u7387\u80fd\u5f88\u597d\u7684\u8bc4\u4f30\u5206\u7c7b\u7b97\u6cd5\u5417\uff1f\t20\n2.9 \u5206\u7c7b\u7b97\u6cd5\u7684\u8bc4\u4f30\u65b9\u6cd5\uff1f\t20\n2.10 \u4ec0\u4e48\u6837\u7684\u5206\u7c7b\u5668\u662f\u6700\u597d\u7684\uff1f\t22\n2.11 \u5927\u6570\u636e\u4e0e\u6df1\u5ea6\u5b66\u4e60\u7684\u5173\u7cfb\t22\n2.12 \u7406\u89e3\u5c40\u90e8\u6700\u4f18\u4e0e\u5168\u5c40\u6700\u4f18\t23\n2.13 \u7406\u89e3\u903b\u8f91\u56de\u5f52\t24\n2.14 \u903b\u8f91\u56de\u5f52\u4e0e\u6734\u7d20\u8d1d\u53f6\u65af\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t24\n2.15 \u4e3a\u4ec0\u4e48\u9700\u8981\u4ee3\u4ef7\u51fd\u6570\uff1f\t25\n2.16 \u4ee3\u4ef7\u51fd\u6570\u4f5c\u7528\u539f\u7406\u00a0\t25\n2.17 \u4e3a\u4ec0\u4e48\u4ee3\u4ef7\u51fd\u6570\u8981\u975e\u8d1f\uff1f\t26\n2.18 \u5e38\u89c1\u4ee3\u4ef7\u51fd\u6570\uff1f\t26\n2.19 \u4e3a\u4ec0\u4e48\u7528\u4ea4\u53c9\u71b5\u4ee3\u66ff\u4e8c\u6b21\u4ee3\u4ef7\u51fd\u6570\t28\n2.20 \u4ec0\u4e48\u662f\u635f\u5931\u51fd\u6570\uff1f\t28\n2.21 \u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\t28\n2.22 \u903b\u8f91\u56de\u5f52\u4e3a\u4ec0\u4e48\u4f7f\u7528\u5bf9\u6570\u635f\u5931\u51fd\u6570\uff1f\t30\n0.00 \u5bf9\u6570\u635f\u5931\u51fd\u6570\u662f\u5982\u4f55\u5ea6\u91cf\u635f\u5931\u7684\uff1f\t31\n2.23 \u673a\u5668\u5b66\u4e60\u4e2d\u4e3a\u4ec0\u4e48\u9700\u8981\u68af\u5ea6\u4e0b\u964d\uff1f\t32\n2.24 \u68af\u5ea6\u4e0b\u964d\u6cd5\u7f3a\u70b9\uff1f\t32\n2.25 \u68af\u5ea6\u4e0b\u964d\u6cd5\u76f4\u89c2\u7406\u89e3\uff1f\t32\n2.23 \u68af\u5ea6\u4e0b\u964d\u6cd5\u7b97\u6cd5\u63cf\u8ff0\uff1f\t33\n2.24 \u5982\u4f55\u5bf9\u68af\u5ea6\u4e0b\u964d\u6cd5\u8fdb\u884c\u8c03\u4f18\uff1f\t35\n2.25 \u968f\u673a\u68af\u5ea6\u548c\u6279\u91cf\u68af\u5ea6\u533a\u522b\uff1f\t35\n2.26 \u5404\u79cd\u68af\u5ea6\u4e0b\u964d\u6cd5\u6027\u80fd\u6bd4\u8f83\t37\n2.27 \u8ba1\u7b97\u56fe\u7684\u5bfc\u6570\u8ba1\u7b97\u56fe\u89e3\uff1f\t37\n2.28 \u7ebf\u6027\u5224\u522b\u5206\u6790\uff08LDA\uff09\u601d\u60f3\u603b\u7ed3\t39\n2.29 \u56fe\u89e3LDA\u6838\u5fc3\u601d\u60f3\t39\n2.30 \u4e8c\u7c7bLDA\u7b97\u6cd5\u539f\u7406\uff1f\t40\n2.30 LDA\u7b97\u6cd5\u6d41\u7a0b\u603b\u7ed3\uff1f\t41\n2.31 LDA\u548cPCA\u533a\u522b\uff1f\t41\n2.32 LDA\u4f18\u7f3a\u70b9\uff1f\t41\n2.33 \u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u601d\u60f3\u603b\u7ed3\t42\n2.34 \u56fe\u89e3PCA\u6838\u5fc3\u601d\u60f3\t42\n2.35 PCA\u7b97\u6cd5\u63a8\u7406\t43\n2.36 PCA\u7b97\u6cd5\u6d41\u7a0b\u603b\u7ed3\t44\n2.37 PCA\u7b97\u6cd5\u4e3b\u8981\u4f18\u7f3a\u70b9\t45\n2.38 \u964d\u7ef4\u7684\u5fc5\u8981\u6027\u53ca\u76ee\u7684\t45\n2.39 KPCA\u4e0ePCA\u7684\u533a\u522b\uff1f\t46\n2.40 \u6a21\u578b\u8bc4\u4f30\t47\n2.40.1\u6a21\u578b\u8bc4\u4f30\u5e38\u7528\u65b9\u6cd5\uff1f\t47\n2.40.2 \u7ecf\u9a8c\u8bef\u5dee\u4e0e\u6cdb\u5316\u8bef\u5dee\t47\n2.40.3 \u56fe\u89e3\u6b20\u62df\u5408\u3001\u8fc7\u62df\u5408\t48\n2.40.4 \u5982\u4f55\u89e3\u51b3\u8fc7\u62df\u5408\u4e0e\u6b20\u62df\u5408\uff1f\t49\n2.40.5 \u4ea4\u53c9\u9a8c\u8bc1\u7684\u4e3b\u8981\u4f5c\u7528\uff1f\t50\n2.40.6 k\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff1f\t50\n2.40.7 \u6df7\u6dc6\u77e9\u9635\t50\n2.40.8 \u9519\u8bef\u7387\u53ca\u7cbe\u5ea6\t51\n2.40.9 \u67e5\u51c6\u7387\u4e0e\u67e5\u5168\u7387\t51\n2.40.10 ROC\u4e0eAUC\t52\n2.40.11 \u5982\u4f55\u753bROC\u66f2\u7ebf\uff1f\t53\n2.40.12 \u5982\u4f55\u8ba1\u7b97TPR\uff0cFPR\uff1f\t54\n2.40.13 \u5982\u4f55\u8ba1\u7b97Auc\uff1f\t56\n2.40.14 \u4e3a\u4ec0\u4e48\u4f7f\u7528Roc\u548cAuc\u8bc4\u4ef7\u5206\u7c7b\u5668\uff1f\t56\n2.40.15 \u76f4\u89c2\u7406\u89e3AUC\t56\n2.40.16 \u4ee3\u4ef7\u654f\u611f\u9519\u8bef\u7387\u4e0e\u4ee3\u4ef7\u66f2\u7ebf\t57\n2.40.17 \u6a21\u578b\u6709\u54ea\u4e9b\u6bd4\u8f83\u68c0\u9a8c\u65b9\u6cd5\t59\n2.40.18 \u504f\u5dee\u4e0e\u65b9\u5dee\t59\n2.40.19 \u4e3a\u4ec0\u4e48\u4f7f\u7528\u6807\u51c6\u5dee\uff1f\t60\n2.40.20 \u70b9\u4f30\u8ba1\u601d\u60f3\t61\n2.40.21 \u70b9\u4f30\u8ba1\u4f18\u826f\u6027\u539f\u5219\uff1f\t61\n2.40.22 \u70b9\u4f30\u8ba1\u3001\u533a\u95f4\u4f30\u8ba1\u3001\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u4e4b\u95f4\u7684\u8054\u7cfb\uff1f\t62\n2.40.23 \u7c7b\u522b\u4e0d\u5e73\u8861\u4ea7\u751f\u539f\u56e0\uff1f\t62\n2.40.24 \u5e38\u89c1\u7684\u7c7b\u522b\u4e0d\u5e73\u8861\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5\t62\n2.41 \u51b3\u7b56\u6811\t64\n2.41.1 \u51b3\u7b56\u6811\u7684\u57fa\u672c\u539f\u7406\t64\n2.41.2 \u51b3\u7b56\u6811\u7684\u4e09\u8981\u7d20\uff1f\t64\n2.41.3 \u51b3\u7b56\u6811\u5b66\u4e60\u57fa\u672c\u7b97\u6cd5\t65\n2.41.4 \u51b3\u7b56\u6811\u7b97\u6cd5\u4f18\u7f3a\u70b9\t65\n2.40.5 \u71b5\u7684\u6982\u5ff5\u4ee5\u53ca\u7406\u89e3\t66\n2.40.6 \u4fe1\u606f\u589e\u76ca\u7684\u7406\u89e3\t66\n2.40.7 \u526a\u679d\u5904\u7406\u7684\u4f5c\u7528\u53ca\u7b56\u7565\uff1f\t67\n2.41 \u652f\u6301\u5411\u91cf\u673a\t67\n2.41.1 \u4ec0\u4e48\u662f\u652f\u6301\u5411\u91cf\u673a\t67\n2.25.2 \u652f\u6301\u5411\u91cf\u673a\u89e3\u51b3\u7684\u95ee\u9898\uff1f\t68\n2.25.2 \u6838\u51fd\u6570\u4f5c\u7528\uff1f\t69\n2.25.3 \u5bf9\u5076\u95ee\u9898\t69\n2.25.4 \u7406\u89e3\u652f\u6301\u5411\u91cf\u56de\u5f52\t69\n2.25.5 \u7406\u89e3SVM\uff08\u6838\u51fd\u6570\uff09\t69\n2.25.6 \u5e38\u89c1\u7684\u6838\u51fd\u6570\u6709\u54ea\u4e9b\uff1f\t69\n2.25.6 \u8f6f\u95f4\u9694\u4e0e\u6b63\u5219\u5316\t73\n2.25.7 SVM\u4e3b\u8981\u7279\u70b9\u53ca\u7f3a\u70b9\uff1f\t73\n2.26 \u8d1d\u53f6\u65af\t74\n2.26.1 \u56fe\u89e3\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\t74\n2.26.2 \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u548c\u4e00\u822c\u7684\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t76\n2.26.4 \u6734\u7d20\u4e0e\u534a\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\t76\n2.26.5 \u8d1d\u53f6\u65af\u7f51\u4e09\u79cd\u5178\u578b\u7ed3\u6784\t76\n2.26.6 \u4ec0\u4e48\u662f\u8d1d\u53f6\u65af\u9519\u8bef\u7387\t76\n2.26.7 \u4ec0\u4e48\u662f\u8d1d\u53f6\u65af\u6700\u4f18\u9519\u8bef\u7387\t76\n2.27 EM\u7b97\u6cd5\u89e3\u51b3\u95ee\u9898\u53ca\u5b9e\u73b0\u6d41\u7a0b\t76\n2.28 \u4e3a\u4ec0\u4e48\u4f1a\u4ea7\u751f\u7ef4\u6570\u707e\u96be\uff1f\t78\n2.29 \u600e\u6837\u907f\u514d\u7ef4\u6570\u707e\u96be\t82\n2.30 \u805a\u7c7b\u548c\u964d\u7ef4\u6709\u4ec0\u4e48\u533a\u522b\u4e0e\u8054\u7cfb\uff1f\t82\n2.31 GBDT\u548c\u968f\u673a\u68ee\u6797\u7684\u533a\u522b\t83\n2.32 \u56db\u79cd\u805a\u7c7b\u65b9\u6cd5\u4e4b\u6bd4\u8f83\t84\n\u7b2c\u4e09\u7ae0 \u6df1\u5ea6\u5b66\u4e60\u57fa\u7840\t88\n3.1 \u57fa\u672c\u6982\u5ff5\t88\n3.1.1 \u795e\u7ecf\u7f51\u7edc\u7ec4\u6210\uff1f\t88\n3.1.2 \u795e\u7ecf\u7f51\u7edc\u6709\u54ea\u4e9b\u5e38\u7528\u6a21\u578b\u7ed3\u6784\uff1f\t90\n3.1.3 \u5982\u4f55\u9009\u62e9\u6df1\u5ea6\u5b66\u4e60\u5f00\u53d1\u5e73\u53f0\uff1f\t92\n3.1.4 \u4e3a\u4ec0\u4e48\u4f7f\u7528\u6df1\u5c42\u8868\u793a\t92\n3.1.5 \u4e3a\u4ec0\u4e48\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u96be\u4ee5\u8bad\u7ec3\uff1f\t93\n3.1.6 \u6df1\u5ea6\u5b66\u4e60\u548c\u673a\u5668\u5b66\u4e60\u6709\u4ec0\u4e48\u4e0d\u540c\t94\n3.2 \u7f51\u7edc\u64cd\u4f5c\u4e0e\u8ba1\u7b97\t95\n3.2.1 \u524d\u5411\u4f20\u64ad\u4e0e\u53cd\u5411\u4f20\u64ad\uff1f\t95\n3.2.2 \u5982\u4f55\u8ba1\u7b97\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\uff1f\t97\n3.2.3 \u5982\u4f55\u8ba1\u7b97\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8f93\u51fa\u503c\uff1f\t98\n3.2.4 \u5982\u4f55\u8ba1\u7b97Pooling\u5c42\u8f93\u51fa\u503c\u8f93\u51fa\u503c\uff1f\t101\n3.2.5 \u5b9e\u4f8b\u7406\u89e3\u53cd\u5411\u4f20\u64ad\t102\n3.3 \u8d85\u53c2\u6570\t105\n3.3.1 \u4ec0\u4e48\u662f\u8d85\u53c2\u6570\uff1f\t105\n3.3.2 \u5982\u4f55\u5bfb\u627e\u8d85\u53c2\u6570\u7684\u6700\u4f18\u503c\uff1f\t105\n3.3.3 \u8d85\u53c2\u6570\u641c\u7d22\u4e00\u822c\u8fc7\u7a0b\uff1f\t106\n3.4 \u6fc0\u6d3b\u51fd\u6570\t106\n3.4.1 \u4e3a\u4ec0\u4e48\u9700\u8981\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\uff1f\t106\n3.4.2 \u5e38\u89c1\u7684\u6fc0\u6d3b\u51fd\u6570\u53ca\u56fe\u50cf\t107\n3.4.3 \u5e38\u89c1\u6fc0\u6d3b\u51fd\u6570\u7684\u5bfc\u6570\u8ba1\u7b97\uff1f\t109\n3.4.4 \u6fc0\u6d3b\u51fd\u6570\u6709\u54ea\u4e9b\u6027\u8d28\uff1f\t110\n3.4.5 \u5982\u4f55\u9009\u62e9\u6fc0\u6d3b\u51fd\u6570\uff1f\t110\n3.4.6 \u4f7f\u7528ReLu\u6fc0\u6d3b\u51fd\u6570\u7684\u4f18\u70b9\uff1f\t111\n3.4.7 \u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u7528\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\uff1f\t111\n3.4.8 \u600e\u6837\u7406\u89e3Relu\uff08<0\u65f6\uff09\u662f\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\uff1f\t 111\n3.4.9 Softmax\u51fd\u6570\u5982\u4f55\u5e94\u7528\u4e8e\u591a\u5206\u7c7b\uff1f\t112\n3.5 Batch_Size\t113\n3.5.1 \u4e3a\u4ec0\u4e48\u9700\u8981Batch_Size\uff1f\t113\n3.5.2 Batch_Size\u503c\u7684\u9009\u62e9\t114\n3.5.3 \u5728\u5408\u7406\u8303\u56f4\u5185\uff0c\u589e\u5927 Batch_Size \u6709\u4f55\u597d\u5904\uff1f\t114\n3.5.4 \u76f2\u76ee\u589e\u5927 Batch_Size \u6709\u4f55\u574f\u5904\uff1f\t114\n3.5.5 \u8c03\u8282 Batch_Size \u5bf9\u8bad\u7ec3\u6548\u679c\u5f71\u54cd\u5230\u5e95\u5982\u4f55\uff1f\t114\n3.6 \u5f52\u4e00\u5316\t115\n3.6.1 \u5f52\u4e00\u5316\u542b\u4e49\uff1f\t115\n3.6.2 \u4e3a\u4ec0\u4e48\u8981\u5f52\u4e00\u5316\t115\n3.6.3 \u4e3a\u4ec0\u4e48\u5f52\u4e00\u5316\u80fd\u63d0\u9ad8\u6c42\u89e3\u6700\u4f18\u89e3\u901f\u5ea6\uff1f\t115\n3.6.4 3D\u56fe\u89e3\u672a\u5f52\u4e00\u5316\t116\n3.6.5 \u5f52\u4e00\u5316\u6709\u54ea\u4e9b\u7c7b\u578b\uff1f\t117\n3.6.6 \u5c40\u90e8\u54cd\u5e94\u5f52\u4e00\u5316\u4f5c\u7528\t117\n3.6.7 \u7406\u89e3\u5c40\u90e8\u54cd\u5e94\u5f52\u4e00\u5316\u516c\u5f0f\t117\n3.6.8 \u4ec0\u4e48\u662f\u6279\u5f52\u4e00\u5316\uff08Batch Normalization\uff09\t118\n3.6.9 \u6279\u5f52\u4e00\u5316\uff08BN\uff09\u7b97\u6cd5\u7684\u4f18\u70b9\t119\n3.6.10 \u6279\u5f52\u4e00\u5316\uff08BN\uff09\u7b97\u6cd5\u6d41\u7a0b\t119\n3.6.11 \u6279\u5f52\u4e00\u5316\u548c\u7fa4\u7ec4\u5f52\u4e00\u5316\t120\n3.6.12 Weight Normalization\u548cBatch Normalization\t120\n3.7 \u9884\u8bad\u7ec3\u4e0e\u5fae\u8c03(fine tuning)\t121\n3.7.1 \u4e3a\u4ec0\u4e48\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\u53ef\u4ee5\u5e2e\u52a9\u6df1\u5ea6\u5b66\u4e60\uff1f\t121\n3.7.2 \u4ec0\u4e48\u662f\u6a21\u578b\u5fae\u8c03fine tuning\t121\n3.7.3 \u5fae\u8c03\u65f6\u5019\u7f51\u7edc\u53c2\u6570\u662f\u5426\u66f4\u65b0\uff1f\t122\n3.7.4 fine-tuning\u6a21\u578b\u7684\u4e09\u79cd\u72b6\u6001\t122\n3.8 \u6743\u91cd\u504f\u5dee\u521d\u59cb\u5316\t122\n3.8.1 \u5168\u90fd\u521d\u59cb\u5316\u4e3a0\t122\n3.8.2 \u5168\u90fd\u521d\u59cb\u5316\u4e3a\u540c\u6837\u7684\u503c\t123\n3.8.3 \u521d\u59cb\u5316\u4e3a\u5c0f\u7684\u968f\u673a\u6570\t124\n3.8.4 \u75281/sqrt(n)\u6821\u51c6\u65b9\u5dee\t125\n3.8.5 \u7a00\u758f\u521d\u59cb\u5316(Sparse Initialazation)\t125\n3.8.6 \u521d\u59cb\u5316\u504f\u5dee\t125\n3.9 Softmax\t126\n3.9.1 Softmax\u5b9a\u4e49\u53ca\u4f5c\u7528\t126\n3.9.2 Softmax\u63a8\u5bfc\t126\n3.10 \u7406\u89e3One Hot Encodeing\u539f\u7406\u53ca\u4f5c\u7528\uff1f\t126\n3.11 \u5e38\u7528\u7684\u4f18\u5316\u5668\u6709\u54ea\u4e9b\t127\n3.12 Dropout \u7cfb\u5217\u95ee\u9898\t128\n3.12.1 dropout\u7387\u7684\u9009\u62e9\t128\n3.27 Padding \u7cfb\u5217\u95ee\u9898\t128\n\u7b2c\u56db\u7ae0 \u7ecf\u5178\u7f51\u7edc\t129\n4.1 LetNet5\t129\n4.1.1 \u6a21\u578b\u7ed3\u6784\t129\n4.1.2 \u6a21\u578b\u7ed3\u6784\t129\n4.1.3 \u6a21\u578b\u7279\u6027\t131\n4.2 AlexNet\t131\n4.2.1 \u6a21\u578b\u7ed3\u6784\t131\n4.2.2 \u6a21\u578b\u89e3\u8bfb\t131\n4.2.3 \u6a21\u578b\u7279\u6027\t135\n4.3 \u53ef\u89c6\u5316ZFNet-\u89e3\u5377\u79ef\t135\n4.3.1 \u57fa\u672c\u7684\u601d\u60f3\u53ca\u5176\u8fc7\u7a0b\t135\n4.3.2 \u5377\u79ef\u4e0e\u89e3\u5377\u79ef\t136\n4.3.3 \u5377\u79ef\u53ef\u89c6\u5316\t137\n4.3.4 ZFNe\u548cAlexNet\u6bd4\u8f83\t139\n4.4 VGG\t140\n4.1.1 \u6a21\u578b\u7ed3\u6784\t140\n4.1.2 \u6a21\u578b\u7279\u70b9\t140\n4.5 Network in Network\t141\n4.5.1 \u6a21\u578b\u7ed3\u6784\t141\n4.5.2 \u6a21\u578b\u521b\u65b0\u70b9\t141\n4.6 GoogleNet\t143\n4.6.1 \u6a21\u578b\u7ed3\u6784\t143\n4.6.2 Inception \u7ed3\u6784\t145\n4.6.3 \u6a21\u578b\u5c42\u6b21\u5173\u7cfb\t146\n4.7 Inception \u7cfb\u5217\t148\n4.7.1 Inception v1\t148\n4.7.2 Inception v2\t150\n4.7.3 Inception v3\t153\n4.7.4 Inception V4\t155\n4.7.5 Inception-ResNet-v2\t157\n4.8 ResNet\u53ca\u5176\u53d8\u4f53\t158\n4.8.1 \u91cd\u65b0\u5ba1\u89c6ResNet\t159\n4.8.2 \u6b8b\u5dee\u5757\t160\n4.8.3 ResNet\u67b6\u6784\t162\n4.8.4 \u6b8b\u5dee\u5757\u7684\u53d8\u4f53\t162\n4.8.5 ResNeXt\t162\n4.8.6 Densely Connected CNN\t164\n4.8.7 ResNet\u4f5c\u4e3a\u5c0f\u578b\u7f51\u7edc\u7684\u7ec4\u5408\t165\n4.8.8 ResNet\u4e2d\u8def\u5f84\u7684\u7279\u70b9\t166\n4.9 \u4e3a\u4ec0\u4e48\u73b0\u5728\u7684CNN\u6a21\u578b\u90fd\u662f\u5728GoogleNet\u3001VGGNet\u6216\u8005AlexNet\u4e0a\u8c03\u6574\u7684\uff1f\t167\n\u7b2c\u4e94\u7ae0 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc(CNN)\t170\n5.1 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u7ec4\u6210\u5c42\t170\n5.2 \u5377\u79ef\u5982\u4f55\u68c0\u6d4b\u8fb9\u7f18\u4fe1\u606f\uff1f\t171\n5.2 \u5377\u79ef\u7684\u51e0\u4e2a\u57fa\u672c\u5b9a\u4e49\uff1f\t174\n5.2.1 \u5377\u79ef\u6838\u5927\u5c0f\t174\n5.2.2 \u5377\u79ef\u6838\u7684\u6b65\u957f\t174\n5.2.3 \u8fb9\u7f18\u586b\u5145\t174\n5.2.4 \u8f93\u5165\u548c\u8f93\u51fa\u901a\u9053\t174\n5.3 \u5377\u79ef\u7f51\u7edc\u7c7b\u578b\u5206\u7c7b\uff1f\t174\n5.3.1 \u666e\u901a\u5377\u79ef\t174\n5.3.2 \u6269\u5f20\u5377\u79ef\t175\n5.3.3 \u8f6c\u7f6e\u5377\u79ef\t176\n5.3.4 \u53ef\u5206\u79bb\u5377\u79ef\t177\n5.3 \u56fe\u89e312\u79cd\u4e0d\u540c\u7c7b\u578b\u76842D\u5377\u79ef\uff1f\t178\n5.4 2D\u5377\u79ef\u4e0e3D\u5377\u79ef\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t181\n5.4.1 2D \u5377\u79ef\t181\n5.4.2 3D\u5377\u79ef\t182\n5.5 \u6709\u54ea\u4e9b\u6c60\u5316\u65b9\u6cd5\uff1f\t183\n5.5.1 \u4e00\u822c\u6c60\u5316\uff08General Pooling\uff09\t183\n5.5.2 \u91cd\u53e0\u6c60\u5316\uff08OverlappingPooling\uff09\t184\n5.5.3 \u7a7a\u91d1\u5b57\u5854\u6c60\u5316\uff08Spatial Pyramid Pooling\uff09\t184\n5.6 1x1\u5377\u79ef\u4f5c\u7528\uff1f\t186\n5.7 \u5377\u79ef\u5c42\u548c\u6c60\u5316\u5c42\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u00a0\t187\n5.8 \u5377\u79ef\u6838\u4e00\u5b9a\u8d8a\u5927\u8d8a\u597d\uff1f\t189\n5.9 \u6bcf\u5c42\u5377\u79ef\u53ea\u80fd\u7528\u4e00\u79cd\u5c3a\u5bf8\u7684\u5377\u79ef\u6838\uff1f\t189\n5.10 \u600e\u6837\u624d\u80fd\u51cf\u5c11\u5377\u79ef\u5c42\u53c2\u6570\u91cf\uff1f\t190\n5.11\u5377\u79ef\u64cd\u4f5c\u65f6\u5fc5\u987b\u540c\u65f6\u8003\u8651\u901a\u9053\u548c\u533a\u57df\u5417\uff1f\t191\n5.12 \u91c7\u7528\u5bbd\u5377\u79ef\u7684\u597d\u5904\u6709\u4ec0\u4e48\uff1f\u00a0\t192\n5.12.1 \u7a84\u5377\u79ef\u548c\u5bbd\u5377\u79ef\t192\n5.12.2 \u4e3a\u4ec0\u4e48\u91c7\u7528\u5bbd\u5377\u79ef\uff1f\t192\n5.13 \u5377\u79ef\u5c42\u8f93\u51fa\u7684\u6df1\u5ea6\u4e0e\u54ea\u4e2a\u90e8\u4ef6\u7684\u4e2a\u6570\u76f8\u540c\uff1f\u00a0\t192\n5.14 \u5982\u4f55\u5f97\u5230\u5377\u79ef\u5c42\u8f93\u51fa\u7684\u6df1\u5ea6\uff1f\t193\n5.15 \u6fc0\u6d3b\u51fd\u6570\u901a\u5e38\u653e\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u90a3\u4e2a\u64cd\u4f5c\u4e4b\u540e\uff1f\u00a0\t194\n5.16 \u5982\u4f55\u7406\u89e3\u6700\u5927\u6c60\u5316\u5c42\u6709\u51e0\u5206\u7f29\u5c0f\uff1f\t194\n5.17 \u7406\u89e3\u56fe\u50cf\u5377\u79ef\u4e0e\u53cd\u5377\u79ef\t194\n5.17.1 \u56fe\u50cf\u5377\u79ef\t194\n5.17.2 \u56fe\u50cf\u53cd\u5377\u79ef\t196\n5.18 \u4e0d\u540c\u5377\u79ef\u540e\u56fe\u50cf\u5927\u5c0f\u8ba1\u7b97\uff1f\t198\n5.18.1 \u7c7b\u578b\u5212\u5206\t198\n5.18.2 \u8ba1\u7b97\u516c\u5f0f\t199\n5.19 \u6b65\u957f\u3001\u586b\u5145\u5927\u5c0f\u4e0e\u8f93\u5165\u8f93\u51fa\u5173\u7cfb\u603b\u7ed3\uff1f\t199\n5.19.1 \u6ca1\u67090\u586b\u5145\uff0c\u5355\u4f4d\u6b65\u957f\t200\n5.19.2 \u96f6\u586b\u5145\uff0c\u5355\u4f4d\u6b65\u957f\t200\n5.19.3 \u4e0d\u586b\u5145\uff0c\u975e\u5355\u4f4d\u6b65\u957f\t202\n5.19.4 \u96f6\u586b\u5145\uff0c\u975e\u5355\u4f4d\u6b65\u957f\t202\n5.20 \u7406\u89e3\u53cd\u5377\u79ef\u548c\u68cb\u76d8\u6548\u5e94\t204\n5.20.1 \u4e3a\u4ec0\u4e48\u51fa\u73b0\u68cb\u76d8\u73b0\u8c61\uff1f\t204\n5.20.2 \u6709\u54ea\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u907f\u514d\u68cb\u76d8\u6548\u5e94\uff1f\t205\n5.21 CNN\u4e3b\u8981\u7684\u8ba1\u7b97\u74f6\u9888\uff1f\t207\n5.22 CNN\u7684\u53c2\u6570\u7ecf\u9a8c\u8bbe\u7f6e\t207\n5.23 \u63d0\u9ad8\u6cdb\u5316\u80fd\u529b\u7684\u65b9\u6cd5\u603b\u7ed3\t208\n5.23.1 \u4e3b\u8981\u65b9\u6cd5\t208\n5.23.2 \u5b9e\u9a8c\u8bc1\u660e\t208\n5.24 CNN\u5728CV\u4e0eNLP\u9886\u57df\u8fd0\u7528\u7684\u8054\u7cfb\u4e0e\u533a\u522b\uff1f\t213\n5.24.1 \u8054\u7cfb\t213\n5.24.2 \u533a\u522b\t213\n5.25 CNN\u51f8\u663e\u5171\u6027\u7684\u624b\u6bb5\uff1f\t213\n5.25.1 \u5c40\u90e8\u8fde\u63a5\t213\n5.25.2 \u6743\u503c\u5171\u4eab\t214\n5.25.3 \u6c60\u5316\u64cd\u4f5c\t215\n5.26 \u5168\u5377\u79ef\u4e0eLocal-Conv\u7684\u5f02\u540c\u70b9\t215\n5.27 \u4e3e\u4f8b\u7406\u89e3Local-Conv\u7684\u4f5c\u7528\t215\n5.28 \u7b80\u8ff0\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8fdb\u5316\u53f2\t216\n\u7b2c\u516d\u7ae0 \u5faa\u73af\u795e\u7ecf\u7f51\u7edc(RNN)\t218\n6.1 RNNs\u548cFNNs\u6709\u4ec0\u4e48\u533a\u522b\uff1f\t218\n6.2 RNNs\u5178\u578b\u7279\u70b9\uff1f\t218\n6.3 RNNs\u80fd\u5e72\u4ec0\u4e48\uff1f\t219\n6.4 RNNs\u5728NLP\u4e2d\u5178\u578b\u5e94\u7528\uff1f\t220\n6.5 RNNs\u8bad\u7ec3\u548c\u4f20\u7edfANN\u8bad\u7ec3\u5f02\u540c\u70b9\uff1f\t220\n6.6 \u5e38\u89c1\u7684RNNs\u6269\u5c55\u548c\u6539\u8fdb\u6a21\u578b\t221\n6.6.1 Simple RNNs(SRNs)\t221\n6.6.2 Bidirectional RNNs\t221\n6.6.3 Deep(Bidirectional) RNNs\t222\n6.6.4 Echo State Networks\uff08ESNs\uff09\t222\n6.6.5 Gated Recurrent Unit Recurrent Neural Networks\t224\n6.6.6 LSTM Netwoorks\t224\n6.6.7 Clockwork RNNs(CW-RNNs)\t225\n\u7b2c\u4e03\u7ae0 \u76ee\u6807\u68c0\u6d4b\t228\n7.1 \u57fa\u4e8e\u5019\u9009\u533a\u57df\u7684\u76ee\u6807\u68c0\u6d4b\u5668\t228\n7.1.1 \u6ed1\u52a8\u7a97\u53e3\u68c0\u6d4b\u5668\t228\n7.1.2 \u9009\u62e9\u6027\u641c\u7d22\t229\n7.1.3 R-CNN\t230\n7.1.4 \u8fb9\u754c\u6846\u56de\u5f52\u5668\t230\n7.1.5 Fast R-CNN\t231\n7.1.6 ROI \u6c60\u5316\t233\n7.1.7 Faster R-CNN\t233\n7.1.8 \u5019\u9009\u533a\u57df\u7f51\u7edc\t234\n7.1.9 R-CNN \u65b9\u6cd5\u7684\u6027\u80fd\t236\n7.2 \u57fa\u4e8e\u533a\u57df\u7684\u5168\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08R-FCN\uff09\t237\n7.3 \u5355\u6b21\u76ee\u6807\u68c0\u6d4b\u5668\t240\n7.3.1\u5355\u6b21\u68c0\u6d4b\u5668\t241\n7.3.2 \u6ed1\u52a8\u7a97\u53e3\u8fdb\u884c\u9884\u6d4b\t241\n7.3.3 SSD\t243\n7.4 YOLO\u7cfb\u5217\t244\n7.4.1 YOLOv1\u4ecb\u7ecd\t244\n7.4.2 YOLOv1\u6a21\u578b\u4f18\u7f3a\u70b9\uff1f\t252\n7.4.3 YOLOv2\t253\n7.4.4 YOLOv2\u6539\u8fdb\u7b56\u7565\t254\n7.4.5 YOLOv2\u7684\u8bad\u7ec3\t261\n7.4.6 YOLO9000\t261\n7.4.7 YOLOv3\t263\n7.4.8 YOLOv3\u6539\u8fdb\t264\n\u7b2c\u516b\u7ae0 \u56fe\u50cf\u5206\u5272\t269\n8.1 \u4f20\u7edf\u7684\u57fa\u4e8eCNN\u7684\u5206\u5272\u65b9\u6cd5\u7f3a\u70b9\uff1f\t269\n8.1 FCN\t269\n8.1.1 FCN\u6539\u53d8\u4e86\u4ec0\u4e48?\t269\n8.1.2 FCN\u7f51\u7edc\u7ed3\u6784\uff1f\t270\n8.1.3 \u5168\u5377\u79ef\u7f51\u7edc\u4e3e\u4f8b\uff1f\t271\n8.1.4 \u4e3a\u4ec0\u4e48CNN\u5bf9\u50cf\u7d20\u7ea7\u522b\u7684\u5206\u7c7b\u5f88\u96be\uff1f\t271\n8.1.5 \u5168\u8fde\u63a5\u5c42\u548c\u5377\u79ef\u5c42\u5982\u4f55\u76f8\u4e92\u8f6c\u5316\uff1f\t272\n8.1.6 FCN\u7684\u8f93\u5165\u56fe\u7247\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u662f\u4efb\u610f\u5927\u5c0f\uff1f\t272\n8.1.7 \u628a\u5168\u8fde\u63a5\u5c42\u7684\u6743\u91cdW\u91cd\u5851\u6210\u5377\u79ef\u5c42\u7684\u6ee4\u6ce2\u5668\u6709\u4ec0\u4e48\u597d\u5904\uff1f\t273\n8.1.8 \u53cd\u5377\u79ef\u5c42\u7406\u89e3\t275\n8.1.9 \u8df3\u7ea7(skip)\u7ed3\u6784\t276\n8.1.10 \u6a21\u578b\u8bad\u7ec3\t277\n8.1.11 FCN\u7f3a\u70b9\t280\n8.2 U-Net\t280\n8.3 SegNet\t282\n8.4 \u7a7a\u6d1e\u5377\u79ef(Dilated Convolutions)\t283\n8.4 RefineNet\t285\n8.5 PSPNet\t286\n8.6 DeepLab\u7cfb\u5217\t288\n8.6.1 DeepLabv1\t288\n8.6.2 DeepLabv2\t289\n8.6.3 DeepLabv3\t289\n8.6.4 DeepLabv3+\t290\n8.7 Mask-R-CNN\t293\n8.7.1 Mask-RCNN \u7684\u7f51\u7edc\u7ed3\u6784\u793a\u610f\u56fe\t293\n8.7.2 RCNN\u884c\u4eba\u68c0\u6d4b\u6846\u67b6\t293\n8.7.3 Mask-RCNN \u6280\u672f\u8981\u70b9\t294\n8.8 CNN\u5728\u57fa\u4e8e\u5f31\u76d1\u7763\u5b66\u4e60\u7684\u56fe\u50cf\u5206\u5272\u4e2d\u7684\u5e94\u7528\t295\n8.8.1 Scribble\u6807\u8bb0\t295\n8.8.2 \u56fe\u50cf\u7ea7\u522b\u6807\u8bb0\t297\n8.8.3 DeepLab+bounding box+image-level labels\t298\n8.8.4 \u7edf\u4e00\u7684\u6846\u67b6\t299\n\u7b2c\u4e5d\u7ae0 \u5f3a\u5316\u5b66\u4e60\t301\n9.1 \u5f3a\u5316\u5b66\u4e60\u7684\u4e3b\u8981\u7279\u70b9\uff1f\t301\n9.2 \u5f3a\u5316\u5b66\u4e60\u5e94\u7528\u5b9e\u4f8b\t302\n9.3 \u5f3a\u5316\u5b66\u4e60\u548c\u76d1\u7763\u5f0f\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5f0f\u5b66\u4e60\u7684\u533a\u522b\t303\n9.4 \u5f3a\u5316\u5b66\u4e60\u4e3b\u8981\u6709\u54ea\u4e9b\u7b97\u6cd5\uff1f\t305\n9.5 \u6df1\u5ea6\u8fc1\u79fb\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\t305\n9.6 \u5206\u5c42\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\t306\n9.7 \u6df1\u5ea6\u8bb0\u5fc6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\t306\n9.8 \u591a\u667a\u80fd\u4f53\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\t307\n9.9 \u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u5c0f\u7ed3\t307\n\u7b2c\u5341\u7ae0 \u8fc1\u79fb\u5b66\u4e60\t309\n10.1 \u4ec0\u4e48\u662f\u8fc1\u79fb\u5b66\u4e60\uff1f\t309\n10.2 \u4ec0\u4e48\u662f\u591a\u4efb\u52a1\u5b66\u4e60\uff1f\t309\n10.3 \u591a\u4efb\u52a1\u5b66\u4e60\u6709\u4ec0\u4e48\u610f\u4e49\uff1f\t309\n10.4 \u4ec0\u4e48\u662f\u7aef\u5230\u7aef\u7684\u6df1\u5ea6\u5b66\u4e60\uff1f\t311\n10.5 \u7aef\u5230\u7aef\u7684\u6df1\u5ea6\u5b66\u4e60\u4e3e\u4f8b\uff1f\t311\n10.6 \u7aef\u5230\u7aef\u7684\u6df1\u5ea6\u5b66\u4e60\u6709\u4ec0\u4e48\u6311\u6218\uff1f\t311\n10.7 \u7aef\u5230\u7aef\u7684\u6df1\u5ea6\u5b66\u4e60\u4f18\u7f3a\u70b9\uff1f\t312\n\u7b2c\u5341\u4e09\u7ae0 \u4f18\u5316\u7b97\u6cd5\t314\n13.1 CPU\u548cGPU \u7684\u533a\u522b\uff1f\t314\n13.2 \u5982\u4f55\u89e3\u51b3\u8bad\u7ec3\u6837\u672c\u5c11\u7684\u95ee\u9898\t315\n13.3 \u4ec0\u4e48\u6837\u7684\u6837\u672c\u96c6\u4e0d\u9002\u5408\u7528\u6df1\u5ea6\u5b66\u4e60?\t315\n13.4 \u6709\u6ca1\u6709\u53ef\u80fd\u627e\u5230\u6bd4\u5df2\u77e5\u7b97\u6cd5\u66f4\u597d\u7684\u7b97\u6cd5?\t316\n13.5 \u4f55\u4e3a\u5171\u7ebf\u6027, \u8ddf\u8fc7\u62df\u5408\u6709\u5565\u5173\u8054?\t316\n13.6 \u5e7f\u4e49\u7ebf\u6027\u6a21\u578b\u662f\u600e\u88ab\u5e94\u7528\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d?\t316\n13.7 \u9020\u6210\u68af\u5ea6\u6d88\u5931\u7684\u539f\u56e0?\t317\n13.8 \u6743\u503c\u521d\u59cb\u5316\u65b9\u6cd5\u6709\u54ea\u4e9b\t317\n13.9 \u542f\u53d1\u5f0f\u4f18\u5316\u7b97\u6cd5\u4e2d\uff0c\u5982\u4f55\u907f\u514d\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3\uff1f\t318\n13.10 \u51f8\u4f18\u5316\u4e2d\u5982\u4f55\u6539\u8fdbGD\u65b9\u6cd5\u4ee5\u9632\u6b62\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3\t319\n13.11 \u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\uff1f\t319\n13.14 \u5982\u4f55\u8fdb\u884c\u7279\u5f81\u9009\u62e9\uff08feature selection\uff09\uff1f\t321\n13.14.1 \u5982\u4f55\u8003\u8651\u7279\u5f81\u9009\u62e9\t321\n13.14.2 \u7279\u5f81\u9009\u62e9\u65b9\u6cd5\u5206\u7c7b\t321\n13.14.3 \u7279\u5f81\u9009\u62e9\u76ee\u7684\t322\n13.15 \u68af\u5ea6\u6d88\u5931/\u68af\u5ea6\u7206\u70b8\u539f\u56e0\uff0c\u4ee5\u53ca\u89e3\u51b3\u65b9\u6cd5\t322\n13.15.1 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u68af\u5ea6\u66f4\u65b0\u89c4\u5219\uff1f\t322\n13.15.2 \u68af\u5ea6\u6d88\u5931\u3001\u7206\u70b8\u539f\u56e0\uff1f\t323\n13.15.3 \u68af\u5ea6\u6d88\u5931\u3001\u7206\u70b8\u7684\u89e3\u51b3\u65b9\u6848\t324\n13.16 \u6df1\u5ea6\u5b66\u4e60\u4e3a\u4ec0\u4e48\u4e0d\u7528\u4e8c\u9636\u4f18\u5316\t325\n13.17 \u600e\u6837\u4f18\u5316\u4f60\u7684\u6df1\u5ea6\u5b66\u4e60\u7cfb\u7edf\uff1f\t326\n13.18\u4e3a\u4ec0\u4e48\u8981\u8bbe\u7f6e\u5355\u4e00\u6570\u5b57\u8bc4\u4f30\u6307\u6807\uff1f\t326\n13.19\u6ee1\u8db3\u548c\u4f18\u5316\u6307\u6807\uff08Satisficing and optimizing metrics\uff09\t327\n13.20 \u600e\u6837\u5212\u5206\u8bad\u7ec3/\u5f00\u53d1/\u6d4b\u8bd5\u96c6\t328\n13.21\u5982\u4f55\u5212\u5206\u5f00\u53d1/\u6d4b\u8bd5\u96c6\u5927\u5c0f\t329\n13.22\u4ec0\u4e48\u65f6\u5019\u8be5\u6539\u53d8\u5f00\u53d1/\u6d4b\u8bd5\u96c6\u548c\u6307\u6807\uff1f\t329\n13.23 \u8bbe\u7f6e\u8bc4\u4f30\u6307\u6807\u7684\u610f\u4e49\uff1f\t330\n13.24 \u4ec0\u4e48\u662f\u53ef\u907f\u514d\u504f\u5dee\uff1f\t331\n13.25 \u4ec0\u4e48\u662fTOP5\u9519\u8bef\u7387\uff1f\t331\n13.26 \u4ec0\u4e48\u662f\u4eba\u7c7b\u6c34\u5e73\u9519\u8bef\u7387\uff1f\t332\n13.27 \u53ef\u907f\u514d\u504f\u5dee\u3001\u51e0\u5927\u9519\u8bef\u7387\u4e4b\u95f4\u7684\u5173\u7cfb\uff1f\t332\n13.28 \u600e\u6837\u9009\u53d6\u53ef\u907f\u514d\u504f\u5dee\u53ca\u8d1d\u53f6\u65af\u9519\u8bef\u7387\uff1f\t332\n13.29 \u600e\u6837\u51cf\u5c11\u65b9\u5dee\uff1f\t333\n13.30 \u8d1d\u53f6\u65af\u9519\u8bef\u7387\u7684\u6700\u4f73\u4f30\u8ba1\t333\n13.31 \u4e3e\u673a\u5668\u5b66\u4e60\u8d85\u8fc7\u5355\u4e2a\u4eba\u7c7b\u8868\u73b0\u51e0\u4e2a\u4f8b\u5b50\uff1f\t334\n13.32 \u5982\u4f55\u6539\u5584\u4f60\u7684\u6a21\u578b\uff1f\t334\n13.33 \u7406\u89e3\u8bef\u5dee\u5206\u6790\t335\n13.34 \u4e3a\u4ec0\u4e48\u503c\u5f97\u82b1\u65f6\u95f4\u67e5\u770b\u9519\u8bef\u6807\u8bb0\u6570\u636e\uff1f\t336\n13.35 \u5feb\u901f\u642d\u5efa\u521d\u59cb\u7cfb\u7edf\u7684\u610f\u4e49\uff1f\t336\n13.36 \u4e3a\u4ec0\u4e48\u8981\u5728\u4e0d\u540c\u7684\u5212\u5206\u4e0a\u8bad\u7ec3\u53ca\u6d4b\u8bd5\uff1f\t337\n13.37 \u5982\u4f55\u89e3\u51b3\u6570\u636e\u4e0d\u5339\u914d\u95ee\u9898\uff1f\t338\n13.38 \u68af\u5ea6\u68c0\u9a8c\u6ce8\u610f\u4e8b\u9879\uff1f\t340\n13.39 \u4ec0\u4e48\u662f\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff1f\t341\n13.40 \u4ec0\u4e48\u662f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff1f\t341\n13.41 \u4ec0\u4e48\u662f\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff1f\t341\n13.42 \u600e\u4e48\u914d\u7f6emini-batch\u68af\u5ea6\u4e0b\u964d\t342\n13.43 \u5c40\u90e8\u6700\u4f18\u7684\u95ee\u9898\t343\n13.44 \u63d0\u5347\u7b97\u6cd5\u6027\u80fd\u601d\u8def\t346\n\u7b2c\u5341\u56db\u7ae0 \u8d85\u53c2\u6570\u8c03\u6574\t358\n14.1 \u8c03\u8bd5\u5904\u7406\t358\n14.2 \u6709\u54ea\u4e9b\u8d85\u53c2\u6570\t359\n14.3 \u5982\u4f55\u9009\u62e9\u8c03\u8bd5\u503c?\t359\n14.4 \u4e3a\u8d85\u53c2\u6570\u9009\u62e9\u5408\u9002\u7684\u8303\u56f4\t359\n14.5 \u5982\u4f55\u641c\u7d22\u8d85\u53c2\u6570\uff1f\t359\n\u7b2c\u5341\u4e94\u7ae0 \u5f02\u6784\u8ba1\u7b97\uff0c GPU\u548c\u6846\u67b6\u9009\u578b\u6307\u5357 361\n15.1 \u4ec0\u4e48\u662f\u5f02\u6784\u8ba1\u7b97\uff1f\t361\n15.2 \u4ec0\u4e48\u662fGPGPU\uff1f\t361\n15.3 GPU\u67b6\u6784\u7b80\u4ecb\t361\n15.3.1 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528GPU\uff1f\n15.3.2 CUDA \u6838\u5fc3\u662f\u4ec0\u4e48\uff1f\n15.3.3 \u65b0\u56fe\u7075\u67b6\u6784\u91cc\u7684tensor core\u5bf9\u6df1\u5ea6\u5b66\u4e60\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f\n15.3.4 GPU\u5185\u5b58\u67b6\u6784\u548c\u5e94\u7528\u6027\u80fd\u7684\u8054\u7cfb\uff1f\n15.4 CUDA \u6846\u67b6\n15.4.1 \u505aCUDA\u7f16\u7a0b\u96be\u4e0d\u96be\uff1f\n15.4.2 cuDNN\n15.5 GPU\u786c\u4ef6\u73af\u5883\u914d\u7f6e\u63a8\u8350\n15.5.1 GPU\u4e3b\u8981\u6027\u80fd\u6307\u6807\n15.5.2 \u8d2d\u4e70\u5efa\u8bae\n15.6 \u8f6f\u4ef6\u73af\u5883\u642d\u5efa\n15.6.1 \u64cd\u4f5c\u7cfb\u7edf\u9009\u62e9\uff1f\n15.6.2 \u672c\u673a\u5b89\u88c5\u8fd8\u662f\u4f7f\u7528docker\uff1f\n15.6.3 GPU\u9a71\u52a8\u95ee\u9898\n15.7 \u6846\u67b6\u9009\u62e9\n15.7.1 \u4e3b\u6d41\u6846\u67b6\u6bd4\u8f83\n15.7.2 \u6846\u67b6\u8be6\u7ec6\u4fe1\u606f\n15.7.3 \u54ea\u4e9b\u6846\u67b6\u5bf9\u4e8e\u90e8\u7f72\u73af\u5883\u53cb\u597d\uff1f\n15.7.4 \u79fb\u52a8\u5e73\u53f0\u7684\u6846\u67b6\u5982\u4f55\u9009\u62e9\uff1f\n15.8 \u5176\u4ed6\n15.8.1 \u591aGPU\u73af\u5883\u7684\u914d\u7f6e\n15.8.2 \u662f\u4e0d\u662f\u53ef\u4ee5\u5206\u5e03\u5f0f\u8bad\u7ec3\uff1f\n15.8.3 \u53ef\u4ee5\u5728SPARK\u73af\u5883\u91cc\u8bad\u7ec3\u6216\u8005\u90e8\u7f72\u6a21\u578b\u5417\uff1f\n15.8.4 \u600e\u4e48\u8fdb\u4e00\u6b65\u4f18\u5316\u6027\u80fd\uff1f\n15.8.5 TPU\u548cGPU\u7684\u533a\u522b\uff1f\n15.8.6 \u672a\u6765\u91cf\u5b50\u8ba1\u7b97\u5bf9\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7b49AI\u6280\u672f\u7684\u5f71\u54cd\uff1f\n\u53c2\u8003\u6587\u732e\t366\nhey you look like a cool developer.\nTranslate it in english.\n\n"}, {"repo": "impress/impress.js", "language": "JavaScript", "readme": "\nimpress.js\n\nIt's a presentation framework based on the power of CSS3 transforms and\ntransitions in modern browsers and inspired by the idea behind prezi.com.\nWARNING\nimpress.js may not help you if you have nothing interesting to say ;)\nHOW TO USE IT\nChecking out and initializing the git repository\ngit clone --recursive https://github.com/impress/impress.js.git\ncd impress.js\n\nNote: For a minimal checkout, omit the --recursive option. This will leave out extra plugins.\nStable releases\nNew features and fixes are continuously merged into the master branch, which is what the above command will check out. For the latest stable release, see the Github Releases page.\nDocumentation\nReference documentation of core impress.js features and API you can find it in DOCUMENTATION.md.\nThe HTML source code of the official impress.js demo serves as a good example usage and contains comments explaining various features of impress.js. For more information about styling you can look into CSS code which shows how classes provided by impress.js can be used. Last but not least JavaScript code of impress.js has some useful comments if you are interested in how everything works. Feel free to explore!\nOfficial demo\nimpress.js demo by @bartaz\nExamples and demos\nThe Classic Slides demo is targeted towards beginners, or can be used as a template for presentations that look like the traditional PowerPoint slide deck. Over time, it also grew into the example presentation that uses most of the features and addons available.\nMore examples and demos can be found on Examples and demos wiki page.\nFeel free to add your own example presentations (or websites) there.\nOther tutorials and learning resources\nIf you want to learn even more there is a list of tutorials and other learning resources\non the wiki, too.\nThere is also a book available about Building impressive presentations with impress.js by Rakhitha Nimesh Ratnayake.\nYou may want to check out the sibling project Impressionist: a 3D GUI editor that can help you in creating impress.js presentations.\nMailing list\nYou're welcome to ask impress.js related questions on the impressionist-presentations mailing list.\nREPOSITORY STRUCTURE\n\nindex.html: This is the official impress.js demo, showcasing all of the features of the original impress.js, as well as some new plugins as we add them.\n\nAs already mentioned, this file is well commented and acts as the official tutorial.\n\n\nexamples/: Contains several demos showcasing additional features available.\n\nClassic Slides is a simple demo that you can use as template if you want to create very simple, rectangular, PowerPoint-like presentations.\n\n\nsrc/: The main file is src/impress.js. Additional functionality is implemented as plugins in src/plugins/.\n\nSee src/plugins/README.md for information about the plugin API and how to write plugins.\n\n\ntest/: Contains QUnit and Syn libraries that we use for writing tests, as well as some test coverage for core functionality. (Yes, more tests are much welcome.) Tests for plugins are in the directory of each plugin.\njs/: Contains js/impress.js, which contains a concatenation of the core src/impress.js and all the plugins. Traditionally this is the file that you'll link to in a browser. In fact both the demo and test files do exactly that.\ncss/: Contains a CSS file used by the demo. This file is not required for using impress.js in your own presentations. Impress.js creates the CSS it needs dynamically.\nextras/ contains plugins that for various reasons aren't enabled by default. You have to explicitly add them with their own script element to use them.\nbuild.js: Simple build file that creates js/impress.js. It also creates a minified version impress.min.js, but that one is not included in the github repository.\npackage.json: An NPM package specification. This was mainly added so you can easily install buildify and run node build.js. Other than the build process, which is really just doing roughly cat src/impress.js src/plugins/*/*.js > js/impress.js, and testing, impress.js itself doesn't depend on Node or any NPM modules.\nbower.json: A Bower package file. We also don't depend on Bower, but provide this file if you want to use it.\n\nWANT TO CONTRIBUTE?\nFor developers, once you've made changes to the code, you should run these commands for testing:\nnpm install\nnpm run build\nnpm run test\nnpm run lint\n\nNote that running firefox qunit_test_runner.html is usually more informative than running karma with npm run test. They both run the same tests.\nMore info about the src/ directory can be found in src/plugins/README.md.\nRequirements\n\n>= node 7.6\nnpm\n\nABOUT THE NAME\nimpress.js name is courtesy of @skuzniak.\nIt's an (un)fortunate coincidence that a Open/LibreOffice presentation tool is called Impress ;)\nReference API\nSee the Reference API\nBROWSER SUPPORT\nThe design goal for impress.js has been to showcase awesome CSS3 features as found in modern browser versions. We also use some new DOM functionality, and specifically do not use jQuery or any other JavaScript libraries, nor our own functions, to support older browsers. In general, recent versions of Firefox and Chrome are known to work well. Reportedly IE now works too.\nThe typical use case for impress.js is to create presentations that you present from your own laptop, with a browser version you know works well. Some people also use impress.js successfully to embed animations or presentations in a web page, however, be aware that in this some of your visitors may not see the presentation correctly, or at all.\nIn particular, impress.js makes use of the following JS and CSS features:\n\nDataSet API\nClassList API\nCSS 3D Transforms\nCSS Transitions\n\nCOPYRIGHT AND LICENSE\nCopyright 2011-2016 Bartek Szopka\nCopyright 2015-2017 Henrik Ingo\nReleased under the MIT License\n\n"}, {"repo": "scrapy/scrapy", "language": "Python", "readme": "\nScrapy\n\n\n\n\n\n\n\n\n\n\n\n\n\nOverview\nScrapy is a fast high-level web crawling and web scraping framework, used to\ncrawl websites and extract structured data from their pages. It can be used for\na wide range of purposes, from data mining to monitoring and automated testing.\nCheck the Scrapy homepage at https://scrapy.org for more information,\nincluding a list of features.\n\nRequirements\n\nPython 3.5+\nWorks on Linux, Windows, Mac OSX, BSD\n\n\nInstall\nThe quick way:\npip install scrapy\n\nSee the install section in the documentation at\nhttps://docs.scrapy.org/en/latest/intro/install.html for more details.\n\nDocumentation\nDocumentation is available online at https://docs.scrapy.org/ and in the docs\ndirectory.\n\nReleases\nYou can check https://docs.scrapy.org/en/latest/news.html for the release notes.\n\nCommunity (blog, twitter, mail list, IRC)\nSee https://scrapy.org/community/ for details.\n\nContributing\nSee https://docs.scrapy.org/en/master/contributing.html for details.\n\nCode of Conduct\nPlease note that this project is released with a Contributor Code of Conduct\n(see https://github.com/scrapy/scrapy/blob/master/CODE_OF_CONDUCT.md).\nBy participating in this project you agree to abide by its terms.\nPlease report unacceptable behavior to opensource@scrapinghub.com.\n\nCompanies using Scrapy\nSee https://scrapy.org/companies/ for a list.\n\nCommercial Support\nSee https://scrapy.org/support/ for details.\n\n"}, {"repo": "nodejs/node-v0.x-archive", "language": "None", "readme": "\nThis repository is an archive of Node.js before the move to nodejs/node.\nIt still contains issues and pull requests that are relevant to Node versions v0.10 and v0.12, and that were opened before the move to nodejs/node.\nNew issues and pull requests, for all branches, should be opened at nodejs/node.\nNew issues and pull requests opened here will automatically be rejected.\nThe pre-convergence version of the README is available here.\n\n"}, {"repo": "doocs/advanced-java", "language": "Java", "readme": "\n\u4e92\u8054\u7f51 Java \u5de5\u7a0b\u5e08\u8fdb\u9636\u77e5\u8bc6\u5b8c\u5168\u626b\u76f2\u00a9\n\n\n\n\n\n\n\n\n\n\n\n\n\u672c\u9879\u76ee\u5927\u90e8\u5206\u5185\u5bb9\u6765\u81ea\u4e2d\u534e\u77f3\u6749\uff0c\u7248\u6743\u5f52\u4f5c\u8005\u6240\u6709\uff0c\u5185\u5bb9\u6db5\u76d6\u9ad8\u5e76\u53d1\u3001\u5206\u5e03\u5f0f\u3001\u9ad8\u53ef\u7528\u3001\u5fae\u670d\u52a1\u3001\u6d77\u91cf\u6570\u636e\u5904\u7406\u7b49\u9886\u57df\u77e5\u8bc6\u3002\u6211(@yanglbme)\u5bf9\u8fd9\u90e8\u5206\u77e5\u8bc6\u505a\u4e86\u4e00\u4e2a\u7cfb\u7edf\u7684\u6574\u7406\uff0c\u65b9\u4fbf\u5b66\u4e60\u67e5\u9605\u3002\u914d\u5408\u300a\u5927\u578b\u7f51\u7ad9\u6280\u672f\u67b6\u6784\u2014\u2014\u674e\u667a\u6167\u300b\u3001\u300aRedis \u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u2014\u2014\u9ec4\u5065\u5b8f\u300b\u3001\u300aRedis \u6df1\u5ea6\u5386\u9669\u2014\u2014\u94b1\u6587\u54c1\u300b\u3001\u300a\u4ebf\u7ea7\u6d41\u91cf\u7f51\u7ad9\u67b6\u6784\u6838\u5fc3\u6280\u672f\u2014\u2014\u5f20\u5f00\u6d9b\u300b\u98df\u7528\uff0c\u6548\u679c\u66f4\u4f73\u3002\n\u5b66\u4e60\u4e4b\u524d\uff0c\u5148\u6765\u770b\u770b Issues \u8ba8\u8bba\u533a\u7684\u6280\u672f\u9762\u8bd5\u5b98\u662f\u600e\u4e48\u8bf4\u7684\u5427\u3002\u672c\u9879\u76ee\u4e5f\u6b22\u8fce\u5404\u4f4d\u5f00\u53d1\u8005\u670b\u53cb\u5230 Issues \u8ba8\u8bba\u533a\u5206\u4eab\u81ea\u5df1\u7684\u4e00\u4e9b\u60f3\u6cd5\u548c\u5b9e\u8df5\u7ecf\u9a8c\uff0c\u53c2\u4e0e\u6216\u52a0\u5165\u5f00\u6e90\u7ec4\u7ec7\u8bf7\u770b\u8fd9\u91cc\uff0c\u4f60\u4e5f\u8bbf\u95ee GitHub Page  \u8be6\u7ec6\u4e86\u89e3\u4e00\u4e0b Doocs\u3002\n\u53e6\u5916\uff0c\u6211\u8fd8\u5c06\u5728\u8fd9\u91cc\u66f4\u65b0\u5185\u5bb9\uff0c\u611f\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u8fdb\u6765\u770b\u770b\u3002\n\u9ad8\u5e76\u53d1\u67b6\u6784\n\u6d88\u606f\u961f\u5217\n\n\u4e3a\u4ec0\u4e48\u4f7f\u7528\u6d88\u606f\u961f\u5217\uff1f\u6d88\u606f\u961f\u5217\u6709\u4ec0\u4e48\u4f18\u70b9\u548c\u7f3a\u70b9\uff1fKafka\u3001ActiveMQ\u3001RabbitMQ\u3001RocketMQ \u90fd\u6709\u4ec0\u4e48\u4f18\u70b9\u548c\u7f3a\u70b9\uff1f\n\u5982\u4f55\u4fdd\u8bc1\u6d88\u606f\u961f\u5217\u7684\u9ad8\u53ef\u7528\uff1f\n\u5982\u4f55\u4fdd\u8bc1\u6d88\u606f\u4e0d\u88ab\u91cd\u590d\u6d88\u8d39\uff1f\uff08\u5982\u4f55\u4fdd\u8bc1\u6d88\u606f\u6d88\u8d39\u7684\u5e42\u7b49\u6027\uff09\n\u5982\u4f55\u4fdd\u8bc1\u6d88\u606f\u7684\u53ef\u9760\u6027\u4f20\u8f93\uff1f\uff08\u5982\u4f55\u5904\u7406\u6d88\u606f\u4e22\u5931\u7684\u95ee\u9898\uff09\n\u5982\u4f55\u4fdd\u8bc1\u6d88\u606f\u7684\u987a\u5e8f\u6027\uff1f\n\u5982\u4f55\u89e3\u51b3\u6d88\u606f\u961f\u5217\u7684\u5ef6\u65f6\u4ee5\u53ca\u8fc7\u671f\u5931\u6548\u95ee\u9898\uff1f\u6d88\u606f\u961f\u5217\u6ee1\u4e86\u4ee5\u540e\u8be5\u600e\u4e48\u5904\u7406\uff1f\u6709\u51e0\u767e\u4e07\u6d88\u606f\u6301\u7eed\u79ef\u538b\u51e0\u5c0f\u65f6\uff0c\u8bf4\u8bf4\u600e\u4e48\u89e3\u51b3\uff1f\n\u5982\u679c\u8ba9\u4f60\u5199\u4e00\u4e2a\u6d88\u606f\u961f\u5217\uff0c\u8be5\u5982\u4f55\u8fdb\u884c\u67b6\u6784\u8bbe\u8ba1\u554a\uff1f\u8bf4\u4e00\u4e0b\u4f60\u7684\u601d\u8def\u3002\n\n\u641c\u7d22\u5f15\u64ce\n\nes \u7684\u5206\u5e03\u5f0f\u67b6\u6784\u539f\u7406\u80fd\u8bf4\u4e00\u4e0b\u4e48\uff08es \u662f\u5982\u4f55\u5b9e\u73b0\u5206\u5e03\u5f0f\u7684\u554a\uff09\uff1f\nes \u5199\u5165\u6570\u636e\u7684\u5de5\u4f5c\u539f\u7406\u662f\u4ec0\u4e48\u554a\uff1fes \u67e5\u8be2\u6570\u636e\u7684\u5de5\u4f5c\u539f\u7406\u662f\u4ec0\u4e48\u554a\uff1f\u5e95\u5c42\u7684 lucene \u4ecb\u7ecd\u4e00\u4e0b\u5457\uff1f\u5012\u6392\u7d22\u5f15\u4e86\u89e3\u5417\uff1f\nes \u5728\u6570\u636e\u91cf\u5f88\u5927\u7684\u60c5\u51b5\u4e0b\uff08\u6570\u5341\u4ebf\u7ea7\u522b\uff09\u5982\u4f55\u63d0\u9ad8\u67e5\u8be2\u6548\u7387\u554a\uff1f\nes \u751f\u4ea7\u96c6\u7fa4\u7684\u90e8\u7f72\u67b6\u6784\u662f\u4ec0\u4e48\uff1f\u6bcf\u4e2a\u7d22\u5f15\u7684\u6570\u636e\u91cf\u5927\u6982\u6709\u591a\u5c11\uff1f\u6bcf\u4e2a\u7d22\u5f15\u5927\u6982\u6709\u591a\u5c11\u4e2a\u5206\u7247\uff1f\n\n\u7f13\u5b58\n\n\u5728\u9879\u76ee\u4e2d\u7f13\u5b58\u662f\u5982\u4f55\u4f7f\u7528\u7684\uff1f\u7f13\u5b58\u5982\u679c\u4f7f\u7528\u4e0d\u5f53\u4f1a\u9020\u6210\u4ec0\u4e48\u540e\u679c\uff1f\nRedis \u548c Memcached \u6709\u4ec0\u4e48\u533a\u522b\uff1fRedis \u7684\u7ebf\u7a0b\u6a21\u578b\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\u5355\u7ebf\u7a0b\u7684 Redis \u6bd4\u591a\u7ebf\u7a0b\u7684 Memcached \u6548\u7387\u8981\u9ad8\u5f97\u591a\uff1f\nRedis \u90fd\u6709\u54ea\u4e9b\u6570\u636e\u7c7b\u578b\uff1f\u5206\u522b\u5728\u54ea\u4e9b\u573a\u666f\u4e0b\u4f7f\u7528\u6bd4\u8f83\u5408\u9002\uff1f\nRedis \u7684\u8fc7\u671f\u7b56\u7565\u90fd\u6709\u54ea\u4e9b\uff1f\u624b\u5199\u4e00\u4e0b LRU \u4ee3\u7801\u5b9e\u73b0\uff1f\n\u5982\u4f55\u4fdd\u8bc1 Redis \u9ad8\u5e76\u53d1\u3001\u9ad8\u53ef\u7528\uff1fRedis \u7684\u4e3b\u4ece\u590d\u5236\u539f\u7406\u80fd\u4ecb\u7ecd\u4e00\u4e0b\u4e48\uff1fRedis \u7684\u54e8\u5175\u539f\u7406\u80fd\u4ecb\u7ecd\u4e00\u4e0b\u4e48\uff1f\nRedis \u7684\u6301\u4e45\u5316\u6709\u54ea\u51e0\u79cd\u65b9\u5f0f\uff1f\u4e0d\u540c\u7684\u6301\u4e45\u5316\u673a\u5236\u90fd\u6709\u4ec0\u4e48\u4f18\u7f3a\u70b9\uff1f\u6301\u4e45\u5316\u673a\u5236\u5177\u4f53\u5e95\u5c42\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\nRedis \u96c6\u7fa4\u6a21\u5f0f\u7684\u5de5\u4f5c\u539f\u7406\u80fd\u8bf4\u4e00\u4e0b\u4e48\uff1f\u5728\u96c6\u7fa4\u6a21\u5f0f\u4e0b\uff0cRedis \u7684 key \u662f\u5982\u4f55\u5bfb\u5740\u7684\uff1f\u5206\u5e03\u5f0f\u5bfb\u5740\u90fd\u6709\u54ea\u4e9b\u7b97\u6cd5\uff1f\u4e86\u89e3\u4e00\u81f4\u6027 hash \u7b97\u6cd5\u5417\uff1f\u5982\u4f55\u52a8\u6001\u589e\u52a0\u548c\u5220\u9664\u4e00\u4e2a\u8282\u70b9\uff1f\n\u4e86\u89e3\u4ec0\u4e48\u662f redis \u7684\u96ea\u5d29\u3001\u7a7f\u900f\u548c\u51fb\u7a7f\uff1fRedis \u5d29\u6e83\u4e4b\u540e\u4f1a\u600e\u4e48\u6837\uff1f\u7cfb\u7edf\u8be5\u5982\u4f55\u5e94\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff1f\u5982\u4f55\u5904\u7406 Redis \u7684\u7a7f\u900f\uff1f\n\u5982\u4f55\u4fdd\u8bc1\u7f13\u5b58\u4e0e\u6570\u636e\u5e93\u7684\u53cc\u5199\u4e00\u81f4\u6027\uff1f\nRedis \u7684\u5e76\u53d1\u7ade\u4e89\u95ee\u9898\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\u4e86\u89e3 Redis \u4e8b\u52a1\u7684 CAS \u65b9\u6848\u5417\uff1f\n\u751f\u4ea7\u73af\u5883\u4e2d\u7684 Redis \u662f\u600e\u4e48\u90e8\u7f72\u7684\uff1f\n\n\u5206\u5e93\u5206\u8868\n\n\u4e3a\u4ec0\u4e48\u8981\u5206\u5e93\u5206\u8868\uff08\u8bbe\u8ba1\u9ad8\u5e76\u53d1\u7cfb\u7edf\u7684\u65f6\u5019\uff0c\u6570\u636e\u5e93\u5c42\u9762\u8be5\u5982\u4f55\u8bbe\u8ba1\uff09\uff1f\u7528\u8fc7\u54ea\u4e9b\u5206\u5e93\u5206\u8868\u4e2d\u95f4\u4ef6\uff1f\u4e0d\u540c\u7684\u5206\u5e93\u5206\u8868\u4e2d\u95f4\u4ef6\u90fd\u6709\u4ec0\u4e48\u4f18\u70b9\u548c\u7f3a\u70b9\uff1f\u4f60\u4eec\u5177\u4f53\u662f\u5982\u4f55\u5bf9\u6570\u636e\u5e93\u5982\u4f55\u8fdb\u884c\u5782\u76f4\u62c6\u5206\u6216\u6c34\u5e73\u62c6\u5206\u7684\uff1f\n\u73b0\u5728\u6709\u4e00\u4e2a\u672a\u5206\u5e93\u5206\u8868\u7684\u7cfb\u7edf\uff0c\u672a\u6765\u8981\u5206\u5e93\u5206\u8868\uff0c\u5982\u4f55\u8bbe\u8ba1\u624d\u53ef\u4ee5\u8ba9\u7cfb\u7edf\u4ece\u672a\u5206\u5e93\u5206\u8868\u52a8\u6001\u5207\u6362\u5230\u5206\u5e93\u5206\u8868\u4e0a\uff1f\n\u5982\u4f55\u8bbe\u8ba1\u53ef\u4ee5\u52a8\u6001\u6269\u5bb9\u7f29\u5bb9\u7684\u5206\u5e93\u5206\u8868\u65b9\u6848\uff1f\n\u5206\u5e93\u5206\u8868\u4e4b\u540e\uff0cid \u4e3b\u952e\u5982\u4f55\u5904\u7406\uff1f\n\n\u8bfb\u5199\u5206\u79bb\n\n\u5982\u4f55\u5b9e\u73b0 MySQL \u7684\u8bfb\u5199\u5206\u79bb\uff1fMySQL \u4e3b\u4ece\u590d\u5236\u539f\u7406\u662f\u5565\uff1f\u5982\u4f55\u89e3\u51b3 MySQL \u4e3b\u4ece\u540c\u6b65\u7684\u5ef6\u65f6\u95ee\u9898\uff1f\n\n\u9ad8\u5e76\u53d1\u7cfb\u7edf\n\n\u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u9ad8\u5e76\u53d1\u7cfb\u7edf\uff1f\n\n\u5206\u5e03\u5f0f\u7cfb\u7edf\n\u9762\u8bd5\u8fde\u73af\u70ae\n\u7cfb\u7edf\u62c6\u5206\n\n\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u7cfb\u7edf\u62c6\u5206\uff1f\u5982\u4f55\u8fdb\u884c\u7cfb\u7edf\u62c6\u5206\uff1f\u62c6\u5206\u540e\u4e0d\u7528 Dubbo \u53ef\u4ee5\u5417\uff1f\n\n\u5206\u5e03\u5f0f\u670d\u52a1\u6846\u67b6\n\n\u8bf4\u4e00\u4e0b Dubbo \u7684\u5de5\u4f5c\u539f\u7406\uff1f\u6ce8\u518c\u4e2d\u5fc3\u6302\u4e86\u53ef\u4ee5\u7ee7\u7eed\u901a\u4fe1\u5417\uff1f\nDubbo \u652f\u6301\u54ea\u4e9b\u5e8f\u5217\u5316\u534f\u8bae\uff1f\u8bf4\u4e00\u4e0b Hessian \u7684\u6570\u636e\u7ed3\u6784\uff1fPB \u77e5\u9053\u5417\uff1f\u4e3a\u4ec0\u4e48 PB \u7684\u6548\u7387\u662f\u6700\u9ad8\u7684\uff1f\nDubbo \u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u548c\u96c6\u7fa4\u5bb9\u9519\u7b56\u7565\u90fd\u6709\u54ea\u4e9b\uff1f\u52a8\u6001\u4ee3\u7406\u7b56\u7565\u5462\uff1f\nDubbo \u7684 spi \u601d\u60f3\u662f\u4ec0\u4e48\uff1f\n\u5982\u4f55\u57fa\u4e8e Dubbo \u8fdb\u884c\u670d\u52a1\u6cbb\u7406\u3001\u670d\u52a1\u964d\u7ea7\u3001\u5931\u8d25\u91cd\u8bd5\u4ee5\u53ca\u8d85\u65f6\u91cd\u8bd5\uff1f\n\u5206\u5e03\u5f0f\u670d\u52a1\u63a5\u53e3\u7684\u5e42\u7b49\u6027\u5982\u4f55\u8bbe\u8ba1\uff08\u6bd4\u5982\u4e0d\u80fd\u91cd\u590d\u6263\u6b3e\uff09\uff1f\n\u5206\u5e03\u5f0f\u670d\u52a1\u63a5\u53e3\u8bf7\u6c42\u7684\u987a\u5e8f\u6027\u5982\u4f55\u4fdd\u8bc1\uff1f\n\u5982\u4f55\u81ea\u5df1\u8bbe\u8ba1\u4e00\u4e2a\u7c7b\u4f3c Dubbo \u7684 RPC \u6846\u67b6\uff1f\n\n\u5206\u5e03\u5f0f\u9501\n\nZookeeper \u90fd\u6709\u54ea\u4e9b\u5e94\u7528\u573a\u666f\uff1f\n\u4f7f\u7528 Redis \u5982\u4f55\u8bbe\u8ba1\u5206\u5e03\u5f0f\u9501\uff1f\u4f7f\u7528 Zookeeper \u6765\u8bbe\u8ba1\u5206\u5e03\u5f0f\u9501\u53ef\u4ee5\u5417\uff1f\u4ee5\u4e0a\u4e24\u79cd\u5206\u5e03\u5f0f\u9501\u7684\u5b9e\u73b0\u65b9\u5f0f\u54ea\u79cd\u6548\u7387\u6bd4\u8f83\u9ad8\uff1f\n\n\u5206\u5e03\u5f0f\u4e8b\u52a1\n\n\u5206\u5e03\u5f0f\u4e8b\u52a1\u4e86\u89e3\u5417\uff1f\u4f60\u4eec\u5982\u4f55\u89e3\u51b3\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\u7684\uff1fTCC \u5982\u679c\u51fa\u73b0\u7f51\u7edc\u8fde\u4e0d\u901a\u600e\u4e48\u529e\uff1fXA \u7684\u4e00\u81f4\u6027\u5982\u4f55\u4fdd\u8bc1\uff1f\n\n\u5206\u5e03\u5f0f\u4f1a\u8bdd\n\n\u96c6\u7fa4\u90e8\u7f72\u65f6\u7684\u5206\u5e03\u5f0f Session \u5982\u4f55\u5b9e\u73b0\uff1f\n\n\u9ad8\u53ef\u7528\u67b6\u6784\n\nHystrix \u4ecb\u7ecd\n\u7535\u5546\u7f51\u7ad9\u8be6\u60c5\u9875\u7cfb\u7edf\u67b6\u6784\nHystrix \u7ebf\u7a0b\u6c60\u6280\u672f\u5b9e\u73b0\u8d44\u6e90\u9694\u79bb\nHystrix \u4fe1\u53f7\u91cf\u673a\u5236\u5b9e\u73b0\u8d44\u6e90\u9694\u79bb\nHystrix \u9694\u79bb\u7b56\u7565\u7ec6\u7c92\u5ea6\u63a7\u5236\n\u6df1\u5165 Hystrix \u6267\u884c\u65f6\u5185\u90e8\u539f\u7406\n\u57fa\u4e8e request cache \u8bf7\u6c42\u7f13\u5b58\u6280\u672f\u4f18\u5316\u6279\u91cf\u5546\u54c1\u6570\u636e\u67e5\u8be2\u63a5\u53e3\n\u57fa\u4e8e\u672c\u5730\u7f13\u5b58\u7684 fallback \u964d\u7ea7\u673a\u5236\n\u6df1\u5165 Hystrix \u65ad\u8def\u5668\u6267\u884c\u539f\u7406\n\u6df1\u5165 Hystrix \u7ebf\u7a0b\u6c60\u9694\u79bb\u4e0e\u63a5\u53e3\u9650\u6d41\n\u57fa\u4e8e timeout \u673a\u5236\u4e3a\u670d\u52a1\u63a5\u53e3\u8c03\u7528\u8d85\u65f6\u63d0\u4f9b\u5b89\u5168\u4fdd\u62a4\n\n\u9ad8\u53ef\u7528\u7cfb\u7edf\n\n\u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u9ad8\u53ef\u7528\u7cfb\u7edf\uff1f\n\n\u9650\u6d41\n\n\u5982\u4f55\u9650\u6d41\uff1f\u5728\u5de5\u4f5c\u4e2d\u662f\u600e\u4e48\u505a\u7684\uff1f\u8bf4\u4e00\u4e0b\u5177\u4f53\u7684\u5b9e\u73b0\uff1f\n\n\u7194\u65ad\n\n\u5982\u4f55\u8fdb\u884c\u7194\u65ad\uff1f\n\u7194\u65ad\u6846\u67b6\u90fd\u6709\u54ea\u4e9b\uff1f\u5177\u4f53\u5b9e\u73b0\u539f\u7406\u77e5\u9053\u5417\uff1f\n\u7194\u65ad\u6846\u67b6\u5982\u4f55\u505a\u6280\u672f\u9009\u578b\uff1f\u9009\u7528 Sentinel \u8fd8\u662f Hystrix\uff1f\n\n\u964d\u7ea7\n\n\u5982\u4f55\u8fdb\u884c\u964d\u7ea7\uff1f\n\n\u5fae\u670d\u52a1\u67b6\u6784\n\n\u5fae\u670d\u52a1\u67b6\u6784\u6574\u4e2a\u7ae0\u8282\u5185\u5bb9\u5c5e\u989d\u5916\u65b0\u589e\uff0c\u540e\u7eed\u62bd\u7a7a\u66f4\u65b0\uff0c\u4e5f\u6b22\u8fce\u8bfb\u8005\u4eec\u53c2\u4e0e\u8865\u5145\u5b8c\u5584\n\u5173\u4e8e\u5fae\u670d\u52a1\u67b6\u6784\u7684\u63cf\u8ff0\n\u4ece\u5355\u4f53\u5f0f\u67b6\u6784\u8fc1\u79fb\u5230\u5fae\u670d\u52a1\u67b6\u6784\n\u5fae\u670d\u52a1\u7684\u4e8b\u4ef6\u9a71\u52a8\u6570\u636e\u7ba1\u7406\n\u9009\u62e9\u5fae\u670d\u52a1\u90e8\u7f72\u7b56\u7565\n\nSpring Cloud \u5fae\u670d\u52a1\u67b6\u6784\n\n\u4ec0\u4e48\u662f\u5fae\u670d\u52a1\uff1f\u5fae\u670d\u52a1\u4e4b\u95f4\u662f\u5982\u4f55\u72ec\u7acb\u901a\u8baf\u7684\uff1f\nSpring Cloud \u548c Dubbo \u6709\u54ea\u4e9b\u533a\u522b\uff1f\nSpring Boot \u548c Spring Cloud\uff0c\u8c08\u8c08\u4f60\u5bf9\u5b83\u4eec\u7684\u7406\u89e3\uff1f\n\u4ec0\u4e48\u662f\u670d\u52a1\u7194\u65ad\uff1f\u4ec0\u4e48\u662f\u670d\u52a1\u964d\u7ea7\uff1f\n\u5fae\u670d\u52a1\u7684\u4f18\u7f3a\u70b9\u5206\u522b\u662f\u4ec0\u4e48\uff1f\u8bf4\u4e00\u4e0b\u4f60\u5728\u9879\u76ee\u5f00\u53d1\u4e2d\u78b0\u5230\u7684\u5751\uff1f\n\u4f60\u6240\u77e5\u9053\u7684\u5fae\u670d\u52a1\u6280\u672f\u6808\u90fd\u6709\u54ea\u4e9b\uff1f\n\u5fae\u670d\u52a1\u6cbb\u7406\u7b56\u7565\nEureka \u548c Zookeeper \u90fd\u53ef\u4ee5\u63d0\u4f9b\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\u7684\u529f\u80fd\uff0c\u5b83\u4eec\u6709\u4ec0\u4e48\u533a\u522b\uff1f\n......\n\n\u6d77\u91cf\u6570\u636e\u5904\u7406\n\n\u5982\u4f55\u4ece\u5927\u91cf\u7684 URL \u4e2d\u627e\u51fa\u76f8\u540c\u7684 URL\uff1f\n\u5982\u4f55\u4ece\u5927\u91cf\u6570\u636e\u4e2d\u627e\u51fa\u9ad8\u9891\u8bcd\uff1f\n\u5982\u4f55\u627e\u51fa\u67d0\u4e00\u5929\u8bbf\u95ee\u767e\u5ea6\u7f51\u7ad9\u6700\u591a\u7684 IP\uff1f\n\u5982\u4f55\u5728\u5927\u91cf\u7684\u6570\u636e\u4e2d\u627e\u51fa\u4e0d\u91cd\u590d\u7684\u6574\u6570\uff1f\n\u5982\u4f55\u5728\u5927\u91cf\u7684\u6570\u636e\u4e2d\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u5b58\u5728\uff1f\n\u5982\u4f55\u67e5\u8be2\u6700\u70ed\u95e8\u7684\u67e5\u8be2\u4e32\uff1f\n\u5982\u4f55\u7edf\u8ba1\u4e0d\u540c\u7535\u8bdd\u53f7\u7801\u7684\u4e2a\u6570\uff1f\n\u5982\u4f55\u4ece 5 \u4ebf\u4e2a\u6570\u4e2d\u627e\u51fa\u4e2d\u4f4d\u6570\uff1f\n\u5982\u4f55\u6309\u7167 query \u7684\u9891\u5ea6\u6392\u5e8f\uff1f\n\u5982\u4f55\u627e\u51fa\u6392\u540d\u524d 500 \u7684\u6570\uff1f\n\n\n\u8d21\u732e\u8005\n\u611f\u8c22\u4ee5\u4e0b\u6240\u6709\u670b\u53cb\u5bf9 GitHub \u6280\u672f\u793e\u533a Doocs \u6240\u505a\u51fa\u7684\u8d21\u732e\uff0c\u53c2\u4e0e\u9879\u76ee\u7ef4\u62a4\u8bf7\u6233\u8fd9\u513f\u3002\n\n\u516c\u4f17\u53f7\nGitHub \u6280\u672f\u793e\u533a Doocs \u65d7\u4e0b\u552f\u4e00\u516c\u4f17\u53f7\u201cDoocs \u5f00\u6e90\u793e\u533a\u201d\uff0c\u6b22\u8fce\u5173\u6ce8\uff0c\u4e13\u6ce8\u4e8e\u5206\u4eab\u6709\u4ef7\u503c\u7684\u6587\u7ae0\uff1b\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u52a0\u6211\u4e2a\u4eba\u5fae\u4fe1\uff08\u5907\u6ce8\uff1aGitHub\uff09\u3002\n\n\n\n\n\n\u516c\u4f17\u5e73\u53f0\n\n\n\n\n\n\u4e2a\u4eba\u5fae\u4fe1\n\n\n\n\n\n"}, {"repo": "square/okhttp", "language": "Java", "readme": "\nOkHttp\nSee the project website for documentation and APIs.\nHTTP is the way modern applications network. It\u2019s how we exchange data & media. Doing HTTP\nefficiently makes your stuff load faster and saves bandwidth.\nOkHttp is an HTTP client that\u2019s efficient by default:\n\nHTTP/2 support allows all requests to the same host to share a socket.\nConnection pooling reduces request latency (if HTTP/2 isn\u2019t available).\nTransparent GZIP shrinks download sizes.\nResponse caching avoids the network completely for repeat requests.\n\nOkHttp perseveres when the network is troublesome: it will silently recover from common connection\nproblems. If your service has multiple IP addresses OkHttp will attempt alternate addresses if the\nfirst connect fails. This is necessary for IPv4+IPv6 and services hosted in redundant data\ncenters. OkHttp supports modern TLS features (TLS 1.3, ALPN, certificate pinning). It can be\nconfigured to fall back for broad connectivity.\nUsing OkHttp is easy. Its request/response API is designed with fluent builders and immutability. It\nsupports both synchronous blocking calls and async calls with callbacks.\nGet a URL\nThis program downloads a URL and prints its contents as a string. Full source.\nOkHttpClient client = new OkHttpClient();\n\nString run(String url) throws IOException {\n  Request request = new Request.Builder()\n      .url(url)\n      .build();\n\n  try (Response response = client.newCall(request).execute()) {\n    return response.body().string();\n  }\n}\nPost to a Server\nThis program posts data to a service. Full source.\npublic static final MediaType JSON\n    = MediaType.get(\"application/json; charset=utf-8\");\n\nOkHttpClient client = new OkHttpClient();\n\nString post(String url, String json) throws IOException {\n  RequestBody body = RequestBody.create(json, JSON);\n  Request request = new Request.Builder()\n      .url(url)\n      .post(body)\n      .build();\n  try (Response response = client.newCall(request).execute()) {\n    return response.body().string();\n  }\n}\nFurther examples are on the OkHttp Recipes page.\nRequirements\nOkHttp works on Android 5.0+ (API level 21+) and on Java 8+.\nOkHttp depends on Okio for high-performance I/O and the Kotlin standard library. Both are small libraries with strong backward-compatibility.\nWe highly recommend you keep OkHttp up-to-date. As with auto-updating web browsers, staying current\nwith HTTPS clients is an important defense against potential security problems. We\ntrack the dynamic TLS ecosystem and adjust OkHttp to improve connectivity and\nsecurity.\nOkHttp uses your platform's built-in TLS implementation. On Java platforms OkHttp also supports\nConscrypt, which integrates BoringSSL with Java. OkHttp will use Conscrypt if it is\nthe first security provider:\nSecurity.insertProviderAt(Conscrypt.newProvider(), 1);\nThe OkHttp 3.12.x branch supports Android 2.3+ (API level 9+) and Java 7+. These platforms lack\nsupport for TLS 1.2 and should not be used. But because upgrading is difficult we will backport\ncritical fixes to the 3.12.x branch through December 31, 2020.\nReleases\nOur change log has release history.\nThe latest release is available on Maven Central.\nimplementation(\"com.squareup.okhttp3:okhttp:4.2.2\")\nSnapshot builds are available. R8 and ProGuard rules are available.\nMockWebServer\nOkHttp includes a library for testing HTTP, HTTPS, and HTTP/2 clients.\nThe latest release is available on Maven Central.\ntestImplementation(\"com.squareup.okhttp3:mockwebserver:4.2.2\")\nLicense\nCopyright 2019 Square, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n"}, {"repo": "babel/babel", "language": "JavaScript", "readme": "\n\n\n\n\n\n\n  The compiler for writing next generation JavaScript.\n\n\n\n\n\n\n\n\n\n\n\n\nSupporting Babel\n\n\n\n\n\nBabel (pronounced \"babble\")  is a community-driven project used by many companies and projects, and is maintained by a group of volunteers. If you'd like to help support the future of the project, please consider:\n\nGiving developer time on the project. (Message us on Twitter or Slack for guidance!)\nGiving funds by becoming a sponsor on Open Collective or Patreon!\n\nSponsors\nOur top sponsors are shown below! [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntro\nBabel is a tool that helps you write code in the latest version of JavaScript. When your supported environments don't support certain features natively, Babel will help you compile those features down to a supported version.\nIn\n// ES2015 arrow function\n[1, 2, 3].map((n) => n + 1);\nOut\n[1, 2, 3].map(function(n) {\n  return n + 1;\n});\nTry it out at our REPL.\nFAQ\nWho maintains Babel?\nMostly a handful of volunteers, funded by you! Please check out our team page!\nIs there a Babel song?\nI'm so glad you asked: Hallelujah \u2014\u2014 In Praise of Babel by @angus-c, audio version by @swyx. Tweet us your recordings!\nLooking for support?\nFor questions and support please join our Slack Community (you can sign-up here for an invite), ask a question on Stack Overflow, or ping us on Twitter.\nWhere are the docs?\nCheck out our website: babeljs.io, and report issues/features at babel/website.\nWant to report a bug or request a feature?\nPlease read through our CONTRIBUTING.md and fill out the issue template at babel/issues!\nWant to contribute to Babel?\nCheck out:\n\nOur #development Slack channel and say hi (signup)!\nIssues with the good first issue and help wanted label. We suggest also looking at the closed ones to get a sense of the kinds of issues you can tackle.\n\nSome resources:\n\nOur CONTRIBUTING.md to get started with setting up the repo.\nOur discussions/notes/roadmap: babel/notes\nOur progress on TC39 proposals: babel/proposals\nOur blog which contains release posts and explanations: /blog\nOur videos page with talks about open source and Babel: /videos\nOur podcast\n\nHow is the repo structured?\nThe Babel repo is managed as a monorepo that is composed of many npm packages.\nLicense\nMIT\n\n"}, {"repo": "google/guava", "language": "Java", "readme": "\nGuava: Google Core Libraries for Java\n\n\nGuava is a set of core libraries that includes new collection types (such as\nmultimap and multiset), immutable collections, a graph library, and utilities\nfor concurrency, I/O, hashing, primitives, strings, and more!\nGuava comes in two flavors.\n\nThe JRE flavor requires JDK 1.8 or higher.\nIf you need support for JDK 1.7 or Android, use the Android flavor. You can\nfind the Android Guava source in the android directory.\n\nAdding Guava to your build\nGuava's Maven group ID is com.google.guava and its artifact ID is guava.\nGuava provides two different \"flavors\": one for use on a (Java 8+) JRE and one\nfor use on Android or Java 7 or by any library that wants to be compatible with\neither of those. These flavors are specified in the Maven version field as\neither 28.1-jre or 28.1-android. For more about depending on Guava, see\nusing Guava in your build.\nTo add a dependency on Guava using Maven, use the following:\n<dependency>\n  <groupId>com.google.guava</groupId>\n  <artifactId>guava</artifactId>\n  <version>28.1-jre</version>\n  <!-- or, for Android: -->\n  <version>28.1-android</version>\n</dependency>\nTo add a dependency using Gradle:\ndependencies {\n  // Pick one:\n\n  // 1. Use Guava in your implementation only:\n  implementation(\"com.google.guava:guava:28.1-jre\")\n\n  // 2. Use Guava types in your public API:\n  api(\"com.google.guava:guava:28.1-jre\")\n\n  // 3. Android - Use Guava in your implementation only:\n  implementation(\"com.google.guava:guava:28.1-android\")\n\n  // 4. Android - Use Guava types in your public API:\n  api(\"com.google.guava:guava:28.1-android\")\n}\nFor more information on when to use api and when to use implementation,\nconsult the\nGradle documentation on API and implementation separation.\nSnapshots\nSnapshots of Guava built from the master branch are available through Maven\nusing version HEAD-jre-SNAPSHOT, or HEAD-android-SNAPSHOT for the Android\nflavor.\n\nSnapshot API Docs: guava\nSnapshot API Diffs: guava\n\nLearn about Guava\n\nOur users' guide, Guava Explained\nA nice collection of\nother helpful links\n\nLinks\n\nGitHub project\nIssue tracker: Report a defect or feature request\nStackOverflow: Ask \"how-to\" and \"why-didn't-it-work\" questions\nguava-announce: Announcements of releases and upcoming significant changes\nguava-discuss: For open-ended questions and discussion\n\nIMPORTANT WARNINGS\n\n\nAPIs marked with the @Beta annotation at the class or method level are\nsubject to change. They can be modified in any way, or even removed, at any\ntime. If your code is a library itself (i.e. it is used on the CLASSPATH of\nusers outside your own control), you should not use beta APIs, unless you\nrepackage them. If your code is a library, we strongly recommend using\nthe Guava Beta Checker to ensure that you do not use any @Beta APIs!\n\n\nAPIs without @Beta will remain binary-compatible for the indefinite\nfuture. (Previously, we sometimes removed such APIs after a deprecation\nperiod. The last release to remove non-@Beta APIs was Guava 21.0.) Even\n@Deprecated APIs will remain (again, unless they are @Beta). We have no\nplans to start removing things again, but officially, we're leaving our\noptions open in case of surprises (like, say, a serious security problem).\n\n\nGuava has one dependency that is needed at runtime:\ncom.google.guava:failureaccess:1.0.1\n\n\nSerialized forms of ALL objects are subject to change unless noted\notherwise. Do not persist these and assume they can be read by a future\nversion of the library.\n\n\nOur classes are not designed to protect against a malicious caller. You\nshould not use them for communication between trusted and untrusted code.\n\n\nFor the mainline flavor, we unit-test the libraries using only OpenJDK 1.8\non Linux. Some features, especially in com.google.common.io, may not work\ncorrectly in other environments. For the Android flavor, our unit tests run\non API level 15 (Ice Cream Sandwich).\n\n\n\n"}, {"repo": "android/architecture-samples", "language": "Kotlin", "readme": "\nAndroid Architecture Blueprints v2\n\n\n\nAndroid Architecture Blueprints is a project to showcase different architectural approaches to developing Android apps. In its different branches you'll find the same app (a TODO app) implemented with small differences.\nIn this branch you'll find:\n\nKotlin Coroutines for background operations.\nA single-activity architecture, using the Navigation component to manage fragment operations.\nA presentation layer that contains a fragment (View) and a ViewModel per screen (or feature).\nReactive UIs using LiveData observables and Data Binding.\nA data layer with a repository and two data sources (local using Room and remote) that are queried with one-shot operations (no listeners or data streams).\nTwo product flavors, mock and prod, to ease development and testing (except in the Dagger branch).\nA collection of unit, integration and e2e tests, including \"shared\" tests that can be run on emulator/device or Robolectric.\n\nVariations\nThis project hosts each sample app in separate repository branches. For more information, see the README.md file in each branch.\nStable samples - Kotlin\n\n\n\nSample\nDescription\n\n\n\n\nmaster\nThe base for the rest of the branches. Uses Kotlin, Architecture Components, coroutines, Data Binding, etc.\n\n\ndagger-android[compare]\nA simple Dagger setup that uses dagger-android and removes the two flavors.\n\n\nusecases[compare]\nAdds a new domain layer that uses UseCases for business logic.\n\n\n\nSamples in development - Kotlin\n\n\n\nSample\nDescription\n\n\n\n\nreactive[compare]\nModifies the data layer so UIs react to changes automatically using Room as source of truth.\n\n\n\nOld samples - Kotlin and Java\nBlueprints v1 had a collection of samples that are not maintained anymore, but can still be useful. See all project branches.\nWhy a to-do app?\n\nThe app in this project aims to be simple enough that you can understand it quickly, but complex enough to showcase difficult design decisions and testing scenarios. For more information, see the app's specification.\nWhat is it not?\n\nA UI/Material Design sample. The interface of the app is deliberately kept simple to focus on architecture. Check out Plaid instead.\nA complete Jetpack sample covering all libraries. Check out Android Sunflower or the advanced Github Browser Sample instead.\nA real production app with network access, user authentication, etc. Check out the Google I/O app, Santa Tracker or Tivi for that.\n\nWho is it for?\n\nIntermediate developers and beginners looking for a way to structure their app in a testable and maintainable way.\nAdvanced developers looking for quick reference.\n\nOpening a sample in Android Studio\nTo open one of the samples in Android Studio, begin by checking out one of the sample branches, and then open the root directory in Android Studio. The following series of steps illustrate how to open the usecases sample.\nClone the repository:\ngit clone git@github.com:googlesamples/android-architecture.git\n\nThis step checks out the master branch. If you want to change to a different sample:\ngit checkout usecases\n\nNote: To review a different sample, replace usecases with the name of sample you want to check out.\nFinally open the android-architecture/ directory in Android Studio.\nLicense\nCopyright 2019 Google, Inc.\n\nLicensed to the Apache Software Foundation (ASF) under one or more contributor\nlicense agreements. See the NOTICE file distributed with this work for\nadditional information regarding copyright ownership. The ASF licenses this\nfile to you under the Apache License, Version 2.0 (the \"License\"); you may not\nuse this file except in compliance with the License. You may obtain a copy of\nthe License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\nLicense for the specific language governing permissions and limitations under\nthe License.\n\n\n"}, {"repo": "prettier/prettier", "language": "JavaScript", "readme": "\n\nOpinionated Code Formatter\n\n\n    JavaScript\n    \u00b7 TypeScript\n    \u00b7 Flow\n    \u00b7 JSX\n    \u00b7 JSON\n  \n\n\n    CSS\n    \u00b7 SCSS\n    \u00b7 Less\n  \n\n\n    HTML\n    \u00b7 Vue\n    \u00b7 Angular\n  \n\n\n    GraphQL\n    \u00b7 Markdown\n    \u00b7 YAML\n  \n\n\n\n      Your favorite language?\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntro\nPrettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.\nInput\nfoo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());\nOutput\nfoo(\n  reallyLongArg(),\n  omgSoManyParameters(),\n  IShouldRefactorThis(),\n  isThereSeriouslyAnotherOne()\n);\nPrettier can be run in your editor on-save, in a pre-commit hook, or in CI environments to ensure your codebase has a consistent style without devs ever having to post a nit-picky comment on a code review ever again!\n\nDocumentation\nInstall \u00b7\nOptions \u00b7\nCLI \u00b7\nAPI\nPlayground\n\nBadge\nShow the world you're using Prettier \u2192 \n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\nContributing\nSee CONTRIBUTING.md.\n\n"}, {"repo": "x64dbg/x64dbg", "language": "C++", "readme": "\nx64dbg\n\n    \n      \nAn open-source binary debugger for Windows, aimed at malware analysis and reverse engineering of executables you do not have the source code for. There are many features available and a comprehensive plugin system to add your own. You can find more information on the blog!\nScreenshots\n\n \nInstallation & Usage\n\nDownload a snapshot from GitHub, SourceForge or OSDN and extract it in a location your user has write access to.\nOptionally use x96dbg.exe to register a shell extension and add shortcuts to your desktop.\nYou can now run x32\\x32dbg.exe if you want to debug a 32-bit executable or x64\\x64dbg.exe to debug a 64-bit executable! If you are unsure you can always run x96dbg.exe and chose your architecture there.\n\nYou can also compile x64dbg yourself with a few easy steps!\nContributing\nThis is a community effort and we accept pull requests! See the CONTRIBUTING document for more information. If you have any questions you can always contact us or open an issue. You can take a look at the easy issues to get started.\nCredits\n\nDebugger core by TitanEngine Community Edition\nDisassembly powered by Zydis\nAssembly powered by XEDParse and asmjit\nImport reconstruction powered by Scylla\nJSON powered by Jansson\nDatabase compression powered by lz4\nBug icon by VisualPharm\nInterface icons by Fugue\nWebsite by tr4ceflow\n\nDevelopers\n\nmrexodia\nSigma\ntr4ceflow\nDreg\nNukem\nHerz3h\ntorusrxxx\n\nCode contributions\nYou can find an exhaustive list of GitHub contributors here.\nSpecial Thanks\n\nSigma for developing the initial GUI\nAll the donators!\nEverybody adding issues!\nPeople I forgot to add to this list\nWriters of the blog!\nEXETools community\nTuts4You community\nReSharper\nCoverity\nacidflash\ncyberbob\ncypher\nTeddy Rogers\nTEAM DVT\nDMichael\nArtic\nahmadmansoor\n_pusher_\nfirelegend\nkao\nsstrato\nkobalicek\nathre0z\nZehMatt\n\nWithout the help of many people and other open-source projects, it would not have been possible to make x64dbg what is it today, thank you!\n\n"}, {"repo": "enaqx/awesome-react", "language": "None", "readme": "\nAwesome React \nA collection of awesome things regarding the React ecosystem.\n\nReact\n\nReact General Resources\nReact Community\nReact Online Playgrounds\nReact Tutorials\n\nReact General Tutorials\nReact Hooks\nReact and TypeScript\nReact Performance\nReact Internals\nReact Interview Questions\n\n\nReact Tools\n\nReact Development Tools\nReact Frameworks\nReact Styling\nReact Routing\nReact Component Libraries\nReact Awesome Components\nReact for Command Line\nReact Testing\nReact Libraries\nReact Integration\nForms\nAutocomplete\nGraphics\nModel Libraries\nData Managing\nMaps\nCharts\n\n\n\n\nReact Native\n\nReact Native General Resources\nReact Native Community\nReact Native Tutorials\nReact Native Development Tools\nReact Native Sample Apps\nReact Native Boilerplates\nReact Native Awesome Components\n\n\nReact AR/VR\nReasonReact\nFlux\n\nFlux General Resources\nFlux Implementations\nFlux Tutorials\n\n\nRedux\n\nRedux General Resources\nRedux Tools\nRedux Tutorials\n\n\nMobX\n\nMobX General Resources\nMobX Tools\nMobX Tutorials\n\n\nGraphQL\n\nGraphQL Spec\nGraphQL Tools\nGraphQL Tutorials\nGraphQL Implementations\nServer Integration\nDatabase Integration\n\n\nRelay\n\nRelay General Resources\nRelay Tutorials\nRelay Tools\n\n\nApollo\n\nApollo General Resources\n\n\nVideos\n\nImportant Talks\nReact.js Conf 2015 Playlist\nReactEurope Conf 2015 Day 1 Playlist\nReactEurope Conf 2015 Day 2 Playlist\nReactRally Conf 2015 Playlist\nReact.js Conf 2016 Playlist\nReactRally Conf 2016 Playlist\nReact.js Amsterdam 2018 Playlist\nVideo Tutorials\n\n\nDemos\nExample Apps\nReal Apps\nContribution\n\n\nReact\n\nJavaScript Library for building User Interfaces\n\nReact General Resources\n\nReact Official Website\nReact Documentation\nReact GitHub\n\nReact Community\n\nReactiflux Discord Channel\nReact StackOverflow\nReact Twitter\n\nReact Online Playgrounds\n\nCodePen\nCodeSandbox\nJSFiddle\n\nReact Tutorials\nReact General Tutorials\n\nReact Official Tutorial\nUsing React in Visual Studio Code\nScrimba - Learn React for free interactively\nFreeCodeCamp React Challenges\nReact Cheatsheet\nReact Patterns\nSetup Flow with React\n\nReact Hooks\n\nReact Hooks\nReplacing Redux with React Hooks and Context\nReact Hooks cheat sheet: Unlock solutions to common problems\nHow to fetch data with React Hooks?\nEasy to understand React Hook recipes\nAwesome React Hooks\n\nReact and TypeScript\n\nTypeScript, React and Webpack\nJSX in TypeScript\n\nReact Performance\n\nReact Optimizing Performance\nIntroducing the React Profiler\nOptimizing React: Virtual DOM explained\nA Definitive Guide to Optimize Major Performance issues in React\nTwitter Lite and High Performance React Progressive Web Apps at Scale\nUsing the React DevTools Profiler to Diagnose React App Performance Issues\nTop 5 Practices to Boost React Performance\nReact is Slow, React is Fast: Optimizing react Apps in Practice\nRendering large lists with react-window\n\nReact Internals\n\nReconciliation\nReact Fiber Architecture\nBuild your own React\nInside Fiber: In-depth overview of the new reconciliation algorithm in React\n\nReact Interview Questions\n\n13 Essential React Interview Questions\nList of React interview Questions and Answers\n\nReact Tools\nReact Development Tools\n\ncreate-react-app - Set up a modern Web app by running one command\nreact-starter-kit - Isomorphic Web app boilerplate\nreact-devtools - Inspection of React component hierarchy in the Chrome and Firefox Developer Tools\nreact-hot-loader - Tweak React components in real time\nreact-loadable - A higher order component for loading components with promises\nloadable-components - React code splitting made easy\nreactotron - A desktop app for inspecting your React and React Native projects\nstorybook - UI component dev & test\nreact-styleguidist - Isolated React component development environment with a living style guide\nreact-cosmos - Dev tool for creating reusable React components\neslint-plugin-react - React specific linting rules for ESLint\neslint-plugin-jsx-a11y - Static AST checker for a11y rules on JSX elements\nreact-axe - Accessibility auditing for React applications\n\nReact Frameworks\n\nnext.js - The React Framework\ngatsby.js - Free and open source framework based on React\n\nReact Styling\n\nstyled-components - Visual primitives for the component age\nemotion - Library designed for writing CSS styles with JavaScript\nradium - A toolchain for React component styling\njss - Authoring tool for CSS\n\nReact Routing\n\nreact-router - Declarative routing for React\nnavi - Declarative, asynchronous routing for React\ncuri - JavaScript router for single-page applications\n\nReact Component Libraries\n\nmaterial-ui - React components for faster and easier web development\nant-design - A design system with values of Nature and Determinacy\nblueprint - A React-based UI toolkit for the webs\noffice-ui-fabric-react - React components for building Microsoft web experiences\nreact-bootstrap - Bootstrap components built with React\nreactstrap - Simple React Bootstrap 4 components\nsemantic-ui-react - The official Semantic-UI-React integration\nreact-fontawesome - Font Awesome 5 component library for React\nReakit - Accessible, Composable and Customizable components for React\nrsuite - A suite of React components\natlaskit - Atlassian's official UI library, built according to the Atlassian Design Guidelines.\n\nReact Awesome Components\n\nAwesome React Components list\nreact-select - The Select Component for React\nreact-dnd - Drag and Drop for React\nreact-grid-layout - A draggable and resizable grid layout with responsive breakpoints\nreact-table - A lightweight, fast and extendable datagrid for React\nreact-data-grid - Excel-like grid component built with React\nreact-draggable - React draggable component\nreact-resizable-and-movable - A resizable and draggable component for React\nreact-resizable - A simple React component that is resizable with a handle\nreact-resizable-box - A resizable component for React\nreact-sortable-pane - A sortable and resizable pane component for React\nreact-dates - An easily internationalizable, mobile-friendly datepicker library for the web\nreact-big-calendar - Calendar component\nreact-datepicker - ReactJS Datepicker\nreact-list - A versatile infinite scroll React component\nreact-intl - Internationalize React apps\nreact-i18next - Internationalization for React done right\nreact-aria-modal - A fully accessible React modal\nreact-hotkeys - Declarative hotkey and focus area management for React\nreact-keydown - Lightweight keydown wrapper for React components\nreact-joyride - Create guided tours for your apps\nreact-virtualized - React components for efficiently rendering large lists and tabular data\nreact-window - React components for efficiently rendering large lists and tabular data\nreact-text-mask - Input mask for React\nreact-loading-skeleton - Create skeleton screens that automatically adapt to your app\nreact-spinkit - A collection of loading indicators animated with CSS for React\nrheostat - Accessible slider component built with React\nqrcode.react - QR component for use with React\n\nReact for Command Line\n\nink - React for interactive command-line apps\nreact-blessed - A React renderer for blessed terminal interface library\n\nReact Testing\n\njest - Delightful JavaScript Testing Framework\nenzyme - JavaScript Testing utilities for React\nreact-testing-library - Simple and complete React DOM testing utilities\nreact-hooks-testing-library - React hooks testing utilities that encourage good testing practices\nmajestic - Zero config GUI for Jest\n\nReact Libraries\n\nreact-border-wrapper - A wrapper for placing elements along div borders in React.\nreact-magic - Automatically AJAXify plain HTML with the power of React\nreact-toolbox - A set of React components implementing Google's Material Design specification\ntcomb-react - Library allowing you to check all the props of your React components\nreact-responsive - Media queries in react for responsive design\nreact-cursor - Functional state management abstraction for use with Facebook React\nOmniscient.js - Abstracting React components for fast top down render of immutable data\nTouchstonejs - React.js powered UI framework for developing beautiful hybrid mobile apps.\nElemental - A UI Toolkit for React.js Websites and Apps\nStateTrooper - Centrally manage state for React applications with CSP\nPreact: Fast 3kb React alternative with the same ES6 API.\nriotjs - A React- like, 3.5KB user interface library\nMaple.js - Bringing the concept of web-components to React\nreact-i13n - A performant, scalable and pluggable approach to instrumenting your React application\nreact-icons - svg react icons of popular icon packs\nKeo - Plain functions for a more functional Deku approach to creating React components, with functional goodies such as pipe, memoize, etc...\nBit - A virtual repository for managing and using react and other web components across applications\nAtlasKit - Atlassian's React UI library\nReactiveSearch - UI components library for Elasticsearch\nSlate - A completely customizable framework for building rich text editors.\nreact-json-schema - Construct React elements from JSON by mapping JSON definitions to React components that you expose.\ncompose-state - Compose multiple setState or getDerivedStateFromProps updaters in React\nPrimeReact - The Most Complete UI Framework for React!\nreact-lodash - Lodash as React components\nreact-helmet - A document head manager for React\nStator - Simple, plain JavaScript state management with built-in support for React\nClearX - Fast & Effortless State management for React with zero learning curve. ClearX gives great flexibiility in separation of concerns for your React applicationss\nreact-snap - Zero-configuration framework-agnostic static prerendering for SPAs\nDraft.js - A React framework for building text editors\nrefract - Harness the power of reactive programming to supercharge your components\nreact-desktop - OS X and Windows UI components built with React\nReapop - A React & Redux notifications system\nreact-extras - Useful components and utilities for working with React\nreact-instantsearch - Lightning-fast search for React and React Native applications, by Algolia\nuppy - The next open source file uploader for web browsers\nreact-motion - A spring that solves your animation problems\nreact-esi - React Edge Side Includes\n\nReact Integration\n\nReact Rails\nReactJS.NET\nReact ASP.NET Boilerplate\nReact Bootstrap Components Playground\nom - ClojureScript interface\nquiescent - A lightweight ClojureScript abstraction over React\nReagent - A minimalistic ClojureScript interface to React.js\nreact-haskell - React bindings for Haskell\nExpress React views\nExpress Coffee-React views - render coffee-react on the server\nReact Page Middleware\nngReact - React Components in Angular\nReact Laravel\ncoffee-react-transform - Provides React JSX support for Coffeescript\nsprockets-coffee-react - Sprockets preprocessor for CJSX\nreact-kup - A simple, non-intrusive alternative to jsx for coffeescript\nturbo-react - Combine Turbolinks and React to apply DOM diffs\nreact-bacon - A little module for using React with Bacon.js\nmsx - React's JSX Transformer, tweaked to output calls to Mithril\nReact.withBackbone - React 16 ready backbone binding\nBackbone React Component\nreact-backbone - Backbone-aware mixins for react\nNestedReact - transparent integration with Backbone Views and NestedTypes models\nbackbone-reaction - React, Backbone and then some\nreact.backbone - Plugin for React to make Backbone migration easier\nreactbone - React extensions for Backbone\nbackbone-react-ui - React components for use with backbone and backbone paginator\nreact-events - Declarative managed event bindings for react components\nreact-mixin-manager - React mixin registration manager\ngsap-react-plugin - A GSAP plugin for tweening React.js component state\nreact-topcoat by @plaxdan - Topcoat CSS components built with the React library\nreact-topcoat by @arnemart - A collection of React components for Topcoat\nreactdown - Write React components using markdown syntax\nreact-jade - Compile Jade to React JavaScript\njade-react - Compile Jade templates to React.DOM expressions\ngulp-jade-react - Compile Jade templates into React de-sugared JSX with Gulp\nsbt-reactjs - React SBT Plugin using npm\nscalajs-react - A guilty affair between Scala.js and Facebook's React\nreact-xtags - Using React to implement xtags\njreact - React on server-side Java (with Rhino or Nashorn)\nReact.hiccup - A complete replacement for JSX written in sweet.js\nreact-play - Rendering React components in the Play Framework with JDK8's Nashorn\nrx-react - Utilities to works with React in a RxJS\nreact-with-di - A hacked prototype of React.js with DI\nreactfire - ReactJS mixin for easy Firebase integration\nfiredux - Firebase + Redux for ReactJS\nreact-clickdrag-mixin - ClickDrag mixin for React component\nRewrite the Admin UI of KeystoneJS in React\nreact-masonry-mixin - Standalone mixin for Masonry (@desandro)\nreact-packery-mixin - Standalone mixin for Packery (Metafizzy)\nreact-dropzone - Simple HTML5 drag-drop zone with React.js.\naframe-react - A-Frame VR + React\nreact-three - React bindings to create and control a 3D scene using three.js\nreact-three-renderer - Render into a three.js canvas using React\nreact-threejs - Simplest bindings between React & Three.js\nreact-masonry-css - Fast Masonry layout powered by CSS, dependency free\nreact-captcha - A react.js reCAPTCHA for Google\nreaptcha - Clean, modern and simple React wrapper for Google reCAPTCHA\nreact-recaptcha-that-works - A reCAPTCHA bridge for React that works\n\nForms\n\nReact Forms\nreact-formal - Better form validation and value management for React, Provides minimal wiring\nreact-forms - Forms library for React\nvaluelink - full-featured two-way data binding with extended React links\nwingspan-forms - A dynamic form library for Facebook React\nnewforms - Isomorphic form-handling for React\nformjs - A form generator for Reactjs\nreact-form-builder - A Form Builder for React.js\nplexus-form - A dynamic form component for react using JSON-Schema\ntcomb-form - UI library for developing forms writing less code\nformsy-react - A form input builder and validator for React JS\nLearn Raw React: Ridiculously Simple Forms\nWinterfell - Generate complex, validated and extendable JSON-based forms in React\nRedux-Autoform - Create Redux-Forms dynamically out of metadata\nuniforms - Bunch of React components and helpers to easily generate and validate forms\nformik - Forms in React, without tears\nNeoForm \u2013 Modular HOCs for form state management and validation\nreact-jsonschema-form \u2013 A React component for building Web forms from JSON Schema\nList View Select - A Toggleable select box for React Native with native components\nFinal Form \ud83c\udfc1\nformland - A simple, super-flexible, extensible config based form generator\nreact-reactive-form - Angular like reactive forms in React\nunform - ReactJS form library to create uncontrolled form structures with nested fields, validations and much more!\nFormal - Elegant form management primitives for the react hooks era\n\nAutocomplete\n\nreact-autocomplete by @rackt - WAI-ARIA compliant React autocomplete\nreact-autosuggest by @moroshko - WAI-ARIA compliant React autosuggest component\nreact-autocomplete by @eliseumds- Just tasting some ReactJS + RxJS\nreact-autocomplete by @prometheusresearch - Autocomplete widget based on React\ninstatype by @gragland - Simple react autocomplete component\ndownshift - \ud83c\udfce Primitives to build simple, flexible, WAI-ARIA compliant enhanced input React components\nReact Bootstrap Typeahead - A React-based typeahead that relies on Bootstrap for styling and was originally inspired by Twitter's typeahead.js.\n\nGraphics\n\nreact-art - React Bridge to the ART Drawing Library\nreact-canvas - High performance  rendering for React components\nreact-famous - Complex 3D animations UI at 60 FPS with Famo.us\nreact-kinetic - HTML5 Canvas via KineticJS using React\nreact-svg-morph - morph your svg components one into another\nreact-hooks-svgdrawing - SVG Drawing with React hooks\nreact-svg-pan-zoom - A React component that adds pan and zoom features to SVG.\n\nModel Libraries\n\nmori - ClojureScript's persistent data structures and supporting API\nNestedTypes - fast mutable models with \"pure render\" support\nswarm - JavaScript replicated model (M of MVC) library\ncaplet - JavaScript models library\n\nData Managing\n\nImmutable.js - Immutable Data Collections for Javascript\ncortex - A javascript library for centrally managing data with React\navers - A modern client-side model abstraction library\nimvvm - Immutable Model-View-ViewModel for React\nmorearty.js - Better state management for React in pure JavaScript\nvaluable - An immutable data store for React\nreact-resolver - Isomorphic library to recursively lazy-load data for React components\nfreezer-js - Lightweight and reactive immutable data structure for React\nMobX - Simple, scalable state management\nbaobab - JavaScript persistent and optionally immutable data tree with cursors\nbaobab-react - React integration for Baobab\ndatascript - Immutable database and Datalog query engine in ClojureScript\nimmstruct - Immutable data structures with history for top-to-bottom properties in component based libraries like React\nseamless-immutable - Immutable data structures for JavaScript which are backwards-compatible with normal JS Arrays and Objects\ntydel - Typed Models and Collections, with React bindings\nextendable-immutable - Extend any Immutable.js data structure\nstatty - A tiny and unobtrusive state management library for React and Preact apps\nHydux - An Elm-Like state manager for React with \"batteries included\"\nReSub - A library for writing better React components and data stores\nProppyJS - A tiny library for functional props composition\nWatermelonDB - \ud83c\udf49 Next-gen database for powerful React and React Native apps that scales to 10,000s of records and remains fast\nEffector \u2014 Fast and powerful reactive state manager. Lets you write simple, fast and type safe code and manage reactive state with ease.\nreactn - React, but with built-in global state management\nimmer - Create the next immutable state by mutating the current one\n\nMaps\n\nreact-googlemaps - React interface to Google maps\nreact-maps - A map component for React\nreact-google-maps - React.js Google Maps integration component\nreact-gmaps - A Google Maps component for React.js\nreact-map-gl - A React wrapper for MapboxGL-js plus overlay API\ngoogle-map-react - Isomorphic google map React component\nreact-mapbox-gl - A mapbox-gl-js wrapper to make the API react friendly\ngoogle-maps-react - A declarative Google Map React component using React, lazy-loading dependencies, current-location finder and a test-driven approach by the Fullstack React team.\nreact-leaflet - React components for Leaflet maps\nreact-geo - A set of geo-related components using react, antd, and ol\npigeon-maps - ReactJS maps without external dependencies\n\nCharts\n\nDevExtreme React Chart - High-performance plugin-based React chart for Bootstrap and Material Design\nreact-chartjs - Common react charting components using chart.js\nreact-stockcharts - Highly customizable stock charts with ReactJS and d3\nNumber Picture - Low-level building blocks for constructing animated visualizations with React & D3.\nVictory - A collection of composable React components for building interactive data visualizations\nRecharts - A charting library built on D3 with an awesome declarative API\nReact-ApexCharts - React component for ApexCharts (An Interactive SVG Chart Library)\nreaviz - React Data Visualization Library based on D3.js\nreact-vis - A React visualization library designed with the following principles in mind: React-friendly, high-level and customizable, expressive, and industry-strong.\nnivo - It provides a rich set of data visualization components, built on top of the D3 and React libraries.\nvx - A collection of reusable low-level visualization components. It combines the power of D3 to generate your visualization with the benefits of React for updating the DOM.\necharts-for-react - A very simple ECharts wrapper for React.\nChartify - React plugin for building charts using CSS.\nSemiotic - A data visualization framework combining React and D3.\n\n\nReact Native\n\nFramework for building native apps using React\n\nReact Native General Resources\n\nReact Native Official Site\nReact Native GitHub\nReact Native Newsletter\nReact Native Playground\nReact Native Awesome List\nReact Native StackOverflow\nReact Native Radio\n\nReact Native Tutorials\n\nReact Native Tutorial\nIntroducing React Native: Building Apps with JavaScript\nIntroduction to React Native: Building iOS Apps with JavaScript\nReact Native Meets Async Functions\nGesture detection in React Native \u2013 fixing unexpected panning\nDigital Smart Mirror lab with React Native\nThe Beauty Of React Native: Building Your First iOS App With JavaScript (Part 1)\nThe Beauty Of React Native: Building Your First iOS App With JavaScript (Part 2)\nA Mini-Course on React Native Flexbox\nA Complete Guide to Flexbox\nTest driving react native applications\nUsing React Native With TypeScript\n\nReact Native Development Tools\n\nreact-native-code-push - React Native module for CodePush\n\nReact Native Sample Apps\n\nHackerNews\nZiliun\nFinanceReactNative\nSplashWalls\nNBAreact\n\nReact Native Boilerplates\n\nCreate React Native App - Create a React Native app on any OS with no build config, with or without Expo\nSnowflake - React Native iOS & Android with Redux, Parse.com, Jest (88% coverage)\nIgnite - The hottest CLI for React Native, boilerplates, plugins, generators, and more!\nReact Native Starter Kit - A powerful starter project that bootstraps development of your mobile application\n\nReact Native Awesome Components\n\nExpo - The Expo platform for making cross-platform mobile apps\nreact-navigation - Routing and navigation for your React Native apps\nreact-native-social-share - Use the iOS and Android native Twitter and Facebook share popup with React Native\nreact-native-fbsdk - A wrapper around the iOS Facebook SDK\nreact-native-side-menu - Simple customizable component to create side menu\nreact-native-mapbox-gl - A Mapbox GL react native module\nreact-native-icons - Quick and easy icons in React Native\nreact-native-vector-icons - 3000 Customizable Icons for React Native with support for NavBar/TabBar\nreact-native-google-signin - Google Signin for React Native\nreact-native-picker-modal-view\n\n\nReact AR/VR\n\nUsage of React for Augmented and Virtual Reality\n\n\nReact 360 - Create exciting 360 and VR experiences using React\nViro React - Platform for rapidly building AR/VR applications using React Native\n\n\nReasonReact\n\nReason bindings for ReactJS\n\n\nReasonReact Official Website\n\nFlux\n\nApplication Architecture for Building User Interfaces\n\nFlux General Resources\n\nFlux Official Site\nFlux GitHub\n\nFlux Implementations\n\nFlux Comparision\nRefluxJS\nFluxxor\nMarty\nMcFly\nAlt\nFluxible\nNuclearJS\nFlummox\nCoflux\nMobX\nSinux\n\nFlux Tutorials\n\nBuilding Applications with React and Flux\nFlux: A simple architecture model to build Client-side apps\nIsomorphic Flux examples using Dispatchr and Fetchr from Yahoo\nAsync requests with React.js and Flux\nImplementing Flux in CoffeeScript\nReact: Flux Architecture\nUnderstanding Flux\nYo in Flux\nReact.js architecture - Flux VS Reflux\nAvoiding Event Chains in Single Page Applications\nReactJS and Flux\nDeconstructing ReactJS's Flux\nFlux Step By Step\nFlux in practice\nWhat is the Flux Application Architecture?\nReact + Flux Backed by Rails API: Part 1\nReact + Flux Backed by Rails API: Part 2\nReact + Flux Backed by Rails API: Part 3\nFlux solutions compared by example\nFlux Cargo-Culting\nThe Case for Flux\nThe Evolution of Flux Frameworks\nReact with Flux by example - a simple Todo List dissected\nFOR FLUX SAKE! - a beginners tutorial\nSimple Counter App with React and Nuclear JS\nLearnCode.academy Flux Tutorial Series\n\n\nRedux\n\nPredictable State Container for JavaScript Apps\n\nRedux General Resources\n\nRedux GitHub\nRedux Official Site\nAwesome Redux List\n\nRedux Tools\n\nreact-redux - Official React bindings for Redux\nredux-devtools - DevTools for Redux with hot reloading, action replay, and customizable UI\n\nreact-router-redux - Bindings to keep react-router and redux in sync\n\n\nredux-form - A Higher Order Component using react-redux to keep form state\nredux-thunk - Thunk middleware for redux\nredux-logger - Logger middleware for redux\nreselect - Selector library for Redux\nnormalizr - Normalizes nested JSON according to a schema\nredux-saga - An alternative side effect model for Redux apps\nredux-data-fx - Declarative Side Effects for Redux\nredux-observable - RxJS middleware for Redux\nredux-analytics - Analytics middleware for Redux\nredux-undo - Higher order reducer to add undo/redo functionality to redux state containers\nredux-search - Redux bindings for client-side search\nredux-mock-store - A mock store for your testing your redux async action creators and middleware\nredux-immutable - Create an equivalent function of Redux combineReducers that works with Immutable.js state\nredux-react-i18n - An i18n solution for redux/react\nR16N - A redux/react I18n solution\nredux-actiontyper - Helper to create less verbose action types for Redux\nredux-state-validator - A simple redux middleware to validate redux state values and object types using JSON Schema\nredux-persist - Persist and rehydrate a redux store\n\nRedux Tutorials\n\nBuilding Applications with React and Redux in ES6\nGetting Started with Redux\nBuilding React Applications with Idiomatic Redux\nRedux Tutorial\nGetting Started with React, Redux and Immutable: a Test-Driven Tutorial: Part 1\nGetting Started with React, Redux and Immutable: a Test-Driven Tutorial: Part 2\nFull-Stack Redux Tutorial\nServer-Side Rendering with Redux and React-Router\nDeep Introduction to Redux\nUnit Testing Redux Apps\nSecure Your React and Redux App with JWT Authentication\nBuild an Image Gallery Using React, Redux and redux-saga\nA simplified approach to calling APIs with redux\nReact Redux based blood donor demo application\nLearnCode.academy Redux Tutorials Series\nPractical Redux\nA Complete React Redux Tutorial for Beginners\n\n\nMobX\n\nSimple, scalable state management for JavaScript Apps\n\nMobX General Resources\n\nMobX GitHub\nMobX Official Site\n\nMobX Tools\n\nmobx-react - React component wrapper for combining React with MobX\n\nMobX Tutorials\n\nTen minute introduction to MobX and React\nManage Complex State in React Apps with MobX\nRefactor your application from Redux to MobX\nRedux or MobX: An attempt to dissolve the Confusion\n\n\nGraphQL\n\nQuery Language\n\nGraphQL Spec\n\nGraphQL Official Site\nGraphQL Specification\nGraphQL Specification Repository\n\nGraphQL Tools\n\nGraphCMS - The GraphQL Headless CMS\nGraphQL CMS\nMongoose schema To GraphQL\nGraphQL bridge to REST API\nGraphQL Playground - GraphQL IDE for better development workflows\n\nGraphQL Tutorials\n\nGraphQL Introduction\nFirst Thoughts on GraphQL\nModeling Queries in a GraphQL Like Way\nThin and Graphy\nGraphQL Overview - Getting Started with GraphQL and Node.js\nWriting a Basic API with GraphQL\nBuilding a GraphQL Server with Node.js and SQL\nGraphQL Tour: Variables\nHow to Graphql - The Fullstack Tutorial for GraphQL\n\nGraphQL Implementations\n\ngraphql-js - A reference implementation of GraphQL for JavaScript\nreact-transmit - Relay-inspired library based on JavaScript Promises\ngraphql-ruby - Ruby implementation of Facebook's GraphQL\ngraphql-java - GraphQL Java implementation\nsangria - Scala GraphQL client and server library\ngraphql-php - A PHP port of GraphQL reference implementation\ngraphene - GraphQL in Python made simple\ngraphqllib - GraphQL implementation for Python\ngraphql-dotnet - GraphQL for .NET\ngraphql-go - GraphQL for Go/Golang\n\nServer Integration\n\nexpress-graphql - Create a GraphQL HTTP server with Express\ngraphql-yoga - Easiest way to run a GraphQL server\n\nDatabase Integration\n\nHasura - Instant Realtime GraphQL on Postgres\nPrisma - a performant open-source GraphQL ORM-like * layer doing the heavy lifting in your GraphQL server.\ngraphql-bookshelf - Some help defining GraphQL schema around BookshelfJS models\nGraphpostgresQL - GraphQL for PostgreSQL\ngraffiti - Node.js GraphQL ORM\nsql-to-graphql - Generate a GraphQL API based on your SQL database structure\ngraphql-sequelize - GraphQL & Relay for MySQL & Postgres via Sequelize\n\n\nRelay\n\nData-Driven React Applications\n\nRelay General Resources\n\nRelay Offical Site\nRelay GitHub\n\nRelay Tutorials\n\nofficial Relay Getting Started\nRelay for Visual Learners\nGetting Started with Relay\nRelay and Routing\n\nRelay Tools\n\ngraphql-relay-js - A library to help construct a graphql-js server supporting react-relay\nreact-router-relay - Relay integration for React Router\nrelay-local-schema - Use Relay without a GraphQL server\nrelay-codemod - Codemod scripts based for on jsodeshift to update Relay APIs\n\n\nApollo\n\nData stack based on GraphQL\n\nApollo General Resources\n\nApollo Official Site\nApollo GitHub\nApollo Blog\nApollo Slack\n\nApollo Tools\n\nreact-apollo-redux - A small wrapper to automatically dispatch actions in response to apollo mutations\n\n\nVideos\nreactjsvideos.com\nImportant Talks\n\n\nPete Hunt: React: Rethinking best practices - JSConf EU 2013\n\n\nPete Hunt: React: Rethinking Best Practices (updated) - JSConf.Asia 2013\n\n\nTom Occhino and Jordan Walke: JS Apps at Facebook - JSConfUS 2013\n\n\nReact: CSS in JS\n\n\nPete Hunt: Be Predictable, Not Correct - Mountain West JavaScript 2014\n\n\nHacker Way: Rethinking Web App Development at Facebook\n\n\nChristopher Chedeau: Why does React Scale? - JSConf2014\n\n\nChristopher Chedeau: React's Architecture - OSCON 2014\n\n\nPete Hunt: React RESTful UI Rendering - Strange Loop 2014\n\n\nPete Hunt: How Instagram.com Works - OSCON 2014\n\n\nBill Fisher and Jing Chen: React and Flux - NewCircle Training 2014\n\n\nSebastian Markbage: Minimal API Surface Area - JSConf EU 2014\n\n\nAvik Chaudhuri: JavaScript Testing and Static Type Systems at Scale - Scale 2014\n\n\nReact Native & Relay: Bringing Modern Web Techniques to Mobile - f8 2015)\n\n\nCitrusbyte Presents GraphQL: A Horizontal Platform with Nick Schrock\n\n\nLaney Kuenzel: Mutations and Subscriptions in Relay - JSConf 2015\n\n\nReact Today and Tomorrow and 90% Cleaner React With Hooks - React Conf 2018\n\n\nReact Conferences\n\n\nReact Videos\n\n\nAwesome React Talks\n\n\nReact.js Conf 2015 Playlist\nReactEurope Conf 2015 Day 1 Playlist\nReactEurope Conf 2015 Day 2 Playlist\nReactRally Conf 2015 Playlist\nReact.js Conf 2016 Playlist\nReact Amsterdam 2016 Playlist\nReactEurope Conf 2016 Day 1 Playlist\nReactEurope Conf 2016 Day 2 Playlist\nReactRally Conf 2016 Playlist\nReact.js Amsterdam 2018 Playlist\nVideo Tutorials\n\nTrying React Hooks for the first time with Dan Abramov\n\n\nDemos\n\nReact and React Native State Museum\nreact.rocks - Pinterest-style directory of online demos with available code\nreact-hn - A React & react-router-powered implementation of Hacker News\nreact-pokemon - A React component for displaying Pok\u00e9mon\nReact + Backbone TodoMVC\nReact + NestedTypes TodoMVC\nreact-rxjs-todomvc - TodoMVC implementation with React and RxJS\nreact-mvc - A sample chat application written with React and pure MVC\nreact-observe-todomvc - TodoMVC implementation built on top of React and Object.observe\nreact-lights-out - Simple demo of the React framework's power and flexibility\ntodomvc-swarm - React TodoMVC implementation using Swarm for real-time collaboration\nreactodo - Multiple localStorage TODO lists, built with React\nlifequote - React port of a life insurance quick quoting application\nreactor-demo - Isomorphic Javascript app with React\nimgsible - React-based Imgur-like isomorphic demo app\nwow-realm-status-react - WoW Realm Status: React Edition\nreact-json-editor - A generic JSON editor\nreact-todos - Backbone's example TODO app with React JS for views\ngithub-issues-viewer - A github issues viewer build in react + backbone\nwolfenstein3D-react - Wolfenstein with the rendering layer written in React\nFlux ImmutableJS TodoList\nHapi+React+Flux user management system\nRedux TodoMVC\nReact/Redux CRUD with persistent state in Local Storage\nReact Slack clone - comprehensive Slack clone built with React and Chatkit\noverreacted.io - Personal blog by Dan Abramov\n\n\nExample Apps\n\nisomorphic500 - Isomorphic JS app built with React and Fluxible\nfil - A playground for in-browser interpreters (Redux)\nsound-redux - A Soundcloud client built with React / Redux\nreact-pomodoro - A Pomodoro timer for developers\nDo - Notes management application built with React and Redux\nsoundcloud-react-redux - A SoundCloud Client built with React / Redux\nsoundcloud-react-mobx - A SoundCloud Client built with React / MobX\nA Reimplementation of Winamp 2.9 with React and Redux\nComingOrNot - Event Planner built with react, react-router, redux, graphQL & serverless\nReact Reduction - Admin Dashboard built with React + Bootstrap4\nReact Code Splitting Sample - React + React Router + Flux\nResponsive React 'The Movie Database' (TMDb) App\nCoreUI - Free Admin Panel built with React and Bootstrap 4\nreact-shopping-cart - Simple ecommerce cart application built with React and Redux\nhackernews-react-graphql - Hacker News clone rewritten with universal JavaScript, using React and GraphQL\n\n\nReal apps\n\nFirefox debugger\nRemote Retro \u2013 Agile retrospectives for distributed teams\nSpectrum \u2013 Simple, powerful online communities\nMattermost \u2013 Open source Slack alternative\n\n\nContribution\nThis list started as personal collecton of interesting things about React. At the time it started React was in beta, there was special script to transform JSX to JS and even Flux was not yet published. React is mainstream now, lots of things happened. Please, do not try to use this list as advertisement board or place for public push of your experiments. Only fully free resources here, please. Your contributions and suggestions are heartily\u2661 welcome, though. (\u273f\u25e0\u203f\u25e0)\n\n\n"}, {"repo": "pytorch/pytorch", "language": "C++", "readme": "\n\n\nPyTorch is a Python package that provides two high-level features:\n\nTensor computation (like NumPy) with strong GPU acceleration\nDeep neural networks built on a tape-based autograd system\n\nYou can reuse your favorite Python packages such as NumPy, SciPy and Cython to extend PyTorch when needed.\n\nMore about PyTorch\nInstallation\n\nBinaries\nFrom Source\nDocker Image\nBuilding the Documentation\nPrevious Versions\n\n\nGetting Started\nCommunication\nReleases and Contributing\nThe Team\n\n\n\n\nSystem\n2.7\n3.5\n3.6\n\n\n\n\nLinux CPU\n\n\n\u2014\n\n\nLinux GPU\n\n\n\u2014\n\n\nWindows CPU / GPU\n\u2014\n\n\u2014\n\n\nLinux (ppc64le) CPU\n\n\u2014\n\n\n\nLinux (ppc64le) GPU\n\n\u2014\n\n\n\n\nSee also the ci.pytorch.org HUD.\nMore About PyTorch\nAt a granular level, PyTorch is a library that consists of the following components:\n\n\n\nComponent\nDescription\n\n\n\n\ntorch\na Tensor library like NumPy, with strong GPU support\n\n\ntorch.autograd\na tape-based automatic differentiation library that supports all differentiable Tensor operations in torch\n\n\ntorch.jit\na compilation stack (TorchScript) to create serializable and optimizable models from PyTorch code\n\n\ntorch.nn\na neural networks library deeply integrated with autograd designed for maximum flexibility\n\n\ntorch.multiprocessing\nPython multiprocessing, but with magical memory sharing of torch Tensors across processes. Useful for data loading and Hogwild training\n\n\ntorch.utils\nDataLoader and other utility functions for convenience\n\n\n\nUsually PyTorch is used either as:\n\na replacement for NumPy to use the power of GPUs.\na deep learning research platform that provides maximum flexibility and speed.\n\nElaborating further:\nA GPU-Ready Tensor Library\nIf you use NumPy, then you have used Tensors (a.k.a ndarray).\n\nPyTorch provides Tensors that can live either on the CPU or the GPU, and accelerates the\ncomputation by a huge amount.\nWe provide a wide variety of tensor routines to accelerate and fit your scientific computation needs\nsuch as slicing, indexing, math operations, linear algebra, reductions.\nAnd they are fast!\nDynamic Neural Networks: Tape-Based Autograd\nPyTorch has a unique way of building neural networks: using and replaying a tape recorder.\nMost frameworks such as TensorFlow, Theano, Caffe and CNTK have a static view of the world.\nOne has to build a neural network, and reuse the same structure again and again.\nChanging the way the network behaves means that one has to start from scratch.\nWith PyTorch, we use a technique called reverse-mode auto-differentiation, which allows you to\nchange the way your network behaves arbitrarily with zero lag or overhead. Our inspiration comes\nfrom several research papers on this topic, as well as current and past work such as\ntorch-autograd,\nautograd,\nChainer, etc.\nWhile this technique is not unique to PyTorch, it's one of the fastest implementations of it to date.\nYou get the best of speed and flexibility for your crazy research.\n\nPython First\nPyTorch is not a Python binding into a monolithic C++ framework.\nIt is built to be deeply integrated into Python.\nYou can use it naturally like you would use NumPy / SciPy / scikit-learn etc.\nYou can write your new neural network layers in Python itself, using your favorite libraries\nand use packages such as Cython and Numba.\nOur goal is to not reinvent the wheel where appropriate.\nImperative Experiences\nPyTorch is designed to be intuitive, linear in thought and easy to use.\nWhen you execute a line of code, it gets executed. There isn't an asynchronous view of the world.\nWhen you drop into a debugger, or receive error messages and stack traces, understanding them is straightforward.\nThe stack trace points to exactly where your code was defined.\nWe hope you never spend hours debugging your code because of bad stack traces or asynchronous and opaque execution engines.\nFast and Lean\nPyTorch has minimal framework overhead. We integrate acceleration libraries\nsuch as Intel MKL and NVIDIA (cuDNN, NCCL) to maximize speed.\nAt the core, its CPU and GPU Tensor and neural network backends\n(TH, THC, THNN, THCUNN) are mature and have been tested for years.\nHence, PyTorch is quite fast \u2013 whether you run small or large neural networks.\nThe memory usage in PyTorch is extremely efficient compared to Torch or some of the alternatives.\nWe've written custom memory allocators for the GPU to make sure that\nyour deep learning models are maximally memory efficient.\nThis enables you to train bigger deep learning models than before.\nExtensions Without Pain\nWriting new neural network modules, or interfacing with PyTorch's Tensor API was designed to be straightforward\nand with minimal abstractions.\nYou can write new neural network layers in Python using the torch API\nor your favorite NumPy-based libraries such as SciPy.\nIf you want to write your layers in C/C++, we provide a convenient extension API that is efficient and with minimal boilerplate.\nNo wrapper code needs to be written. You can see a tutorial here and an example here.\nInstallation\nBinaries\nCommands to install from binaries via Conda or pip wheels are on our website:\nhttps://pytorch.org\nNVIDIA Jetson platforms\nPython wheels for NVIDIA's Jetson Nano, Jetson TX2, and Jetson AGX Xavier are available via the following URLs:\n\nStable binaries:\n\nPython 2.7: https://nvidia.box.com/v/torch-stable-cp27-jetson-jp42\nPython 3.6: https://nvidia.box.com/v/torch-stable-cp36-jetson-jp42\n\n\nRolling weekly binaries:\n\nPython 2.7: https://nvidia.box.com/v/torch-weekly-cp27-jetson-jp42\nPython 3.6: https://nvidia.box.com/v/torch-weekly-cp36-jetson-jp42\n\n\n\nThey require JetPack 4.2 and above, and @dusty-nv maintains them\nFrom Source\nIf you are installing from source, you will need a C++14 compiler. Also, we highly recommend installing an Anaconda environment.\nYou will get a high-quality BLAS library (MKL) and you get controlled dependency versions regardless of your Linux distro.\nOnce you have Anaconda installed, here are the instructions.\nIf you want to compile with CUDA support, install\n\nNVIDIA CUDA 9 or above\nNVIDIA cuDNN v7 or above\n\nIf you want to disable CUDA support, export environment variable USE_CUDA=0.\nOther potentially useful environment variables may be found in setup.py.\nIf you are building for NVIDIA's Jetson platforms (Jetson Nano, TX1, TX2, AGX Xavier), Instructions to are available here\nInstall Dependencies\nCommon (only install typing for Python <3.5)\nconda install numpy ninja pyyaml mkl mkl-include setuptools cmake cffi typing\n\nOn Linux\n# Add LAPACK support for the GPU if needed\nconda install -c pytorch magma-cuda90 # or [magma-cuda92 | magma-cuda100 | magma-cuda101 ] depending on your cuda version\nGet the PyTorch Source\ngit clone --recursive https://github.com/pytorch/pytorch\ncd pytorch\n# if you are updating an existing checkout\ngit submodule sync\ngit submodule update --init --recursive\nInstall PyTorch\nOn Linux\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))/../\"}\npython setup.py install\nOn macOS\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))/../\"}\nMACOSX_DEPLOYMENT_TARGET=10.9 CC=clang CXX=clang++ python setup.py install\nEach CUDA version only supports one particular XCode version. The following combinations have been reported to work with PyTorch.\n\n\n\nCUDA version\nXCode version\n\n\n\n\n10.0\nXCode 9.4\n\n\n10.1\nXCode 10.1\n\n\n\nOn Windows\nAt least Visual Studio 2017 Update 3 (version 15.3.3 with the toolset 14.11) and NVTX are needed.\nIf the version of Visual Studio 2017 is higher than 15.4.5, installing of \"VC++ 2017 version 15.4 v14.11 toolset\" is strongly recommended.\n If the version of Visual Studio 2017 is lesser than 15.3.3, please update Visual Studio 2017 to the latest version along with installing \"VC++ 2017 version 15.4 v14.11 toolset\".\n There is no guarantee of the correct building with VC++ 2017 toolsets, others than version 15.4 v14.11.\n \"VC++ 2017 version 15.4 v14.11 toolset\" might be installed onto already installed Visual Studio 2017 by running its installation once again and checking the corresponding checkbox under \"Individual components\"/\"Compilers, build tools, and runtimes\".\nNVTX is a part of CUDA distributive, where it is called \"Nsight Compute\". To install it onto already installed CUDA run CUDA installation once again and check the corresponding checkbox.\nBe sure that CUDA with Nsight Compute is installed after Visual Studio 2017.\nCurrently VS 2017, VS 2019 and Ninja are supported as the generator of CMake. If ninja.exe is detected in PATH, then Ninja will be used as the default generator, otherwise it will use VS 2017.\n If Ninja is selected as the generator, the latest MSVC which is newer than VS 2015 (14.0) will get selected as the underlying toolchain if you have Python > 3.5, otherwise VS 2015 will be selected so you'll have to activate the environment. If you use CMake <= 3.14.2 and has VS 2019 installed, then even if you specify VS 2017 as the generator, VS 2019 will get selected as the generator.\nCUDA and MSVC have strong version dependencies, so even if you use VS 2017 / 2019, you will get build errors like nvcc fatal : Host compiler targets unsupported OS. For this kind of problem, please install the corresponding VS toolchain in the table below and then you can either specify the toolset during activation (recommended) or set CUDAHOSTCXX to override the cuda host compiler (not recommended if there are big version differences).\n\n\n\nCUDA version\nNewest supported VS version\n\n\n\n\n9.0 / 9.1\nVisual Studio 2017 Update 4 (15.4) (_MSC_VER <= 1911)\n\n\n9.2\nVisual Studio 2017 Update 5 (15.5) (_MSC_VER <= 1912)\n\n\n10.0\nVisual Studio 2017 (15.X) (_MSC_VER < 1920)\n\n\n10.1\nVisual Studio 2019 (16.X) (_MSC_VER < 1930)\n\n\n\ncmd\n:: [Optional] Only add the next two lines if you need Python 2.7. If you use Python 3, ignore these two lines.\nset MSSdk=1\nset FORCE_PY27_BUILD=1\n\n:: [Optional] If you want to build with VS 2019 generator, please change the value in the next line to `Visual Studio 16 2019`.\n:: Note: This value is useless if Ninja is detected. However, you can force that by using `set USE_NINJA=OFF`.\nset CMAKE_GENERATOR=Visual Studio 15 2017\n\n:: Read the content in the previous section carefully before you proceed.\n:: [Optional] If you want to override the underlying toolset used by Ninja and Visual Studio with CUDA, please run the following script block.\n:: \"Visual Studio 2017 Developer Command Prompt\" will be run automatically.\n:: Make sure you have CMake >= 3.12 before you do this when you use the Visual Studio generator.\n:: It's an essential step if you use Python 3.5.\nset CMAKE_GENERATOR_TOOLSET_VERSION=14.11\nset DISTUTILS_USE_SDK=1\nfor /f \"usebackq tokens=*\" %i in (`\"%ProgramFiles(x86)%\\Microsoft Visual Studio\\Installer\\vswhere.exe\" -version [15^,16^) -products * -latest -property installationPath`) do call \"%i\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x64 -vcvars_ver=%CMAKE_GENERATOR_TOOLSET_VERSION%\n\n:: [Optional] If you want to override the cuda host compiler\nset CUDAHOSTCXX=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Tools\\MSVC\\14.11.25503\\bin\\HostX64\\x64\\cl.exe\n\npython setup.py install\n\nAdjust Build Options (Optional)\nYou can adjust the configuration of cmake variables optionally (without building first), by doing\nthe following. For example, adjusting the pre-detected directories for CuDNN or BLAS can be done\nwith such a step.\nOn Linux\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))/../\"}\npython setup.py build --cmake-only\nccmake build  # or cmake-gui build\nOn macOS\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))/../\"}\nMACOSX_DEPLOYMENT_TARGET=10.9 CC=clang CXX=clang++ python setup.py build --cmake-only\nccmake build  # or cmake-gui build\nDocker Image\nDockerfile is supplied to build images with cuda support and cudnn v7. You can pass -e PYTHON_VERSION=x.y flag to specify which Python version is to be used by Miniconda, or leave it unset to use the default. Build from pytorch repo directory as docker needs to copy git repo into docker filesystem while building the image.\ndocker build -t pytorch -f docker/pytorch/Dockerfile .  # [optional] --build-arg WITH_TORCHVISION=0\n\nYou can also pull a pre-built docker image from Docker Hub and run with nvidia-docker,\nbut this is not currently maintained and will pull PyTorch 0.2.\nnvidia-docker run --rm -ti --ipc=host pytorch/pytorch:latest\n\nPlease note that PyTorch uses shared memory to share data between processes, so if torch multiprocessing is used (e.g.\nfor multithreaded data loaders) the default shared memory segment size that container runs with is not enough, and you\nshould increase shared memory size either with --ipc=host or --shm-size command line options to nvidia-docker run.\nBuilding the Documentation\nTo build documentation in various formats, you will need Sphinx and the\nreadthedocs theme.\ncd docs/\npip install -r requirements.txt\n\nYou can then build the documentation by running make <format> from the\ndocs/ folder. Run make to get a list of all available output formats.\nPrevious Versions\nInstallation instructions and binaries for previous PyTorch versions may be found\non our website.\nGetting Started\nThree pointers to get you started:\n\nTutorials: get you started with understanding and using PyTorch\nExamples: easy to understand pytorch code across all domains\nThe API Reference\n\nCommunication\n\nforums: discuss implementations, research, etc. https://discuss.pytorch.org\nGitHub issues: bug reports, feature requests, install issues, RFCs, thoughts, etc.\nSlack: The PyTorch Slack hosts a primary audience of moderate to experienced PyTorch users and developers for general chat, online discussions, collaboration etc. If you are a beginner looking for help, the primary medium is PyTorch Forums. If you need a slack invite, please fill this form: https://goo.gl/forms/PP1AGvNHpSaJP8to1\nnewsletter: no-noise, one-way email newsletter with important announcements about pytorch. You can sign-up here: https://eepurl.com/cbG0rv\n\nReleases and Contributing\nPyTorch has a 90 day release cycle (major releases). Please let us know if you encounter a bug by filing an issue.\nWe appreciate all contributions. If you are planning to contribute back bug-fixes, please do so without any further discussion.\nIf you plan to contribute new features, utility functions or extensions to the core, please first open an issue and discuss the feature with us.\nSending a PR without discussion might end up resulting in a rejected PR, because we might be taking the core in a different direction than you might be aware of.\nThe Team\nPyTorch is a community driven project with several skillful engineers and researchers contributing to it.\nPyTorch is currently maintained by Adam Paszke, Sam Gross, Soumith Chintala and Gregory Chanan with major contributions coming from hundreds of talented individuals in various forms and means.\nA non-exhaustive but growing list needs to mention: Trevor Killeen, Sasank Chilamkurthy, Sergey Zagoruyko, Adam Lerer, Francisco Massa, Alykhan Tejani, Luca Antiga, Alban Desmaison, Andreas Koepf, James Bradbury, Zeming Lin, Yuandong Tian, Guillaume Lample, Marat Dukhan, Natalia Gimelshein, Christian Sarofeen, Martin Raison, Edward Yang, Zachary Devito.\nNote: this project is unrelated to hughperkins/pytorch with the same name. Hugh is a valuable contributor in the Torch community and has helped with many things Torch and PyTorch.\nLicense\nPyTorch is BSD-style licensed, as found in the LICENSE file.\n\n"}, {"repo": "square/retrofit", "language": "Java", "readme": "\nRetrofit\nType-safe HTTP client for Android and Java by Square, Inc.\nFor more information please see the website.\nDownload\nDownload the latest JAR or grab from Maven central at the coordinates com.squareup.retrofit2:retrofit:2.7.0.\nSnapshots of the development version are available in Sonatype's snapshots repository.\nRetrofit requires at minimum Java 8+ or Android API 21+.\nR8 / ProGuard\nIf you are using R8 the shrinking and obfuscation rules are included automatically.\nProGuard users must manually add the options from\nthis file.\n(Note: You might also need rules for OkHttp and Okio which are dependencies of this library)\nLicense\nCopyright 2013 Square, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n"}, {"repo": "neovim/neovim", "language": "Vim script", "readme": "\n\nWiki |\nDocumentation |\nChat/Discussion |\nTwitter\n\n\n\n\n\n\n\n\n\nNeovim is a project that seeks to aggressively refactor Vim in order to:\n\nSimplify maintenance and encourage contributions\nSplit the work between multiple developers\nEnable advanced UIs without modifications to the core\nMaximize extensibility\n\nSee the Introduction wiki page and Roadmap\nfor more information.\nFeatures\n\nModern GUIs\nAPI access\nfrom any language including C/C++, C#, Clojure, D, Elixir, Go, Haskell, Java,\nJavaScript/Node.js, Julia, Lisp, Lua, Perl, Python, Racket, Ruby, Rust\nEmbedded, scriptable terminal emulator\nAsynchronous job control\nShared data (shada) among multiple editor instances\nXDG base directories support\nCompatible with most Vim plugins, including Ruby and Python plugins\n\nSee :help nvim-features for the full list!\nInstall from package\nPre-built packages for Windows, macOS, and Linux are found on the\nReleases page.\nManaged packages are in Homebrew, Debian, Ubuntu, Fedora, Arch Linux,\nGentoo, and more!\nInstall from source\nThe build is CMake-based, but a Makefile is provided as a convenience.\nmake CMAKE_BUILD_TYPE=RelWithDebInfo\nsudo make install\n\nTo install to a non-default location:\nmake CMAKE_INSTALL_PREFIX=/full/path/\nmake install\n\nTo skip bundled (third-party/*) dependencies:\n\nInstall the dependencies using a package manager.\nsudo apt install gperf luajit luarocks libuv1-dev libluajit-5.1-dev libunibilium-dev libmsgpack-dev libtermkey-dev libvterm-dev libutf8proc-dev\nsudo luarocks build mpack\nsudo luarocks build lpeg\nsudo luarocks build inspect\n\n\nBuild with USE_BUNDLED=OFF:\nmake CMAKE_BUILD_TYPE=RelWithDebInfo USE_BUNDLED=OFF\nsudo make install\n\n\n\nTo inspect the build, these CMake features are useful:\n\ncmake --build build --target help lists all build targets.\nbuild/CMakeCache.txt (or cmake -LAH build/) contains the resolved values of all CMake variables.\nbuild/compile_commands.json shows the full compiler invocations for each translation unit.\n\nSee the Building Neovim wiki page for details.\nTransitioning from Vim\nSee :help nvim-from-vim for instructions.\nProject layout\n\u251c\u2500 ci/              build automation\n\u251c\u2500 cmake/           build scripts\n\u251c\u2500 runtime/         user plugins/docs\n\u251c\u2500 src/nvim/        application source code (see src/nvim/README.md)\n\u2502  \u251c\u2500 api/          API subsystem\n\u2502  \u251c\u2500 eval/         VimL subsystem\n\u2502  \u251c\u2500 event/        event-loop subsystem\n\u2502  \u251c\u2500 generators/   code generation (pre-compilation)\n\u2502  \u251c\u2500 lib/          generic data structures\n\u2502  \u251c\u2500 lua/          Lua subsystem\n\u2502  \u251c\u2500 msgpack_rpc/  RPC subsystem\n\u2502  \u251c\u2500 os/           low-level platform code\n\u2502  \u2514\u2500 tui/          built-in UI\n\u251c\u2500 third-party/     CMake subproject to build dependencies\n\u2514\u2500 test/            tests (see test/README.md)\n\nLicense\nNeovim is licensed under the terms of the Apache 2.0 license, except for\nparts that were contributed under the Vim license.\n\n\nContributions committed before b17d96 remain under the Vim\nlicense.\n\n\nContributions committed after b17d96 are licensed under\nApache 2.0 unless those contributions were copied from Vim (identified in\nthe commit logs by the vim-patch token).\n\n\nSee LICENSE for details.\nVim is Charityware.  You can use and copy it as much as you like, but you are\nencouraged to make a donation for needy children in Uganda.  Please see the\nkcc section of the vim docs or visit the ICCF web site, available at these URLs:\n\n        http://iccf-holland.org/\n        http://www.vim.org/iccf/\n        http://www.iccf.nl/\n\nYou can also sponsor the development of Vim.  Vim sponsors can vote for\nfeatures.  The money goes to Uganda anyway.\n\n\n"}, {"repo": "spring-projects/spring-framework", "language": "Java", "readme": "\n Spring Framework \nThis is the home of the Spring Framework: the foundation for all Spring projects. Collectively the Spring Framework and the family of Spring projects are often referred to simply as \"Spring\".\nSpring provides everything required beyond the Java programming language for creating enterprise applications for a wide range of scenarios and architectures. Please read the Overview section as reference for a more complete introduction.\nCode of Conduct\nThis project is governed by the Spring Code of Conduct. By participating, you are expected to uphold this code of conduct. Please report unacceptable behavior to spring-code-of-conduct@pivotal.io.\nAccess to Binaries\nFor access to artifacts or a distribution zip, see the Spring Framework Artifacts wiki page.\nDocumentation\nThe Spring Framework maintains reference documentation (published and source), Github wiki pages, and an\nAPI reference. There are also guides and tutorials across Spring projects.\nBuild from Source\nSee the Build from Source Wiki page and the CONTRIBUTING.md file.\nStay in Touch\nFollow @SpringCentral, @SpringFramework, and its team members on Twitter. In-depth articles can be found at The Spring Blog, and releases are announced via our news feed.\nLicense\nThe Spring Framework is released under version 2.0 of the Apache License.\n\n"}, {"repo": "kelseyhightower/nocode", "language": "Dockerfile", "readme": "\nNo Code\nNo code is the best way to write secure and reliable applications. Write nothing; deploy nowhere.\nGetting Started\nStart by not writing any code.\n\n\nThis is just an example application, but imagine it doing anything you want. Adding new features is easy too:\n\n\nThe possibilities are endless.\nBuilding the Application\nNow that you have not done anything it's time to build your application:\n\n\nYep. That's it. You should see the following output:\n\n\nDeploying\nWhile you still have not done anything it's time to deploy your application. By running the following command you can deploy your application absolutely nowhere.\n\n\nIt's that simple. And when it comes time to scale the application, all you have to do is:\n\n\nI know right?\nContributing\nYou don't.\n\n"}, {"repo": "parcel-bundler/parcel", "language": "JavaScript", "readme": "\n\n\n\n\n\n \n\n\n\n\n\n\n\nFeatures\n\n\ud83d\ude80 Blazing fast bundle times - multicore compilation, and a filesystem cache for fast rebuilds even after a restart.\n\ud83d\udce6 Out of the box support for JS, CSS, HTML, file assets, and more - no plugins to install.\n\ud83d\udc20 Automatically transforms modules using Babel, PostCSS, and PostHTML when needed - even node_modules.\n\u2702\ufe0f Zero configuration code splitting using dynamic import() statements.\n\ud83d\udd25 Built in support for hot module replacement\n\ud83d\udea8 Friendly error logging experience - syntax highlighted code frames help pinpoint the problem.\n\nGetting Started\nBefore we get started, you'll need to install Node and Yarn (or npm) and create\na package.json for your project if you haven't already.\nyarn init\nThen with Yarn you can install parcel into your app:\nyarn add --dev parcel@next\nFrom there you just need to point Parcel at some of your entry files. Like if\nyou're building a website, an index.html file:\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>My First Parcel App</title>\n  </head>\n  <body>\n    <h1>Hello, World!</h1>\n  </body>\n</html>\nNow if you just run:\nyarn parcel index.html\nYou should get a URL that looks something like: http://localhost:1234/\nNext you can start adding dependencies by specifying them in your code (however\nyour language specifies other assets). So for HTML we could create a\nstyles.css file next to our index.html file and include it with a <link>\ntag.\nh1 {\n  color: hotpink;\n  font-family: cursive;\n}\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>My First Parcel App</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <h1>Hello, World!</h1>\n  </body>\n</html>\nAs we make the change you should see the website update with your changes\nwithout even refreshing the page.\nDocumentation\n\nIntroduction\nParcel CLI\n\nCLI Args & Flags\n\nparcel serve\nparcel watch\nparcel build\n[...entries]\n--target [name]\n--open, -o [browser]\n--host <host>\n--port <port>, -p\n--https\n\n--cert <path>\n--key <path>\n\n\n--cache-dir <dir>, --no-cache\n--hot, --no-hot\n\n--hot-host <hostname>\n--hot-port <port>\n\n\n--[no-]source-maps\n--autoinstall [npm/yarn], --no-autoinstall\n--log-level <level>\n--version, -v, -V\n--help, -h\n\n\n\n\nParcel Config\n\nConfiguring external tools\nConfiguring Parcel\npackage.json\n\npackage.json#name\npackage.json#version\npackage.json#main\npackage.json#module\npackage.json#browser\npackage.json#source\npackage.json#browserslist\npackage.json#engines\npackage.json#targets\npackage.json#alias\n\n\n.parcelrc\n\nGlob maps in .parcelrc\n.parcelrc#extends\n.parcelrc#resolvers\n.parcelrc#transforms\n.parcelrc#bundler\n.parcelrc#namers\n.parcelrc#runtimes\n.parcelrc#packagers\n.parcelrc#optimizers\n.parcelrc#reporters\n.parcelrc#validators\n\n\n\n\nParcel Architecture\n\nPhases of Parcel\nAsset Graph\nBundles\nSources\nTargets\n\nTarget Configuration\n\n\nEnvironments\nCaching\n\n\nAsset Resolution\n\nLocal Paths\nPackage Paths\nURLs\nTilde Paths\nAliases\n\n\nPlugins\n\nResolvers\nTransforms\nBundlers\nNamers\nRuntimes\nPackagers\nOptimizers\nReporters\nValidators\n\n\nCreating Plugins\n\nNaming\nVersioning\nEngines\n\n\nPlugin APIs\n\nResolvers\nTransforms\nBundler\nNamers\nRuntimes\nPackagers\nOptimizers\nReporters\nValidators\n\n\n\nIntroduction\nParcel is a compiler for all your code, regardless of the language or toolchain.\nParcel takes all of your files and dependencies, transforms them, and merges\nthem together into a smaller set of output files that can be used to run your\ncode.\nParcel supports many different languages and file types out of the box, from\nweb technologies like HTML, CSS, and JavaScript, to lower level languages like\nRust, and anything that compiles to WebAssembly (WASM), to assets like images,\nfonts, videos, and more.\nParcel makes your code portable, you can build your code for different\nenvironments, for the web for your server, or for an app. You can even build\nmultiple targets at once and have them live update as you make changes.\nParcel is fast and predictable. It compiles all of your files in isolation in\nparallel inside workers, caching all of them as it goes along. Caches are\nstable across machines and are only affected by the files and configs within\nyour project (unless you want to pass specific environment variables).\nParcel CLI\nThe Parcel CLI is built into the main parcel package. While you can install\nit globally and run it, it is much better to install it locally into your\nproject as a dev dependency.\nyarn add --dev parcel@next\nYou should also add some \"scripts\" to your package.json to run it easier.\n{\n  \"name\": \"my-project\",\n  \"scripts\": {\n    \"build\": \"parcel build index.html\",\n    \"start\": \"parcel serve index.html\"\n  },\n  \"devDependencies\": {\n    \"parcel\": \"latest\"\n  }\n}\nNow you can run yarn build to bundle your project for production and\nyarn start to dev on your project.\nCLI Args & Flags\nUsage:\n$ parcel [command] [...entries] [...flags]\nparcel serve\nServe assets on a local server\nparcel watch\nWatch and rebuild code on file changes.\nparcel build\nBuild code once, in production mode.\n[...entries]\nEntry files to start bundling, these will be preserved as entry points in the\noutput. Defaults to package.json#source, falling back to src/index.* or\nindex.*. See #Entries.\n--target [name]\nSpecifies a specific target to build. If unspecified, Parcel builds all\ntargets specified in package.json. See #Targets.\n--open, -o [browser]\nOpen your local server in a browser. You can optionally pass the name of the\nbrowser you want to open, otherwise it will use your default browser.\n--host <host>\nConfigure the host to serve assets on. The default is to listen on all interfaces.\n--port <port>, -p\nConfigure the port to serve assets on. Alternatively you can use the $PORT\nenvironment variable.\n--https\nThis will generate a local certificate (which will be untrusted by your\nbrowser, you'll need to approve it) and serve your assets over https://\n--cert <path>\nSpecify the filepath to your SSL certificate when using --https.\n--key <path>\nSpecify the filepath to your SSL key when using --https.\n--cache-dir <dir>, --no-cache\nConfigure the cache directory with --cache <dir> or disable it altogether\nwith --no-cache.\n--hot, --no-hot\nTurn hot reloading on or off.\n--hot-host <hostname>\nConfigure the hot reloading hostname.\n--hot-port <port>\nConfigure the hot reloading port.\n--[no-]source-maps\nTurn source maps on or off. Source maps are turned on by default.\n--autoinstall [npm/yarn], --no-autoinstall\nWhen enabled, whenever Parcel discovers a dependency that isn't installed it\nwill attempt to install it with either npm or Yarn (defaults to npm unless a\nyarn.lock exists).\n--log-level <level>\nSet the log level, either either \"none\", \"error\", \"warn\", \"info\", or \"verbose\".\nThe default is \"info\".\n--version, -v, -V\nReturn the current version of Parcel.\n--help, -h\nGet help with the CLI.\nParcel Config\nParcel has always and will always work out of the box for many projects with\nzero configuration. It should always be extremely simple to get started. But if\nyou do want more control, we give you the tools to do so.\nConfiguring external tools\nA huge part of what Parcel does is run other tools over your code. Instead of\npulling all that configuration into Parcel, we make use of their own\nconfiguration systems. So if you're using Babel, you should just use .babelrc\nfiles to configure it.\nWhen we do need to introduce config, we create tool specific config files in\norder to do so.\nConfiguring Parcel\nWhen you do need to configure Parcel, it will be in one of 3 places.\n\nIf you need to configure the CLI, it will be a CLI flag\nIf you need to configure your package, it will be in the package.json\nIf you need to configure something with your files or the Parcel asset\npipeline, it will be in .parcelrc\n\npackage.json\n[todo]\n{\n  \"name\": \"foo\",\n  \"main\": \"dist/main/index.js\",\n  \"module\": \"dist/module/index.js\",\n  \"browser\": \"dist/browser/index.js\",\n  \"browserslist\": [\"> 1%\", \"not dead\"],\n  \"engines\": {\n    \"node\": \">=4.x\"\n  },\n  \"source\": \"src/index.js\",\n  \"targets\": {\n    \"main\": {\n      \"node\": [\"^4.0.0\"]\n    },\n    \"module\": {\n      \"node\": [\"^8.0.0\"]\n    },\n    \"browser\": {\n      \"browsers\": [\"> 1%\", \"not dead\"]\n    }\n  },\n  \"alias\": {\n    \"react\": \"preact-compat\",\n    \"react-dom\": \"preact-compat\"\n  }\n}\npackage.json#name\n(Required) The name of the package is always required in order to be\nconsidered a valid package.json.\n{\n  \"name\": \"my-package\"\n}\npackage.json#version\n(Required) All packages inside node_modules must have a package.json#version.\n{\n  \"version\": \"1.0.0\"\n}\npackage.json#main\n(Required) This is the \"main\" target's entry point for the package.\n{\n  \"main\": \"dist/main/index.js\"\n}\nSee Targets\npackage.json#module\nThis is the \"module\" target's entry point for the package.\n{\n  \"module\": \"dist/module/index.js\"\n}\nSee Targets\npackage.json#browser\nThis is the \"browser\" target's entry point for the package.\n{\n  \"browser\": \"dist/browser/index.js\"\n}\nSee Targets\npackage.json#source\nSpecify the entry points for your source code which gets mapped to your\ntargets.\n{\n  \"source\": \"src/index.js\",\n  \"source\": [\"src/index.js\", \"src/index.html\"]\n}\nSee Sources\npackage.json#browserslist\nAs specified by Browserslist, this field is for specifying which transforms\nshould be applied to browser bundles.\n{\n  \"browserslist\": [\"> 0.2%\", \"not dead\"]\n}\nSee Environments\npackage.json#engines\nSpecify what versions of what engines you want to support.\n{\n  \"engines\": {\n    \"node\": \">=4.x\",\n    \"electron\": \">=2.x\"\n  }\n}\nSee Environments\npackage.json#targets\nConfiguration for individual targets.\n{\n  \"targets\": {\n    \"main\": {\n      \"engines\": {\n        \"node\": \">=4.x\",\n        \"electron\": \">=2.x\"\n      },\n    },\n    \"browser\": {\n      \"engines\": {\n        \"browsers\": [\"> 1%\", \"not dead\"]\n      }\n    }\n  }\n}\nSee Targets\npackage.json#alias\nAliases asset names/paths to other assets.\n{\n  \"alias\": {\n    \"react\": \"preact-compat\",\n    \"react-dom\": \"preact-compat\"\n  }\n}\nSee Aliases\n.parcelrc\nYour .parcelrc file will likely contain just a few fields (if you have one at\nall), but here's an example of a .parcelrc file that contains every field:\n{\n  \"extends\": [\"@parcel/config-default\"],\n  \"resolvers\": [\"@parcel/resolver-default\"],\n  \"transforms\": {\n    \"*.vue\": [\"@parcel/transformer-vue\"],\n    \"*.scss\": [\"@parcel/transformer-sass\"],\n    \"*.js\": [\"@parcel/transformer-babel\"],\n    \"*.css\": [\"@parcel/transformer-postcss\"],\n    \"*.html\": [\"@parcel/transformer-posthtml\"]\n  },\n  \"bundler\": \"@parcel/bundler-default\",\n  \"namers\": [\"@parcel/namer-default\"],\n  \"runtimes\": {\n    \"browser\": [\"@parcel/runtime-js\", \"@parcel/runtime-browser-hmr\"],\n    \"node\": [\"@parcel/runtime-js\"]\n  },\n  \"packagers\": {\n    \"*.js\": \"@parcel/packager-js\",\n    \"*.css\": \"@parcel/packager-css\",\n    \"*.html\": \"@parcel/packager-html\",\n    \"*.wasm\": \"@parcel/packager-wasm\",\n    \"*.raw\": \"@parcel/packager-raw\"\n  },\n  \"optimizers\": {\n    \"*.js\": [\"@parcel/optimizer-uglify\"],\n    \"*.css\": [\"@parcel/optimizer-cssnano\"],\n    \"*.html\": [\"@parcel/optimizer-htmlnano\"],\n    \"*.{png,jpg,jpeg,svg,...}\": [\"@parcel/optimizer-imagemin\"]\n  },\n  \"reporters\": [\"@parcel/reporter-cli\"]\n}\nGlob maps in .parcelrc\nMany config properties like transforms or packagers use objects as maps of\nglobs to package names. While objects in JSON are technically unordered, Parcel\ndoes use the order to give globs priority when a file name is being tested\nagainst them.\n{\n  \"transforms\": {\n    \"icons/*.svg\": [\"highest-priority\"],\n    \"*.svg\": [\"lowest-priority\"]\n  }\n}\nHere if we are trying to find a transform for the file icons/home.svg, we'll\nwork our way down the globs until we find a match, which would be\nicons/*.svg, we never reach *.svg.\n.parcelrc#extends\nextends can either be a string or an array of strings that specify base\nconfigs to extend. That base configuration can be the path to another\n.parcelrc file or the name of a Parcel config package.\n{\n  \"extends\": \"@parcel/config-default\",\n  \"extends\": \"../.parcelrc\",\n  \"extends\": [\"@parcel/config-default\", \"@company/parcel-config\"]\n}\nWhen extending a config, Parcel does a shallow merge of the two configs.\n.parcelrc#resolvers\nresolvers is an array of strings that specifies the name of a Parcel resolver\npackage.\n{\n  \"resolvers\": [\"@parcel/resolver-default\"]\n}\nSee Resolvers\n.parcelrc#transforms\ntransforms is an object map of globs to arrays of Parcel transform packages.\n{\n  \"transforms\": {\n    \"*.js\": [\"@parcel/transformer-babel\"]\n  }\n}\nSee Transforms\n.parcelrc#bundler\nbundler is a string that specifies the name of a Parcel bundler package.\n{\n  \"bundler\": \"@parcel/bundler-default\"\n}\nSee Bundlers\n.parcelrc#namers\nbundler is an array of Parcel namer packages.\n{\n  \"namers\": [\"@parcel/namer-default\"]\n}\nSee Namers\n.parcelrc#runtimes\nruntimes is an object map of environments to arrays of Parcel runtime packages.\n{\n  \"runtimes\": {\n    \"browser\": [\"@parcel/runtime-js\", \"@parcel/runtime-browser-hmr\"],\n    \"node\": [\"@parcel/runtime-js\"]\n  }\n}\nSee Runtimes\n.parcelrc#packagers\npackagers is an object map of globs to Parcel packager packages.\n{\n  \"packagers\": {\n    \"*.js\": [\"@parcel/packager-js\"]\n  }\n}\nSee Packagers\n.parcelrc#optimizers\noptimizers is an object map of globs to arrays of Parcel optimizer packages.\n{\n  \"optimizers\": {\n    \"*.js\": [\"@parcel/optimizer-uglify\"]\n  }\n}\nSee Optimizers\n.parcelrc#reporters\nreporters is an array of Parcel reporter packages.\n{\n  \"reporters\": [\"@parcel/reporter-detailed\"]\n}\nSee Reporters.\n.parcelrc#validators\nvalidators is an object map of globs to arrays of Parcel validator packages.\n  \"validators\": {\n    \"*.ts\": [\"@parcel/validator-typescript\"]\n  }\n}\nSee Reporters.\nParcel Architecture\nEven if you aren't doing anything that complex, if you are going to use Parcel\na lot it makes sense to take some time and understand how it works.\nPhases of Parcel\nAt a high level Parcel runs through several phases:\n\nResolving\nTransforming\nBundling\nPackaging\nOptimizing\n\nThe resolving and transforming phases work together in parallel to\nbuild a graph of all your assets.\nThis asset graph gets translated into bundles in the bundling phase.\nThen the packaging phase takes the assets in the calculated bundles and\nmerges them together into files each containing an entire bundle.\nFinally, in the optimizing phase, Parcel takes these bundles files and runs\nthem through optimizing transforms.\nAsset Graph\nDuring the resolving and transforming phases, Parcel discovers all the assets\nin your app or program. Every asset can have it's own dependencies on other\nassets which Parcel will pull in.\nThe data structure that represents all of these assets and their dependencies\non one another is known as \"The Asset Graph\".\n\n\n\nAsset Name\nDependencies\n\n\n\n\nindex.html\napp.css, app.js\n\n\napp.css\nN/A\n\n\napp.js\nnavbar.js\n\n\nnavbar.js\netc.\n\n\n\nBundles\nOnce Parcel has built the entire Asset Graph, it begins turning it into\n\"bundles\". These bundles are groupings of assets that get placed together in a\nsingle file.\nBundles will (generally) contain only assets in the same language:\n\n\n\nBundle Name\nAssets\n\n\n\n\nindex.html\nindex.html\n\n\napp.css\napp.css\n\n\napp.js\napp.js, navbar.js, etc.\n\n\n\nSome assets are considered \"entry\" points into your app, and will stay as\nseparate bundles. For example, if your index.html file links to an\nabout.html file, they won't be merged together.\n\n\n\nBundle Name\nAssets\nEntry URL\n\n\n\n\nindex.html\nindex.html\n/\n\n\nabout.html\nabout.html\n/about\n\n\n\nSources\n\"Sources\" are the files that contain the source code to your app before being\ncompiled by Parcel.\nParcel discovers these sources by following their dependencies on one another\nstarting at your \"entries\".\nThese entries will be one of:\n\n$ parcel <...entries>\n~/package.json#source\n./src/index.*\n./index.*\n\nFrom there, everything those assets depend on will be considered a \"source\" in\nParcel.\nTargets\nWhen Parcel runs, it can build your asset graph in multiple different ways\nsimultaneously. These are called \"targets\".\nFor example, you could have a \"modern\" target that targets newer browsers\nand a \"legacy\" target for older browsers.\nSources get mapped to targets,\nTarget Configuration\nIn the most explicit form, targets are configured via the\npackage.json#targets field.\n{\n  \"browser\": \"dist/browser/index.js\",\n  \"browserModern\": \"dist/browserModern/index.js\",\n  \"targets\": {\n    \"browser\": { /* target env */ },\n    \"browserModern\": { /* target env */ }\n  }\n}\nEach target has a name which corresponds to a top-level package.json field\nsuch as package.json#main or package.json#browser which specify the primary\nentry point for that target.\nInside each of those targets contains the target's environment configuration.\nHowever, a lot of the normal configuration you might want will already have\ndefaults provided for you:\ntargets = {\n  main: {\n    node: value(\"package.json#engines.node\"),\n    browsers: unless exists(\"package.json#browser\") then value(\"package.json#browserlist\"),\n  },\n  module: {\n    node: value(\"package.json#engines.node\"),\n    browsers: unless exists(\"package.json#browser\") then value(\"package.json#browserlist\"),\n  },\n  browser: {\n    browsers: value(\"package.json#browserslist\"),\n  },\n  ...value(\"package.json#targets\"),\n}\nEnvironments\nEnvironments tell Parcel how to transform and bundle each asset. They tell\nParcel if an asset is going to be run in a browser or in NodeJS/Electron.\nThey also tell Parcel's transform plugins how they should run. They tell\nBabel or\nAutoprefixer what browsers\nyour asset is targetting.\nYou can configure environments through your targets.\n{\n  \"targets\": {\n    \"main\": {\n      \"node\": \">=4.x\",\n      \"electron\": \">=2.x\",\n      \"browsers\": [\"> 1%\", \"not dead\"]\n    }\n  }\n}\nWhen one asset depends on another, the environment is inherited from its\nparent. But how you depend on the asset can change some properties of that\nenvironment.\nFor example:\nnavigator.serviceWorker.register('./service-worker.js');\nlet childEnvironment = {...parentEnvironment, browserContext: 'service-worker'};\nCaching\nParcel will create a /node_modules/.cache/parcel directory\nThe top-level directory will be filled with directories with two letters, which\nare the start of a hash which is finished by the names of the JSON files inside.\n/node_modules/.cache/parcel/\n  /00/\n    213debd8ddd45819b79a3a974ed487.json\n    40ae9b581afc53841307a4b3c2463d.json\n    63a9dd58fc1e8f8bb819759ea9793c.json\n    ...\n  /01/\n  /../\n  /zy/\n  /zz/\n\nIt follows this weird structure in order to avoid too many files being created\nin a single directory which degrades file system performance.\nAsset Resolution\nParcel follows the Node module resolution algorithm with a few additions.\nLocal Paths\n./path/to/file\n./path/to/file.js\n\nThese follow the Node module resolution algorithm.\nPackage Paths\npreact\nlodash/cloneDeep\n@sindresorhus/is\n\nThese follow the Node module resolution algorithm.\nURLs\nhttps://unpkg.com/preact@8.2.9/dist/preact.min.js\n\nParcel by default will ignore URL dependencies, other resolver plugins may\nchoose to do something with them.\nTilde Paths\n~/src/file.js\n\nOnly when used outside of node_modules directories, the ~ is replaced by an\nabsolute path to the closest package root:\n/path/to/app #(/package.json)\nTo form a path that looks like:\n/path/to/app/src/file.js\n\nThen it follows the Node module resolution algorithm.\nAliases\nAliases come in two forms:\n\nPackage Aliases: react -> preact\nFile/Directory Aliases: utils -> ./src/utils\n\n{\n  \"name\": \"my-project\",\n  \"alias\": {\n    \"react\": \"preact-compat\",\n    \"react-dom\": \"preact-compat\",\n    \"utils\": \"./src/utils\",\n    \"components\": \"./src/components\"\n  }\n}\nThere are a couple of rules:\n\nAliases will only be respected when specified outside of node_modules.\nAliases specified outside of node_modules will affect assets inside of node_modules.\nAliases cannot build off of other aliases.\nOnly one alias will be applied at a time.\nAliases must be valid npm package names.\n\nPlugins\nResolvers\nWhen one asset depends on another through an asset specifier, the resolver is\nresponsible for determining what asset is being requested.\nSee Asset Resolution for more details.\n{\n  \"resolvers\": [\"@parcel/resolver-v1\"]\n}\nOfficial Resolvers:\n\n@parcel/resolver-v1\n\nTransforms\nTransforms transform single assets as they are discovered and added to the\nasset graph. They mostly call out to different compilers and preprocessors.\n{\n  \"transforms\": {\n    \"*.js\": [\"@parcel/transformer-babel\"]\n  }\n}\nOfficial Transforms:\n\n@parcel/transformer-babel\n@parcel/transformer-coffeescript\n@parcel/transformer-graphql\n@parcel/transformer-json\n@parcel/transformer-json5\n@parcel/transformer-less\n@parcel/transformer-posthtml\n@parcel/transformer-postcss\n@parcel/transformer-pug\n@parcel/transformer-raw\n@parcel/transformer-reason\n@parcel/transformer-rust\n@parcel/transformer-stylus\n@parcel/transformer-toml\n@parcel/transformer-typescript\n@parcel/transformer-vue\n@parcel/transformer-wasm\n@parcel/transformer-webmanifest\n@parcel/transformer-yaml\n...\n\nBundlers\nBundlers accept the entire asset graph and turn it into sets of bundles.\n{\n  \"bundler\": \"@parcel/bundler-default\"\n}\nOfficial Bundlers:\n\n@parcel/bundler-default\n\nNamers\nNamers accept a bundle and return a filename for that bundle.\n{\n  \"namers\": [\"@parcel/namer-default\"]\n}\nOfficial Namers:\n\n@parcel/namer-default\n\nRuntimes\nRuntimes get called after the bundler phase and generate an asset which gets\nincluded in the final bundle.\n{\n  \"runtimes\": {\n    \"browser\": [\"@parcel/runtime-js\", \"@parcel/runtime-browser-hmr\"],\n    \"node\": [\"@parcel/runtime-js\"]\n  }\n}\nOfficial Runtimes:\n\n@parcel/runtime-js\n@parcel/runtime-hmr\n\nPackagers\nPackagers determine how to merge different asset types into a single bundle.\n{\n  \"packagers\": {\n    \"*.css\": \"@parcel/packager-css\"\n  }\n}\nOfficial Packagers:\n\n@parcel/packager-html\n@parcel/packager-js\n@parcel/packager-css\n@parcel/packager-wasm\n@parcel/packager-raw\n\nOptimizers\nOptimizers are similar to transformers, but they accept a bundle instead\nof a single asset.\n{\n  \"optimizers\": {\n    \"*.js\": [\"@parcel/optimizer-terser\"],\n    \"*.css\": [\"@parcel/optimizer-csso\"]\n  }\n}\nOfficial Optimizers:\n\n@parcel/packager-terser\n@parcel/packager-csso\n[todo]\n\nReporters\nReporters receive events as they happen and can either use the Parcel logger to\noutput to stdout/stderr or they can return assets to be generated on the file\nsystem.\n{\n  \"reporters\": [\"@parcel/reporter-cli\", \"@parcel/reporter-dev-server\"]\n}\nOfficial Reporters:\n\n@parcel/reporter-cli\n@parcel/reporter-dev-server\n[todo]\n\nValidators\nValidators emit errors for source code after a build is completed.\nFor example, type checking and linting.\n{\n  \"validators\": {\n    \"*.ts\": [\"@parcel/validator-typescript\"]\n  }\n}\nOfficial Validators:\n\n@parcel/validator-typescript\n@parcel/validator-eslint\n[todo]\n\nCreating Plugins\nNaming\nAll plugins must follow a naming system:\n\n\n\n\nOfficial package\nCommunity packages\nPrivate company/scoped team packages\n\n\n\n\nConfigs\n@parcel/config-{name}\nparcel-config-{name}\n@scope/parcel-config[-{name}]\n\n\nResolvers\n@parcel/resolver-{name}\nparcel-resolver-{name}\n@scope/parcel-resolver[-{name}]\n\n\nTransforms\n@parcel/transformer-{name}\nparcel-transformer-{name}\n@scope/parcel-transformer[-{name}]\n\n\nBundlers\n@parcel/bundler-{name}\nparcel-bundler-{name}\n@scope/parcel-bundler[-{name}]\n\n\nNamers\n@parcel/namer-{name}\nparcel-namer-{name}\n@scope/parcel-namer[-{name}]\n\n\nRuntimes\n@parcel/runtime-{name}\nparcel-runtime-{name}\n@scope/parcel-runtime[-{name}]\n\n\nPackagers\n@parcel/packager-{name}\nparcel-packager-{name}\n@scope/parcel-packager[-{name}]\n\n\nOptimizers\n@parcel/optimizer-{name}\nparcel-optimizer-{name}\n@scope/parcel-optimizer[-{name}]\n\n\nReporters\n@parcel/reporter-{name}\nparcel-reporter-{name}\n@scope/parcel-reporter[-{name}]\n\n\nValidators\n@parcel/validator-{name}\nparcel-validator-{name}\n@scope/parcel-validator[-{name}]\n\n\n\nThe {name} must be descriptive and directly related to the purpose of the\npackage. Someone should be able to have an idea of what the package does simply\nby reading the name in a .parcelrc or package.json#devDependencies.\nparcel-transformer-posthtml\nparcel-packager-wasm\nparcel-reporter-graph-visualizer\n\nIf your plugin adds support for a specific tool, please use the name of the\ntool.\nparcel-transformer-es6 (bad)\nparcel-transformer-babel (good)\n\nIf your plugin is a reimplementation of something that exists, try naming it\nsomething that explains why it is a separate:\nparcel-transformer-better-typescript (bad)\nparcel-transformer-typescript-server (good)\n\nWe ask that community members work together and when forks happen to try and\nresolve them. If someone made a better version of your plugin, please consider\ngiving the better package name over, have them make a major version bump, and\nredirect people to the new tool.\nVersioning\nYou must follow semantic versioning (to the best of your ability). No, it's not\nthe perfect system, but it's the best one we have and people do depend on it.\nIf plugin authors intentionally don't follow semantic versioning, Parcel may\nstart warning users that they should be locking down the version number for\nyour plugin.\n\nWarning: The plugin \"parcel-transform-typescript\" does not follow semantic\nversioning. You should lock the version range down so your code does not\nbreak when they make changes. Please upvote this issue to encourage them to\nfollow semver: https://github.com/user/parcel-transform-typescript/issues/43\n\nEngines\nYou must specify a package.json#engines.parcel field with the version range\nof Parcel that your plugin supports:\n{\n  \"name\": \"parcel-transform-imagemin\",\n  \"engines\": {\n    \"parcel\": \"2.x\"\n  }\n}\nIf you do not specify this field, Parcel will output a warning:\nWarning: The plugin \"parcel-transform-typescript\" needs to specify a `package.json#engines.parcel` field with the supported Parcel version range.\n\nIf you do specify the parcel engine field and the user is using an incompatible\nversion of Parcel, they will see an error:\nError: The plugin \"parcel-transform-typescript\" is not compatible with the\ncurrent version of Parcel. Requires \"2.x\" but the current version is \"3.1.4\"\n\nParcel uses node-semver to match version ranges.\nPlugin APIs\nThere are several different types of plugins. They all look very similar, but\nare kept separate so we can have strict contracts one what each one is allowed\nto do.\nThere are some rules that should be followed across every type of plugin:\n\nStateless \u2014 Avoid any kind of state, it will likely be the source of bugs\nfor your users. For example, the same transform may exist in multiple\nseparate workers which are not allowed to communicate with one another, state\nwill not work as expected.\nPure \u2014 Given the same input, a plugin must produce the same output, and\nyou must not have any observable side effects, or implicit dependencies.\nOtherwise Parcel's caching will break and your users will be sad. You should\nnever have to tell users to delete their caches.\n\nThe plugin APIs all follow a common shape:\nimport {NameOfPluginType} from '@parcel/plugin';\n\nexport default new NameOfPluginType({\n  async methodName(opts: JSONObject): Promise<JSONObject> {\n    return result;\n  }\n});\nThey are made up of modules with well-known named exports of async functions\nthat:\n\nAccept a strictly validated JSON-serializable opts object.\nReturn a strictly validated JSON-serializable vals object.\n\nIf something you need is not being passed through opts, please come talk to\nthe Parcel team about it. Avoid trying to get information yourself from other\nsources, especially from the file system.\nResolvers\nResolvers get called with an asset request (consisting of a source file path\nand the specifier of what is being requested) which it then attempts to\nresolve. If the resolver isn't sure how to handle a request, it can also return\nnull and pass it to the next resolver in the chain.\nimport {Resolver} from '@parcel/plugin';\n\nexport default new Resolver({\n  async resolve({dependency}) {\n    // ...\n    return {filePath} || null;\n  }\n});\nTransforms\nTransforms transform single assets as they are discovered and added to the\nasset graph. They mostly call out to different compilers and preprocessors.\nimport {Transform} from '@parcel/plugin';\n\nexport default new Transform({\n  async getConfig({asset}) {\n    // ...\n    return config;\n  },\n\n  async parse({asset}) {\n    // ...\n    return ast;\n  },\n\n  async transform({asset}) {\n    // ...\n    return [assets];\n  },\n\n  async generate({asset}) {\n    // ...\n    return {code, map};\n  }\n});\nBundler\nBundlers accept the entire asset graph and modify it to add bundle nodes that group the assets\ninto output bundles.\nimport {Bundler} from '@parcel/plugin';\n\nexport default new Bundler({\n  async bundle({graph}) {\n    // ...\n  },\n\n  async optimize({graph}) {\n    // ...\n  }\n});\nNamers\nNamers accept a bundle and output a filename for that bundle.\nimport {Namer} from '@parcel/plugin';\n\nexport default new Namer({\n  async name({bundle, bundleGraph}) {\n    // ...\n    return name;\n  }\n});\nRuntimes\nRuntimes accept a bundle and return assets to be inserted into that bundle.\nimport {Runtime} from '@parcel/runtime';\n\nexport default new Runtime({\n  async apply({bundle, bundleGraph}) {\n    // ...\n    return assets;\n  }\n});\nPackagers\nPackagers determine how to merge different asset types into a single bundle.\nimport {Packager} from '@parcel/plugin';\n\nexport default new Packager({\n  async package({bundle}) {\n    // ...\n    return {contents, map};\n  },\n});\nOptimizers\nOptimizers are similar to transformers, but they accept a bundle instead\nof a single asset.\nimport {Optimizer} from '@parcel/plugin';\n\nexport default new Optimizer({\n  async optimize({bundle, contents, map}) {\n    // ...\n    return {contents, map};\n  }\n});\nReporters\nReporters receive events as they happen and can output to stdout/stderr,\nor perform other actions.\nimport {Reporter} from '@parcel/plugin';\n\nexport default new Reporter({\n  async report({ event: { type, ... } }) {\n    // ...\n  }\n});\nValidators\nValidators receive an asset, and can throw errors if that asset is invalid\nin some way, e.g. type errors or linting errors.\nimport {Validator} from '@parcel/plugin';\n\nexport default new Validator({\n  async validate({asset}) {\n    // ...\n    throw error;\n  }\n});\n\n"}, {"repo": "minimaxir/big-list-of-naughty-strings", "language": "Python", "readme": "\nBig List of Naughty Strings\nThe Big List of Naughty Strings is an evolving list of strings which have a high probability of causing issues when used as user-input data. This is intended for use in helping both automated and manual QA testing; useful for whenever your QA engineer walks into a bar.\nWhy Test Naughty Strings?\nEven multi-billion dollar companies with huge amounts of automated testing can't find every bad input. For example, look at what happens when you try to Tweet a zero-width space (U+200B) on Twitter:\n\nAlthough this is not a malicious error, and typical users aren't Tweeting weird unicode, an \"internal server error\" for unexpected input is never a positive experience for the user, and may in fact be a symptom of deeper string-validation issues. The Big List of Naughty Strings is intended to help reveal such issues.\nUsage\nblns.txt consists of newline-delimited strings and comments which are preceded with #. The comments divide the strings into sections for easy manual reading and copy/pasting into input forms. For those who want to access the strings programmatically, a blns.json file is provided containing an array with all the comments stripped out (the scripts folder contains a Python script used to generate the blns.json).\nContributions\nFeel free to send a pull request to add more strings, or additional sections. However, please do not send pull requests with very-long strings (255+ characters), as that makes the list much more difficult to view.\nLikewise, please do not send pull requests which compromise manual usability of the file. This includes the EICAR test string, which can cause the file to be flagged by antivirus scanners, and files which alter the encoding of blns.txt. Also, do not send a null character (U+0000) string, as it changes the file format on GitHub to binary and renders it unreadable in pull requests. Finally, when adding or removing a string please update all files when you perform a pull request.\nDisclaimer\nThe Big List of Naughty Strings is intended to be used for software you own and manage. Some of the Naughty Strings can indicate security vulnerabilities, and as a result using such strings with third-party software may be a crime. The maintainer is not responsible for any negative actions that result from the use of the list.\nAdditionally, the Big List of Naughty Strings is not a fully-comprehensive substitute for formal security/penetration testing for your service.\nLibrary / Packages\nVarious implementations of the Big List of Naughty Strings have made it to various package managers.  Those are maintained by outside parties, but can be found here:\n\n\n\nLibrary\nLink\n\n\n\n\nNode\nhttps://www.npmjs.com/package/blns\n\n\nNode\nhttps://www.npmjs.com/package/big-list-of-naughty-strings\n\n\n.NET\nhttps://github.com/SimonCropp/NaughtyStrings\n\n\n\nPlease open a PR to list others.\nMaintainer/Creator\nMax Woolf (@minimaxir)\nSocial Media Discussions\n\nJune 10, 2015 [Hacker News]: Show HN: Big List of Naughty Strings for testing user-input data\nAugust 17, 2015 [Reddit]: Big list of naughty strings.\nFebruary 9, 2016 [Reddit]: Big List of Naughty Strings\nJanuary 15, 2017 [Hacker News]: Naughty Strings: A list of strings likely to cause issues as user-input data\nJanuary 16, 2017 [Reddit]: Naughty Strings: A list of strings likely to cause issues as user-input data\nNovember 16, 2018 [Hacker News]: Big List of Naughty Strings\nNovember 16, 2018 [Reddit]: Naughty Strings - A list of strings which have a high probability of causing issues when used as user-input data\n\nLicense\nMIT\n\n"}, {"repo": "gothinkster/realworld", "language": "JavaScript", "readme": "\n\n\nStay on the bleeding edge \u2014 join our Gitter room! \ud83c\udf89\n  \n\n\n\n\nSee how the exact same Medium.com clone (called Conduit) is built using any of our supported frontends and  backends. Yes, you can mix and match them, because they all adhere to the same API spec \ud83d\ude2e\ud83d\ude0e\nWhile most \"todo\" demos provide an excellent cursory glance at a framework's capabilities, they typically don't convey the knowledge & perspective required to actually build real applications with it.\nRealWorld solves this by allowing you to choose any frontend (React, Angular 2, & more) and any backend (Node, Django, & more) and see how they power a real world, beautifully designed fullstack app called \"Conduit\".\nRead the full blog post announcing RealWorld on Medium.\nFrontends\n\nSorted by popularity on Sun Dec 01 2019\n\n\n\n\n\ud83e\udd47\n\ud83e\udd48\n\ud83e\udd49\n\n\n\n\nReact / Redux   \nAngular   \nElm   \n\n\nVue   \nReact / MobX   \nSvelte / Sapper   \n\n\nPureScript + Halogen   \nAngularJS   \nClojureScript + re-frame   \n\n\nAngular + ngrx + nx   \nAurelia   \nEmber.js   \n\n\nAppRun   \nClojureScript + Keechma   \nHyperapp 1   \n\n\nStencil.js   \nDojo 2   \nRiot.js v4   \n\n\nImba   \nCrizmas MVC   \nBridge.Spaf   \n\n\nRiot.js v3   \n\n\n\n\n\nWork In Progress:\nImplement GraphQL + Apollo/Relay for the Node + React codebases |\n\ud83d\udda5 \ud83d\udd27  ClojureScript |\n\ud83d\udda5 \ud83d\udd27 Mithril |\n\ud83d\udda5 \ud83d\udd27 Vanilla JS (Web Components) |\nAngular 4+ / MobX |\nAngularJS 1.2  |\nVanilla Backbone.js |\nRactive |\nPreact |\nQuasar framework |\nHydrating VanillaJS (vaguely based on web components) |\nBlazor |\nReasonReact (ReasonML) |\n$mol |\nSurplus wip |\nSlim.js |\nNuxt.js |\nTypescript + Web Components |\nReact + NextJS\nBackends\n\nSorted by popularity on Sun Dec 01 2019\n\n\n\n\n\ud83e\udd47\n\ud83e\udd48\n\ud83e\udd49\n\n\n\n\nNode / Express   \nGo + Gin   \nASP.NET Core   \n\n\nLaravel   \nDjango   \nElixir + Phoenix   \n\n\nNestJS + TypeORM   \nFlask   \nSpring   \n\n\nRails   \nSlim   \nKotlin / Spring   \n\n\nRust   \nRust / Rocket   \nKoa / Knex   \n\n\nClojure / Polylith   \nGo Clean Architecture   \nGo / Echo   \n\n\nServerless AWS Lambda DynamoDB   \nScala & Play Framework   \nHaskell / Yesod   \n\n\nCakePHP   \nGCP Cloud Functions + Datastore   \nMoleculer   \n\n\nHapi.js   \nF#   \nFunctional ASP.NET Core   \n\n\nKotlin + Javalin + Exposed   \nCrystal (Onyx)   \nNode / hapi pal   \n\n\nExpress w/ Bookshelf.js   \nQEWD.js   \nKotlin + http4k   \n\n\nRuby & Colmena   \nFeathers   \nKotlin + Ktor   \n\n\nAkka HTTP   \nSpincast   \n\n\n\n\nWork In Progress:\nImplement GraphQL + Apollo/Relay for the Node + React codebases |\n\ud83d\uddc4\ud83d\udd27  Go + net/http |\n\ud83d\uddc4\ud83d\udd27 Node + GraphQL |\n\ud83d\uddc4\ud83d\udd27 Clojure |\n\ud83d\uddc4\ud83d\udd27 Falcon and GAE |\n\ud83d\uddc4\ud83d\udd27 Nim |\n\ud83d\uddc4\ud83d\udd27 Symfony |\n\ud83d\uddc4\ud83d\udd27 Haskell / Servant |\n\ud83d\uddc4\ud83d\udd27 Phalcon |\n\ud83d\uddc4\ud83d\udd27 Dropwizard |\n\ud83d\uddc4\ud83d\udd27 Go + Gorilla mux |\n\ud83d\uddc4\ud83d\udd27 Loopback 3.0 |\n\ud83d\uddc4 \ud83d\udd27 Crystal + Kemal |\n\ud83d\uddc4 \ud83d\udd27 Erlang + Cowboy |\n\ud83d\uddc4 \ud83d\udd27 Nancy |\n\ud83d\uddc4\ud83d\udd27 Sanic |\nHaskell / Scotty |\nTypescript + node + express |\ntypescript + node.js(koa) |\nVanilla PHP |\nVert.x (Java) |\nLumen + MongoDB  |\nGo + net/http Package  |\nSwift Vapor |\nEgg.js |\nServerless python (AWS Lambda) |\nServerless Typescript + Mongodb (implementation done) |\nAzure Functions + CosmosDb |\nServerless+Typescript with AWS as the provider (Lambda, SSM, DynamoDB) |\nVertx + Reactive + MongoDB |\nFullstack Golang (tgram) |\nZend Framework |\nRust / Rocket / Diesel / Mysql - Backend Application |\nGolang + Revel |\nMasonite |\nTurbolinks |\nActix |\nLucky |\nSymfony 4 with API Platform |\nKotlin + Hexagon |\nScala + Finch |\nHolochain\nMobile\n\nSorted by popularity on Sun Dec 01 2019\n\n\n\n\n\ud83e\udd47\n\ud83e\udd48\n\ud83e\udd49\n\n\n\n\nNativeScript (Angular)   \n\n\n\n\n\nWork In Progress:\n\ud83d\udcf1\ud83d\udd27 React Native |\n\ud83d\udcf1\ud83d\udd27 Jasonette |\n\ud83d\udcf1\ud83d\udd27 Swift |\n\ud83d\udcf1\ud83d\udd27 C# on Xamarin |\n\ud83d\udcf1 \ud83d\udd27 Kotlin/Android |\n\ud83d\udcf1\ud83d\udd27 Onymos |\nQuasar framework |\nSwift Perfect |\nFlutter\nFullstack\nSince these implementations are responsible for the entire stack, they obviously cannot be mixed and matched but they still adhere to the same functionality & UX specs.\nWork In Progress: Meteor | Ruby Hyperloop | Firebase\nCreate a new stack\n\nKnow any of these frameworks (or one that isn't listed)?Create a new framework implementation >>>\nOr you can view upcoming stacks (WIPs)\nNote: All stacks that are a WIP are experimental and incomplete.\nDon't expect everything to work perfectly out of the box!\n\nHow do I get up & running?\nSimply follow the instructions in the README of whatever frontend and/or backend repo's you want to get up and running.\nCan you teach me how to build each stack from scratch?\nYup! We've built step-by-step tutorials for all of our stacks that teach you how to go from git init all the way to the production ready application. Start learning now >>>\n\nCommunity created resources\nForks, tutorials, workshops, and other resources based on the RealWorld project:\n\nReact+Redux / Node testing workshop by Kent C. Dodds\n\nExample repo showing the React+Redux and Node stacks working together w/ TDD\nLive recording of his workshop is available on YouTube\n\n\nRealWorld React/NodeJS E2E Tests by Anish Karandikar\n\nA repo showing how to wire React frontend with NodeJS backend for a RealWorld fullstack\nIncludes E2E integration tests that use Chrome Puppeteer and Mocha and work with CI systems like Travis CI and CircleCI\nAlso demonstrates usage of Greenkeeper for automatic dependency updates and Snyk for vulnerability monitoring\n\n\nPerformance comparisons:\n\nA Real-World Comparison of Front-End Frameworks with Benchmarks 2019\nA Real-World Comparison of Front-End Frameworks with Benchmarks 2018\nA Real-World Comparison of Front-End Frameworks with Benchmarks 2017\n\n\n\n\nLearn more\n\n\"Introducing RealWorld \ud83d\ude4c\" by Eric Simons\nEvery tutorial is built against the same API spec to ensure modularity of every frontend & backend\nEvery frontend utilizes the same hand crafted Bootstrap 4 theme for identical UI/UX\nThere is a hosted version of the backend API available for public usage, no API keys required\nInterested in creating a new RealWorld stack? View our starter guide & spec\n\n\nWho made this?\nRealWorld would not be possible without the open source community continuously helping push the project forward. In addition, we have a core project team composed of:\nAnish Karandikar - Core Maintainer\n\nMathWorker, ex-Google, ex-Computational Fluid Dynamicist, forever lover of tech & humanities \u2764\ufe0f\nCameron Chapman - Core Maintainer\n\nCameron Chapman is a Software Engineer at FanThreeSixty. He's an open source enthusiast and is helping to teach a local web development boot camp at Kansas University.\nEric Simons - Founder/Maintainer\n\nEric is a Software Engineer, UI Designer, and author of many technical books & tutorials. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.\nAlbert Pai - Founder/Maintainer\n\nAlbert is a Software Engineer, DevOps ninja, and author of many technical books & tutorials. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.\nThinkster - Funding/Support\n\nThinkster creates high quality resources that help Javascript developers succeed. The RealWorld project wouldn't exist without their funding, so please consider investing in a Pro subscription to help support us!\nJames Brewer - Admin\n\nJames is a Software Engineer at Square and a contributor to the Django project. He created & maintains the RW Django codebase and continually provides guidance for the RealWorld project itself.\nSandeesh S. - Admin\n\nFull stack developer, Laravel enthusiast, Digital marketing specialist and an avid gamer.\nSpecial thanks to...\nRealWorld wouldn't be possible without the help of the open source community reviewing codebases, creating new app implementations, and many other tasks that help push this project forward. We especially appreciate the OSS leaders who have helped contribute to RealWorld:\n\nDan Abramov (creator of Redux) for  helping spark the initial idea, getting the Redux community involved, as well as graciously taking the time to provide feedback on the Redux codebase\nMax Lynch (creator of Ionic) for taking the time to provide guidance in the early days of this project\nAddy Osmani (creator of TodoMVC) for helping spark the initial idea and his amazing work with TodoMVC\nTodoMVC (team & contributors) for their exemplary & successful work; their project & org has been an invaluable analogy for us as we've built out RealWorld\nJames Brewer (docs contributor to Django) for countless brainstorming sessions, helping name this project, and creating the Django codebase + tutorial\n\nLicense\nAll of the codebases are MIT licensed unless otherwise specified.\n\n\n\n"}, {"repo": "gin-gonic/gin", "language": "Go", "readme": "\nGin Web Framework\n\n\n\n\n\n\n\n\n\nGin is a web framework written in Go (Golang). It features a martini-like API with performance that is up to 40 times faster thanks to httprouter. If you need performance and good productivity, you will love Gin.\nContents\n\nInstallation\nPrerequisite\nQuick start\nBenchmarks\nGin v1.stable\nBuild with jsoniter\nAPI Examples\n\nUsing GET,POST,PUT,PATCH,DELETE and OPTIONS\nParameters in path\nQuerystring parameters\nMultipart/Urlencoded Form\nAnother example: query + post form\nMap as querystring or postform parameters\nUpload files\nGrouping routes\nBlank Gin without middleware by default\nUsing middleware\nHow to write log file\nCustom Log Format\nModel binding and validation\nCustom Validators\nOnly Bind Query String\nBind Query String or Post Data\nBind Uri\nBind Header\nBind HTML checkboxes\nMultipart/Urlencoded binding\nXML, JSON, YAML and ProtoBuf rendering\nJSONP rendering\nServing static files\nServing data from reader\nHTML rendering\nMultitemplate\nRedirects\nCustom Middleware\nUsing BasicAuth() middleware\nGoroutines inside a middleware\nCustom HTTP configuration\nSupport Let's Encrypt\nRun multiple service using Gin\nGraceful restart or stop\nBuild a single binary with templates\nBind form-data request with custom struct\nTry to bind body into different structs\nhttp2 server push\nDefine format for the log of routes\nSet and get a cookie\n\n\nTesting\nUsers\n\nInstallation\nTo install Gin package, you need to install Go and set your Go workspace first.\n\nThe first need Go installed (version 1.11+ is required), then you can use the below Go command to install Gin.\n\n$ go get -u github.com/gin-gonic/gin\n\nImport it in your code:\n\nimport \"github.com/gin-gonic/gin\"\n\n(Optional) Import net/http. This is required for example if using constants such as http.StatusOK.\n\nimport \"net/http\"\nQuick start\n# assume the following codes in example.go file\n$ cat example.go\npackage main\n\nimport \"github.com/gin-gonic/gin\"\n\nfunc main() {\n\tr := gin.Default()\n\tr.GET(\"/ping\", func(c *gin.Context) {\n\t\tc.JSON(200, gin.H{\n\t\t\t\"message\": \"pong\",\n\t\t})\n\t})\n\tr.Run() // listen and serve on 0.0.0.0:8080 (for windows \"localhost:8080\")\n}\n# run example.go and visit 0.0.0.0:8080/ping (for windows \"localhost:8080/ping\") on browser\n$ go run example.go\n\nBenchmarks\nGin uses a custom version of HttpRouter\nSee all benchmarks\n\n\n\nBenchmark name\n(1)\n(2)\n(3)\n(4)\n\n\n\n\nBenchmarkGin_GithubAll\n30000\n48375\n0\n0\n\n\nBenchmarkAce_GithubAll\n10000\n134059\n13792\n167\n\n\nBenchmarkBear_GithubAll\n5000\n534445\n86448\n943\n\n\nBenchmarkBeego_GithubAll\n3000\n592444\n74705\n812\n\n\nBenchmarkBone_GithubAll\n200\n6957308\n698784\n8453\n\n\nBenchmarkDenco_GithubAll\n10000\n158819\n20224\n167\n\n\nBenchmarkEcho_GithubAll\n10000\n154700\n6496\n203\n\n\nBenchmarkGocraftWeb_GithubAll\n3000\n570806\n131656\n1686\n\n\nBenchmarkGoji_GithubAll\n2000\n818034\n56112\n334\n\n\nBenchmarkGojiv2_GithubAll\n2000\n1213973\n274768\n3712\n\n\nBenchmarkGoJsonRest_GithubAll\n2000\n785796\n134371\n2737\n\n\nBenchmarkGoRestful_GithubAll\n300\n5238188\n689672\n4519\n\n\nBenchmarkGorillaMux_GithubAll\n100\n10257726\n211840\n2272\n\n\nBenchmarkHttpRouter_GithubAll\n20000\n105414\n13792\n167\n\n\nBenchmarkHttpTreeMux_GithubAll\n10000\n319934\n65856\n671\n\n\nBenchmarkKocha_GithubAll\n10000\n209442\n23304\n843\n\n\nBenchmarkLARS_GithubAll\n20000\n62565\n0\n0\n\n\nBenchmarkMacaron_GithubAll\n2000\n1161270\n204194\n2000\n\n\nBenchmarkMartini_GithubAll\n200\n9991713\n226549\n2325\n\n\nBenchmarkPat_GithubAll\n200\n5590793\n1499568\n27435\n\n\nBenchmarkPossum_GithubAll\n10000\n319768\n84448\n609\n\n\nBenchmarkR2router_GithubAll\n10000\n305134\n77328\n979\n\n\nBenchmarkRivet_GithubAll\n10000\n132134\n16272\n167\n\n\nBenchmarkTango_GithubAll\n3000\n552754\n63826\n1618\n\n\nBenchmarkTigerTonic_GithubAll\n1000\n1439483\n239104\n5374\n\n\nBenchmarkTraffic_GithubAll\n100\n11383067\n2659329\n21848\n\n\nBenchmarkVulcan_GithubAll\n5000\n394253\n19894\n609\n\n\n\n\n(1): Total Repetitions achieved in constant time, higher means more confident result\n(2): Single Repetition Duration (ns/op), lower is better\n(3): Heap Memory (B/op), lower is better\n(4): Average Allocations per Repetition (allocs/op), lower is better\n\nGin v1. stable\n\n Zero allocation router.\n Still the fastest http router and framework. From routing to writing.\n Complete suite of unit tests\n Battle tested\n API frozen, new releases will not break your code.\n\nBuild with jsoniter\nGin uses encoding/json as default json package but you can change to jsoniter by build from other tags.\n$ go build -tags=jsoniter .\nAPI Examples\nYou can find a number of ready-to-run examples at Gin examples repository.\nUsing GET, POST, PUT, PATCH, DELETE and OPTIONS\nfunc main() {\n\t// Creates a gin router with default middleware:\n\t// logger and recovery (crash-free) middleware\n\trouter := gin.Default()\n\n\trouter.GET(\"/someGet\", getting)\n\trouter.POST(\"/somePost\", posting)\n\trouter.PUT(\"/somePut\", putting)\n\trouter.DELETE(\"/someDelete\", deleting)\n\trouter.PATCH(\"/somePatch\", patching)\n\trouter.HEAD(\"/someHead\", head)\n\trouter.OPTIONS(\"/someOptions\", options)\n\n\t// By default it serves on :8080 unless a\n\t// PORT environment variable was defined.\n\trouter.Run()\n\t// router.Run(\":3000\") for a hard coded port\n}\nParameters in path\nfunc main() {\n\trouter := gin.Default()\n\n\t// This handler will match /user/john but will not match /user/ or /user\n\trouter.GET(\"/user/:name\", func(c *gin.Context) {\n\t\tname := c.Param(\"name\")\n\t\tc.String(http.StatusOK, \"Hello %s\", name)\n\t})\n\n\t// However, this one will match /user/john/ and also /user/john/send\n\t// If no other routers match /user/john, it will redirect to /user/john/\n\trouter.GET(\"/user/:name/*action\", func(c *gin.Context) {\n\t\tname := c.Param(\"name\")\n\t\taction := c.Param(\"action\")\n\t\tmessage := name + \" is \" + action\n\t\tc.String(http.StatusOK, message)\n\t})\n\n\t// For each matched request Context will hold the route definition\n\trouter.POST(\"/user/:name/*action\", func(c *gin.Context) {\n\t\tc.FullPath() == \"/user/:name/*action\" // true\n\t})\n\n\trouter.Run(\":8080\")\n}\nQuerystring parameters\nfunc main() {\n\trouter := gin.Default()\n\n\t// Query string parameters are parsed using the existing underlying request object.\n\t// The request responds to a url matching:  /welcome?firstname=Jane&lastname=Doe\n\trouter.GET(\"/welcome\", func(c *gin.Context) {\n\t\tfirstname := c.DefaultQuery(\"firstname\", \"Guest\")\n\t\tlastname := c.Query(\"lastname\") // shortcut for c.Request.URL.Query().Get(\"lastname\")\n\n\t\tc.String(http.StatusOK, \"Hello %s %s\", firstname, lastname)\n\t})\n\trouter.Run(\":8080\")\n}\nMultipart/Urlencoded Form\nfunc main() {\n\trouter := gin.Default()\n\n\trouter.POST(\"/form_post\", func(c *gin.Context) {\n\t\tmessage := c.PostForm(\"message\")\n\t\tnick := c.DefaultPostForm(\"nick\", \"anonymous\")\n\n\t\tc.JSON(200, gin.H{\n\t\t\t\"status\":  \"posted\",\n\t\t\t\"message\": message,\n\t\t\t\"nick\":    nick,\n\t\t})\n\t})\n\trouter.Run(\":8080\")\n}\nAnother example: query + post form\nPOST /post?id=1234&page=1 HTTP/1.1\nContent-Type: application/x-www-form-urlencoded\n\nname=manu&message=this_is_great\n\nfunc main() {\n\trouter := gin.Default()\n\n\trouter.POST(\"/post\", func(c *gin.Context) {\n\n\t\tid := c.Query(\"id\")\n\t\tpage := c.DefaultQuery(\"page\", \"0\")\n\t\tname := c.PostForm(\"name\")\n\t\tmessage := c.PostForm(\"message\")\n\n\t\tfmt.Printf(\"id: %s; page: %s; name: %s; message: %s\", id, page, name, message)\n\t})\n\trouter.Run(\":8080\")\n}\nid: 1234; page: 1; name: manu; message: this_is_great\n\nMap as querystring or postform parameters\nPOST /post?ids[a]=1234&ids[b]=hello HTTP/1.1\nContent-Type: application/x-www-form-urlencoded\n\nnames[first]=thinkerou&names[second]=tianou\n\nfunc main() {\n\trouter := gin.Default()\n\n\trouter.POST(\"/post\", func(c *gin.Context) {\n\n\t\tids := c.QueryMap(\"ids\")\n\t\tnames := c.PostFormMap(\"names\")\n\n\t\tfmt.Printf(\"ids: %v; names: %v\", ids, names)\n\t})\n\trouter.Run(\":8080\")\n}\nids: map[b:hello a:1234], names: map[second:tianou first:thinkerou]\n\nUpload files\nSingle file\nReferences issue #774 and detail example code.\nfile.Filename SHOULD NOT be trusted. See Content-Disposition on MDN and #1693\n\nThe filename is always optional and must not be used blindly by the application: path information should be stripped, and conversion to the server file system rules should be done.\n\nfunc main() {\n\trouter := gin.Default()\n\t// Set a lower memory limit for multipart forms (default is 32 MiB)\n\t// router.MaxMultipartMemory = 8 << 20  // 8 MiB\n\trouter.POST(\"/upload\", func(c *gin.Context) {\n\t\t// single file\n\t\tfile, _ := c.FormFile(\"file\")\n\t\tlog.Println(file.Filename)\n\n\t\t// Upload the file to specific dst.\n\t\t// c.SaveUploadedFile(file, dst)\n\n\t\tc.String(http.StatusOK, fmt.Sprintf(\"'%s' uploaded!\", file.Filename))\n\t})\n\trouter.Run(\":8080\")\n}\nHow to curl:\ncurl -X POST http://localhost:8080/upload \\\n  -F \"file=@/Users/appleboy/test.zip\" \\\n  -H \"Content-Type: multipart/form-data\"\nMultiple files\nSee the detail example code.\nfunc main() {\n\trouter := gin.Default()\n\t// Set a lower memory limit for multipart forms (default is 32 MiB)\n\t// router.MaxMultipartMemory = 8 << 20  // 8 MiB\n\trouter.POST(\"/upload\", func(c *gin.Context) {\n\t\t// Multipart form\n\t\tform, _ := c.MultipartForm()\n\t\tfiles := form.File[\"upload[]\"]\n\n\t\tfor _, file := range files {\n\t\t\tlog.Println(file.Filename)\n\n\t\t\t// Upload the file to specific dst.\n\t\t\t// c.SaveUploadedFile(file, dst)\n\t\t}\n\t\tc.String(http.StatusOK, fmt.Sprintf(\"%d files uploaded!\", len(files)))\n\t})\n\trouter.Run(\":8080\")\n}\nHow to curl:\ncurl -X POST http://localhost:8080/upload \\\n  -F \"upload[]=@/Users/appleboy/test1.zip\" \\\n  -F \"upload[]=@/Users/appleboy/test2.zip\" \\\n  -H \"Content-Type: multipart/form-data\"\nGrouping routes\nfunc main() {\n\trouter := gin.Default()\n\n\t// Simple group: v1\n\tv1 := router.Group(\"/v1\")\n\t{\n\t\tv1.POST(\"/login\", loginEndpoint)\n\t\tv1.POST(\"/submit\", submitEndpoint)\n\t\tv1.POST(\"/read\", readEndpoint)\n\t}\n\n\t// Simple group: v2\n\tv2 := router.Group(\"/v2\")\n\t{\n\t\tv2.POST(\"/login\", loginEndpoint)\n\t\tv2.POST(\"/submit\", submitEndpoint)\n\t\tv2.POST(\"/read\", readEndpoint)\n\t}\n\n\trouter.Run(\":8080\")\n}\nBlank Gin without middleware by default\nUse\nr := gin.New()\ninstead of\n// Default With the Logger and Recovery middleware already attached\nr := gin.Default()\nUsing middleware\nfunc main() {\n\t// Creates a router without any middleware by default\n\tr := gin.New()\n\n\t// Global middleware\n\t// Logger middleware will write the logs to gin.DefaultWriter even if you set with GIN_MODE=release.\n\t// By default gin.DefaultWriter = os.Stdout\n\tr.Use(gin.Logger())\n\n\t// Recovery middleware recovers from any panics and writes a 500 if there was one.\n\tr.Use(gin.Recovery())\n\n\t// Per route middleware, you can add as many as you desire.\n\tr.GET(\"/benchmark\", MyBenchLogger(), benchEndpoint)\n\n\t// Authorization group\n\t// authorized := r.Group(\"/\", AuthRequired())\n\t// exactly the same as:\n\tauthorized := r.Group(\"/\")\n\t// per group middleware! in this case we use the custom created\n\t// AuthRequired() middleware just in the \"authorized\" group.\n\tauthorized.Use(AuthRequired())\n\t{\n\t\tauthorized.POST(\"/login\", loginEndpoint)\n\t\tauthorized.POST(\"/submit\", submitEndpoint)\n\t\tauthorized.POST(\"/read\", readEndpoint)\n\n\t\t// nested group\n\t\ttesting := authorized.Group(\"testing\")\n\t\ttesting.GET(\"/analytics\", analyticsEndpoint)\n\t}\n\n\t// Listen and serve on 0.0.0.0:8080\n\tr.Run(\":8080\")\n}\nHow to write log file\nfunc main() {\n    // Disable Console Color, you don't need console color when writing the logs to file.\n    gin.DisableConsoleColor()\n\n    // Logging to a file.\n    f, _ := os.Create(\"gin.log\")\n    gin.DefaultWriter = io.MultiWriter(f)\n\n    // Use the following code if you need to write the logs to file and console at the same time.\n    // gin.DefaultWriter = io.MultiWriter(f, os.Stdout)\n\n    router := gin.Default()\n    router.GET(\"/ping\", func(c *gin.Context) {\n        c.String(200, \"pong\")\n    })\n\n \u00a0 \u00a0router.Run(\":8080\")\n}\nCustom Log Format\nfunc main() {\n\trouter := gin.New()\n\n\t// LoggerWithFormatter middleware will write the logs to gin.DefaultWriter\n\t// By default gin.DefaultWriter = os.Stdout\n\trouter.Use(gin.LoggerWithFormatter(func(param gin.LogFormatterParams) string {\n\n\t\t// your custom format\n\t\treturn fmt.Sprintf(\"%s - [%s] \\\"%s %s %s %d %s \\\"%s\\\" %s\\\"\\n\",\n\t\t\t\tparam.ClientIP,\n\t\t\t\tparam.TimeStamp.Format(time.RFC1123),\n\t\t\t\tparam.Method,\n\t\t\t\tparam.Path,\n\t\t\t\tparam.Request.Proto,\n\t\t\t\tparam.StatusCode,\n\t\t\t\tparam.Latency,\n\t\t\t\tparam.Request.UserAgent(),\n\t\t\t\tparam.ErrorMessage,\n\t\t)\n\t}))\n\trouter.Use(gin.Recovery())\n\n\trouter.GET(\"/ping\", func(c *gin.Context) {\n\t\tc.String(200, \"pong\")\n\t})\n\n\trouter.Run(\":8080\")\n}\nSample Output\n::1 - [Fri, 07 Dec 2018 17:04:38 JST] \"GET /ping HTTP/1.1 200 122.767\u00b5s \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.80 Safari/537.36\" \"\n\nControlling Log output coloring\nBy default, logs output on console should be colorized depending on the detected TTY.\nNever colorize logs:\nfunc main() {\n    // Disable log's color\n    gin.DisableConsoleColor()\n    \n    // Creates a gin router with default middleware:\n    // logger and recovery (crash-free) middleware\n    router := gin.Default()\n    \n    router.GET(\"/ping\", func(c *gin.Context) {\n        c.String(200, \"pong\")\n    })\n    \n    router.Run(\":8080\")\n}\nAlways colorize logs:\nfunc main() {\n    // Force log's color\n    gin.ForceConsoleColor()\n    \n    // Creates a gin router with default middleware:\n    // logger and recovery (crash-free) middleware\n    router := gin.Default()\n    \n    router.GET(\"/ping\", func(c *gin.Context) {\n        c.String(200, \"pong\")\n    })\n    \n    router.Run(\":8080\")\n}\nModel binding and validation\nTo bind a request body into a type, use model binding. We currently support binding of JSON, XML, YAML and standard form values (foo=bar&boo=baz).\nGin uses go-playground/validator.v8 for validation. Check the full docs on tags usage here.\nNote that you need to set the corresponding binding tag on all fields you want to bind. For example, when binding from JSON, set json:\"fieldname\".\nAlso, Gin provides two sets of methods for binding:\n\nType - Must bind\n\nMethods - Bind, BindJSON, BindXML, BindQuery, BindYAML, BindHeader\nBehavior - These methods use MustBindWith under the hood. If there is a binding error, the request is aborted with c.AbortWithError(400, err).SetType(ErrorTypeBind). This sets the response status code to 400 and the Content-Type header is set to text/plain; charset=utf-8. Note that if you try to set the response code after this, it will result in a warning [GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 422. If you wish to have greater control over the behavior, consider using the ShouldBind equivalent method.\n\n\nType - Should bind\n\nMethods - ShouldBind, ShouldBindJSON, ShouldBindXML, ShouldBindQuery, ShouldBindYAML, ShouldBindHeader\nBehavior - These methods use ShouldBindWith under the hood. If there is a binding error, the error is returned and it is the developer's responsibility to handle the request and error appropriately.\n\n\n\nWhen using the Bind-method, Gin tries to infer the binder depending on the Content-Type header. If you are sure what you are binding, you can use MustBindWith or ShouldBindWith.\nYou can also specify that specific fields are required. If a field is decorated with binding:\"required\" and has a empty value when binding, an error will be returned.\n// Binding from JSON\ntype Login struct {\n\tUser     string `form:\"user\" json:\"user\" xml:\"user\"  binding:\"required\"`\n\tPassword string `form:\"password\" json:\"password\" xml:\"password\" binding:\"required\"`\n}\n\nfunc main() {\n\trouter := gin.Default()\n\n\t// Example for binding JSON ({\"user\": \"manu\", \"password\": \"123\"})\n\trouter.POST(\"/loginJSON\", func(c *gin.Context) {\n\t\tvar json Login\n\t\tif err := c.ShouldBindJSON(&json); err != nil {\n\t\t\tc.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n\t\t\treturn\n\t\t}\n\t\t\n\t\tif json.User != \"manu\" || json.Password != \"123\" {\n\t\t\tc.JSON(http.StatusUnauthorized, gin.H{\"status\": \"unauthorized\"})\n\t\t\treturn\n\t\t} \n\t\t\n\t\tc.JSON(http.StatusOK, gin.H{\"status\": \"you are logged in\"})\n\t})\n\n\t// Example for binding XML (\n\t//\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t//\t<root>\n\t//\t\t<user>user</user>\n\t//\t\t<password>123</password>\n\t//\t</root>)\n\trouter.POST(\"/loginXML\", func(c *gin.Context) {\n\t\tvar xml Login\n\t\tif err := c.ShouldBindXML(&xml); err != nil {\n\t\t\tc.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n\t\t\treturn\n\t\t}\n\t\t\n\t\tif xml.User != \"manu\" || xml.Password != \"123\" {\n\t\t\tc.JSON(http.StatusUnauthorized, gin.H{\"status\": \"unauthorized\"})\n\t\t\treturn\n\t\t} \n\t\t\n\t\tc.JSON(http.StatusOK, gin.H{\"status\": \"you are logged in\"})\n\t})\n\n\t// Example for binding a HTML form (user=manu&password=123)\n\trouter.POST(\"/loginForm\", func(c *gin.Context) {\n\t\tvar form Login\n\t\t// This will infer what binder to use depending on the content-type header.\n\t\tif err := c.ShouldBind(&form); err != nil {\n\t\t\tc.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n\t\t\treturn\n\t\t}\n\t\t\n\t\tif form.User != \"manu\" || form.Password != \"123\" {\n\t\t\tc.JSON(http.StatusUnauthorized, gin.H{\"status\": \"unauthorized\"})\n\t\t\treturn\n\t\t} \n\t\t\n\t\tc.JSON(http.StatusOK, gin.H{\"status\": \"you are logged in\"})\n\t})\n\n\t// Listen and serve on 0.0.0.0:8080\n\trouter.Run(\":8080\")\n}\nSample request\n$ curl -v -X POST \\\n  http://localhost:8080/loginJSON \\\n  -H 'content-type: application/json' \\\n  -d '{ \"user\": \"manu\" }'\n> POST /loginJSON HTTP/1.1\n> Host: localhost:8080\n> User-Agent: curl/7.51.0\n> Accept: */*\n> content-type: application/json\n> Content-Length: 18\n>\n* upload completely sent off: 18 out of 18 bytes\n< HTTP/1.1 400 Bad Request\n< Content-Type: application/json; charset=utf-8\n< Date: Fri, 04 Aug 2017 03:51:31 GMT\n< Content-Length: 100\n<\n{\"error\":\"Key: 'Login.Password' Error:Field validation for 'Password' failed on the 'required' tag\"}\nSkip validate\nWhen running the above example using the above the curl command, it returns error. Because the example use binding:\"required\" for Password. If use binding:\"-\" for Password, then it will not return error when running the above example again.\nCustom Validators\nIt is also possible to register custom validators. See the example code.\npackage main\n\nimport (\n\t\"net/http\"\n\t\"reflect\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/gin-gonic/gin/binding\"\n\t\"gopkg.in/go-playground/validator.v8\"\n)\n\n// Booking contains binded and validated data.\ntype Booking struct {\n\tCheckIn  time.Time `form:\"check_in\" binding:\"required,bookabledate\" time_format:\"2006-01-02\"`\n\tCheckOut time.Time `form:\"check_out\" binding:\"required,gtfield=CheckIn\" time_format:\"2006-01-02\"`\n}\n\nfunc bookableDate(\n\tv *validator.Validate, topStruct reflect.Value, currentStructOrField reflect.Value,\n\tfield reflect.Value, fieldType reflect.Type, fieldKind reflect.Kind, param string,\n) bool {\n\tif date, ok := field.Interface().(time.Time); ok {\n\t\ttoday := time.Now()\n\t\tif today.After(date) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\nfunc main() {\n\troute := gin.Default()\n\n\tif v, ok := binding.Validator.Engine().(*validator.Validate); ok {\n\t\tv.RegisterValidation(\"bookabledate\", bookableDate)\n\t}\n\n\troute.GET(\"/bookable\", getBookable)\n\troute.Run(\":8085\")\n}\n\nfunc getBookable(c *gin.Context) {\n\tvar b Booking\n\tif err := c.ShouldBindWith(&b, binding.Query); err == nil {\n\t\tc.JSON(http.StatusOK, gin.H{\"message\": \"Booking dates are valid!\"})\n\t} else {\n\t\tc.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n\t}\n}\n$ curl \"localhost:8085/bookable?check_in=2018-04-16&check_out=2018-04-17\"\n{\"message\":\"Booking dates are valid!\"}\n\n$ curl \"localhost:8085/bookable?check_in=2018-03-08&check_out=2018-03-09\"\n{\"error\":\"Key: 'Booking.CheckIn' Error:Field validation for 'CheckIn' failed on the 'bookabledate' tag\"}\nStruct level validations can also be registered this way.\nSee the struct-lvl-validation example to learn more.\nOnly Bind Query String\nShouldBindQuery function only binds the query params and not the post data. See the detail information.\npackage main\n\nimport (\n\t\"log\"\n\n\t\"github.com/gin-gonic/gin\"\n)\n\ntype Person struct {\n\tName    string `form:\"name\"`\n\tAddress string `form:\"address\"`\n}\n\nfunc main() {\n\troute := gin.Default()\n\troute.Any(\"/testing\", startPage)\n\troute.Run(\":8085\")\n}\n\nfunc startPage(c *gin.Context) {\n\tvar person Person\n\tif c.ShouldBindQuery(&person) == nil {\n\t\tlog.Println(\"====== Only Bind By Query String ======\")\n\t\tlog.Println(person.Name)\n\t\tlog.Println(person.Address)\n\t}\n\tc.String(200, \"Success\")\n}\n\nBind Query String or Post Data\nSee the detail information.\npackage main\n\nimport (\n\t\"log\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n)\n\ntype Person struct {\n        Name       string    `form:\"name\"`\n        Address    string    `form:\"address\"`\n        Birthday   time.Time `form:\"birthday\" time_format:\"2006-01-02\" time_utc:\"1\"`\n        CreateTime time.Time `form:\"createTime\" time_format:\"unixNano\"`\n        UnixTime   time.Time `form:\"unixTime\" time_format:\"unix\"`\n}\n\nfunc main() {\n\troute := gin.Default()\n\troute.GET(\"/testing\", startPage)\n\troute.Run(\":8085\")\n}\n\nfunc startPage(c *gin.Context) {\n\tvar person Person\n\t// If `GET`, only `Form` binding engine (`query`) used.\n\t// If `POST`, first checks the `content-type` for `JSON` or `XML`, then uses `Form` (`form-data`).\n\t// See more at https://github.com/gin-gonic/gin/blob/master/binding/binding.go#L48\n        if c.ShouldBind(&person) == nil {\n                log.Println(person.Name)\n                log.Println(person.Address)\n                log.Println(person.Birthday)\n                log.Println(person.CreateTime)\n                log.Println(person.UnixTime)\n        }\n\n\tc.String(200, \"Success\")\n}\nTest it with:\n$ curl -X GET \"localhost:8085/testing?name=appleboy&address=xyz&birthday=1992-03-15&createTime=1562400033000000123&unixTime=1562400033\"\nBind Uri\nSee the detail information.\npackage main\n\nimport \"github.com/gin-gonic/gin\"\n\ntype Person struct {\n\tID string `uri:\"id\" binding:\"required,uuid\"`\n\tName string `uri:\"name\" binding:\"required\"`\n}\n\nfunc main() {\n\troute := gin.Default()\n\troute.GET(\"/:name/:id\", func(c *gin.Context) {\n\t\tvar person Person\n\t\tif err := c.ShouldBindUri(&person); err != nil {\n\t\t\tc.JSON(400, gin.H{\"msg\": err})\n\t\t\treturn\n\t\t}\n\t\tc.JSON(200, gin.H{\"name\": person.Name, \"uuid\": person.ID})\n\t})\n\troute.Run(\":8088\")\n}\nTest it with:\n$ curl -v localhost:8088/thinkerou/987fbc97-4bed-5078-9f07-9141ba07c9f3\n$ curl -v localhost:8088/thinkerou/not-uuid\nBind Header\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/gin-gonic/gin\"\n)\n\ntype testHeader struct {\n\tRate   int    `header:\"Rate\"`\n\tDomain string `header:\"Domain\"`\n}\n\nfunc main() {\n\tr := gin.Default()\n\tr.GET(\"/\", func(c *gin.Context) {\n\t\th := testHeader{}\n\n\t\tif err := c.ShouldBindHeader(&h); err != nil {\n\t\t\tc.JSON(200, err)\n\t\t}\n\n\t\tfmt.Printf(\"%#v\\n\", h)\n\t\tc.JSON(200, gin.H{\"Rate\": h.Rate, \"Domain\": h.Domain})\n\t})\n\n\tr.Run()\n\n// client\n// curl -H \"rate:300\" -H \"domain:music\" 127.0.0.1:8080/\n// output\n// {\"Domain\":\"music\",\"Rate\":300}\n}\nBind HTML checkboxes\nSee the detail information\nmain.go\n...\n\ntype myForm struct {\n    Colors []string `form:\"colors[]\"`\n}\n\n...\n\nfunc formHandler(c *gin.Context) {\n    var fakeForm myForm\n    c.ShouldBind(&fakeForm)\n    c.JSON(200, gin.H{\"color\": fakeForm.Colors})\n}\n\n...\n\nform.html\n<form action=\"/\" method=\"POST\">\n    <p>Check some colors</p>\n    <label for=\"red\">Red</label>\n    <input type=\"checkbox\" name=\"colors[]\" value=\"red\" id=\"red\">\n    <label for=\"green\">Green</label>\n    <input type=\"checkbox\" name=\"colors[]\" value=\"green\" id=\"green\">\n    <label for=\"blue\">Blue</label>\n    <input type=\"checkbox\" name=\"colors[]\" value=\"blue\" id=\"blue\">\n    <input type=\"submit\">\n</form>\nresult:\n{\"color\":[\"red\",\"green\",\"blue\"]}\n\nMultipart/Urlencoded binding\ntype ProfileForm struct {\n\tName   string                `form:\"name\" binding:\"required\"`\n\tAvatar *multipart.FileHeader `form:\"avatar\" binding:\"required\"`\n\n\t// or for multiple files\n\t// Avatars []*multipart.FileHeader `form:\"avatar\" binding:\"required\"`\n}\n\nfunc main() {\n\trouter := gin.Default()\n\trouter.POST(\"/profile\", func(c *gin.Context) {\n\t\t// you can bind multipart form with explicit binding declaration:\n\t\t// c.ShouldBindWith(&form, binding.Form)\n\t\t// or you can simply use autobinding with ShouldBind method:\n\t\tvar form ProfileForm\n\t\t// in this case proper binding will be automatically selected\n\t\tif err := c.ShouldBind(&form); err != nil {\n\t\t\tc.String(http.StatusBadRequest, \"bad request\")\n\t\t\treturn\n\t\t}\n\n\t\terr := c.SaveUploadedFile(form.Avatar, form.Avatar.Filename)\n\t\tif err != nil {\n\t\t\tc.String(http.StatusInternalServerError, \"unknown error\")\n\t\t\treturn\n\t\t}\n\n\t\t// db.Save(&form)\n\n\t\tc.String(http.StatusOK, \"ok\")\n\t})\n\trouter.Run(\":8080\")\n}\nTest it with:\n$ curl -X POST -v --form name=user --form \"avatar=@./avatar.png\" http://localhost:8080/profile\nXML, JSON, YAML and ProtoBuf rendering\nfunc main() {\n\tr := gin.Default()\n\n\t// gin.H is a shortcut for map[string]interface{}\n\tr.GET(\"/someJSON\", func(c *gin.Context) {\n\t\tc.JSON(http.StatusOK, gin.H{\"message\": \"hey\", \"status\": http.StatusOK})\n\t})\n\n\tr.GET(\"/moreJSON\", func(c *gin.Context) {\n\t\t// You also can use a struct\n\t\tvar msg struct {\n\t\t\tName    string `json:\"user\"`\n\t\t\tMessage string\n\t\t\tNumber  int\n\t\t}\n\t\tmsg.Name = \"Lena\"\n\t\tmsg.Message = \"hey\"\n\t\tmsg.Number = 123\n\t\t// Note that msg.Name becomes \"user\" in the JSON\n\t\t// Will output  :   {\"user\": \"Lena\", \"Message\": \"hey\", \"Number\": 123}\n\t\tc.JSON(http.StatusOK, msg)\n\t})\n\n\tr.GET(\"/someXML\", func(c *gin.Context) {\n\t\tc.XML(http.StatusOK, gin.H{\"message\": \"hey\", \"status\": http.StatusOK})\n\t})\n\n\tr.GET(\"/someYAML\", func(c *gin.Context) {\n\t\tc.YAML(http.StatusOK, gin.H{\"message\": \"hey\", \"status\": http.StatusOK})\n\t})\n\n\tr.GET(\"/someProtoBuf\", func(c *gin.Context) {\n\t\treps := []int64{int64(1), int64(2)}\n\t\tlabel := \"test\"\n\t\t// The specific definition of protobuf is written in the testdata/protoexample file.\n\t\tdata := &protoexample.Test{\n\t\t\tLabel: &label,\n\t\t\tReps:  reps,\n\t\t}\n\t\t// Note that data becomes binary data in the response\n\t\t// Will output protoexample.Test protobuf serialized data\n\t\tc.ProtoBuf(http.StatusOK, data)\n\t})\n\n\t// Listen and serve on 0.0.0.0:8080\n\tr.Run(\":8080\")\n}\nSecureJSON\nUsing SecureJSON to prevent json hijacking. Default prepends \"while(1),\" to response body if the given struct is array values.\nfunc main() {\n\tr := gin.Default()\n\n\t// You can also use your own secure json prefix\n\t// r.SecureJsonPrefix(\")]}',\\n\")\n\n\tr.GET(\"/someJSON\", func(c *gin.Context) {\n\t\tnames := []string{\"lena\", \"austin\", \"foo\"}\n\n\t\t// Will output  :   while(1);[\"lena\",\"austin\",\"foo\"]\n\t\tc.SecureJSON(http.StatusOK, names)\n\t})\n\n\t// Listen and serve on 0.0.0.0:8080\n\tr.Run(\":8080\")\n}\nJSONP\nUsing JSONP to request data from a server  in a different domain. Add callback to response body if the query parameter callback exists.\nfunc main() {\n\tr := gin.Default()\n\n\tr.GET(\"/JSONP\", func(c *gin.Context) {\n\t\tdata := gin.H{\n\t\t\t\"foo\": \"bar\",\n\t\t}\n\t\t\n\t\t//callback is x\n\t\t// Will output  :   x({\\\"foo\\\":\\\"bar\\\"})\n\t\tc.JSONP(http.StatusOK, data)\n\t})\n\n\t// Listen and serve on 0.0.0.0:8080\n\tr.Run(\":8080\")\n\n        // client\n        // curl http://127.0.0.1:8080/JSONP?callback=x\n}\nAsciiJSON\nUsing AsciiJSON to Generates ASCII-only JSON with escaped non-ASCII characters.\nfunc main() {\n\tr := gin.Default()\n\n\tr.GET(\"/someJSON\", func(c *gin.Context) {\n\t\tdata := gin.H{\n\t\t\t\"lang\": \"GO\u8bed\u8a00\",\n\t\t\t\"tag\":  \"<br>\",\n\t\t}\n\n\t\t// will output : {\"lang\":\"GO\\u8bed\\u8a00\",\"tag\":\"\\u003cbr\\u003e\"}\n\t\tc.AsciiJSON(http.StatusOK, data)\n\t})\n\n\t// Listen and serve on 0.0.0.0:8080\n\tr.Run(\":8080\")\n}\nPureJSON\nNormally, JSON replaces special HTML characters with their unicode entities, e.g. < becomes  \\u003c. If you want to encode such characters literally, you can use PureJSON instead.\nThis feature is unavailable in Go 1.6 and lower.\nfunc main() {\n\tr := gin.Default()\n\t\n\t// Serves unicode entities\n\tr.GET(\"/json\", func(c *gin.Context) {\n\t\tc.JSON(200, gin.H{\n\t\t\t\"html\": \"<b>Hello, world!</b>\",\n\t\t})\n\t})\n\t\n\t// Serves literal characters\n\tr.GET(\"/purejson\", func(c *gin.Context) {\n\t\tc.PureJSON(200, gin.H{\n\t\t\t\"html\": \"<b>Hello, world!</b>\",\n\t\t})\n\t})\n\t\n\t// listen and serve on 0.0.0.0:8080\n\tr.Run(\":8080\")\n}\nServing static files\nfunc main() {\n\trouter := gin.Default()\n\trouter.Static(\"/assets\", \"./assets\")\n\trouter.StaticFS(\"/more_static\", http.Dir(\"my_file_system\"))\n\trouter.StaticFile(\"/favicon.ico\", \"./resources/favicon.ico\")\n\n\t// Listen and serve on 0.0.0.0:8080\n\trouter.Run(\":8080\")\n}\nServing data from reader\nfunc main() {\n\trouter := gin.Default()\n\trouter.GET(\"/someDataFromReader\", func(c *gin.Context) {\n\t\tresponse, err := http.Get(\"https://raw.githubusercontent.com/gin-gonic/logo/master/color.png\")\n\t\tif err != nil || response.StatusCode != http.StatusOK {\n\t\t\tc.Status(http.StatusServiceUnavailable)\n\t\t\treturn\n\t\t}\n\n\t\treader := response.Body\n\t\tcontentLength := response.ContentLength\n\t\tcontentType := response.Header.Get(\"Content-Type\")\n\n\t\textraHeaders := map[string]string{\n\t\t\t\"Content-Disposition\": `attachment; filename=\"gopher.png\"`,\n\t\t}\n\n\t\tc.DataFromReader(http.StatusOK, contentLength, contentType, reader, extraHeaders)\n\t})\n\trouter.Run(\":8080\")\n}\nHTML rendering\nUsing LoadHTMLGlob() or LoadHTMLFiles()\nfunc main() {\n\trouter := gin.Default()\n\trouter.LoadHTMLGlob(\"templates/*\")\n\t//router.LoadHTMLFiles(\"templates/template1.html\", \"templates/template2.html\")\n\trouter.GET(\"/index\", func(c *gin.Context) {\n\t\tc.HTML(http.StatusOK, \"index.tmpl\", gin.H{\n\t\t\t\"title\": \"Main website\",\n\t\t})\n\t})\n\trouter.Run(\":8080\")\n}\ntemplates/index.tmpl\n<html>\n\t<h1>\n\t\t{{ .title }}\n\t</h1>\n</html>\nUsing templates with same name in different directories\nfunc main() {\n\trouter := gin.Default()\n\trouter.LoadHTMLGlob(\"templates/**/*\")\n\trouter.GET(\"/posts/index\", func(c *gin.Context) {\n\t\tc.HTML(http.StatusOK, \"posts/index.tmpl\", gin.H{\n\t\t\t\"title\": \"Posts\",\n\t\t})\n\t})\n\trouter.GET(\"/users/index\", func(c *gin.Context) {\n\t\tc.HTML(http.StatusOK, \"users/index.tmpl\", gin.H{\n\t\t\t\"title\": \"Users\",\n\t\t})\n\t})\n\trouter.Run(\":8080\")\n}\ntemplates/posts/index.tmpl\n{{ define \"posts/index.tmpl\" }}\n<html><h1>\n\t{{ .title }}\n</h1>\n<p>Using posts/index.tmpl</p>\n</html>\n{{ end }}\ntemplates/users/index.tmpl\n{{ define \"users/index.tmpl\" }}\n<html><h1>\n\t{{ .title }}\n</h1>\n<p>Using users/index.tmpl</p>\n</html>\n{{ end }}\nCustom Template renderer\nYou can also use your own html template render\nimport \"html/template\"\n\nfunc main() {\n\trouter := gin.Default()\n\thtml := template.Must(template.ParseFiles(\"file1\", \"file2\"))\n\trouter.SetHTMLTemplate(html)\n\trouter.Run(\":8080\")\n}\nCustom Delimiters\nYou may use custom delims\n\tr := gin.Default()\n\tr.Delims(\"{[{\", \"}]}\")\n\tr.LoadHTMLGlob(\"/path/to/templates\")\nCustom Template Funcs\nSee the detail example code.\nmain.go\nimport (\n    \"fmt\"\n    \"html/template\"\n    \"net/http\"\n    \"time\"\n\n    \"github.com/gin-gonic/gin\"\n)\n\nfunc formatAsDate(t time.Time) string {\n    year, month, day := t.Date()\n    return fmt.Sprintf(\"%d%02d/%02d\", year, month, day)\n}\n\nfunc main() {\n    router := gin.Default()\n    router.Delims(\"{[{\", \"}]}\")\n    router.SetFuncMap(template.FuncMap{\n        \"formatAsDate\": formatAsDate,\n    })\n    router.LoadHTMLFiles(\"./testdata/template/raw.tmpl\")\n\n    router.GET(\"/raw\", func(c *gin.Context) {\n        c.HTML(http.StatusOK, \"raw.tmpl\", gin.H{\n            \"now\": time.Date(2017, 07, 01, 0, 0, 0, 0, time.UTC),\n        })\n    })\n\n    router.Run(\":8080\")\n}\n\nraw.tmpl\nDate: {[{.now | formatAsDate}]}\nResult:\nDate: 2017/07/01\n\nMultitemplate\nGin allow by default use only one html.Template. Check a multitemplate render for using features like go 1.6 block template.\nRedirects\nIssuing a HTTP redirect is easy. Both internal and external locations are supported.\nr.GET(\"/test\", func(c *gin.Context) {\n\tc.Redirect(http.StatusMovedPermanently, \"http://www.google.com/\")\n})\nIssuing a Router redirect, use HandleContext like below.\nr.GET(\"/test\", func(c *gin.Context) {\n    c.Request.URL.Path = \"/test2\"\n    r.HandleContext(c)\n})\nr.GET(\"/test2\", func(c *gin.Context) {\n    c.JSON(200, gin.H{\"hello\": \"world\"})\n})\nCustom Middleware\nfunc Logger() gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\t\tt := time.Now()\n\n\t\t// Set example variable\n\t\tc.Set(\"example\", \"12345\")\n\n\t\t// before request\n\n\t\tc.Next()\n\n\t\t// after request\n\t\tlatency := time.Since(t)\n\t\tlog.Print(latency)\n\n\t\t// access the status we are sending\n\t\tstatus := c.Writer.Status()\n\t\tlog.Println(status)\n\t}\n}\n\nfunc main() {\n\tr := gin.New()\n\tr.Use(Logger())\n\n\tr.GET(\"/test\", func(c *gin.Context) {\n\t\texample := c.MustGet(\"example\").(string)\n\n\t\t// it would print: \"12345\"\n\t\tlog.Println(example)\n\t})\n\n\t// Listen and serve on 0.0.0.0:8080\n\tr.Run(\":8080\")\n}\nUsing BasicAuth() middleware\n// simulate some private data\nvar secrets = gin.H{\n\t\"foo\":    gin.H{\"email\": \"foo@bar.com\", \"phone\": \"123433\"},\n\t\"austin\": gin.H{\"email\": \"austin@example.com\", \"phone\": \"666\"},\n\t\"lena\":   gin.H{\"email\": \"lena@guapa.com\", \"phone\": \"523443\"},\n}\n\nfunc main() {\n\tr := gin.Default()\n\n\t// Group using gin.BasicAuth() middleware\n\t// gin.Accounts is a shortcut for map[string]string\n\tauthorized := r.Group(\"/admin\", gin.BasicAuth(gin.Accounts{\n\t\t\"foo\":    \"bar\",\n\t\t\"austin\": \"1234\",\n\t\t\"lena\":   \"hello2\",\n\t\t\"manu\":   \"4321\",\n\t}))\n\n\t// /admin/secrets endpoint\n\t// hit \"localhost:8080/admin/secrets\n\tauthorized.GET(\"/secrets\", func(c *gin.Context) {\n\t\t// get user, it was set by the BasicAuth middleware\n\t\tuser := c.MustGet(gin.AuthUserKey).(string)\n\t\tif secret, ok := secrets[user]; ok {\n\t\t\tc.JSON(http.StatusOK, gin.H{\"user\": user, \"secret\": secret})\n\t\t} else {\n\t\t\tc.JSON(http.StatusOK, gin.H{\"user\": user, \"secret\": \"NO SECRET :(\"})\n\t\t}\n\t})\n\n\t// Listen and serve on 0.0.0.0:8080\n\tr.Run(\":8080\")\n}\nGoroutines inside a middleware\nWhen starting new Goroutines inside a middleware or handler, you SHOULD NOT use the original context inside it, you have to use a read-only copy.\nfunc main() {\n\tr := gin.Default()\n\n\tr.GET(\"/long_async\", func(c *gin.Context) {\n\t\t// create copy to be used inside the goroutine\n\t\tcCp := c.Copy()\n\t\tgo func() {\n\t\t\t// simulate a long task with time.Sleep(). 5 seconds\n\t\t\ttime.Sleep(5 * time.Second)\n\n\t\t\t// note that you are using the copied context \"cCp\", IMPORTANT\n\t\t\tlog.Println(\"Done! in path \" + cCp.Request.URL.Path)\n\t\t}()\n\t})\n\n\tr.GET(\"/long_sync\", func(c *gin.Context) {\n\t\t// simulate a long task with time.Sleep(). 5 seconds\n\t\ttime.Sleep(5 * time.Second)\n\n\t\t// since we are NOT using a goroutine, we do not have to copy the context\n\t\tlog.Println(\"Done! in path \" + c.Request.URL.Path)\n\t})\n\n\t// Listen and serve on 0.0.0.0:8080\n\tr.Run(\":8080\")\n}\nCustom HTTP configuration\nUse http.ListenAndServe() directly, like this:\nfunc main() {\n\trouter := gin.Default()\n\thttp.ListenAndServe(\":8080\", router)\n}\nor\nfunc main() {\n\trouter := gin.Default()\n\n\ts := &http.Server{\n\t\tAddr:           \":8080\",\n\t\tHandler:        router,\n\t\tReadTimeout:    10 * time.Second,\n\t\tWriteTimeout:   10 * time.Second,\n\t\tMaxHeaderBytes: 1 << 20,\n\t}\n\ts.ListenAndServe()\n}\nSupport Let's Encrypt\nexample for 1-line LetsEncrypt HTTPS servers.\npackage main\n\nimport (\n\t\"log\"\n\n\t\"github.com/gin-gonic/autotls\"\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc main() {\n\tr := gin.Default()\n\n\t// Ping handler\n\tr.GET(\"/ping\", func(c *gin.Context) {\n\t\tc.String(200, \"pong\")\n\t})\n\n\tlog.Fatal(autotls.Run(r, \"example1.com\", \"example2.com\"))\n}\nexample for custom autocert manager.\npackage main\n\nimport (\n\t\"log\"\n\n\t\"github.com/gin-gonic/autotls\"\n\t\"github.com/gin-gonic/gin\"\n\t\"golang.org/x/crypto/acme/autocert\"\n)\n\nfunc main() {\n\tr := gin.Default()\n\n\t// Ping handler\n\tr.GET(\"/ping\", func(c *gin.Context) {\n\t\tc.String(200, \"pong\")\n\t})\n\n\tm := autocert.Manager{\n\t\tPrompt:     autocert.AcceptTOS,\n\t\tHostPolicy: autocert.HostWhitelist(\"example1.com\", \"example2.com\"),\n\t\tCache:      autocert.DirCache(\"/var/www/.cache\"),\n\t}\n\n\tlog.Fatal(autotls.RunWithManager(r, &m))\n}\nRun multiple service using Gin\nSee the question and try the following example:\npackage main\n\nimport (\n\t\"log\"\n\t\"net/http\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"golang.org/x/sync/errgroup\"\n)\n\nvar (\n\tg errgroup.Group\n)\n\nfunc router01() http.Handler {\n\te := gin.New()\n\te.Use(gin.Recovery())\n\te.GET(\"/\", func(c *gin.Context) {\n\t\tc.JSON(\n\t\t\thttp.StatusOK,\n\t\t\tgin.H{\n\t\t\t\t\"code\":  http.StatusOK,\n\t\t\t\t\"error\": \"Welcome server 01\",\n\t\t\t},\n\t\t)\n\t})\n\n\treturn e\n}\n\nfunc router02() http.Handler {\n\te := gin.New()\n\te.Use(gin.Recovery())\n\te.GET(\"/\", func(c *gin.Context) {\n\t\tc.JSON(\n\t\t\thttp.StatusOK,\n\t\t\tgin.H{\n\t\t\t\t\"code\":  http.StatusOK,\n\t\t\t\t\"error\": \"Welcome server 02\",\n\t\t\t},\n\t\t)\n\t})\n\n\treturn e\n}\n\nfunc main() {\n\tserver01 := &http.Server{\n\t\tAddr:         \":8080\",\n\t\tHandler:      router01(),\n\t\tReadTimeout:  5 * time.Second,\n\t\tWriteTimeout: 10 * time.Second,\n\t}\n\n\tserver02 := &http.Server{\n\t\tAddr:         \":8081\",\n\t\tHandler:      router02(),\n\t\tReadTimeout:  5 * time.Second,\n\t\tWriteTimeout: 10 * time.Second,\n\t}\n\n\tg.Go(func() error {\n\t\terr := server01.ListenAndServe()\n\t\tif err != nil && err != http.ErrServerClosed {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t\treturn err\n\t})\n\n\tg.Go(func() error {\n\t\terr := server02.ListenAndServe()\n\t\tif err != nil && err != http.ErrServerClosed {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t\treturn err\n\t})\n\n\tif err := g.Wait(); err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\nGraceful restart or stop\nDo you want to graceful restart or stop your web server?\nThere are some ways this can be done.\nWe can use fvbock/endless to replace the default ListenAndServe. Refer issue #296 for more details.\nrouter := gin.Default()\nrouter.GET(\"/\", handler)\n// [...]\nendless.ListenAndServe(\":4242\", router)\nAn alternative to endless:\n\nmanners: A polite Go HTTP server that shuts down gracefully.\ngraceful: Graceful is a Go package enabling graceful shutdown of an http.Handler server.\ngrace: Graceful restart & zero downtime deploy for Go servers.\n\nIf you are using Go 1.8, you may not need to use this library! Consider using http.Server's built-in Shutdown() method for graceful shutdowns. See the full graceful-shutdown example with gin.\n// +build go1.8\n\npackage main\n\nimport (\n\t\"context\"\n\t\"log\"\n\t\"net/http\"\n\t\"os\"\n\t\"os/signal\"\n\t\"syscall\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc main() {\n\trouter := gin.Default()\n\trouter.GET(\"/\", func(c *gin.Context) {\n\t\ttime.Sleep(5 * time.Second)\n\t\tc.String(http.StatusOK, \"Welcome Gin Server\")\n\t})\n\n\tsrv := &http.Server{\n\t\tAddr:    \":8080\",\n\t\tHandler: router,\n\t}\n\n\tgo func() {\n\t\t// service connections\n\t\tif err := srv.ListenAndServe(); err != nil && err != http.ErrServerClosed {\n\t\t\tlog.Fatalf(\"listen: %s\\n\", err)\n\t\t}\n\t}()\n\n\t// Wait for interrupt signal to gracefully shutdown the server with\n\t// a timeout of 5 seconds.\n\tquit := make(chan os.Signal)\n\t// kill (no param) default send syscall.SIGTERM\n\t// kill -2 is syscall.SIGINT\n\t// kill -9 is syscall.SIGKILL but can't be catch, so don't need add it\n\tsignal.Notify(quit, syscall.SIGINT, syscall.SIGTERM)\n\t<-quit\n\tlog.Println(\"Shutdown Server ...\")\n\n\tctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)\n\tdefer cancel()\n\tif err := srv.Shutdown(ctx); err != nil {\n\t\tlog.Fatal(\"Server Shutdown:\", err)\n\t}\n\t// catching ctx.Done(). timeout of 5 seconds.\n\tselect {\n\tcase <-ctx.Done():\n\t\tlog.Println(\"timeout of 5 seconds.\")\n\t}\n\tlog.Println(\"Server exiting\")\n}\nBuild a single binary with templates\nYou can build a server into a single binary containing templates by using go-assets.\nfunc main() {\n\tr := gin.New()\n\n\tt, err := loadTemplate()\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tr.SetHTMLTemplate(t)\n\n\tr.GET(\"/\", func(c *gin.Context) {\n\t\tc.HTML(http.StatusOK, \"/html/index.tmpl\",nil)\n\t})\n\tr.Run(\":8080\")\n}\n\n// loadTemplate loads templates embedded by go-assets-builder\nfunc loadTemplate() (*template.Template, error) {\n\tt := template.New(\"\")\n\tfor name, file := range Assets.Files {\n\t\tdefer file.Close()\n\t\tif file.IsDir() || !strings.HasSuffix(name, \".tmpl\") {\n\t\t\tcontinue\n\t\t}\n\t\th, err := ioutil.ReadAll(file)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tt, err = t.New(name).Parse(string(h))\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t}\n\treturn t, nil\n}\nSee a complete example in the https://github.com/gin-gonic/examples/tree/master/assets-in-binary directory.\nBind form-data request with custom struct\nThe follow example using custom struct:\ntype StructA struct {\n    FieldA string `form:\"field_a\"`\n}\n\ntype StructB struct {\n    NestedStruct StructA\n    FieldB string `form:\"field_b\"`\n}\n\ntype StructC struct {\n    NestedStructPointer *StructA\n    FieldC string `form:\"field_c\"`\n}\n\ntype StructD struct {\n    NestedAnonyStruct struct {\n        FieldX string `form:\"field_x\"`\n    }\n    FieldD string `form:\"field_d\"`\n}\n\nfunc GetDataB(c *gin.Context) {\n    var b StructB\n    c.Bind(&b)\n    c.JSON(200, gin.H{\n        \"a\": b.NestedStruct,\n        \"b\": b.FieldB,\n    })\n}\n\nfunc GetDataC(c *gin.Context) {\n    var b StructC\n    c.Bind(&b)\n    c.JSON(200, gin.H{\n        \"a\": b.NestedStructPointer,\n        \"c\": b.FieldC,\n    })\n}\n\nfunc GetDataD(c *gin.Context) {\n    var b StructD\n    c.Bind(&b)\n    c.JSON(200, gin.H{\n        \"x\": b.NestedAnonyStruct,\n        \"d\": b.FieldD,\n    })\n}\n\nfunc main() {\n    r := gin.Default()\n    r.GET(\"/getb\", GetDataB)\n    r.GET(\"/getc\", GetDataC)\n    r.GET(\"/getd\", GetDataD)\n\n    r.Run()\n}\nUsing the command curl command result:\n$ curl \"http://localhost:8080/getb?field_a=hello&field_b=world\"\n{\"a\":{\"FieldA\":\"hello\"},\"b\":\"world\"}\n$ curl \"http://localhost:8080/getc?field_a=hello&field_c=world\"\n{\"a\":{\"FieldA\":\"hello\"},\"c\":\"world\"}\n$ curl \"http://localhost:8080/getd?field_x=hello&field_d=world\"\n{\"d\":\"world\",\"x\":{\"FieldX\":\"hello\"}}\n\nTry to bind body into different structs\nThe normal methods for binding request body consumes c.Request.Body and they\ncannot be called multiple times.\ntype formA struct {\n  Foo string `json:\"foo\" xml:\"foo\" binding:\"required\"`\n}\n\ntype formB struct {\n  Bar string `json:\"bar\" xml:\"bar\" binding:\"required\"`\n}\n\nfunc SomeHandler(c *gin.Context) {\n  objA := formA{}\n  objB := formB{}\n  // This c.ShouldBind consumes c.Request.Body and it cannot be reused.\n  if errA := c.ShouldBind(&objA); errA == nil {\n    c.String(http.StatusOK, `the body should be formA`)\n  // Always an error is occurred by this because c.Request.Body is EOF now.\n  } else if errB := c.ShouldBind(&objB); errB == nil {\n    c.String(http.StatusOK, `the body should be formB`)\n  } else {\n    ...\n  }\n}\nFor this, you can use c.ShouldBindBodyWith.\nfunc SomeHandler(c *gin.Context) {\n  objA := formA{}\n  objB := formB{}\n  // This reads c.Request.Body and stores the result into the context.\n  if errA := c.ShouldBindBodyWith(&objA, binding.JSON); errA == nil {\n    c.String(http.StatusOK, `the body should be formA`)\n  // At this time, it reuses body stored in the context.\n  } else if errB := c.ShouldBindBodyWith(&objB, binding.JSON); errB == nil {\n    c.String(http.StatusOK, `the body should be formB JSON`)\n  // And it can accepts other formats\n  } else if errB2 := c.ShouldBindBodyWith(&objB, binding.XML); errB2 == nil {\n    c.String(http.StatusOK, `the body should be formB XML`)\n  } else {\n    ...\n  }\n}\n\nc.ShouldBindBodyWith stores body into the context before binding. This has\na slight impact to performance, so you should not use this method if you are\nenough to call binding at once.\nThis feature is only needed for some formats -- JSON, XML, MsgPack,\nProtoBuf. For other formats, Query, Form, FormPost, FormMultipart,\ncan be called by c.ShouldBind() multiple times without any damage to\nperformance (See #1341).\n\nhttp2 server push\nhttp.Pusher is supported only go1.8+. See the golang blog for detail information.\npackage main\n\nimport (\n\t\"html/template\"\n\t\"log\"\n\n\t\"github.com/gin-gonic/gin\"\n)\n\nvar html = template.Must(template.New(\"https\").Parse(`\n<html>\n<head>\n  <title>Https Test</title>\n  <script src=\"/assets/app.js\"></script>\n</head>\n<body>\n  <h1 style=\"color:red;\">Welcome, Ginner!</h1>\n</body>\n</html>\n`))\n\nfunc main() {\n\tr := gin.Default()\n\tr.Static(\"/assets\", \"./assets\")\n\tr.SetHTMLTemplate(html)\n\n\tr.GET(\"/\", func(c *gin.Context) {\n\t\tif pusher := c.Writer.Pusher(); pusher != nil {\n\t\t\t// use pusher.Push() to do server push\n\t\t\tif err := pusher.Push(\"/assets/app.js\", nil); err != nil {\n\t\t\t\tlog.Printf(\"Failed to push: %v\", err)\n\t\t\t}\n\t\t}\n\t\tc.HTML(200, \"https\", gin.H{\n\t\t\t\"status\": \"success\",\n\t\t})\n\t})\n\n\t// Listen and Server in https://127.0.0.1:8080\n\tr.RunTLS(\":8080\", \"./testdata/server.pem\", \"./testdata/server.key\")\n}\nDefine format for the log of routes\nThe default log of routes is:\n[GIN-debug] POST   /foo                      --> main.main.func1 (3 handlers)\n[GIN-debug] GET    /bar                      --> main.main.func2 (3 handlers)\n[GIN-debug] GET    /status                   --> main.main.func3 (3 handlers)\n\nIf you want to log this information in given format (e.g. JSON, key values or something else), then you can define this format with gin.DebugPrintRouteFunc.\nIn the example below, we log all routes with standard log package but you can use another log tools that suits of your needs.\nimport (\n\t\"log\"\n\t\"net/http\"\n\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc main() {\n\tr := gin.Default()\n\tgin.DebugPrintRouteFunc = func(httpMethod, absolutePath, handlerName string, nuHandlers int) {\n\t\tlog.Printf(\"endpoint %v %v %v %v\\n\", httpMethod, absolutePath, handlerName, nuHandlers)\n\t}\n\n\tr.POST(\"/foo\", func(c *gin.Context) {\n\t\tc.JSON(http.StatusOK, \"foo\")\n\t})\n\n\tr.GET(\"/bar\", func(c *gin.Context) {\n\t\tc.JSON(http.StatusOK, \"bar\")\n\t})\n\n\tr.GET(\"/status\", func(c *gin.Context) {\n\t\tc.JSON(http.StatusOK, \"ok\")\n\t})\n\n\t// Listen and Server in http://0.0.0.0:8080\n\tr.Run()\n}\nSet and get a cookie\nimport (\n    \"fmt\"\n\n    \"github.com/gin-gonic/gin\"\n)\n\nfunc main() {\n\n    router := gin.Default()\n\n    router.GET(\"/cookie\", func(c *gin.Context) {\n\n        cookie, err := c.Cookie(\"gin_cookie\")\n\n        if err != nil {\n            cookie = \"NotSet\"\n            c.SetCookie(\"gin_cookie\", \"test\", 3600, \"/\", \"localhost\", false, true)\n        }\n\n        fmt.Printf(\"Cookie value: %s \\n\", cookie)\n    })\n\n    router.Run()\n}\nTesting\nThe net/http/httptest package is preferable way for HTTP testing.\npackage main\n\nfunc setupRouter() *gin.Engine {\n\tr := gin.Default()\n\tr.GET(\"/ping\", func(c *gin.Context) {\n\t\tc.String(200, \"pong\")\n\t})\n\treturn r\n}\n\nfunc main() {\n\tr := setupRouter()\n\tr.Run(\":8080\")\n}\nTest for code example above:\npackage main\n\nimport (\n\t\"net/http\"\n\t\"net/http/httptest\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestPingRoute(t *testing.T) {\n\trouter := setupRouter()\n\n\tw := httptest.NewRecorder()\n\treq, _ := http.NewRequest(\"GET\", \"/ping\", nil)\n\trouter.ServeHTTP(w, req)\n\n\tassert.Equal(t, 200, w.Code)\n\tassert.Equal(t, \"pong\", w.Body.String())\n}\nUsers\nAwesome project lists using Gin web framework.\n\ngorush: A push notification server written in Go.\nfnproject: The container native, cloud agnostic serverless platform.\nphotoprism: Personal photo management powered by Go and Google TensorFlow.\nkrakend: Ultra performant API Gateway with middlewares.\npicfit: An image resizing server written in Go.\nbrigade: Event-based Scripting for Kubernetes.\ndkron: Distributed, fault tolerant job scheduling system.\n\n\n"}, {"repo": "jaywcjlove/awesome-mac", "language": "JavaScript", "readme": "\nAwesome Mac\n  \n\n \n\uf8ff Now we have become very big, Different from the original idea.\nCollect premium software in various categories. Feel free to star and fork.\nAny comments, suggestions? Let us know!. We love PRs :) Please take a look at the Contributing guidelines before opening one. Follow the awesome list.\nExplanation\nEnglish | \u4e2d\u6587\n means open source, click to open open source repo;\n means free to use, or free personal license;\n means App store hyperlink;\n means hyperlink to a corresponding Awesome list for the item;\nAwesome Mac App for macOS. Installers for the latest stable build for Mac can be downloaded here.\n\nContents\n\nReading and Writing Tools\n\nText Editors\nOffice\nMarkdown Tools\nNote-taking\nJournaling\nEbooks\nRSS\nOthers\n\n\nDeveloper Tools\n\nIDEs\nDeveloper Utilities\nRegular Expression Editors\nAPI Development and Analysis\nNetwork Analysis\nCommand Line Tools\nFrameworks for Hybrid Applications\nVersion Control\nVirtualization\nDatabases\n\n\nDesign and Product\n\nDesign Tools\nPrototyping and Mind-Mapping Tools\nScreencapturing Software\nOther Tools\n\n\nCommunication\n\nCollaboration and Team Tools\nEmail Clients\nFile Sharing\n\n\nData Recovery Tools\nAudio and Video Tools\nDownload Management Tools\nCloud Storage\nInput Methods\nBrowsers\nTranslation Tools\nEncryption\nSecurity Tools\nProxy and VPN Tools\nUtilities\n\nClipboard Tools\nMenu Bar Tools\nFile Organization Tools\nGeneral Tools\nTo-Do Lists\nProductivity\nWindow Management\nPassword Management\nFinder Tools\nQuality of Life Improvements\nSystem Related Tools\n\n\nGaming Software\nRemote Login Software\nSocial Networking\nQuickLook Plugins\nThird Party App Markets\n\nPackage Managers\n\n\nMac App Download Sites\nPodcasts\n\nReading and Writing Tools\nApplications to edit text, I suggest the open-source editors\nText Editors\n\nAtom - Hackable text editor for the 21st century made by GitHub. Atom Plugins.   \nBear Writer - Beautiful, flexible writing app for crafting notes and prose. \nBootstrap Studio - A powerful desktop app for creating responsive websites using the Bootstrap framework.\nBrackets - A modern, open source text editor that understands web design.  \nChocolat - Native text editor.\nCoda2 - Fast, clean and powerful text editor.\nCotEditor - Lightweight plain-text editor for macOS.  \nEmacs - A popular text editor used mainly on Unix-based systems by programmers, scientists, engineers, students, and system administrators.   \nLightTable - The next generation code editor.  \nmicro - Modern and intuitive terminal-based text editor.  \nONI - IDE powered by Neovim.  \nSublime Text - Sophisticated text editor for code, markup and prose. You'll love the slick user interface, extraordinary features and amazing performance, Sublime Text Plugins. \nTextMate - Editor that brings Apple's approach to operating systems into the world of text editors.  \nVim - Highly configurable text editor built to make creating and changing any kind of text very efficient, Vim Plugins.   \nVimr - Refined Vim Experience for OS X.  \nVisual Studio Code - Microsoft's free & open-source editor, TypeScript friendly, VSCode Plugins.   \n\nOffice\n\nLibreOffice - LibreOffice is free and open-source software office software. Software is tested and used daily by a large and devoted user community.  \nOpenOffice - Compatible with other major office suites, Apache OpenOffice is free to download, use and distribute.  \nWPS - Is a cross-platform office software suite. \nPages Documents that stand apart.  \nKeynote Build stunning presentations.  \nNumbers Create impressive spreadsheets.  \nMicrosoft Office Unmistakably Office, designed for Mac. \n\nMarkdown Tools \n\nEME - Open-source Markdown editor with an interface like Chrome. \niA Writer - Writing app with an emphasis on simplicity and design.\nLightPaper - Simple, beautiful, yet powerful text editor for your Mac.\nMacDown - Open-source Markdown editor for OS X.   \nMarked 2 - This is the Markdown preview with an elegant and powerful set of tools for all writers.\nMarkText - Next generation markdown editor, running on platforms of MacOS Windows and Linux.  \nMarp - Markdown presentation writer with cross-platform support.  \nMarxico - Delicate Markdown editor for Evernote. Reliable storage and sync.\nMWeb - Pro Markdown writing, and static blog generator App.\nTextNut - Rich-format editor featuring Markdown export and Markdown syntax hints. \nTypora - Truly minimal Markdown editor featuring seamless live preview. \nUlysses - The Ultimate Writing App for Mac, iPad and iPhone.\n\nNote-taking\n\nAgenda - Date-focused note taking app for both planning and documenting your projects. \nBoostnote - Note-taking app made for programmers. \nEvernote - Infamous note-taking app, available on many platforms. \nFSNotes - File System Notes is a modern notes manager, native on macOS and iOS.  \nInkdrop - Notebook app for Markdown lovers built on top of Electron.\nJoplin - Cross platform open-source notepad with markdown support and todo list manager with synchronisation capabilities.  \nMarginNote - In-depth PDF and EPUB reading, learning, managing and note taking app.\nNotable - The markdown-based note-taking app that doesn't suck.\nNotebook Note-taking app. \nNotes - Clean, simple note-taking app.  \nNotion -Notion is the all-in-one workspace. From notes, tasks, wikis, to database, Notion is all you need. Works great for teams and individuals.\nOneNote - Note-taking app by Microsoft. \nQOwnNotes - Open-source notepad with markdown support and todo list manager.  \nQuiver - The Programmer's Notebook, lets you easily mix text, code, Markdown and LaTeX within one note, edit code with an awesome code editor and live preview Markdown and LaTeX.\n\nJournaling\n\nDay One - Excellent journaling app using text, photos, video, audio, location data, and more. \nJourney - Journaling app with many features and with apps for every platform available. \n\nEbooks\n\nCalibre - Free and open-source e-book computer software application suite which runs on multiple platforms, allows users to manage e-book collections as well as create, edit, and read e-books.  \nClearview - Tabbed style e-book reader for PDF, EPUB (DRM free), CHM, and MOBI.\niChm - Ebook reader for CHM (Microsoft Compiled HTML help) files.  \nKindle App - Amazon official reading app of kindle.\nKlib - New way to manage highlights for Kindle and iBooks.  \nScribus - Professional layout and publishing software supporting EPS and SVG import/export, and PDF support.   \nSigil - Multi-platform EPUB ebook Editor.  \n\nRSS\n\nFeeds 2 - Keep tabs on your favorite website and RSS feeds from your Mac's menubar.  \nLeaf - Amazing news reader dedicated to help you enjoy your daily news and easily manage your subscriptions.\nNetNewsWire - It\u2019s a free and open source feed reader for macOS.  \nReadKit - Mac read-later client supporting all major providers: Instapaper, Pocket and Readability. Even more, ReadKit is a full-featured RSS reader as well.\nReeder 4 - News reader for Feedbin, Feedly, Feed Wrangler and so on. \nVienna - RSS/Atom reader for Mac OS X.  \n\nOthers\n\nbindPDF - Combine multiple PDF files into a single PDF file using a friendly UI.  \nCHM Reader - Read Compiled HTML (.chm) documents on your Mac. \nChmox - Read CHM documents on your Mac. \nPDF Expert - Read, annotate and edit PDFs, change text and images.\nPDF Reader Pro - You Can view, create, sign, convert and compress any PDF documents. \nSkim - PDF reader and note-taker for OS X.  \nSkyFonts - The simplest way to try, install, and manage fonts.\nSpillo - Powerful, beautiful and amazingly fast Pinboard client for OS X.\nTad - Application for viewing and analyzing tabular data such as CSV files.  \ntexpad - Great LaTeX editor for Mac with auto-update PDF and autocomplete LaTeX commands.\n\nDeveloper Tools\nIDEs\n\nAndroid Studio - The official IDE for Android, based on Intellij IDEA.   \nDeco IDE - The best IDE for building React Native apps.  \nEclipse - Popular open-source IDE, mainly for Java but with plugin support for a wide array of languages and platforms.  \nEspresso - The web editor for Mac is back. For people who make delightful, innovative and fast websites.\nJetBrains Toolbox App - Manage installed JetBrains tools, download new ones and open recent projects. \n\nAppCode - Smart IDE for iOS/macOS development\nCLion - Powerful C and C++ IDE. (Free for Students)\nDataGrip - Cross-Plaform IDE for Databases and SQL. FREE for Students, check here for more info.\nGoLand - Provides ergonomic environment for Go development.\nIntelliJ IDEA - Powerful IDE for JVM languages. (Free for Students)\nPyCharm - Powerful Python IDE, which has professional version and community version.\nRider - Cross-Platform C# IDE. It is an alternative to Visual Studio by Microsoft with the additional benefit of getting Resharper features that are not available on Visual Studio for Mac.\nWebStorm - The smartest JavaScript IDE by JetBrains. FREE for Students, check here for more info.\n\n\nHaskell for Mac - A Modern Development Environment for Haskell. \nNetBeans IDE - Free and open-source IDE, mainly used for Java development, but supports many other languages and frameworks.  \nVisual Studio Community for Mac - Fully-featured IDE Free for students, open-source and individual developers. \nXamarin Studio - Free cross platform C# IDE. Xamarin Studio supports iOS, Android and .Net development   \nXcode - Essential IDE for iOS/macOS development. \nSpyder - Powerful scientific environment written in Python, for Python.\n\nDeveloper Utilities\n\nBetterRename - The most powerful and complete Mac file renaming application on the market. \nBeyond Compare - Compare files and folders using simple, powerful commands that focus on the differences you are interested in and ignore those you are not. \nBidbar - Manage bash commands from the menu bar and run them with keyboard shortcuts.\nCacher - Cloud-based, team-enabled code snippet manager with Gist sync, VSCode/Atom/Sublime packages and Mac/Windows/Linux/Web clients.\ncanSnippet - Powerful snippet management tool that works across the whole operating system, always accessible via simple keyboard shortcut.\nCodeKit - Web development tool which can automatically compile Less, Sass, CoffeeScript, TypeScript, Jade and JavaScript, auto-refresh browsers and much more.\nConduktor - Kafka desktop client.  \nDash - Awesome API documentation browser and code snippet manager.\nDiffMerge - Application to visually compare and merge files. \nEnvPane - OS X preference pane for environment variables.  \nFinderGo - Open terminal quickly from Finder.  \nFinicky - Application that allows you to set up rules that decide which browser is opened for every link that would open the default browser.  \nGas Mask - Simple hosts file manager for Mac OS X.  \nGemini - Intelligent duplicate file finder.\nHex Fiend - Fast and clever open source hex editor.   \nHosts.prefpane - System preference pane to manage your hosts file.  \niHosts - The only /etc/hosts editor on Mac App Store.  \nIntegrity - Free website link checker for Mac. \nKaleidoscope - Powerful compare tool for text, images and folders. Works perfectly with git, svn or other version control tools.\nKoala - GUI application for Less, Sass, Compass and CoffeeScript compilation.  \nLaunchRocket - Brew services management in Mac System Preferences.  \nLocalname - Provide access to your local development server. \nMacSystemColors - Mac app that shows all system colors in light and dark mode for Cocoa developers.  \nMJML - Framework that utilizes a semantic syntax and a rich standard components library, which allow users to easily create responsive emails.  \nPaintCode - PaintCode is a unique vector drawing app that generates Objective-C or Swift code in real time, acting as a bridge between developers and graphic designers.\nPPRows - Application to calculate how many lines of code you write.  \nPushMate PushMate is a MacOS app that solves common push notification problems by ensuring your push payloads are correct.\nSCM Breeze - Set of shell scripts (for bash and zsh) that enhance your interaction with git.  \nSecureCRT - Terminal emulation which supports SSH, Telnet or other protocols.\nSite Sucker - SiteSucker is a Macintosh application that automatically downloads websites from the Internet. \nSnippetsLab - Easy-to-use code snippets manager.\nSolarized - Clean and beautiful color theme. Works well with iTerm, JetBrains products, Vim etc.\nStarUML - Powerful UML app.\nSwiftify - Objective-C to Swift code converter and Xcode & Finder extensions.\nSwitchHosts - Free and open-source app for hosts management & switching.  \nSYM - GUI Application to symbolicate iOS crash log.  \nTeXstudio - Integrated writing environment for creating LaTeX documents.  \nTouch Bar Simulator - Use the Touch Bar on any Mac.  \nVisual Paradigm - All-in-one UML, SysML, BPMN Modeling Platform for Agile, EA TOGAF ADM Process Management.\nWoodpecker - View iOS app's Sandbox files, UserDefaults, Keychain items on a Mac. \nWWDC - The Mac OS unofficial WWDC app.  \nzeplin - Collaboration tool for work between designers and developers. \nNib Unlocker - .nib to .xib converter \n\nRegular Expression Editors\n\nPatterns - Regular expression editor.\nRegex - Regular expression testing tool with an emphasis on simplicity.\nRegExRX - Development tool for regular expressions.\n\nAPI Development and Analysis\n\nCocoa Rest Client - Free, open-source, native Apple OS X app for testing HTTP/REST endpoints.  \nInsomnia - The most intuitive cross-platform REST API Client.  \nPaw - Advanced HTTP client.\nPostman - Powerful GUI platform to make your API development faster & easier, from building API requests through testing, documentation and sharing.\nKatalon Studio - Simplify API, Web, Mobile Automation Tests Free. Robust. Cross-platform. Automation testers from 160 countries with YouTube channels, GitHub repositories.\n\nNetwork Analysis\n\nCharles - HTTP proxy / HTTP monitor / Reverse Proxy that enables a developer to view all of the HTTP and SSL / HTTPS traffic between their machine and the Internet.\nJames - Open-source proxy tool for checking and mapping requests with http as well as https.  \nLittle Snitch - Network monitor with a world map for visualizing network connections.\nmitmproxy - Interactive intercepting HTTP proxy for penetration testers and software developers.  \nProxie - HTTP debugging proxy. \nProxyman - Modern and intuitive HTTP debugging proxy for macOS. \nWireshark - The world\u2019s foremost and widely-used network protocol analyzer.  \n\nCommand Line Tools \n\nack - A tool like grep, optimized for programmers. \nalacritty - A cross-platform, GPU-accelerated terminal emulator.  \narchey-osx - An archey script for OS X.  \nasciinema - Easily record terminal sessions and replay them in a terminal as well as in a web browser.  \nautojump - Replace cd with an intelligent autojump to easily navigate directories from the command line.  \nbash-it - Shameless ripoff of oh-my-zsh for bash.  \nbat - A cat(1) clone with syntax highlighting and Git integration.  \nccat - The colorizing cat which works similar to cat but displays content with syntax highlighting.  \ncmus - Small, fast and powerful console music player for Unix-like operating systems.  \ncool-retro-term - Good looking terminal emulator which mimics the old cathode display.  \ndark-mode - Control dark mode from the command-line.  \nFish Shell - Smart and user-friendly terminal, which is similar with zsh. \nfselect - Find files with SQL-like queries. \nGlances - Glances is a cross-platform curses-based system monitoring tool.  \nGo2Shell - Go2Shell opens a terminal window to the current directory in Finder.  \nhtop - htop is an interactive text-mode process viewer for Unix systems. It aims to be a better 'top'.  \nhttpie - Modern command line HTTP client \u2013 user-friendly curl alternative with intuitive UI, JSON support, syntax highlighting, wget-like downloads, extensions, etc.  \nhyper - A terminal built on web technologies.  \niTerm2 - iTerm2 is an amazing terminal emulator for OS X.  \nitunes-remote - Software for controlling iTunes via the terminal.  \njob - JOB, make your short-term command as a long-term job.  \nkitty - A cross-platform, fast, feature full, GPU based terminal emulator.  \nlnav - A log file navigator.  \nm-cli - Swiss Army Knife for macOS.  \nMac-CLI - The ultimate tool to manage your Mac. Automatize the usage of your OS X system.  \nMagic Wormhole - Get Things From One Computer To Another, Safely.  \nmas - Simple command line interface for the Mac App Store.  \nMiller - Like awk, sed, cut, join, and sort for name-indexed data such as CSV, TSV, and tabular JSON.  \nmycli - CLI for MySQL that can do auto-completion and syntax highlighting.  \nndm - Manage npm straight from the couch.  \nnushell - nushell is a modern, GitHub-era shell written in Rust.  \npgcli - Pgcli is a command line interface for Postgres with auto-completion and syntax highlighting.  \nRebound - Instantly browse Stack Overflow results in your terminal when you get a compiler error.  \nSerial - Full-featured serial terminal for the Mac.\nshallow-backup - Easily create text documentation of installed applications, dotfiles, and more.  \nsilver searcher (ag) - A code searching tool similar to ack, with a focus on speed.  \nspaceship - A Zsh prompt for Astronauts.  \nTaskbook - Tasks, boards & notes for the command-line habitat.  \nTerminus - Free terminal tool, built with TypeScript, heavily inspired by Hyper.  \nTermius - Free terminal tool,comparable to xshell on windows platform. \nTextQL - Execute SQL against structured text like CSV or TSV.  \ntmux - \"Terminal multiplexer\", it enables a number of terminals (or windows) to be accessed and controlled from a single terminal. tmux is intended to be a simple, modern, BSD-licensed alternative to programs such as GNU screen. \ntmuxinator - Manage complex tmux sessions easily. \ntrash - Move files and directories to the trash. \nUpterm - Upterm (formerly Black Screen) is an IDE in the world of terminals. Strictly speaking, it's both a terminal emulator and an interactive shell based on Electron. \nVisiData - Terminal spreadsheet multitool for discovering and arranging data.  \nZsh - Zsh is a shell designed for interactive use, although it is also a powerful scripting language.   \n\nFrameworks For Hybrid Applications\n\nAppJS - Lightweight JavaScript UI library for creating mobile webapps that behave like native apps.  \ncreate-dmg - Create a good-looking DMG for your macOS app in seconds.  \nElectrino - Desktop runtime for apps built on web technologies, using the system's own web browser engine.  \nElectron - Build cross platform desktop application with JavaScript, HTML and CSS.  \nionic - Build amazing native and progressive web apps with Angular and open web technologies. One app running on everything.  \nMacGap - Provides a lightweight JavaScript API for OS X integration, such as displaying native notifications or writing data to a file.  \nnw.js - Build desktop application with HTML and JavaScript. It lets you call all Node.js modules directly from DOM and enables a new way of writing applications with all Web technologies.  \nQt - Cross-platform application framework.\nReact Native for Ubuntu - Build Ubuntu desktop apps using React Native.  \nReact Native macOS - Build OS X desktop apps using React Native and Cocoa.  \nreact-desktop - React UI Components for macOS Sierra.  \nReactXP - Microsoft official production, support platform Web, iOS, Android and Windows UWP is still an ongoing work.  \n\nVersion Control\n\nCornerstone - Powerful version control with a gorgeous interface.\nFork - Fast and friendly Git client for Mac. \nGit Cola - Powerful, Fast, Lightweight and Friendly Git GUI. For those caffeine adicting users. \nGitbar - Open-source\uff0cdisplay Github contribution statistics on your menu bar.  \nGitFinder - Fast and lightweight Git client for Mac with Finder integration. \nGitHub Desktop - The official GitHub GUI.  \nGitKraken - The most popular Git GUI for Windows, Mac and Linux.\nGitX-dev -  Fork of Pieter's nice git GUI for OS X. Includes branch/tag sidebar and various fixes.  \nHub - Command-line wrapper for Git that makes you better at GitHub.  \nOhMyStar Beautiful and efficient way to manage, explore and share your Github Stars.  \nSmartGit - Git client with support.\nSourceTree - Free Git & Mercurial client for Windows or Mac. \nSublime Merge -  Git client, from the makers of Sublime Text.\nTower2 - The most powerful Git client for Mac and Windows.\nVersions - Mac Subversion (SVN) Client.\nGitUp - A simple & powerful Git client\u3002 \n\nVirtualization\n\nDocker - Powerful, performs operating-system-level virtualization.   \nParallels - Powerful, easy-to-use VM. No free upgrade for each new Mac OS.\nVagrant - Tool for building and distributing development environments.   \nVeertu - The lightest VM on Mac. Responsive, sandboxed & native way to run VM on your Mac. \nVirtual Box - Powerful x86 and AMD64/Intel64 virtualization product. \nVMware Fusion - Powerful, commercial VM developed by VMware.\n\nDatabases\n\nAzure Data Studio - Cross-platform database tool for using on Microsoft family on-premises and cloud data platforms such as MSSQL Server \nBase 2 - Application for creating, designing, editing and browsing SQLite 3 database files.\nBdash - Modern SQL client application, supports MySQL, PostgreSQL (Redshift) and  BigQuery.  \nChrome MySQL Admin - Powerful Chrome app to manage your MySQL.  \nCore Data Editor - Core Data Editor lets you easily view, edit and analyze applications\u2018 data.  \nDB Browser for SQLite - Official home of the DB Browser for SQLite.  \nDBeaver - Universal SQL Client.\nElectroCRUD - Modern MySQL CRUD application.  \nFastoNoSQL - Cross-platform GUI client for Redis, Memcached, SSDB, LevelDB, RocksDB, UnQLite, LMDB, ForestDB, Pika and Dynomite key-value databases.  \nFastoRedis - Cross-platform professional GUI management tool for Redis.  \nJackDB - Secure, collaborative environment for your queries and data-driven insights.  \nKeylord - Desktop GUI client for Redis, Bolt, LevelDB and Memcached key-value databases.\nMDB Explorer - MDB tool to open, read, export your MDB files to other formats and databases.\nMedis - GUI Manager for Redis. \nMingo - Easy to use MongoDB GUI with mind-blowing features.\nMongo Management Studio - Simple MongoDB GUI.\nmongoDB.app - The easiest way to get started with mongoDB on the Mac.  \nMongoDB - MongoDB is a document database with the scalability and flexibility that you want with the querying and indexing that you need.   \nMySQL Workbench - The official MySQL GUI.\nNavicat Data Modeler - Powerful and cost-effective database design tool which helps you build high-quality conceptual, logical and physical data models. \nneo4j - The leading graph database!  \npgModeler -  is an open source data modeling tool designed for PostgreSQL.  \nPostgres.app - The easiest way to get started with PostgreSQL on the Mac.  \nPostico - Modern PostgreSQL client for Mac.\nPSequel - PostgreSQL GUI tool for Mac OS X. \nRedisClient - Redis client application on mac, windows and linux.  \nRedisDesktopManager - Cross-platform GUI management tool for Redis.  \nSequel Pro - MySQL database management for Mac OS X.  \nSQLight - SQLite database manager tool. \nSQLPro Studio - Simple, powerful database manager for macOS.\nTableau Public - Free data-visualization software. \nTablePlus - Supports: PostgreSQL, MySQL, RedShift, MariaDB... High-end security ensured.  \n\nDesign and Product\nDesign Tools\n\nAcorn - Great Mac OS X picture and photo editor, built for humans.\nAffinity Designer - Professional graphic design software for Mac.\nAffinity Photo - Professional image editing software for Mac.\nAlchemy - Experimental, open-source drawing application with an emphasis on creating conceptual art. \nAmadine - A vector drawing app that has everything a graphic designer needs wrapped in an uncluttered and intuitive interface.\nArt Text 3 - This is graphic design software specifically tuned for lettering, typography, text mockups and various artistic text effects.\nBlender - Free and open 3D creation software.  \nColorpicker - Colorpicker is a complete open-source colors manipulation tool with picking!  \nFigma - The collaborative interface design tool, for vector graphics and UI prototyping. \nFontForge - Free, open-source font editor.  \nGIMP - The GNU Image Manipulation Program. \nGravit Designer - Full featured free vector design app right at your fingertips.  \ninklet - Turn your Mac trackpad into drawing board.\nInkscape - Professional vector graphics editor. \nKrita - Open-source digital painting software for concept artists, digital painters, and illustrators.  \nmacSVG - Designing HTML5 SVG art and animation.  \nMagicaVoxel - Free, lightweight 8-bit voxel editor and interactive path tracing renderer.\nMakeHuman - Powerful and free 3D human modeler. \nMonodraw - Powerful ASCII art editor designed for the Mac. \nNik Collection - Nik Collection by DxO.\nPaintbrush - Bitmap image editor.  \nPencil2D - A easy, intuitive tool to make 2D hand-drawn animations.  \nPixel Perfect - Tool to overlay design images over implementation and make it pixel perfect.  \nPixelmator - Full-featured image editor for Mac.\nPrinciple -  Application for designing animated and interactive user interfaces.\nScreenToLayers- Easily export your screen into a layered PSD file.   \nSculptris - 3D sculpting software. \nSketch - Professional digital design for mac.\n\nSketch Cache Cleaner - Deletes hidden Sketch history files that can take a lot of space on your hard drive and that you would probably never use.  \nMeasure Plugin - Make it a fun to create spec for developers and teammates.  \nSketch Toolbox Plugin Manager - Simple plugin manager for Sketch.  \nUser Flows Plugin -  Generating flow diagrams from Artboards.  \n\n\nSketchBook - Drawing software for concept design, comic art, and digital sketching. \nSparkle - Pro visual web design.\nTayasui Sketches - Professional drawing software.\nVectr - Free graphics editor used to create vector graphics easily and intuitively. \n\nPrototyping and Mind-Mapping Tools\n\nAdobe XD (Experience Design) - First all-in-one cross-platform tool for designing and prototyping websites and mobile apps.\nAxure RP 8 - Prototypes, specifications and diagrams in one tool.\nBalsamiq Mockups - Wire-framing tool that helps you work faster and smarter.\nFlinto - Quickly create interactive prototypes of mobile, desktop, or web apps.\nFramer - Tool for interactive prototyping.\nJustinmind - Prototyping platform for web and mobile apps.\nKite - Powerful animation and prototyping application for Mac & iOS.\nLighten - The best way to clarify thinking, boost productivity, brainstorm, and visualize concepts.\nLoremify - Great Lorem ipsum generator.\nMarvel - Simple design, prototyping and collaboration.\nMindNode - Mind-mapping software with an emphasis on simplicity and ease-of-use.\nMockFlow - Online prototyping suite for web-design and usability testing.\nMockplus - Prototype faster, smarter and easier.\nOmniGraffle - Diagramming and graphic design for Mac, iPhone, and iPad.\nOrigami Studio -  Tool for designing modern interfaces, built and used by designers at Facebook.\npencil - Free, open-source tool for making diagrams and GUI prototyping.  \nProtoPie - Create the most advanced prototypes as easy as Pie.\nScapple - Practical mind-mapping software with free whiteboard-like layout.\nSimpleMind - The world leader in cross platform Mind Mapping tools.\nWriteMapper - Get from idea to final draft in no time.\nXMind - The most popular mind-mapping tool on the planet.\nSimple Diagrams - A desktop app for creating hand-drawn-like, fast, clear sketches of problems, processes, workflows, ideas and more!\nyGraph Editor - High quality diagrams made easy.\n\nScreencapturing Software\n\nCloudApp - Work at the speed of sight. \nGifox - Gif Recording and Sharing. \nKap - Open-source screen-recorder built with web technology.  \nKeyCastr - KeyCastr, an open-source keystroke visualizer.  \nKyapchar - Simple screen and microphone audio recorder for Mac.  \nLicecap - Record your screen and export to GIF. You can change the recording area anytime during recording.  \nLightshot - The fastest way to take a customizable screenshot. \nMonosnap - Make screenshots. Draw on it. Shoot video and share your files. It's fast, easy and free.  \nScreenShot PSD - Capture the screen as a layered PSD for easy editing.  \nSkitch - Screen capture application with a powerful annotation capabilities. \nSnip - Application for sharing captured images on QQ Mail. \nSnipaste -  Simple but powerful snipping tool. \nTeampaper Snap - Let your screenshots speak up.  \nXnip - Handy Screenshot App.  \n\nOther Tools\n\nAPNGb - PNG image assembler/disassembler app.  \nAssetizr - Resizing images and optimising them for web and mobile applications.   \nCouleurs - Simple app for grabbing and tweaking the colors you see on your screen. \nFrank DeLoupe - Color-picking tool, supports Retina.\nHEIC Converter - Convert HEIC images to JPEG or PNG.  \nIconjar - Icon management tool to organize or search your icons.\nIconKit - App icon generator. \nImage2icon - Create and personalize icons from your pictures. \nImageAlpha - Compress images with PNG format and remove transparency.  \nImageOptim - Compress images and remove EXIF information.  \niPic - Easily upload images with Markdown supported.  \nJPEGmini - Reduce image size by up to 80%, without compromising quality.  \nMark Man - Measure & Spec Fast.\nNucleo - Icon manager. Import, export, customize and convert icon libraries.\nPreset Brewery - Tool to convert Lightroom presets to Adobe Camera Raw.\nResize Master - Batch resize and watermark your images fast and easy.  \nRightFont - Preview, sync, install and manage fonts on Mac, Dropbox or Google Drive.\nSip - The best way to collect, organize & share your colors.\nSnagit - Simple, Powerful Screen Capture Software and Screen Recorder.\nSpectrum - Easily and intuitively creating beautiful color schemes. \nsvgus - Organize, clean and transform your SVGs. \nTinyPNG4Mac - Open-source tool to compress images.  \nTropy - Research Photo Management.  \nPicGo - Support for common cdn image hosting tool.  \nPreset Brewery - Tool to convert Lightroom presets to Adobe Camera Raw.\nAssetizr - Resizing images and optimising them for web and mobile applications.   \nAppIconBuilder - Export icons for multi-platform\nuPic - macOS native app, powerful terse image hosting client.  \n\nCommunication\nCollaboration and Team Tools\n\nAdium - Free instant messaging application for Mac OS X. Connect to AIM, MSN, SMPP, Yahoo and more. \nCaprine - Third-party privacy-focused Facebook Messenger app.  \nDingTalk - Free, powerful and professional office tool used by over 5 million enterprises and organizations globally. \nDiscord - All-in-one voice and text chat for gamers that's free, secure, and works on both your desktop and phone.\nFranz - Electron based, multi-protocol wrapper for web-based chat. One application, 23 messenger services. \nGitter - Instant messaging and chat room system for developers as well as GitHub users. Developer friendly with Markdown syntax support.\nKeybase - Secure groups, files, and chat for everyone!  \nLimeChat - Open-source IRC client for Mac OS X.  \nMessenger For Mac - Third-party Facebook messenger for Mac.  \nMuzzle - A simple mac app to silence embarrassing notifications while screensharing.\nRambox - Messaging and emailing app that combines common web applications into one.  \nRiot - Create, share communicate. Chat and call securely.  \nSignal Desktop - Fast, simple, secure. Privacy that fits in your pocket. \nSkype - Cross-platform application that provides video chat and voice call services. Users can exchange images, text, video and any other digital documents.\nSlack - Awesome tool for team collaboration and communication. \nTeambition - Team collaboration tool, including many features like task plan, schedule, file sharing, instant discussion and everything you need when collaborating with other team members. \nTelegram - Messaging app with a focus on speed and security.\nTextual - Internet Relay Chat (IRC) client. \nWeChat - Official WeChat app for Mac.  \nWeeChat - The extensible command-line chat client. \nWhatsApp Desktop - Available in the Mac App Store, Whatsapp for Desktop. \n\nEmail Clients\n\nAirmail - Fast email client. For both Mac OS and iOS.\nFoxmail - Fast email client. \nMailTags - Use tags to organize email and schedule.\nN1 - Extensible, open-source mail app, free for developers and $7/month for Pro. \nNylas Mail - Extensible desktop mail app built on the modern web.   \nPolymail - Simple, beautiful and powerful email client. \nPostbox - Powerful, simple and beautiful email client, need to pay for a license.\nSpark - Fast email client. For both Mac OS and iOS.\nThunderBird - Software that makes email easier. \n\nFile Sharing\n\nCyberduck - Free FTP, SFTP, WebDAV, S3, Backblaze B2, Azure and OpenStack Swift browser. \nFlow - Award-winning, beautiful, fast, and reliable FTP + SFTP client.\nFu - Upload images/files to remote server in exchange for url for file sharing. \nTransmit - Highly flexible and intuitive FTP client, supports SFTP, S3 and iDisk/WebDAV.\nYummy FTP - Pro-level, fast, reliable FTP/S + SFTP + WebDAV/S file transfer app.\n\nData Recovery Tools\n\nData Rescue - Comprehensive and professional data recovery tool for most cases.\nDiskWarrior - The world\u2019s most advanced repair and recovery tool for Mac.\nR-Studio for Mac - Powerful tool for recovering data on disks, even if their partitions are formatted, damaged or deleted.\nStellar Phoenix Mac Data Recovery - Powerful tool for file recovery, Time machine recovery, Encrypted Disk recovery and much more.\nSuperDuper! - Painless fully bootable disk backups.\n\nAudio and Video Tools\n\nAdapter -  Free audio, video and image conversion software. \nAegisub - Free, cross-platform open source tool for creating and modifying subtitles. Aegisub makes it quick and easy to time subtitles to audio, and features many powerful tools for styling them, including a built-in real-time video preview.  \nAudio Profile Manager - Allows you to pin input/output devices for each particular combination of connected devices. May suppress HDMI displays from being chosen. \nArdour - Cross-platform audio software for multi-track recording and editing. \nAudacity - Free, open-source, cross-platform audio software for multi-track recording and editing.  \nAudio Hijack - Record any application's audio, including VoIP calls from Skype, web streams from Safari, and much more.\nCarol - A minimal and beautiful lyrics app for macOS.  \nCog - Free, open-source audio player.  \nDaVinci Resolve  - Free, cross-platform video editing, color grading, video effects and audio editing software.\nElmedia Player - This media player is a super versatile app for any file format you probably may think of: FLV, MP4, AVI, MOV, DAT, MKV, MP3, FLAC, M4V are all supported as well as many others.\nGifski - Convert videos to high-quality GIFs.   \nHandBrake - Tool for converting video from nearly any format to a selection of modern, widely supported codecs. \nHydrogen - Professional yet simple and intuitive pattern-based drum programming for GNU/Linux. \niFFmpeg - Comprehensive Media Tool for macOS. Making High Quality Video Encoding Accessible for Everyone.\nIINA - The modern video player for macOS. Based on mpv, the powerful media player project.  \nKodi - Award-winning free and open-source (GPL) software media center for playing videos, music, pictures, games, and more.  \nLMMS Formerly \"Linux MultiMedia Studio\", LMMS is a powerful Digital Audio Workstation designed like FL Studio (formerly Fruity Loops).  \nLosslessCut - Cross platform tool for quick and lossless video and audio trimming using ffmpeg.  \nLyricsX - Lyrics for iTunes, Spotify and Vox.   \nMetadatics - Advanced Audio Metadata Editor. \nMixxx - The most advanced free DJ software.  \nMovie Catcher - Movie movie and online viewing offline download software, with Baidu cloud to make offline download and online playback. \nmpv - Free, open-source, and cross-platform media player.  \nMuseScore - Free, open-source music notation software.  \nNatron - Open-source compositing software. Node-graph based. Similar in functionality to Adobe After Effects and Nuke by The Foundry. \nPerian - (No longer under active development) Let QuickTime play all the common formats of free plug-ins. \nPlayback - Experimental video player.  \nPopcorn Time - Watch torrent movies instantly, This Popcorn Time service will never be taken down. Download and enjoy. \nScreenFlow - Screencasting and video editing software.\nShotcut - Free open-source video editor.  \nSoda Player - Player that can play seed, magnetic links, online video, automatic captions, links and local video files. \nSonora -  Minimal, beautifully designed music player.  \nSpotMenu - Spotify and iTunes in your menu bar.  \nStremio - Movies, TV shows, series, live television or web channels like YouTube and Twitch.tv - you can find all this on Stremio. \nStringed 2 - Music practice software designed to help users learn how to play their favorite songs.\nSynfig Studio - Synfig Studio is free, open-source 2D animation software.  \nVLC - Free, open-source, cross-platform multimedia player as well as framework that plays most multimedia files, DVDs, Audio CDs, VCDs and various streaming protocols.  \nVOX Player - High-definition audio player for Mac and iPhone. Music just sounds better! \nXLD - Tool to decode, convert and play various 'lossless' audio files.  \nMusicPlus - Search, play & download music for free. \n\nDownload Management Tools\n\naria2 - Lightweight multi-protocol & multi-source command-line download utility.  \nDownie - Video downloader for macOS with support for YouTube and other 1200 sites.\nDeluge - Deluge is a lightweight, Free Software, cross-platform BitTorrent client.  \nFOLX - Free download manager for Mac OS X with a true Mac-style interface. \nFree Download Manager - Powerful, modern download accelerator and organizer for Windows and Mac. (FREE) \nJDownloader - Free, open-source download management tool with a huge community of developers that makes downloading as easy and fast as it should be.  \nMotrix - Motrix is a full-featured download manager that supports downloading HTTP, FTP, BitTorrent, Magnet, Baidu Net Disk, etc.  \nqBittorrent - A project aims to provide an open-source software alternative to \u00b5Torrent.  \nShuttle - Easy Download Manager for any links.\nTransmission - Fast, easy, free BitTorrent Client.  \nYou-Get - Tiny command-line utility to download media contents (videos, audios, images) from the web.  \nyoutube-dl - Command-line program to download videos from YouTube.com and other video sites  \n\nCloud Storage\nI recommend using online storage with Mac clients\n\nArq - Cloud storage backup client that supports AWS, GCP, DropBox, and more.\nCarbonite - Carbonite can protect your Mac from all of the most common forms of data loss.\nDropbox - File hosting service that offers cloud storage and file synchronization with collaborative edit features. \nMega - Free cloud service, offers 50GB free storage. \nNextCloud - Actively maintained fork of ownCloud, faster and completely open-source \nownCloud - Cloud storage.\nSeafile - Reliable and High Speed File Sync and Share.\n\nInput Methods\n\nKawa - Better input source switcher for OS X.  \nRocket - Makes typing emoji faster and easier using Slack-style shortcuts. \nTouch Emoji - emoji picker for MacBook Pro Touch Bar. \nType2Phone - Use Your Mac as Keyboard for iPhone, iPad & Apple TV. \n\nBrowsers\n\nBrave - Web browser with an emphasis on privacy and speed. \nChrome - Chrome, developed by Google \nChromium - Open-source, free web browser project by Google, to provide the source code for Google Chrome.  \nMicrosoft Edge Canary \u2014 Edge Canary, re-developed based on Chromium, but built by MS \nFirefox - Meet Firefox Quantum. Fast, free, open-source web browser developed by the Mozilla Foundation.  \nSafari - Native browser for Macs.  \nTorBrowser - Anonymity Online. Protect your privacy. Defend against network surveillance and traffic analysis.  \nVivaldi - The browser that puts you in control.  \n\nTranslation Tools\n(Or you could just use the Mac OS built-in dictionary)\n\nGrammarly - Refine your english\niTranslate - Translate entire website instantly with its built-in browser or with iTranslate Safari extension into over 40 languages. \nLudwig - Linguistic search engine that helps you to write better in English.\n\nEncryption\n\nmacOS Quick Lock - The easiest file encryption tool you'll ever use. Tightly integrated with macOS, and open-source so you can trust it.  \n\nSecurity Tools\n\nBlockBlock - Me: \"Please alert me whenever anything is persistently installed.\" BlockBlock: \"You got it\"\nDylib Hijack Scanner - Simple utility that will scan your computer for applications that are either susceptible to dylib hijacking or have been hijacked.\nKextViewer - View all modules on that are loaded in the OS kernel.\nKnockKnock - See what's persistently installed on your Mac.\nLinkLiar -  Link-Layer MAC spoofing GUI for macOS.  \nLockDown - Open-source tool for El Capitan that audits and remediates security configuration settings.  \nLuLu - is the free macOS firewall that aims to block unauthorized (outgoing) network traffic.  \nMalwareBytes - Malwarebytes crushes the growing threat of Mac malware, so you are protected and your machine keeps running silky smooth. Cybersecurity smart enough for the Mac. \nOverSight - Monitor mic and webcam, alerting you when the internal mic is activated, or whenever a process accesses the webcam.\nRansomWhere? - Generic Ransomware Detection.\nstronghold - Easily configure MacOS security settings from the terminal.  \nTaskExplorer - Explore all processes running on your Mac with TaskExplorer.\nWhat's Your Sign? - Adds menu item to Finder.app to display the cryptographic signing information for any file.\n\nProxy and VPN Tools\n\nAlgo - Personal IPSEC VPN in the cloud. \nFreeVPN Plus - Free VPN Client for Mac.  \nLantern - Free application that delivers fast, reliable and secure access to the open internet.  \nShadowsocksX-NG - Next generation of ShadowsocksX.  \nShadowsocksX - Secure socks5 proxy, designed to protect your internet traffic.  \nShimo - VPN Client for Mac.\nSpechtLite - Rule-based proxy app for macOS.   \nSurge - Web developer tool and proxy utility for iOS 9. \ntinc - Secure mesh VPN software.  \nTunnelbear - Really simple VPN to browse the web privately & securely. Unblock websites around the world with applications for Mac, PC, iOS, Android & Chrome.\nTunnelblick - Free, open-source graphic user interface for OpenVPN on OS X. \nV2rayU - Macos client based on v2ray.  \nWindscribe - Gives 10gb per month free on the spot and gives limited(on free) location control. Connection also takes very less time.\nClashX - A rule based proxy For Mac base on Clash. \n\nUtilities\nClipboard Tools\n\nClipMenu - Clipboard manager for Mac OS X.  \nClipy - Clipy is a Clipboard extension app for macOS. Based on ClipMenu.  \nCopyQ - Clipboard Manager with Advanced Features.  \niPaste - Lightweight and efficient clipboard tool.  \nPaste - Smart clipboard history & snippets manager. \nPasteBot - Powerful clipboard manager. \nFlycut - Clean and simple clipboard manager for developers.  \n\nMenu Bar Tools\n\nAnvil - Anvil is a beautiful menubar app for managing local websites. Serve up static sites and Rack apps with simple URLs and zero configuration. \nBartender - Organize or hide menu bar icons on your Mac.\nBeardedSpice - Allows you to control web based media players (SoundCloud, YouTube, etc) and some native apps with the media keys on Mac keyboards.   \nBitBar - Place the output from any script or program right in your Mac OS X menu bar.  \nDozer - Hide MacOS menubar items.  \nEye Timer - Take Breaks to prevent Eye Strain timer for Mac. \niGlance - macOS System Monitor for the Status Bar.  \nItsycal - Tiny calendar for your Mac's menu bar.  \nStreaker - GitHub contribution streak tracking menubar app.  \nVanilla - Hide menu bar icons on your Mac. \n\nFile Organization Tools\n\nBetterZip 3 - Archive tool supports ZIP, TAR, TGZ, TBZ, TXZ (new), 7-ZIP, RAR. \neZip - An easy to use, feature-rich archiver for macOS. Supports popular formats such as RAR, ZIP, 7Z, BZ2, GZ etc. Works great with Mojave dark-mode and QuickLook. \nHazel - Automated file organization for your Mac. Responsibly and beautifully designed.\nKeka - file archiver for macOS. Compression: 7Z, ZIP, TAR, GZIP, BZIP2, XZ LZIP, DMG, ISO. Extraction: 7Z, ZIP, RAR, TAR, GZIP, BZIP2, XZ, LZIP, DMG, ISO, LZMA, EXE, CAB, WIM, PAX, JAR, APK, APPX, CPGZ, CPIO.   \nmuCommander - Lightweight file manager with a dual-pane interface.  \nPDF Archiver - Nice tool for tagging and archiving tasks.  \nThe Unarchiver - Unarchive many different kinds of archive files.  \n\nGeneral Tools\n\nAirServer - Most advanced screen mirroring software receiver for Mac, PC and Xbox One.\nControlPlane - Manages configuration profiles for your Mac. Determines where you are or what you are doing based on a number of available evidence sources and then automatically reconfigures your Mac based on your preferences.  \nDNS Heaven - Unifies macOS DNS so applications using glibc can resolve DNS with the native stack. Mainly for use with VPNs.  \nHTTrack - Useful tool for downloading a whole website and offline browsing. \nLungo - Prevent your Mac from going to sleep. \nMac Cache Cleaner - Cache cleaner for Mac  \nMacAssistant - Google Assistant for macOS  \nManta - Flexible invoicing desktop app with beautiful & customizable templates.  \nMemo - Simple and elegant app. Unlock memos even more quickly using Touch ID.  \nNumi - Beautiful calculator app for Mac. \nSlowQuitApps - An OS X app that adds a global delay of 1 second to the Cmd-Q shortcut.  \nTorimori Sweeper - MacOS app that lets you declutter your Downloads, one file at a time. \n\nTo-Do Lists\n\n2Do - Nice todo app.\nDay-O 2 - Menu bar clock replacement with built-in calendar. \nFantastical - The calendar app you won't be able to live without.\nFocus - Beautiful pomodoro-based time manager. \nMicrosoft To-Do - Microsoft's successor to Wunderlist.  \nNozbe - Powerful GTD app for individuals and teams, with support for every Apple device (Mac, iPhone, iPad, Watch). \nOmniFocus - Nice GTD app, made by OmniGroups.\nTaskade - Real-time collaborative editor for teams.\nTaskPaper - Plain text to-do lists.\nThings - Delightful and easy to use task manager. (Award-winning App)\nTodoist - Cross-platform todo list app. \nTickTick - Simple and effective to-do list and task manager that helps you organize all aspects of life.  \nWunderlist - The easiest way to get stuff done.\n\nProductivity\n\n1440 Minutes Left Today - Keep a track of how many minutes you have left until the day is over, right in your menu bar.  \nAlfred - Award-winning app which boosts efficiency with hotkeys, keywords, text expansion and more. Search your Mac and the web, and be more productive with custom actions to control your Mac. \nBetterTouchTool - Great, feature-packed app that allows you to configure many gestures for your Magic Mouse, Macbook Trackpad, Magic Trackpad and also Mouse Gestures for normal mice. \nChoosy - UI, URL API and a browser extension set for managing rules where and how to open links.\nHammerspoon - Tool for powerful OSX automation with the Lua scripting engine.  \nHapticKey - A simple utility application for MacBook with Touch Bar that triggers a haptic feedback when tapping Touch Bar.  \nHazeOver App that dims your background app windows so you can focus more on your main task! \nHungrymark - Useful app to bookmark your files, folders, and webs, quick access your bookmarks through menu bar  \nKarabiner - Powerful and stable keyboard customizer for OS X.  \nKeyboard Maestro - Automate routine actions based on triggers from keyboard, menu, location, added devices, and more.\nKeytty - App to keep your hands on the keyboard. Move, click, scroll, drag and more with a few strokes.\nLazy - Keyboard-driven commands to manage your surroundings directly from your mac.\nMos - Simple tool can offer the smooth scrolling and reverse the mouse scrolling direction on your Mac.  \nOmniPlan - The best way to visualize, maintain, and simplify your projects. Project Management made easy.\nQbserve - Time tracking automation: freelance project tracking, timesheets, invoicing & real-time productivity feedback.\nRescueTime - Personal analytics service that shows you how you spend your time and provides tools to help you be more productive.\nSensibleSideButtons \u2013 Use the side buttons on your mouse to move forward and backward in many apps, like in Windows. \nnnScreenshots - a super easy way to keep a visual record of your productivity to make it easier to fill out timesheets or just to help you review the day. Built in timesheet editor.\nskhd - Simple hotkey daemon for macOS.  \nStrategr \u2013 No-fuss time management app. Stategr helps you maximize your productivity, giving you the quickest and most effective way to time-box your day.  \nTime Out - Easy break reminders, with micro-break and flexible customization if you want it.  \nTiming - Automatic time and productivity tracking for Mac. Helps you stay on track with your work and ensures no billable hours get lost if you are billing hourly.\nTrello - A collaboration tool that organizes your projects into Kanban boards.\nUkelele - Unicode Keyboard Layout Editor.\nxScope - Powerful set of tools that are ideal for measuring, inspecting & testing on-screen graphics and layouts.\nZ - Powerful way to navigate easily by typing only a string of directory name in terminal instead of typing exact location of director.\n\nWindow Management\n\nAmethyst - Tiling window manager.  \nchunkwm - Tiling window manager for macOS based on plugin architecture.  \ncontexts - Provides more power than the native Mac Dock. Especially when you have multiple screens, it can help you switch more quickly.\nDivvy - Window management at its finest with its amazing Divvy Grid system.\nHummingbird - Easily move and resize windows without mouse clicks, from anywhere within a window.\nMagnet - Window manager that keeps your workspace organized. \nMoom - Allows you to easily move and zoom windows, or to another display\u2014using either the mouse or the keyboard.\nShiftIt - Managing window size and position in OSX.  \nSizeUp - Powerful, keyboard-centric window management.\nSlate - Window management application similar to Divvy and SizeUp (except better and free!). (Needs config file)  \nSpectacle - (No longer maintained) Move and resize windows with simple and customizable keyboard shortcuts.  \nTotal Spaces - Provides window management much like ubuntu. Creates hotkeys for workspaces which allows you to easily move around.\nyabai - Tiling window manager for macOS. A rewrite of chunkwm, it provides a more seamless integration with the operating system.  \n\nPassword Management\n\n1Password - Cross-platform password management tool.\nAuthy - Two-factor authentication token manager that backs up and syncs across your devices. \nBitwarden - Open source password management tool for Mac OS, iOS and browsers.  \nButtercup - The Password Manager You Deserve \nDashlane - Cloud-based password manager with award-winning design. \nEnpass - Cross-platform password management tool with cloud integration. \nKeeweb - Free, cross-platform password manager compatible with KeePass.  \nLastPass - Password management tool for Mac OS and browser.\nMacPass - Open-source KeePass Mac OS client.  \nSafeInCloud - Cross Platform password management, low cost app! \n\nFinder Tools\n\nfman - The first dual-pane file manager to integrate features from Sublime Text.\nForkLift - The most advanced dual pane file manager and file transfer client for macOS.\nPath Finder - File management app.\nQSpace - A clean and efficient Multi-view File Manager. \nTotalFinder - Chrome-styled Finder substitute.\nXtraFinder - Adds tabs and cut to Mac Finder. \n\nQuality of Life Improvements\n\nCheatSheet -  Hold the \u2318-Key to get a list of all active shortcuts of the current application. It's as simple as that. \nf.lux - Makes the color of your computer's display adapt to the time of day. \nKeyCastr - Open-source keystroke visualizer.   \nNightOwl - Automatically switch between macOS Mojave's light and dark themes by time of day or with a menu bar or keyboard shortcut. \nShifty - A macOS menu bar app that gives you more control over Night Shift. \nSnap - Launch an app in a snap. Ridiculously easy shortcut management.  \n\nSystem Related Tools\n\nAmphetamine - Override your energy saver settings and keep your Mac awake.  \nAppCleaner - Small application which allows you to thoroughly uninstall unwanted apps. \nBackground Music - Automatically pause your music, set individual apps' volumes and record system audio. \nCleaner for Xcode - Helps make your Xcode faster by removing unwanted and deprecated files.  \ncoconutBattery - Shows live information about the battery in your Mac. Includes: manufacture date, capacity, cycle count, battery status, temperature, discharging power.\nCoolant - Menubar app that lets you know when an app is consuming 100% CPU or more than a gigabyte of memory (or any arbitrary limits you choose).\nDaisyDisk - Gives a great overview of disk usage. Can also make more disk-space available by cleaning up your disk.\nFruitJuice - Will let you know how long to stay unplugged each day to keep your battery healthy. \ngfxCardStatus - Unobtrusive menu bar app for OS X that allows MacBook Pro users to see which apps are affecting their battery life by using the more power-hungry graphics. \nGray - Pick between the light appearance and the dark appearance on a per-app basis with the click of a button.  \nHandShaker -  Mac on the management of Android mobile phone content. \nHTML5 Player - HTML 5 video player. Keep your Mac from \"burning\".\niStat Menus - Advanced Mac system monitor on the menubar.\niStats - Command-line tool that allows you to easily grab the CPU temperature, fan speeds and battery information on OSX.  \nJuice - Make your battery information a bit more interesting.  \nKeepingYouAwake - Alternative to Caffeine with better support for dark mode in Mac. \nMonity - System monitoring widget for OS X.\nMounty - Tiny tool to re-mount write-protected NTFS volumes under Mac OS X 10.9+ in read-write mode. \nNitroShare - Cross-platform network file transfer utility.  \nNoti - Receive Android notifications on your Mac (with Pushbullet).  \nOmniDiskSweeper - Shows you the files on your drive, ordered by size. It can be used to find and remove unused files.  \nOnyX - Multifunction utility to verify disks and files, run cleaning and system maintenance tasks, configure hidden options and more. \nParagon NTFS - Read/write access to NTFS in macOS Sierra.\nPorting Kit - Install Windows\u00ae Games inside your Mac. \nSSH Tunnel - Application for managing SSH connections.\nTG Pro - Temperature monitoring, fan control & hardware diagnostics to help keep your Mac cool and healthy.\nTuxera NTFS - Full read-write compatibility with NTFS-formatted drives on a Mac.\nOverkill - Stop iTunes from opening when you connect your iPhone.\n\nGaming Software\n\nOpenEmu - A great video game console emulator, supports many different emulators in a single application. (e.g. Sony PSP, GameBoy, NDS and so on)  \nPPSSPP - A awesome PSP emulator for any OS you can dream of!  \n\nRemote Login Software\n\nAnyDesk - Provides Remote access across multiple machines.\nRealVNC - The original and best software for remote access across desktop and mobile.\nTeamViewer - Proprietary computer software package for remote control, desktop sharing, online meetings, web conferencing and file transfer between computers. \n\nSocial Networking\n\nChirper - A simple and tiny menu bar app for Buffer/Twitter that helps you tweet your thoughts without opening anything.\nFlume - A beautiful Instagram experience for your Mac. The free version is good enough if you only want to do the browsing instead of posting.\n\nQuickLook Plugins \n\nQuicklookStephen - Preview plain text files without or with unknown file extension. such as README\u3001INSTALL\u3001Capfile\u3001CHANGELOG...brew cask install qlstephen\n\nThird Party App Markets\nIf you come across websites offering pirated software or cracks, please post HERE. We love apps, but only authentic ones. :)\n\nSetapp - The best apps for Mac in one suite.\n\nPackage Managers\nHere are some of the major software download sites, there are a number of OSX Mac software sites\n\nCakebrew - GUI client for Homebrew. Install, check or remove apps, no command-line needed.  \nHomebrew Cask - Command line installation manager which extends Homebrew and brings its elegance, simplicity, and speed to Mac OS applications and large binaries alike.  \nHomebrew - The missing package manager for macOS.  \nMacPorts - Open-source community initiative to design an easy-to-use system for compiling, installing, and upgrading either command-line, X11 or Aqua based open-source software on the Mac OS X operating system.  \nMacUpdate Desktop - Simplifies finding, buying and installing apps for your Mac.\n\nMac App Download Sites\nHere are some of the major software download sites, there are a number of OSX Mac software sites\nGenuine Sites\n\nalternativeTo - Also a very nice community. If you are looking for some alternative apps FOR Windows or another platform, check this site.\nSlant - I personally recommend this. This is a platform where you can compare apps side-by-side, you might get an idea by seeing other users recommendations. Please contribute if you find an application from this list!\nAlso, Quora, Reddit, you know the drill.\nApp Shopper\uff1ahttp://appshopper.com/\nMacUpdate\uff1ahttps://www.macupdate.com/\nOther sites like MacStories, LifeHacker, ProductHunt are great resources.\n\nPirated software download site blacklist\nRefuse piracy from me. Software vendors can go to these places rights.\n\nAppKed\uff1ahttp://www.macbed.com\nSoftasm\uff1ahttps://softasm.com/\n\nPodcasts\n\nMac Power Users - Learn about getting the most from your Apple technology with focused topics and workflow guests.  \n\n\u2b06 back to top\nContributors\nThis project exists thanks to all the people who contribute.\n\nBackers\nThank you to all our backers! \ud83d\ude4f Become a backer\n\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. Become a sponsor\n\nLicense\n\nThis work is licensed under a Creative Commons Attribution 4.0 International License.\n\n"}, {"repo": "vsouza/awesome-ios", "language": "Swift", "readme": "\n\n\n\n\nReduce your job search from O(N) to O(1)\n\n        One coding quiz. Multiple offers from top companies\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMeet the New Instabug:\u00a0Understand How Your iOS App is Doing with Real-Time Contextual Insights From Your Users\n\n\nInstabug helps development and product teams easily collect bugs and feedback from beta testers and customers to iterate faster and ship quality apps. Instabug automatically attaches screenshots, device details, network logs, repro steps, and tons of other critical insights needed to resolve issues and prioritize product backlogs.\nMobile teams accelerate their workflows by seamlessly integrating with third-party tools like Github, Jira, Slack, Zendesk and much more. Instabug\u00a0is offering awesome-ios community an exclusive\u00a015% discount\u00a0on all paid plans. Get Started!\n\n\nContent\n\nCourses\nAccessibility\nAlexa\nAnalytics\nApp Routing\nApple TV\nArchitecture Patterns\nARKit\nAuthentication\nBlockchain\nBridging\nCache\nCharts\nCode Quality\n\nLinter\n\n\nColor\nCommand Line\nConcurrency\nCore Data\nDatabase\nData Structures / Algorithms\nDate & Time\nDebugging\nEventBus\nFiles\nFunctional Programming\nGames\nGCD\nGesture\nGraphics\nHardware\n\nBluetooth\nCamera\nForce Touch\niBeacon\nLocation\nOther Hardware\n\n\nLayout\nLogging\nLocalization\nMachine Learning\nMaps\nMath\nMedia\n\nAudio\nGIF\nImage\nMedia Processing\nPDF\nStreaming\nVideo\n\n\nMessaging\nNetworking\nNotifications\n\nPush Notifications\n\nPush Notification Providers\n\n\nLocal Notifications\n\n\nObjective-C Runtime\nOptimization\nParsing\n\nCSV\nJSON\nXML & HTML\nOther Parsing\n\n\nPassbook\nPayments\nPermissions\nProducts\nReactive Programming\n\nReact-Like\n\n\nReflection\nRegex\nSDK\n\nOfficial\nUnofficial\n\n\nSecurity\n\nEncryption\nKeychain\n\n\nServer\nTesting\n\nTDD / BDD\nA/B Testing\nUI Testing\nOther Testing\n\n\nText\n\nFont\n\n\nUI\n\nActivity Indicator\nAlert & Action Sheet\nAnimation\n\nTransition\n\n\nBadge\nButton\nCalendar\nCards\nForm & Settings\nKeyboard\nLabel\nLogin\nMenu\nNavigation Bar\nPickerView\nPopup\nPull to Refresh\nRating Stars\nScrollView\nSegmented Control\nSlider\nSplash View\nStatus Bar\nStepper\nSwitch\nTab Bar\nTable View / Collection View\n\nTable View\nCollection View\nExpandable Cell\nHeader\nPlaceholder\nCollection View Layout\n\n\nTag\nTextField & TextView\nUIPageControl\nWeb View\n\n\nUtility\nUser Consent\nVR\nWalkthrough / Intro / Tutorial\nWebsocket\nProject setup\nDependency / Package Manager\nTools\nRapid Development\n\nInjection\n\n\nDeployment / Distribution\nApp Store\nXcode\n\nExtensions (Xcode 8+)\nThemes\nOther Xcode\n\n\nReference\nStyle Guides\nGood Websites\n\nNews, Blogs and more\nUIKit references\nForums and discuss lists\nTutorials and Keynotes\nPrototyping\nNewsletters\nMedium\n\n\nSocial Media\n\nTwitter\nFacebook Groups\n\n\nPodcasts\nBooks\nOther Awesome Lists\nContributing\n\nCourses\nGetting Started\nCourses, tutorials and guides\n\nApple- Start Developing with iOS - Apple Guide.\nApple - Object-Oriented Programming with Objective-C\nApple - Programming with Objective-C\nCodeProject - Getting Started with iPhone and iOS Development.\nLifehacker - I Want to Write iOS Apps. Where Do I Start?\nRay Wenderlich - Learn to code iOS Apps.\nStanford - Developing iOS 7 Apps for iPhone and iPad\nStanford - Developing iOS 10 Apps with Swift - Stanford's 2017 iTunes U course.\nStanford - Developing iOS 11 Apps with Swift - Stanford's 2017 iTunes U course updated for iOS 11 and Swift.\nSwifteducation - Teaching App Development with Swift\nUdacity - Intro to iOS App Development with Swift\nUdemy - ARKit - Beginner to Professional in Swift 4 and iOS 11\nARStarter - Get started with ARKit - A little exercise for beginners.\n\nAccessibility\nFrameworks that help to support accessibility features and enable people with disabilities to use your app\n\nCapable - Track accessibility features to improve your app for people with certain disabilities.\n\nAlexa\nFrameworks that help to support writing custom alexa skills in swift\n\nAlexaSkillsKit - Swift library to develop custom Alexa Skills.\n\nAnalytics\nAnalytics platforms, SDK's, error tracking and real-time answers about your app\n\nInstabug - In-app feedback, Bug and Crash reporting, Fix Bugs Faster through user-steps, video recordings, screen annotation, network requests logging.\nMixpanel - Advanced analytics platform.\nLocalytics - Brings app marketing and analytics together.\nAnswers by Fabric - Answers gives you real-time insight into people\u2019s experience in your app.\nGTrack - Lightweight Objective-C wrapper around the Google Analytics for iOS SDK with some extra goodies.\nARAnalytics - Analytics abstraction library offering a sane API for tracking events and user data.\nSegment - The hassle-free way to integrate analytics into any iOS application.\nMOCA Analytics - Paid cross-platform analytics backend.\nCountly - Open source, mobile & web analytics, crash reports and push notifications platform for iOS & Android.\nAbbi - A Simple SDK for developers to manage and maximise conversions of all in-app promotions.\ndevtodev - Comprehensive analytics service that improves your project and saves time for product development.\nBugsnag - Error tracking with a free tier. Error reports include data on device, release, user, and allows arbitrary data.\nInapptics - Helps analyze and visualize user behavior in mobile apps. Provides visual user journeys, heatmaps and crash replays.\nMatomo - The MatomoTracker is an iOS, tvOS and macOS SDK for sending app analytics to a Matomo server.\n\nApp Routing\nElegant URL routing, navigation frameworks, deep links and more\n\nWAAppRouting - iOS routing done right. Handles both URL recognition and controller displaying with parsed parameters. All in one line, controller stack preserved automatically!\nDeepLinkKit - A splendid route-matching, block-based way to handle your deep links.\nIntentKit - An easier way to handle third-party URL schemes in iOS apps.\nJLRoutes - URL routing library for iOS with a simple block-based API.\nIKRouter - URLScheme router than supports auto creation of UIViewControllers for associated url parameters to allow creation of navigation stacks\nAppz - Easily launch and deeplink into external applications, falling back to web if not installed.\nURLNavigator - Elegant URL Routing for Swift\nMarshroute - Marshroute is an iOS Library for making your Routers simple but extremely powerful.\nSwiftRouter - A URL Router for iOS.\nRouter - Simple Navigation for iOS.\nApplicationCoordinator - Coordinator is an object that handles navigation flow and shares flow\u2019s handling for the next coordinator after switching on the next chain.\nRxFlow - Navigation framework for iOS applications based on a Reactive Flow Coordinator pattern.\nLinker - Lightweight way to handle internal and external deeplinks for iOS.\nCoreNavigation - Navigate between view controllers with ease.\nDZURLRoute - Universal route engine for iOS app, it can handle URLScheme between applications and page route between UIViewController.\nCrossroad - Crossroad is an URL router focused on handling Custom URL Schemes. Using this, you can route multiple URL schemes and fetch arguments and parameters easily.\nZIKRouter - An interface-oriented router for discovering modules and injecting dependencies with protocol in OC & Swift, iOS & macOS. Handles route in a type safe way.\nRouteComposer - Library that helps to handle view controllers composition, routing and deeplinking tasks.\nLightRoute - Easy transition between VIPER modules, implemented on pure Swift.\n\nApple TV\ntvOS view controllers, wrappers, template managers and video players.\n\nVoucher - A simple library to make authenticating tvOS apps easy via their iOS counterparts.\nXCDYouTubeKit - YouTube video player for iOS, tvOS and macOS.\nTVMLKitchen - Swifty TVML template manager with or without client-server.\nBrowserTV - Turn your Apple TV into a dashboard displaying any webpage!\nSwift-GA-Tracker-for-Apple-tvOS - Google Analytics tracker for Apple tvOS provides an easy integration of Google Analytics\u2019 measurement protocol for Apple TV.\nParallaxView - iOS controls and extensions that add parallax effect to your application.\nTvOSTextViewer - Light and scrollable view controller for tvOS to present blocks of text\nFocusTvButton - Light wrapper of UIButton that allows extra customization for tvOS\nTvOSMoreButton - A basic tvOS button which truncates long text with '... More'.\nTvOSPinKeyboard - PIN keyboard for tvOS.\nTvOSScribble - Handwriting numbers recognizer for Siri Remote.\nTvOSCustomizableTableViewCell - Light wrapper of UITableViewCell that allows extra customization for tvOS.\nTvOSSlider - TvOSSlider is an implementation of UISlider for tvOS.\n\nArchitecture Patterns\nClean architecture, Viper, MVVM, Reactive... choose your weapon.\n\nSwiftyVIPER - Makes implementing VIPER architecture much easier and cleaner.\nCleanArchitectureRxSwift - Example of Clean Architecture of iOS app using RxSwift.\nViperit - Viper Framework for iOS. Develop an app following VIPER architecture in an easy way. Written and tested in Swift.\nReactant - Reactant is a reactive architecture for iOS.\nYARCH - More clean alternative to VIPER with unidirectional data flow (flux-like).\niOS-Viper-Architecture - This repository contains a detailed sample app that implements VIPER architecture in iOS using libraries and frameworks like Alamofire, AlamofireImage, PKHUD, CoreData etc.\nTempura - A holistic approach to iOS development, inspired by Redux and MVVM.\nVIPER Module Generator - A Clean VIPER Modules Generator with comments and predfined functions.\nMMVMi - A Validation Model for MVC and MVVM Design Patterns in iOS Applications.\nios-architecture - A collection of iOS architectures - MVC, MVVM, MVVM+RxSwift, VIPER, RIBs and many others.\n\nARKit\nLibrary and tools to help you build unparalleled augmented reality experiences\n\nARKit-CoreLocation - Combines the high accuracy of AR with the scale of GPS data.\nVirtual Objects - Placing Virtual Objects in Augmented Reality.\nARVideoKit - Record and capture ARKit videos, photos, Live Photos, and GIFs.\nARKitEnvironmentMapper - A library that allows you to generate and update environment maps in real-time using the camera feed and ARKit's tracking capabilities.\nSmileToUnlock - This library uses ARKit Face Tracking in order to catch a user's smile.\nPlacenote - A library that makes ARKit sessions persistent to a location using advanced computer vision.\nPoly - Unofficial Google Poly SDK \u2013 search and display 3D models.\nARKit Emperor - The Emperor give you the most practical ARKit samples ever.\n\nAuthentication\nOauth and Oauth2 libraries, social logins and captcha tools.\n\nHeimdallr.swift - Easy to use OAuth 2 library for iOS, written in Swift.\nOhMyAuth - Simple OAuth2 library with a support of multiple services.\nAuthenticationViewController - A simple to use, standard interface for authenticating to oauth 2.0 protected endpoints via SFSafariViewController.\nOAuth2 - OAuth2 framework for macOS and iOS, written in Swift.\nOAuthSwift - Swift based OAuth library for iOS\nSimpleAuth - Simple social authentication for iOS.\nAlamofireOauth2 - A swift implementation of OAuth2.\nSwiftyOAuth - A simple OAuth library for iOS with a built-in set of providers.\nSimplicity - A simple way to implement Facebook and Google login in your iOS and macOS apps.\nInstagramAuthViewController - A ViewController for Instagram authentication.\nInstagramSimpleOAuth - A quick and simple way to authenticate an Instagram user in your iPhone or iPad app.\nDropboxSimpleOAuth - A quick and simple way to authenticate a Dropbox user in your iPhone or iPad app.\nBoxSimpleOAuth - A quick and simple way to authenticate a Box user in your iPhone or iPad app.\nInstagramLogin - A simple way to authenticate Instagram accounts on iOS.\nReCaptcha - (In)visible ReCaptcha for iOS.\nLinkedInSignIn - Simple view controller to login and retrieve access token from LinkedIn.\n\nBlockchain\nTool for smart contract interactions. Bitcoin protocol implementations and Frameworks for interacting with cryptocurrencies.\n\nWeb3.swift - Web3 library for interacting with the Ethereum blockchain.\nweb3swift - Elegant Web3js functionality in Swift. Native ABI parsing and smart contract interactions.\nEthereumKit - EthereumKit is a free, open-source Swift framework for easily interacting with the Ethereum.\nBitcoinKit - Bitcoin protocol toolkit for Swift, BitcoinKit implements Bitcoin protocol in Swift. It is an implementation of the Bitcoin SPV protocol written (almost) entirely in swift.\nEtherWalletKit - Ethereum Wallet Toolkit for iOS - You can implement Ethereum wallet without a server and blockchain knowledge.\nCoinpaprikaAPI - Coinpaprika API client with free & frequently updated market data from the world of crypto: coin prices, volumes, market caps, ATHs, return rates and more.\nBitcoin-Swift-Kit - Full Bitcoin library written on Swift. Complete SPV wallet implementation for Bitcoin, Bitcoin Cash and Dash blockchains.\n\nBridging\nSharing code between Objective-C and Swift, iOS and macOS, Javascript and Objective-C.\n\nRubyMotion - RubyMotion is a revolutionary toolchain that lets you quickly develop and test native iOS and macOS applications for iPhone, iPad and Mac, all using the Ruby language.\nJSPatch - JSPatch bridge Objective-C and Javascript using the Objective-C runtime. You can call any Objective-C class and method in JavaScript by just including a small engine. JSPatch is generally use for hotfix iOS App.\nWebViewJavascriptBridge - An iOS/macOS bridge for sending messages between Obj-C and JavaScript in UIWebViews/WebViews.\nMAIKit - A framework for sharing code between iOS and macOS.\n\nCache\nThread safe, offline and high performance cache libs and frameworks.\n\nAwesome Cache - Delightful on-disk cache (written in Swift).\nmattress - iOS Offline Caching for Web Content.\nCarlos - A simple but flexible cache.\nHanekeSwift - A lightweight generic cache for iOS written in Swift with extra love for images.\nYYCache - High performance cache framework for iOS.\nCache - Nothing but Cache.\nMGCacheManager - A delightful iOS Networking Cache Managing Class.\nSPTPersistentCache - Everyone tries to implement a cache at some point in their iOS app\u2019s lifecycle, and this is ours. By Spotify.\nTrack - Track is a thread safe cache write by Swift. Composed of DiskCache and MemoryCache which support LRU.\nUITableView Cache - UITableView cell cache that cures scroll-lags on a cell instantiating.\nRocketData - A caching and consistency solution for immutable models.\nPINCache - Fast, non-deadlocking parallel object cache for iOS and macOS.\nJohnny - Melodic Caching for Swift.\nDisk - Delightful framework for iOS to easily persist structs, images, and data.\nCachyr - A small key-value data cache for iOS, macOS and tvOS, written in Swift.\nCache - Swift caching library.\nMemoryCache - MemoryCache is type-safe memory cache.\n\nCharts\nBeautiful, Easy and Fully customized charts\n\nCharts - A powerful chart / graph framework, the iOS equivalent to MPAndroidChart.\nPNChart - A simple and beautiful chart lib used in Piner and CoinsMan for iOS.\nXJYChart - A Beautiful chart for iOS. Support animation, click, slide, area highlight.\nBEMSimpleLineGraph - Elegant Line Graphs for iOS (charting library).\nJBChartView - iOS-based charting library for both line and bar graphs.\nXYPieChart - A simple and animated Pie Chart for your iOS app.\nTEAChart - Simple and intuitive iOS chart library. Contribution graph, clock chart, and bar chart.\nEChart - iOS/iPhone/iPad Chart, Graph. Event handling and animation supported.\nFSLineChart - A line chart library for iOS.\nchartee - A charting library for mobile platforms.\nANDLineChartView - ANDLineChartView is easy to use view-based class for displaying animated line chart.\nTWRCharts - An iOS wrapper for ChartJS. Easily build animated charts by leveraging the power of native Obj-C code.\nSwiftCharts - Easy to use and highly customizable charts library for iOS.\nFlowerChart - Flower-shaped chart with custom appearance animation, fully vector.\nScrollable-GraphView - An adaptive scrollable graph view for iOS to visualise simple discrete datasets. Written in Swift.\nDr-Charts - Dr-Charts is a highly customisable, easy to use and interactive chart / graph framework in Objective-C.\nGraphs - Light weight charts view generator for iOS.\nFSInteractiveMap - A charting library to visualize and interact with a vector map on iOS. It's like Geochart but for iOS.\nJYRadarChart - An iOS open source Radar Chart implementation.\nTKRadarChart - A customizable radar chart in Swift.\nMagicPie - Awesome layer based pie chart. Fantastically fast and fully customizable. Amazing animations available with MagicPie.\nPieCharts - Easy to use and highly customizable pie charts library for iOS.\nCSPieChart - iOS PieChart Opensource. This is very easy to use and customizable.\nDDSpiderChart - Easy to use and customizable Spider (Radar) Chart library for iOS written in Swift.\ncore-plot - a 2D plotting lib which is highly customizable and capable of drawing many types of plots.\nChartProgressBar - Draw a chart with progress bar style.\nSMDiagramViewSwift - Meet cute and very flexibility library for iOS application for different data view in one circle diagram.\nSwift LineChart - Line Chart library for iOS written in Swift.\nSwiftChart - Line and area chart library for iOS.\nEatFit - Eat fit is a component for attractive data representation inspired by Google Fit.\nCoreCharts - CoreCharts is a simple powerful yet Charts library for apple products.\n\nCode Quality\nQuality always matters. Code checkers, memory vigilants, syntastic sugars and more.\n\nBootstrap - iOS project bootstrap aimed at high quality coding.\nKZAsserts - Set of custom assertions that automatically generate NSError's, allow for both Assertions in Debug and Error handling in Release builds, with beautiful DSL.\nPSPDFUIKitMainThreadGuard - Simple snippet generating assertions when UIKit is used on background threads.\nocstyle - Objective-C style checker.\nspacecommander - Commit fully-formatted Objective-C code as a team without even trying.\nDWURecyclingAlert - Optimizing UITableViewCell For Fast Scrolling.\nTailor - Cross-platform static analyzer for Swift that helps you to write cleaner code and avoid bugs.\nSwiftCop -  SwiftCop is a validation library fully written in Swift and inspired by the clarity of Ruby On Rails Active Record validations.\nTrackable - Trackable is a simple analytics integration helper library. It\u2019s especially designed for easy and comfortable integration with existing projects.\nMLeaksFinder - Find memory leaks in your iOS app at develop time.\nHeapInspector-for-iOS - Find memory issues & leaks in your iOS app without instruments.\nFBMemoryProfiler - iOS tool that helps with profiling iOS Memory usage.\nFBRetainCycleDetector - iOS library to help detecting retain cycles in runtime.\nBuglife - Awesome bug reporting for iOS apps.\nWarnings-xcconfig - An xcconfig (Xcode configuration) file for easily turning on a boatload of warnings in your project or its targets.\nAardvark - Aardvark is a library that makes it dead simple to create actionable bug reports.\nStats - In-app memory usage monitoring.\nGlueKit - A type-safe observer framework for Swift.\nSwiftFormat - A code library and command-line formatting tool for reformatting Swift code.\nPSTModernizer - Makes it easier to support older versions of iOS by fixing things and adding missing methods.\nBugsee - In-app bug and crash reporting with video, logs, network traffic and traces.\nFallback - Syntactic sugar for nested do-try-catch.\nODUIThreadGuard - A guard to help you check if you make UI changes not in main thread.\nIBAnalyzer - Find common xib and storyboard-related problems without running your app or writing unit tests.\nDecouplingKit - decoupling between modules in your iOS Project.\nClue - Flexible bug report framework for iOS with screencast, networking, interactions and view structure.\nWeakableSelf - A Swift micro-framework to encapsulate [weak self] and guard statements within closures.\n\nLinter\nStatic code analyzers to enforce style and conventions.\n\nOCLint - Static code analysis tool for improving quality and reducing defects.\nTaylor - Measure Swift code metrics and get reports in Xcode, Jenkins and other CI platforms.\nSwiftlint - A tool to enforce Swift style and conventions.\nIBLinter - A linter tool for Interface Builder.\nSwiftLinter - Share lint rules between projects and lint changed files with SwiftLint.\n\nColor\nHex color extensions, theming, color pickers and other awesome color tools.\n\nDynamicColor - Yet another extension to manipulate colors easily in Swift.\nSwiftHEXColors - HEX color handling as an extension for UIColor.\nColours - A beautiful set of predefined colors and a set of color methods to make your iOS/macOS development life easier.\nUIColor-Hex-Swift - Convenience method for creating autoreleased color using RGBA hex string.\nHue - Hue is the all-in-one coloring utility that you'll ever need.\nFlatUIColors - Flat UI color palette helpers written in Swift.\nRandomColorSwift - An attractive color generator for Swift. Ported from randomColor.js.\nPFColorHash - Generate color based on the given string.\nBCColor - A lightweight but powerful color kit (Swift).\nDKNightVersion - Manage Colors, Integrate Night/Multiple Themes.\nPrettyColors - PrettyColors is a Swift library for styling and coloring text in the Terminal. The library outputs ANSI escape codes and conforms to ECMA Standard 48.\nTFTColor - Simple Extension for RGB and CMKY Hex Strings and Hex Values (ObjC & Swift).\nCostumeKit - Base types for theming an app.\nCSS3ColorsSwift - A UIColor extension with CSS3 Colors name.\nColorify - Simple, yet powerful color library that includes latest and most trendy colors from 2017.\nChromaColorPicker - An intuitive iOS color picker built in Swift.\nLorikeet - A lightweight Swift framework for aesthetically pleasing color-scheme generation and CIE color-difference calculation.\nGestalt - An unintrusive & light-weight iOS app-theming library with support for animated theme switching.\n\nCommand Line\nSmart, beauftil and elegant tools to help you create command line applications.\n\nSwiftline - Swiftline is a set of tools to help you create command line applications.\nCommander - Compose beautiful command line interfaces in Swift.\nColorizeSwift - Terminal string styling for Swift.\nGuaka - The smartest and most beautiful (POSIX compliant) Command line framework for Swift.\nMarathon - Marathon makes it easy to write, run and manage your Swift scripts.\nCommandCougar - An elegant pure Swift library for building command line applications.\nCrayon - Terminal string styling with expressive api and 256/TrueColor support.\nSwiftShell - A Swift framework for shell scripting and running shell commands.\nSourceDocs - Command Line Tool that generates Markdown documentation from inline source code comments.\nModuleInterface - Command Line Tool that generates the Module's Interface from a Swift project.\n\nConcurrency\nJob schedulers, Coroutines, Asynchronous and Type safe threads libs and frameworks written in Swift\n\nVenice - CSP (Coroutines, Channels, Select) for Swift.\nConcurrent - Functional Concurrency Primitives.\nFlow - Operation Oriented Programming in Swift.\nBrisk - A Swift DSL that allows concise and effective concurrency manipulation.\nAojet - An actor model library for swift.\nOverdrive - Fast async task based Swift framework with focus on type safety, concurrency and multi threading.\nAsyncNinja - A complete set of concurrency and reactive programming primitives.\nKommander - Kommander is a Swift library to manage the task execution in different threads. Through the definition a simple but powerful concept, Kommand.\nThreadly - Type-safe thread-local storage in Swift.\nFlow-iOS - Make your logic flow and data flow clean and human readable.\nQueuer - A queue manager, built on top of OperationQueue and Dispatch (aka GCD).\nSwiftQueue - Job Scheduler with Concurrent run, failure/retry, persistence, repeat, delay and more.\nGroupWork - Easy concurrent, asynchronous tasks in Swift.\nStickyLocking - A general purpose embedded hierarchical lock manager used to build highly concurrent applications of all types.\n\nCore Data\nCore data Frameworks, wrappers, generators and boilerplates.\n\nEnsembles - A synchronization framework for Core Data.\nMogenerator - Automatic Core Data code generation.\nMagicalRecord - Super Awesome Easy Fetching for Core Data.\nCoreStore - Powerful Core Data framework for Incremental Migrations, Fetching, Observering, etc.\nCore Data Query Interface A type-safe, fluent query framework for Core Data.\nGraph - An elegant data-driven framework for CoreData in Swift.\nCoreDataDandy - A feature-light wrapper around Core Data that simplifies common database operations.\nSync - Modern Swift JSON synchronization to Core Data.\nAlecrimCoreData - A powerful and simple Core Data wrapper framework written in Swift.\nAERecord - Super awesome Core Data wrapper in Swift.\nCoreDataStack - The Big Nerd Ranch Core Data Stack.\nJSQCoreDataKit - A swifter Core Data stack.\nSkopelos - A minimalistic, thread safe, non-boilerplate and super easy to use version of Active Record on Core Data. Simply all you need for doing Core Data.\nCadmium - A complete swift framework that wraps CoreData and helps facilitate best practices.\nDataKernel - Simple CoreData wrapper to ease operations.\nDATAStack - 100% Swift Simple Boilerplate Free Core Data Stack. NSPersistentContainer.\nJustPersist - JustPersist is the easiest and safest way to do persistence on iOS with Core Data support out of the box.\nPrediKit - An NSPredicate DSL for iOS, macOS, tvOS, & watchOS. Inspired by SnapKit and lovingly written in Swift.\nRecords - In just a few minutes, setup a fully functioning CoreData implementation that embraces the static, type-safe nature of Swift.\nPredicateFlow - Write amazing, strong-typed and easy-to-read NSPredicate, allowing you to write flowable NSPredicate, without guessing attribution names, predicate operation or writing wrong arguments type.\n\nDatabase\nWrappers, clients, Parse alternatives and safe tools to deal with ephemeral and persistent data.\n\nRealm - The alternative to CoreData and SQLite: Simple, modern and fast.\nYapDatabase - YapDatabase is an extensible database for iOS & Mac.\nCouchbase Mobile - Couchbase document store for mobile with cloud sync.\nFMDB - A Cocoa / Objective-C wrapper around SQLite.\nFCModel - An alternative to Core Data for people who like having direct SQL access.\nZephyr - Effortlessly synchronize NSUserDefaults over iCloud.\nPrephirences - Prephirences is a Swift library that provides useful protocols and convenience methods to manage application preferences, configurations and app-state.\nStorez - Safe, statically-typed, store-agnostic key-value storage (with namespace support).\nSwiftyUserDefaults - Statically-typed NSUserDefaults.\nSugarRecord  - Data persistence management library.\nSQLite.swift - A type-safe, Swift-language layer over SQLite3.\nGRDB.swift - A versatile SQLite toolkit for Swift, with WAL mode support.\nFluent - Simple ActiveRecord implementation for working with your database in Swift.\nParseAlternatives - A collaborative list of Parse alternative backend service providers.\nTypedDefaults - TypedDefaults is a utility library to type-safely use NSUserDefaults.\nrealm-cocoa-converter - A library that provides the ability to import/export Realm files from a variety of data container formats.\nYapDatabaseExtensions - YapDatabase extensions for use with Swift.\nRealmGeoQueries - RealmGeoQueries simplifies spatial queries with Realm Cocoa. In the absence of and official functions, this library provide the possibility to do proximity search.\nSwiftMongoDB - A MongoDB interface for Swift.\nObjectiveRocks - An Objective-C wrapper of Facebook's RocksDB - A Persistent Key-Value Store for Flash and RAM Storage.\nOHMySQL - An Objective-C wrapper of MySQL C API.\nSwiftStore - Key-Value store for Swift backed by LevelDB.\nOneStore - A single value proxy for NSUserDefaults, with clean API.\nMongoDB - A Swift wrapper around the mongo-c client library, enabling access to MongoDB servers.\nMySQL - A Swift wrapper around the MySQL client library, enabling access to MySQL servers.\nRedis - A Swift wrapper around the Redis client library, enabling access to Redis.\nPostgreSQL - A Swift wrapper around the libpq client library, enabling access to PostgreSQL servers.\nFileMaker - A Swift wrapper around the FileMaker XML Web publishing interface, enabling access to FileMaker servers.\nNora - Nora is a Firebase abstraction layer for working with FirebaseDatabase and FirebaseStorage.\nPersistentStorageSerializable - Swift library that makes easier to serialize the user's preferences (app's settings) with system User Defaults or Property List file on disk.\nWCDB - WCDB is an efficient, complete, easy-to-use mobile database framework for iOS, macOS.\nStorageKit - Your Data Storage Troubleshooter.\nUserDefaults - Simple, Strongly Typed UserDefaults for iOS, macOS and tvOS.\nDefault - Modern interface to UserDefaults + Codable support.\nIceCream - Sync Realm Database with CloudKit.\nFirebaseHelper - Safe and easy wrappers for common Firebase Realtime Database functions.\nShallows - Your lightweight persistence toolbox.\nStorageManager - Safe and easy way to use FileManager as Database.\nRealmWrapper - Safe and easy wrappers for RealmSwift.\nUserDefaultsStore - An easy and very light way to store and retrieve -reasonable amount- of Codable objects, in a couple lines of code.\nPropertyKit - Protocol-First, Type and Key-Safe Swift Property for iOS, macOS and tvOS.\nPersistenceKit - Store and retrieve Codable objects to various persistence layers, in a couple lines of code.\nModelAssistant - Elegant library to manage the interactions between view and model in Swift.\nMMKV - An efficient, small mobile key-value storage framework developed by WeChat. Works on iOS, Android, macOS and Windows.\nDefaults - Swifty and modern UserDefaults.\nMongoKitten - A pure Swift MongoDB client implementation with support for embedded databases.\nSecureDefaults - A lightweight wrapper over UserDefaults/NSUserDefaults with an extra AES-256 encryption layer.\nUnrealm - Unrealm enables you to easily store Swift native Classes, Structs and Enums into Realm.\n\nData Structures / Algorithms\nDiffs, keypaths, sorted lists and other amazing data structures wrappers and libraries.\n\nChangeset - Minimal edits from one collection to another.\nBTree - Fast ordered collections for Swift using in-memory B-trees.\nSwiftStructures - Examples of commonly used data structures and algorithms in Swift.\ndiff - Simple diff library in pure Swift.\nBrick - A generic view model for both basic and complex scenarios.\nAlgorithm - Algorithm is a collection of data structures that are empowered by a probability toolset.\nAnyObjectConvertible - Convert your own struct/enum to AnyObject easily.\nDollar - A functional tool-belt for Swift Language similar to Lo-Dash or Underscore.js in Javascript https://www.dollarswift.org/.\nResult - Swift type modeling the success/failure of arbitrary operations.\nEKAlgorithms - Some well known CS algorithms & data structures in Objective-C.\nMonaka - Convert custom struct and fundamental values to NSData.\nBuffer - Swift \u03bc-framework for efficient array diffs, collection observation and cell configuration.\nSwiftGraph - Graph data structure and utility functions in pure Swift.\nSwiftPriorityQueue - A priority queue with a classic binary heap implementation in pure Swift.\nPencil - Write values to file and read it more easily.\nHeckelDiff - A fast Swift diffing library.\nDekoter - NSCoding's counterpart for Swift structs.\nswift-algorithm-club - Algorithms and data structures in Swift, with explanations!\nImpeller - A Distributed Value Store in Swift.\nDispatch - Multi-store Flux implementation in Swift.\nDeepDiff - Diff in Swift.\nDiffer - Swift library to generate differences and patches between collections.\nProbably - A Swift probability and statistics library.\nRandMyMod - RandMyMod base on your own struct or class create one or a set of randomized instance.\nKeyPathKit - KeyPathKit provides a seamless syntax to manipulate data using typed keypaths.\nDifferific - A fast and convenient diffing framework.\nOneWaySynchronizer - The simplest abstraction to synchronize local data with remote source.\nDifferenceKit - A fast and flexible O(n) difference algorithm framework for Swift collection.\n\nDate & Time\nTime and NSCalendar libraries. Also contains Sunrise and Sunset time generators, time pickers and NSTimer interfaces.\n\nTimepiece - Intuitive NSDate extensions in Swift.\nSwiftDate - The best way to manage Dates and Timezones in Swift.\nSwiftMoment - A time and calendar manipulation library.\nDateTools - Dates and times made easy in Objective-C.\nSwiftyTimer - Swifty API for NSTimer.\nDateHelper - Convenience extension for NSDate in Swift.\niso-8601-date-formatter - A Cocoa NSFormatter subclass to convert dates to and from ISO-8601-formatted strings. Supports calendar, week, and ordinal formats.\nEmojiTimeFormatter - Format your dates/times as emojis.\nKronos - Elegant NTP date library in Swift.\nTrueTime - Get the true current time impervious to device clock time changes.\n10Clock - This Control is a beautiful time-of-day picker heavily inspired by the iOS 10 \"Bedtime\" timer.\nNSDate-TimeAgo - A \"time ago\", \"time since\", \"relative date\", or \"fuzzy date\" category for NSDate and iOS, Objective-C, Cocoa Touch, iPhone, iPad.\nAnyDate - Swifty Date & Time API inspired from Java 8 DateTime API.\nTimeZonePicker - A TimeZonePicker UIViewController similar to the iOS Settings app.\nTime - Type-safe time calculations in Swift, powered by generics.\nChronology - Building a better date/time library.\nSolar - A Swift micro library for generating Sunrise and Sunset times.\nTimePicker - Configurable time picker component based on a pan gesture and its velocity.\nLFTimePicker - Custom Time Picker ViewController with Selection of start and end times in Swift.\nNVDate - Swift4 Date extension library.\nSchedule - \u23f3 A missing lightweight task scheduler for Swift with an incredibly human-friendly syntax.\n\nDebugging\nDebugging tools, crash reports, logs and console UI's.\n\nXniffer - A swift network profiler built on top of URLSession.\nNetfox - A lightweight, one line setup, iOS / macOS network debugging library!\nPonyDebugger - Remote network and data debugging for your native iOS app using Chrome Developer Tools.\nDBDebugToolkit - Set of easy to use debugging tools for iOS developers & QA engineers.\nFlex - An in-app debugging and exploration tool for iOS.\nchisel - Collection of LLDB commands to assist debugging iOS apps.\nAlpha - Next generation debugging framework for iOS.\nAEConsole - Customizable Console UI overlay with debug log on top of your iOS App.\nGodEye - Automatically display Log,Crash,Network,ANR,Leak,CPU,RAM,FPS,NetFlow,Folder and etc with one line of code based on Swift.\nNetworkEye - a iOS network debug library, It can monitor HTTP requests within the App and displays information related to the request.\nDotzu - iOS app debugger while using the app. Crash report, logs, network.\nHyperion - In-app design review tool to inspect measurements, attributes, and animations.\nHttper-iOS - App for developers to test REST API.\nDroar - Droar is a modular, single-line installation debugging window.\nWormholy - iOS network debugging, like a wizard.\nAppSpector - Remote iOS and Android debugging and data collection service. You can debug networking, logs, CoreData, SQLite, NSNotificationCenter and mock device's geo location.\nWoodpecker - View sandbox files, UserDefaults, network request from Mac.\nLayoutInspector - Debug app layouts directly on iOS device: inspect layers in 3D and debug each visible view attributes.\nMTHawkeye - Profiling / Debugging assist tools for iOS, include tools: UITimeProfiler, Memory Allocations, Living ObjC Objects Sniffer, Network Transaction Waterfall, etc.\n\nEventBus\nPromises and Futures libraries to help you write better async code in Swift.\n\nSwiftEventBus - A publish/subscribe event bus optimized for iOS.\nPromiseKit - Promises for iOS and macOS.\nBolts - Bolts is a collection of low-level libraries designed to make developing mobile apps easier, including tasks (promises) and app links (deep links).\nSwiftTask - Promise + progress + pause + cancel + retry for Swift.\nWhen - A lightweight implementation of Promises in Swift.\nthen\ud83c\udfac - Elegant Async code in Swift.\nBolts-Swift - Bolts is a collection of low-level libraries designed to make developing mobile apps easier.\nRWPromiseKit - A light-weighted Promise library for Objective-C.\nFutureLib - FutureLib is a pure Swift 2 library implementing Futures & Promises inspired by Scala.\nSwiftNotificationCenter - A Protocol-Oriented NotificationCenter which is type safe, thread safe and with memory safety.\nFutureKit - A Swift based Future/Promises Library for iOS and macOS.\nsignals-ios - Typeful eventing.\nBrightFutures - Write great asynchronous code in Swift using futures and promises.\nNoticeObserveKit - NoticeObserveKit is type-safe NotificationCenter wrapper that associates notice type with info type.\nHydra - Promises & Await - Write better async code in Swift.\nPromis - The easiest Future and Promises framework in Swift. No magic. No boilerplate.\nBluebird.swift - Promise/A+, Bluebird inspired, implementation in Swift 4.\nPromise - A Promise library for Swift, based partially on Javascript's A+ spec.\npromises - Google provides a synchronization construct for Objective-C and Swift to facilitate writing asynchronous code.\nContinuum - NotificationCenter based Lightweight UI / AnyObject binder.\nFutures - Lightweight promises for iOS, macOS, tvOS, watchOS, and server-side Swift.\nEasyFutures - \ud83d\udd17 Swift Futures & Promises. Easy to use. Highly combinable.\nTopicEventBus - Publish\u2013subscribe design pattern implementation framework, with ability to publish events by topic. (NotificationCenter extended alternative).\n\nFiles\nFile management, file browser, zip handling and file observers.\n\nFileKit - Simple and expressive file management in Swift.\nZip - Swift framework for zipping and unzipping files.\nFileBrowser - Powerful Swift file browser for iOS.\nAres - Zero-setup P2P file transfer between Macs and iOS devices.\nFileProvider - FileManager replacement for Local, iCloud and Remote (WebDAV/FTP/Dropbox/OneDrive/SMB2) files on iOS/tvOS and macOS.\nKZFileWatchers - A micro-framework for observing file changes, both local and remote. Helpful in building developer tools.\nZipArchive - ZipArchive is a simple utility class for zipping and unzipping files on iOS and Mac.\nFileExplorer - Powerful file browser for iOS that allows its users to choose and remove files and/or directories.\nZIPFoundation - Effortless ZIP Handling in Swift.\nAppFolder - AppFolder is a lightweight framework that lets you design a friendly, strongly-typed representation of a directories inside your app's container.\nZipZap - zip file I/O library for iOS, macOS and tvOS.\nAMSMB2 - Swift framework to connect SMB 2/3 shares for iOS.\n\nFunctional Programming\nCollection of Swift functional programming tools.\n\nForbind - Functional chaining and promises in Swift.\nFunky - Functional programming tools and experiments in Swift.\nLlamaKit - Collection of must-have functional Swift tools.\nOriole - A functional utility belt implemented as Swift protocol extensions.\nPrelude - Swift \u00b5framework of simple functional programming tools.\nSwiftx - Functional data types and functions for any project.\nSwiftz -  Functional programming in Swift.\nOptionalExtensions - Swift \u00b5framework with extensions for the  Optional Type.\nArgo - Functional JSON parsing library for Swift.\nRunes - Infix operators for monadic functions in Swift.\nBow - Typed Functional Programming companion library for Swift.\n\nGames\n\nSage - A cross-platform chess library for Swift.\nShogibanKit - ShogibanKit is a framework for implementing complex Japanese Chess (Shogii) in Swift. No UI, nor AI.\nSKTiled - Swift framework for working with Tiled assets in SpriteKit.\nCollectionNode - A swift framework for a collectionView in SpriteKit.\nAssetImportKit - Swifty cross platform library (macOS, iOS) that converts Assimp supported models to SceneKit scenes.\nglide engine - SpriteKit and GameplayKit based engine for making 2d games, with practical examples and tutorials.\n\nGCD\nGrand Central Dispatch syntax sugars, tools and timers.\n\nGCDKit - Grand Central Dispatch simplified with Swift.\nAsync - Syntactic sugar in Swift for asynchronous dispatches in Grand Central Dispatch.\nSwiftSafe - Thread synchronization made easy.\nYYDispatchQueuePool - iOS utility class to manage global dispatch queue.\nAlecrimAsyncKit - Bringing async and await to Swift world with some flavouring.\nGrandSugarDispatch - Syntactic sugar for Grand Central Dispatch (GCD).\nThreader - Pretty GCD calls and easier code execution.\nDispatch - Just a tiny library to make using GCD easier and intuitive.\nGCDTimer - Well tested Grand Central Dispatch (GCD) Timer in Swift.\nChronos-Swift - Grand Central Dispatch Utilities.\nMe - A super slim solution to the nested asynchronous computations.\nSwiftyTask - An extreme queuing system with high performance for managing all task in app with closure.\n\nGesture\nLibraries and tools to handle gestures.\n\nTactile - A better way to handle gestures on iOS.\nSwiftyGestureRecognition - Aids with prototyping UIGestureRecognizers in Xcode Playgrounds.\nDBPathRecognizer - Gesture recognizer tool.\nSensitive - Fresh look at work with gestures in Swift.\nSplitViewDragAndDrop - Easily add drag and drop to pass data between your apps in split view mode.\nFDFullscreenPopGesture - An UINavigationController's category to enable fullscreen pop gesture in an iOS7+ system style with AOP.\n\nGraphics\nCoreGraphics, CoreAnimation, SVG, CGContext libraries, helpers and tools.\n\nGraphicz - Light-weight, operator-overloading-free complements to CoreGraphics!\nPKCoreTechniques - The code for my CoreGraphics+CoreAnimation talk, held during the 2012 iOS Game Design Seminar at the Technical University Munich.\nMPWDrawingContext - An Objective-C wrapper for CoreGraphics CGContext.\nDePict - A simple, declarative, functional drawing framework, in Swift!\nSwiftSVG -  A single pass SVG parser with multiple interface options (String, NS/UIBezierPath, CAShapeLayer, and NS/UIView).\nInkKit - Write-Once, Draw-Everywhere for iOS and macOS.\nYYAsyncLayer - iOS utility classes for asynchronous rendering and display.\nNXDrawKit - NXDrawKit is a simple and easy but useful drawing kit for iPhone.\njot - An iOS framework for easily adding drawings and text to images.\nSVGKit - Display and interact with SVG Images on iOS / macOS, using native rendering (CoreAnimation) (currently only supported for iOS - macOS code needs updating).\nSnowflake - SVG in Swift.\nHxSTLParser - Basic STL loader for SceneKit.\nProcessingKit - Visual designing library for iOS & OSX.\nEZYGradientView - Create gradients and blur gradients without a single line of code.\nAEConicalGradient - Conical (angular) gradient layer written in Swift.\nMKGradientView - Core Graphics based gradient view capable of producing Linear (Axial), Radial (Circular), Conical (Angular), Bilinear (Four Point) gradients, written in Swift.\nEPShapes - Design shapes in Interface Builder.\nMacaw - Powerful and easy-to-use vector graphics library with SVG support written in Swift.\nBlockiesSwift - Unique blocky identicons/profile picture generator.\nRough - lets you draw in a sketchy, hand-drawn-like, style.\nGraphLayout - UI controls for graph visualization. It is powered by Graphviz.\nDrawsana - iOS framework for building raster drawing and image markup views.\n\nHardware\nBluetooth\nLibraries to deal with nearby devices, BLE tools and MultipeerConnectivity wrappers.\n\nDiscovery - A very simple library to discover and retrieve data from nearby devices (even if the peer app works at background).\nLGBluetooth - Simple, block-based, lightweight library over CoreBluetooth. Will clean up your Core Bluetooth related code.\nPeerKit An open-source Swift framework for building event-driven, zero-config Multipeer Connectivity apps.\nBluetoothKit - Easily communicate between iOS/macOS devices using BLE.\nBluetonium - Bluetooth mapping in Swift.\nBlueCap - iOS Bluetooth LE framework.\nApple Family - Quickly connect Apple devices together with Bluetooth, wifi, and USB.\nBleu - BLE (Bluetooth LE) for U.\nBluejay - A simple Swift framework for building reliable Bluetooth LE apps.\nBabyBluetooth - The easiest way to use Bluetooth (BLE) in iOS/MacOS.\nExtendaBLE - Simple Blocks-Based BLE Client for iOS/tvOS/watchOS/OSX/Android. Quickly configuration for centrals/peripherals, perform packet based read/write operations, and callbacks for characteristic updates.\nPeerConnectivity - Functional wrapper for Apple's MultipeerConnectivity framework.\nAZPeerToPeerConnection - AZPeerToPeerConnectivity is a wrapper on top of Apple iOS Multipeer Connectivity framework. It provides an easier way to create and manage sessions. Easy to integrate.\nMultiPeer - Multipeer is a wrapper for Apple's MultipeerConnectivity framework for offline data transmission between Apple devices. It makes easy to automatically connect to multiple nearby devices and share information using either bluetooth or wifi.\n\nCamera\nMocks, ImagePickers, and multiple options of customizable camera implementation\n\nTGCameraViewController - Custom camera with AVFoundation. Beautiful, light and easy to integrate with iOS projects.\nPBJVision - iOS camera engine, features touch-to-record video, slow motion video, and photo capture.\nCool-iOS-Camera - A fully customisable and modern camera implementation for iOS made with AVFoundation.\nSCRecorder - Camera engine with Vine-like tap to record, animatable filters, slow motion, segments editing.\nALCameraViewController - A camera view controller with custom image picker and image cropping. Written in Swift.\nCameraManager - Simple Swift class to provide all the configurations you need to create custom camera view in your app.\nRSBarcodes_Swift - 1D and 2D barcodes reader and generators for iOS 8 with delightful controls. Now Swift.\nLLSimpleCamera - A simple, customizable camera control - video recorder for iOS.\nFusuma - Instagram-like photo browser and a camera feature with a few line of code in Swift.\nBarcodeScanner - Simple and beautiful barcode scanner.\nHorizonSDK-iOS - State of the art real-time video recording / photo shooting iOS library.\nFastttCamera - Fasttt and easy camera framework for iOS with customizable filters.\nDKCamera - A lightweight & simple camera framework for iOS. Written in Swift.\nNextLevel - Next Level is a media capture camera library for iOS.\nCameraEngine - Camera engine for iOS, written in Swift, above AVFoundation.\nSwiftyCam -  A Snapchat Inspired iOS Camera Framework written in Swift.\nCameraBackground -  Show camera layer as a background to any UIView.\nLumina - Full service camera that takes photos, videos, streams frames, detects metadata, and streams CoreML predictions.\nRAImagePicker - RAImagePicker is a protocol-oriented framework that provides custom features from the built-in Image Picker Edit.\nFDTake - Easily take a photo or video or choose from library.\nYPImagePicker - Instagram-like image picker & filters for iOS.\nMockImagePicker - Mock UIImagePickerController for testing camera based UI in simulator.\niOS-Depth-Sampler - A collection of code examples for Depth APIs.\nTakeASelfie - An iOS framework that uses the front camera, detects your face and takes a selfie.\nHybridCamera - Video and photo camera for iOS, similar to the SnapChat camera.\nCameraKit-iOS - Massively increase camera performance and ease of use in your next iOS project.\n\nForce Touch\nQuick actions and peek and pop interactions\n\nQuickActions - Swift wrapper for iOS Home Screen Quick Actions (App Icon Shortcuts).\nJustPeek - JustPeek is an iOS Library that adds support for Force Touch-like Peek and Pop interactions on devices that do not natively support this kind of interaction.\nPeekView - PeekView supports peek, pop and preview actions for iOS devices without 3D Touch capibility.\n\niBeacon\nDevice detect libraries and iBeacon helpers\n\nProxitee - Allows developers to create proximity aware applications utilizing iBeacons & geo fences.\nOWUProximityManager - iBeacons + CoreBluetooth.\nVicinity - Vicinity replicates iBeacons (by analyzing RSSI) and supports broadcasting and detecting low-energy Bluetooth devices in the background.\nBeaconEmitter - Turn your Mac as an iBeacon.\nMOCA Proximity - Paid proximity marketing platform that lets you add amazing proximity  experiences to your app.\nJMCBeaconManager - An iBeacon Manager class that is responsible for detecting beacons nearby.\n\nLocation\nLocation monitoring, detect motion and geofencing libraries\n\nIngeoSDK - Always-On Location monitoring framework for iOS.\nLocationManager - Provides a block-based asynchronous API to request the current location, either once or continuously.\nSwiftLocation - Location & Beacon Monitoring in Swift.\nSOMotionDetector - Simple library to detect motion. Based on location updates and acceleration.\nLocationPicker - A ready for use and fully customizable location picker for your app.\nBBLocationManager - A Location Manager for easily implementing location services & geofencing in iOS.\nset-simulator-location - CLI for setting location in the iOS simulator.\nNominatimKit - A Swift wrapper for (reverse) geocoding of OpenStreetMap data.\n\nOther Hardware\n\nMotionKit - Get the data from Accelerometer, Gyroscope and Magnetometer in only Two or a few lines of code. CoreMotion now made insanely simple.\nDarkLightning - Simply the fastest way to transmit data between iOS/tvOS and macOS.\nDeviice - Simply library to detect the device on which the app is running (and some properties).\nDeviceKit - DeviceKit is a value-type replacement of UIDevice.\nLuminous - Luminous is a big framework which can give you a lot of information (more than 50) about the current system.\nDevice - Light weight tool for detecting the current device and screen size written in swift.\nWatchShaker - WatchShaker is a watchOS helper to get your shake movement written in swift.\nWatchCon - WatchCon is a tool which enables creating easy connectivity between iOS and WatchOS.\nTapticEngine - TapticEngine generates iOS Device vibrations.\nUIDeviceComplete - UIDevice extensions that fill in the missing pieces.\nNFCNDEFParse - NFC Forum Well Known Type Data Parser for iOS11 and Core NFC.\nDevice.swift - Super-lightweight library to detect used device.\nSDVersion - Lightweight Cocoa library for detecting the running device's model and screen size.\nHaptico - Easy to use haptic feedback generator with pattern-play support.\n\nLayout\nAuto Layout, UI frameworks and a gorgeous list of tools to simplify layout constructions\n\nMasonry - Harness the power of AutoLayout NSLayoutConstraints with a simplified, chainable and expressive syntax.\nFLKAutoLayout - UIView category which makes it easy to create layout constraints in code.\nFa\u00e7ade - Programmatic view layout for the rest of us - an autolayout alternative.\nPureLayout - The ultimate API for iOS & macOS Auto Layout \u2014 impressively simple, immensely powerful. Objective-C and Swift compatible.\nSnapKit - A Swift Autolayout DSL for iOS & macOS.\nCartography - A declarative Auto Layout DSL for Swift.\nAutoLayoutPlus - A bit of steroids for AutoLayout.\nNeon - A powerful Swift programmatic UI layout framework.\nMisterFusion - A Swift DSL for AutoLayout. It is the extremely clear, but concise syntax, in addition, can be used in both Swift and Objective-C.\nSwiftBox - Flexbox in Swift, using Facebook's css-layout.\nManualLayout - Easy to use and flexible library for manually laying out views and layers for iOS and tvOS. Supports AsyncDisplayKit.\nStevia - Elegant view layout for iOS.\nManuscript - AutoLayoutKit in pure Swift.\nFDTemplateLayoutCell - Template auto layout cell for automatically UITableViewCell height calculating.\nSwiftAutoLayout - Tiny Swift DSL for Autolayout.\nFormationLayout - Work with auto layout and size classes easily.\nSwiftyLayout - Lightweight declarative auto-layout framework for Swift.\nSwiftstraints - Auto Layout In Swift Made Easy.\nSwiftBond - Bond is a Swift binding framework that takes binding concepts to a whole new level. It's simple, powerful, type-safe and multi-paradigm.\nRestraint - Minimal Auto Layout in Swift.\nEasyPeasy - Auto Layout made easy.\nAuto Layout Magic - Build 1 scene, let Auto Layout Magic generate the  constraints for you!  Scenes look great across all devices!\nAnchorman - An autolayout library for the damn fine citizens of San Diego.\nLayoutKit - LayoutKit is a fast view layout library for iOS.\nRelayout - Swift microframework for declaring Auto Layout constraints functionally.\nAnchorage - A collection of operators and utilities that simplify iOS layout code.\nCompose - Compose is a library that helps you compose complex and dynamic views.\nBrickKit - With BrickKit, you can create complex and responsive layouts in a simple way. It's easy to use and easy to extend. Create your own reusable bricks and behaviors.\nFramezilla - Elegant library which wraps working with frames with a nice chaining syntax.\nTinyConstraints -  The syntactic sugar that makes Auto Layout sweeter for human use.\nMyLinearLayout - MyLayout is a powerful iOS UI framework implemented by Objective-C. It integrates the functions with Android Layout,iOS AutoLayout,SizeClass, HTML CSS float and flexbox and bootstrap.\nSugarAnchor - Same native NSLayoutAnchor & NSLayoutConstraints; but with more natural and easy to read syntactic sugar. Typesafe, concise & readable.\nAnchors - Declarative, extensible, powerful Auto Layout.\nPinLayout - Fast Swift Views layouting without auto layout. No magic, pure code, full control and blazing fast. Concise syntax, intuitive, readable & chainable.\nSnapLayout - Concise Auto Layout API to chain programmatic constraints while easily updating existing constraints.\nCupcake - An easy way to create and layout UI components for iOS.\nMiniLayout - Minimal AutoLayout convenience layer. Program constraints succinctly.\nBamboo - Bamboo makes Auto Layout (and manual layout) elegant and concise.\nFlexLayout - FlexLayout gently wraps the highly optimized facebook/yoga flexbox implementation in a concise, intuitive & chainable syntax.\nLayout - A declarative UI framework for iOS.\nCGLayout - Powerful autolayout framework based on constraints, that can manage UIView(NSView), CALayer and not rendered views. Not Apple Autolayout wrapper.\nYogaKit - Powerful layout engine which implements Flexbox.\nFlightLayout -  Balanced medium between manual layout and auto-layout. Great for calculating frames for complex animations.\nQLayout - AutoLayout Utility for iOS.\nLayoutless - Minimalistic declarative layout and styling framework built on top of Auto Layout.\nYalta - An intuitive and powerful Auto Layout library.\nSuperLayout - Simplify Auto Layout with super syntactic sugar.\nQuickLayout - QuickLayout offers a simple way, to easily manage Auto Layout in code.\nEEStackLayout - A structured vertical stack layout.\nRKAutoLayout - Simple wrapper over AutoLayout.\n\nLocalization\nTools to manage strings files, translate and enable localization in your apps.\n\nHodor - Simple solution to localize your iOS App.\nSwifternalization - Localize iOS apps in a smarter way using JSON files. Swift framework.\nRubustrings - Check the format and consistency of Localizable.strings files.\nBartyCrouch - Incrementally update/translate your Strings files from Code and Storyboards/XIBs.\nLocalizationKit - Localization management in realtime from a web portal. Easily manage your texts and translations without redeploy and resubmission.\nLocalize-Swift - Swift 2.0 friendly localization and i18n with in-app language switching.\nLocalizedView - Setting up application specific localized string within Xib file.\ntransai - command line tool help you manage localization string files.\nStrsync - Automatically translate and synchronize .strings files from base language.\nIBLocalizable - Localize your views directly in Interface Builder with IBLocalizable.\nnslocalizer - A tool for finding missing and unused NSLocalizedStrings.\nL10n-swift - Localization of an application with ability to change language \"on the fly\" and support for plural forms in any language.\nLocalize - Easy tool to localize apps using JSON or Strings and of course IBDesignables with extensions for UI components.\n\nLogging\nDebugging lives here. Logging tools, frameworks, integrations and more.\n\nCleanroomLogger - A configurable and extensible Swift-based logging API that is simple, lightweight and performant.\nCocoaLumberjack - A fast & simple, yet powerful & flexible logging framework for Mac and iOS.\nNSLogger - a high performance logging utility which displays traces emitted by client applications running on macOS, iOS and Android.\nQorumLogs \u2014 Swift Logging Utility for Xcode & Google Docs.\nLog - A logging tool with built-in themes, formatters, and a nice API to define your owns.\nRainbow - Delightful console output for Swift developers.\nSwiftyBeaver - Convenient logging during development and release.\nSwiftyTextTable - A lightweight tool for generating text tables.\nWatchdog - Class for logging excessive blocking on the main thread.\nXCGLogger - A debug log framework for use in Swift projects. Allows you to log details to the console (and optionally a file), just like you would have with NSLog or println, but with additional information, such as the date, function name, filename and line number.\npuree - A log collector for iOS.\nColors - A pure Swift library for using ANSI codes. Basically makes command-line coloring and styling very easy!\nLoggerithm - A lightweight Swift logger, uses print in development and NSLog in production. Support colourful and formatted output.\nAELog - Simple, lightweight and flexible debug logging framework written in Swift.\nReflectedStringConvertible - A protocol that allows any class to be printed as if it were a struct.\nEvergreen - Most natural Swift logging.\nSwiftTrace - Trace Swift and Objective-C method invocations.\nWillow - Willow is a powerful, yet lightweight logging library written in Swift.\nBugfender - Cloud storage for your app logs. Track user behaviour to find problems in your mobile apps.\nLxDBAnything - Automate box any value! Print log without any format control symbol! Change debug habit thoroughly!\nXLTestLog - Styling and coloring your XCTest logs on Xcode Console.\nXLFacility - Elegant and extensive logging facility for macOS & iOS (includes database, Telnet and HTTP servers).\nAtlantis - A powerful input-agnostic swift logging framework made to speed up development with maximum readability.\nStoryTeller - Taking a completely different approach to logging, Story Teller replacing fixed logging levels in It then uses dynamic expressions to control the logging so you only see what is important.\nLumberMill - Stupidly simple logging.\nTinyConsole - A tiny log console to display information while using your iOS app.\nLighty - Easy to use and lightweight logger for iOS, macOS, tvOS, watchOS and Linux.\nJustLog - Console, file and remote Logstash logging via TCP socket.\nTwitter Logging Service - Twitter Logging Service is a robust and performant logging framework for iOS clients.\nReqres - Network request and response body logger with Alamofire support.\nTraceLog - Dead Simple: logging the way it's meant to be! Runs on ios, osx, and Linux.\nOkLog - A network logger for iOS and macOS projects.\n\nMachine Learning\nA collection of ML Models, deep learning and neural networking libraries\n\nSwift-Brain - Artificial Intelligence/Machine Learning data structures and Swift algorithms for future iOS development. Bayes theorem, Neural Networks, and more AI.\nAIToolbox - A toolbox of AI modules written in Swift: Graphs/Trees, Linear Regression, Support Vector Machines, Neural Networks, PCA, KMeans, Genetic Algorithms, MDP, Mixture of Gaussians.\nTensorflow-iOS - The official Google-built powerful neural network library port for iOS.\nBender - Easily craft fast Neural Networks. Use TensorFlow models. Metal under the hood.\nCoreML-samples - Sample code for Core ML using ResNet50 provided by Apple and a custom model generated by coremltools.\nRevolver - A framework for building fast genetic algorithms in Swift. Comes with modular architecture, pre-implemented operators and loads of examples.\nCoreML-Models - A collection of unique Core ML Models.\nSerrano - A deep learning library for iOS and macOS.\nSwift-AI - The Swift machine learning library.\nTensorSwift - A lightweight library to calculate tensors in Swift, which has similar APIs to TensorFlow's.\n\nMaps\n\nMapbox GL - An OpenGL renderer for Mapbox Vector Tiles with SDK bindings for iOS.\nGEOSwift - The Swift Geographic Engine.\nPXGoogleDirections - Google Directions API helper for iOS, written in Swift.\nCluster - Easy Map Annotation Clustering.\nJDSwiftHeatMap - JDSwiftMap is an IOS Native MapKit Library. You can easily make a highly customized HeatMap.\nClusterKit - An iOS map clustering framework targeting MapKit, Google Maps and Mapbox.\nFlyoverKit - FlyoverKit enables you to present stunning 360\u00b0 flyover views on your MKMapView with zero effort while maintaining full configuration possibilities.\nMapViewPlus - Use any custom view as custom callout view of your MKMapView with cool animations. Also, easily use any image as annotation view.\nMSFlightMapView - Add and animate geodesic flights on Google map.\n\nMath\nMath frameworks, functions and libraries to custom operations, statistical calculations and more.\n\nEuler - Swift Custom Operators for Mathematical Notation.\nSwiftMath - A math framework for Swift. Includes: vectors, matrices, complex numbers, quaternions and polynomials.\nArithmosophi - A set of protocols for Arithmetic and Logical operations.\nSurge - A Swift library that uses the Accelerate framework to provide high-performance functions for matrix math, digital signal processing, and image manipulation.\nUpsurge - Swift math.\nSwift-MathEagle - A general math framework to make using math easy. Currently supports function solving and optimisation, matrix and vector algebra, complex numbers, big int and big frac and general handy extensions and functions.\niosMath - A library for displaying beautifully rendered math equations. Enables typesetting LaTeX math formulae in iOS.\nBigInt - Arbitrary-precision arithmetic in pure Swift.\nSigmaSwiftStatistics - A collection of functions for statistical calculation.\nVectorMath - A Swift library for Mac and iOS that implements common 2D and 3D vector and matrix functions, useful for games or vector-based graphics.\nExpression - A Mac and iOS library for evaluating numeric expressions at runtime.\nMetron - Metron is a comprehensive collection of geometric functions and types that extend the 2D geometric primitives provided by CoreGraphics.\nNumericAnnex - NumericAnnex supplements the numeric facilities provided in the Swift standard library.\n\nMedia\nAudio\n\nAudioBus - Add Next Generation Live App-to-App Audio Routing.\nAudioKit - A powerful toolkit for synthesizing, processing, and analyzing sounds.\nEZAudio - An iOS/macOS audio visualization framework built upon Core Audio useful for anyone doing real-time, low-latency audio processing and visualizations.\nnovocaine - Painless high-performance audio on iOS and macOS.\nQHSpeechSynthesizerQueue - Queue management system for AVSpeechSynthesizer (iOS Text to Speech).\nCephalopod - A sound fader for AVAudioPlayer written in Swift.\nChirp - The easiest way to prepare, play, and remove sounds in your Swift app!\nBeethoven - An audio processing Swift library for pitch detection of musical signals.\nAudioPlayerSwift - AudioPlayer is a simple class for playing audio in iOS, macOS and tvOS apps.\nAudioPlayer - AudioPlayer is syntax and feature sugar over AVPlayer. It plays your audio files (local & remote).\nTuningFork - Simple Tuner for iOS.\nMusicKit - A framework for composing and transforming music in Swift.\nSubtleVolume - Replace the system volume popup with a more subtle indicator.\nNVDSP - iOS/macOS DSP for audio (with Novocaine).\nSRGMediaPlayer-iOS - The SRG Media Player library for iOS provides a simple way to add a universal audio / video player to any iOS application.\nIQAudioRecorderController - A drop-in universal library allows to record audio within the app with a nice User Interface.\nTheAmazingAudioEngine2 - The Amazing Audio Engine is a sophisticated framework for iOS audio applications, built so you don't have to.\nInteractivePlayerView - Custom iOS music player view.\nESTMusicIndicator - Cool Animated music indicator view written in Swift.\nQuietModemKit - iOS framework for the Quiet Modem (data over sound).\nSwiftySound - Super simple library that lets you play sounds with a single line of code (and much more). Written in Swift 3, supports iOS, macOS and tvOS. CocoaPods and Carthage compatible.\nBPMAnalyser - Fast and simple instrument to get the BPM rate from your audio-files.\nPandoraPlayer - A lightweight music player for iOS, based on AudioKit.\nSonogramView - Audio visualisation of song.\nAudioIndicatorBars - AIB indicates for your app users which audio is playing. Just like the Podcasts app.\nPorcupine - On-device wake word detection engine for macOS, iOS, and watchOS, powered by deep learning.\nVoice Overlay - An overlay that gets your user\u2019s voice permission and input as text in a customizable UI.\nModernAVPlayer - Persistence player to resume playback after bad network connection even in background mode, manage headphone interactions, system interruptions, now playing informations and remote commands.\n\nGIF\n\nYLGIFImage - Async GIF image decoder and Image viewer supporting play GIF images. It just use very less memory.\nFLAnimatedImage - Performant animated GIF engine for iOS.\ngifu - Highly performant animated GIF support for iOS in Swift.\nAnimatedGIFImageSerialization - Complete Animated GIF Support for iOS, with Functions, NSJSONSerialization-style Class, and (Optional) UIImage Swizzling\nXAnimatedImage - XAnimatedImage is a performant animated GIF engine for iOS written in Swift based on FLAnimatedImage\nSwiftGif - A small UIImage extension with gif support.\nAPNGKit - High performance and delightful way to play with APNG format in iOS.\nYYImage - Image framework for iOS to display/encode/decode animated WebP, APNG, GIF, and more.\nAImage - A animated GIF&APNG engine for iOS in Swift with low memory & cpu usage.Optimized for Multi-Image case.\nNSGIF2 - Simplify creation of a GIF from the provided video file url.\nSwiftyGif - High performance GIF engine.\n\nImage\n\nGPU Image - An open source iOS framework for GPU-based image and video processing.\nUIImage DSP - iOS UIImage processing functions using the vDSP/Accelerate framework for speed.\nAsyncImageView - Simple extension of UIImageView for loading and displaying images asynchronously without lock up the UI.\nSDWebImage - Asynchronous image downloader with cache support with an UIImageView category.\nDFImageManager - Modern framework for fetching images from various sources. Zero config yet immense customization and extensibility. Uses NSURLSession.\nMapleBacon - An image download and caching library for iOS written in Swift.\nNYTPhotoViewer - Slideshow and image viewer.\nIDMPhotoBrowser - Photo Browser / Viewer.\nConcorde - Download and decode progressive JPEGs.\nTOCropViewController - A view controller that allows users to crop UIImage objects.\nYXTMotionView - A custom image view that implements device motion scrolling.\nPINRemoteImage - A thread safe, performant, feature rich image fetcher.\nSABlurImageView - Easily Adding Animated Blur/Unblur Effects To An Image.\nFastImageCache - iOS library for quickly displaying images while scrolling.\nBKAsciiImage - Convert UIImage to ASCII art.\nAlamofireImage - An image component library for Alamofire.\nNuke - Image loading, processing, caching and preheating.\nFlagKit - Beautiful flag icons for usage in apps and on the web.\nYYWebImage - Asynchronous image loading framework (supports WebP, APNG, GIF).\nRSKImageCropper - An image cropper for iOS like in the Contacts app with support for landscape orientation.\nSilo - Image loading framework with loaders.\nOdy - Ody is an easy to use random image generator built with Swift, Perfect for placeholders.\nBanana - Image slider with very simple interface.\nJDSwiftAvatarProgress - Easy customizable avatar image asynchronously with progress bar animated.\nKingfisher - A lightweight and pure Swift implemented library for downloading and caching image from the web.\nEBPhotoPages - A photo gallery for iOS with a modern feature set. Similar features as the Facebook photo browser.\nUIImageView-BetterFace-Swift - The Swift version of https://github.com/croath/UIImageView-BetterFace\nKFSwiftImageLoader - An extremely high-performance, lightweight, and energy-efficient pure Swift async web image loader with memory and disk caching for iOS and Apple Watch.\nToucan - Fabulous Image Processing in Swift.\nImageLoaderSwift - A lightweight and fast image loader for iOS written in Swift.\nImageScout - A Swift implementation of fastimage. Supports PNG, GIF, and JPEG.\nJLStickerTextView - A UIImageView allow you to add multiple Label (multiple line text support) on it, you can edit, rotate, resize the Label as you want with one finger ,then render the text on Image.\nAgrume - A lemony fresh iOS image viewer written in Swift.\nPASImageView - Rounded async imageview downloader lightly cached and written in Swift.\nNavi - Focus on avatar caching.\nSwiftPhotoGallery - Simple, fullscreen image gallery with tap, swipe, and pinch gestures.\nMetalAcc - GPU-based Media processing library using Metal written in Swift.\nMWPhotoBrowser - A simple iOS photo and video browser with grid view, captions and selections.\nUIImageColors - iTunes style color fetcher for UIImage.\nCDFlipView - A view that takes a set of images, make transition from one to another by using flipping effects.\nGPUImage2 - GPUImage 2 is a BSD-licensed Swift framework for GPU-accelerated video and image processing.\nTGLParallaxCarousel - A lightweight 3D Linear Carousel with parallax effect.\nImageButter - Makes dealing with images buttery smooth.\nSKPhotoBrowser - Simple PhotoBrowser/Viewer inspired by Facebook, Twitter photo browsers written by swift.\nYUCIHighPassSkinSmoothing - An implementation of High Pass Skin Smoothing using Apple's Core Image Framework.\nCLImageViewPopup - A simple Image full screen pop up.\nAPKenBurnsView - Ken Burns effect with face recognition!\nMoa - An image download extension of the image view for iOS, tvOS and macOS.\nJMCMarchingAnts - Library that lets you add marching ants (animated) selection to the edges of the images.\nImageViewer - An image viewer \u00e0 la Twitter.\nFaceAware - An extension that gives UIImageView the ability to focus on faces within an image when using AspectFill.\nSwiftyAvatar - A UiimageView class for creating circular avatar images, IBDesignable to make all changes via storyboard.\nShinpuruImage - Syntactic Sugar for Accelerate/vImage and Core Image Filters.\nImagePickerSheetController - ImagePickerSheetController is like the custom photo action sheet in iMessage just without the glitches.\nComplimentaryGradientView - Create complementary gradients generated from dominant and prominent colors in supplied image. Inspired by Grade.js.\nImageSlideshow - Swift image slideshow with circular scrolling, timer and full screen viewer.\nImaginary - Remote images, as easy as one, two, three.\nPPAssetsActionController - Highly customizable Action Sheet Controller with Assets Preview.\nVulcan - Multi image downloader with priority in Swift.\nFacebookImagePicker - Facebook album photo picker written in Swift.\nLightbox - A convenient and easy to use image viewer for your iOS app.\nEbblink - An iOS SDK for sharing photos that automatically expire and can be deleted at any time.\nSharaku - Instagram-like image filter ViewController.\nCTPanoramaView - Displays spherical or cylindrical panoramas or 360-photos with touch or motion based control options.\nTwitter Image Pipline - streamlined framework for fetching and storing images in an application.\nTinyCrayon - A smart and easy-to-use image masking and cutout SDK for mobile apps.\nFlexibleImage - A simple way to play with image!\nTLPhotoPicker - Multiple phassets picker for iOS lib. like a facebook.\nYapImageManager - A high-performance image downloader written in Swift, powered by YapDatabase.\nPhotoEditorSDK - A fully customizable photo editor for your app.\nSimpleImageViewer - A snappy image viewer with zoom and interactive dismissal transition.\nAZImagePreview - A framework that makes image viewing easy.\nFaceCropper - Crop faces, inside of your image, with iOS 11 Vision api.\nPaparazzo - Custom iOS camera and photo picker with editing capabilities.\nZImageCropper - A Swift  project to crop image in any shape.\nInitialsImageView - An UIImageView extension that generates letter initials as a placeholder for user profile images, with a randomized background color.\nDTPhotoViewerController - A fully customizable photo viewer ViewController, inspired by Facebook photo viewer.\nLetterAvatarKit - A UIImage extension that generates letter-based avatars written in Swift.\nAXPhotoViewer - An iPhone/iPad photo gallery viewer, useful for viewing a large (or small!) number of photos\nTJProfileImage - Live rendering of componet\u2019s properties in Interface Builder.\nViewer - Image viewer (or Lightbox) with support for local and remote videos and images.\nOverlayComposite - An asynchronous, multithreaded, image compositing framework written in Swift.\nMCScratchImageView - A custom ImageView that is used to cover the surface of other view like a scratch card, user can swipe the mulch to see the view below.\nMetalPetal - A GPU-accelerated image/video processing framework based on Metal.\nShadowImageView - ShadowImageView is a iOS 10 Apple Music style image view, help you create elegent image with shadow.\nAvatar - Generate random user Avatar images using CoreGraphics and QuartzCore.\nSerrata - Slide image viewer library similar to Twitter and LINE.\nStyleArt - Style Art library process images using COREML with a set of pre trained machine learning models and convert them to Art style.\ngreedo-layout-for-ios - Full aspect ratio grid layout for iOS.\nImageDetect - Detect and crop faces, barcodes and texts inside of your image, with iOS 11 Vision api.\nTHTiledImageView - Provide ultra-high-quality images through tiling techniques.\nGPUImage3 - GPUImage 3 is a BSD-licensed Swift framework for GPU-accelerated video and image processing using Metal.\nGallery - Your next favorite image and video picker.\nATGMediaBrowser - Image slide-show viewer with multiple predefined transition styles, and ability to create new transitions with ease.\nPixel - An image editor and engine using CoreImage.\nOnlyPictures - A simple and flexible way to add source of overlapping circular pictures.\nSFSafeSymbols - Safely access Apple's SF Symbols using static typing.\n\nMedia Processing\n\nSwiftOCR - Fast and simple OCR library written in Swift.\nQR Code Scanner - QR Code implementation.\nQRCode - A QRCode generator written in Swift.\nEFQRCode - A better way to operate two-dimensional code in Swift.\nNSFWDetector - A NSFW (aka porn) detector with CoreML.\n\nPDF\n\nReader - PDF Reader Core for iOS.\nUIView 2 PDF - PDF generator using UIViews or UIViews with an associated XIB.\nFolioReaderKit - A Swift ePub reader and parser framework for iOS.\nPDFGenerator - A simple Generator of PDF in Swift. Generate PDF from view(s) or image(s).\nSimplePDF - Create a simple PDF effortlessly.\nSwiftPDFGenerator - PDF generator using UIViews; Swift Version of 'UIView 2 PDF'.\nPSPDFKit - Render PDF, add/edit annotations, fill forms, add/edit pages, view/create digital signatures.\nTPPDF - Generate PDF using commands and automatic layout.\nFastPdfKit - A Static Library to be embedded on iOS applications to display pdf documents derived from Fast PDF.\nUIImagePlusPDF - UIImage extensions to simply use PDF files.\n\nStreaming\n\nHaishinKit.swift - Camera and Microphone streaming library via RTMP, HLS for iOS, macOS.\nStreamingKit - A fast and extensible gapless AudioPlayer/AudioStreamer for macOS and iOS.\nJukebox - Player for streaming local and remote audio files. Written in Swift.\nLFLiveKit - H264 and AAC Hard coding\uff0csupport GPUImage Beauty\uff0c rtmp transmission\uff0cweak network lost frame\uff0cDynamic switching rate.\nAirstream - A framework for streaming audio between Apple devices using AirPlay.\nOTAcceleratorCore - A painless way to integrate audio/video(screen sharing) to any iOS applications via Tokbox.\nwebrtc - Provides browsers and mobile applications with Real-Time Communications (RTC) capabilities via simple APIs.\n\nVideo\n\nVIMVideoPlayer - A simple wrapper around the AVPlayer and AVPlayerLayer classes.\nMobilePlayer - A powerful and completely customizable media player for iOS.\nXCDYouTubeKit - YouTube video player for iOS, tvOS and macOS.\nAVAnimator - An open source iOS native library that makes it easy to implement non-trivial video/audio enabled apps.\nPeriscope VideoViewController - Video view controller with Periscope fast rewind control.\nMHVideoPhotoGallery - A Photo and Video Gallery.\nPlayerView - Player View is a delegated view using AVPlayer of Swift.\nSRGMediaPlayer-iOS - The SRG Media Player library for iOS provides a simple way to add a universal audio / video player to any iOS application.\nAVPlayerViewController-Subtitles - AVPlayerViewController-Subtitles is a library to display subtitles on iOS. It's built as a Swift extension and it's very easy to integrate.\nMPMoviePlayerController-Subtitles - MPMoviePlayerController-Subtitles is a library to display subtitles on iOS. It's built as a Swift extension and it's very easy to integrate.\nZFPlayer - Based on AVPlayer, support for the horizontal screen, vertical screen (full screen playback can also lock the screen direction), the upper and lower slide to adjust the volume, the screen brightness, or so slide to adjust the playback progress.\nPlayer - video player in Swift, simple way to play and stream media in your iOS or tvOS app.\nBMPlayer - Video player in swift3 and swift2 for iOS, based on AVPlayer, support the horizontal, vertical screen. support adjust volume, brigtness and seek by slide.\nVideoPager - Paging Video UI, and some control components is available.\nios-360-videos - NYT360Video plays 360-degree video streamed from an AVPlayer.\nswift-360-videos - Pure swift (no SceneKit) 3D library with focus on video and 360.\nABMediaView - UIImageView subclass for drop-in image, video, GIF, and audio display, with functionality for fullscreen and minimization to the bottom-right corner.\nPryntTrimmerView - A set of UI elements to trim, crop and select frames inside a video.\nVGPlayer - A simple iOS video player in Swift,Support play local and network,Background playback mode.\nYoutubeKit - A video player that fully supports Youtube IFrame API and YoutubeDataAPI for easily create a Youtube app.\nSwift-YouTube-Player - Swift library for embedding and controlling YouTube videos in your iOS applications!\nJDVideoKit - You can easily transfer your video into Three common video type via this framework.\nVersaPlayer - Versatile AVPlayer implementation for iOS, macOS, and tvOS.\n\nMessaging\nAlso see push notifications\n\nLayerKit - iOS SDK for Layer, the easiest way to add in-app messaging (text, photos, videos, data) to any mobile or web application.\nXMPPFramework - An XMPP Framework in Objective-C for Mac and iOS.\nChatto - A lightweight framework to build chat applications, made in Swift.\nMessageKit - Eventually, a Swift re-write of JSQMessagesViewController.\nMessenger - This is a native iOS Messenger app, making realtime chat conversations and audio calls with full offline support.\nOTTextChatAccelerator - OpenTok Text Chat Accelerator Pack enables text messages between mobile or browser-based devices.\nchat-sdk-ios - Chat SDK iOS - Open Source Mobile Messenger.\nAsyncMessagesViewController - A smooth, responsive and flexible messages UI library for iOS.\nMessageViewController - A SlackTextViewController replacement written in Swift for the iPhone X.\nSwiftyMessenger - Swift toolkit for passing messages between iOS apps and extensions.\nMessenger Chat with Firebase - Swift messaging chat app with Firebase Firestore integration.\nSwiftKafka - Swift SDK for Apache Kafka by IBM.\n\nNetworking\n\nAFNetworking - A delightful iOS and macOS networking framework.\nRestKit - RestKit is an Objective-C framework for iOS that aims to make interacting with RESTful web services simple, fast and fun.\nFSNetworking - Foursquare iOS networking library.\nASIHTTPRequest - Easy to use CFNetwork wrapper for HTTP requests, Objective-C, macOS and iPhone.\nOvercoat - Small but powerful library that makes creating REST clients simple and fun.\nROADFramework - Attributed-oriented approach for interacting with web services. The framework has built-in json and xml serialization for requests and responses and can be easily extensible.\nAlamofire - Alamofire is an HTTP networking library written in Swift, from the creator of AFNetworking.\nTransporter - A tiny library makes uploading and downloading easier.\nCDZPinger - Easy-to-use ICMP Ping.\nNSRails - iOS/Mac OS framework for Rails.\nNKMultipeer - A testable abstraction over multipeer connectivity.\nCocoaAsyncSocket - Asynchronous socket networking library for Mac and iOS.\nSiesta - Elegant abstraction for RESTful resources that untangles stateful messes. An alternative to callback- and delegate-based networking.\nReachability.swift - Replacement for Apple's Reachability re-written in Swift with closures.\nOctopusKit - A simplicity but graceful solution for invoke RESTful web service APIs.\nMoya - Network abstraction layer written in Swift.\nTWRDownloadManager - A modern download manager based on NSURLSession to deal with asynchronous downloading, management and persistence of multiple files.\nHappyDns - A Dns library, support custom dns server, dnspod httpdns. Only support A record.\nBridge - A simple extensible typed networking library. Intercept and process/alter requests and responses easily.\nTRON - Lightweight network abstraction layer, written on top of Alamofire.\nEVCloudKitDao - Simplified access to Apple's CloudKit.\nEVURLCache - a NSURLCache subclass for handling all web requests that use NSURLRequest.\nResponseDetective - Sherlock Holmes of the networking layer.\nPitaya - A Swift HTTP / HTTPS networking library just incidentally execute on machines.\nJust - Swift HTTP for Humans.\nagent - Minimalistic Swift HTTP request agent for iOS and macOS.\nReach - A simple class to check for internet connection availability in Swift.\nSwiftHTTP - Thin wrapper around NSURLSession in swift. Simplifies HTTP requests.\nNetdiag - A network diagnosis library. Support Ping/TcpPing/Rtmp/TraceRoute/DNS/external IP/external DNS.\nAFNetworkingHelper - A custom wrapper over AFNetworking library that we use inside RC extensively.\nNetKit - A Concise HTTP Framework in Swift.\nRealReachability - We need to observe the REAL reachability of network. That's what RealReachability do.\nMonkeyKing - MonkeyKing helps you post messages to Chinese Social Networks.\nNetworkKit - Lightweight Networking and Parsing framework made for iOS, Mac, WatchOS and tvOS.\nAPIKit - A networking library for building type safe web API client in Swift.\nws \u2601\ufe0f - Elegant JSON WebService in Swift.\nSPTDataLoader - The HTTP library used by the Spotify iOS client.\nSWNetworking - Powerful high-level iOS, macOS and tvOS networking library.\nNetworking - Simple HTTP Networking in Swift a NSURLSession wrapper with image caching support.\nSOAPEngine - This generic SOAP client allows you to access web services using a your iOS app, macOS app and AppleTV app.\nSwish - Nothing but Net(working).\nMalibu - Malibu is a networking library built on promises.\nYTKNetwork - YTKNetwork is a high level request util based on AFNetworking.\nUnboxedAlamofire - Alamofire + Unbox: the easiest way to download and decode JSON into swift objects.\nMMLanScan - An iOS LAN Network Scanner library.\nDomainer - Manage multi-domain url auto mapping ip address table.\nRestofire - Restofire is a protocol oriented network abstraction layer in swift that is built on top of Alamofire to use services in a declartive way.\nAFNetworking+RetryPolicy - An objective-c category that adds the ability to set the retry logic for requests made with AFNetworking.\nSwiftyZeroMQ - ZeroMQ Swift Bindings for iOS, macOS, tvOS and watchOS.\nNikka - A super simple Networking wrapper that supports many JSON libraries, Futures and Rx.\nXMNetworking - A lightweight but powerful network library with simplified and expressive syntax based on AFNetworking.\nMerhaba - Bonjour networking for discovery and connection between iOS, macOS and tvOS devices.\nDBNetworkStack - Resource-oritented networking which is typesafe, extendable, composeable and makes testing a lot easier.\nEFInternetIndicator - A little swift Internet error status indicator using ReachabilitySwift.\nAFNetworking-Synchronous - Synchronous requests for AFNetworking 1.x, 2.x, and 3.x.\nQwikHttp - a robust, yet lightweight and simple to use HTTP networking library designed for RESTful APIs.\nNetClient - Versatile HTTP networking library written in Swift 3.\nWANetworkRouting - An iOS library to route API paths to objects on client side with request, mapping, routing and auth layers.\nReactor - Powering your RAC architecture.\nSWNetworking - Powerful high-level iOS, macOS and tvOS networking library. from the creator of SWNetworking.\nDigger - Digger is a lightweight download framework that requires only one line of code to complete the file download task.\nCiao - Publish and discover services using mDNS(Bonjour, Zeroconf).\nPerfectAPIClient - An API Client based on a network abstraction layer for the Perfect Server-Side Swift Framework.\nBamboots - Bamboots is a network request framework based on Alamofire, aiming at making network request easier for business development.\nSolarNetwork - Elegant network abstraction layer in Swift.\nFGRoute - An easy-to-use library that helps developers to get wifi ssid, router and device ip addresses.\nRxRestClient - Simple REST Client based on RxSwift and Alamofire.\nTermiNetwork - A networking library written with Swift 4.0 that supports multi-environment configuration, routing and automatic deserialization.\nDots - Lightweight Concurrent Networking Framework.\nGem - An extreme light weight system with high performance for managing all http request with automated parser with modal.\nRMHttp - Lightweight REST library for iOS and watchOS.\nAlamoRecord - An elegant yet powerful iOS networking layer inspired by ActiveRecord.\nMHNetwork - Protocol Oriented Network Layer Aim to avoid having bloated singleton NetworkManager.\nThunderRequest - A simple URLSession wrapper with a generic protocol based request body approach and easy deserialisation of responses.\nReactiveAPI - Write clean, concise and declarative network code relying on URLSession, with the power of RxSwift. Inspired by Retrofit.\nSquid - Declarative and reactive networking framework based on Combine and providing means for HTTP requests, transparent pagination, and WebSocket communication.\n\nEmail\n\nMail Core 2 - MailCore 2 provide a simple and asynchronous API to work with e-mail protocols IMAP, POP and SMTP.\nPostal - A swift framework providing simple access to common email providers.\n\nRepresentations\n\napollo-ios - A GraphQL client for iOS.\nJSONRPCKit - A JSON-RPC 2.0 library.\nprotobuf-swift - Google ProtocolBuffers for Apple Swift\nswift-protobuf - Plugin and runtime library for using protobuf with Swift.\n\nNotifications\nPush Notifications\n\nOrbiter - Push Notification Registration for iOS.\nPEM - Automatically generate and renew your push notification profiles.\nKnuff - The debug application for Apple Push Notification Service (APNS).\nFBNotifications - Facebook Analytics In-App Notifications Framework.\nNWPusher - macOS and iOS application and framework to play with the Apple Push Notification service (APNs).\nSimulatorRemoteNotifications - Library to send mock remote notifications to the iOS simulator.\nAPNSUtil - Library makes code simple settings and landing for apple push notification service.\n\nPush Notification Providers\nMost of these are paid services, some have free tiers.\n\nUrban Airship\nGrowth Push - Popular in Japan.\nBraze\nBatch\nBoxcar\nCarnival\nCatapush\nNetmera\nOneSignal - Free.\nPushBots\nPushwoosh\nPushkin - Free and open-source.\nPusher - Free and unlimited.\nSwrve\n\nLocal Notifications\n\nDLLocalNotifications -  Easily create Local Notifications in swift - Wrapper of UserNotifications Framework.\n\nObjective-C Runtime\nObjective-C Runtime wrappers, libraries and tools.\n\nLumos - A light Swift wrapper around Objective-C Runtime.\nSwizzlean - An Objective-C Swizzle Helper Class.\n\nOptimization\n\nUnreachable - Unreachable code path optimization hint for Swift.\n\nParsing\nCSV\n\nCSwiftV - A csv parser written in swift conforming to rfc4180.\nCSV.swift - CSV reading and writing library written in Swift.\n\nJSON\n\nJSON-Framework - This framework implements a strict JSON parser and generator in Objective-C.\nMantle - Model framework for Cocoa and Cocoa Touch.\nGroot - Convert JSON dictionaries and arrays to and from Core Data managed objects.\nPropertyMapper - Data mapping and validation with minimal amount of code.\nJSONModel - Magical Data Modeling Framework for JSON. Create rapidly powerful, atomic and smart data model classes.\nSwiftyJSON - The better way to deal with JSON data in Swift.\nFastEasyMapping - Serialize & deserialize JSON fast.\nObjectMapper - A framework written in Swift that makes it easy for you to convert your Model objects (Classes and Structs) to and from JSON.\nJASON - JSON parsing with outstanding performances and convenient operators.\nGloss - A shiny JSON parsing library in Swift.\nCereal - Swift object serialization.\nSwiftyJSONAccelerator - Generate Swift 5 model files from JSON with Codeable support.\nJSONCodable - Hassle-free JSON encoding and decoding in Swift.\nTailor - A super fast & convenient object mapper tailored for your needs.\nalexander - An extremely simple JSON helper written in Swift.\nFreddy - A reusable framework for parsing JSON in Swift.\nmapper - A JSON deserialization library for Swift.\nAlamofireJsonToObjects - An Alamofire extension which converts JSON response data into swift objects using EVReflection.\nJay - Pure-Swift JSON parser & formatter. Linux & macOS ready.\nYYModel - High performance model framework for iOS/macOS.\nAlembic - Functional JSON parsing, mapping to objects, and serialize to JSON.\nWrap - The easy to use Swift JSON encoder.\nArrow \ud83c\udff9 - Elegant JSON Parsing in Swift.\nDecodable - Swift 2/3 JSON parsing done (more) right.\nGenome - A simple, type safe, failure driven mapping library for serializing JSON to models in Swift 3.0 (Supports Linux).\nUnbox - The easy to use Swift JSON decoder.\nJSONJoy-Swift - Convert JSON to Swift objects.\nLazyObject - Lazily deserialize JSON into strongly typed Swift objects.\nJSONExport - JSONExport is a desktop application for macOS which enables you to export JSON objects as model classes with their associated constructors, utility methods, setters and getters in your favorite language.\nElevate - Elevate is a JSON parsing framework that leverages Swift to make parsing simple, reliable and composable.\nMJExtension - A fast, convenient and nonintrusive conversion between JSON and model. Your model class don't need to extend another base class. You don't need to modify any model file.\nAlamofireObjectMapper - An Alamofire extension which converts JSON response data into swift objects using ObjectMapper.\nGuardedSwiftyJSON - An add-on to SwiftyJSON to make it easier to create failable initializers for data models.\nJAYSON - Strict and Scalable JSON library.\nHandyJSON - A handy swift JSON-object serialization/deserialization library for Swift.\nMarshal - Marshaling the typeless wild west of [String: Any] (Protocol based).\nMotis - Easy JSON to NSObject mapping using Cocoa's key value coding (KVC).\nNSTEasyJSON - The easiest way to deal with JSON data in Objective-C (similar to SwiftyJSON).\nSerpent - A protocol to serialize Swift structs and classes for encoding and decoding.\nMagicMapper - \ud83c\udf1f Super light and easy automatic JSON to model mapper.\nFlatBuffersSwift - This project brings FlatBuffers (an efficient cross platform serialization library) to Swift.\nCodableAlamofire - An extension for Alamofire that converts JSON data into Decodable objects (Swift 4).\nWAMapping - A library to turn dictionary into object and vice versa for iOS. Designed for speed!\njson-swift - A basic library for working with JSON in Swift.\nHimotoki - A type-safe JSON decoding library purely written in Swift.\nPMHTTP - Swift/Obj-C HTTP framework with a focus on REST and JSON.\nNativeJSONMapper - Simple Swift 4 encoding & decoding.\nPMJSON - Pure Swift JSON encoding/decoding library.\njsoncafe.com - Online Template driven Model Class Generator from JSON.\nMappable - lightweight and powerful JSON object mapping library, specially optimized for immutable properties.\n\nXML & HTML\n\nAEXML - Simple and lightweight XML parser written in Swift.\nJi - XML/HTML parser for Swift.\nOno - A sensible way to deal with XML & HTML for iOS & macOS.\nAlamofireXmlToObjects - Fetch a XML feed and parse it into objects.\nFuzi - A fast & lightweight XML & HTML parser in Swift with XPath & CSS support.\nKanna  - Kanna(\u924b) is an XML/HTML parser for macOS/iOS.\nSwiftyXMLParser - Simple XML Parser implemented in Swift.\nHTMLKit - An Objective-C framework for your everyday HTML needs.\nSWXMLHash - Simple XML parsing in Swift.\nSwiftyXML - The most swifty way to deal with XML data in swift 4.\nXMLCoder - Encoder & Decoder for XML using Swift's Codable protocols.\n\nOther Parsing\n\nWKZombie - WKZombie is a Swift framework for iOS/macOS to navigate within websites and collect data without the need of User Interface or API, also known as Headless browser. It can be used to run automated tests or manipulate websites using Javascript.\nURLPreview - An NSURL extension for showing preview info of webpages.\nFeedKit - An RSS and Atom feed parser written in Swift.\nErik - Erik is an headless browser based on WebKit. An headless browser allow to run functional tests, to access and manipulate webpages using javascript.\nURLEmbeddedView - Automatically caches the object that is confirmed the Open Graph Protocol, and displays it as URL embedded card.\nSwiftyConfiguration - Modern Swift API for Plist.\nJSONFeed - Swift parser for JSON Feed, a format similar to RSS and Atom but in JSON.\nSwiftCssParser - A Powerful , Extensible CSS Parser written in pure Swift.\nRLPSwift - Recursive Length Prefix encoding written in Swift.\nAcknowledgementsPlist - AcknowledgementsPlist manages the licenses of libraries that depend on your iOS app.\nCoreXLSX - Excel spreadsheet (XLSX) format support in pure Swift.\n\nPassbook\n\npassbook - Passbook gem let's you create pkpass for passbook iOS 6+.\nDubai - Generate and Preview Passbook Passes.\nPasskit - Design, Create and validate Passbook Passes.\n\nPayments\n\nCaishen - A Payment Card UI & Validator for iOS.\nStripe - Payment integration on your app with \uf8ffPAY. Suitable for people with low knowledge on Backend.\nBraintree - Free payment processing on your first $50k. Requires Backend.\nVenmo Make and accept payments in your iOS app via Venmo.\nMoltin - Add eCommerce to your app with a simple SDK, so you can create a store and sell physical products, no backend required.\nPatronKit - A framework to add patronage to your apps.\nSwiftyStoreKit - Lightweight In App Purchases Swift framework for iOS 8.0+ and macOS 9.0+\nInAppFramework - In App Purchase Manager framework for iOS.\nSwiftInAppPurchase - Simply code In App Purchases with this Swift Framework.\nmonza - Ruby Gem for Rails - Easy iTunes In-App Purchase Receipt validation, including auto-renewable subscriptions.\nPayPal - Accept payments in your iOS app via PayPal.\ncard.io-iOS-SDK - card.io provides fast, easy credit card scanning in mobile apps.\nSwiftLuhn - Debit/Credit card validation port of the Luhn Algorithm in Swift.\nObjectiveLuhn - Luhn Credit Card Validation Algorithm.\nRMStore - A lightweight iOS library for In-App Purchases.\nMFCard - Easily integrate Credit Card payments in iOS App / Customisable Card UI.\nTPInAppReceipt - Reading and Validating In App Store Receipt.\niCard - Bank Card Generator with Swift using SnapKit DSL.\nCreditCardForm-iOS - CreditCardForm is iOS framework that allows developers to create the UI which replicates an actual Credit Card.\nmerchantkit - A modern In-App Purchases management framework for iOS.\nTipJarViewController - Easy, drop-in tip jar for iOS apps.\nFramesIos - Payment Form UI and Utilities in Swift.\nYRPayment - Better payment user experience library with cool animation in Swift.\n\nPermissions\n\nProposer - Make permission request easier (Supports Camera, Photos, Microphone, Contacts, Location).\nICanHas - Simplifies iOS user permission requests (Supports location, push notifications, camera, contacts, calendar, photos).\nVWWPermissionKit - A visual permission manager for iOS.\nISHPermissionKit - A unified way for iOS apps to request user permissions.\nJLPermissions - An iOS pre-permissions utility that lets developers ask users on their own dialog for calendar, contacts, location, photos, reminders, twitter, push notifications and more, before making the system-based permission request.\nClusterPrePermissions - Reusable pre-permissions utility that lets developers ask users for access in their own dialog, before making the system-based request.\nPermission - A unified API to ask for permissions on iOS.\nSTLocationRequest - A simple and elegant 3D-Flyover location request screen written Swift.\nPAPermissions - A unified API to ask for permissions on iOS.\nAREK - AREK is a clean and easy to use wrapper over any kind of iOS permission.\nSPPermission - Request permissions with dialog. Check state any permissions.\n\nProducts\n\nImport.io - Instantly Turn Web Pages into Data.\nTapglue - Build social products and a activity feed with a few lines of code.\nOpenShop.io - mobile e-commerce solution connected to Facebook Ads and Google.\n\nReactive Programming\n\nRxSwift - Reactive Programming in Swift.\nRxOptional - RxSwift extensions for Swift optionals and \"Occupiable\" types.\nReactiveTask - Flexible, stream-based abstraction for launching processes.\nReactiveCocoa - Streams of values over time.\nRxMediaPicker - A reactive wrapper built around UIImagePickerController.\nReactiveCoreData - ReactiveCoreData (RCD) is an attempt to bring Core Data into the ReactiveCocoa (RAC) world.\nReSwift - Unidirectional Data Flow in Swift - Inspired by Redux.\nReactiveKit - ReactiveKit is a collection of Swift frameworks for reactive and functional reactive programming.\nRxPermission - RxSwift bindings for Permissions API in iOS.\nRxAlamofire - RxSwift wrapper around the elegant HTTP networking in Swift Alamofire.\nRxRealm - Rx wrapper for Realm's collection types.\nRxMultipeer - A testable RxSwift wrapper around MultipeerConnectivity.\nRxBluetoothKit - iOS & macOS Bluetooth library for RxSwift.\nRxGesture - RxSwift reactive wrapper for view gestures.\nNSObject-Rx - Handy RxSwift extensions on NSObject, including rx_disposeBag.\nRxCoreData - RxSwift extensions for Core Data.\nRxAutomaton - RxSwift + State Machine, inspired by Redux and Elm.\nReactiveArray - An array class implemented in Swift that can be observed using ReactiveCocoa's Signals.\nInterstellar - Simple and lightweight Functional Reactive Coding in Swift for the rest of us.\nReduxSwift - Predictable state container for Swift apps too.\nAftermath - Stateless message-driven micro-framework in Swift.\nRxKeyboard - Reactive Keyboard in iOS.\nJASONETTE-iOS - Native App over HTTP. Create your own native iOS app with nothing but JSON.\nReactiveSwift - Streams of values over time by ReactiveCocoa group.\nListenable - Swift object that provides an observable platform.\nReactor - Unidirectional Data Flow using idiomatic Swift\u2014inspired by Elm and Redux.\nSnail - An observables framework for Swift.\nRxWebSocket - Reactive extension over Starscream for websockets.\nACKReactiveExtensions - Useful extensions for ReactiveCocoa\nReactiveLocation - CoreLocation made reactive\nHanson - Lightweight observations and bindings in Swift, with support for KVO and NotificationCenter.\nObservable - The easiest way to observe values in Swift.\nSimpleApiClient - A configurable api client based on Alamofire4 and RxSwift4 for iOS.\nVueFlux - Unidirectional Data Flow State Management Architecture for Swift - Inspired by Vuex and Flux.\nRxAnimated - Animated RxCocoa bindings.\nBindKit - Two-way data binding framework for iOS. Only one API to learn.\nSTDevRxExt - STDevRxExt contains some extension functions for RxSwift and RxCocoa which makes our live easy.\nRxReduce - Lightweight framework that ease the implementation of a state container pattern in a Reactive Programming compliant way.\nRxCoordinator -  Powerful navigation library for iOS based on the coordinator pattern.\nRxAlamoRecord Combines the power of the AlamoRecord and RxSwift libraries to create a networking layer that makes interacting with API's easier than ever reactively.\nCwlSignal A Swift framework for reactive programming.\nLightweightObservable - A lightweight implementation of an observable sequence that you can subscribe to.\nBindy - Simple, lightweight swift bindings with KVO support and easy to read syntax.\nOpenCombine \u2014 Open source implementation of Apple's Combine framework for processing values over time.\n\nReact-Like\n\nRender - Swift and UIKit a la React.\nKatana - Swift apps a la React and Redux.\nTemplateKit - React-inspired framework for building component-based user interfaces in Swift.\nKomponents \ud83d\udce6 - React-inspired UIKit Components.\nCoreEvents - Simple library with C#-like events.\nTokamak - React-like framework providing a declarative API for building native UI components with easy to use one-way data binding.\n\nReflection\n\nReflection - Reflection provides an API for advanced reflection at runtime including dynamic construction of types.\nReflect - Reflection, Dict2Model, Model2Dict, Archive.\nEVReflection - Reflection based JSON encoding and decoding. Including support for NSDictionary, NSCoding, Printable, Hashable and Equatable.\nJSONNeverDie - Auto reflection tool from JSON to Model, user friendly JSON encoder / decoder, aims to never die.\nSwiftKVC - Key-Value Coding (KVC) for native Swift classes and structs.\nRuntime - A Swift Runtime library for viewing type info, and the dynamic getting and setting of properties.\n\nRegex\n\nRegex - A Swift \u00b5framework providing an NSRegularExpression-backed Regex type.\nSwiftRegex - Perl-like Regex =~ operator for Swift.\nPySwiftyRegex - Easily deal with Regex in Swift in a Pythonic way.\nRegex - Regular expressions for swift.\nRegex - Regex class for Swift. Wraps NSRegularExpression.\n\nSDK\nOfficial\n\nSpotify Spotify iOS SDK.\nSpotifyLogin Spotify SDK Login in Swift.\nFacebook Facebook iOS SDK.\nFacebook Swift Integrate your iOS apps in Swift with Facebook Platform.\nGoogle Analytics Google Analytics SDK for iOS.\nPaypal iOS SDK The PayPal Mobile SDKs enable native apps to easily accept PayPal and credit card payments.\nPocket SDK for saving stuff to Pocket.\nTumblr Library for easily integrating Tumblr data into your iOS or macOS application.\nEvernote Evernote SDK for iOS.\nBox iOS + macOS SDK for the Box API.\nOneDrive Live SDK for iOS.\nStripe Stripe bindings for iOS and macOS.\nVenmo\nAWS Amazon Web Services Mobile SDK for iOS.\nZendesk Zendesk Mobile SDK for iOS.\nDropbox SDKs for Drop-ins and Dropbox Core API.\nFabric by Twitter Fabric Twitter Kit for iOS.\nResearchKit ResearchKit is an open source software framework that makes it easy to create apps for medical research or for other research projects.\nPrimer - Easy SDK for creating personalized landing screens, signup, and login flows on a visual editor with built in a/b/n testing and analytics.\nAzure - Client library for accessing Azure Storage on an iOS device.\n1Password - 1Password Extension for iOS Apps.\nCareKit - CareKit is an open source software framework for creating apps that help people better understand and manage their health. By Apple.\nShopify - Shopify\u2019s Mobile Buy SDK makes it simple to sell physical products inside your mobile app.\nPinterest - Pinterest iOS SDK.\nplaykit-ios - PlayKit: Kaltura Player SDK for iOS.\nalgoliasearch-client-swift - Algolia Search API Client for Swift.\ntwitter-kit-ios - Twitter Kit is a native SDK to include Twitter content inside mobile apps.\nrides-ios-sdk - Uber Rides iOS SDK (beta).\n\nUnofficial\n\nSTTwitter A stable, mature and comprehensive Objective-C library for Twitter REST API 1.1.\nFHSTwitterEngine Twitter API for Cocoa developers.\nGiphy Giphy API client for iOS in Objective-C.\nUberKit - A simple, easy-to-use Objective-C wrapper for the Uber API.\nInstagramKit - Instagram iOS SDK.\nDribbbleSDK - Dribbble iOS SDK.\nobjectiveflickr - ObjectiveFlickr, a Flickr API framework for Objective-C.\nEasy Social - Twitter & Facebook Integration.\ndas-quadrat - A Swift wrapper for Foursquare API. iOS and macOS.\nSocialLib - SocialLib handles sharing message to multiple social media.\nPokemonKit - Pokeapi wrapper, written in Swift.\nTJDropbox - A Dropbox v2 client library written in Objective-C\nGitHub.swift -  Unofficial GitHub API client in Swift\nCloudRail SI - Abstraction layer / unified API for multiple API providers. Interfaces eg for Cloud Storage (Dropbox, Google, ...), Social Networks (Facebook, Twitter, ...) and more.\nMedium SDK - Swift - Unofficial Medium API SDK in Swift with sample project.\nSwifter - \ud83d\udc26 A Twitter framework for iOS & macOS written in Swift.\nSlackKit - a Slack client library for iOS and macOS written in Swift.\nRandomUserSwift - Swift Framework to Generate Random Users - An Unofficial SDK for randomuser.me.\nPPEventRegistryAPI - Swift 3 Framework for Event Registry API (eventregistry.org).\nUnsplashKit - Swift client for Unsplash.\nSwiftly Salesforce - An easy-to-use framework for building iOS apps that integrate with Salesforce, using Swift and promises.\nSpartan - An Elegant Spotify Web API Library Written in Swift for iOS and macOS.\nBigBoard - An Elegant Financial Markets Library Written in Swift that makes requests to Yahoo Finance API's under the hood.\nBittrexApiKit - Simple and complete Swift wrapper for Bittrex Exchange API.\nSwiftyVK Library for easy interact with VK social network API written in Swift.\nARKKit - ARK Ecosystem Cryptocurrency API Framework for iOS & macOS, written purely in Swift 4.0.\nSwiftInstagram - Swift Client for Instagram API.\nSwiftyArk - A simple, lightweight, fully-asynchronous cryptocurrency framework for the ARK Ecosystem.\nPerfectSlackAPIClient - A Slack API Client for the Perfect Server-Side Swift Framework.\nMothership - Tunes Connect Library inspired by FastLane.\nSwiftFlyer - An API wrapper for bitFlyer that supports all providing API.\nwaterwheel.swift - The Waterwheel Swift SDK provides classes to natively connect iOS, macOS, tvOS, and watchOS applications to Drupal 7 and 8.\nForecastIO - A Swift library for the Forecast.io Dark Sky API.\nJamfKit - A JSS communication framework written in Swift.\n\nSecurity\n\ncocoapods-keys - A key value store for storing environment and application keys.\nsimple-touch - Very simple swift wrapper for Biometric Authentication Services (Touch ID) on iOS.\nSwiftPasscodeLock - An iOS passcode lock with TouchID authentication written in Swift.\nSmile-Lock - A library for make a beautiful Passcode Lock View.\nzxcvbn-ios - A realistic password strength estimator.\nTPObfuscatedString - Simple String obfuscation using core Swift.\nLTHPasscodeViewController - An iOS passcode lockscreen replica (from Settings), with TouchID and simple (variable length) / complex support.\niOS-App-Security-Class - Simple class to check if iOS app has been cracked, being debugged or enriched with custom dylib and as well detect jailbroken environment.\nBiometricAuth - Simple framework for biometric authentication (via TouchID) in your application.\nSAPinViewController - Simple and easy to use default iOS PIN screen. This simple library allows you to draw a fully customisable PIN screen same as the iOS default PIN view. My inspiration to create this library was form THPinViewController, however SAPinViewController is completely implemented in Swift. Also the main purpose of creating this library was to have simple, easy to use and fully customisable PIN screen.\nTOPasscodeViewController - A modal passcode input and validation view controller for iOS.\nBiometricAuthentication - Use Apple FaceID or TouchID authentication in your app using BiometricAuthentication.\nKKPinCodeTextField - A customizable verification code textField for phone verification codes, passwords etc.\n\ud83d\uddc4 Vault - Simple and Secure container for passwords and other sensitive data.\nVirgil SWIFT PFS SDK - An SDK that allows developers to add the Perfect Forward Secrecy (PFS) technologies to their digital solutions to protect previously intercepted traffic from being decrypted even if the main Private Key is compromised.\nVirgil Security Objective-C/Swift SDK - An SDK which allows developers to add full end-to-end security to their existing digital solutions to become HIPAA and GDPR compliant and more using Virgil API.\n\nEncryption\n\nAESCrypt-ObjC - A simple and opinionated AES encrypt / decrypt Objective-C class that just works.\nIDZSwiftCommonCrypto - A wrapper for Apple's Common Crypto library written in Swift.\nArcane - Lightweight wrapper around CommonCrypto in Swift.\nSwiftMD5 - A pure Swift implementation of MD5.\nSwiftHash - Hash in Swift.\nSweetHMAC - A tiny and easy to use Swift class to encrypt strings using HMAC algorithms.\nSwCrypt - RSA public/private key generation, RSA, AES encryption/decryption, RSA sign/verify in Swift with CommonCrypto in iOS and macOS.\nSwiftSSL - An Elegant crypto toolkit in Swift.\nSwiftyRSA - RSA public/private key encryption in Swift.\nEnigmaKit - Enigma encryption in Swift.\nThemis - High-level crypto library, providing basic asymmetric encryption, secure messaging with forward secrecy and secure data storage, supports iOS/macOS, Android and different server side platforms.\nObfuscator-iOS - Secure your app by obfuscating all the hard-coded security-sensitive strings.\nswift-sodium - Safe and easy to use crypto for iOS.\nCryptoSwift - Crypto related functions and helpers for Swift implemented in Swift programming language.\nSCrypto - Elegant Swift interface to access the CommonCrypto routines.\nSipHash - Simple and secure hashing in Swift with the SipHash algorithm.\nRNCryptor - CCCryptor (AES encryption) wrappers for iOS and Mac in Swift. -- For ObjC, see RNCryptor/RNCryptor-objc.\nCatCrypto - An easy way for hashing and encryption.\nSecureEnclaveCrypto - Demonstration library for using the Secure Enclave on iOS.\nRSASwiftGenerator - Util for generation RSA keys on your client and save to keychain or cover into Data.\nVirgil Security Objective-C/Swift Crypto Library - A high-level cryptographic library that allows to perform all necessary operations for securely storing and transferring data.\nJOSESwift - A framework for the JOSE standards JWS, JWE, and JWK written in Swift.\n\nKeychain\n\nUICKeyChainStore - UICKeyChainStore is a simple wrapper for Keychain on iOS.\nValet - Securely store data in the iOS or macOS Keychain without knowing a thing about how the Keychain works.\nLocksmith - A powerful, protocol-oriented library for working with the keychain in Swift.\nKeychainAccess - Simple Swift wrapper for Keychain that works on iOS and macOS.\nKeychains - Because you should care... about the security... of your shit.\nLockbox - Objective-C utility class for storing data securely in the key chain.\nSAMKeychain - Simple Objective-C wrapper for the keychain that works on Mac and iOS.\nSwiftKeychainWrapper - A simple wrapper for the iOS Keychain to allow you to use it in a similar fashion to User Defaults.\nSwiftyKeychainKit - Keychain wrapper with the benefits of static typing and convenient syntax, support for primitive types, Codable, NSCoding.\n\nServer\nServer side projects supporting coroutines, Linux, MacOS, iOS, Apache Modules, Async calls, libuv and more.\n\nPerfect - Server-side Swift. The Perfect library, application server, connectors and example apps.\nSwifter - Tiny http server engine written in Swift programming language.\nCocoaHTTPServer - A small, lightweight, embeddable HTTP server for macOS or iOS applications.\nCurassow - Swift HTTP server using the pre-fork worker model.\nZewo - Lightweight library for web server applications in Swift on macOS and Linux powered by coroutines.\nVapor - Elegant web framework for Swift that works on iOS, macOS, and Ubuntu.\nswiftra - Sinatra-like DSL for developing web apps in Swift.\nblackfire - A fast HTTP web server based on Node.js and Express written in Swift.\nswift-http - HTTP Implementation for Swift on Linux and macOS.\nTrevi - libuv base Swift web HTTP server framework.\nExpress - Swift Express is a simple, yet unopinionated web application server written in Swift.\nTaylor - A lightweight library for writing HTTP web servers with Swift.\nFrank - Frank is a DSL for quickly writing web applications in Swift.\nKitura - A Swift Web Framework and HTTP Server.\nSwifton - A Ruby on Rails inspired Web Framework for Swift that runs on Linux and macOS.\nDynamo - High Performance (nearly)100% Swift Web server supporting dynamic content.\nRedis - Pure-Swift Redis client implemented from the original protocol spec. macOS + Linux compatible.\nNetworkObjects - Swift backend / server framework (Pure Swift, Supports Linux).\nNoze.io - Evented I/O streams a.k.a. Node.js for Swift.\nLightning - A Swift Multiplatform Web and Networking Framework.\nSwiftGD - A simple Swift wrapper for libgd.\nJobs - A job system for Swift backends.\nApacheExpress - Write Apache Modules in Swift!\nGCDWebServer - Lightweight GCD based HTTP server for macOS & iOS (includes web based uploader & WebDAV server).\nEmbassy - Super lightweight async HTTP server library in pure Swift runs in iOS / MacOS / Linux.\nsmoke-framework - A light-weight server-side service framework written in the Swift programming language.\n\nText\n\nTwitter Text Obj - An Objective-C implementation of Twitter's text processing library.\nNimbus - Nimbus is a toolkit for experienced iOS software designers.\nNSStringEmojize - A category on NSString to convert Emoji Cheat Sheet codes to their equivalent Unicode characters.\nMMMarkdown - An Objective-C static library for converting Markdown to HTML.\nDTCoreText - Methods to allow using HTML code with CoreText.\nDTRichTextEditor - A rich-text editor for iOS.\nNBEmojiSearchView - A searchable emoji dropdown view.\nPluralize.swift - Great Swift String Pluralize Extension.\nRichEditorView - RichEditorView is a simple, modular, drop-in UIView subclass for Rich Text Editing.\nMoney - Swift value types for working with money & currency.\nPhoneNumberKit - A Swift framework for parsing, formatting and validating international phone numbers. Inspired by Google's libphonenumber.\nYYText - Powerful text framework for iOS to display and edit rich text.\nFormat - A Swift Formatter Kit.\nTribute - Programmatic creation of NSAttributedString doesn't have to be a pain.\nEmojiKit - Effortless emoji-querying in Swift.\nRoman - Seamless Roman numeral conversion in Swift.\nZSSRichTextEditor - A beautiful rich text WYSIWYG editor for iOS with a syntax highlighted source view.\npangu.Objective-C - Paranoid text spacing in Objective-C.\nSwiftString - A comprehensive, lightweight string extension for Swift.\nMarklight - Markdown syntax highlighter for iOS.\nMarkdownTextView - Rich Markdown editing control for iOS.\nTextAttributes - An easier way to compose attributed strings.\nReductio - Automatic summarizer text in Swift.\nSmarkDown - A Pure Swift implementation of the markdown mark-up language.\nSwiftyMarkdown - Converts Markdown files and strings into NSAttributedString.\nSZMentions - Library to help handle mentions.\nSZMentionsSwift - Library to help handle mentions.\nHeimdall - Heimdall is a wrapper around the Security framework for simple encryption/decryption operations.\nNoOptionalInterpolation - Get rid of \"Optional(...)\" and \"nil\" in string interpolation. Easy pluralization.\nSmile Emoji in Swift.\nISO8601 Super lightweight ISO8601 Date Formatter in Swift.\nTranslucid - Lightweight library to set an Image as text background.\nFormatterKit - stringWithFormat: for the sophisticated hacker set.\nBonMot - Beautiful, easy attributed strings in Swift.\nSwiftValidators - String validation for iOS developed in Swift. Inspired by validator.js.\nStringStylizer - Type strict builder class for NSAttributedString.\nSwiftyAttributes - Swift extensions that make it a breeze to work with attributed strings.\nMarkdownKit - A simple and customizable Markdown Parser for Swift.\nCocoaMarkdown - Markdown parsing and rendering for iOS and macOS.\nNotepad - A fully themeable markdown editor with live syntax highlighting.\nKKStringValidator - Fast and simple string validation for iOS. With UITextField extension.\nISO8859 - Convert ISO8859 1-16 Encoded Text to String in Swift. Supports iOS, tvOS, watchOS and macOS.\nEmojica - Replace standard emoji in strings with a custom emoji set, such as Twemoji or EmojiOne.\nSwiftRichString - Elegant & Painless Attributed Strings Management Library in Swift.\nlibPhoneNumber-iOS - iOS port from libphonenumber (Google's phone number handling library).\nAttributedTextView - Easiest way to create an attributed UITextView with support for multiple links (including hashtags and mentions).\nStyleDecorator - Design string simply by linking attributes to needed parts.\nMustard - Mustard is a Swift library for tokenizing strings when splitting by whitespace doesn't cut it.\nInput Mask - Pattern-based user input formatter, parser and validator for iOS.\nAttributed - Modern Swift \u00b5framework for attributed strings.\nAtributika - Easily build NSAttributedString by detecting and styling HTML-like tags, hashtags, mentions, RegExp or NSDataDetector patterns.\nGuitar - A Cross-Platform String Library Written in Swift.\nRealTimeCurrencyFormatter - An ObjC international currency formatting utility.\nDown - Blazing fast Markdown rendering in Swift, built upon cmark.\nMarky Mark - Highly customizable Markdown parsing and native rendering in Swift.\nMarkdownView - Markdown View for iOS.\nHighlighter - Highlight whatever you want! Highlighter will magically find UI objects such as UILabel, UITextView, UITexTfield, UIButton in your UITableViewCell or other Class.\nSprinter - A library for formatting strings on iOS and macOS.\nHighlightr - An iOS & macOS syntax highlighter, supports 176 languages and comes with 79 styles.\nfuse-swift - A lightweight fuzzy-search library, with zero dependencies.\nEFMarkdown - A lightweight Markdown library for iOS.\nCroc - A lightweight Swift library for Emoji parsing and querying.\n\nFont\n\nFontBlaster - Programmatically load custom fonts into your iOS app.\nGoogleMaterialIconFont - Google Material Design Icons for Swift and ObjC project.\nios-fontawesome - NSString+FontAwesome.\nFontAwesome.swift - Use FontAwesome in your Swift projects.\nSwiftFontName - OS font complements library. Localized font supported.\nSwiftIconFont - Icons fonts for iOS (FontAwesome, Iconic, Ionicon, Octicon, Themify, MapIcon, MaterialIcon).\nFontAwesomeKit - Icon font library for iOS. Currently supports Font-Awesome, Foundation icons, Zocial, and ionicons.\nIconic - Auto-generated icon font library for iOS, watchOS and tvOS.\nGoogleMaterialDesignIcons - Google Material Design Icons Font for iOS.\nOcticonsKit - Use Octicons as UIImage / UIFont in your projects with Swifty manners.\nIoniconsKit - Use Ionicons as UIImage / UIFont in your projects with Swifty manners.\nFontAwesomeKit.Swift - A better choice for iOS Developer to use FontAwesome Icon.\nUIFontComplete - Font management (System & Custom) for iOS and tvOS.\nSwicon - Use 1600+ icons (and more!) from FontAwesome and Google Material Icons in your swift/iOS project in an easy and space-efficient way!\nSwiftIcons - A library for using different font icons: dripicons, emoji, font awesome, icofont, ionicons, linear icons, map icons, material icons, open iconic, state, weather. It supports UIImage, UIImageView, UILabel, UIButton, UISegmentedControl, UITabBarItem, UISlider, UIBarButtonItem, UIViewController, UITextfield, UIStepper.\nFont-Awesome-Swift - Font Awesome swift library for iOS.\nJQSwiftIcon - Icon Fonts on iOS using string interpolation written in Swift.\nMoney - A precise, type-safe representation of a monetary amount in a given currency.\n\nTesting\nTDD / BDD\n\nKiwi - A behavior-driven development library for iOS development.\nSpecta - A light-weight TDD / BDD framework for Objective-C & Cocoa.\nQuick - A behavior-driven development framework for Swift and Objective-C.\nXcodeCoverage - Code coverage for Xcode projects.\nOHHTTPStubs - Stub your network requests easily! Test your apps with fake network data and custom response time, response code and headers!\nDixie - Dixie is an open source Objective-C testing framework for altering object behaviours.\ngh-unit - Test Framework for Objective-C.\nNimble - A Matcher Framework for Swift and Objective-C\nSleipnir - BDD-style framework for Swift.\nSwiftCheck - QuickCheck for Swift.\nSpry - A Mac and iOS Playgrounds Unit Testing library based on Nimble.\nswift-corelibs-xctest - The XCTest Project, A Swift core library for providing unit test support.\nPlaygroundTDD - Small library to easily run your tests directly within a Playground.\n\nA/B Testing\n\nSwitchboard - Switchboard - easy and super light weight A/B testing for your mobile iPhone or android app. This mobile A/B testing framework allows you with minimal servers to run large amounts of mobile users.\nSkyLab - Multivariate & A/B Testing for iOS and Mac.\nMSActiveConfig - Remote configuration and A/B Testing framework for iOS.\nABKit - AB testing framework for iOS.\n\nUI Testing\n\nappium - Appium is an open source test automation framework for use with native and hybrid mobile apps.\nrobotframework-appiumlibrary - AppiumLibrary is an appium testing library for RobotFramework.\nCucumber - Behavior driver development for iOS.\nKif - An iOS Functional Testing Framework.\nSubliminal - An understated approach to iOS integration testing.\nios-driver - Test any iOS native, hybrid, or mobile web application using Selenium / WebDriver.\nRemote - Control your iPhone from inside Xcode for end-to-end testing.\nLayoutTest-iOS - Write unit tests which test the layout of a view in multiple configurations.\nEarlGrey - \ud83c\udf75 iOS UI Automation Test Framework.\nUI Testing Cheat Sheet - How do I test this with UI Testing?\nBluepill - Bluepill is a reliable iOS testing tool that runs UI tests using multiple simulators on a single machine.\nFlawless App - tool for visual quality check of mobile app in a real-time. It compares initial design with the actual implementation right inside iOS simulator.\nTouchVisualizer - Lightweight touch visualization library in Swift. A single line of code and visualize your touches!\nUITestHelper - UITest helper library for creating readable and maintainable tests.\nViewInspector - Runtime inspection and unit testing of SwiftUI views\n\nOther Testing\n\nNaughtyKeyboard - The Big List of Naughty Strings is a list of strings which have a high probability of causing issues when used as user-input data. This is a keyboard to help you test your app from your iOS device.\nFakery - Swift fake data generator.\nDVR - Network testing for Swift.\nCuckoo - First boilerplate-free mocking framework for Swift.\nVinyl - Network testing \u00e0 la VCR in Swift.\nMockit - A simple mocking framework for Swift, inspired by the famous Mockito for Java.\nCribble - Swifty tool for visual testing iPhone and iPad apps.\nsecond_curtain - Upload failing iOS snapshot tests cases to S3.\ntrainer - Convert xcodebuild plist files to JUnit reports.\nBuildasaur - Automatic testing of your Pull Requests on GitHub and BitBucket using Xcode Server. Keep your team productive and safe. Get up and running in minutes.\nKakapo - Dynamically Mock server behaviors and responses in Swift.\nAcceptanceMark Tool to auto-generate Xcode tests classes from Markdown tables.\nMetovaTestKit - A collection of testing utilities to turn crashing test suites into failing test suites.\nMirrorDiffKit - Pretty diff between any structs or classes.\nSnappyTestCase - iOS Simulator type agnostic snapshot testing, built on top of the FBSnapshotTestCase.\nXCTestExtensions - XCTestExtensions is a Swift extension that provides convenient assertions for writing Unit Test.\nOCMock - Mock objects for Objective-C.\nMockingjay - An elegant library for stubbing HTTP requests with ease in Swift.\nPinpointKit - Let your testers and users send feedback with annotated screenshots and logs using a simple gesture.\niOS Snapshot Test Case \u2014 Snapshot test your UIViews and CALayers on iOS and tvOS.\n\nUI\n\nFlatUIKit - A collection of awesome flat UI components for iOS.\nMotif - A lightweight and customizable JSON stylesheet framework for iOS.\nTexture - Smooth asynchronous user interfaces for iOS apps.\nGaugeKit - Customizable gauges. Easy reproduce Apple's style gauges.\nSAHistoryNavigationViewController - SAHistoryNavigationViewController realizes iOS task manager like UI in UINavigationContoller,3D Touch Compatible.\niCarousel - A simple, highly customisable, data-driven 3D carousel for iOS and Mac OS.\ntapkulibrary - tap + haiku = tapku, a well crafted open source iOS framework.\nHorizontalDial - A horizontal scroll dial like Instagram.\nComponentKit - A React-Inspired View Framework for iOS, by Facebook.\nRKNotificationHub - Make any UIView a full fledged notification center.\nphone-number-picker - A simple and easy to use view controller enabling you to enter a phone number with a country code similar to WhatsApp written in Swift.\nEXTView - Extended UIView for Interface Builder by using IB_DESIGNABLE and IBInspectable.\nBEMCheckBox - Tasteful Checkbox for iOS.\nMPParallaxView - Apple TV Parallax effect in Swift.\nSplitflap - A simple split-flap display for your Swift applications.\nEZSwipeController - UIPageViewController like Snapchat/Tinder/iOS Main Pages.\nCurry - Curry is a framework built to enhance and compliment Foundation and UIKit.\nPages - UIPageViewController made simple.\nBothamUI - Model View Presenter Framework written in Swift.\nAPCustomBlurView - A subclass of UIVisualEffectView with customizable blur radius.\nBAFluidView - UIView that simulates a 2D view of a fluid in motion.\nWZDraggableSwitchHeaderView - Showing status for switching between viewControllers.\nSCTrelloNavigation - An iOS native implementation of a Trello Animated Navagation.\nSpots - Spots is a view controller framework that makes your setup and future development blazingly fast.\nAPAddressBook - Easy access to iOS address book.\nAZExpandableIconListView - An expandable/collapsible view component written in Swift.\nFlourishUI - A highly configurable and out-of-the-box-pretty UI library.\nNavigation Stack - Navigation Stack is a stack-modeled navigation controller.\nUIView-draggable - UIView category that adds dragging capabilities.\nPeekPop - Backwards-compatible Peek and Pop.\nEPSignature - Signature component for iOS in Swift.\nCoreDragon  - Stop using context menus. Drag and drop instead, even between apps!\nEVFaceTracker - Calculate the distance and angle of your device with regards to your face.\nFashion - Fashion accessories and beauty tools to share and reuse UI styles in a Swifty way.\nLeeGo - Declarative, configurable & highly reusable UI development as making Lego bricks.\nMEVHorizontalContacts - An iOS UICollectionViewLayout subclass to show a list of contacts with configurable expandable menu items.\nRipple - Remember there's no such thing as a small act of kindness. Every act creates a ripple with no logical end.\nScalePicker - Generic scale and a handy float-value picker for any iOS app.\nVisualEffectView - UIVisualEffectView subclass with tint color.\nCacao - Pure Swift Cross-platform UIKit (Cocoa Touch) implementation (Supports Linux).\nStateView - Views that automatically update themselves.\nJDFlipNumberView - Representing analog flip numbers like airport/trainstation displays.\nISTimeline - Simple timeline view.\nJFCardSelectionViewController - A fancy collection style view controller.\nDCKit - Set of iOS controls, which have useful IBInspectable properties. Written on Swift.\nBackgroundVideoiOS - A swift and objective-C object that lets you add a background video to iOS views.\nNightNight - Elegant way to integrate night mode to swift projects.\nSwiftTheme - Powerful theme/skin manager for iOS.\nFDStackView - Use UIStackView directly in iOS.\nYangMingShan - YangMingShan is a collection of iOS UI components that we created while building Yahoo apps.\nnui - Style iOS apps with a stylesheet, similar to CSS.\nRedBeard - It's a complete framework that takes away much of the pain of getting a beautiful, powerful iOS App crafted.\nMaterial - Material is an animation and graphics framework that allows developers to easily create beautiful applications.\nDistancePicker - Custom control to select a distance with a pan gesture, written in Swift.\nOAStackView - OAStackView tries to port back the stackview to iOS 7+. OAStackView aims at replicating all the features in UIStackView.\nStyleKit - StyleKit is a microframework that enables you to style your applications using a simple JSON file.\nPageController - Infinite paging controller, scrolling through contents and title bar scrolls with a delay.\nStatusProvider - Protocol to handle initial Loadings, Empty Views and Error Handling in a ViewController & views.\nASBubbleDrag - round icon drag control (made in swift) dock style.\nStackLayout - An alternative to UIStackView for common Auto Layout patterns.\nNightView - Dazzling Nights on iOS.\nSwiftVideoBackground - Easy to Use UIView subclass for implementing a video background.\nMRArticleViewController - Easily create UIViewControllers for news articles similar to those in the News app.\nConfettiView - Confetti View lets you create a magnificent confetti view in your app.\nBouncyPageViewController - Page view controller with bounce effect.\nLTHRadioButton - A radio button with a pretty fill animation.\nMacaw-Examples - Various usages of the Macaw library.\nReactions - Fully customizable Facebook reactions control.\nNewly - Newly is a drop in solution to add Twitter/Facebook/Linkedin-style new updates/tweets/posts available button.\nCardStackController - iOS custom controller used in Jobandtalent app to present new view controllers as cards.\nMaterial Components - Google developed UI components that help developers execute Material Design.\nRKMultiUnitRuler - Simple customizable ruler control that supports multiple units.\nFAQView - An easy to use FAQ view for iOS written in Swift.\nLMArticleViewController - UIViewController subclass to beautifully present news articles and blog posts.\nFSPagerView - FSPagerView is an elegant Screen Slide Library. It is extremely helpful for making Banner\u3001Product Show\u3001Welcome/Guide Pages\u3001Screen/ViewController Sliders.\nPanelKit - A UI framework that enables panels on iOS.\nElongationPreview - ElongationPreview is an elegant push-pop style view controller with 3D-Touch support and gestures.\nPageboy - A simple, highly informative page view controller.\nIGColorPicker - A customizable color picker for iOS in Swift.\nKPActionSheet -  A replacement of default action sheet, but has very simple usage.\nSegmentedProgressBar - Snapchat / Instagram Stories style animated indicator.\nMagnetic - SpriteKit Floating Bubble Picker (inspired by Apple Music).\nAmazingBubbles - Apple Music like Bubble Picker using Dynamic Animation.\nHaptica - Easy Haptic Feedback Generator.\nGDCheckbox - An easy to use custom checkbox/radio button component for iOS, with support of IBDesign Inspector.\nHamsterUIKit - A simple and elegant UIKit(Chart) for iOS.\nAZEmptyState - A UIControl subclass that makes it easy to create empty states.\nURWeatherView - Show the weather effects onto view.\nLCUIComponents - A framework supports creating transient views on top of other content onscreen such as popover with a data list.\nViewComposer - let lbl: UILabel = [.text(\"Hello\"), .textColor(.red)] - Create views using array literal of enum expressing view attributes.\nBatteryView - Simple battery shaped UIView.\nShadowView - Make shadows management easy on UIView.\nPulley - A library to imitate the iOS 10 Maps UI.\nN8iveKit - A set of frameworks making iOS development more fun.\nPanda - Create view hierarchies declaratively.\nNotchKit - A simple way to hide the notch on the iPhone X\nOverlay - Overlay is a flexible UI framework designed for Swift. It allows you to write CSS like Swift code.\nSwiftyUI - High performance and lightweight(one class each UI) UIView, UIImage, UIImageView, UIlabel, UIButton, Promise and more.\nNotchToolkit - A framework for iOS that allow developers use the iPhone X notch in creative ways.\nPullUpController - Pull up controller with multiple sticky points like in iOS Maps.\nDrawerKit - DrawerKit lets an UIViewController modally present another UIViewController in a manner similar to the way Apple's Maps app works.\nShades - Easily add drop shadows, borders, and round corners to a UIView.\nISPageControl - A page control similar to that used in Instagram.\nMixin - React.js like Mixin. More powerful Protocol-Oriented Programming.\nShiny - Iridescent Effect View (inspired by Apple Pay Cash).\nStackViewController - A controller that uses a UIStackView and view controller composition to display content in a list.\nUberSignature - Provides an iOS view controller allowing a user to draw their signature with their finger in a realistic style.\nSwViewCapture - A nice iOS View Capture Swift Library which can capture all content.\nHGRippleRadarView - A beautiful radar view to show nearby items (users, restaurants, ...) with ripple animation, fully customizable.\nGDGauge - Full Customizable, Beautiful, Easy to use gauge view Edit.\nSTAControls - Handy UIControl subclasses. (Think Three20/NimbusKit of UIControls.) Written in Objective-C.\nApplyStyleKit - Elegant apply style, using Swift Method Chain.\nOverlayContainer - A library to develop overlay based interfaces, such as the one presented in the iOS 12 Apple Maps or Stocks apps.\nClassicKit - A collection of classic-style UI components for iOS.\nSejima - A collection of User Interface components for iOS.\nUI Fabric by Microsoft - UI framework based on Fluent Design System by Microsoft.\n\nActivity Indicator\n\nNVActivityIndicatorView - Collection of nice loading animations.\nTKRubberIndicator - Rubber Indicator in Swift.\nRPLoadingAnimation - Loading animations by using Swift CALayer.\nLiquidLoader - Spinner loader components with liquid animation.\niOS-CircleProgressView - This control will allow a user to use code instantiated or interface builder to create and render a circle progress view.\niOS Circle Progress Bar - iOS Circle Progress Bar.\nLinearProgressBar - Linear Progress Bar (inspired by Google Material Design) for iOS.\nSTLoadingGroup - loading views.\nALThreeCircleSpinner - A pulsing spinner view written in swift.\nMHRadialProgressView - iOS radial animated progress view.\nLoader - Amazing animated switch activity indicator written in swift.\nMBProgressHUD - Drop-in class for displays a translucent HUD with an indicator and/or labels while work is being done in a background thread.\nSVProgressHUD - A clean and lightweight progress HUD for your iOS app.\nProgressHUD - ProgressHUD is a lightweight and easy-to-use HUD.\nM13ProgressSuite - A suite containing many tools to display progress information on iOS.\nPKHUD - A Swift based reimplementation of the Apple HUD (Volume, Ringer, Rotation,\u2026) for iOS 8 and above.\nEZLoadingActivity - Lightweight loading activity HUD.\nFFCircularProgressView - FFCircularProgressView - An iOS 7-inspired blue circular progress view.\nMRProgress - Collection of iOS drop-in components to visualize progress.\nBigBrother - Automatically sets the network activity indicator for any performed request.\nAlamofireNetworkActivityIndicator - Controls the visibility of the network activity indicator on iOS using Alamofire.\nKDCircularProgress - A circular progress view with gradients written in Swift.\nDACircularProgress - DACircularProgress is a UIView subclass with circular UIProgressView properties.\nKYNavigationProgress - Simple extension of UINavigationController to display progress on the UINavigationBar.\nGearRefreshControl - A custom animation for the UIRefreshControl.\nNJKWebViewProgress - A progress interface library for UIWebView. You can implement progress bar for your in-app browser using this module.\nMKRingProgressView - A beautiful ring/circular progress view similar to Activity app on Apple Watch, written in Swift.\nHexacon - A new way to display content in your app like the Apple Watch SpringBoard, written in Swift.\nParticlesLoadingView - A customizable SpriteKit particles animation on the border of a view.\nRPCircularProgress - (Swift) Circular progress UIView subclass with UIProgressView properties.\nMBCircularProgressBar -  A circular, animatable & highly customizable progress bar, editable from the Interface Builder using IBDesignable.\nWSProgressHUD - This is a beautiful hud view for iPhone & iPad.\nDBMetaballLoading - A metaball loading written in Swift.\nFillableLoaders - Completely customizable progress based loaders drawn using custom CGPaths written in Swift.\nVHUD Simple HUD.\nSwiftSpinner - A beautiful activity indicator and modal alert written in Swift using blur effects, translucency, flat and bold design.\nSnapTimer - Implementation of Snapchat's stories timer.\nLLSpinner - An easy way to create a full screen activity indicator.\nSVUploader - A beautiful uploader progress view that makes things simple and easy.\nYLProgressBar - UIProgressView replacement with an highly and fully customizable animated progress bar in pure Core Graphics.\nFlexibleSteppedProgressBar - A beautiful easily customisable stepped progress bar.\nGradientLoadingBar - An animated gradient loading bar.\nDSGradientProgressView - A simple and customizable animated progress bar written in Swift.\nGradientProgressBar - A gradient progress bar (UIProgressView).\nBPCircleActivityIndicator - A lightweight and awesome Loading Activity Indicator for your iOS app.\nDottedProgressBar - Simple and customizable animated progress bar with dots for iOS.\nRSLoadingView - Awesome loading animations using 3D engine written with Swift.\nSendIndicator - Yet another task indicator.\nStepProgressView - Step-by-step progress view with labels and shapes. A good replacement for UIActivityIndicatorView and UIProgressView.\nBPBlockActivityIndicator - A simple and awesome Loading Activity Indicator(with funny block animation) for your iOS app.\nJDBreaksLoading - You can easily start up a little breaking game indicator by one line.\nSkeletonView - An elegant way to show users that something is happening and also prepare them to which contents he is waiting.\nWindless - Windless makes it easy to implement invisible layout loading view.\nSkeleton - An easy way to create sliding CAGradientLayer animations! Works great for creating skeleton screens for loading content.\nStatusBarOverlay - Automatically show/hide a \"No Internet Connection\" bar when your app loses/gains connection. It supports apps which hide the status bar and \"The Notch\".\nRetroProgress - Retro looking progress bar straight from the 90s.\nLinearProgressBar - Material Linear Progress Bar for your iOS apps.\nMKProgress - A lightweight ProgressHUD written in Swift. Looks similar to /MBProgressHUD/SVProgressHUD/KVNProgressHUD.\nRHPlaceholder - Simple library which give you possibility to add Facebook like loading state for your views.\nIHProgressHUD - Simple HUD, thread safe, supports iOS, tvOS and App Extensions.\n\nAnimation\n\nPop - An extensible iOS and macOS animation library, useful for physics-based interactions.\nAnimationEngine - Easily build advanced custom animations on iOS.\nRZTransitions - A library of custom iOS View Controller Animations and Interactions.\nDCAnimationKit - A collection of animations for iOS. Simple, just add water animations.\nSpring - A library to simplify iOS animations in Swift.\nFluent - Swift animation made easy.\nCheetah - Easy animation library on iOS.\nRadialLayer - Animation for clickable elements (similar to Youtube Music).\nPop By Example - A project tutorial in how to use Pop animation framework by example.\nAppAnimations - Collection of iOS animations to inspire your next project.\nEasyAnimation - A Swift library to take the power of UIView.animateWithDuration() to a whole new level - layers, springs, chain-able animations, and mixing view/layer animations together.\nAnimo - SpriteKit-like animation builders for CALayers.\nCurryFire - A framework for creating unique animations.\nIBAnimatable - Design and prototype UI, interaction, navigation, transition and animation for App Store ready Apps in Interface Builder with IBAnimatable.\nCKWaveCollectionViewTransition - Cool wave like transition between two or more UICollectionView.\nDaisyChain - Easy animation chaining.\nPulsingHalo - iOS Component for creating a pulsing animation.\nDKChainableAnimationKit - Chainable animations in Swift.\nJDAnimationKit - Animate easy and with less code with Swift.\nAdvance - A powerful animation framework for iOS.\nUIView-Shake - UIView category that adds shake animation.\nWalker - A new animation engine for your app.\nMorgan - An animation set for your app.\nMagicMove - Keynote-style Magic Move transition animations.\nShimmer - An easy way to add a simple, shimmering effect to any view in an iOS app.\nSAConfettiView - Confetti! Who doesn't like confetti?\nCCMRadarView - CCMRadarView uses the IBDesignable tools to make an easy customizable radar view with animation.\nPulsator - Pulse animation for iOS.\nInterpolate - Swift interpolation for gesture-driven animations.\nADPuzzleAnimation - Custom animation for UIView inspired by Fabric - Answers animation.\nWave - \ud83c\udf0a Declarative chainable animations in Swift.\nStellar - A fantastic Physical animation library for swift.\nMotionMachine - A powerful, elegant, and modular animation library for Swift.\nJRMFloatingAnimation - An Objective-C animation library used to create floating image views.\nAHKBendableView - UIView subclass that bends its edges when its position changes.\nFlightAnimator - Advanced Natural Motion Animations, Simple Blocks Based Syntax.\nZoomTransitioning - A custom transition with image zooming animation.\nUbergang - A tweening engine for iOS written in Swift.\nJHChainableAnimations - Easy to read and write chainable animations in Objective-C.\nPopsicle - Delightful, extensible Swift value interpolation framework.\nWXWaveView - Add a pretty water wave to your view.\nTwinkle - Swift and easy way to make elements in your iOS and tvOS app twinkle.\nMotionBlur - MotionBlur allows you to add motion blur effect to iOS animations.\nRippleEffectView - RippleEffectView - A Neat Rippling View Effect.\nKeyframes - A library for converting Adobe AE shape based animations to a data format and play it back on Android and iOS devices.\nSwiftyAnimate - Composable animations in Swift.\nSamuraiTransition - Swift based library providing a collection of ViewController transitions featuring a number of neat \u201ccutting\u201d animations.\nLottie - An iOS library for a real time rendering of native vector animations from Adobe After Effects.\nOverlap - Tiny iOS library to achieve overlap visual effect.\nanim - An animation library for iOS with custom easings and easy to follow API.\nAnimatedCollectionViewLayout - A UICollectionViewLayout subclass that adds custom transitions/animations to the UICollectionView.\nDance - A radical & elegant animation library built for iOS.\nAKVideoImageView - UIImageView subclass which allows you to display a looped video as a background.\nSpruce iOS Animation Library - Swift library for choreographing animations on the screen.\nCircularRevealKit - UI framework that implements the material design's reveal effect.\nTweenKit - Animation library for iOS in Swift.\nWater - Simple calculation to render cheap water effects.\nPastel - Gradient animation effect like Instagram.\nYapAnimator - Your fast and friendly physics-based animation system.\nBubble - Fruit Animation.\nGemini - Gemini is rich scroll based animation framework for iOS, written in Swift.\nWaterDrops - Simple water drops animation for iOS in Swift.\nViewAnimator - ViewAnimator brings your UI to life with just one line.\nEase - Animate everything with Ease.\nKinieta - An Animation Engine with Custom Bezier Easing, an Intuitive API and perfect Color Intepolation.\nLSAnimator - Easy to Read and Write Multi-chain Animations Kit in Objective-C and Swift.\nYetAnotherAnimationLibrary - Designed for gesture-driven animations. Fast, simple, & extensible!\nAnima - Anima is chainable Layer-Based Animation library for Swift4.\nMotionAnimation - Lightweight animation library for UIKit.\nAGInterfaceInteraction - library performs interaction with UI interface.\nPMTween - An elegant and flexible tweening library for iOS.\nVariousViewsEffects - Animates views nicely with easy to use extensions.\nTheAnimation - Type-safe CAAnimation wrapper. It makes preventing to set wrong type values.\nPoi - Poi makes you use card UI like tinder UI .You can use it like tableview method.\nSica - Simple Interface Core Animation. Run type-safe animation sequencially or parallelly.\nfireworks - Fireworks effect for UIView\nDisintegrate - Disintegration animation inspired by THAT thing Thanos did at the end of Avengers: Infinity War.\nWobbly - Wobbly is a Library of predefined, easy to use iOS animations.\nLoadingShimmer - An easy way to add a shimmering effect to any view with just one line of code. It is useful as an unobtrusive loading indicator.\n\nTransition\n\nBlurryModalSegue - A custom modal segue for providing a blurred overlay effect.\nDAExpandAnimation - A custom modal transition that presents a controller with an expanding effect while sliding out the presenter remnants.\nBubbleTransition - A custom modal transition that presents and dismiss a controller with an expanding bubble effect.\nRPModalGestureTransition - You can dismiss modal by using gesture.\nRMPZoomTransitionAnimator - A custom zooming transition animation for UIViewController.\nElasticTransition - A UIKit custom transition that simulates an elastic drag. Written in Swift.\nElasticTransition-ObjC - A UIKit custom transition that simulates an elastic drag.This is the Objective-C Version of Elastic Transition written in Swift by lkzhao.\nZFDragableModalTransition - Custom animation transition for present modal view controller.\nZOZolaZoomTransition - Zoom transition that animates the entire view hierarchy. Used extensively in the Zola iOS application.\nJTMaterialTransition - An iOS transition for controllers based on material design.\nAnimatedTransitionGallery - Collection of iOS 7 custom animated transitions using UIViewControllerAnimatedTransitioning protocol.\nTransitionTreasury - Easier way to push your viewController.\nPresenter - Screen transition with safe and clean code.\nKaeru - Switch viewcontroller like iOS task manager.\nView2ViewTransition - Custom interactive view controller transition from one view to another view.\nAZTransitions - API to make great custom transitions in one method.\nHero - Supercharged transition engine for iOS. Build your custom view transitions with no code at all. Inspired by Keynote's Magic Move.\nMotion - Seamless animations and transitions in Swift.\nPresenterKit - Swifty view controller presentation for iOS.\nTransition - Easy interactive interruptible custom ViewController transitions.\nGagat - A delightful way to transition between visual styles in your iOS applications.\nDeckTransition - A library to recreate the iOS Apple Music now playing transition.\nTransitionableTab - TransitionableTab makes it easy to animate when switching between tab.\nAlertTransition - AlertTransition is a extensible library for making view controller transitions, especially for alert transitions.\nSemiModalViewController - Present view / view controller as bottom-half modal.\nImageTransition - ImageTransition is a library for smooth animation of images during transitions.\nLiquidTransition - removes boilerplate code to perform transition, allows backward animations, custom properties animation and much more!\nSPStorkController - Very similar to the controllers displayed in Apple Music, Podcasts and Mail Apple's applications.\nAppstoreTransition - Simulates the appstore card animation transition.\n\nAlert & Action Sheet\n\nSweetAlert - Live animated Alert View for iOS written in Swift.\nNYAlertViewController - Highly configurable iOS Alert Views with custom content views.\nSCLAlertView-Swift - Beautiful animated Alert View, written in Swift.\nTTGSnackbar - Show simple message and action button on the bottom of the screen with multi kinds of animation.\nSwift-Prompts - A Swift library to design custom prompts with a great scope of options to choose from.\nBRYXBanner - A lightweight dropdown notification for iOS 7+, in Swift.\nLNRSimpleNotifications - Simple Swift in-app notifications. LNRSimpleNotifications is a simplified Swift port of TSMessages.\nHDNotificationView - Emulates the native Notification Banner UI for any alert.\nJDStatusBarNotification - Easy, customizable notifications displayed on top of the statusbar.\nNotie - In-app notification in Swift, with customizable buttons and input text field.\nEZAlertController - Easy Swift UIAlertController.\nGSMessages - A simple style messages/notifications for iOS 7+.\nOEANotification - In-app customizable notification views on top of screen for iOS which is written in Swift 2.1.\nRKDropdownAlert - Extremely simple UIAlertView alternative.\nTKSwarmAlert - Animated alert library like Swarm app.\nSimpleAlert - Customizable simple Alert and simple ActionSheet for Swift.\nHokusai - A Swift library to provide a bouncy action sheet.\nSwiftNotice - SwiftNotice is a GUI library for displaying various popups (HUD) written in pure Swift, fits any scrollview.\nSwiftOverlays - SwiftOverlays is a Swift GUI library for displaying various popups and notifications.\nSwiftyDrop - SwiftyDrop is a lightweight pure Swift simple and beautiful dropdown message.\nLKAlertController - An easy to use UIAlertController builder for swift.\nDOAlertController - Simple Alert View written in Swift, which can be used as a UIAlertController. (AlertController/AlertView/ActionSheet).\nCustomizableActionSheet - Action sheet allows including your custom views and buttons.\nToast-Swift - A Swift extension that adds toast notifications to the UIView object class.\nPMAlertController - PMAlertController is a great and customizable substitute to UIAlertController.\nPopupViewController - UIAlertController drop in replacement with much more customization.\nAlertViewLoveNotification - A simple and attractive AlertView to ask permission to your users for Push Notification.\nCRToast - A modern iOS toast view that can fit your notification needs.\nJLToast - Toast for iOS with very simple interface.\nCuckooAlert - Multiple use of presentViewController for UIAlertController.\nKRAlertController - A colored alert view for your iOS.\nDodo - A message bar for iOS written in Swift.\nMaterialActionSheetController - A Google like action sheet for iOS written in Swift.\nSwiftMessages - A very flexible message bar for iOS written in Swift.\nFCAlertView - A Flat Customizable AlertView for iOS. (Swift).\nFCAlertView - A Flat Customizable AlertView for iOS. (Objective-C).\nCDAlertView - Highly customizable alert/notification/success/error/alarm popup.\nRMActionController - Present any UIView in an UIAlertController like manner.\nRMDateSelectionViewController - Select a date using UIDatePicker in a UIAlertController like fashion.\nRMPickerViewController - Select something using UIPickerView in a UIAlertController like fashion.\nJelly - Jelly provides custom view controller transitions with just a few lines of code.\nMalert - Malert is a simple, easy and custom iOS UIAlertView written in Swift.\nRAlertView - AlertView, iOS popup window, A pop-up framework, Can be simple and convenient to join your project.\nNoticeBar - A simple NoticeBar written by Swift 3, similar with QQ notice view.\nLIHAlert - Advance animated banner alerts for iOS.\nBPStatusBarAlert - A simple alerts that appear on the status bar and below navigation bar(like Facebook).\nCFAlertViewController -  A library that helps you display and customise alerts and action sheets on iPad and iPhone.\nNotificationBanner - The easiest way to display highly customizable in app notification banners in iOS.\nAlertift - Swifty, modern UIAlertController wrapper.\nPCLBlurEffectAlert - Swift AlertController with UIVisualEffectView.\nJDropDownAlert - Multi dirction dropdown alert view.\nBulletinBoard - Generate and Display Bottom Card Interfaces on iOS\nCFNotify - A customizable framework to create draggable views.\nStatusAlert - Display Apple system-like self-hiding status alerts without interrupting user flow.\nAlerts & Pickers - Advanced usage of native UIAlertController with TextField, DatePicker, PickerView, TableView and CollectionView.\nRMessage - A crisp in-app notification/message banner built in ObjC.\nInAppNotify - Swift library to manage in-app notification in swift language, like WhatsApp, Telegram, Frind, etc.\nFloatingActionSheetController - FloatingActionSheetController is a cool design ActionSheetController library written in Swift.\nTOActionSheet - A custom-designed reimplementation of the UIActionSheet control for iOS\nXLActionController - Fully customizable and extensible action sheet controller written in Swift.\nPopMenu - A cool and customizable popup style action sheet \ud83d\ude0e\nNotchyAlert - Use the iPhone X notch space to display creative alerts.\nSheet - Show a workflow of view controllers as an action sheet. Very light weight. No configuration needed.\nSheet - SHEET helps you easily create a wide variety of action sheets with navigation features used in the Flipboard App\nALRT - An easier constructor for UIAlertController. Present an alert from anywhere.\nCatAlertController - Use UIAlertController like a boss.\nLoaf - A simple framework for easy iOS Toasts.\nSPAlert - Native popup from Apple Music & Feedback in AppStore. Contains Done & Heart presets.\n\nBadge\n\nMIBadgeButton - Notification badge for UIButtons.\nEasyNotificationBadge - UIView extension that adds a notification badge. [e]\nSheriff - Add badges to anything.\nswift-badge - Badge view for iOS written in swift\nBadgeHub - Make any UIView a full fledged animated notification center. It is a way to quickly add a notification badge icon to a UIView.\n\nButton\n\nSSBouncyButton - iOS7-style bouncy button UI component.\nDOFavoriteButton - Cute Animated Button written in Swift.\nVBFPopFlatButton - Flat button with 9 different states animated using Facebook POP.\nHTPressableButton - Flat design pressable button.\nLiquidFloatingActionButton - Material Design Floating Action Button in liquid state\nJTFadingInfoView - An UIButton-based view with fade in/out animation features.\nFloaty - \u2764\ufe0f Floating Action Button for iOS\nTVButton - Recreating the cool parallax icons from Apple TV as iOS UIButtons (in Swift).\nSwiftyButton - Simple and customizable button in Swift\nAnimatablePlayButton - Animated Play and Pause Button using CALayer, CAKeyframeAnimation.\ngbkui-button-progress-view - Inspired by Apple\u2019s download progress buttons in the App Store.\nZFRippleButton - Custom UIButton effect inspired by Google Material Design\nJOEmojiableBtn - Emoji selector like Facebook Reactions.\nEMEmojiableBtn - Option selector that works similar to Reactions by fb. Objective-c version.\nWYMaterialButton - Interactive and fully animated Material Design button for iOS developers.\nDynamicButton - Yet another animated flat buttons in Swift\nOnOffButton - Custom On/Off Animated UIButton, written in Swift. By Creativedash\nWCLShineButton - This is a UI lib for iOS. Effects like shining.\nEasySocialButton - An easy way to create beautiful social authentication buttons.\nNFDownloadButton - Revamped Download Button.\nLGButton - A fully customisable subclass of the native UIControl which allows you to create beautiful buttons without writing any line of code.\nMultiToggleButton - A UIButton subclass that implements tap-to-toggle button text (Like the camera flash and timer buttons).\nPMSuperButton - A powerful UIButton with super powers, customizable from Storyboard!\nJSButton - A fully customisable swift subclass on UIButton which allows you to create beautiful buttons without writing any line of code.\nTransitionButton - UIButton sublass for loading and transition animation\nButtonProgressBar-iOS - A small and flexible UIButton subclass with animated loading progress, and completion animation.\nSpicyButton - Full-featured IBDesignable UIButton class\nDesignableButton - UIButton subclass with centralised and reusable styles. View styles and customise in InterfaceBuilder in real time!\nBEMCheckBox - Tasteful Checkbox for iOS. (Check box)\nExpandableButton - Customizable and easy to use expandable button in Swift.\nTORoundedButton - A high-performance button control with rounded corners.\n\nCalendar\n\nCVCalendar - A custom visual calendar for iOS 8+ written in Swift (2.0).\nRSDayFlow - iOS 7+ Calendar with Infinite Scrolling.\nNWCalendarView - An availability calendar implementation for iOS\nGLCalendarView - A fully customizable calendar view acting as a date range picker\nJTCalendar - A customizable calendar view for iOS.\nJTAppleCalendar - The Unofficial Swift Apple Calendar Library. View. Control. for iOS & tvOS\nDaysquare - An elegant calendar control for iOS.\nASCalendar - A calendar control for iOS written in swift with mvvm pattern\nCalendar - A set of views and controllers for displaying and scheduling events on iOS\nKoyomi - Simple customizable calendar component in Swift\nDateTimePicker - A nicer iOS UI component for picking date and time\nRCalendarPicker - RCalendarPicker A date picker control.\nCalendarKit - Fully customizable calendar day view.\nGDPersianCalendar - Customizable and easy to use Persian Calendar component.\nMBCalendarKit - A calendar framework for iOS built with customization, and localization in mind.\nPTEventView - An Event View based on Apple's Event Detail View within Calender.Supports ARC, Autolayout and editing via StoryBoard.\nKDCalendarView - A calendar component for iOS written in Swift 4.0. It features both vertical and horizontal layout (and scrolling) and the display of native calendar events.\nCalendarPopUp - CalendarPopUp - JTAppleCalendar library.\nios_calendar  - It's lightweight and simple control with supporting Locale and CalendarIdentifier. There're samples for iPhone and iPad, and also with using a popover. With supporting Persian calendar\nFSCalendar - A fully customizable iOS calendar library, compatible with Objective-C and Swift.\n\nCards\nCard based UI's, pan gestures, flip and swipe animations\n\nMDCSwipeToChoose - Swipe to \"like\" or \"dislike\" any view, just like Tinder.app. Build a flashcard app, a photo viewer, and more, in minutes, not hours!\nTisprCardStack - Library that allows to have cards UI.\nCardAnimation - Card flip animation by pan gesture.\nKoloda - KolodaView is a class designed to simplify the implementation of Tinder like cards on iOS.\nKVCardSelectionVC - Awesome looking Dial like card selection ViewController.\nDMSwipeCards - Tinder like card stack that supports lazy loading and generics\nTimelineCards - Presenting timelines as cards, single or bundled in scrollable feed!.\nCards - Awesome iOS 11 AppStore's Card Views.\nMMCardView - Custom CollectionView like Wallet App\nCardsLayout - Nice card-designed custom collection view layout.\nCardParts - A reactive, card-based UI framework built on UIKit.\nVerticalCardSwiper - A marriage between the Shazam Discover UI and Tinder, built with UICollectionView in Swift.\n\nForm & Settings\nInput validators, form helpers and form builders.\n\nForm - The most flexible and powerful way to build a form on iOS\nXLForm - XLForm is the most flexible and powerful iOS library to create dynamic table-view forms. Fully compatible with Swift & Obj-C.\nEureka - Elegant iOS form builder in pure Swift.\nYALField - Custom Field component with validation for creating easier form-like UI from interface builder.\nFormer - Former is a fully customizable Swift2 library for easy creating UITableView based form.\nSwiftForms - A small and lightweight library written in Swift that allows you to easily create forms.\nFormalist - Declarative form building framework for iOS\nSwiftyFORM - SwiftyFORM is a form framework for iOS written in Swift\nSwiftValidator - A rule-based validation library for Swift\nGenericPasswordRow - A row for Eureka to implement password validations.\nformvalidator-swift - A framework to validate inputs of text fields and text views in a convenient way.\nValidationToolkit - Lightweight framework for input validation written in Swift.\nATGValidator - Rule based validation framework with form and card validation support for iOS.\nValidatedPropertyKit - Easily validate your Properties with Property Wrappers.\n\nKeyboard\n\nRSKKeyboardAnimationObserver - Showing / dismissing keyboard animation in simple UIViewController category.\nRFKeyboardToolbar - This is a flexible UIView and UIButton subclass to add customized buttons and toolbars to your UITextFields/UITextViews.\nIQKeyboardManager - Codeless drop-in universal library allows to prevent issues of keyboard sliding up and cover UITextField/UITextView.\nNgKeyboardTracker - Objective-C library for tracking keyboard in iOS apps.\nMMNumberKeyboard - A simple keyboard to use with numbers and, optionally, a decimal point.\nKeyboardObserver - For less complicated keyboard event handling.\nTPKeyboardAvoiding - A drop-in universal solution for moving text fields out of the way of the keyboard in iOS\nYYKeyboardManager - iOS utility class allows you to access keyboard view and track keyboard animation.\nKeyboardMan - KeyboardMan helps you make keyboard animation.\nMakemojiSDK - Emoji Keyboard SDK (iOS)\nTypist - Small, drop-in Swift UIKit keyboard manager for iOS apps-helps manage keyboard's screen presence and behavior without notification center.\nKeyboardHideManager - Codeless manager to hide keyboard by tapping on views for iOS written in Swift\nToolbar - Awesome autolayout Toolbar.\nIHKeyboardAvoiding - A drop-in universal solution for keeping any UIView visible when the keyboard is being shown - no more UIScrollViews!\nNumPad - Number Pad (inspired by Square's design).\nRibbon - A simple cross-platform toolbar/custom input accessory view library for iOS & macOS.\n\nLabel\n\nLTMorphingLabel - Graceful morphing effects for UILabel written in Swift.\nActiveLabel.swift - UILabel drop-in replacement supporting Hashtags (#), Mentions (@) and URLs (http://) written in Swift\nMZTimerLabel - A handy class for iOS to use UILabel as a countdown timer or stopwatch just like in Apple Clock App.\nCountdownLabel - Simple countdown UILabel with morphing animation, and some useful function.\nIncrementableLabel - Incrementable label for iOS, macOS, and tvOS.\nTTTAttributedLabel - A drop-in replacement for UILabel that supports attributes, data detectors, links, and more\nNumberMorphView - A label view for displaying numbers which can transition or animate using a technique called number tweening or number morphing.\nGlitchLabel - Glitching UILabel for iOS.\nTOMSMorphingLabel - Configurable morphing transitions between text values of a label.\nTHLabel - UILabel subclass, which additionally allows shadow blur, inner shadow, stroke text and fill gradient.\nRQShineLabel - Secret app like text animation\nZCAnimatedLabel - UILabel replacement with fine-grain appear/disappear animation\nTriLabelView - A triangle shaped corner label view for iOS written in Swift.\nPreloader.Ophiuchus - Custom Label to apply animations on whole text or letters.\nMTLLinkLabel - MTLLinkLabel is linkable UILabel. Written in Swift.\nUICountingLabel - Adds animated counting support to UILabel.\nSlidingText -  Swift UIView for sliding text with page indicator.\nNumericAnimatedLabel -  Swift UIView for showing numeric label with incremental and decremental step animation while changing value. Useful for scenarios like displaying currency.\nJSLabel -  A simple designable subclass on UILabel with extra IBDesignable and Blinking features.\nAnimatedMaskLabel -  Animated Mask Label is a nice gradient animated label. This is an easy way to add a shimmering effect to any view in your app.\nSTULabel -  A label view that's faster than UILabel and supports asynchronous rendering, links with UIDragInteraction, very flexible text truncation, Auto Layout, UIAccessibility and more.\n\nLogin\n\nLFLoginController - Customizable login screen, written in Swift.\nLoginKit - LoginKit is a quick and easy way to add a Login/Signup UX to your iOS app.\nCely - Plug-n-Play login framework written in Swift.\n\nMenu\n\nENSwiftSideMenu - A simple side menu for iOS 7/8 written in Swift.\nRESideMenu - iOS 7/8 style side menu with parallax effect inspired by Dribbble shots.\nSSASideMenu - A Swift implementation of RESideMenu. A iOS 7/8 style side menu with parallax effect.\nRadialMenu - RadialMenu is a custom control for providing a touch context menu (like iMessage recording in iOS 8) built with Swift & POP\ncariocamenu - The fastest zero-tap iOS menu.\nVLDContextSheet - Context menu similar to the one in the Pinterest iOS app\nGuillotineMenu - Our Guillotine Menu Transitioning Animation implemented in Swift reminds a bit of a notorious killing machine.\nMediumMenu - A menu based on Medium iOS app.\nSwiftySideMenu - SwiftySideMenu is a lightweight and easy to use side menu controller to add left menu and center view controllers with scale animation based on Pop framework.\nLLSlideMenu - This is a spring slide menu for iOS apps\nSwift-Slide-Menu - A Slide Menu, written in Swift, inspired by Slide Menu Material Design.\nMenuItemKit - UIMenuItem with image and block(closure)\nBTNavigationDropdownMenu - The elegant dropdown menu, written in Swift, appears underneath navigation bar to display a list of related items when a user click on the navigation title.\nALRadialMenu - A radial/circular menu featuring spring animations. Written in swift\nAZDropdownMenu - An easy to use dropdown menu that supports images.\nCircleMenu - An animated, multi-option menu button.\nSlideMenuControllerSwift - iOS Slide Menu View based on Google+, iQON, Feedly, Ameba iOS app. It is written in pure Swift.\nSideMenu - Simple side menu control in Swift inspired by Facebook. Right and Left sides. Lots of customization and animation options. Can be implemented in Storyboard with no code.\nCategorySliderView - slider view for choosing categories. add any UIView type as category item view. Fully customisable\nMKDropdownMenu - A Dropdown Menu for iOS with many customizable parameters to suit any needs.\nExpandingMenu - ExpandingMenu is menu button for iOS written in Swift.\nPageMenu - A paging menu controller built from other view controllers placed inside a scroll view (like Spotify, Windows Phone, Instagram)\nXXXRoundMenuButton - A simple circle style menu.\nIGCMenu - Grid and Circular menu with animation.Easy to customise.\nEEJSelectMenu - Single selection menu with cool animations, responsive with all screen sizes.\nIGLDropDownMenu - An iOS drop down menu with pretty animation and easy to customize.\nSide-Menu.iOS - Animated side menu with customizable UI\nPopMenu - PopMenu is pop animation menu inspired by Sina weibo / NetEase app.\nFlowingMenu - Interactive view transition to display menus with flowing and bouncing effects in Swift\nPersei - Animated top menu for UITableView / UICollectionView / UIScrollView written in Swift\nDropDown - A Material Design drop down for iOS\nKYGooeyMenu - A not bad gooey effects menu.\nSideMenuController - A side menu controller written in Swift\nContext-Menu.iOS - You can easily add awesome animated context menu to your app.\nViewDeck - An implementation of the sliding functionality found in the Path 2.0 or Facebook iOS apps.\nFrostedSidebar - Hamburger Menu using Swift and iOS 8 API's\nVHBoomMenuButton - A menu which can ... BOOM!\nDropDownMenuKit - A simple, modular and highly customizable UIKit menu, that can be attached to the navigation bar or toolbar, written in Swift.\nRevealMenuController - Expandable item groups, custom position and appearance animation. Similar to ActionSheet style.\nRHSideButtons - Library provides easy to implement variation of Android (Material Design) Floating Action Button for iOS. You can use it as your app small side menu.\nSwift-CircleMenu - Rotating circle menu written in Swift 3.\nAKSideMenu - Beautiful iOS side menu library with parallax effect.\nInteractiveSideMenu - Customizable iOS Interactive Side Menu written in Swift 3.\nYNDropDownMenu - Adorable iOS drop down menu with Swift3.\nKWDrawerController - Drawer view controller that easy to use!\nJNDropDownMenu - Easy to use tableview style drop down menu with multi-column support written in Swift3.\nFanMenu - Menu with a circular layout based on Macaw.\nAirBar - UIScrollView driven expandable menu written in Swift 3.\nFAPanels - FAPanels for transition\nSwipeMenuViewController - Swipable tab and menu View and ViewController.\nDTPagerController - A fully customizable container view controller to display set of ViewControllers in horizontal scroller\nPagingKit - PagingKit provides customizable menu UI It has more flexible layout and design than the other libraries.\nDropdowns - \ud83d\udca7 Dropdown in Swift\nParchment - A paging view controller with a highly customizable menu. Built on UICollectionView, with support for custom layouts and infinite data sources.\nContextMenu - An iOS context menu UI inspired by Things 3.\nPanels - Panels is a framework to easily add sliding panels to your application.\nUIMenuScroll - Creating the horizontal swiping navigation how on Facebook Messenger.\nCircleBar - \ud83d\udd36 A fun, easy-to-use tab bar navigation controller for iOS.\nSPLarkController - Settings screen with buttons and switches.\n\nNavigation Bar\n\nHidingNavigationBar - Easily hide and show a view controller's navigation bar (and tab bar) as a user scrolls\nKMNavigationBarTransition - A drop-in universal library helps you to manage the navigation bar styles and makes transition animations smooth between different navigation bar styles while pushing or popping a view controller for all orientations.\nLTNavigationBar - UINavigationBar Category which allows you to change its appearance dynamically\nBusyNavigationBar - A UINavigationBar extension to show loading effects\nKDInteractiveNavigationController - A UINavigationController subclass that support pop interactive UINavigationbar with hidden or show.\nAMScrollingNavbar - Scrollable UINavigationBar that follows the scrolling of a UIScrollView\nNavKit - Simple and integrated way to customize navigation bar experience on iOS app.\nRainbowNavigation - An easy way to change backgroundColor of UINavigationBar when Push & Pop\nTONavigationBar - A simple subclass that adds the ability to set the navigation bar background to 'clear' and gradually transition it visibly back in, similar to the effect in the iOS Music app.\n\nPickerView\n\nActionSheetPicker-3.0 - Quickly reproduce the dropdown UIPickerView / ActionSheet functionality on iOS.\nPickerView - A customizable alternative to UIPickerView in Swift.\nDatePickerDialog - Date picker dialog for iOS\nCZPicker - A picker view shown as a popup for iOS.\nAIDatePickerController - \ud83d\udcc5 UIDatePicker modally presented with iOS 7 custom transitions.\nCountryPicker - \ud83d\udcc5 UIPickerView with Country names flags and phoneCodes\nMcPicker - A customizable, closure driven UIPickerView drop-in solution with animations that is rotation ready.\nMandoline - An iOS picker view to serve all your \"picking\" needs\nD2PDatePicker - Elegant and Easy-to-Use iOS Swift Date Picker\nCountryPickerView- A simple, customizable view for efficiently collecting country information in iOS apps\nplanet - A country picker\nMICountryPicker - Swift country picker with search option.\nADDatePicker - A fully customizable iOS Horizontal PickerView library, written in pure swift.\nSKCountryPicker - A simple, customizable Country picker for picking country or dialing code.\n\nPopup\n\nPopupKit - A simple and flexible class for presenting custom views as a popup in iOS and tvOS, maintained from KLCPopup.\nMMPopupView - Pop-up based view(e.g. alert sheet), can easily customize.\nSTPopup - STPopup provides a UINavigationController in popup style, for both iPhone and iPad.\nNMPopUpView - Simple iOS class for showing nice popup windows. Swift and Objective-C versions available.\nPopupController - A customizable controller for showing temporary popup view.\nSubscriptionPrompt - Subscription View Controller like the Tinder uses\nPresentr - Wrapper for custom ViewController presentations in iOS 8+\nPopupDialog - A simple, customizable popup dialog for iOS written in Swift. Replaces UIAlertControllers alert style.\nSelectionDialog - Simple selection dialog.\nAZDialogViewController - A highly customizable alert dialog controller that mimics Snapchat's alert dialog.\nMIBlurPopup - MIBlurPopup let you create amazing popups with a blurred background.\nLNPopupController - a framework for presenting view controllers as popups of other view controllers, much like the Apple Music and Podcasts apps.\nPopupWindow - PopupWindow is a simple Popup using another UIWindow in Swift.\nSHPopup - SHPopup is a simple lightweight library for popup view.\nPopover - Popover is a balloon library like Facebook app. It is written in pure swift.\nSwiftEntryKit - A highly customizable popups, alerts and banners presenter for iOS. It offers various presets and is written in pure Swift.\nFFPopup - \u26e9FFPopup is a lightweight library for presenting custom views as a popup.\n\nProgressView\n\nProgressMeter - Display the progress on a meter with customized annotations for iOS developed in Swift\nGradientCircularProgress - Customizable progress indicator library in Swift.\n\nPull to Refresh\n\nDGElasticPullToRefresh - Elastic pull to refresh for iOS developed in Swift\nPullToBounce - Animated \"Pull To Refresh\" Library for UIScrollView.\nSVPullToRefresh - Give pull-to-refresh & infinite scrolling to any UIScrollView with 1 line of code. http://samvermette.com/314\nUzysAnimatedGifPullToRefresh - Add PullToRefresh using animated GIF to any scrollView with just simple code\nPullToRefreshCoreText - PullToRefresh extension for all UIScrollView type classes with animated text drawing style\nBOZPongRefreshControl - A pull-down-to-refresh control for iOS that plays pong, originally created for the MHacks III iOS app\nCBStoreHouseRefreshControl - Fully customizable pull-to-refresh control inspired by Storehouse iOS app\nSurfingRefreshControl - Inspired by CBStoreHouseRefreshControl.Customizable pull-to-refresh control,written in pure Swift\nmntpulltoreact - One gesture, many actions. An evolution of Pull to Refresh.\nADChromePullToRefresh - Chrome iOS app style pull to refresh with multiple actions.\nBreakOutToRefresh - A playable pull to refresh view using SpriteKit.\nMJRefresh An easy way to use pull-to-refresh.\nHTPullToRefresh - Easily add vertical and horizontal pull to refresh to any UIScrollView. Can also add multiple pull-to-refesh views at once.\nPullToRefreshSwift - iOS Simple Cool PullToRefresh Library. It is written in pure swift.\nGIFRefreshControl - GIFRefreshControl is a pull to refresh that supports GIF images as track animations.\nReplaceAnimation - Pull-to-refresh animation in UICollectionView with a sticky header flow layout, written in Swift\nPullToMakeSoup - Custom animated pull-to-refresh that can be easily added to UIScrollView\nRainyRefreshControl - Simple refresh control for iOS inspired by concept.\nESPullToRefresh - Customisable pull-to-refresh, including nice animation on the top\nCRRefresh - An easy way to use pull-to-refresh.\nKafkaRefresh - Highly scalable, custom, multi-style refresh framework.\n\nRating Stars\n\nFloatRatingView - Whole, half or floating point ratings control written in Swift\nTTGEmojiRate - An emoji-liked rating view for iOS, implemented in Swift.\nStarryStars - StarryStars is iOS GUI library for displaying and editing ratings\nCosmos - A star rating control for iOS / Swift\nHCSStarRatingView - Simple star rating view for iOS written in Objective-C\nMBRateApp - A groovy app rate stars screen for iOS written in Swift\nRPInteraction - Review page interaction - handy and pretty way to ask for review.\n\nScrollView\n\nScrollingFollowView - ScrollingFollowView is a simple view which follows UIScrollView scrolling.\nUIScrollView-InfiniteScroll - UIScrollView infinite scroll category.\nGoAutoSlideView - GoAutoSlideView extends UIScrollView by featuring infinitely and automatically slide.\nAppStoreStyleHorizontalScrollView - App store style horizontal scroll view.\nPullToDismiss - You can dismiss modal viewcontroller by pulling scrollview or navigationbar in Swift.\nSpreadsheetView - Full configurable spreadsheet view user interfaces for iOS applications. With this framework, you can easily create complex layouts like schedule, gantt chart or timetable as if you are using Excel.\nVegaScroll - VegaScroll is a lightweight animation flowlayout for UICollectionView completely written in Swift 4, compatible with iOS 11 and Xcode 9\nShelfView-iOS - iOS custom view to display books on shelf\nSlideController - SlideController is simple and flexible UI component completely written in Swift. It is a nice alternative for UIPageViewController built using power of generic types.\nCrownControl - Inspired by the Apple Watch Digital Crown, CrownControl is a tiny accessory view that enables scrolling through scrollable content without lifting your thumb.\nSegementSlide - Multi-tier UIScrollView nested scrolling solution.\n\nSegmented Control\n\nBetterSegmentedControl - An easy to use, customizable replacement for UISegmentedControl & UISwitch.\nLUNSegmentedControl - Customizable segmented control with interactive animation.\nAKASegmentedControl - \ud83c\udf6b Fully customizable Segmented Control for iOS.\nTwicketSegmentedControl - Custom UISegmentedControl replacement for iOS, written in Swift.\nSJFluidSegmentedControl - A segmented control with custom appearance and interactive animations. Written in Swift 3.0.\nHMSegmentedControl - A drop-in replacement for UISegmentedControl mimicking the style of the segmented control used in Google Currents and various other Google products.\nYUSegment - A customizable segmented control for iOS. Supports both text and image.\nMultiSelectSegmentedControl - adds Multiple-Selection to the standard UISegmentedControl.\nDynamicMaskSegmentSwitch - A segment switcher with dynamic text mask effect\nPinterestSegment - A Pinterest-like segment control with masking animation.\nRotary - A customisable rotary wheel composed of selectable segments.\nDGRunkeeperSwitch - Runkeeper design switch control (two part segment control)\n\nSlider\n\nVolumeControl - Custom volume control for iPhone featuring a well-designed round slider.\nWESlider - Simple and light weight slider with chapter management\nIntervalSlider - IntervalSlider is a slider library like ReutersTV app. written in pure swift.\nRangeSlider - A simple range slider made in Swift\nCircleSlider - CircleSlider is a Circular slider library. written in pure Swift.\nMARKRangeSlider - A custom reusable slider control with 2 thumbs (range slider).\nASValueTrackingSlider - A UISlider subclass that displays the slider value in a popup view\nTTRangeSlider - A slider, similar in style to UISlider, but which allows you to pick a minimum and maximum range.\nMMSegmentSlider - Customizable animated slider for iOS.\nStepSlider - StepSlider its custom implementation of slider such as UISlider for preset integer values.\nJDSlider - An iOS Slider written in Swift.\nSnappingSlider - A beautiful slider control for iOS built purely upon Swift\nMTCircularSlider - A feature-rich circular slider control.\nVerticalSlider - VerticalSlider is a vertical implementation of the UISlider slider control.\nCircularSlider - A powerful Circular Slider. It's written in Swift, it's 100% IBDesignable and all parameters are IBInspectable.\nHGCircularSlider - A custom reusable circular slider control for iOS application.\nRangeSeekSlider - A customizable range slider for iOS.\nSectionedSlider - Control Center Slider.\nMultiSlider - UISlider clone with multiple thumbs and values, optional snap intervals, optional value labels.\nAGCircularPicker - AGCircularPicker is helpful component for creating a controller aimed to manage any calculated parameter.\nFluid Slider - A slider widget with a popup bubble displaying the precise value selected.\n\nSplash View\n\nCBZSplashView - Twitter style Splash Screen View. Grows to reveal the Initial view behind.\nSKSplashView - Create custom animated splash views similar to the ones in the Twitter, Uber and Ping iOS app.\nRevealingSplashView - A Splash view that animates and reveals its content, inspired by Twitter splash\n\nStatus Bar\n\nBartinter - Status bar tint depending on content behind, updates dynamically.\n\nStepper\n\nPFStepper - May be the most elegant stepper you have ever had!\nValueStepper - A Stepper object that displays its value.\nGMStepper - A stepper with a sliding label in the middle.\nbarceloneta - The right way to increment/decrement values with a simple gesture on iOS.\nSnappingStepper - An elegant alternative to the UIStepper written in Swift\nSMNumberWheel - A custom control written in Swift, which is ideal for picking numbers very fast but yet very accurate using a rotating wheel\n\nSwitch\n\nAnimatedSwitch - UISwitch which paints over the parent view with the color in Swift.\nViralSwitch - A UISwitch that infects its superview with its tint color.\nJTMaterialSwitch - A customizable switch UI with ripple effect and bounce animations, inspired from Google's Material Design.\nTKSwitcherCollection - An animate switch collection\nSevenSwitch - iOS7 style drop in replacement for UISwitch.\nPMZSwitch - Yet another animated toggle\nSwitcher - Swift - Custom UISwitcher with animation when change status\nRAMPaperSwitch - RAMPaperSwitch is a Swift module which paints over the parent view when the switch is turned on.\nAIFlatSwitch - A flat component alternative to UISwitch on iOS\nSwitch - An iOS switch control implemented in Swift with full Interface Builder support.\n\nTab Bar\n\nESTabBarController - A tab bar controller for iOS that allows highlighting buttons and setting custom actions to them.\nGooeyTabbar - A gooey effect tabbar\nanimated-tab-bar - RAMAnimatedTabBarController is a Swift module for adding animation to tabbar items.\nFoldingTabBar.iOS - Folding Tab Bar and Tab Bar Controller\nGGTabBar - Another UITabBar & UITabBarController (iOS Tab Bar) replacement, but uses Auto Layout for arranging it's views hierarchy.\nadaptive-tab-bar - AdaptiveController is a 'Progressive Reduction' Swift module for adding custom states to Native or Custom iOS UI elements\nPager - Easily create sliding tabs with Pager\nXLPagerTabStrip - Android PagerTabStrip for iOS.\nTabPageViewController - Paging view controller and scroll tab view.\nTabDrawer - Customizable TabBar UI element that allows you to run a block of code upon TabBarItem selection, written in Swift\nSwipeViewController - SwipeViewController is a Swift modification of RKSwipeBetweenViewControllers - navigate between pages / ViewControllers\nColorMatchTabs - Interesting way to display tabs\nBATabBarController - A TabBarController with a unique animation for selection\nScrollPager - A scroll pager that displays a list of tabs (segments) and manages paging between given views\nSegmentio - Animated top/bottom segmented control written in Swift.\nKYWheelTabController - KYWheelTabController is a subclass of UITabBarController.It displays the circular menu instead of UITabBar.\nSuperBadges - Add emojis and colored dots as badges for your Tab Bar buttons\nAZTabBarController - A custom tab bar controller for iOS written in Swift 3.0\nMiniTabBar - A clean simple alternative to the UITabBar\nSwipeableTabBarController - UITabBarController with swipe interaction between its tabs.\nSMSwipeableTabView - Swipeable Views with Tabs (Like Android SwipeView With Tabs Layout)\nTabman - A powerful paging view controller with indicator bar for iOS.\nWormTabStrip Beatiful ViewPager For iOS written in Swift  (inspired by Android SmartTabLayout)\nSSCustomTabMenu Simple customizable iOS bottom menu with Tabbar.\nSmoothTab - Smooth customizable tabs for iOS apps.\nExpandedTabBar - Very creative designed solution for \"more\" items in UITabBarController\n\nTable View / Collection View\nTable View\n\nMGSwipeTableCell - UITableViewCell subclass that allows to display swippable buttons with a variety of transitions.\nYXTPageView - A PageView, which supporting scrolling to transition between a UIView and a UITableView.\nConfigurableTableViewController - Typed, yet Flexible Table View Controller https://holko.pl/2016/01/05/typed-table-view-controller/\nLightning-Table - A declarative api for working with UITableView.\nStatic - Simple static table views for iOS in Swift.\nAMWaveTransition - Custom transition between viewcontrollers holding tableviews.\nSWTableViewCell - An easy-to-use UITableViewCell subclass that implements a swippable content view which exposes utility buttons (similar to iOS 7 Mail Application)\nZYThumbnailTableView - a TableView have thumbnail cell only, and you can use gesture let it expands other expansionView, all diy\nBWSwipeRevealCell - A Swift library for swipeable table cells\npreview-transition - PreviewTransition is a simple preview gallery controller\nQuickTableViewController - A simple way to create a UITableView for settings in Swift.\nTableKit - Type-safe declarative table views with Swift\nVBPiledView - Simple and beautiful stacked UIView to use as a replacement for an UITableView, UIImageView or as a menu\nVTMagic - VTMagic is a page container library for iOS.\nMCSwipeTableViewCell - \ud83d\udc46 Convenient UITableViewCell subclass that implements a swippable content to trigger actions (similar to the Mailbox app).\nMYTableViewIndex - A pixel perfect replacement for UITableView section index, written in Swift\nios-dragable-table-cells - Support for drag-n-drop of UITableViewCells in a navigation hierarchy of view controllers. You drag cells by tapping and holding them.\nBohr - Bohr allows you to set up a settings screen for your app with three principles in mind: ease, customization and extensibility.\nSwiftReorder - Add drag-and-drop reordering to any table view with just a few lines of code. Robust, lightweight, and completely customizable. [e]\nHoverConversion - HoverConversion realized vertical paging with UITableView. UIViewController will be paging when reaching top or bottom of UITableView contentOffset.\nTableViewDragger - A cells of UITableView can be rearranged by drag and drop.\nFlexibleTableViewController - Swift library of generic table view controller with external data processing of functionality, like determine cell's reuseIdentifier related to indexPath, configuration of requested cell for display and cell selection handler\nCascadingTableDelegate - A no-nonsense way to write cleaner UITableViewDelegate and UITableViewDataSource in Swift.\nTimelineTableViewCell - Simple timeline view implemented by UITableViewCell written in Swift 3.0.\nRHPreviewCell - I envied so much Spotify iOS app this great playlist preview cell. Now you can give your users ability to quick check \"what content is hidden under your UITableViewCell\".\nTORoundedTableView - A subclass of UITableView that styles it like Settings.app on iPad\nTableFlip - A simpler way to do cool UITableView animations! (\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b\nDTTableViewManager - Protocol-oriented UITableView management, powered by generics and associated types.\nSwipeCellKit - Swipeable UITableViewCell based on the stock Mail.app, implemented in Swift.\nReverseExtension - A UITableView extension that enables cell insertion from the bottom of a table view.\nSelectionList - Simple single-selection or multiple-selection checklist, based on UITableView.\nAZTableViewController - Elegant and easy way to integrate pagination with dummy views.\nSAInboxViewController - UIViewController subclass inspired by \"Inbox by google\" animated transitioning.\nStaticTableViewController - Dynamically hide / show cells of static UITableViewController.\nOKTableViewLiaison - Framework to help you better manage UITableView configuration.\nThunderTable - A simple declarative approach to UITableViewController management using a protocol-based approach.\n\nCollection View\n\nDwifft - Swift Diff\nMEVFloatingButton - An iOS drop-in UITableView, UICollectionView and UIScrollView superclass category for showing a customizable floating button on top of it.\nPreheat - Automates prefetching of content in UITableView and UICollectionView\nDisplaySwitcher - Custom transition between two collection view layouts\nReusable - A Swift mixin for UITableViewCells and UICollectionViewCells\nSapporo - Cellmodel-driven collectionview manager\nStickyCollectionView-Swift - UICollectionView layout for presenting of the overlapping cells.\nTLIndexPathTools - TLIndexPathTools is a small set of classes that can greatly simplify your table and collection views.\nIGListKit - A data-driven UICollectionView framework for building fast and flexible lists.\nFlexibleCollectionViewController - Swift library of generic collection view controller with external data processing of functionality, like determine cell's reuseIdentifier related to indexPath, configuration of requested cell for display and cell selection handler etc\nASCollectionView - A Swift collection view inspired by Airbnb.\nGLTableCollectionView - Netflix and App Store like UITableView with UICollectionView\nEditDistance - Incremental update tool for UITableView and UICollectionView\nSwiftSpreadSheet - Spreadsheet CollectionViewLayout in Swift. Fully customizable.\nGenericDataSource - A generic small reusable components for data source implementation for UITableView/UICollectionView in Swift.\nPagingView - Infinite paging, Smart auto layout, Interface of similar to UIKit.\nPJFDataSource - PJFDataSource is a small library that provides a simple, clean architecture for your app to manage its data sources while providing a consistent user interface for common content states (i.e. loading, loaded, empty, and error).\nDataSources - Type-safe data-driven List-UI Framework. (We can also use ASCollectionNode)\nKDDragAndDropCollectionView - Dragging & Dropping data across multiple UICollectionViews.\nSectionScrubber - A component to quickly scroll between collection view sections\nCollectionKit - A modern Swift framework for building reusable data-driven collection components.\nAZCollectionViewController - Easy way to integrate pagination with dummy views in CollectionView, make Instagram Discover within minutes.\nCampcotCollectionView - CampcotCollectionView is a custom UICollectionView written in Swift that allows to expand and collapse sections. It provides a simple API to manage collection view appearance.\nStefan - A guy that helps you manage collections and placeholders in easy way.\nParade - Parallax Scroll-Jacking Effects Engine for iOS / tvOS.\nMSPeekCollectionViewDelegateImplementation - A custom paging behavior that peeks the previous and next items in a collection view.\nSimpleSource - Easy and type-safe iOS table and collection views in Swift.\nConv - Conv smart represent UICollectionView data structure more than UIKit.\nCarbon - \ud83d\udeb4 A declarative library for building component-based user interfaces in UITableView and UICollectionView.\nThunderCollection - A simple declarative approach to UICollectionViewController management using a protocol-based approach.\nDiffableDataSources - A library for backporting UITableView/UICollectionViewDiffableDataSource.\n\nExpandable Cell\n\nfolding-cell - FoldingCell is an expanding content cell inspired by folding paper material\nAEAccordion - UITableViewController with accordion effect (expand / collapse cells).\nThreeLevelAccordian - This is a customisable three level accordian with options for adding images and accessories images.\nYNExpandableCell - Awesome expandable, collapsible tableview cell for iOS.\nSavory - A swift accordion view implementation.\nExpyTableView - Make your table view expandable just by implementing one method.\nFTFoldingPaper - Emulates paper folding effect. Can be integrated with UITableView or used with other UI components.\nCollapsibleTableSectionViewController - A swift library to support collapsible sections in a table view.\nExpandableCell - Fully refactored YNExapnadableCell with more concise, bug free. Awesome expandable, collapsible tableview cell for iOS.\nexpanding-collection - ExpandingCollection is a card peek/pop controller\n\nHeader\n\nParallaxTableViewHeader - Parallax scrolling effect on UITableView header view when a tableView is scrolled.\nCSStickyHeaderFlowLayout - UICollectionView replacement of UITableView. Do even more like Parallax Header, Sticky Section Header.\nGSKStretchyHeaderView - Configurable yet easy to use stretchy header view for UITableView and UICollectionView.\n\nPlaceholder\n\nDZNEmptyDataSet - A drop-in UITableView/UICollectionView superclass category for showing empty datasets whenever the view has no content to display.\nHGPlaceholders - Nice library to show and create placeholders and Empty States for any UITableView/UICollectionView in your project\nListPlaceholder - ListPlaceholder is a swift library allows you to easily add facebook style animated loading placeholder to your tableviews or collection views\nWLEmptyState - A component that lets you customize the view when the dataset of UITableView is empty.\n\nCollection View Layout\n\nCHTCollectionViewWaterfallLayout - The waterfall (i.e., Pinterest-like) layout for UICollectionView.\nFMMosaicLayout - A drop-in mosaic collection view layout with a focus on simple customizations.\nmosaic-layout - A mosaic collection view layout inspired by Lightbox's Algorithm, written in Swift\nTLLayoutTransitioning - Enhanced transitioning between UICollectionView layouts in iOS.\nCenteredCollectionView - A lightweight UICollectionViewLayout that 'pages' and centers it's cells \ud83c\udfa1 written in Swift.\nCollectionViewSlantedLayout - UICollectionViewLayout with slanted content\nSquareMosaicLayout - An extandable mosaic UICollectionViewLayout with a focus on extremely flexible customizations\nBouncyLayout - BouncyLayout is a collection view layout that makes your cells bounce.\nAZSafariCollectionViewLayout - AZSafariCollectionViewLayout is replica of safari browser history page layout. very easy to use, IBInspectable are given for easy integration.\n-ollectionView, make Instagram Discover within minutes.\nBlueprints - A framework that is meant to make your life easier when working with collection view flow layouts.\nUICollectionViewSplitLayout - UICollectionViewSplitLayout makes collection view more responsive.\nSwinflate -  A bunch of layouts providing light and seamless experiences in your CollectionView.\n\nTag\n\nPARTagPicker - This pod provides a view controller for choosing and creating tags in the style of wordpress or tumblr.\nAMTagListView - UIScrollView subclass that allows to add a list of highly customizable tags.\nTagCellLayout - UICollectionView layout for Tags with Left, Center & Right alignments.\nTTGTagCollectionView - Show simple text tags or custom tag views in a vertical scrollable view.\nTagListView - Simple and highly customizable iOS tag list view, in Swift.\nRKTagsView - Highly customizable iOS tags view (like NSTokenField). Supports editing, multiple selection, Auto Layout and much more.\nWSTagsField - An iOS text field that represents different Tags.\nAKMaskField - AKMaskField is UITextField subclass which allows enter data in the fixed quantity and in the certain format.\nYNSearch - Awesome fully customizable search view like Pinterest written in Swift 3.\nSFFocusViewLayout - UICollectionViewLayout with focused content.\n\nTextField & TextView\n\nJVFloatLabeledTextField - UITextField subclass with floating labels.\nARAutocompleteTextView - subclass of UITextView that automatically displays text suggestions in real-time. Perfect for email Textviews.\nIQDropDownTextField - TextField with DropDown support using UIPickerView.\nUITextField-Shake - UITextField category that adds shake animation. Also with Swift version\nHTYTextField - A UITextField with bouncy placeholder.\nMVAutocompletePlaceSearchTextField - A drop-in Autocompletion control for Place Search like Google Places, Uber, etc.\nAutocompleteField - Add word completion to your UITextFields.\nRSKGrowingTextView - A light-weight UITextView subclass that automatically grows and shrinks.\nRSKPlaceholderTextView - A light-weight UITextView subclass that adds support for placeholder.\nStatefulViewController - Placeholder views based on content, loading, error or empty states.\nMBAutoGrowingTextView - An auto-layout base UITextView subclass which automatically grows with user input and can be constrained by maximal and minimal height - all without a single line of code.\nTextFieldEffects - Custom UITextFields effects inspired by Codrops, built using Swift.\nReel Search - RAMReel is a controller that allows you to choose options from a list.\nMLPAutoCompleteTextField - a subclass of UITextField that behaves like a typical UITextField with one notable exception: it manages a drop down table of autocomplete suggestions that update as the user types.\nSkyFloatingLabelTextField - A beautiful and flexible text field control implementation of \"Float Label Pattern\". Written in Swift.\nVMaskTextField - VMaskTextField is a library which create an input mask for iOS.\nTJTextField - UITextField with underline and left image.\nNextGrowingTextView - The next in the generations of 'growing textviews' optimized for iOS 7 and above.\nRPFloatingPlaceholders - UITextField and UITextView subclasses with placeholders that change into floating labels when the fields are populated with text.\nCurrencyTextField - UITextField that automatically formats text to display in the currency format.\nUITextField-Navigation - UITextField-Navigation adds next, previous and done buttons to the keyboard for your UITextFields.\nAutoCompleteTextField - Auto complete with suggestion textfield.\nPLCurrencyTextField - UITextField that support currency in the right way.\nPasswordTextField - A custom TextField with a switchable icon which shows or hides the password and enforce good password policies.\nAnimatedTextInput - Animated UITextField and UITextView replacement for iOS.\nKMPlaceholderTextView - A UITextView subclass that adds support for multiline placeholder written in Swift.\nNxEnabled - Library which allows you binding enabled property of button with textable elements (TextView, TextField).\nAwesomeTextField - Awesome TextField is a nice and simple library for iOS. It's highly customisable and easy-to-use tool. Works perfectly for any registration or login forms in your app.\nModernSearchBar - The famous iOS search bar with auto completion feature implemented.\nSelectableTextView - A text view that supports selection and expansion.\nCBPinEntryView - A customisable view written in Swift 4.2 for any pin, code or password entry. Supports one time codes in iOS 12.\nGrowingTextView - An UITextView in Swift3 and Swift2.3. Support auto growing, placeholder and length limit.\nDTTextField - DTTextField is a custom textfield with floating placeholder and error label in Swift3.0.\nTextFieldCounter - UITextField character counter with lovable UX.\nRSFloatInputView - A Float Input View with smooth animation and supporting icon and seperator written with Swift.\nTaniwhaTextField - TaniwhaTextField is a lightweight and beautiful swift textfield framework. It has float label pattern, and also you can highly customise it.\nInstantSearch iOS - A library of widgets and helpers to build instant-search applications on iOS.\nSearchTextField - UITextField subclass with autocompletion suggestions list.\nPYSearch - An elegant search controller which replaces the UISearchController for iOS (iPhone & iPad).\nstyled-text - Declarative text styles and streamlined Dynamic Type support for iOS.\nTweeTextField - Lightweight set of text fields with nice animation and functionality.\nMeasurementTextField - UITextField-based control for (NS)Measurement values input.\nVENTokenField - Easy-to-use token field that is used in the Venmo app.\nALTextInputBar - An auto growing text input bar for messaging apps.\nTagging - TextView that provides easy to use tagging feature for Mention or Hashtag.\nInputBarAccessoryView - A simple and easily customizable InputAccessoryView for making powerful input bars with autocomplete and attachments.\n\nUIPageControl\n\nPageControl - A nice, animated UIPageControl alternative.\nPageControls - This is a selection of custom page controls to replace UIPageControl, inspired by a dribbble found here.\nCHIPageControl - A set of cool animated page controls to replace boring UIPageControl.\nPage-Control - Beautiful, animated and highly customizable UIPageControl alternative.\n\nWeb View\n\nOtafuku - Otafuku provides utility classes to use WKWebView in Swift.\nSwiftWebVC - A drop-in inline browser for your Swift iOS app.\nSVWebViewController - A drop-in inline browser for your iOS app.\nPTPopupWebView - PTPopupWebView is a simple and useful WebView for iOS, which can be popup and has many of the customized item.\n\nUtility\n\nUnderscore.m - A DSL for Data Manipulation.\nXExtensionItem - Easier sharing of structured data between iOS applications and share extensions.\nReflectableEnum - Reflection for enumerations in Objective-C.\nObjectiveSugar - ObjectiveC additions for humans. Ruby style.\nOpinionatedC - Because Objective-C should have inherited more from Smalltalk.\nSwiftRandom - Generator for random data.\nRandomKit - Random data generation in Swift.\nYOLOKit - Getting square objects down round holes.\nEZSwiftExtensions - \ud83d\ude0f How Swift standard types and classes were supposed to work.\nPantry - The missing light persistence layer for Swift.\nSwiftParsec - A parser combinator library written in the Swift programming language.\nOrderedSet - A Swift collection of unique, ordered objects.\nDatez - Swift library for dealing with NSDate, NSCalendar, and NSDateComponents.\nBFKit - An Objective-C collection of useful classes to develop Apps faster.\nBFKit-Swift - A Swift collection of useful classes to develop Apps faster.\nScale - Unit converter in Swift (available via CocoaPods).\nStandard Template Protocols - Protocols for your every day iOS needs.\nTimeLord - Easy DateTime (NSDate) management in Swift.\nAppVersionMonitor - Monitor iOS app version easily.\nSugar - Something sweet that goes great with your Cocoa.\nThen - \u2728 Super sweet syntactic sugar for Swift initializers.\nKvitto - App Store Receipt Validation.\nNotificationz - Helping you own NSNotificationCenter in Swift.\nSwiftFoundation - Cross-Platform, Protocol-Oriented Programming base library to complement the Swift Standard Library. (Pure Swift, Supports Linux).\nlibextobjc - A Cocoa library to extend the Objective-C programming language.\nVersionTrackerSwift - Track which versions of your app a user has previously installed..\nDeviceGuru - DeviceGuru is a simple lib (Swift) to know the exact type of the device, e.g. iPhone 6 or iPhone 6s.\nAEAppVersion - Simple and Lightweight App Version Tracking for iOS written in Swift.\nBlocksKit - The Objective-C block utilities you always wish you had.\nSwiftyUtils - All the reusable code that we need in each project.\nRateLimit - Simple utility for only executing code every so often.\nOutlets - Utility functions for validating IBOutlet and IBAction connections.\nEasyAbout - A way to easily add CocoaPods licenses and App Version to your iOS App using the Settings Bundle.\nValidated - A Swift \u03bc-Library for Somewhat Dependent Types.\nCent - Extensions for Swift Standard Types and Classes.\nAssistantKit - Easy way to detect iOS device properties, OS versions and work with screen sizes. Powered by Swift.\nSwiftLinkPreview - It makes a preview from an url, grabbing all the information such as title, relevant texts and images.\nBundleInfos - Simple getter for Bundle informations. like short version from bundle.\nYAML.framework - Proper YAML support for Objective-C based on LibYAML.\nReadabilityKit - Metadata extractor for news, articles and full-texts in Swift.\nMissionControl-iOS - Super powerful remote config utility written in Swift (iOS, watchOS, tvOS, macOS).\nSwiftTweaks - Tweak your iOS app without recompiling!\nUnsupportedOSVersionAlert - Alerts users with a popup if they use an app with an unsupported version of iOS (e.g. iOS betas).\nSwiftSortUtils - This library takes a shot at making sorting in Swift more pleasant. It also allows you to reuse your old NSSortDescriptor instances in Swift.\nRetry - Haven't you wished for try to sometimes try a little harder? Meet retry .\nObjectiveKit - Swift-friendly API for Objective C runtime functions.\nMoyaSugar -  Syntactic sugar for Moya.\nSwifterSwift -  A handy collection of more than 400 native Swift 4 extensions to boost your productivity.\nEject - An eject button for Interface Builder to generate swift code.\nContactsWrapper - Easy to use wrapper for both contacts and contacts group with Objective-C.\nXestiMonitors - An extensible monitoring framework written in Swift.\nOpenSourceController - The simplest way to display the libraries licences used in your application.\nApp-Update-Tracker - Easily detect and run code upon app installation or update.\nExtensionalSwift - Useful swift extensions in one place.\nInAppSettingsKit - This iOS framework allows settings to be in-app in addition to or instead of being in the Settings app.\nMMWormhole - Message passing between iOS apps and extensions.\nDefaultStringConvertible - A default CustomStringConvertible implementation for Swift types.\nFluxCapacitor - FluxCapacitor makes implementing Flux design pattern easily with protocols and typealias.\nVTAcknowledgementsViewController - Ready to use \u201cAcknowledgements\u201d/\u201cLicenses\u201d/\u201cCredits\u201d view controller for CocoaPods.\nClosures - Swifty closures for UIKit and Foundation.\nWhatsNew - Showcase new features after an app update similar to Pages, Numbers and Keynote.\nMKUnits - Unit conversion library for Swift.\nActionClosurable - Extensions which helps to convert objc-style target/action to swifty closures.\nios_system - Drop-in replacement for system() in iOS programs.\nSwiftProvisioningProfile - Parse provisioning profiles into Swift models.\nOnce - Minimalist library to manage one-off operations.\nZamzamKit - A collection of micro utilities and extensions for Standard Library, Foundation and UIKit.\nDuctTape - KeyPath dynamicMemberLookup based syntax sugar for swift.\n\nUser Consent\n\nSmartlookConsentSDK - Open source SDK which provides a configurable control panel where user can select their privacy options and store the user preferences for the app.\n\nVR\n\nVR Toolkit iOS - A sample project that provides the basics to create an interactive VR experience on iOS.\n360 VR Player - A open source, ad-free, native and universal 360 degree panorama video player for iOS.\nsimple360player - Free & ad-free 360 VR Video Player. Flat or Stereoscopic. In Swift 2.\nSwifty360Player - iOS 360-degree video player streaming from an AVPlayer with Swift.\n\nWalkthrough / Intro / Tutorial\n\nOnboard - Easily create a beautiful and engaging onboarding experience with only a few lines of code.\nEAIntroView - Highly customizable drop-in solution for introduction views.\nMYBlurIntroductionView - A super-charged version of MYIntroductionView for building custom app introductions and tutorials.\nBWWalkthrough - A class to build custom walkthroughs for your iOS App.\nGHWalkThrough - A UICollectionView backed drop-in component for introduction views.\nICETutorial - A nice tutorial like the one introduced in the Path 3.X App.\nJazzHands - Jazz Hands is a simple keyframe-based animation framework for UIKit. Animations can be controlled via gestures, scroll views, KVO, or ReactiveCocoa.\nRazzleDazzle - A simple keyframe-based animation framework for iOS, written in Swift. Perfect for scrolling app intros.\nInstructions - Easily add customizable coach marks into you iOS project.\nSwiftyWalkthrough - The easiest way to create a great walkthrough experience in your apps, powered by Swift.\nGecco - Spotlight view for iOS.\nVideoSplashKit - VideoSplashKit - UIViewController library for creating easy intro pages with background videos.\nPresentation - Presentation helps you to make tutorials, release notes and animated pages.\nAMPopTip - An animated popover that pops out a given frame, great for subtle UI tips and onboarding.\nAlertOnboarding - A simple and handsome AlertView for onboard your users in your amazing world.\nEasyTipView - Fully customisable tooltip view in Swift.\npaper-onboarding - PaperOnboarding is a material design slider.\nInfoView - Swift based simple information view with pointed arrow.\nIntro - An iOS framework to easily create simple animated walkthrough, written in Swift.\nAwesomeSpotlightView - Tool to create awesome tutorials or educate user to use application. Or just highlight something on screen. Written in Swift.\nSwiftyOnboard - A simple way to add onboarding to your project.\nWVWalkthroughView - Utility to easily create walkthroughs to help with user onboarding.\nSwiftyOverlay - Easy and quick way to show intro / instructions over app UI without any additional images in real-time!\nSwiftyOnboardVC - Lightweight walkthrough controller thats uses view controllers as its subviews making the customization endless.\nMinamo - Simple coach mark library written in Swift.\nMaterial Showcase iOS - An elegant and beautiful showcase for iOS apps.\nWhatsNewKit - Showcase your awesome new app features.\nOnboardKit - Customisable user onboarding for your iOS app.\nConcentricOnboarding - SwiftUI library for a walkthrough or onboarding flow with tap actions.\n\nWebSocket\n\nSocketRocket - A conforming Objective-C WebSocket client library.\nsocket.io-client-swift - Socket.IO-client for iOS/macOS.\nSwiftWebSocket - High performance WebSocket client library for Swift, iOS and macOS.\nStarscream - Websockets in swift for iOS and macOS.\nSwiftSocket - simple socket library for apple swift lang.\nSocks - Pure-Swift Sockets: TCP, UDP; Client, Server; Linux, macOS.\nSwifterSockets - A collection of socket utilities in Swift for OS-X and iOS.\nSwift-ActionCableClient - ActionCable is a new WebSocket server being released with Rails 5 which makes it easy to add real-time features to your app.\nDNWebSocket - Object-Oriented, Swift-style WebSocket Library (RFC 6455) for Swift-compatible Platforms.\n\nProject setup\n\ncrafter - CLI that allows you to configure iOS project's template using custom DSL syntax, simple to use and quite powerful.\nliftoff - Another CLI for creating iOS projects.\namaro - iOS Boilerplate full of delights.\nchairs - Swap around your iOS Simulator Documents.\nSwiftPlate - Easily generate cross platform Swift framework projects from the command line.\nxcproj - Read and update Xcode projects.\nTuist - A tool to create, maintain and interact with Xcode projects at scale.\nSwiftKit - Start your next Open-Source Swift Framework.\n\nDependency / Package Manager\n\nCocoaPods - CocoaPods is the dependency manager for Objective-C projects. It has thousands of libraries and can help you scale your projects elegantly.\nXcode Maven - The Xcode Maven Plugin can be used in order to run Xcode builds embedded in a Maven lifecycle.\nCarthage - A simple, decentralized dependency manager for Cocoa.\nSWM (Swift Modules) - A package/dependency manager for Swift projects similar to npm (node.js package manager) or bower (browser package manager from Twitter). Does not require the use of Xcode.\nCocoaSeeds - Git Submodule Alternative for Cocoa.\nswift-package-manager - The Package Manager for the Swift Programming Language.\npunic - Clean room reimplementation of Carthage tool.\nRome - A cache tool for Carthage built frameworks.\nAthena - Gradle Plugin to enhance Carthage by uploading the archived frameworks into Maven repository, currently support only Bintray, Artifactory and Mavel local.\nAccio - A SwiftPM based dependency manager for iOS & Co. with improvements over Carthage.\n\nTools\n\nShark - Swift Script that transforms the .xcassets folder into a type safe enum.\nSBConstants - Generate a constants file by grabbing identifiers from storyboards in a project.\nR.swift - Tool to get strong typed, autocompleted resources like images, cells and segues in your Swift project.\nSwiftGen - A collection of Swift tools to generate Swift code (enums for your assets, storyboards, Localizable.strings and UIColors).\nBlade - Generate Xcode image catalogs for iOS / macOS app icons, universal images, and more.\nRetini - A super simple retina (2x, 3x) image converter.\nJazzy - Soulful docs for Swift & Objective-C.\nappledoc - ObjectiveC code Apple style documentation set generator.\nLaurine - Laurine - Localization code generator written in Swift. Sweet!\nStoryboardMerge - Xcode storyboards diff and merge tool.\nai2app - Creating AppIcon sets from Adobe Illustrator (all supported formats).\nViewMonitor - ViewMonitor can measure view positions with accuracy.\nabandoned-strings - Command line program that detects unused resource strings in an iOS or macOS application.\nswiftenv - swiftenv allows you to easily install, and switch between multiple versions of Swift.\nMisen - Script to support easily using Xcode Asset Catalog in Swift.\ngit-xcp - A Git plugin for versioning workflow of real-world Xcode project. fastlane's best friend.\nWatchdogInspector - Shows your current framerate (fps) in the status bar of your iOS app.\nCichlid - automatically delete the current project's DerivedData directories.\nDelta - Managing state is hard. Delta aims to make it simple.\nSwiftLintXcode - An Xcode plug-in to format your code using SwiftLint.\nXCSwiftr - An Xcode Plugin to convert Objective-C to Swift.\nSwiftKitten - Swift autocompleter for Sublime Text, via the adorable SourceKitten framework.\nKin - Have you ever found yourself undoing a merge due to a broken Xcode build? Then Kin is your tool. It will parse your project configuration file and detect errors.\nAVXCAssets-Generator - AVXCAssets Generator takes path for your assets images and creates appiconset and imageset for you in just one click.\nPeek - Take a Peek at your application.\nSourceKitten - An adorable little framework and command line tool for interacting with SourceKit.\nLocalizations - macOS app that manages localizations of Xcode projects.\nxcbuild - Xcode-compatible build tool.\nXcodeIssueGenerator - An executable that can be placed in a Run Script Build Phase that marks comments like // TODO: or // SERIOUS: as warnings or errors so they display in the Xcode Issue Navigator.\nSwiftCompilationPerformanceReporter - Generate automated reports for slow Swift compilation paths in specific targets.\nBuildTimeAnalyzer - Build Time Analyzer for Swift.\nDuration - A simple Swift package for measuring and reporting the time taken for operations.\nBenchmark - The Benchmark module provides methods to measure and report the time used to execute Swift code.\nMBAssetsImporter - Import assets from Panoramio or from your macOS file system with their metadata to your iOS simulator (Swift 2.0).\nRealm Browser - Realm Browser is a macOS utility to open and modify realm database files.\nSuperDelegate \u2013 SuperDelegate provides a clean application delegate interface and protects you from bugs in the application lifecycle.\nfastlane-plugin-appicon - Generate required icon sizes and iconset from a master application icon.\ninfer - A static analyzer for Java, C and Objective-C.\nPlayNow - Small app that creates empty Swift playground files and opens them with Xcode.\nXtrace - Trace Objective-C method calls by class or instance.\nxcenv - Groom your Xcode environment.\nplaygroundbook - Tool for Swift Playground books.\nEcno - Ecno is a task state manager built on top of UserDefaults in pure Swift 3.\nipanema - ipanema analyzes and prints useful information from .ipa file.\npxctest - Parallel XCTest - Execute XCTest suites in parallel on multiple iOS Simulators.\nIBM Swift Sandbox - The IBM Swift Sandbox is an interactive website that lets you write Swift code and execute it in a server environment \u2013 on top of Linux!\nFBSimulatorControl - A macOS library for managing and manipulating iOS Simulators\nNomad - Suite of command line utilities & libraries for sending APNs, create & distribute .ipa, verify In-App-Purchase receipt and more.\nCookiecutter - A template for new Swift iOS / tvOS / watchOS / macOS Framework project ready with travis-ci, cocoapods, Carthage, SwiftPM and a Readme file.\nSourcery - A tool that brings meta-programming to Swift, allowing you to code generate Swift code.\nAssetChecker \ud83d\udc6e - Keeps your Assets.xcassets files clean and emits warnings when something is suspicious.\nPlayAlways - Create Xcode playgrounds from your menu bar\nGDPerformanceView-Swift - Shows FPS, CPU usage, app and iOS versions above the status bar and report FPS and CPU usage via delegate.\nTraits - Library for a real-time design and behavior modification of native iOS apps without recompiling (code and interface builder changes are supported).\nStruct - A tool for iOS and Mac developers to automate the creation and management of Xcode projects.\nNori - Easier to apply code based style guide to storyboard.\nAttabench - Microbenchmarking app for Swift with nice log-log plots.\nGluten - Nano library to unify XIB and it's code.\nLicensePlist - A license list generator of all your dependencies for iOS applications.\nAppDevKit - AppDevKit is an iOS development library that provides developers with useful features to fulfill their everyday iOS app development needs.\nTweaks - An easy way to fine-tune, and adjust parameters for iOS apps in development.\nFengNiao - A command line tool for cleaning unused resources in Xcode.\nLifetimeTracker - Find retain cycles / memory leaks sooner.\nPlank - A tool for generating immutable model objects.\nLona - A tool for defining design systems and using them to generate cross-platform UI code, Sketch files, images, and other artifacts.\nXcodeGen - Command line tool that generates your Xcode project from a spec file and your folder structure.\niSimulator - iSimulator is a GUI utility to control the Simulator, and manage the app installed on the simulator.\nNatalie - Storyboard Code Generator.\nTransformer - Easy Online Attributed String Creator. This tool lets you format a string directly in the browser and then copy/paste the attributed string code into your app.\nProvisionQL - Quick Look plugin for apps and provisioning profile files.\nxib2Storyboard - A tool to convert Xcode .xib to .storyboard files.\nZolang - A programming language for sharing logic between iOS, Android and Tools.\nxavtool - Command-line utility to automatically increase iOS / Android applications version.\nCutter - A tool to generate iOS Launch Images (Splash Screens) for all screen sizes starting from a single template.\nnef - A set of command line tools for Xcode Playground: lets you have compile-time verification of your documentation written as Xcode Playgrounds, generates markdown files, integration with Jekyll for building microsites and Carbon to export code snippets.\n\nRapid Development\n\nPlaygrounds - Playgrounds for Objective-C for extremely fast prototyping / learning.\nMMBarricade - Runtime configurable local server for iOS apps.\nSTV Framework - Native visual iOS development.\nswiftmon - swiftmon restarts your swift application in case of any file change.\nModel2App - Turn your Swift data model into a working CRUD app.\n\nCode Injection\n\ndyci - Code injection tool.\ninjectionforxcode - Code injection including Swift.\nVaccine - Vaccine is a framework that aims to make your apps immune to recompile-decease.\n\nDependency Injection\n\nSwinject - Dependency injection framework for Swift.\nReliant - Nonintrusive Objective-C dependency injection.\nKraken - A Dependency Injection Container for Swift with easy-to-use syntax.\nCleanse - Lightweight Swift Dependency Injection Framework by Square.\nTyphoon - Powerful dependency injection (Objective-C & Swift).\nPerform - Easy dependency injection for storyboard segues.\nAlchemic - Advanced, yet simple to use DI framework for Objective-C.\nGuise - An elegant, flexible, type-safe dependency resolution framework for Swift.\nWeaver - A declarative, easy-to-use and safe Dependency Injection framework for Swift.\nStoryboardBuilder - Simple dependency injection for generating views from storyboard.\nViperServices - Dependency injection container for iOS applications written in Swift. Each service can have boot and shutdown code.\nDITranquillity - Dependency injection framework for iOS applications written in clean Swift.\nNeedle \u2014 Compile-time safe Swift dependency injection framework with real code.\nLocatable - A micro-framework that leverages Property Wrappers to implement the Service Locator pattern.\n\nDeployment / Distribution\n\nfastlane - Connect all iOS deployment tools into one streamlined workflow.\ndeliver - Upload screenshots, metadata and your app to the App Store using a single command.\nsnapshot - Automate taking localized screenshots of your iOS app on every device.\nbuddybuild - A mobile iteration platform - build, deploy, and collaborate.\nBitrise - Mobile Continuous Integration & Delivery with dozens of integrations to build, test, deploy and collaborate.\nwatchbuild - Get a notification once your iTunes Connect build is finished processing.\nCrashlytics - A crash reporting and beta testing service.\nTestFlight Beta Testing - The beta testing service hosted on iTunes Connect (requires iOS 8 or later).\nHockeyApp - With HockeyApp, you can distribute beta versions of your app, collect live crash reports, get feedback from users, and analyze test coverage.\nboarding - Instantly create a simple signup page for TestFlight beta testers.\nHockeyKit - A software update kit.\nRollout.io - SDK to patch, fix bugs, modify and manipulate native apps (Obj-c & Swift) in real-time.\nAppLaunchpad - Free App Store screenshot builder.\nLaunchKit - A set of web-based tools for mobile app developers, now open source!\nInstabug - In-app feedback, Bug and Crash reporting, Fix Bugs Faster through user-steps, video recordings, screen annotation, network requests logging.\nAppfigurate - Secure runtime configuration for iOS and watchOS, apps and app extensions.\nScreenshotFramer - With Screenshot Framer you can easily create nice-looking and localized App Store Images.\nSemaphore - CI/CD service which makes it easy to build, test and deploy applications for any Apple device. iOS support is fully integrated in Semaphore 2.0, so you can use the same powerful CI/CD pipeline features for iOS as you do for Linux-based development.\n\nApp Store\n\nApple's Common App Rejections Styleguide - Highlighted some of the most common issues that cause apps to get rejected.\nFree App Store Optimization Tool - Lets you track your App Store visibility in terms of keywords and competitors.\nApp Release Checklist - A checklist to pore over before you ship that amazing app that has taken ages to complete, but you don't want to rush out in case you commit a schoolboy error that will end up making you look dumber than you are.\nHarpy - Notify users when a new version of your iOS app is available, and prompt them with the App Store link.\nappirater - A utility that reminds your iPhone app's users to review the app.\nSiren - Notify users when a new version of your app is available and prompt them to upgrade.\nAppstore Review Guidelines - A curated list of points which a developer has to keep in mind before submitting his/her application on appstore for review.\nAppVersion - Keep users on the up-to date version of your App.\n\nXcode\nExtensions (Xcode 8+)\n\nCleanClosureXcode - An Xcode Source Editor extension to clean the closure syntax.\nxTextHandler - Xcode Source Editor Extension Toolset (Plugins for Xcode 8).\nSwiftInitializerGenerator - Xcode 8 Source Code Extension to Generate Swift Initializers.\nXcodeEquatableGenerator - Xcode 8 Source Code Extension will generate conformance to Swift Equatable protocol based on type and fields selection.\nImport - Xcode extension for adding imports from anywhere in the code.\nMark - Xcode extension for generating MARK comments.\nXShared - Xcode extension which allows you copying the code with special formatting quotes for social (Slack, Telegram).\nXGist - Xcode extension which allows you to send your text selection or entire file to GitHub's Gist and automatically copy the Gist URL into your Clipboard.\nSwiftify - Objective-C to Swift online code converter and Xcode extension.\nDocumenterXcode - Attempt to give a new life for VVDocumenter-Xcode as source editor extension.\nSnowonder - Magical import declarations formatter for Xcode.\nXVim2 - Vim key-bindings for Xcode 9.\nComment Spell Checker - Xcode extension for spell checking and auto correcting code comments.\nnef - This Xcode extension enables you to make a code selection and export it to a snippets. Available on Mac AppStore.\n\nThemes\n\nDracula Theme - A dark theme for Xcode.\nXcode themes list - Color themes for Xcode.\nSolarized-Dark-for-Xcode - Solarized Dark Theme for Xcode 5.\nWWDC2016 Xcode Color Scheme - A color scheme for Xcode based on the WWDC 2016 invitation.\nDRL Theme - A soft darkness theme for Xcode.\n\nOther Xcode\n\nawesome-xcode-scripts - A curated list of useful xcode scripts.\nSynx - A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.\ndsnip - Tool to generate (native) Xcode code snippets from all protocols/delegate methods of UIKit (UITableView, ...)\nSBShortcutMenuSimulator - 3D Touch shortcuts in the Simulator.\nawesome-gitignore-templates - A collection of swift, objective-c, android and many more langugages .gitignore templates.\nswift-project-template - Template for iOS Swift project generation.\nSwift-VIPER-Module - Xcode template for create modules with VIPER Architecture written in Swift 3.\nViperC - Xcode template for VIPER Architecture for both Objective-C and Swift.\nXcodeCodeSnippets - A set of code snippets for iOS development, includes code and comments snippets.\nXcode Keymap for Visual Studio Code - This extension ports popular Xcode keyboard shortcuts to Visual Studio Code.\nXcode Template Manager - Xcode Template Manager is a Swift command line tool that helps you manage your Xcode project templates.\nVIPER Module Template - Xcode Template of VIPER Module which generates all layers of VIPER.\n\nReference\n\nSwift Cheat Sheet - A quick reference cheat sheet for common, high level topics in Swift.\nObjective-C Cheat Sheet - A quick reference cheat sheet for common, high level topics in Objective-C.\nSwiftSnippets - A collection of Swift snippets to be used in Xcode.\nApp Store Checklist - A checklist of what to look for before submitting your app to the App Store.\nwhats-new-in-swift-4 - An Xcode playground showcasing the new features in Swift 4.0.\nWWDC-Recap - A collection of session summaries in markdown format, from WWDC 19 & 17.\n\nStyle Guides\n\nNY Times - Objective C Style Guide - The Objective-C Style Guide used by The New York Times.\nraywenderlich Style Guide - A style guide that outlines the coding conventions for raywenderlich.com.\nGitHub Objective-C Style Guide - Style guide & coding conventions for Objective-C projects.\nObjective-C Coding Convention and Best Practices - Gist with coding conventions.\nSwift Style Guide by @raywenderlich - The official Swift style guide for raywenderlich.com.\nSpotify Objective-C Coding Style - Guidelines for iOS development in use at Spotify.\nGitHub - Style guide & coding conventions for Swift projects - A guide to our Swift style and conventions by @github.\nFuturice iOS Good Practices - iOS starting guide and good practices suggestions by @futurice.\nSlideShare Swift Style Guide - SlideShare Swift Style Guide we are using for our upcoming iOS 8 only app written in Swift.\nProlific Interactive Style Guide - A style guide for Swift.\nSwift Style Guide by LinkedIn - LinkedIn's Official Swift Style Guide.\n\nGood Websites\nNews, Blogs and more\n\nBGR\niMore\nLifehacker\nNSHipster\nObjc.io\nASCIIwwdc\nNatasha The Robot\nApple's Swift Blog\niOS Programming Subreddit\niOS8-day-by-day\niOScreator\nMathew Sanders\niOS Dev Nuggets\niOS Developer and Designer interview - A small guide to help those looking to hire a developer or designer for iOS work.\niOS9-day-by-day\nCode Facebook\nFeeds for iOS Developer - The list of RSS feeds for iOS developers.\nCocoa Controls - Open source UI components for iOS and macOS.\n\nUIKit references\n\niOS Fonts\nUIAppearance list\n\nForums and discuss lists\n\n\"iOS\" on Stackoverflow\n\nTutorials and Keynotes\n\nAppCoda\nTutorials Point\nCode with Chris\nCocoa with Love\nBrian Advent youtube channel - Swift tutorials Youtube Channel.\nraywenderlich.com - Tutorials for developers and gamers.\nMike Ash\nBig Nerd Ranch\nTuts+\nThinkster\nSwift Education - A community of educators sharing materials for teaching Swift and app development.\nCocoa Dev Central\nUse Your Loaf\nSwift Tutorials by Jameson Quave\nAwesome-Swift-Education - All of the resources for Learning About Swift.\nAwesome-Swift-Playgrounds - A List of Awesome Swift Playgrounds!\nlearn-swift - Learn Apple's Swift programming language interactively through these playgrounds.\nTreehouse's iOS Courses and Workshops - Topics for beginner and advanced developers in both Objective-C and Swift.\nThe Swift Summary Book - A summary of Apple's Swift language written on Playgrounds.\nHacking With Swift - Learn to code iPhone and iPad apps with 3 Swift tutorials.\nRealm Academy\nLearnAppMaking - LearnAppMaking helps app developers to build, launch and market iOS apps.\niOS Development with Swift in Motion  -  This live video course locks in the language fundamentals and then offers interesting examples and exercises to build and practice your knowledge and skills.\nConferences.digital - Watch conference videos in a native macOS app.\nDaddyCoding - iOS Tutorials ranging from beginners to advance.\n\niOS UI Template\n\niOS UI Design Kit\niOS Design Guidelines\niOS GUI by Facebook Design Resources\n\nPrototyping\n\nFluidUI\nProto.io\nFramer\nPrinciple\n\nNewsletters\n\nAwesomeiOS Weekly - AwesomeiOS Weekly.\niOS Goodies - Weekly iOS newsletter.\nraywenderlich.com Weekly - sign up to receive the latest tutorials from raywenderlich.com each week.\niOS Dev Tools Weekly - The greatest iOS development tools, including websites, desktop and mobile apps, and back-end services.\niOS Trivia Weekly - Three challenging questions about iOS development every Wednesday.\nIndie iOS Focus Weekly - Looking for the best iOS dev links, tutorials, & tips beyond the usual news? Curated by Chris Beshore. Published every Thursday.\niOS Dev Weekly - Subscribe to a hand-picked round up of the best iOS development links every week. Free.\nSwift Weekly Brief - A community-driven weekly newsletter about Swift.org. Curated by Jesse Squires and published for free every Thursday.\nServer-Side Swift Weekly - A weekly newsletter with the best links related to server-side Swift and cross-platform developer tools. Curated by @maxdesiatov\niOS Cookies Newsletter - A weekly digest of new iOS libraries written in Swift.\nSwift Developments - A weekly curated newsletter containing a hand picked selection of the latest links, videos, tools and tutorials for people interested in designing and developing their own iOS, WatchOS and AppleTV apps using Swift.\n\nMedium\n\niOS App Development - Stories and technical tips about building apps for iOS, Apple Watch, and iPad/iPhone.\nSwift Programming - The Swift Programming Language.\nFlawless App - Development & design & marketing tips for iOS developers.\n\nSocial Media\nTwitter\n\n@objcio\n@CocoaPods\n@CocoaPodsFeed\n@RubyMotion\n\nPodcasts\n\nThe Ray Wenderlich Podcast\nDebug\nApp Story\niPhreaks\nUnder the Radar\nCore Intuition\nSwift Playhouse\nRelease Notes\nMore Than Just Code\nRuntime\nConsult\nSwift Unwrapped\nFireside Swift\nSwift by Sundell\n\nBooks\n\nThe Swift Programming Language by Apple\niOS Programming: The Big Nerd Ranch Guide by Christian Keur, Aaron Hillegass, Joe Conway\nProgramming in Objective-C by Stephen G. Kochan\nThe Complete Friday Q & A: Volume 1\nCore Data for iOS: Developing Data-Driven Applications for the iPad, iPhone, and iPod touch\nCocoa Design Patterns\nHello Swift! by Tanmay Bakshi with Lynn Beighley\niOS Development with Swift by Craig Grummitt\nAnyone Can Create an App by Wendy L. Wise\nAdvanced Swift by Chris Eidhof, Ole Begemann, and Airspeed Velocity\nFunctional Swift by Chris Eidhof, Florian Kugler, and Wouter Swierstra\nCore Data by Florian Kugler and Daniel Eggert\nClassic Computer Science Problems in Swift\nSwift in Depth\n\nOther Awesome Lists\nOther amazingly awesome lists can be found in the\n\nawesome-awesomeness list.\nOpen Source apps list of open source iOS apps.\nAwesome-swift\n\n@matteocrippa - A collaborative list of awesome swift resources.\n@Wolg - A curated list of awesome Swift frameworks, libraries and software.\nAwesome-Swift-Education - All of the resources for Learning About Swift.\n\n\nawesome watchkit apps curated list of sample watchkit apps and tutorials.\niOS Learning Resources Comprehensive collection of high quality, frequently updated and well maintained iOS tutorial sites.\nAwesome iOS Animation\n\n@ameizi - A curated list of awesome iOS animation, including Objective-C and Swift libraries.\n@jzau - Collection of Animation projects.\n\n\nawesome-ios-chart - A curated list of awesome iOS chart libraries, including Objective-C and Swift.\nawesome-gists - A list of amazing gists (iOS section).\nawesome-ios-ui - A curated list of awesome iOS UI/UX libraries.\nAwesome-Server-Side-Swift/TheList - A list of Awesome Server Side Swift 3 projects.\nawesome-interview-questions - A curated awesome list of lists of interview questions including iOS.\niOS-Playbook - Guidelines and best practices for excellent iOS apps.\niOS-Learning-Materials - Curated list of articles, web-resources, tutorials and code repositories that may help you dig a little bit deeper into iOS.\nAwesome-iOS-Twitter - A curated list of awesome iOS Twitter accounts.\nMarketing for Engineers - A curated collection of marketing articles & tools to grow your product.\nAwesome ARKit - A curated list of awesome ARKit projects and resources.\nCocoaConferences - List of cocoa conferences for iOS & macOS developers.\nexample-ios-apps - A curated list of Open Source example iOS apps developed in Swift.\nCurated-Resources-for-Learning-Swift - A curated list of resources recommended by the developers.\nClassicProblemSolvingAndDataStructuresInSwift - Collection of popular algorithms, data structure and problem solving in Swift 4.\nAwesome list of open source applications for macOS - List of awesome open source applications for macOS.\nAwesome iOS Interview question list - Guide for interviewers and interviewees. Review these iOS interview questions - and get some practical tips along the way.\nTop App Developers - A list of top iOS app developers.\n\nContributing and License\n\nSee the guide\nDistributed under the MIT license. See LICENSE for more information.\n\n\n"}, {"repo": "sindresorhus/awesome-nodejs", "language": "None", "readme": "\n\n\n\n\n\n\nSpecial thanks to:\n\n\n\n\n\n\n\n\n\t\t\t\tand\n\t\t\t\n\n\n\n\n\n\n\t\t\tSave time setting up analytics with Segment. We're hiring!\n\n\n\n\n\n\n\n\n\n\nJust type node.cool to go here. Check out my blog and follow me on Twitter.\n\n\n\nContents\n\nPackages\n\nMad science\nCommand-line apps\nFunctional programming\nHTTP\nDebugging / Profiling\nLogging\nCommand-line utilities\nBuild tools\nHardware\nTemplating\nWeb frameworks\nDocumentation\nFilesystem\nControl flow\nStreams\nReal-time\nImage\nText\nNumber\nMath\nDate\nURL\nData validation\nParsing\nHumanize\nCompression\nNetwork\nDatabase\nTesting\nSecurity\nBenchmarking\nMinifiers\nAuthentication\nAuthorization\nEmail\nJob queues\nNode.js management\nNatural language processing\nProcess management\nAutomation\nAST\nStatic site generators\nContent management systems\nForum\nBlogging\nWeird\nSerialization\nMiscellaneous\n\n\nResources\n\nTutorials\nDiscovery\nArticles\nNewsletters\nVideos\nBooks\nBlogs\nCourses\nCheatsheets\nTools\nCommunity\nMiscellaneous\n\n\n\nPackages\nMad science\n\nwebtorrent - Streaming torrent client for Node.js and the browser.\npeerflix - Streaming torrent client.\ndat - Real-time replication and versioning for data sets.\nipfs - Distributed file system that seeks to connect all computing devices with the same system of files.\nstackgl - Open software ecosystem for WebGL, built on top of browserify and npm.\npeerwiki - All of Wikipedia on BitTorrent.\npeercast - Stream a torrent video to Chromecast.\nBitcoinJS - Clean, readable, proven Bitcoin library.\nBitcore - Pure and powerful Bitcoin library.\nPDFKit - PDF generation library.\nturf - Modular geospatial processing and analysis engine.\nwebcat - p2p pipe across the web using WebRTC that uses your GitHub private/public key for authentication.\nNodeOS - The first operating system powered by npm.\nYodaOS - AI operating system.\nBrain.js - Machine-learning framework.\nCytoscape.js - Graph theory (a.k.a. network) modeling and analysis.\nKadence - Kademlia distributed hash table.\nseedshot - Temporary P2P screenshot sharing from your browser.\njs-git - JavaScript implementation of Git.\nskale - High performance distributed data processing engine.\nxlsx - Pure JS Excel spreadsheet reader and writer.\nisomorphic-git - Pure JavaScript implementation of Git.\n\nCommand-line apps\n\nnp - Better npm publish.\nnpm-name - Check a package name's availability on npm.\ngh-home - Open the GitHub page of the repo in the current directory.\nnpm-home - Open the npm page of a package.\ntrash - Safer alternative to rm.\nspeed-test - Test your internet connection speed and ping.\nemoj - Find relevant emoji from text on the command-line.\npageres - Capture website screenshots.\ncpy - Copy files.\nvtop - More better top, with nice charts.\nempty-trash - Empty the trash.\nis-up - Check whether a website is up or down.\nis-online - Check if the internet connection is up.\npublic-ip - Get your public IP address.\nclipboard-cli - Copy & paste on the terminal.\nXO - Enforce strict code style using the JavaScript happiness style.\nStandard - JavaScript Standard Style \u2014 One style to rule them all.\nESLint - The pluggable linting utility for JavaScript.\ndev-time - Get the current local time of a GitHub user.\nDavid - Tells you when your package npm dependencies are out of date.\nhttp-server - Simple, zero-config command-line HTTP server.\nLive Server - Development HTTP-server with livereload capability.\nbcat - Pipe command output to web browsers.\nnormit - Google Translate with speech synthesis in your terminal.\nfkill - Fabulously kill processes. Cross-platform.\npjs - Pipeable JavaScript. Quickly filter, map, and reduce from the terminal.\nlicense-checker - Check licenses of your app's dependencies.\nbrowser-run - Easily run code in a browser environment.\ntmpin - Adds stdin support to any CLI app that accepts file input.\nwifi-password - Get the current wifi password.\nwallpaper - Change the desktop wallpaper.\nbrightness - Change the screen brightness.\ntorrent - Download torrents.\nkill-tabs - Kill all Chrome tabs to improve performance, decrease battery usage, and save memory.\nalex - Catch insensitive, inconsiderate writing.\npen - Live Markdown preview in the browser from your favorite editor.\nsubdownloader - Subtitle downloader for movies and TV series.\ndark-mode - Toggle the macOS Dark Mode.\niponmap - IP location finder.\nJsome - Pretty prints JSON with configurable colors and indentation.\nitunes-remote - Interactively control iTunes.\nmobicon - Mobile app icon generator.\nmobisplash - Mobile app splash screen generator.\ndiff2html-cli - Pretty git diff to HTML generator.\nCash - Cross-platform Unix shell commands in pure JavaScript.\ntrymodule - Try out npm packages in the terminal.\njscpd - Copy/paste detector for source code.\natmo - Server-side API mocking.\nauto-install - Auto installs dependencies as you code.\nlessmd - Markdown in the terminal.\ncost-of-modules - Find out which dependencies are slowing you down.\nlocaltunnel - Expose your localhost to the world.\nsvg-term-cli - Share terminal sessions via SVG.\ngtop - System monitoring dashboard for the terminal.\nthemer - Generate themes for your editor, terminal, wallpaper, Slack, and more.\ncarbon-now-cli - Beautiful images of your code \u2014 from right inside your terminal.\ncash-cli - Convert between 170 currencies.\ntaskbook - Tasks, boards & notes for the command-line habitat.\ndischarge - Easily deploy static websites to Amazon S3.\nnpkill - Easily find and remove old and heavy node_modules folders.\n\nFunctional programming\n\nlodash - Utility library delivering consistency, customization, performance, & extras. A better and faster Underscore.js.\nimmutable - Immutable data collections.\nRamda - Utility library with a focus on flexible functional composition enabled by automatic currying and reversed argument order. Avoids mutating data.\nFolktale - Suite of libraries for generic functional programming in JavaScript that allows you to write elegant, modular applications with fewer bugs, and more reuse.\nMout - Utility library with the biggest difference between other existing solutions is that you can choose to load only the modules/functions that you need, no extra overhead.\nBacon.js - Functional reactive programming.\nRxJS - Functional reactive library for transforming, composing, and querying various kinds of data.\nLazy.js - Utility library similar to lodash/Underscore but with lazy evaluation, which can translate to superior performance in many cases.\nKefir.js - Reactive library with focus on high performance and low memory usage.\n\nHTTP\n\ngot - Nicer interface to the built-in http module.\ngh-got - Convenience wrapper for got to interact with the GitHub API.\naxios - Promise based HTTP client (works in the browser too).\nrequest - Simplified HTTP request client.\nwreck - HTTP Client Utilities.\ndownload - Download and extract files effortlessly.\nhttp-proxy - HTTP proxy.\nsuperagent - HTTP request library.\nnode-fetch - window.fetch for Node.js.\nflashheart - REST client.\nhttp-fake-backend - Build a fake backend by providing the content of JSON files or JavaScript objects through configurable routes.\ncacheable-request - Wrap native HTTP requests with RFC compliant cache support.\ngotql - GraphQL request library built on got.\nglobal-agent \u2013\u00a0Global HTTP/HTTPS proxy agent that is configurable using environment variables.\n\nDebugging / Profiling\n\nndb - Improved debugging experience, enabled by Chrome DevTools.\nironNode - Node.js debugger supporting ES2015 out of the box.\nnode-inspector - Debugger based on Blink Developer Tools.\ndebug - Tiny debugging utility.\nwhy-is-node-running - Node.js is running but you don't know why?\nnjsTrace - Instrument and trace your code, see all function calls, arguments, return values, as well as the time spent in each function.\nvstream - Instrumentable streams mix-ins to inspect a pipeline of streams.\nstackman - Enhance an error stacktrace with code excerpts and other goodies.\nlocus - Starts a REPL at runtime that has access to all variables.\n0x - Flamegraph profiling.\nctrace - Well-formatted and improved trace system calls and signals.\nleakage - Write memory leak tests.\nllnode - Post-mortem analysis tool which allows you to inspect objects and get insights from a crashed Node.js process.\nthetool - Capture different CPU, memory, and other profiles for your app in Chrome DevTools friendly format.\nswagger-stats - Trace API calls and monitor API performance, health, and usage metrics.\n\nLogging\n\npino - Extremely fast logger inspired by Bunyan.\nwinston - Multi-transport async logging library.\nconsole-log-level - The most simple logger imaginable with support for log levels and custom prefixes.\nstoryboard - End-to-end, hierarchical, real-time, colorful logs and stories.\nsignale - Hackable console logger with beautiful output.\n\nCommand-line utilities\n\nchalk - Terminal string styling done right.\nmeow - CLI app helper.\nyargs - Command-line parser that automatically generates an elegant user-interface.\nora - Elegant terminal spinner.\nget-stdin - Easier stdin.\nlog-update - Log by overwriting the previous output in the terminal. Useful for rendering progress bars, animations, etc.\nInk - React for interactive command-line apps.\nlistr - Terminal task list.\nconf - Simple config handling for your app or module.\nansi-escapes - ANSI escape codes for manipulating the terminal.\nlog-symbols - Colored symbols for various log levels.\nfigures - Unicode symbols with Windows CMD fallbacks.\nboxen - Create boxes in the terminal.\nterminal-link - Create clickable links in the terminal.\nterminal-image - Display images in the terminal.\nstring-width - Get the visual width of a string - the number of columns required to display it.\ncli-truncate - Truncate a string to a specific width in the terminal.\nfirst-run - Check if it's the first time the process is run.\nblessed - Curses-like library.\nInquirer.js - Interactive command-line prompt.\nyn - Parse yes/no like values.\ncli-table3 - Pretty unicode tables.\ndrawille - Draw on the terminal with unicode braille characters.\nupdate-notifier - Update notifications for your CLI app.\nascii-charts - ASCII bar chart in the terminal.\nprogress - Flexible ascii progress bar.\ninsight - Helps you understand how your tool is being used by anonymously reporting usage metrics to Google Analytics.\ncli-cursor - Toggle the CLI cursor.\ncolumnify - Create text-based columns suitable for console output. Supports cell wrapping.\ncli-columns - Columnated unicode and ansi-safe text lists.\ncfonts - Sexy ASCII fonts for the console.\nmultispinner - Multiple, simultaneous, individually controllable CLI spinners.\nomelette - Shell autocompletion helper.\ncross-env - Set environment variables cross-platform.\nshelljs - Portable Unix shell commands.\nsudo-block - Block users from running your app with root permissions.\nloud-rejection - Make unhandled promise rejections fail loudly instead of the default silent fail.\nsparkly - Generate sparklines \u2581\u2582\u2583\u2585\u2582\u2587.\nBit - Create, maintain, find and use small modules and components across repositories.\ngradient-string - Beautiful color gradients in terminal output.\noclif - CLI framework complete with parser, automatic documentation, testing, and plugins.\nterm-size - Reliably get the terminal window size.\nCliffy - Framework for interactive CLIs.\n\nBuild tools\n\nparcel - Blazing fast, zero config web app bundler.\nwebpack - Packs modules and assets for the browser.\nrollup - Next-generation ES2015 module bundler.\ngulp - Streaming and fast build system that favors code over config.\nBroccoli - Fast, reliable asset pipeline, supporting constant-time rebuilds and compact build definitions.\nBrunch - Front-end web app build tool with simple declarative config, fast incremental compilation, and an opinionated workflow.\nStart - Functional task runner with shareable presets.\nygor - Promising task runner for when npm run isn't enough and everything else is too much.\nFuseBox - Fast build system that combines the power of webpack, JSPM and SystemJS, with first-class TypeScript support.\npkg - Package your Node.js project into an executable.\n\nHardware\n\njohnny-five - Firmata based Arduino Framework.\nserialport - Access serial ports for reading and writing.\nusb - USB library.\ni2c-bus - I2C serial bus access.\nonoff - GPIO access and interrupt detection.\nspi-device - SPI serial bus access.\npigpio - Fast GPIO, PWM, servo control, state change notification, and interrupt handling on the Raspberry Pi.\ngps - NMEA parser for handling GPS receivers.\n\nTemplating\n\nmarko - HTML-based templating engine that compiles templates to CommonJS modules and supports streaming, async rendering and custom tags.\nnunjucks - Templating engine with inheritance, asynchronous control, and more (jinja2 inspired).\nhandlebars.js - Superset of Mustache templates which adds powerful features like helpers and more advanced blocks.\nEJS - Simple unopinionated templating language.\nPug - High-performance template engine heavily influenced by Haml.\n\nWeb frameworks\n\nHapi - Framework for building applications and services.\nKoa - Framework designed by the team behind Express, which aims to be a smaller, more expressive, and more robust foundation for web applications and APIs.\nExpress - Web application framework, providing a robust set of features for building single and multi-page, and hybrid web applications.\nFeathers - Microservice framework built in the spirit of Express.\nLoopBack - Powerful framework for creating REST APIs and easily connecting to backend data sources.\nMeteor - An ultra-simple, database-everywhere, data-on-the-wire, pure-Javascript web framework. (You might like awesome-meteor)\nRestify - Enables you to build correct REST web services.\nThinkJS - Framework with ES2015+ support, WebSockets, REST API.\nActionHero - Framework for making reusable & scalable APIs for TCP sockets, WebSockets, and HTTP clients.\nNext.js - Minimalistic framework for server-rendered universal JavaScript web apps.\nNuxt.js - Minimalistic framework for server-rendered Vue.js apps.\nseneca - Toolkit for writing microservices.\nAdonisJs - A true MVC framework for Node.js built on solid foundations of Dependency Injection and IoC container.\nHemera - Write reliable and fault-tolerant microservices with NATS.\nMicro - Minimalistic microservice framework with an async approach.\nMoleculer - Fast & powerful microservices framework.\nFastify - Fast and low overhead web framework.\nNest - Angular-inspired framework for building efficient and scalable server-side apps.\nZeronode - Minimal building block for reliable and fault-tolerant microservices.\nTypeGraphQL - Modern framework for creating GraphQL APIs with TypeScript, using classes and decorators.\n\nDocumentation\n\ndocumentation.js - API documentation generator with support for ES2015+ and flow annotation.\nESDoc - Documentation generator targeting ES2015, attaching test code and measuring documentation coverage.\nDocco - Documentation generator which produces an HTML document that displays your comments intermingled with your code.\nJSDoc - API documentation generator similar to JavaDoc or PHPDoc.\n\nFilesystem\n\ndel - Delete files/folders using globs.\nglobby - Glob files with support for multiple patterns.\ncpy - Copy files.\nrimraf - Recursively delete files like rm -rf.\nmake-dir - Recursively create directories like mkdir -p.\ngraceful-fs - Drop-in replacement for the fs module with various improvements.\nchokidar - Filesystem watcher which stabilizes events from fs.watch and fs.watchFile as well as using native fsevents on macOS.\nfind-up - Find a file by walking up parent directories.\nproper-lockfile - Inter-process and inter-machine lockfile utility.\nload-json-file - Read and parse a JSON file.\nwrite-json-file - Stringify and write JSON to a file atomically.\nfs-write-stream-atomic - Like fs.createWriteStream(), but atomic.\nfilenamify - Convert a string to a valid filename.\nlnfs - Force create symlinks like ln -fs.\nistextorbinary - Check if a file is text or binary.\nfs-jetpack - Completely redesigned file system API for convenience in everyday use.\nfs-extra - Extra methods for the fs module.\npkg-dir - Find the root directory of an npm package.\nfilehound - Flexible and fluent interface for searching the file system.\nmove-file - Move a file, even works across devices.\ntempy - Get a random temporary file or directory path.\n\nControl flow\n\nPromises\n\nBluebird - Promise library with focus on innovative features and performance.\npify - Promisify a callback-style function.\ndelay - Delay a promise a specified amount of time.\npromise-memoize - Memoize promise-returning functions, with expire and prefetch.\nvalvelet - Limit the execution rate of a promise-returning function.\np-map - Map over promises concurrently.\nMore\u2026\n\n\nObservables\n\nzen-observable - Implementation of Observables.\nRxJS - Reactive programming.\nobservable-to-promise - Convert an Observable to a Promise.\nMore\u2026\n\n\nStreams\n\nHighland.js - Manages synchronous and asynchronous code easily, using nothing more than standard JavaScript and Node-like Streams.\n\n\nCallbacks\n\neach-async - Async concurrent iterator like forEach.\nasync - Provides straight-forward, powerful functions for working with asynchronicity.\n\n\nChannels\n\njs-csp - Communicating sequential processes for JavaScript (like Clojurescript core.async, or Go).\n\n\n\nStreams\n\nthrough2 - Tiny wrapper around streams2 Transform to avoid explicit subclassing noise.\nfrom2 - Convenience wrapper for ReadableStream, inspired by through2.\nget-stream - Get a stream as a string or buffer.\ninto-stream - Convert a buffer/string/array/object into a stream.\nduplexify - Turn a writeable and readable stream into a single streams2 duplex stream.\npumpify - Combine an array of streams into a single duplex stream.\npeek-stream - Transform stream that lets you peek the first line before deciding how to parse it.\nbinary-split - Newline (or any delimiter) splitter stream.\nbyline - Super-simple line-by-line Stream reader.\nfirst-chunk-stream - Transform the first chunk in a stream.\npad-stream - Pad each line in a stream.\nmultistream - Combine multiple streams into a single stream.\nstream-combiner2 - Turn a pipeline into a single stream.\nreadable-stream - Mirror of Streams2 and Streams3 implementations in core.\nthrough2-concurrent - Transform object streams concurrently.\n\nReal-time\n\n\u00b5WebSockets - Highly scalable WebSocket server & client library.\nSocket.io - Enables real-time bidirectional event-based communication.\nFaye - Real-time client-server message bus, based on Bayeux protocol.\nSocketCluster - Scalable HTTP + WebSocket engine which can run on multiple CPU cores.\nPrimus - An abstraction layer for real-time frameworks to prevent module lock-in.\ndeepstream.io - Scalable real-time microservice framework.\nKalm - Low-level socket router and middleware framework.\nMQTT.js - Client for MQTT - Pub-sub based messaging protocol for use on top of TCP/IP.\nrpc-websockets - JSON-RPC 2.0 implementation over WebSockets.\nAedes - Barebone MQTT server that can run on any stream server.\n\nImage\n\nsharp - The fastest module for resizing JPEG, PNG, WebP and TIFF images.\nimage-type - Detect the image type of a Buffer/Uint8Array.\ngm - GraphicsMagick and ImageMagick wrapper.\nlwip - Lightweight image processor which does not require ImageMagick.\npica - High quality & fast resize (lanczos3) in pure JS. Alternative to canvas drawImage(), when no pixelation allowed.\njimp - Image processing in pure JavaScript.\nprobe-image-size - Get the size of most image formats without a full download.\nqrcode - QR code and bar code generator.\n\nText\n\niconv-lite - Convert character encodings.\nstring-length - Get the real length of a string - by correctly counting astral symbols and ignoring ansi escape codes.\ncamelcase - Convert a dash/dot/underscore/space separated string to camelCase: foo-bar \u2192 fooBar.\nescape-string-regexp - Escape RegExp special characters.\nexecall - Find multiple RegExp matches in a string.\nsplice-string - Remove or replace part of a string like Array#splice.\nindent-string - Indent each line in a string.\nstrip-indent - Strip leading whitespace from every line in a string.\ndetect-indent - Detect the indentation of code.\nhe - HTML entity encoder/decoder.\ni18n-node - Simple translation module with dynamic JSON storage.\nbabelfish - i18n with very easy syntax for plurals.\nmatcher - Simple wildcard matching.\nunhomoglyph - Normalize visually similar unicode characters.\ni18next - Internationalization framework.\nnanoid - Tiny, secure, URL-friendly, unique string ID generator.\n\nNumber\n\nrandom-int - Generate a random integer.\nrandom-float - Generate a random float.\nunique-random - Generate random numbers that are consecutively unique.\nround-to - Round a number to a specific number of decimal places: 1.234 \u2192 1.2.\n\nMath\n\nndarray - Multidimensional arrays.\nmathjs - An extensive math library.\nmath-clamp - Clamp a number.\nalgebra - Algebraic structures.\nmultimath - Core to create fast image math in WebAssembly and JS.\n\nDate\n\nLuxon - Library for working with dates and times.\ndate-fns - Modern date utility.\nMoment.js - Parse, validate, manipulate, and display dates.\nDay.js - Immutable date library alternative to Moment.js.\ndateformat - Date formatting.\ntz-format - Format a date with timezone: 2015-11-30T10:40:35+01:00.\ncctz - Fast parsing, formatting, and timezone conversation for dates.\n\nURL\n\nnormalize-url - Normalize a URL.\nhumanize-url - Humanize a URL: http://sindresorhus.com \u2192 sindresorhus.com.\nurl-unshort - Expand shortened URLs.\nspeakingurl - Generate a slug from a string with transliteration.\nlinkify-it - Link patterns detector with full unicode support.\nurl-pattern - Easier than regex string matching patterns for URLs and other strings.\nembedza - Create HTML snippets/embeds from URLs using info from oEmbed, Open Graph, meta tags.\n\nData validation\n\njoi - Object schema description language and validator for JavaScript objects.\nis-my-json-valid - JSON Schema validator that uses code generation to be extremely fast.\nproperty-validator - Easy property validation for Express.\nschema-inspector - JSON API sanitization and validation.\najv - The fastest JSON Schema validator. Supports v5, v6 and v7 proposals.\n\nParsing\n\nremark - Markdown processor powered by plugins.\nmarkdown-it - Markdown parser with 100% CommonMark support, extensions and syntax plugins.\nparse5 - Fast full-featured spec compliant HTML parser.\nstrip-json-comments - Strip comments from JSON.\nstrip-css-comments - Strip comments from CSS.\nparse-json - Parse JSON with more helpful errors.\nURI.js - URL mutation.\nPostCSS - CSS parser / stringifier.\nJSONStream - Streaming JSON.parse and stringify.\nneat-csv - Fast CSV parser. Callback interface for the above.\ncsv-parser - Streaming CSV parser that aims to be faster than everyone else.\nPEG.js - Simple parser generator that produces fast parsers with excellent error reporting.\nx-ray - Web scraping utility.\nnearley - Simple, fast, powerful parsing for JavaScript.\nbinary-extract - Extract a value from a buffer of JSON without parsing the whole thing.\nStylecow - Parse, manipulate and convert modern CSS to make it compatible with all browsers. Extensible with plugins.\njs-yaml - Very fast YAML parser.\nxml2js - XML to JavaScript object converter.\nJison - Friendly JavaScript parser generator. It shares genes with Bison, Yacc and family.\ngoogle-libphonenumber - Parse, format, store and validate phone numbers.\nref - Read/write structured binary data in Buffers.\nxlsx-populate - Read/write Excel XLSX.\nChevrotain - Very fast and feature rich parser building toolkit for JavaScript.\nfast-xml-parser - Validate and parse XML.\n\nHumanize\n\npretty-bytes - Convert bytes to a human readable string: 1337 \u2192 1.34 kB.\npretty-ms - Convert milliseconds to a human readable string: 1337000000 \u2192 15d 11h 23m 20s.\nms - Tiny millisecond conversion utility.\npretty-error - Errors with less clutter.\nread-art - Extract readable content from any page.\n\nCompression\n\nyazl - Zip.\nyauzl - Unzip.\nArchiver - Streaming interface for archive generation, supporting ZIP and TAR.\npako - High speed zlib port to pure js (deflate, inflate, gzip).\ntar-stream - Streaming tar parser and generator. Also see tar-fs.\ndecompress - Decompression module with support for tar, tar.gz and zip files out of the box.\n\nNetwork\n\nget-port - Get an available port.\nipify - Get your public IP address.\ngetmac - Get the computer MAC address.\nDHCP - DHCP client and server.\nnetcat - Netcat port in pure JS.\n\nDatabase\n\nDrivers\n\nPostgreSQL - PostgreSQL client. Pure JavaScript and native libpq bindings.\nRedis - Redis client.\nLevelUP - LevelDB.\nMySQL - MySQL client.\ncouchdb-nano - CouchDB client.\nAerospike - Aerospike client.\nCouchbase - Couchbase client.\nMongoDB - MongoDB driver.\n\n\nODM / ORM\n\nSequelize - Multi-dialect ORM. Supports PostgreSQL, SQLite, MySQL.\nBookshelf - ORM for PostgreSQL, MySQL and SQLite3 in the style of Backbone.js.\nMassive - PostgreSQL data access tool.\nMongoose - Elegant MongoDB object modeling.\nWaterline - Datastore-agnostic tool that dramatically simplifies interaction with one or more databases.\nOpenRecord - ORM for PostgreSQL, MySQL, SQLite3 and RESTful datastores. Similar to ActiveRecord.\npg-promise - PostgreSQL framework for native SQL using promises.\nslonik - PostgreSQL client with strict types, detailed logging and assertions.\nObjection.js - Lightweight ORM built on the SQL query builder Knex.\nTypeORM - ORM for PostgreSQL, MariaDB, MySQL, SQLite, and more.\nMikroORM - TypeScript ORM based on Data Mapper, Unit of Work and Identity Map patterns. Supports MongoDB, PostgreSQL, MySQL and SQLite.\n\n\nQuery builder\n\nKnex - Query builder for PostgreSQL, MySQL and SQLite3, designed to be flexible, portable, and fun to use.\n\n\nOther\n\nNeDB - Embedded persistent database written in JavaScript.\nLowdb - Small JavaScript database powered by Lodash.\nKeyv - Simple key-value storage with support for multiple backends.\nFinale - RESTful endpoint generator for your Sequelize models.\ndatabase-js - Wrapper for multiple databases with a JDBC-like connection.\nMongo Seeding - Populate MongoDB databases with JavaScript and JSON files.\n\n\n\nTesting\n\nAVA - Futuristic test runner.\nMocha - Feature-rich test framework making asynchronous testing simple and fun.\nnyc - Code coverage tool built on istanbul that works with subprocesses.\ntap - TAP test framework.\ntape - TAP-producing test harness.\npower-assert - Provides descriptive assertion messages through the standard assert interface.\nMochify - TDD with Browserify, Mocha, PhantomJS and WebDriver.\ntrevor - Run tests against multiple versions of Node.js without switching versions manually or pushing to Travis CI.\nloadtest - Run load tests for your web application, with an API for automation.\nSinon.JS - Test spies, stubs and mocks.\nnavit - PhantomJS / SlimerJS wrapper to simplify browser test scripting.\nNock - HTTP mocking and expectations.\nintern - Code testing stack.\ntoxy - Hackable HTTP proxy to simulate failure scenarios and network conditions.\nhook-std - Hook and modify stdout/stderr.\ntesten - Run tests for multiple versions of Node.js locally with NVM.\nNightwatch - Automated UI testing framework based on Selenium WebDriver.\nWebdriverIO - Automated testing based on the WebDriver protocol.\nJest - Painless JavaScript testing.\nTestCafe - Automated browser testing.\nabstruse - Continuous Integration server.\nCodeceptJS - End-to-end testing.\nPuppeteer - Headless Chrome.\n\nSecurity\n\nupash - Unified API for all password hashing algorithms.\nthemis - Multilanguage framework for making typical encryption schemes easy to use: data at rest, authenticated data exchange, transport protection, authentication, and so on.\nGuardRails - GitHub app that provides security feedback in pull requests.\nrate-limiter-flexible - Brute-force and DDoS attack protection.\ncrypto-hash - Async non-blocking hashing.\njose-simple \u2014 Encryption and decryption of data using the JOSE (JSON Object Signing and Encryption) standard.\n\nBenchmarking\n\nBenchmark.js - Benchmarking library that supports high-resolution timers and returns statistically significant results.\nmatcha - Simplistic approach to benchmarking.\n\nMinifiers\n\nbabili - ES2015+ aware minifier based on the Babel toolchain.\nUglifyJS2 - JavaScript minifier.\nclean-css - CSS minifier.\nminimize - HTML minifier.\nimagemin - Image minifier.\n\nAuthentication\n\nPassport - Simple, unobtrusive authentication.\nGrant - OAuth middleware for Express, Koa, and Hapi.\n\nAuthorization\n\nCASL - Isomorphic authorization for UI and API.\nnode-casbin - Authorization library that supports access control models like ACL, RBAC and ABAC.\n\nEmail\n\nNodemailer - The fastest way to handle email.\nemailjs - Send text/HTML emails with attachments to any SMTP server.\nemail-templates - Create, preview, and send custom email templates.\nMJML - Markup language designed to reduce the pain of creating responsive emails.\n\nJob queues\n\nbull - Persistent job and message queue.\nagenda - MongoDB-backed job scheduling.\nidoit - Redis-backed job queue engine with advanced job control.\nnode-resque - Redis-backed job queue.\nrsmq - Redis-backed message queue.\nbee-queue - High-performance Redis-backed job queue.\nRedisSMQ - Simple high-performance Redis message queue with real-time monitoring.\nsqs-consumer - Build Amazon Simple Queue Service (SQS) based apps without the boilerplate.\nbetter-queue - Simple and efficient job queue when you cannot use Redis.\n\nNode.js management\n\nn - Node.js version management.\nnave - Virtual Environments for Node.js.\nnodeenv - Node.js virtual environment compatible to Python's virtualenv.\nnvm for Windows - Version management for Windows.\nnodenv - Version manager that is similar to Ruby's rbenv. It supports auto version switching.\n\nNatural language processing\n\nretext - An extensible natural language system.\nfranc - Detect the language of text.\nleven - Measure the difference between two strings using the Levenshtein distance algorithm.\nnatural - Natural language facility.\nnlp.js - Building bots, with entity extraction, sentiment analysis, automatic language identify, and more.\n\nProcess management\n\nPM2 - Advanced Process Manager.\nnodemon - Monitor for changes in your app and automatically restart the server.\nnode-mac - Run scripts as a native Mac daemon and log to the console app.\nnode-linux - Run scripts as native system service and log to syslog.\nnode-windows - Run scripts as a native Windows service and log to the Event viewer.\nsupervisor - Restart scripts when they crash or restart when a *.js file changes.\nPhusion Passenger - Friendly process manager that integrates directly into Nginx.\n\nAutomation\n\nrobotjs - Desktop Automation: control the mouse, keyboard and read the screen.\n\nAST\n\nAcorn - Tiny, fast JavaScript parser.\nbabel-parser - JavaScript parser used in Babel.\ncherow - JavaScript parser with focus on performance and stability.\n\nStatic site generators\n\nWintersmith - Flexible, minimalistic, multi-platform static site generator.\nAssemble - Static site generator for Node.js, Grunt.js, and Yeoman.\nDocPad - Static site generator with dynamic abilities and huge plugin ecosystem.\nPhenomic - Modern static website generator based on the React and Webpack ecosystem.\ndocsify - Markdown documentation site generator with no statically built HTML files.\nCharge - Opinionated, zero-config static site generator using JSX and MDX.\n\nContent management systems\n\nKeystoneJS - CMS and web application platform built on Express and MongoDB.\nApostropheCMS - Content management system with an emphasis on intuitive front end content editing and administration built on Express and MongoDB.\nStrapi - Content Management Framework (headless-CMS) to build powerful APIs.\nTipe - Developer-first content management system with GraphQL and REST API from a schema file.\n\nForum\n\nnodeBB - Forum platform for the modern web.\n\nBlogging\n\nGhost - Simple, powerful publishing platform.\nHexo - Fast, simple and powerful blogging framework.\n\nWeird\n\ncows - ASCII cows.\nsuperb - Get superb like words.\ncat-names - Get popular cat names.\ndog-names - Get popular dog names.\nsuperheroes - Get superhero names.\nsupervillains - Get supervillain names.\ncool-ascii-faces - Get some cool ascii faces.\ncat-ascii-faces - \u208d\u02c4\u00b7\u0348\u0f1d\u00b7\u0348\u02c4\u208e\u25de \u0311\u0311\u0dc6\u20db (=\u2180\u03c9\u2180=)\u2727 (^\uff65o\uff65^)\uff89\u201d.\nnerds - Get data from nerdy topics like Harry Potter, Star Wars, and Pok\u00e9mon.\n\nSerialization\n\nsnappy - Native bindings for Google's Snappy compression library.\nprotobuf - Implementation of Protocol Buffers.\ncompactr - Implementation of the Compactr protocol.\n\nMiscellaneous\n\nexeca - Better child_process.\ncheerio - Fast, flexible, and lean implementation of core jQuery designed specifically for the server.\nElectron - Build cross platform desktop apps with web technologies. (You might like awesome-electron)\nopen - Opens stuff like websites, files, executables.\nhasha - Hashing made simple. Get the hash of a buffer/string/stream/file.\ndot-prop - Get a property from a nested object using a dot path.\nonetime - Only run a function once.\nmem - Memoize functions - an optimization technique used to speed up consecutive function calls by caching the result of calls with identical input.\nimport-fresh - Import a module while bypassing the cache.\nstrip-bom - Strip UTF-8 byte order mark (BOM) from a string/buffer/stream.\nos-locale - Get the system locale.\nssh2 - SSH2 client and server module.\nadit - SSH tunneling made simple.\nimport-lazy - Import a module lazily.\nfile-type - Detect the file type of a Buffer.\nBottleneck - Rate limiter that makes throttling easy.\now - Function argument validation for humans.\nwebworker-threads - Lightweight Web Worker API implementation with native threads.\nclipboardy - Access the system clipboard (copy/paste).\nnode-pre-gyp - Makes it easy to publish and install Node.js C++ addons from binaries.\nopencv - Bindings for OpenCV. The defacto computer vision library.\ndotenv - Load environment variables from .env file.\nremote-git-tags - Get tags from a remote git repo.\nsemver - Semantic version parser.\nFaker.js - Generate massive amounts of fake data.\nnodegit - Native bindings to Git.\njson-strictify - Safely serialize a value to JSON without data loss or going into an infinite loop.\nresolve-from - Resolve the path of a module like require.resolve() but from a given path.\nsimplecrawler - Event driven web crawler.\njsdom - JavaScript implementation of HTML and the DOM.\nhypernova - Server-side rendering your JavaScript views.\n@sindresorhus/is - Type check values.\nenv-dot-prop - Get, set, or delete nested properties of process.env using a dot path.\nemittery - Simple and modern async event emitter.\nnode-video-lib - Pure JavaScript library for working with MP4 and FLV video files and creating MPEG-TS chunks for HLS streaming.\nbasic-ftp \u2013 FTP/FTPS client.\n\nResources\nTutorials\n\nNode.js Best Practices - Summary and curation of the top-ranked content on Node.js best practices, available in multiple languages.\nNodeschool - Learn Node.js with interactive lessons.\nThe Art of Node - An introduction to Node.js.\nstream-handbook - How to write Node.js programs with streams.\nmodule-best-practices - Some good practices when writing new npm modules.\nThe Node Way - An entire philosophy of Node.js best practices and guiding principles exists for writing maintainable modules, scalable applications, and code that is actually pleasant to read.\nYou Don't Know Node.js - Introduction to Node.js core features and asynchronous JavaScript.\nPortable Node.js guide - Practical guide on how to write portable/cross-platform Node.js code.\nBuild a real web app with no frameworks - A set of video tutorials/livestreams to help you build and deploy a real, live web app using a handful of simple libraries and the core Node.js modules.\n\nDiscovery\n\nnpms - Superb package search with deep analysis of package quality using a myriad of metrics.\nnpm addict - Your daily injection of npm packages.\nnpmcompare.com - Compare and discover npm packages.\n\nArticles\n\nError Handling in Node.js\nTeach Yourself Node.js in 10 Steps\nMastering the filesystem in Node.js\nSemver: A Primer\nSemver: Tilde and Caret\nWhy Asynchronous?\nUnderstanding the Node.js Event Loop\nUnderstanding Object Streams\nArt of README - Learn the art of writing quality READMEs.\nUsing Express to Quickly Build a GraphQL Server\n\nNewsletters\n\nNode Weekly - Weekly e-mail round-up of Node.js news and articles.\nNode Module Of The Week! - Weekly dose of hand picked node modules.\n\nVideos\n\nIntroduction to Node.js with Ryan Dahl\nHands on with Node.js\nNodetuts - Series of talks, including TCP & HTTP API servers, async programming, and more.\nV8 Garbage Collector - Trash talk about the V8 garbage collector.\n10 Things I Regret About Node.js by Ryan Dahl - Insightful talk by the creator of Node.js about some of its limitions.\n\nBooks\n\nNode.js in Action\nNode.js in Practice\nMastering Node\nNode.js 8 the Right Way\nProfessional Node.js: Building Javascript Based Scalable Software\nPractical Node.js: Building Real-World Scalable Web Apps\nMixu's Node book\nPro Express.js\nSecure Your Node.js Web Application\nExpress in Action\nPractical Modern JavaScript\nMastering Modular JavaScript\nGet Programming with Node.js\n\nBlogs\n\nNode.js blog\nwebapplog.com - Blog posts on Node.js and JavaScript from the author of Practical Node.js and Pro Express.js Azat Mardan.\n\nCourses\n\nLearn to build apps and APIs with Node.js - Video course by Wes Bos.\nReal Time Web with Node.js\nLearn and Understand Node.js\n\nCheatsheets\n\nExpress.js\nStream FAQs - Answering common questions about streams, covering pagination, events, and more.\nStrong Node.js - Checklist for source code security analysis of a Node.js web service.\n\nTools\n\nOctoLinker - Chrome extension that linkifies dependencies in package.json, .js, .jsx, .coffee and .md files on GitHub.\nnpm-hub - Chrome extension to display npm dependencies at the bottom of a repo's readme.\nRunKit - Embed a Node.js environment on any website.\nRequireBin - Shareable JavaScript programs powered by npm and browserify.\ngithub-npm-stats - Chrome extension that displays npm download stats on GitHub.\nnpm semver calculator - Visually explore what versions of a package a semver range matches.\n\nCommunity\n\nGitter\n#node.js on Freenode\nStack Overflow\nReddit\nTwitter\nHashnode\nDiscord\n\nMiscellaneous\n\nnodebots - Robots powered by JavaScript.\nnode-module-boilerplate - Boilerplate to kickstart creating a node module.\nmodern-node - Toolkit for creating node modules with Jest, Prettier, ESLint, and Standard.\ngenerator-nm - Scaffold out a node module.\nMicrosoft Node.js Guidelines - Tips, tricks, and resources for working with Node.js on Microsoft platforms.\nModule Requests & Ideas - Request a JavaScript module you wish existed or get ideas for modules.\n\nRelated lists\n\nawesome-npm - Resources and tips for using npm.\nawesome-cross-platform-nodejs - Resources for writing and testing cross-platform code.\n\nLicense\n\nTo the extent possible under law, Sindre Sorhus has waived all copyright and related or neighboring rights to this work.\n\n"}, {"repo": "juliangarnier/anime", "language": "JavaScript", "readme": "\n\n\n\n  anime.js\n\nJavaScript animation engine | animejs.com\n\n\n\n\n\nAnime.js (/\u02c8\u00e6n.\u0259.me\u026a/) is a lightweight JavaScript animation library with a simple, yet powerful API.\n  It works with CSS properties, SVG, DOM attributes and JavaScript Objects.\n\n\nGetting started\u00a0|\u00a0Documentation\u00a0|\u00a0Demos and examples\u00a0|\u00a0Browser support\n\nGetting started\nDownload\nVia npm\n$ npm install animejs --save\nor manual download.\nUsage\nES6 modules\nimport anime from 'animejs/lib/anime.es.js';\nCommonJS\nconst anime = require('animejs');\nFile include\nLink anime.min.js in your HTML :\n<script src=\"anime.min.js\"></script>\nHello world\nanime({\n  targets: 'div',\n  translateX: 250,\n  rotate: '1turn',\n  backgroundColor: '#FFF',\n  duration: 800\n});\nDocumentation\n\nTargets\nProperties\nProperty parameters\nAnimation parameters\nValues\nKeyframes\nStaggering\nTimeline\nControls\nCallbacks and promises\nSVG Animations\nEasing functions\nHelpers\n\nDemos and examples\n\nCodePen demos and examples\njuliangarnier.com\nanimejs.com\nMoving letters by @tobiasahlin\nGradient topography animation by @crnacura\nOrganic shape animations by @crnacura\nPieces slider by @lmgonzalves\nStaggering animations\nEasings animations\nSphere animation\nLayered animations\nanime.js logo animation\n\nBrowser support\n\n\n\nChrome\nSafari\nIE / Edge\nFirefox\nOpera\n\n\n\n\n24+\n8+\n11+\n32+\n15+\n\n\n\n\nWebsite | Documentation | Demos and examples | MIT License | \u00a9 2019 Julian Garnier.\n\n"}, {"repo": "serverless/serverless", "language": "JavaScript", "readme": "\n\n\n\n\n\n\n\n\nWebsite \u2022 Docs \u2022 Newsletter \u2022 Swag \u2022 Gitter \u2022 Forum \u2022 Meetups \u2022 Twitter \u2022 We're Hiring \u2022 Try Pro\nThe Serverless Framework \u2013 Build applications comprised of microservices that run in response to events, auto-scale for you, and only charge you when they run. This lowers the total cost of maintaining your apps, enabling you to build more logic, faster.\nThe Framework uses new event-driven compute services, like AWS Lambda, Google Cloud Functions, and more. It's a command-line tool, providing scaffolding, workflow automation and best practices for developing and deploying your serverless architecture. It's also completely extensible via plugins.\nServerless is an MIT open-source project, actively maintained by a full-time, venture-backed team.\nWatch the video overview here.\n\nContents\n\n\nQuick Start\nExamples\nServices\nFeatures\nPlugins\nContributing\nCommunity\nConsultants\nLicensing\nPrevious Version 0.5.x\n\nQuick Start\nWatch the video guide here or follow the steps below to create and deploy your first serverless microservice in minutes.\n\nInstall via npm:\n\nnpm install -g serverless\n\n\nSet-up your Provider Credentials. Watch the video on setting up credentials\n\n\nCreate a Service:\n\n\nYou can create a new service or install existing services.\n# Create a new Serverless Service/Project\nserverless create --template aws-nodejs --path my-service\n# Change into the newly created directory\ncd my-service\n\nDeploy a Service:\n\nUse this when you have made changes to your Functions, Events or Resources in serverless.yml or you simply want to deploy all changes within your Service at the same time.\nserverless deploy -v\n\nDeploy the Function:\n\nUse this to quickly upload and overwrite your AWS Lambda code on AWS, allowing you to develop faster.\nserverless deploy function -f hello\n\nInvoke the Function on AWS:\n\nInvokes an AWS Lambda Function on AWS and returns logs.\nserverless invoke -f hello -l\n\nInvoke the Function on your machine:\n\nInvokes an AWS Lambda Function on your local machine and returns logs.\nserverless invoke local -f hello -l\n\nFetch the Function Logs:\n\nOpen up a separate tab in your console and stream all logs for a specific Function using this command.\nserverless logs -f hello -t\n\nRemove the Service:\n\nRemoves all Functions, Events and Resources from your AWS account.\nserverless remove\nHow to Install a Service:\nThis is a convenience method to install a pre-made Serverless Service locally by downloading the Github repo and unzipping it. Services are listed below.\nserverless install -u https://github.com/your-url-to-the-serverless-service\nCheck out the Serverless Framework Guide for more information.\nServices (V1.0)\nThe following are services you can instantly install and use by running serverless install --url <service-github-url>\n\nserverless-examples\nCRUD - CRUD service, Scala Port\nCRUD with FaunaDB - CRUD service using FaunaDB\nCRUD with S3 - CRUD service using S3\nCRUD with Flask and SQLAlchemy - Python CRUD API service with Flask, SQLAlchemy and Swagger\nGraphQL Boilerplate - GraphQL application Boilerplate service\nAuthentication - Authentication boilerplate service\nMailer - Service for sending emails\nKinesis streams - Service to showcase Kinesis stream support\nDynamoDB streams - Service to showcase DynamoDB stream support\nLandingpage backend - Landingpage backend service to store E-Mail addresses\nFacebook Messenger Chatbot - Chatbot for the Facebook Messenger platform\nLambda chaining - Service which chains Lambdas through SNS\nSecured API - Service which exposes an API key accessible API\nAuthorizer - Service that uses API Gateway custom authorizers\nThumbnails - Service that takes an image url and returns a 100x100 thumbnail\nBoilerplate - Opinionated boilerplate\nES6 + Jest - ES6 + Jest Boilerplate\nPHP - Call a PHP function from your lambda\nRuby - Call a Ruby function from your lambda\nSlack App - Slack App Boilerplate with OAuth and Bot actions\nSwift - Full-featured project template to develop Lambda functions in Swift\nCloudwatch Alerts on Slack - Get AWS Cloudwatch alerts notifications on Slack\n\nNote: the serverless install command will only work on V1.0 or later.\nFeatures\n\nSupports Node.js, Python, Java, Go, C#, Ruby, Swift, Kotlin, PHP, Scala, & F#\nManages the lifecycle of your serverless architecture (build, deploy, update, delete).\nSafely deploy functions, events and their required resources together via provider resource managers (e.g., AWS CloudFormation).\nFunctions can be grouped (\"serverless services\") for easy management of code, resources & processes, across large projects & teams.\nMinimal configuration and scaffolding.\nBuilt-in support for multiple stages.\nOptimized for CI/CD workflows.\nLoaded with automation, optimization and best practices.\n100% Extensible: Extend or modify the Framework and its operations via Plugins.\nAn ecosystem of serverless services and plugins.\nA passionate and welcoming community!\n\nContributing\nWe love our contributors! Please read our Contributing Document to learn how you can start working on the Framework yourself.\nCheck out our help wanted or good first issue labels to find issues we want to move forward on with your help.\nCommunity\n\nEmail Updates\nServerless Forum\nGitter Chatroom\nServerless Meetups\nStackoverflow\nFacebook\nTwitter\nContact Us\n\nConsultants\nThese consultants use the Serverless Framework and can help you build your serverless projects.\n\nAndrew Griffiths - Independent consultant specialising in serverless technology\nTrek10\nParallax \u2013 they also built the David Guetta Campaign\nGeniusee\nNordcloud - they created several plugins, sponsor Serverless Days Helsinki and regularly host Serverless Finland Meetups.\nCarrot Creative\nmicroapps\nApiwise\nUseful IO - and Hail Messaging\nWhaleTech\nHop Labs\nWebscale\nAPI talent - who also run Serverless-Auckland Meetup\nBranded Crate\ncloudonaut\nPromptWorks\nCraftship\nEPX Labs - runs Serverless NYC Meetup\nRed Badger\nLanga - They built Trails.js\nEmerging Technology Advisors\nOneSpeed\nSeraro - Who also runs Atlanta Serverless Meetup (https://www.meetup.com/Atlanta-CABI-Camp-Cloud-AI-Blockchain-IOT) and Delhi Serverless Meetup (https://www.meetup.com/Delhi-NCR-Serverless-Architecture-Meetup/)\nsuperluminar - runs serverlessdays Hamburg and Serverless Meetup Hamburg\nOnica - AWS Premier Consulting Partner for Cloud Native Development and host of eleven regional Meetup groups.\nnull - maintains Bref to create serverless PHP applications\nTheodo - full stack teams passionate about Serverless that also run the Serverless Transformation Newsletter & Blog.\nJetBridge - cloud-native and serverless application development services.\n\n\nLicensing\nServerless is licensed under the MIT License.\nAll files located in the node_modules and external directories are externally maintained libraries used by this software which have their own licenses; we recommend you read them, as their terms may differ from the terms in the MIT License.\nPrevious Serverless Version 0.5.x\nYou can find projects and plugins relating to version 0.5 here. Note that these are not compatible with v1.0 but we are working diligently on updating them. Guide on building v1.0 plugins.\nYou can read the v0.5.x documentation at readme.io.\n\n"}, {"repo": "astaxie/build-web-application-with-golang", "language": "Go", "readme": "\nMultiple Language Versions\n\n(HTML - PDF) on GitBook\nDeutsch\nEnglish\nEspa\u00f1ol\nFran\u00e7ais\nPortugu\u00eas - Brasil\n\u0420\u0443\u0441\u0441\u043a\u0438\u0439\nT\u00fcrk\u00e7e\n\u09ac\u09be\u0982\u09b2\u09be\n\u65e5\u672c\u8a9e\n\u7b80\u4f53\u4e2d\u6587\n\u6b63\u9ad4\u4e2d\u6587\n\u067e\u0627\u0631\u0633\u06cc\n\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\n\nDonate\nAliPay: \nEnglish Donate:donate\nCommunity\nQQ\u7fa4\uff1a148647580\nBBS\uff1ahttp://gocn.io/\nContributors\n\nSee contributors page for full list of contributors.\n\nAcknowledgments\n\n\u56db\u6708\u4efd\u5e73\u6c11 (review\u4ee3\u7801)\nHong Ruiqi (review\u4ee3\u7801)\nBianJiang (\u7f16\u5199go\u5f00\u53d1\u5de5\u5177Vim\u548cEmacs\u7684\u8bbe\u7f6e)\nOling Cat(review\u4ee3\u7801)\nWenlei Wu(\u63d0\u4f9b\u4e00\u4e9b\u56fe\u7247\u5c55\u793a)\npolaris(review\u4e66)\n\u96e8\u75d5(review\u7b2c\u4e8c\u7ae0)\n\nLicense\nBook License: CC BY-SA 3.0 License\nCode License: BSD 3-Clause License\n\n"}, {"repo": "Hack-with-Github/Awesome-Hacking", "language": "None", "readme": "\n\nAwesome Hacking \nA collection of awesome lists for hackers, pentesters & security researchers.\nYour contributions are always welcome !\nAwesome Repositories\n\n\n\nRepository\nDescription\n\n\n\n\nAndroid Security\nCollection of Android security related resources\n\n\nAppSec\nResources for learning about application security\n\n\nAsset Discovery\nList of resources which help during asset discovery phase of a security assessment engagement\n\n\nBug Bounty\nList of Bug Bounty Programs and write-ups from the Bug Bounty hunters\n\n\nCTF\nList of CTF frameworks, libraries, resources and softwares\n\n\nCyber Skills\nCurated list of hacking environments where you can train your cyber skills legally and safely\n\n\nDevSecOps\nList of awesome DevSecOps tools with the help from community experiments and contributions\n\n\nExploit Development\nResources for learning about Exploit Development\n\n\nFuzzing\nList of fuzzing resources for learning Fuzzing and initial phases of Exploit Development like root cause analysis\n\n\nHacking\nList of awesome Hacking tutorials, tools and resources\n\n\nHacking Resources\nCollection of hacking / penetration testing resources to make you better!\n\n\nHoneypots\nList of honeypot resources\n\n\nIncident Response\nList of tools for incident response\n\n\nIndustrial Control System Security\nList of resources related to Industrial Control System (ICS) security\n\n\nInfoSec\nList of awesome infosec courses and training resources\n\n\nIoT Hacks\nCollection of Hacks in IoT Space\n\n\nMalware Analysis\nList of awesome malware analysis tools and resources\n\n\nOSINT\nList of amazingly awesome Open Source Intelligence (OSINT) tools and resources\n\n\nOSX and iOS Security\nOSX and iOS related security tools\n\n\nPcaptools\nCollection of tools developed by researchers in the Computer Science area to process network traces\n\n\nPentest\nList of awesome penetration testing resources, tools and other shiny things\n\n\nPHP Security\nLibraries for generating secure random numbers, encrypting data and scanning for vulnerabilities\n\n\nRed Teaming\nList of Awesome Red Team / Red Teaming Resources\n\n\nReversing\nList of awesome reverse engineering resources\n\n\nSec Talks\nList of awesome security talks\n\n\nSecLists\nCollection of multiple types of lists used during security assessments\n\n\nSecurity\nCollection of awesome software, libraries, documents, books, resources and cools stuffs about security\n\n\nServerless Security\nCollection of Serverless security related resources\n\n\nSocial Engineering\nList of awesome social engineering resources\n\n\nStatic Analysis\nList of static analysis tools, linters and code quality checkers for various programming languages\n\n\nThreat Intelligence\nList of Awesome Threat Intelligence resources\n\n\nVehicle Security\nList of resources for learning about vehicle security and car hacking\n\n\nVulnerability Research\nList of resources about Vulnerability Research\n\n\nWeb Hacking\nList of web application security\n\n\nWindows Exploitation - Advanced\nList of Awesome Advanced Windows Exploitation References\n\n\nWiFi Arsenal\nPack of various useful/useless tools for 802.11 hacking\n\n\nYARA\nList of awesome YARA rules, tools, and people\n\n\nHacker Roadmap\nA guide for amateur pen testers and a collection of hacking tools, resources and references to practice ethical hacking.\n\n\n\nOther useful repositories\n\n\n\nRepository\nDescription\n\n\n\n\nAdversarial Machine Learning\nCurated list of awesome adversarial machine learning resources\n\n\nAI Security\nCurated list of AI security resources\n\n\nAPI Security Checklist\nChecklist of the most important security countermeasures when designing, testing, and releasing your API\n\n\nAPT Notes\nVarious public documents, whitepapers and articles about APT campaigns\n\n\nBug Bounty Reference\nList of bug bounty write-up that is categorized by the bug nature\n\n\nCryptography\nCryptography resources and tools\n\n\nCTF Tool\nList of Capture The Flag (CTF) frameworks, libraries, resources and softwares\n\n\nCVE PoC\nList of CVE Proof of Concepts (PoCs)\n\n\nDetection Lab\nVagrant & Packer scripts to build a lab environment complete with security tooling and logging best practices\n\n\nForensics\nList of awesome forensic analysis tools and resources\n\n\nFree Programming Books\nFree programming books for developers\n\n\nGray Hacker Resources\nUseful for CTFs, wargames, pentesting\n\n\nHacker101\nA free class for web security by HackerOne\n\n\nInfosec Getting Started\nA collection of resources, documentation, links, etc to help people learn about Infosec\n\n\nInfosec Reference\nInformation Security Reference That Doesn't Suck\n\n\nIOC\nCollection of sources of indicators of compromise\n\n\nLinux Kernel Exploitation\nA bunch of links related to Linux kernel fuzzing and exploitation\n\n\nLockpicking\nResources relating to the security and compromise of locks, safes, and keys.\n\n\nMachine Learning for Cyber Security\nCurated list of tools and resources related to the use of machine learning for cyber security\n\n\nPayloads\nCollection of web attack payloads\n\n\nPayloadsAllTheThings\nList of useful payloads and bypass for Web Application Security and Pentest/CTF\n\n\nPentest Cheatsheets\nCollection of the cheat sheets useful for pentesting\n\n\nPentest Wiki\nA free online security knowledge library for pentesters / researchers\n\n\nProbable Wordlists\nWordlists sorted by probability originally created for password generation and testing\n\n\nResource List\nCollection of useful GitHub projects loosely categorised\n\n\nReverse Engineering\nList of Reverse Engineering articles, books, and papers\n\n\nRFSec-ToolKit\nCollection of Radio Frequency Communication Protocol Hacktools\n\n\nSecurity Cheatsheets\nCollection of cheatsheets for various infosec tools and topics\n\n\nSecurity List\nGreat security list for fun and profit\n\n\nShell\nList of awesome command-line frameworks, toolkits, guides and gizmos to make complete use of shell\n\n\nThreatHunter-Playbook\nA Threat hunter's playbook to aid the development of techniques and hypothesis for hunting campaigns\n\n\nWeb Security\nCurated list of Web Security materials and resources\n\n\n\nNeed more ?\nFollow Hack with GitHub on your favorite social media to get daily updates on interesting GitHub repositories related to Security.\n\nTwitter : @HackwithGithub\nFacebook : HackwithGithub\n\nContributions\nPlease have a look at contributing.md\n\n"}, {"repo": "k88hudson/git-flight-rules", "language": "None", "readme": "\nFlight rules for Git\n\ud83c\udf0d\nEnglish \u2219 Espa\u00f1ol  \u2219  \u0420\u0443\u0441\u0441\u043a\u0438\u0439 \u2219 \u7b80\u4f53\u4e2d\u6587\u2219 \ud55c\uad6d\uc5b4  \u2219  Ti\u1ebfng Vi\u1ec7t \u2219 Fran\u00e7ais\nWhat are \"flight rules\"?\nA guide for astronauts (now, programmers using Git) about what to do when things go wrong.\n\nFlight Rules are the hard-earned body of knowledge recorded in manuals that list, step-by-step, what to do if X occurs, and why. Essentially, they are extremely detailed, scenario-specific standard operating procedures. [...]\n\n\nNASA has been capturing our missteps, disasters and solutions since the early 1960s, when Mercury-era ground teams first started gathering \"lessons learned\" into a compendium that now lists thousands of problematic situations, from engine failure to busted hatch handles to computer glitches, and their solutions.\n\n\u2014 Chris Hadfield, An Astronaut's Guide to Life.\nConventions for this document\nFor clarity's sake all examples in this document use a customized bash prompt in order to indicate the current branch and whether or not there are staged changes. The branch is enclosed in parentheses, and a * next to the branch name indicates staged changes.\nAll commands should work for at least git version 2.13.0. See the git website to update your local git version.\n\nTable of Contents generated with DocToc\n\nRepositories\n\nI want to start a local repository\nI want to clone a remote repository\nI set the wrong remote repository\nI want to add code to someone else's repository\n\nSuggesting code via pull requests\nI need to update my fork with latest updates from the original repository\n\n\n\n\nEditing Commits\n\nWhat did I just commit?\nI wrote the wrong thing in a commit message\nI committed with the wrong name and email configured\nI want to remove a file from the previous commit\nI want to delete or remove my last commit\nDelete/remove arbitrary commit\nI tried to push my amended commit to a remote, but I got an error message\nI accidentally did a hard reset, and I want my changes back\nI accidentally committed and pushed a merge\nI accidentally committed and pushed files containing sensitive data\nI want to remove a large file from ever existing in repo history\n\nRecommended Technique: Use third-party bfg\nBuilt-in Technique: Use git-filter-branch\nFinal Step: Pushing your changed repo history\n\n\nI need to change the content of a commit which is not my last\n\n\nStaging\n\nI want to stage all tracked files and leave untracked files\n\nTo stage part of tracked files\n\n\nI need to add staged changes to the previous commit\nI want to stage part of a new file, but not the whole file\nI want to add changes in one file to two different commits\nI staged too many edits, and I want to break them out into a separate commit\nI want to stage my unstaged edits, and unstage my staged edits\n\n\nUnstaged Edits\n\nI want to move my unstaged edits to a new branch\nI want to move my unstaged edits to a different, existing branch\nI want to discard my local uncommitted changes (staged and unstaged)\nI want to discard specific unstaged changes\nI want to discard specific unstaged files\nI want to discard only my unstaged local changes\nI want to discard all of my untracked files\nI want to unstage a specific staged file\n\n\nBranches\n\nI want to list all branches\nCreate a branch from a commit\nI pulled from/into the wrong branch\nI want to discard local commits so my branch is the same as one on the server\nI committed to master instead of a new branch\nI want to keep the whole file from another ref-ish\nI made several commits on a single branch that should be on different branches\nI want to delete local branches that were deleted upstream\nI accidentally deleted my branch\nI want to delete a branch\nI want to delete multiple branches\nI want to rename a branch\nI want to checkout to a remote branch that someone else is working on\nI want to create a new remote branch from current local one\nI want to set a remote branch as the upstream for a local branch\nI want to set my HEAD to track the default remote branch\nI made changes on the wrong branch\n\n\nRebasing and Merging\n\nI want to undo rebase/merge\nI rebased, but I don't want to force push\nI need to combine commits\n\nSafe merging strategy\nI need to merge a branch into a single commit\nI want to combine only unpushed commits\nI need to abort the merge\n\n\nI need to update the parent commit of my branch\nCheck if all commits on a branch are merged\nPossible issues with interactive rebases\n\nThe rebase editing screen says 'noop'\nThere were conflicts\n\n\n\n\nStash\n\nStash all edits\nStash specific files\nStash with message\nApply a specific stash from list\nStash while keeping unstaged edits\n\n\nFinding\n\nI want to find a string in any commit\nI want to find by author/committer\nI want to list commits containing specific files\nI want to view the commit history for a specific function\nFind a tag where a commit is referenced\n\n\nSubmodules\n\nClone all submodules\nRemove a submodule\n\n\nMiscellaneous Objects\n\nCopy a folder or file from one branch to another\nRestore a deleted file\nDelete tag\nRecover a deleted tag\nDeleted Patch\nExporting a repository as a Zip file\nPush a branch and a tag that have the same name\n\n\nTracking Files\n\nI want to change a file name's capitalization, without changing the contents of the file\nI want to overwrite local files when doing a git pull\nI want to remove a file from Git but keep the file\nI want to revert a file to a specific revision\nI want to list changes of a specific file between commits or branches\nI want Git to ignore changes to a specific file\n\n\nDebugging with Git\nConfiguration\n\nI want to add aliases for some Git commands\nI want to add an empty directory to my repository\nI want to cache a username and password for a repository\nI want to make Git ignore permissions and filemode changes\nI want to set a global user\nI want to add command line coloring for Git\n\n\nI've no idea what I did wrong\nGit Shortcuts\n\nGit Bash\nPowerShell on Windows\n\n\nOther Resources\n\nBooks\nTutorials\nScripts and Tools\nGUI Clients\n\n\n\nRepositories\nI want to start a local repository\nTo initialize an existing directory as a Git repository:\n(my-folder) $ git init\nI want to clone a remote repository\nTo clone (copy) a remote repository, copy the URL for the repository, and run:\n$ git clone [url]\nThis will save it to a folder named the same as the remote repository's. Make sure you have a connection to the remote server you are cloning from (for most purposes this means making sure you are connected to the internet).\nTo clone it into a folder with a different name than the default repository name:\n$ git clone [url] name-of-new-folder\nI set the wrong remote repository\nThere are a few possible problems here:\nIf you cloned the wrong repository, simply delete the directory created after running git clone and clone the correct repository.\nIf you set the wrong repository as the origin of an existing local repository, change the URL of your origin by running:\n$ git remote set-url origin [url of the actual repo]\nFor more, see this StackOverflow topic.\nI want to add code to someone else's repository\nGit doesn't allow you to add code to someone else's repository without access rights. Neither does GitHub, which is not the same as Git, but rather a hosted service for Git repositories. However, you can suggest code using patches, or, on GitHub, forks and pull requests.\nFirst, a bit about forking. A fork is a copy of a repository. It is not a git operation, but is a common action on GitHub, Bitbucket, GitLab \u2014 or anywhere people host Git repositories. You can fork a repository through the hosted UI.\nSuggesting code via pull requests\nAfter you've forked a repository, you normally need to clone the repository to your machine. You can do some small edits on GitHub, for instance, without cloning, but this isn't a github-flight-rules list, so let's go with how to do this locally.\n# if you are using ssh\n$ git clone git@github.com:k88hudson/git-flight-rules.git\n\n# if you are using https\n$ git clone https://github.com/k88hudson/git-flight-rules.git\nIf you cd into the resulting directory, and type git remote, you'll see a list of the remotes. Normally there will be one remote - origin - which will point to k88hudson/git-flight-rules. In this case, we also want a remote that will point to your fork.\nFirst, to follow a Git convention, we normally use the remote name origin for your own repository and upstream for whatever you've forked. So, rename the origin remote to upstream\n$ git remote rename origin upstream\nYou can also do this using git remote set-url, but it takes longer and is more steps.\nThen, set up a new remote that points to your project.\n$ git remote add origin git@github.com:YourName/git-flight-rules.git\nNote that now you have two remotes.\n\norigin references your own repository.\nupstream references the original one.\n\nFrom origin, you can read and write. From upstream, you can only read.\nWhen you've finished making whatever changes you like, push your changes (normally in a branch) to the remote named origin. If you're on a branch, you could use --set-upstream to avoid specifying the remote tracking branch on every future push using this branch. For instance:\n$ (feature/my-feature) git push --set-upstream origin feature/my-feature\nThere is no way to suggest a pull request using the CLI using Git (although there are tools, like hub, which will do this for you). So, if you're ready to make a pull request, go to your GitHub (or another Git host) and create a new pull request. Note that your host automatically links the original and forked repositories.\nAfter all of this, do not forget to respond to any code review feedback.\nI need to update my fork with latest updates from the original repository\nAfter a while, the upstream repository may have been updated, and these updates need to be pulled into your origin repo. Remember that like you, other people are contributing too. Suppose that you are in your own feature branch and you need to update it with the original repository updates.\nYou probably have set up a remote that points to the original project. If not, do this now. Generally we use upstream as a remote name:\n$ (master) git remote add upstream <link-to-original-repository>\n# $ (master) git remote add upstream git@github.com:k88hudson/git-flight-rules.git\nNow you can fetch from upstream and get the latest updates.\n$ (master) git fetch upstream\n$ (master) git merge upstream/master\n\n# or using a single command\n$ (master) git pull upstream master\nEditing Commits\n\nWhat did I just commit?\nLet's say that you just blindly committed changes with git commit -a and you're not sure what the actual content of the commit you just made was. You can show the latest commit on your current HEAD with:\n(master)$ git show\nOr\n$ git log -n1 -p\nIf you want to see a file at a specific commit, you can also do this (where <commitid> is the commit you're interested in):\n$ git show <commitid>:filename\nI wrote the wrong thing in a commit message\nIf you wrote the wrong thing and the commit has not yet been pushed, you can do the following to change the commit message without changing the changes in the commit:\n$ git commit --amend --only\nThis will open your default text editor, where you can edit the message. On the other hand, you can do this all in one command:\n$ git commit --amend --only -m 'xxxxxxx'\nIf you have already pushed the message, you can amend the commit and force push, but this is not recommended.\n\nI committed with the wrong name and email configured\nIf it's a single commit, amend it\n$ git commit --amend --no-edit --author \"New Authorname <authoremail@mydomain.com>\"\nAn alternative is to correctly configure your author settings in git config --global author.(name|email) and then use\n$ git commit --amend --reset-author --no-edit\nIf you need to change all of history, see the man page for git filter-branch.\nI want to remove a file from the previous commit\nIn order to remove changes for a file from the previous commit, do the following:\n$ git checkout HEAD^ myfile\n$ git add myfile\n$ git commit --amend --no-edit\nIn case the file was newly added to the commit and you want to remove it (from Git alone), do:\n$ git rm --cached myfile\n$ git commit --amend --no-edit\nThis is particularly useful when you have an open patch and you have committed an unnecessary file, and need to force push to update the patch on a remote. The --no-edit option is used to keep the existing commit message.\n\nI want to delete or remove my last commit\nIf you need to delete pushed commits, you can use the following. However, it will irreversibly change your history, and mess up the history of anyone else who had already pulled from the repository. In short, if you're not sure, you should never do this, ever.\n$ git reset HEAD^ --hard\n$ git push --force-with-lease [remote] [branch]\nIf you haven't pushed, to reset Git to the state it was in before you made your last commit (while keeping your staged changes):\n(my-branch*)$ git reset --soft HEAD@{1}\n\n\nThis only works if you haven't pushed. If you have pushed, the only truly safe thing to do is git revert SHAofBadCommit. That will create a new commit that undoes all the previous commit's changes. Or, if the branch you pushed to is rebase-safe (ie. other devs aren't expected to pull from it), you can just use git push --force-with-lease. For more, see the above section.\n\nDelete/remove arbitrary commit\nThe same warning applies as above. Never do this if possible.\n$ git rebase --onto SHA1_OF_BAD_COMMIT^ SHA1_OF_BAD_COMMIT\n$ git push --force-with-lease [remote] [branch]\nOr do an interactive rebase and remove the line(s) corresponding to commit(s) you want to see removed.\n\nI tried to push my amended commit to a remote, but I got an error message\nTo https://github.com/yourusername/repo.git\n! [rejected]        mybranch -> mybranch (non-fast-forward)\nerror: failed to push some refs to 'https://github.com/tanay1337/webmaker.org.git'\nhint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Integrate the remote changes (e.g.\nhint: 'git pull ...') before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\nNote that, as with rebasing (see below), amending replaces the old commit with a new one, so you must force push (--force-with-lease) your changes if you have already pushed the pre-amended commit to your remote. Be careful when you do this \u2013 always make sure you specify a branch!\n(my-branch)$ git push origin mybranch --force-with-lease\nIn general, avoid force pushing. It is best to create and push a new commit rather than force-pushing the amended commit as it will cause conflicts in the source history for any other developer who has interacted with the branch in question or any child branches. --force-with-lease will still fail, if someone else was also working on the same branch as you, and your push would overwrite those changes.\nIf you are absolutely sure that nobody is working on the same branch or you want to update the tip of the branch unconditionally, you can use --force (-f), but this should be avoided in general.\n\nI accidentally did a hard reset, and I want my changes back\nIf you accidentally do git reset --hard, you can normally still get your commit back, as git keeps a log of everything for a few days.\nNote: This is only valid if your work is backed up, i.e., either committed or stashed. git reset --hard will remove uncommitted modifications, so use it with caution. (A safer option is git reset --keep.)\n(master)$ git reflog\nYou'll see a list of your past commits, and a commit for the reset. Choose the SHA of the commit you want to return to, and reset again:\n(master)$ git reset --hard SHA1234\nAnd you should be good to go.\n\nI accidentally committed and pushed a merge\nIf you accidentally merged a feature branch to the main development branch before it was ready to be merged, you can still undo the merge. But there's a catch: A merge commit has more than one parent (usually two).\nThe command to use\n(feature-branch)$ git revert -m 1 <commit>\nwhere the -m 1 option says to select parent number 1 (the branch into which the merge was made) as the parent to revert to.\nNote: the parent number is not a commit identifier. Rather, a merge commit has a line Merge: 8e2ce2d 86ac2e7. The parent number is the 1-based index of the desired parent on this line, the first identifier is number 1, the second is number 2, and so on.\n\nI accidentally committed and pushed files containing sensitive data\nIf you accidentally pushed files containing sensitive, or private data (passwords, keys, etc.), you can amend the previous commit. Keep in mind that once you have pushed a commit, you should consider any data it contains to be compromised. These steps can remove the sensitive data from your public repo or your local copy, but you cannot remove the sensitive data from other people's pulled copies. If you committed a password, change it immediately. If you committed a key, re-generate it immediately. Amending the pushed commit is not enough, since anyone could have pulled the original commit containing your sensitive data in the meantime.\nIf you edit the file and remove the sensitive data, then run\n(feature-branch)$ git add edited_file\n(feature-branch)$ git commit --amend --no-edit\n(feature-branch)$ git push --force-with-lease origin [branch]\nIf you want to remove an entire file (but keep it locally), then run\n(feature-branch)$ git rm --cached sensitive_file\necho sensitive_file >> .gitignore\n(feature-branch)$ git add .gitignore\n(feature-branch)$ git commit --amend --no-edit\n(feature-branch)$ git push --force-with-lease origin [branch]\nAlternatively store your sensitive data in local environment variables.\nIf you want to completely remove an entire file (and not keep it locally), then run\n(feature-branch)$ git rm sensitive_file\n(feature-branch)$ git commit --amend --no-edit\n(feature-branch)$ git push --force-with-lease origin [branch]\nIf you have made other commits in the meantime (i.e. the sensitive data is in a commit before the previous commit), you will have to rebase.\n\nI want to remove a large file from ever existing in repo history\nIf the file you want to delete is secret or sensitive, instead see how to remove sensitive files.\nEven if you delete a large or unwanted file in a recent commit, it still exists in git history, in your repo's .git folder, and will make git clone download unneeded files.\nThe actions in this part of the guide will require a force push, and rewrite large sections of repo history, so if you are working with remote collaborators, check first that any local work of theirs is pushed.\nThere are two options for rewriting history, the built-in git-filter-branch or bfg-repo-cleaner. bfg is significantly cleaner and more performant, but it is a third-party download and requires java. We will describe both alternatives. The final step is to force push your changes, which requires special consideration on top of a regular force push, given that a great deal of repo history will have been permanently changed.\nRecommended Technique: Use third-party bfg\nUsing bfg-repo-cleaner requires java. Download the bfg jar from the link here. Our examples will use bfg.jar, but your download may have a version number, e.g. bfg-1.13.0.jar.\nTo delete a specific file.\n(master)$ git rm path/to/filetoremove\n(master)$ git commit -m \"Commit removing filetoremove\"\n(master)$ java -jar ~/Downloads/bfg.jar --delete-files filetoremove\nNote that in bfg you must use the plain file name even if it is in a subdirectory.\nYou can also delete a file by pattern, e.g.:\n(master)$ git rm *.jpg\n(master)$ git commit -m \"Commit removing *.jpg\"\n(master)$ java -jar ~/Downloads/bfg.jar --delete-files *.jpg\nWith bfg, the files that exist on your latest commit will not be affected. For example, if you had several large .tga files in your repo, and then in an earlier commit, you deleted a subset of them, this call does not touch files present in the latest commit\nNote, if you renamed a file as part of a commit, e.g. if it started as LargeFileFirstName.mp4 and a commit changed it to LargeFileSecondName.mp4, running java -jar ~/Downloads/bfg.jar --delete-files LargeFileSecondName.mp4 will not remove it from git history. Either run the --delete-files command with both filenames, or with a matching pattern.\nBuilt-in Technique: Use git-filter-branch\ngit-filter-branch is more cumbersome and has less features, but you may use it if you cannot install or run bfg.\nIn the below, replace filepattern may be a specific name or pattern, e.g. *.jpg. This will remove files matching the pattern from all history and branches.\n(master)$ git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch filepattern' --prune-empty --tag-name-filter cat -- --all\nBehind-the-scenes explanation:\n--tag-name-filter cat is a cumbersome, but simplest, way to apply the original tags to the new commits, using the command cat.\n--prune-empty removes any now-empty commits.\nFinal Step: Pushing your changed repo history\nOnce you have removed your desired files, test carefully that you haven't broken anything in your repo - if you have, it is easiest to re-clone your repo to start over.\nTo finish, optionally use git garbage collection to minimize your local .git folder size, and then force push.\n(master)$ git reflog expire --expire=now --all && git gc --prune=now --aggressive\n(master)$ git push origin --force --tags\nSince you just rewrote the entire git repo history, the git push operation may be too large, and return the error \u201cThe remote end hung up unexpectedly\u201d. If this happens, you can try increasing the git post buffer:\n(master)$ git config http.postBuffer 524288000\n(master)$ git push --force\nIf this does not work, you will need to manually push the repo history in chunks of commits. In the command below, try increasing <number> until the push operation succeeds.\n(master)$ git push -u origin HEAD~<number>:refs/head/master --force\nOnce the push operation succeeds the first time, decrease <number> gradually until a conventional git push succeeds.\n\nI need to change the content of a commit which is not my last\nConsider you created some (e.g. three) commits and later realize you missed doing something that belongs contextually into the first of those commits. This bothers you, because if you'd create a new commit containing those changes, you'd have a clean code base, but your commits weren't atomic (i.e. changes that belonged to each other weren't in the same commit). In such a situation you may want to change the commit where these changes belong to, include them and have the following commits unaltered. In such a case, git rebase might save you.\nConsider a situation where you want to change the third last commit you made.\n(your-branch)$ git rebase -i HEAD~4\ngets you into interactive rebase mode, which allows you to edit any of your last three commits. A text editor pops up, showing you something like\npick 9e1d264 The third last commit\npick 4b6e19a The second to last commit\npick f4037ec The last commit\nwhich you change into\nedit 9e1d264 The third last commit\npick 4b6e19a The second to last commit\npick f4037ec The last commit\nThis tells rebase that you want to edit your third last commit and keep the other two unaltered. Then you'll save (and close) the editor. Git will then start to rebase. It stops on the commit you want to alter, giving you the chance to edit that commit. Now you can apply the changes which you missed applying when you initially committed that commit. You do so by editing and staging them. Afterwards you'll run\n(your-branch)$ git commit --amend\nwhich tells Git to recreate the commit, but to leave the commit message unedited. Having done that, the hard part is solved.\n(your-branch)$ git rebase --continue\nwill do the rest of the work for you.\nStaging\n\nI want to stage all tracked files and leave untracked files\n$ git add -u\nTo stage part of tracked files\n# to stage files with ext .txt\n$ git add -u *.txt\n\n# to stage all files inside directory src\n$ git add -u src/\n\nI need to add staged changes to the previous commit\n(my-branch*)$ git commit --amend\nIf you already know you don't want to change the commit message, you can tell git to reuse the commit message:\n(my-branch*)$ git commit --amend -C HEAD\n\nI want to stage part of a new file, but not the whole file\nNormally, if you want to stage part of a file, you run this:\n$ git add --patch filename.x\n-p will work for short. This will open interactive mode. You would be able to use the s option to split the commit - however, if the file is new, you will not have this option. To add a new file, do this:\n$ git add -N filename.x\nThen, you will need to use the e option to manually choose which lines to add. Running git diff --cached or\ngit diff --staged will show you which lines you have staged compared to which are still saved locally.\n\nI want to add changes in one file to two different commits\ngit add will add the entire file to a commit. git add -p will allow to interactively select which changes you want to add.\n\nI staged too many edits, and I want to break them out into a separate commit\ngit reset -p will open a patch mode reset dialog.  This is similar to git add -p, except that selecting \"yes\" will unstage the change, removing it from the upcoming commit.\n\nI want to stage my unstaged edits, and unstage my staged edits\nIn many cases, you should unstage all of your staged files and then pick the file you want and commit it. However, if you want to switch the staged and unstaged edits, you can create a temporary commit to store your staged files, stage your unstaged files and then stash them. Then, reset the temporary commit and pop your stash.\n$ git commit -m \"WIP\"\n$ git add . # This will also add untracked files.\n$ git stash\n$ git reset HEAD^\n$ git stash pop --index 0\nNOTE 1: The reason to use pop here is want to keep idempotent as much as possible.\nNOTE 2: Your staged files will be marked as unstaged if you don't use the --index flag. (This link explains why.)\nUnstaged Edits\n\nI want to move my unstaged edits to a new branch\n$ git checkout -b my-branch\n\nI want to move my unstaged edits to a different, existing branch\n$ git stash\n$ git checkout my-branch\n$ git stash pop\n\nI want to discard my local uncommitted changes (staged and unstaged)\nIf you want to discard all your local staged and unstaged changes, you can do this:\n(my-branch)$ git reset --hard\n# or\n(master)$ git checkout -f\nThis will unstage all files you might have staged with git add:\n$ git reset\nThis will revert all local uncommitted changes (should be executed in repo root):\n$ git checkout .\nYou can also revert uncommitted changes to a particular file or directory:\n$ git checkout [some_dir|file.txt]\nYet another way to revert all uncommitted changes (longer to type, but works from any subdirectory):\n$ git reset --hard HEAD\nThis will remove all local untracked files, so only files tracked by Git remain:\n$ git clean -fd\n-x will also remove all ignored files.\nI want to discard specific unstaged changes\nWhen you want to get rid of some, but not all changes in your working copy.\nCheckout undesired changes, keep good changes.\n$ git checkout -p\n# Answer y to all of the snippets you want to drop\nAnother strategy involves using stash. Stash all the good changes, reset working copy, and reapply good changes.\n$ git stash -p\n# Select all of the snippets you want to save\n$ git reset --hard\n$ git stash pop\nAlternatively, stash your undesired changes, and then drop stash.\n$ git stash -p\n# Select all of the snippets you don't want to save\n$ git stash drop\nI want to discard specific unstaged files\nWhen you want to get rid of one specific file in your working copy.\n$ git checkout myFile\nAlternatively, to discard multiple files in your working copy, list them all.\n$ git checkout myFirstFile mySecondFile\nI want to discard only my unstaged local changes\nWhen you want to get rid of all of your unstaged local uncommitted changes\n$ git checkout .\n\nI want to discard all of my untracked files\nWhen you want to get rid of all of your untracked files\n$ git clean -f\n\nI want to unstage a specific staged file\nSometimes we have one or more files that accidentally ended up being staged, and these files have not been committed before. To unstage them:\n$ git reset -- <filename>\nThis results in unstaging the file and make it look like it's untracked.\nBranches\nI want to list all branches\nList local branches\n$ git branch\nList remote branches\n$ git branch -r\nList all branches (both local and remote)\n$ git branch -a\n\nCreate a branch from a commit\n$ git checkout -b <branch> <SHA1_OF_COMMIT>\n\nI pulled from/into the wrong branch\nThis is another chance to use git reflog to see where your HEAD pointed before the bad pull.\n(master)$ git reflog\nab7555f HEAD@{0}: pull origin wrong-branch: Fast-forward\nc5bc55a HEAD@{1}: checkout: checkout message goes here\nSimply reset your branch back to the desired commit:\n$ git reset --hard c5bc55a\nDone.\n\nI want to discard local commits so my branch is the same as one on the server\nConfirm that you haven't pushed your changes to the server.\ngit status should show how many commits you are ahead of origin:\n(my-branch)$ git status\n# On branch my-branch\n# Your branch is ahead of 'origin/my-branch' by 2 commits.\n#   (use \"git push\" to publish your local commits)\n#\nOne way of resetting to match origin (to have the same as what is on the remote) is to do this:\n(master)$ git reset --hard origin/my-branch\n\nI committed to master instead of a new branch\nCreate the new branch while remaining on master:\n(master)$ git branch my-branch\nReset the branch master to the previous commit:\n(master)$ git reset --hard HEAD^\nHEAD^ is short for HEAD^1. This stands for the first parent of HEAD, similarly HEAD^2 stands for the second parent of the commit (merges can have 2 parents).\nNote that HEAD^2 is not the same as HEAD~2 (see this link for more information).\nAlternatively, if you don't want to use HEAD^, find out what the commit hash you want to set your master branch to (git log should do the trick). Then reset to that hash. git push will make sure that this change is reflected on your remote.\nFor example, if the hash of the commit that your master branch is supposed to be at is a13b85e:\n(master)$ git reset --hard a13b85e\nHEAD is now at a13b85e\nCheckout the new branch to continue working:\n(master)$ git checkout my-branch\n\nI want to keep the whole file from another ref-ish\nSay you have a working spike (see note), with hundreds of changes. Everything is working. Now, you commit into another branch to save that work:\n(solution)$ git add -A && git commit -m \"Adding all changes from this spike into one big commit.\"\nWhen you want to put it into a branch (maybe feature, maybe develop), you're interested in keeping whole files. You want to split your big commit into smaller ones.\nSay you have:\n\nbranch solution, with the solution to your spike. One ahead of develop.\nbranch develop, where you want to add your changes.\n\nYou can solve it bringing the contents to your branch:\n(develop)$ git checkout solution -- file1.txt\nThis will get the contents of that file in branch solution to your branch develop:\n# On branch develop\n# Your branch is up-to-date with 'origin/develop'.\n# Changes to be committed:\n#  (use \"git reset HEAD <file>...\" to unstage)\n#\n#        modified:   file1.txt\nThen, commit as usual.\nNote: Spike solutions are made to analyze or solve the problem. These solutions are used for estimation and discarded once everyone gets clear visualization of the problem. ~ Wikipedia.\n\nI made several commits on a single branch that should be on different branches\nSay you are on your master branch. Running git log, you see you have made two commits:\n(master)$ git log\n\ncommit e3851e817c451cc36f2e6f3049db528415e3c114\nAuthor: Alex Lee <alexlee@example.com>\nDate:   Tue Jul 22 15:39:27 2014 -0400\n\n    Bug #21 - Added CSRF protection\n\ncommit 5ea51731d150f7ddc4a365437931cd8be3bf3131\nAuthor: Alex Lee <alexlee@example.com>\nDate:   Tue Jul 22 15:39:12 2014 -0400\n\n    Bug #14 - Fixed spacing on title\n\ncommit a13b85e984171c6e2a1729bb061994525f626d14\nAuthor: Aki Rose <akirose@example.com>\nDate:   Tue Jul 21 01:12:48 2014 -0400\n\n    First commit\nLet's take note of our commit hashes for each bug (e3851e8 for #21, 5ea5173 for #14).\nFirst, let's reset our master branch to the correct commit (a13b85e):\n(master)$ git reset --hard a13b85e\nHEAD is now at a13b85e\nNow, we can create a fresh branch for our bug #21:\n(master)$ git checkout -b 21\n(21)$\nNow, let's cherry-pick the commit for bug #21 on top of our branch. That means we will be applying that commit, and only that commit, directly on top of whatever our head is at.\n(21)$ git cherry-pick e3851e8\nAt this point, there is a possibility there might be conflicts. See the There were conflicts section in the interactive rebasing section above for how to resolve conflicts.\nNow let's create a new branch for bug #14, also based on master\n(21)$ git checkout master\n(master)$ git checkout -b 14\n(14)$\nAnd finally, let's cherry-pick the commit for bug #14:\n(14)$ git cherry-pick 5ea5173\n\nI want to delete local branches that were deleted upstream\nOnce you merge a pull request on GitHub, it gives you the option to delete the merged branch in your fork. If you aren't planning to keep working on the branch, it's cleaner to delete the local copies of the branch so you don't end up cluttering up your working checkout with a lot of stale branches.\n$ git fetch -p upstream\nwhere, upstream is the remote you want to fetch from.\n\nI accidentally deleted my branch\nIf you're regularly pushing to remote, you should be safe most of the time. But still sometimes you may end up deleting your branches. Let's say we create a branch and create a new file:\n(master)$ git checkout -b my-branch\n(my-branch)$ git branch\n(my-branch)$ touch foo.txt\n(my-branch)$ ls\nREADME.md foo.txt\nLet's add it and commit.\n(my-branch)$ git add .\n(my-branch)$ git commit -m 'foo.txt added'\n(my-branch)$ foo.txt added\n 1 files changed, 1 insertions(+)\n create mode 100644 foo.txt\n(my-branch)$ git log\n\ncommit 4e3cd85a670ced7cc17a2b5d8d3d809ac88d5012\nAuthor: siemiatj <siemiatj@example.com>\nDate:   Wed Jul 30 00:34:10 2014 +0200\n\n    foo.txt added\n\ncommit 69204cdf0acbab201619d95ad8295928e7f411d5\nAuthor: Kate Hudson <katehudson@example.com>\nDate:   Tue Jul 29 13:14:46 2014 -0400\n\n    Fixes #6: Force pushing after amending commits\nNow we're switching back to master and 'accidentally' removing our branch.\n(my-branch)$ git checkout master\nSwitched to branch 'master'\nYour branch is up-to-date with 'origin/master'.\n(master)$ git branch -D my-branch\nDeleted branch my-branch (was 4e3cd85).\n(master)$ echo oh noes, deleted my branch!\noh noes, deleted my branch!\nAt this point you should get familiar with 'reflog', an upgraded logger. It stores the history of all the action in the repo.\n(master)$ git reflog\n69204cd HEAD@{0}: checkout: moving from my-branch to master\n4e3cd85 HEAD@{1}: commit: foo.txt added\n69204cd HEAD@{2}: checkout: moving from master to my-branch\n\nAs you can see we have commit hash from our deleted branch. Let's see if we can restore our deleted branch.\n(master)$ git checkout -b my-branch-help\nSwitched to a new branch 'my-branch-help'\n(my-branch-help)$ git reset --hard 4e3cd85\nHEAD is now at 4e3cd85 foo.txt added\n(my-branch-help)$ ls\nREADME.md foo.txt\nVoila! We got our removed file back. git reflog is also useful when rebasing goes terribly wrong.\nI want to delete a branch\nTo delete a remote branch:\n(master)$ git push origin --delete my-branch\nYou can also do:\n(master)$ git push origin :my-branch\nTo delete a local branch:\n(master)$ git branch -d my-branch\nTo delete a local branch that has not been merged to the current branch or an upstream:\n(master)$ git branch -D my-branch\nI want to delete multiple branches\nSay you want to delete all branches that start with fix/:\n(master)$ git branch | grep 'fix/' | xargs git branch -d\nI want to rename a branch\nTo rename the current (local) branch:\n(master)$ git branch -m new-name\nTo rename a different (local) branch:\n(master)$ git branch -m old-name new-name\nTo delete the old-name remote branch and push the new-name local branch:\n(master)$ git push origin :old_name new_name\n\nI want to checkout to a remote branch that someone else is working on\nFirst, fetch all branches from remote:\n(master)$ git fetch --all\nSay you want to checkout to daves from the remote.\n(master)$ git checkout --track origin/daves\nBranch daves set up to track remote branch daves from origin.\nSwitched to a new branch 'daves'\n(--track is shorthand for git checkout -b [branch] [remotename]/[branch])\nThis will give you a local copy of the branch daves, and any update that has been pushed will also show up remotely.\nI want to create a new remote branch from current local one\n$ git push <remote> HEAD\nIf you would also like to set that remote branch as upstream for the current one, use the following instead:\n$ git push -u <remote> HEAD\nWith the upstream mode and the simple (default in Git 2.0) mode of the push.default config, the following command will push the current branch with regards to the remote branch that has been registered previously with -u:\n$ git push\nThe behavior of the other modes of git push is described in the doc of push.default.\nI want to set a remote branch as the upstream for a local branch\nYou can set a remote branch as the upstream for the current local branch using:\n$ git branch --set-upstream-to [remotename]/[branch]\n# or, using the shorthand:\n$ git branch -u [remotename]/[branch]\nTo set the upstream remote branch for another local branch:\n$ git branch -u [remotename]/[branch] [local-branch]\n\nI want to set my HEAD to track the default remote branch\nBy checking your remote branches, you can see which remote branch your HEAD is tracking. In some cases, this is not the desired branch.\n$ git branch -r\n  origin/HEAD -> origin/gh-pages\n  origin/master\nTo change origin/HEAD to track origin/master, you can run this command:\n$ git remote set-head origin --auto\norigin/HEAD set to master\nI made changes on the wrong branch\nYou've made uncommitted changes and realise you're on the wrong branch. Stash changes and apply them to the branch you want:\n(wrong_branch)$ git stash\n(wrong_branch)$ git checkout <correct_branch>\n(correct_branch)$ git stash apply\nRebasing and Merging\n\nI want to undo rebase/merge\nYou may have merged or rebased your current branch with a wrong branch, or you can't figure it out or finish the rebase/merge process. Git saves the original HEAD pointer in a variable called ORIG_HEAD before doing dangerous operations, so it is simple to recover your branch at the state before the rebase/merge.\n(my-branch)$ git reset --hard ORIG_HEAD\n\nI rebased, but I don't want to force push\nUnfortunately, you have to force push, if you want those changes to be reflected on the remote branch. This is because you have changed the history. The remote branch won't accept changes unless you force push. This is one of the main reasons many people use a merge workflow, instead of a rebasing workflow - large teams can get into trouble with developers force pushing. Use this with caution. A safer way to use rebase is not to reflect your changes on the remote branch at all, and instead to do the following:\n(master)$ git checkout my-branch\n(my-branch)$ git rebase -i master\n(my-branch)$ git checkout master\n(master)$ git merge --ff-only my-branch\nFor more, see this SO thread.\n\nI need to combine commits\nLet's suppose you are working in a branch that is/will become a pull-request against master. In the simplest case when all you want to do is to combine all commits into a single one and you don't care about commit timestamps, you can reset and recommit. Make sure the master branch is up to date and all your changes committed, then:\n(my-branch)$ git reset --soft master\n(my-branch)$ git commit -am \"New awesome feature\"\nIf you want more control, and also to preserve timestamps, you need to do something called an interactive rebase:\n(my-branch)$ git rebase -i master\nIf you aren't working against another branch you'll have to rebase relative to your HEAD. If you want to squash the last 2 commits, for example, you'll have to rebase against HEAD~2. For the last 3, HEAD~3, etc.\n(master)$ git rebase -i HEAD~2\nAfter you run the interactive rebase command, you will see something like this in your  text editor:\npick a9c8a1d Some refactoring\npick 01b2fd8 New awesome feature\npick b729ad5 fixup\npick e3851e8 another fix\n\n# Rebase 8074d12..b729ad5 onto 8074d12\n#\n# Commands:\n#  p, pick = use commit\n#  r, reword = use commit, but edit the commit message\n#  e, edit = use commit, but stop for amending\n#  s, squash = use commit, but meld into previous commit\n#  f, fixup = like \"squash\", but discard this commit's log message\n#  x, exec = run command (the rest of the line) using shell\n#\n# These lines can be re-ordered; they are executed from top to bottom.\n#\n# If you remove a line here THAT COMMIT WILL BE LOST.\n#\n# However, if you remove everything, the rebase will be aborted.\n#\n# Note that empty commits are commented out\nAll the lines beginning with a # are comments, they won't affect your rebase.\nThen you replace pick commands with any in the list above, and you can also remove commits by removing corresponding lines.\nFor example, if you want to leave the oldest (first) commit alone and combine all the following commits with the second oldest, you should edit the letter next to each commit except the first and the second to say f:\npick a9c8a1d Some refactoring\npick 01b2fd8 New awesome feature\nf b729ad5 fixup\nf e3851e8 another fix\nIf you want to combine these commits and rename the commit, you should additionally add an r next to the second commit or simply use s instead of f:\npick a9c8a1d Some refactoring\npick 01b2fd8 New awesome feature\ns b729ad5 fixup\ns e3851e8 another fix\nYou can then rename the commit in the next text prompt that pops up.\nNewer, awesomer features\n\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n# rebase in progress; onto 8074d12\n# You are currently editing a commit while rebasing branch 'master' on '8074d12'.\n#\n# Changes to be committed:\n#   modified:   README.md\n#\n\nIf everything is successful, you should see something like this:\n(master)$ Successfully rebased and updated refs/heads/master.\nSafe merging strategy\n--no-commit performs the merge but pretends the merge failed and does not autocommit, giving the user a chance to inspect and further tweak the merge result before committing. no-ff maintains evidence that a feature branch once existed, keeping project history consistent.\n(master)$ git merge --no-ff --no-commit my-branch\nI need to merge a branch into a single commit\n(master)$ git merge --squash my-branch\n\nI want to combine only unpushed commits\nSometimes you have several work in progress commits that you want to combine before you push them upstream. You don't want to accidentally combine any commits that have already been pushed upstream because someone else may have already made commits that reference them.\n(master)$ git rebase -i @{u}\nThis will do an interactive rebase that lists only the commits that you haven't already pushed, so it will be safe to reorder/fix/squash anything in the list.\nI need to abort the merge\nSometimes the merge can produce problems in certain files, in those cases we can use the option abort to abort the current conflict resolution process, and try to reconstruct the pre-merge state.\n(my-branch)$ git merge --abort\nThis command is available since Git version >= 1.7.4\nI need to update the parent commit of my branch\nSay I have a master branch, a feature-1 branch branched from master, and a feature-2 branch branched off of feature-1. If I make a commit to feature-1, then the parent commit of feature-2 is no longer accurate (it should be the head of feature-1, since we branched off of it). We can fix this with git rebase --onto.\n(feature-2)$ git rebase --onto feature-1 <the first commit in your feature-2 branch that you don't want to bring along> feature-2\nThis helps in sticky scenarios where you might have a feature built on another feature that hasn't been merged yet, and a bugfix on the feature-1 branch needs to be reflected in your feature-2 branch.\nCheck if all commits on a branch are merged\nTo check if all commits on a branch are merged into another branch, you should diff between the heads (or any commits) of those branches:\n(master)$ git log --graph --left-right --cherry-pick --oneline HEAD...feature/120-on-scroll\nThis will tell you if any commits are in one but not the other, and will give you a list of any nonshared between the branches. Another option is to do this:\n(master)$ git log master ^feature/120-on-scroll --no-merges\nPossible issues with interactive rebases\n\nThe rebase editing screen says 'noop'\nIf you're seeing this:\nnoop\n\nThat means you are trying to rebase against a branch that is at an identical commit, or is ahead of your current branch. You can try:\n\nmaking sure your master branch is where it should be\nrebase against HEAD~2 or earlier instead\n\n\nThere were conflicts\nIf you are unable to successfully complete the rebase, you may have to resolve conflicts.\nFirst run git status to see which files have conflicts in them:\n(my-branch)$ git status\nOn branch my-branch\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n  both modified:   README.md\nIn this example, README.md has conflicts. Open that file and look for the following:\n   <<<<<<< HEAD\n   some code\n   =========\n   some code\n   >>>>>>> new-commit\nYou will need to resolve the differences between the code that was added in your new commit (in the example, everything from the middle line to new-commit) and your HEAD.\nIf you want to keep one branch's version of the code, you can use --ours or --theirs:\n(master*)$ git checkout --ours README.md\n\nWhen merging, use --ours to keep changes from the local branch, or --theirs to keep changes from the other branch.\nWhen rebasing, use --theirs to keep changes from the local branch, or --ours to keep changes from the other branch. For an explanation of this swap, see this note in the Git documentation.\n\nIf the merges are more complicated, you can use a visual diff editor:\n(master*)$ git mergetool -t opendiff\nAfter you have resolved all conflicts and tested your code, git add the files you have changed, and then continue the rebase with git rebase --continue\n(my-branch)$ git add README.md\n(my-branch)$ git rebase --continue\nIf after resolving all the conflicts you end up with an identical tree to what it was before the commit, you need to git rebase --skip instead.\nIf at any time you want to stop the entire rebase and go back to the original state of your branch, you can do so:\n(my-branch)$ git rebase --abort\n\nStash\nStash all edits\nTo stash all the edits in your working directory\n$ git stash\nIf you also want to stash untracked files, use -u option.\n$ git stash -u\nStash specific files\nTo stash only one file from your working directory\n$ git stash push working-directory-path/filename.ext\nTo stash multiple files from your working directory\n$ git stash push working-directory-path/filename1.ext working-directory-path/filename2.ext\n\nStash with message\n$ git stash save <message>\nor\n$ git stash push -m <message>\n\nApply a specific stash from list\nFirst check your list of stashes with message using\n$ git stash list\nThen apply a specific stash from the list using\n$ git stash apply \"stash@{n}\"\nHere, 'n' indicates the position of the stash in the stack. The topmost stash will be position 0.\nFurthermore, using a time-based stash reference is also possible.\n$ git stash apply \"stash@{2.hours.ago}\"\n\nStash while keeping unstaged edits\nYou can manually create a stash commit, and then use git stash store.\n$ git stash create\n$ git stash store -m <message> CREATED_SHA1\nFinding\nI want to find a string in any commit\nTo find a certain string which was introduced in any commit, you can use the following structure:\n$ git log -S \"string to find\"\nCommons parameters:\n\n\n--source means to show the ref name given on the command line by which each commit was reached.\n\n\n--all means to start from every branch.\n\n\n--reverse prints in reverse order, it means that will show the first commit that made the change.\n\n\n\nI want to find by author/committer\nTo find all commits by author/committer you can use:\n$ git log --author=<name or email>\n$ git log --committer=<name or email>\nKeep in mind that author and committer are not the same. The --author is the person who originally wrote the code; on the other hand, the --committer, is the person who committed the code on behalf of the original author.\nI want to list commits containing specific files\nTo find all commits containing a specific file you can use:\n$ git log -- <path to file>\nYou would usually specify an exact path, but you may also use wild cards in the path and file name:\n$ git log -- **/*.js\nWhile using wildcards, it's useful to inform --name-status to see the list of committed files:\n$ git log --name-status -- **/*.js\n\nI want to view the commit history for a specific function\nTo trace the evolution of a single function you can use:\n$ git log -L :FunctionName:FilePath\nNote that you can combine this with further git log options, like revision ranges and commit limits.\nFind a tag where a commit is referenced\nTo find all tags containing a specific commit:\n$ git tag --contains <commitid>\nSubmodules\n\nClone all submodules\n$ git clone --recursive git://github.com/foo/bar.git\nIf already cloned:\n$ git submodule update --init --recursive\n\nRemove a submodule\nCreating a submodule is pretty straight-forward, but deleting them less so. The commands you need are:\n$ git submodule deinit submodulename\n$ git rm submodulename\n$ git rm --cached submodulename\n$ rm -rf .git/modules/submodulename\nMiscellaneous Objects\nCopy a folder or file from one branch to another\n$ git checkout <branch-you-want-the-directory-from> -- <folder-name or file-name>\nRestore a deleted file\nFirst find the commit when the file last existed:\n$ git rev-list -n 1 HEAD -- filename\nThen checkout that file:\ngit checkout deletingcommitid^ -- filename\n\nDelete tag\n$ git tag -d <tag_name>\n$ git push <remote> :refs/tags/<tag_name>\n\nRecover a deleted tag\nIf you want to recover a tag that was already deleted, you can do so by following these steps: First, you need to find the unreachable tag:\n$ git fsck --unreachable | grep tag\nMake a note of the tag's hash. Then, restore the deleted tag with following, making use of git update-ref:\n$ git update-ref refs/tags/<tag_name> <hash>\nYour tag should now have been restored.\nDeleted Patch\nIf someone has sent you a pull request on GitHub, but then deleted their original fork, you will be unable to clone their repository or to use git am as the .diff, .patch URLs become unavailable. But you can checkout the PR itself using GitHub's special refs. To fetch the content of PR#1 into a new branch called pr_1:\n$ git fetch origin refs/pull/1/head:pr_1\nFrom github.com:foo/bar\n * [new ref]         refs/pull/1/head -> pr_1\nExporting a repository as a Zip file\n$ git archive --format zip --output /full/path/to/zipfile.zip master\nPush a branch and a tag that have the same name\nIf there is a tag on a remote repository that has the same name as a branch you will get the following error when trying to push that branch with a standard $ git push <remote> <branch> command.\n$ git push origin <branch>\nerror: dst refspec same matches more than one.\nerror: failed to push some refs to '<git server>'\nFix this by specifying you want to push the head reference.\n$ git push origin refs/heads/<branch-name>\nIf you want to push a tag to a remote repository that has the same name as a branch, you can use a similar command.\n$ git push origin refs/tags/<tag-name>\nTracking Files\n\nI want to change a file name's capitalization, without changing the contents of the file\n(master)$ git mv --force myfile MyFile\nI want to overwrite local files when doing a git pull\n(master)$ git fetch --all\n(master)$ git reset --hard origin/master\n\nI want to remove a file from Git but keep the file\n(master)$ git rm --cached log.txt\nI want to revert a file to a specific revision\nAssuming the hash of the commit you want is c5f567:\n(master)$ git checkout c5f567 -- file1/to/restore file2/to/restore\nIf you want to revert to changes made just 1 commit before c5f567, pass the commit hash as c5f567~1:\n(master)$ git checkout c5f567~1 -- file1/to/restore file2/to/restore\nI want to list changes of a specific file between commits or branches\nAssuming you want to compare last commit with file from commit c5f567:\n$ git diff HEAD:path_to_file/file c5f567:path_to_file/file\nSame goes for branches:\n$ git diff master:path_to_file/file staging:path_to_file/file\nI want Git to ignore changes to a specific file\nThis works great for config templates or other files that require locally adding credentials that shouldn't be committed.\n$ git update-index --assume-unchanged file-to-ignore\nNote that this does not remove the file from source control - it is only ignored locally. To undo this and tell Git to notice changes again, this clears the ignore flag:\n$ git update-index --no-assume-unchanged file-to-stop-ignoring\nDebugging with Git\nThe git-bisect command uses a binary search to find which commit in your Git history introduced a bug.\nSuppose you're on the master branch, and you want to find the commit that broke some feature. You start bisect:\n$ git bisect start\nThen you should specify which commit is bad, and which one is known to be good. Assuming that your current version is bad, and v1.1.1 is good:\n$ git bisect bad\n$ git bisect good v1.1.1\nNow git-bisect selects a commit in the middle of the range that you specified, checks it out, and asks you whether it's good or bad. You should see something like:\n$ Bisecting: 5 revision left to test after this (roughly 5 step)\n$ [c44abbbee29cb93d8499283101fe7c8d9d97f0fe] Commit message\n$ (c44abbb)$\nYou will now check if this commit is good or bad. If it's good:\n$ (c44abbb)$ git bisect good\nand git-bisect will select another commit from the range for you. This process (selecting good or bad) will repeat until there are no more revisions left to inspect, and the command will finally print a description of the first bad commit.\nConfiguration\nI want to add aliases for some Git commands\nOn OS X and Linux, your git configuration file is stored in ~/.gitconfig.  I've added some example aliases I use as shortcuts (and some of my common typos) in the [alias] section as shown below:\n[alias]\n    a = add\n    amend = commit --amend\n    c = commit\n    ca = commit --amend\n    ci = commit -a\n    co = checkout\n    d = diff\n    dc = diff --changed\n    ds = diff --staged\n    extend = commit --amend -C HEAD\n    f = fetch\n    loll = log --graph --decorate --pretty=oneline --abbrev-commit\n    m = merge\n    one = log --pretty=oneline\n    outstanding = rebase -i @{u}\n    reword = commit --amend --only\n    s = status\n    unpushed = log @{u}\n    wc = whatchanged\n    wip = rebase -i @{u}\n    zap = fetch -p\n    day = log --reverse --no-merges --branches=* --date=local --since=midnight --author=\\\"$(git config --get user.name)\\\"\n    delete-merged-branches = \"!f() { git checkout --quiet master && git branch --merged | grep --invert-match '\\\\*' | xargs -n 1 git branch --delete; git checkout --quiet @{-1}; }; f\"\nI want to add an empty directory to my repository\nYou can\u2019t! Git doesn\u2019t support this, but there\u2019s a hack. You can create a .gitignore file in the directory with the following contents:\n # Ignore everything in this directory\n *\n # Except this file\n !.gitignore\n\nAnother common convention is to make an empty file in the folder, titled .gitkeep.\n$ mkdir mydir\n$ touch mydir/.gitkeep\nYou can also name the file as just .keep , in which case the second line above would be touch mydir/.keep\nI want to cache a username and password for a repository\nYou might have a repository that requires authentication.  In which case you can cache a username and password so you don't have to enter it on every push and pull. Credential helper can do this for you.\n$ git config --global credential.helper cache\n# Set git to use the credential memory cache\n$ git config --global credential.helper 'cache --timeout=3600'\n# Set the cache to timeout after 1 hour (setting is in seconds)\nTo find a credential helper:\n$ git help -a | grep credential\n# Shows you possible credential helpers\nFor OS specific credential caching:\n$ git config --global credential.helper osxkeychain\n# For OSX\n$ git config --global credential.helper manager\n# Git for Windows 2.7.3+\n$ git config --global credential.helper gnome-keyring\n# Ubuntu and other GNOME-based distros\nMore credential helpers can likely be found for different distributions and operating systems.\nI want to make Git ignore permissions and filemode changes\n$ git config core.fileMode false\nIf you want to make this the default behaviour for logged-in users, then use:\n$ git config --global core.fileMode false\nI want to set a global user\nTo configure user information used across all local repositories, and to set a name that is identifiable for credit when review version history:\n$ git config --global user.name \u201c[firstname lastname]\u201d\nTo set an email address that will be associated with each history marker:\ngit config --global user.email \u201c[valid-email]\u201d\nI want to add command line coloring for Git\nTo set automatic command line coloring for Git for easy reviewing:\n$ git config --global color.ui auto\nI've no idea what I did wrong\nSo, you're screwed - you reset something, or you merged the wrong branch, or you force pushed and now you can't find your commits. You know, at some point, you were doing alright, and you want to go back to some state you were at.\nThis is what git reflog is for. reflog keeps track of any changes to the tip of a branch, even if that tip isn't referenced by a branch or a tag. Basically, every time HEAD changes, a new entry is added to the reflog. This only works for local repositories, sadly, and it only tracks movements (not changes to a file that weren't recorded anywhere, for instance).\n(master)$ git reflog\n0a2e358 HEAD@{0}: reset: moving to HEAD~2\n0254ea7 HEAD@{1}: checkout: moving from 2.2 to master\nc10f740 HEAD@{2}: checkout: moving from master to 2.2\nThe reflog above shows a checkout from master to the 2.2 branch and back. From there, there's a hard reset to an older commit. The latest activity is represented at the top labeled HEAD@{0}.\nIf it turns out that you accidentally moved back, the reflog will contain the commit master pointed to (0254ea7) before you accidentally dropped 2 commits.\n$ git reset --hard 0254ea7\nUsing git reset it is then possible to change master back to the commit it was before. This provides a safety net in case history was accidentally changed.\n(copied and edited from Source).\n\nGit Shortcuts\nGit Bash\nOnce you're comfortable with what the above commands are doing, you might want to create some shortcuts for Git Bash. This allows you to work a lot faster by doing complex tasks in really short commands.\nalias sq=squash\n\nfunction squash() {\n    git rebase -i HEAD~$1\n}\nCopy those commands to your .bashrc or .bash_profile.\nPowerShell on Windows\nIf you are using PowerShell on Windows, you can also set up aliases and functions. Add these commands to your profile, whose path is defined in the $profile variable. Learn more at the About Profiles page on the Microsoft documentation site.\nSet-Alias sq Squash-Commits\n\nfunction Squash-Commits {\n  git rebase -i HEAD~$1\n}\nOther Resources\nBooks\n\nLearn Enough Git to Be Dangerous - A book by Michael Hartl covering Git from basics\nPro Git - Scott Chacon and Ben Straub's excellent book about Git\nGit Internals - Scott Chacon's other excellent book about Git\nNasa handbook\n\nTutorials\n\n19 Git Tips For Everyday Use - A list of useful Git one liners\nAtlassian's Git tutorial Get Git right with tutorials from beginner to advanced.\nLearn Git branching An interactive web based branching/merging/rebasing tutorial\nGetting solid at Git rebase vs. merge\nGit Commands and Best Practices Cheat Sheet - A Git cheat sheet in a blog post with more explanations\nGit from the inside out - A tutorial that dives into Git's internals\ngit-workflow - Aaron Meurer's howto on using Git to contribute to open source repositories\nGitHub as a workflow - An interesting take on using GitHub as a workflow, particularly with empty PRs\nGithug - A game to learn more common Git workflows\nlearnGitBranching - An interactive git visualization to challenge and educate!\n\nScripts and Tools\n\nfirstaidgit.io A searchable selection of the most frequently asked Git questions\ngit-extra-commands - a collection of useful extra Git scripts\ngit-extras - GIT utilities -- repo summary, repl, changelog population, author commit percentages and more\ngit-fire - git-fire is a Git plugin that helps in the event of an emergency by adding all current files, committing, and pushing to a new branch (to prevent merge conflicts).\ngit-tips - Small Git tips\ngit-town - Generic, high-level Git workflow support! http://www.git-town.com\n\nGUI Clients\n\nGitKraken - The downright luxurious Git client,for Windows, Mac & Linux\ngit-cola - another Git client for Windows and OS X\nGitUp - A newish GUI that has some very opinionated ways of dealing with Git's complications\ngitx-dev - another graphical Git client for OS X\nSourcetree - Simplicity meets power in a beautiful and free Git GUI. For Windows and Mac.\nTower - graphical Git client for OS X (paid)\ntig - terminal text-mode interface for Git\nMagit - Interface to Git implemented as an Emacs package.\nGitExtensions - a shell extension, a Visual Studio 2010-2015 plugin and a standalone Git repository tool.\nFork - a fast and friendly Git client for Mac (beta)\ngmaster - a Git client for Windows that has 3-way merge, analyze refactors, semantic diff and merge (beta)\ngitk - a Git client for linux to allow simple view of repo state.\nSublimeMerge - Blazing fast, extensible client that provides 3-way merges, powerful search and syntax highlighting, in active development.\n\n\n"}, {"repo": "gogs/gogs", "language": "Go", "readme": "\nGogs\n   \n\nCurrent tip version: .VERSION (see Releases for binary versions)\n\n\n\nWeb\nUI\nPreview\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant Notes\n\nYOU MUST READ Contributing Code BEFORE STARTING TO WORK ON A PULL REQUEST.\nDue to testing purpose, data of try.gogs.io was reset in Jan 28, 2015 and will reset multiple times after. Please do NOT put your important data on the site.\nThe demo site try.gogs.io is running under master branch.\nIf you're interested in using APIs, we have experimental support with documentation.\n\n\u7b80\u4f53\u4e2d\u6587\nVision\nThe Gogs (/g\u0254gs/) project aims to build a simple, stable and extensible self-hosted Git service that can be setup in the most painless way. With Go, this can be done with an independent binary distribution across ALL platforms that Go supports, including Linux, macOS, Windows and ARM.\nOverview\n\nPlease see the Documentation for common usages and change log.\nWant to try it before doing anything else? Do it online!\nHaving trouble? Get help with Troubleshooting or User Forum.\nWant to help with localization? Check out the guide!\n\nFeatures\n\nActivity timeline\nSSH and HTTP/HTTPS protocols\nSMTP/LDAP/Reverse proxy authentication\nReverse proxy with sub-path\nAccount/Organization/Repository management\nAdd/Remove repository collaborators\nRepository/Organization webhooks (including Slack and Discord)\nRepository Git hooks/deploy keys\nRepository issues, pull requests, wiki and protected branches\nMigrate and mirror repository and its wiki\nWeb editor for repository files and wiki\nJupyter Notebook\nTwo-factor authentication\nGravatar and Federated avatar with custom source\nMail service\nAdministration panel\nSupports MySQL, PostgreSQL, SQLite3, MSSQL and TiDB (via MySQL protocol)\nMulti-language support (30 languages)\n\nHardware Requirements\n\nA Raspberry Pi or $5 Digital Ocean Droplet is more than enough to get you started. Some even use 64MB RAM Docker CaaS.\n2 CPU cores and 512MB RAM would be the baseline for teamwork.\nIncrease CPU cores when your team size gets significantly larger, memory footprint remains low.\n\nBrowser Support\n\nPlease see Semantic UI for specific versions of supported browsers.\nThe smallest resolution officially supported is 1024*768, however the UI may still look right in smaller resolutions, but no promises or fixes.\n\nInstallation\nMake sure you install the prerequisites first.\nThere are 6 ways to install Gogs:\n\nInstall from binary\nInstall from source\nInstall from packages\nShip with Docker\nInstall with Vagrant\nInstall with Kubernetes Using Helm Charts\n\nTutorials\n\nHow To Set Up Gogs on Ubuntu 14.04\nRun your own GitHub-like service with the help of Docker\nDockerized Gogs git server and alpine postgres in 20 minutes or less\nHost Your Own Private GitHub with Gogs\n\u4f7f\u7528 Gogs \u642d\u5efa\u81ea\u5df1\u7684 Git \u670d\u52a1\u5668 (Chinese)\n\u963f\u91cc\u4e91\u4e0a Ubuntu 14.04 64 \u4f4d\u5b89\u88c5 Gogs (Chinese)\nInstalling Gogs on FreeBSD\nGogs on Raspberry Pi\nCloudflare Full SSL with Gogs using NGINX\n\nScreencasts\n\nHow to install Gogs on a Linux Server (DigitalOcean)\nInstalando Gogs no Ubuntu (Portugu\u00eas)\n\nDeploy to Cloud\n\nOpenShift\nCloudron\nScaleway\nSandstorm\nsloppy.io\nYunoHost\nDPlatform\nLunaNode\n\nSoftware and Service Support\n\nDrone (CI)\nJenkins (CI)\nFabric8 (DevOps)\nTaiga (Project Management)\nPuppet (IT)\nKanboard (Project Management)\nBearyChat (Team Communication)\nHiWork (Team Communication)\nGitPitch (Markdown Presentations)\n\nProduct Support\n\nSynology (Docker)\nSyncloud (App Store)\n\nAcknowledgments\n\nThanks Egon Elbre for designing logo.\nThanks Crowdin for sponsoring open source translation plan.\nThanks DigitalOcean, VPSServer, Hosted.nl and MonoVM for sponsoring VPS services.\nThanks KeyCDN for sponsoring CDN service.\nThanks Buildkite for sponsoring open source CI/CD plan.\n\nContributors\n\nSee contributors page for top 100 contributors.\nSee TRANSLATORS for public list of translators.\n\nLicense\nThis project is under the MIT License. See the LICENSE file for the full license text.\n\n\n"}, {"repo": "Alamofire/Alamofire", "language": "Swift", "readme": "\n\n\n\n\n\n\n\n\nAlamofire is an HTTP networking library written in Swift.\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f WARNING \u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f This documentation is out of date during the Alamofire 5 beta process.\n\nFeatures\nComponent Libraries\nRequirements\nMigration Guides\nCommunication\nInstallation\nUsage\n\nIntroduction - Making Requests, Response Handling, Response Validation, Response Caching\nHTTP - HTTP Methods, Parameters and Parameter Encoder, HTTP Headers, Authentication\nLarge Data - Downloading Data to a File, Uploading Data to a Server\nTools - Statistical Metrics, cURL Command Output\n\n\nAdvanced Usage\n\nURL Session - Session Manager, Session Delegate, Request\nRouting - Routing Requests, Adapting and Retrying Requests\nModel Objects - Custom Response Serialization\nConnection - Security, Network Reachability\n\n\nOpen Radars\nFAQ\nCredits\nDonations\nLicense\n\nFeatures\n\n Chainable Request / Response Methods\n URL / JSON / plist Parameter Encoding\n Upload File / Data / Stream / MultipartFormData\n Download File using Request or Resume Data\n Authentication with URLCredential\n HTTP Response Validation\n Upload and Download Progress Closures with Progress\n cURL Command Output\n Dynamically Adapt and Retry Requests\n TLS Certificate and Public Key Pinning\n Network Reachability\n Comprehensive Unit and Integration Test Coverage\n Complete Documentation\n\nComponent Libraries\nIn order to keep Alamofire focused specifically on core networking implementations, additional component libraries have been created by the Alamofire Software Foundation to bring additional functionality to the Alamofire ecosystem.\n\nAlamofireImage - An image library including image response serializers, UIImage and UIImageView extensions, custom image filters, an auto-purging in-memory cache and a priority-based image downloading system.\nAlamofireNetworkActivityIndicator - Controls the visibility of the network activity indicator on iOS using Alamofire. It contains configurable delay timers to help mitigate flicker and can support URLSession instances not managed by Alamofire.\n\nRequirements\n\niOS 10.0+ / macOS 10.12+ / tvOS 10.0+ / watchOS 3.0+\nXcode 10.2+\nSwift 5+\n\nMigration Guides\n\nAlamofire 5.0 Migration Guide: To be written!\nAlamofire 4.0 Migration Guide\nAlamofire 3.0 Migration Guide\nAlamofire 2.0 Migration Guide\n\nCommunication\n\nIf you need help with making network requests using Alamofire, use Stack Overflow and tag alamofire.\nIf you need to find or understand an API, check our documentation or Apple's documentation for URLSession, on top of which Alamofire is built.\nIf you need help with an Alamofire feature, use our forum on swift.org.\nIf you'd like to discuss Alamofire best practices, use our forum on swift.org.\nIf you'd like to discuss a feature request, use our forum on swift.org.\nIf you found a bug, open an issue here on GitHub and follow the guide. The more detail the better!\nIf you want to contribute, submit a pull request.\n\nInstallation\nCocoaPods\nCocoaPods is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate Alamofire into your Xcode project using CocoaPods, specify it in your Podfile:\npod 'Alamofire', '~> 5.0.0-rc.3'\nCarthage\nCarthage is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate Alamofire into your Xcode project using Carthage, specify it in your Cartfile:\ngithub \"Alamofire/Alamofire\" \"5.0.0-rc.3\"\n\nSwift Package Manager\nThe Swift Package Manager is a tool for automating the distribution of Swift code and is integrated into the swift compiler. It is in early development, but Alamofire does support its use on supported platforms.\nOnce you have your Swift package set up, adding Alamofire as a dependency is as easy as adding it to the dependencies value of your Package.swift.\ndependencies: [\n    .package(url: \"https://github.com/Alamofire/Alamofire.git\", from: \"5.0.0-rc.3\")\n]\nManually\nIf you prefer not to use any of the aforementioned dependency managers, you can integrate Alamofire into your project manually.\nEmbedded Framework\n\n\nOpen up Terminal, cd into your top-level project directory, and run the following command \"if\" your project is not initialized as a git repository:\n$ git init\n\n\nAdd Alamofire as a git submodule by running the following command:\n$ git submodule add https://github.com/Alamofire/Alamofire.git\n\n\nOpen the new Alamofire folder, and drag the Alamofire.xcodeproj into the Project Navigator of your application's Xcode project.\n\nIt should appear nested underneath your application's blue project icon. Whether it is above or below all the other Xcode groups does not matter.\n\n\n\nSelect the Alamofire.xcodeproj in the Project Navigator and verify the deployment target matches that of your application target.\n\n\nNext, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the \"Targets\" heading in the sidebar.\n\n\nIn the tab bar at the top of that window, open the \"General\" panel.\n\n\nClick on the + button under the \"Embedded Binaries\" section.\n\n\nYou will see two different Alamofire.xcodeproj folders each with two different versions of the Alamofire.framework nested inside a Products folder.\n\nIt does not matter which Products folder you choose from, but it does matter whether you choose the top or bottom Alamofire.framework.\n\n\n\nSelect the top Alamofire.framework for iOS and the bottom one for macOS.\n\nYou can verify which one you selected by inspecting the build log for your project. The build target for Alamofire will be listed as either Alamofire iOS, Alamofire macOS, Alamofire tvOS or Alamofire watchOS.\n\n\n\nAnd that's it!\n\nThe Alamofire.framework is automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.\n\n\n\nOpen Radars\nThe following radars have some effect on the current implementation of Alamofire.\n\nrdar://21349340 - Compiler throwing warning due to toll-free bridging issue in test case\nrdar://26870455 - Background URL Session Configurations do not work in the simulator\nrdar://26849668 - Some URLProtocol APIs do not properly handle URLRequest\n\nResolved Radars\nThe following radars have been resolved over time after being filed against the Alamofire project.\n\nrdar://26761490 - Swift string interpolation causing memory leak with common usage.\n\n(Resolved): 9/1/17 in Xcode 9 beta 6.\n\n\nrdar://36082113 - URLSessionTaskMetrics failing to link on watchOS 3.0+\n\n(Resolved): Just add CFNetwork to your linked frameworks.\n\n\n\nFAQ\nWhat's the origin of the name Alamofire?\nAlamofire is named after the Alamo Fire flower, a hybrid variant of the Bluebonnet, the official state flower of Texas.\nCredits\nAlamofire is owned and maintained by the Alamofire Software Foundation. You can follow them on Twitter at @AlamofireSF for project updates and releases.\nSecurity Disclosure\nIf you believe you have identified a security vulnerability with Alamofire, you should report it as soon as possible via email to security@alamofire.org. Please do not post it to a public issue tracker.\nDonations\nThe ASF is looking to raise money to officially stay registered as a federal non-profit organization.\nRegistering will allow us members to gain some legal protections and also allow us to put donations to use, tax free.\nDonating to the ASF will enable us to:\n\nPay our yearly legal fees to keep the non-profit in good status\nPay for our mail servers to help us stay on top of all questions and security issues\nPotentially fund test servers to make it easier for us to test the edge cases\nPotentially fund developers to work on one of our projects full-time\n\nThe community adoption of the ASF libraries has been amazing.\nWe are greatly humbled by your enthusiasm around the projects, and want to continue to do everything we can to move the needle forward.\nWith your continued support, the ASF will be able to improve its reach and also provide better legal safety for the core members.\nIf you use any of our libraries for work, see if your employers would be interested in donating.\nAny amount you can donate today to help us reach our goal would be greatly appreciated.\n\nLicense\nAlamofire is released under the MIT license. See LICENSE for details.\n\n"}, {"repo": "AFNetworking/AFNetworking", "language": "Objective-C", "readme": "\n\n\n\n\n\n\n\n\n\nAFNetworking is a delightful networking library for iOS, macOS, watchOS, and tvOS. It's built on top of the Foundation URL Loading System, extending the powerful high-level networking abstractions built into Cocoa. It has a modular architecture with well-designed, feature-rich APIs that are a joy to use.\nPerhaps the most important feature of all, however, is the amazing community of developers who use and contribute to AFNetworking every day. AFNetworking powers some of the most popular and critically-acclaimed apps on the iPhone, iPad, and Mac.\nChoose AFNetworking for your next project, or migrate over your existing projects\u2014you'll be happy you did!\nHow To Get Started\n\nDownload AFNetworking and try out the included Mac and iPhone example apps\nRead the \"Getting Started\" guide, FAQ, or other articles on the Wiki\nCheck out the documentation for a comprehensive look at all of the APIs available in AFNetworking\nRead the AFNetworking 3.0 Migration Guide for an overview of the architectural changes from 2.0.\n\nCommunication\n\nIf you need help, use Stack Overflow. (Tag 'afnetworking')\nIf you'd like to ask a general question, use Stack Overflow.\nIf you found a bug, and can provide steps to reliably reproduce it, open an issue.\nIf you have a feature request, open an issue.\nIf you want to contribute, submit a pull request.\n\nInstallation\nAFNetworking supports multiple methods for installing the library in a project.\nInstallation with CocoaPods\nCocoaPods is a dependency manager for Objective-C, which automates and simplifies the process of using 3rd-party libraries like AFNetworking in your projects. See the \"Getting Started\" guide for more information. You can install it with the following command:\n$ gem install cocoapods\n\nCocoaPods 0.39.0+ is required to build AFNetworking 3.0.0+.\n\nPodfile\nTo integrate AFNetworking into your Xcode project using CocoaPods, specify it in your Podfile:\nsource 'https://github.com/CocoaPods/Specs.git'\nplatform :ios, '8.0'\n\ntarget 'TargetName' do\npod 'AFNetworking', '~> 3.0'\nend\nThen, run the following command:\n$ pod install\nInstallation with Carthage\nCarthage is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks.\nYou can install Carthage with Homebrew using the following command:\n$ brew update\n$ brew install carthage\nTo integrate AFNetworking into your Xcode project using Carthage, specify it in your Cartfile:\ngithub \"AFNetworking/AFNetworking\" ~> 3.0\n\nRun carthage to build the framework and drag the built AFNetworking.framework into your Xcode project.\nRequirements\n\n\n\nAFNetworking Version\nMinimum iOS Target\nMinimum macOS Target\nMinimum watchOS Target\nMinimum tvOS Target\nNotes\n\n\n\n\n3.x\niOS 7\nOS X 10.9\nwatchOS 2.0\ntvOS 9.0\nXcode 7+ is required. NSURLConnectionOperation support has been removed.\n\n\n2.6 -> 2.6.3\niOS 7\nOS X 10.9\nwatchOS 2.0\nn/a\nXcode 7+ is required.\n\n\n2.0 -> 2.5.4\niOS 6\nOS X 10.8\nn/a\nn/a\nXcode 5+ is required. NSURLSession subspec requires iOS 7 or OS X 10.9.\n\n\n1.x\niOS 5\nMac OS X 10.7\nn/a\nn/a\n\n\n\n0.10.x\niOS 4\nMac OS X 10.6\nn/a\nn/a\n\n\n\n\n(macOS projects must support 64-bit with modern Cocoa runtime).\n\nProgramming in Swift? Try Alamofire for a more conventional set of APIs.\n\nArchitecture\nNSURLSession\n\nAFURLSessionManager\nAFHTTPSessionManager\n\nSerialization\n\n<AFURLRequestSerialization>\n\nAFHTTPRequestSerializer\nAFJSONRequestSerializer\nAFPropertyListRequestSerializer\n\n\n<AFURLResponseSerialization>\n\nAFHTTPResponseSerializer\nAFJSONResponseSerializer\nAFXMLParserResponseSerializer\nAFXMLDocumentResponseSerializer (macOS)\nAFPropertyListResponseSerializer\nAFImageResponseSerializer\nAFCompoundResponseSerializer\n\n\n\nAdditional Functionality\n\nAFSecurityPolicy\nAFNetworkReachabilityManager\n\nUsage\nAFURLSessionManager\nAFURLSessionManager creates and manages an NSURLSession object based on a specified NSURLSessionConfiguration object, which conforms to <NSURLSessionTaskDelegate>, <NSURLSessionDataDelegate>, <NSURLSessionDownloadDelegate>, and <NSURLSessionDelegate>.\nCreating a Download Task\nNSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];\nAFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];\n\nNSURL *URL = [NSURL URLWithString:@\"http://example.com/download.zip\"];\nNSURLRequest *request = [NSURLRequest requestWithURL:URL];\n\nNSURLSessionDownloadTask *downloadTask = [manager downloadTaskWithRequest:request progress:nil destination:^NSURL *(NSURL *targetPath, NSURLResponse *response) {\n    NSURL *documentsDirectoryURL = [[NSFileManager defaultManager] URLForDirectory:NSDocumentDirectory inDomain:NSUserDomainMask appropriateForURL:nil create:NO error:nil];\n    return [documentsDirectoryURL URLByAppendingPathComponent:[response suggestedFilename]];\n} completionHandler:^(NSURLResponse *response, NSURL *filePath, NSError *error) {\n    NSLog(@\"File downloaded to: %@\", filePath);\n}];\n[downloadTask resume];\nCreating an Upload Task\nNSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];\nAFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];\n\nNSURL *URL = [NSURL URLWithString:@\"http://example.com/upload\"];\nNSURLRequest *request = [NSURLRequest requestWithURL:URL];\n\nNSURL *filePath = [NSURL fileURLWithPath:@\"file://path/to/image.png\"];\nNSURLSessionUploadTask *uploadTask = [manager uploadTaskWithRequest:request fromFile:filePath progress:nil completionHandler:^(NSURLResponse *response, id responseObject, NSError *error) {\n    if (error) {\n        NSLog(@\"Error: %@\", error);\n    } else {\n        NSLog(@\"Success: %@ %@\", response, responseObject);\n    }\n}];\n[uploadTask resume];\nCreating an Upload Task for a Multi-Part Request, with Progress\nNSMutableURLRequest *request = [[AFHTTPRequestSerializer serializer] multipartFormRequestWithMethod:@\"POST\" URLString:@\"http://example.com/upload\" parameters:nil constructingBodyWithBlock:^(id<AFMultipartFormData> formData) {\n        [formData appendPartWithFileURL:[NSURL fileURLWithPath:@\"file://path/to/image.jpg\"] name:@\"file\" fileName:@\"filename.jpg\" mimeType:@\"image/jpeg\" error:nil];\n    } error:nil];\n\nAFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:[NSURLSessionConfiguration defaultSessionConfiguration]];\n\nNSURLSessionUploadTask *uploadTask;\nuploadTask = [manager\n              uploadTaskWithStreamedRequest:request\n              progress:^(NSProgress * _Nonnull uploadProgress) {\n                  // This is not called back on the main queue.\n                  // You are responsible for dispatching to the main queue for UI updates\n                  dispatch_async(dispatch_get_main_queue(), ^{\n                      //Update the progress view\n                      [progressView setProgress:uploadProgress.fractionCompleted];\n                  });\n              }\n              completionHandler:^(NSURLResponse * _Nonnull response, id  _Nullable responseObject, NSError * _Nullable error) {\n                  if (error) {\n                      NSLog(@\"Error: %@\", error);\n                  } else {\n                      NSLog(@\"%@ %@\", response, responseObject);\n                  }\n              }];\n\n[uploadTask resume];\nCreating a Data Task\nNSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];\nAFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:configuration];\n\nNSURL *URL = [NSURL URLWithString:@\"http://httpbin.org/get\"];\nNSURLRequest *request = [NSURLRequest requestWithURL:URL];\n\nNSURLSessionDataTask *dataTask = [manager dataTaskWithRequest:request completionHandler:^(NSURLResponse *response, id responseObject, NSError *error) {\n    if (error) {\n        NSLog(@\"Error: %@\", error);\n    } else {\n        NSLog(@\"%@ %@\", response, responseObject);\n    }\n}];\n[dataTask resume];\n\nRequest Serialization\nRequest serializers create requests from URL strings, encoding parameters as either a query string or HTTP body.\nNSString *URLString = @\"http://example.com\";\nNSDictionary *parameters = @{@\"foo\": @\"bar\", @\"baz\": @[@1, @2, @3]};\nQuery String Parameter Encoding\n[[AFHTTPRequestSerializer serializer] requestWithMethod:@\"GET\" URLString:URLString parameters:parameters error:nil];\nGET http://example.com?foo=bar&baz[]=1&baz[]=2&baz[]=3\n\nURL Form Parameter Encoding\n[[AFHTTPRequestSerializer serializer] requestWithMethod:@\"POST\" URLString:URLString parameters:parameters error:nil];\nPOST http://example.com/\nContent-Type: application/x-www-form-urlencoded\n\nfoo=bar&baz[]=1&baz[]=2&baz[]=3\n\nJSON Parameter Encoding\n[[AFJSONRequestSerializer serializer] requestWithMethod:@\"POST\" URLString:URLString parameters:parameters error:nil];\nPOST http://example.com/\nContent-Type: application/json\n\n{\"foo\": \"bar\", \"baz\": [1,2,3]}\n\n\nNetwork Reachability Manager\nAFNetworkReachabilityManager monitors the reachability of domains, and addresses for both WWAN and WiFi network interfaces.\n\nDo not use Reachability to determine if the original request should be sent.\n\nYou should try to send it.\n\n\nYou can use Reachability to determine when a request should be automatically retried.\n\nAlthough it may still fail, a Reachability notification that the connectivity is available is a good time to retry something.\n\n\nNetwork reachability is a useful tool for determining why a request might have failed.\n\nAfter a network request has failed, telling the user they're offline is better than giving them a more technical but accurate error, such as \"request timed out.\"\n\n\n\nSee also WWDC 2012 session 706, \"Networking Best Practices.\".\nShared Network Reachability\n[[AFNetworkReachabilityManager sharedManager] setReachabilityStatusChangeBlock:^(AFNetworkReachabilityStatus status) {\n    NSLog(@\"Reachability: %@\", AFStringFromNetworkReachabilityStatus(status));\n}];\n\n[[AFNetworkReachabilityManager sharedManager] startMonitoring];\n\nSecurity Policy\nAFSecurityPolicy evaluates server trust against pinned X.509 certificates and public keys over secure connections.\nAdding pinned SSL certificates to your app helps prevent man-in-the-middle attacks and other vulnerabilities. Applications dealing with sensitive customer data or financial information are strongly encouraged to route all communication over an HTTPS connection with SSL pinning configured and enabled.\nAllowing Invalid SSL Certificates\nAFHTTPSessionManager *manager = [AFHTTPSessionManager manager];\nmanager.securityPolicy.allowInvalidCertificates = YES; // not recommended for production\n\nUnit Tests\nAFNetworking includes a suite of unit tests within the Tests subdirectory. These tests can be run simply be executed the test action on the platform framework you would like to test.\nCredits\nAFNetworking is owned and maintained by the Alamofire Software Foundation.\nAFNetworking was originally created by Scott Raymond and Mattt Thompson in the development of Gowalla for iPhone.\nAFNetworking's logo was designed by Alan Defibaugh.\nAnd most of all, thanks to AFNetworking's growing list of contributors.\nSecurity Disclosure\nIf you believe you have identified a security vulnerability with AFNetworking, you should report it as soon as possible via email to security@alamofire.org. Please do not post it to a public issue tracker.\nLicense\nAFNetworking is released under the MIT license. See LICENSE for details.\n\n"}, {"repo": "grafana/grafana", "language": "TypeScript", "readme": "\n\nThe open-source platform for monitoring and observability.\n\n\n\nGrafana allows you to query, visualize, alert on and understand your metrics no matter where they are stored. Create, explore, and share dashboards with your team and foster a data driven culture:\n\nVisualize: Fast and flexible client side graphs with a multitude of options. Panel plugins for many different way to visualize metrics and logs.\nDynamic Dashboards: Create dynamic & reusable dashboards with template variables that appear as dropdowns at the top of the dashboard.\nExplore Metrics: Explore your data through ad-hoc queries and dynamic drilldown. Split view and compare different time ranges, queries and data sources side by side.\nExplore Logs: Experience the magic of switching from metrics to logs with preserved label filters. Quickly search through all your logs or streaming them live.\nAlerting: Visually define alert rules for your most important metrics. Grafana will continuously evaluate and send notifications to systems like Slack, PagerDuty, VictorOps, OpsGenie.\nMixed Data Sources: Mix different data sources in the same graph! You can specify a data source on a per-query basis. This works for even custom datasources.\n\nGet started\n\nGet Grafana\nInstallation guides\n\nUnsure if Grafana is for you? Watch Grafana in action on play.grafana.org!\nDocumentation\nThe Grafana documentation is available at grafana.com/docs.\nContributing\nIf you're interested in contributing to the Grafana project:\n\nStart by reading the Contributing guide.\nLearn how to set up your local environment, in our Developer guide.\nExplore our beginner-friendly issues.\n\nGet involved\n\nFollow @grafana on Twitter\nRead and subscribe to the Grafana blog\nIf you have a specific question, check out our discussion forums.\nFor general discussions, join us on the official Slack team.\n\nLicense\nGrafana is distributed under the Apache 2.0 License.\n\n"}, {"repo": "ColorlibHQ/AdminLTE", "language": "JavaScript", "readme": "\nIntroduction\n\n\n\n\nAdminLTE is a fully responsive administration template. Based on Bootstrap 4 framework.\nHighly customizable and easy to use. Fits many screen resolutions from small mobile devices to large desktops.\nPreview on AdminLTE.io\nLooking for Premium Templates?\nAdminLTE.io just opened a new premium templates page. Hand picked to insure the best quality and the most affordable\nprices. Visit https://adminlte.io/premium for more information.\n\nAdminLTE has been carefully coded with clear comments in all of its JS, SCSS and HTML files.\nSCSS has been used to increase code customizability.\nInstallation\nThere are multiple ways to install AdminLTE.\nDownload:\nDownload from Github releases.\nUsing The Command Line:\nVia NPM\nnpm install admin-lte@^3.0 --save\nVia Yarn\nyarn add admin-lte@^3.0\nVia Composer\ncomposer require \"almasaeed2010/adminlte=~3.0\"\nVia Git\n\nClone to your machine\n\ngit clone https://github.com/ColorlibHQ/AdminLTE.git\n\nDocumentation\nVisit the online documentation for the most\nupdated guide. Information will be added on a weekly basis.\nBrowser Support\n\nIE 10+\nFirefox (latest)\nChrome (latest)\nSafari (latest)\nOpera (latest)\n\nContribution\nContribution are always welcome and recommended! Here is how:\n\nFork the repository (here is the guide).\nClone to your machine git clone https://github.com/YOUR_USERNAME/AdminLTE.git\nCreate a new branch\nMake your changes\nCreate a pull request\n\nCompile dist files\nTo compile the dist files you need nodejs/npm, clone/download the repo then:\n\nnpm install (install npm deps)\nOptional: npm dev (developer mode, autocompile with browsersync support for live demo)\nnpm run production (compile css/js files)\n\nContribution Requirements:\n\nWhen you contribute, you agree to give a non-exclusive license to AdminLTE.io to use that contribution in any context as we (AdminLTE.io) see appropriate.\nIf you use content provided by another party, it must be appropriately licensed using an open source license.\nContributions are only accepted through Github pull requests.\nFinally, contributed code must work in all supported browsers (see above for browser support).\n\nLicense\nAdminLTE is an open source project by AdminLTE.io that is licensed under MIT. AdminLTE.io\nreserves the right to change the license of future releases.\nLegacy Releases\n\nAdminLTE 2\nAdminLTE 1\n\nChange log\nVisit the releases page to view the changelog\nImage Credits\nPixeden\nGraphicsfuel\nPickaface\nUnsplash\nUifaces\n\n"}, {"repo": "ziishaned/learn-regex", "language": "None", "readme": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTranslations:\n\nEnglish\nEspa\u00f1ol\nFran\u00e7ais\nPortugu\u00eas do Brasil\n\u4e2d\u6587\u7248\n\u65e5\u672c\u8a9e\n\ud55c\uad6d\uc5b4\nTurkish\nGreek\nMagyar\nPolish\n\u0420\u0443\u0441\u0441\u043a\u0438\u0439\nTi\u1ebfng Vi\u1ec7t\n\u0641\u0627\u0631\u0633\u06cc\n\nWhat is Regular Expression?\n\nRegular expression is a group of characters or symbols which is used to find a specific pattern from a text.\n\nA regular expression is a pattern that is matched against a subject string from\nleft to right. Regular expression is used for replacing a text within a string,\nvalidating form, extract a substring from a string based upon a pattern match,\nand so much more. The word \"Regular expression\" is a mouthful, so you will usually\nfind the term abbreviated as \"regex\" or \"regexp\".\nImagine you are writing an application and you want to set the rules for when a\nuser chooses their username. We want to allow the username to contain letters,\nnumbers, underscores and hyphens. We also want to limit the number of characters\nin username so it does not look ugly. We use the following regular expression to\nvalidate a username:\n\n\n\n\nAbove regular expression can accept the strings john_doe, jo-hn_doe and\njohn12_as. It does not match Jo because that string contains uppercase\nletter and also it is too short.\nTable of Contents\n\nBasic Matchers\nMeta character\n\nFull stop\nCharacter set\n\nNegated character set\n\n\nRepetitions\n\nThe Star\nThe Plus\nThe Question Mark\n\n\nBraces\nCharacter Group\nAlternation\nEscaping special character\nAnchors\n\nCaret\nDollar\n\n\n\n\nShorthand Character Sets\nLookaround\n\nPositive Lookahead\nNegative Lookahead\nPositive Lookbehind\nNegative Lookbehind\n\n\nFlags\n\nCase Insensitive\nGlobal search\nMultiline\n\n\nGreedy vs lazy matching\n\n1. Basic Matchers\nA regular expression is just a pattern of characters that we use to perform\nsearch in a text.  For example, the regular expression the means: the letter\nt, followed by the letter h, followed by the letter e.\n\"the\" => The fat cat sat on the mat.\n\nTest the regular expression\nThe regular expression 123 matches the string 123. The regular expression is\nmatched against an input string by comparing each character in the regular\nexpression to each character in the input string, one after another. Regular\nexpressions are normally case-sensitive so the regular expression The would\nnot match the string the.\n\"The\" => The fat cat sat on the mat.\n\nTest the regular expression\n2. Meta Characters\nMeta characters are the building blocks of the regular expressions.  Meta\ncharacters do not stand for themselves but instead are interpreted in some\nspecial way. Some meta characters have a special meaning and are written inside\nsquare brackets. The meta characters are as follows:\n\n\n\nMeta character\nDescription\n\n\n\n\n.\nPeriod matches any single character except a line break.\n\n\n[ ]\nCharacter class. Matches any character contained between the square brackets.\n\n\n[^ ]\nNegated character class. Matches any character that is not contained between the square brackets\n\n\n*\nMatches 0 or more repetitions of the preceding symbol.\n\n\n+\nMatches 1 or more repetitions of the preceding symbol.\n\n\n?\nMakes the preceding symbol optional.\n\n\n{n,m}\nBraces. Matches at least \"n\" but not more than \"m\" repetitions of the preceding symbol.\n\n\n(xyz)\nCharacter group. Matches the characters xyz in that exact order.\n\n\n|\nAlternation. Matches either the characters before or the characters after the symbol.\n\n\n\\\nEscapes the next character. This allows you to match reserved characters [ ] ( ) { } . * + ? ^ $ \\ |\n\n\n^\nMatches the beginning of the input.\n\n\n$\nMatches the end of the input.\n\n\n\n2.1 Full stop\nFull stop . is the simplest example of meta character. The meta character .\nmatches any single character. It will not match return or newline characters.\nFor example, the regular expression .ar means: any character, followed by the\nletter a, followed by the letter r.\n\".ar\" => The car parked in the garage.\n\nTest the regular expression\n2.2 Character set\nCharacter sets are also called character class. Square brackets are used to\nspecify character sets. Use a hyphen inside a character set to specify the\ncharacters' range. The order of the character range inside square brackets\ndoesn't matter. For example, the regular expression [Tt]he means: an uppercase\nT or lowercase t, followed by the letter h, followed by the letter e.\n\"[Tt]he\" => The car parked in the garage.\n\nTest the regular expression\nA period inside a character set, however, means a literal period. The regular\nexpression ar[.] means: a lowercase character a, followed by letter r,\nfollowed by a period . character.\n\"ar[.]\" => A garage is a good place to park a car.\n\nTest the regular expression\n2.2.1 Negated character set\nIn general, the caret symbol represents the start of the string, but when it is\ntyped after the opening square bracket it negates the character set. For\nexample, the regular expression [^c]ar means: any character except c,\nfollowed by the character a, followed by the letter r.\n\"[^c]ar\" => The car parked in the garage.\n\nTest the regular expression\n2.3 Repetitions\nFollowing meta characters +, * or ? are used to specify how many times a\nsubpattern can occur. These meta characters act differently in different\nsituations.\n2.3.1 The Star\nThe symbol * matches zero or more repetitions of the preceding matcher. The\nregular expression a* means: zero or more repetitions of preceding lowercase\ncharacter a. But if it appears after a character set or class then it finds\nthe repetitions of the whole character set. For example, the regular expression\n[a-z]* means: any number of lowercase letters in a row.\n\"[a-z]*\" => The car parked in the garage #21.\n\nTest the regular expression\nThe * symbol can be used with the meta character . to match any string of\ncharacters .*. The * symbol can be used with the whitespace character \\s\nto match a string of whitespace characters. For example, the expression\n\\s*cat\\s* means: zero or more spaces, followed by lowercase character c,\nfollowed by lowercase character a, followed by lowercase character t,\nfollowed by zero or more spaces.\n\"\\s*cat\\s*\" => The fat cat sat on the concatenation.\n\nTest the regular expression\n2.3.2 The Plus\nThe symbol + matches one or more repetitions of the preceding character. For\nexample, the regular expression c.+t means: lowercase letter c, followed by\nat least one character, followed by the lowercase character t. It needs to be\nclarified that t is the last t in the sentence.\n\"c.+t\" => The fat cat sat on the mat.\n\nTest the regular expression\n2.3.3 The Question Mark\nIn regular expression the meta character ? makes the preceding character\noptional. This symbol matches zero or one instance of the preceding character.\nFor example, the regular expression [T]?he means: Optional the uppercase\nletter T, followed by the lowercase character h, followed by the lowercase\ncharacter e.\n\"[T]he\" => The car is parked in the garage.\n\nTest the regular expression\n\"[T]?he\" => The car is parked in the garage.\n\nTest the regular expression\n2.4 Braces\nIn regular expression braces that are also called quantifiers are used to\nspecify the number of times that a character or a group of characters can be\nrepeated. For example, the regular expression [0-9]{2,3} means: Match at least\n2 digits but not more than 3 (characters in the range of 0 to 9).\n\"[0-9]{2,3}\" => The number was 9.9997 but we rounded it off to 10.0.\n\nTest the regular expression\nWe can leave out the second number. For example, the regular expression\n[0-9]{2,} means: Match 2 or more digits. If we also remove the comma the\nregular expression [0-9]{3} means: Match exactly 3 digits.\n\"[0-9]{2,}\" => The number was 9.9997 but we rounded it off to 10.0.\n\nTest the regular expression\n\"[0-9]{3}\" => The number was 9.9997 but we rounded it off to 10.0.\n\nTest the regular expression\n2.5 Capturing Group\nA capturing group is a group of sub-patterns that is written inside Parentheses\n(...). Like as we discussed before that in regular expression if we put a quantifier\nafter a character then it will repeat the preceding character. But if we put quantifier\nafter a capturing group then it repeats the whole capturing group. For example,\nthe regular expression (ab)* matches zero or more repetitions of the character\n\"ab\". We can also use the alternation | meta character inside capturing group.\nFor example, the regular expression (c|g|p)ar means: lowercase character c,\ng or p, followed by character a, followed by character r.\n\"(c|g|p)ar\" => The car is parked in the garage.\n\nTest the regular expression\nNote that capturing groups do not only match but also capture the characters for use in\nthe parent language. The parent language could be python or javascript or virtually any\nlanguage that implements regular expressions in a function definition.\n2.5.1 Non-capturing group\nA non-capturing group is a capturing group that only matches the characters, but\ndoes not capture the group. A non-capturing group is denoted by a ? followed by a :\nwithin parenthesis (...). For example, the regular expression (?:c|g|p)ar is similar to\n(c|g|p)ar in that it matches the same characters but will not create a capture group.\n\"(?:c|g|p)ar\" => The car is parked in the garage.\n\nTest the regular expression\nNon-capturing groups can come in handy when used in find-and-replace functionality or\nwhen mixed with capturing groups to keep the overview when producing any other kind of output.\nSee also 4. Lookaround.\n2.6 Alternation\nIn a regular expression, the vertical bar | is used to define alternation.\nAlternation is like an OR statement between multiple expressions. Now, you may be\nthinking that character set and alternation works the same way. But the big\ndifference between character set and alternation is that character set works on\ncharacter level but alternation works on expression level. For example, the\nregular expression (T|t)he|car means: either (uppercase character T or lowercase\nt, followed by lowercase character h, followed by lowercase character e) OR\n(lowercase character c, followed by lowercase character a, followed by\nlowercase character r). Note that I put the parentheses for clarity, to show that either expression\nin parentheses can be met and it will match.\n\"(T|t)he|car\" => The car is parked in the garage.\n\nTest the regular expression\n2.7 Escaping special character\nBackslash \\ is used in regular expression to escape the next character. This\nallows us to specify a symbol as a matching character including reserved\ncharacters { } [ ] / \\ + * . $ ^ | ?. To use a special character as a matching\ncharacter prepend \\ before it.\nFor example, the regular expression . is used to match any character except\nnewline. Now to match . in an input string the regular expression\n(f|c|m)at\\.? means: lowercase letter f, c or m, followed by lowercase\ncharacter a, followed by lowercase letter t, followed by optional .\ncharacter.\n\"(f|c|m)at\\.?\" => The fat cat sat on the mat.\n\nTest the regular expression\n2.8 Anchors\nIn regular expressions, we use anchors to check if the matching symbol is the\nstarting symbol or ending symbol of the input string. Anchors are of two types:\nFirst type is Caret ^ that check if the matching character is the start\ncharacter of the input and the second type is Dollar $ that checks if matching\ncharacter is the last character of the input string.\n2.8.1 Caret\nCaret ^ symbol is used to check if matching character is the first character\nof the input string. If we apply the following regular expression ^a (if a is\nthe starting symbol) to input string abc it matches a. But if we apply\nregular expression ^b on above input string it does not match anything.\nBecause in input string abc \"b\" is not the starting symbol. Let's take a look\nat another regular expression ^(T|t)he which means: uppercase character T or\nlowercase character t is the start symbol of the input string, followed by\nlowercase character h, followed by lowercase character e.\n\"(T|t)he\" => The car is parked in the garage.\n\nTest the regular expression\n\"^(T|t)he\" => The car is parked in the garage.\n\nTest the regular expression\n2.8.2 Dollar\nDollar $ symbol is used to check if matching character is the last character\nof the input string. For example, regular expression (at\\.)$ means: a\nlowercase character a, followed by lowercase character t, followed by a .\ncharacter and the matcher must be end of the string.\n\"(at\\.)\" => The fat cat. sat. on the mat.\n\nTest the regular expression\n\"(at\\.)$\" => The fat cat. sat. on the mat.\n\nTest the regular expression\n3. Shorthand Character Sets\nRegular expression provides shorthands for the commonly used character sets,\nwhich offer convenient shorthands for commonly used regular expressions. The\nshorthand character sets are as follows:\n\n\n\nShorthand\nDescription\n\n\n\n\n.\nAny character except new line\n\n\n\\w\nMatches alphanumeric characters: [a-zA-Z0-9_]\n\n\n\\W\nMatches non-alphanumeric characters: [^\\w]\n\n\n\\d\nMatches digit: [0-9]\n\n\n\\D\nMatches non-digit: [^\\d]\n\n\n\\s\nMatches whitespace character: [\\t\\n\\f\\r\\p{Z}]\n\n\n\\S\nMatches non-whitespace character: [^\\s]\n\n\n\n4. Lookaround\nLookbehind and lookahead (also called lookaround) are specific types of\nnon-capturing groups (used to match the pattern but not included in matching\nlist). Lookarounds are used when we have the condition that this pattern is\npreceded or followed by another certain pattern. For example, we want to get all\nnumbers that are preceded by $ character from the following input string\n$4.44 and $10.88. We will use following regular expression (?<=\\$)[0-9\\.]*\nwhich means: get all the numbers which contain . character and  are preceded\nby $ character. Following are the lookarounds that are used in regular\nexpressions:\n\n\n\nSymbol\nDescription\n\n\n\n\n?=\nPositive Lookahead\n\n\n?!\nNegative Lookahead\n\n\n?<=\nPositive Lookbehind\n\n\n?<!\nNegative Lookbehind\n\n\n\n4.1 Positive Lookahead\nThe positive lookahead asserts that the first part of the expression must be\nfollowed by the lookahead expression. The returned match only contains the text\nthat is matched by the first part of the expression. To define a positive\nlookahead, parentheses are used. Within those parentheses, a question mark with\nequal sign is used like this: (?=...). Lookahead expression is written after\nthe equal sign inside parentheses. For example, the regular expression\n(T|t)he(?=\\sfat) means: optionally match lowercase letter t or uppercase\nletter T, followed by letter h, followed by letter e. In parentheses we\ndefine positive lookahead which tells regular expression engine to match The\nor the which are followed by the word fat.\n\"(T|t)he(?=\\sfat)\" => The fat cat sat on the mat.\n\nTest the regular expression\n4.2 Negative Lookahead\nNegative lookahead is used when we need to get all matches from input string\nthat are not followed by a pattern. Negative lookahead is defined same as we define\npositive lookahead but the only difference is instead of equal = character we\nuse negation ! character i.e. (?!...). Let's take a look at the following\nregular expression (T|t)he(?!\\sfat) which means: get all The or the words\nfrom input string that are not followed by the word fat precedes by a space\ncharacter.\n\"(T|t)he(?!\\sfat)\" => The fat cat sat on the mat.\n\nTest the regular expression\n4.3 Positive Lookbehind\nPositive lookbehind is used to get all the matches that are preceded by a\nspecific pattern. Positive lookbehind is denoted by (?<=...). For example, the\nregular expression (?<=(T|t)he\\s)(fat|mat) means: get all fat or mat words\nfrom input string that are after the word The or the.\n\"(?<=(T|t)he\\s)(fat|mat)\" => The fat cat sat on the mat.\n\nTest the regular expression\n4.4 Negative Lookbehind\nNegative lookbehind is used to get all the matches that are not preceded by a\nspecific pattern. Negative lookbehind is denoted by (?<!...). For example, the\nregular expression (?<!(T|t)he\\s)(cat) means: get all cat words from input\nstring that are not after the word The or the.\n\"(?<!(T|t)he\\s)(cat)\" => The cat sat on cat.\n\nTest the regular expression\n5. Flags\nFlags are also called modifiers because they modify the output of a regular\nexpression. These flags can be used in any order or combination, and are an\nintegral part of the RegExp.\n\n\n\nFlag\nDescription\n\n\n\n\ni\nCase insensitive: Sets matching to be case-insensitive.\n\n\ng\nGlobal Search: Search for a pattern throughout the input string.\n\n\nm\nMultiline: Anchor meta character works on each line.\n\n\n\n5.1 Case Insensitive\nThe i modifier is used to perform case-insensitive matching. For example, the\nregular expression /The/gi means: uppercase letter T, followed by lowercase\ncharacter h, followed by character e. And at the end of regular expression\nthe i flag tells the regular expression engine to ignore the case. As you can\nsee we also provided g flag because we want to search for the pattern in the\nwhole input string.\n\"The\" => The fat cat sat on the mat.\n\nTest the regular expression\n\"/The/gi\" => The fat cat sat on the mat.\n\nTest the regular expression\n5.2 Global search\nThe g modifier is used to perform a global match (find all matches rather than\nstopping after the first match). For example, the regular expression/.(at)/g\nmeans: any character except new line, followed by lowercase character a,\nfollowed by lowercase character t. Because we provided g flag at the end of\nthe regular expression now it will find all matches in the input string, not just the first one (which is the default behavior).\n\"/.(at)/\" => The fat cat sat on the mat.\n\nTest the regular expression\n\"/.(at)/g\" => The fat cat sat on the mat.\n\nTest the regular expression\n5.3 Multiline\nThe m modifier is used to perform a multi-line match. As we discussed earlier\nanchors (^, $) are used to check if pattern is the beginning of the input or\nend of the input string. But if we want that anchors works on each line we use\nm flag. For example, the regular expression /at(.)?$/gm means: lowercase\ncharacter a, followed by lowercase character t, optionally anything except\nnew line. And because of m flag now regular expression engine matches pattern\nat the end of each line in a string.\n\"/.at(.)?$/\" => The fat\n                cat sat\n                on the mat.\n\nTest the regular expression\n\"/.at(.)?$/gm\" => The fat\n                  cat sat\n                  on the mat.\n\nTest the regular expression\n6. Greedy vs lazy matching\nBy default regex will do greedy matching which means it will match as long as\npossible. We can use ? to match in lazy way which means as short as possible.\n\"/(.*at)/\" => The fat cat sat on the mat. \nTest the regular expression\n\"/(.*?at)/\" => The fat cat sat on the mat. \nTest the regular expression\nContribution\n\nOpen pull request with improvements\nDiscuss ideas in issues\nSpread the word\nReach out with any feedback \n\nLicense\nMIT \u00a9 Zeeshan Ahmad\n\n"}, {"repo": "MaximAbramchuck/awesome-interview-questions", "language": "None", "readme": "\nAwesome Interviews \n\nA curated list of lists of technical interview questions.\n\nWhat makes for an awesome list?\nPlease read the contribution guidelines or the creating a list guide if you want to contribute.\nCheck out my channel or blog.\nTable of Contents\n\n\nProgramming Languages/Frameworks/Platforms\n\nAndroid\nAngularJS\nAngular\nBackboneJS\nC++\nC\nC\u266f\n.NET\nClojure\nCSS\nCucumber\nDjango\nDocker\nEmberJS\nErlang\nGolang\nGraphQl\nHTML\nIonic\niOS\nJava\nJavaScript\njQuery\nFront-end build tools\nKnockoutJS\nLess\nLisp\nNodeJS\nObjective-C\nPHP\nPython\nReactJS\nRails\nRuby\nRust\nSass\nScala\nShell\nSwift\nWordpress\nTypeScript\n\n\n\nDatabase technologies\n\nCassandra\nMicrosoft Access\nMongoDB\nMySQL\nNeo4j\nOracle\nPostgres\nSQL\nSQL Lite\n\n\n\nCaching technologies\n\nMemcached\nRedis\n\n\n\nOS\n\nLinux\nWindows\n\n\n\nAlgorithms\n\n\nBlockchain\n\n\nCoding exercises\n\n\nComprehensive lists\n\n\nDesign patterns\n\n\nData structures\n\n\nNetworks\n\n\nSecurity\n\n\nData Science\n\n\nProgramming Languages/Frameworks/Platforms\nAndroid\n\n10 Android interview question answers for Freshers\n20 Essential Android Interview Questions from Toptal\n25 Essential Android Interview Questions from Adeva\n50 android interview questions & answers.\nA couple of Android questions posted by Quora users\nA great list of Android interview questions covering all the aspects of this career\nCollection of Android and Java related questions and topics, including general developer questions, Java core, Data structures, Build Tools, Programming Paradigms, Core Android, Databases and etc\nCollection of Android and Java questions divided by experience\nAndroid Interview Questions & How to Interview Candidates\nRocketSkill App Android Interview Questions\n\nAngularJS\n\n12 Essential AngularJS Interview Questions from Toptal\nAn AngularJS exam with questions from beginner to expert by @gdi2290 from @AngularClass\n29 AngularJS Interview Questions \u2013 Can You Answer Them All? Great Article from Codementor\nAngularJS interview questions and answers for experienced developers\nAngularJS Interview Questions which have been designed specially to get you acquainted with the nature of questions you may encounter during your interview for the subject of AngularJS\nThis article discusses the top 50 Most occurred AngularJS interview question with answers\nTop 25 Angularjs Interview Questions and Quiz\n100 AngularJS Interview Questions - Quick Refresher\n\nAngular\n\nA list of helpful Angular related questions you can use to interview potential candidates, test yourself or completely ignore\nAngular 2 Interview Questions\nList of 300 Angular Interview Questions and Answers\n\nBackboneJS\n\n8 Essential Backbonejs Interview Questions from Toptal\nBackbonejs Interview Questions And Answers from web technology experts notes\nTop 25 Backbone.js interview questions\n\nC++\n\n1000+ Multiple Choice Questions & Answers in C++ with explanations\n200 C++ interview questions and answers\n24 Essential C++ Interview Questions from Toptal\nC++ Interview Questions and Answers for Freshers and Experienced developers\nC++ Interview Questions from GeekInterview\nC++ Programming Q&A and quizzes from computer science portal for geeks\nC++ Programming Questions and Answers related to such topics as OOPs concepts, Object and Classes, Functions, Constructors and Destructors, Inheritance and etc\nLeetCode Problems' Solutions written in C++\n25 Fundamental C++ Interview Questions\n\nC\n\nBasic C language technical frequently asked interview questions and answers It includes data structures, pointers interview questions and answers for experienced\nC Programming Interview Questions and Answers for such topics as Bits and Bytes, Preprocessors, Functions, Strings, Language basics and etc\nC Programming Interview Questions have been designed specially to get you acquainted with the nature of questions you may encounter during your interview for the subject of C Programming\nFirst set of commonly asked C programming interview questions from computer science portal for geeks\nSecond set of commonly asked C programming interview questions from computer science portal for geeks\n9 Essential C Interview Questions with answers\n\nC#\n\n15 Essential C# Interview Question from Toptal\nC# interview questions from dotnetfunda.com\nTop 100 C# Interview Questions and Answers\nTop 50 C# Interview Questions & Answers\n50 C# Coding Interview Questions and Answers\n20 C# OOPS Interview Questions and Answers\n\n.NET\n\n300 ASPNET interview questions and answers\nASP.NET Core Interview Questions\nGreat list of NET interview questions covering all the NET platform topics\nNET Interview Questions and Answers for Beginners which consists of the most frequently asked questions in NET This list of 100+ questions and answers gauge your familiarity with the NET platform\nQuestions gathered by community of the StackOverflow\nWhat Great NET Developers Ought To Know (More NET Interview Questions)\n\nClojure\n\nClassic 'Fizz Buzz' interview question for Clojure developers\nClojure Interview Questions for experienced devs\nCoding exercises in Clojure, handy practice for technical interview questions\nExperience and questions from Clojure developer interview collected by Reddit users\nInterview cake Clojure solutions\n\nCSS\n\nCSS interview questions and answers for freshers and experienced candidates Also there you can find CSS online practice tests to fight written tests and certification exams on CSS\nDevelopment hiring managers and potential interviewees may find there sample CSS proficiency interview Q&As and code snippets useful\nInterview Questions and Exercises About CSS\nTop 50 CSS(Cascading Style Sheet) Interview Questions covering the most of tricky CSS moments\nCSS Questions and Answers\n\nCucumber\n\nCucumber Web Application BDD Sample Interview Questions\nGuide to building a simple Cucumber + Watir page object pattern framework\n\nDjango\n\nSome abstract interview questions for Python/Django developers\nSome Django basic interview questions to establish the basic level of the candidates\nTop 16 Django Interview Questions for both freshers and experienced developers\n\nDocker\n\nDocker Interview Questions\nTop Docker Interview Questions You Must Prepare In 2019\nTop Docker Interview Questions And Answers\nDOCKER (SOFTWARE) INTERVIEW QUESTIONS & ANSWERS\n30 Docker Interview Questions and Answers in 2019\n\nEmberJS\n\n8 Essential Emberjs Interview Questions from Toptal\nTop 25 Emberjs Interview Questions for both freshers and experienced developers\n\nErlang\n\nTop 22 Erlang Interview Questions for both freshers and experienced developers\n\nGolang\n\nSolutions for Elements of Programming Interviews problems written in Golang\nSolutions for some basic coding interview tasks written in Go\nTop 20 GO Programming Interview Questions for both freshers and experienced developers\n\nGraphQl\n\n8 GraphQl Interview Questions To Know\nHow to GraphQl - Common Questions\n\nHTML\n\n10 Typical HTML Interview Exercises from SitePoint.com\n16 Essential HTML5 Interview Questions from Toptal\n40 important HTML 5 Interview questions with answers\nHTML interview questions and answers for freshers and experienced candidates Also find HTML online practice tests to fight written tests and certification exams on HTML\nTop 50 HTML Interview Questions for both freshers and experienced developers\nCommon HTML interview questions for freshers\nHTML Questions and Answers\n30 HTML Interview Questions and Answers\n\nIonic\n\n23 Beginner Level Ionic Framework Questions\n12 Essential Ionic Interview Questions\n\niOS\n\n14 Essential iOS Interview Questions from Toptal\n20 iOS Developer Interview Questions and Answers for getting you ready for your interview\n25 Essential iOS Interview Questions from Adeva\nA small guide to help those looking to hire a developer or designer for iOS work While tailored for iOS, many questions could be used for Android developers or designers as well A great self-test if you're looking to keep current or practice for your own interview\nAll you need to know about iOS technical interview including some tips for preparing, questions and some coding exercises\nInterview Questions for iOS and Mac Developers from the CEO of Black Pixel\niOS Interview Questions and Answers including such topics as Development Basics, App states and multitasking, App states, Core app objects\niOS Interview Questions For Senior Developers\n50 iOS Interview Questions And Answers 1\n50 iOS Interview Questions And Answers Part 2\n50 iOS Interview Questions And Answers Part 3\n50 iOS Interview Questions And Answers Part 4\n50 iOS Interview Questions And Answers Part 5\n10 iOS interview questions and answers\niOS Developer and Designer Interview Questions\nIOS Interview Questions and Answers\niOS Interview Questions For Beginners\nBabylon iOS Interview Questions\nRocketSkill App iOS Interview Questions\n\nJava\n\n115 Java Interview Questions and Answers \u2013 The ULTIMATE List\n37 Java Interview Questions to Practice With from Codementor\n21 Essential Java Interview Questions\n29 Essential Java Interview Questions from Adeva\nA collection of Java interview questions and answers to them The questions were gathered all around the Internet The answers are partly written by the commiters, partly copy-pasted from all possible sources\nData Structures and Algorithms in Java which can be useful in interview process\nJava Interview Questions: How to crack the TOP 15 questions\nThere is the list of 201 core java interview questions The answers of the core java interview questions are short and to the point The core java interview questions are categorized in Basics of java interview questions, OOPs interview questions, String Handling interview questions, Multithreading interview questions, collection interview questions, JDBC interview questions etc\nTop 10 Tricky Java interview questions and Answers\nTop 25 Most Frequently Asked Interview Core Java Interview Questions And Answers\nTop 40 Core Java Interview Questions Answers from Telephonic Round\nInterview Cake Java Interview Questions\nJava Interview Questions & Quizzes\n\nJavaScript\n\nPractice common algorithms using JavaScript\n10 Interview Questions Every JavaScript Developer Should Know\n21 Essential JavaScript Interview Questions from best mentors all over the world\n20 Essential JavaScript Interview Questions from Adeva\n37 Essential JavaScript Interview Questions from Toptal\n5 More JavaScript Interview Exercises\n5 Typical JavaScript Interview Exercises\nDevelopment hiring managers and potential interviewees may find these sample JavaScript proficiency interview Q&As and code snippets useful\n123 Essential JavaScript Interview Question\nJavaScript Interview Questions have been designed specially to get you acquainted with the nature of questions you may encounter during your interview for the subject of JavaScript\nJS: Basics and Tricky Questions\nJS: Interview Algorithm\nSome basic javascript coding challenges and interview questions\nSome JavaScript interview exercises\nTen Questions I've Been Asked, Most More Than Once, Over Six Technical JavaScript / Front-End Engineer Job Interviews.\nTop 85 JavaScript Interview Questions\nInterview Cake JavaScript Interview Questions\nThe Best Frontend JavaScript Interview Questions (written by a Frontend Engineer)\n10 JavaScript Concepts You Need to Know for Interviews\nFront end interview handbook\nJavaScript Interview Questions - Quick Refresher\n\njQuery\n\n70 jQuery Interview Questions to Ace Your Next Interview\nTop 50 jquery interview questions\n17 Essential jQuery Interview Questions From Toptal\n\nFront-end build tools\n\nWebpack interview questions & answers\nGulp js interview questions\nGrunt js interview questions for beginners\nGrunt js interview questions\n\nKnockoutJS\n\n15 interview questions from CodeSample.com\n20 questions you might be asked about KnockoutJS in an interview for both freshers and experienced developers\n\nLess\n\nTop 25 LESS Interview Questions\n\nLisp\n\n10 LISP Questions & Answers\nTop 18 Lisp Interview Questions from Career Guru\n\nNodeJS\n\n25 Essential Node.js Interview Questions from Adeva\n8 Essential Nodejs Interview Questions from Toptal\nNode.JS Interview Questions have been designed specially to get you acquainted with the nature of questions you may encounter during your interview for the subject of Node.JS\nThere are two sides of the table: you either want to hire Nodejs developers or you want to get hired as a Nodejs developer This list helps you navigate a bit in this space, giving you some questions to ask, and a list of questions you should know the answer to\nTop 25 Nodejs Interview Questions & Answers from Career Guru\nTop 30 Node.Js Interview Questions With Answers\n\nObjective-C\n\nInterview Qs for Objective-C and Swift\niOS/ObjC Interview Questions\niOS Interview Questions For Beginners\n\nPHP\n\n100 PHP interview questions and answers from CareerRide.com\n21 Essential PHP Interview Questions from Toptal\n20 Common PHP Job Interview Questions and Answers\n25 Essential PHP Interview Questions from Adeva\nPHP interview questions and answers for freshers\nTop 100 PHP Interview Questions & Answers from CareerGuru\n25 PHP Interview Questions\n26 Essential PHP Interview Questions for 2018\nCracking PHP Interviews Questions ebook 300+ Q&A\nPHP Interview Questions - Quick Refresher\n\nPython\n\n26 Essential Python Interview Questions from Adeva\n50 Python interview questions and answers\n11 Essential Python Interview Questions from Toptal\nA listing of questions that could potentially be asked for a python job listing\nInterview Questions for both beginners and experts\nInterview Cake Python Interview Questions\nPython Frequently Asked Questions (Programming)\nPython interview questions collected by Reddit users\nTop 25 Python Interview Questions from Career Guru\nPython Interview 10 questions from Corey Schafer\nPython interview questions. Part I. Junior\nPython interview questions. Part II. Middle\nPython interview questions. Part III. Senior\nPython Interview Questions and Answers (2019)\n100 Python Interview Questions - Quick Refresher\n\nRuby on Rails\n\n20 Ruby on Rails interview questions and answers from CareerRide.com\n9 Essential Ruby on Rails Interview Questions from Toptal\nA list of common questions with answers ask during interview of ruby on rails job\nRuby And Ruby On Rails interview Q&A\nSome of the most frequently asked Ruby on Rails questions and how to answer them confidently\n11 Ruby on Rails Interview Practice Questions\nTop 53 Ruby on Rails Interview Questions & Answers\n10 Ruby on Rails interview questions and answers\n\nReactJS\n\nReddit users share their expectations from ReactJS interview\nThis is a first in the series of interview questions related with ReactJS\nThis quiz intends to test your understanding around ReactJS fundamentals (Set 3)\nThis quiz intends to test your understanding around ReactJS fundamentals\n5 Essential React.js Interview Questions\nReact Interview Questions\nToptal's 13 Essential React.js Interview Questions\n19 Essential ReactJs Interview Questions\n\nRuby\n\n21 Essential Ruby Interview Questions from Toptal\n15 Questions to Ask During a Ruby Interview\nA list of questions about Ruby programming you can use to quiz yourself\nThe Art of Ruby Technical Interview\nInterview Cake Ruby Interview Questions\nFrequently Asked Ruby Interview Questions\n\nRust\n\nTop 250+ Rust Programming Language Interview Questions\nRust Programming Interview Questions and Answers\nrust-exam: A set of questions about the Rust programming language\nBest Rust Programming Language Interview Questions and answers\n\nSass\n\nTop 17 Sass Interview Questions from Career Guru\nTop 10 Sass Interview Questions from educba\n\nScala\n\n4 Interview Questions for Scala Developers\nA list of Frequently Asked Questions and their answers, sorted by category\nA list of helpful Scala related questions you can use to interview potential candidates\nHow Scala Developers Are Being Interviewed\nScala Interview Questions/Answers including Language Questions, Functional Programming Questions, Reactive Programming Questions\nTop 25 Scala Interview Questions & Answers from Toptal\n\nSharePoint\n\nSharepoint Interview Question For Developer\n\nShell\n\nTop 50 Shell Scripting Interview Questions from Career Guru\n\nSwift\n\n10 Essential Swift Interview Questions from Toptal\nGet prepared for your next iOS job interview by studying high quality LeetCode solutions in Swift 5\nSwift Interview Questions and Answers\nSwift Programming Language Interview Questions And Answers from mycodetips.com\nYour top 10 Swift questions answered\nSwift interview questions and answers on Swift 5 by Raywenderlich\n\nWordPress\n\nTop 45 WordPress interview questions\n\nTypeScript\n\nTypescript Interview Questions\nTop 10 TypeScript Interview Questions and Answers for Beginner Web Developers 2019\n\nDatabase technologies\nCassandra\n\nTop 23 Cassandra Interview Questions from Career Guru\n\nMicrosoft Access\n\nTop 16 Microsoft Access Database Interview Questions from Career Guru\n\nMongoDB\n\n\n28 MongoDB NoSQL Database Interview Questions and Answers\n\n\nMongoDB frequently Asked Questions by expert members with experience in MongoDB These questions and answers will help you strengthen your technical skills, prepare for the new job test and quickly revise the concepts\n\n\nMongoDB Interview Questions from JavaTPointcom\n\n\nMongoDB Interview Questions that have been designed specially to get you acquainted with the nature of questions you may encounter during your interview for the subject of MongoDB\n\n\nTop 20 MongoDB interview questions from Career Guru\n\n\nMySQL\n\n10 MySQL Database Interview Questions for Beginners and Intermediates\n100 MySQL interview questions\n15 Basic MySQL Interview Questions for Database Administrators\n28 MySQL interview questions from JavaTPoint.com\n40 Basic MySQL Interview Questions with Answers\nTop 50 MySQL Interview Questions & Answers from Career Guru\n\nNeo4j\n\nTop 20 Neo4j Interview Questions from Career Guru\n\nOracle\n\nGeneral Oracle Interview Questions & Answers\n\nPostgres\n\n13 PostgreSQL Interview Q&A\nFrequently Asked Basic PostgreSQL Interview Questions and Answers\nPostgreSQL Interview Preparation Guide\nPostgreSQL Interview Q&A from CoolInterview.com\n\nSQL\n\n10 Frequently asked SQL Query Interview Questions\n45 Essential SQL Interview Questions from Toptal\nCommon Interview Questions and Answers\nGeneral Interview Questions and Answers\nSchema, Questions & Solutions for SQL Exercising\nSQL Interview Questions that have been designed specially to get you acquainted with the nature of questions you may encounter during your interview for the subject of SQL\nSQL Interview Questions CHEAT SHEET\n\nSQL Lite\n\nTop 20 SQL LITE  Interview Questions from Career Guru\n\nCaching technologies\nMemcached\n\nMemcached Interview Questions from Javapoint\nMemcached Interview Questions from Wisdomjobs\n\nRedis\n\nRedis Interview Questions from Javapoint\nRedis Interview Questions from Wisdomjobs\nRedis Interview Questions from Career Guru\n\nOS\nLinux\n\n10 Job Interview Questions for Linux System Administrators from Linux.com\n10 Useful Random Linux Interview Questions and Answers\n11 Basic Linux Interview Questions and Answers\n11 Essential Linux Interview Questions from Toptal\nSome basic Linux questions from ComputerNetworkingNotes.com\nTop 30 Linux System Admin Interview Questions & Answers\nTop 50 Linux Interview Questions from Career Guru\nLinux System Administrator/DevOps Interview Questions\n278 Test Questions and Answers for *nix System Administrators\nLinux Interview Questions - Quick Refresher\n\nWindows\n\nTop 10 Interview Questions for Windows Administrators\nTop 22 Windows Server Interview Questions from Career Guru\nWindows Admin Interview Questions & Answers\n\nAlgorithms\n\nA great list of Java interview questions\nAlgorithms playground for common interview questions written in Ruby\nEKAlgorithms contains some well known CS algorithms & data structures\nFive programming problems every Software Engineer should be able to solve in less than 1 hour\nTop 10 Algorithms for Coding Interview\nTop 15 Data Structures and Algorithm Interview Questions for Java programmer\nTop Algorithms Questions by Topics\nDaily Coding Interview Practice\n\nBlockchain\n\nTop 55 Blockchain Interview Questions You Must Prepare In 2018\nBlockchain Interview Questions\nTop Blockchain Interview Questions\nBlockchain Developer Interview Questions and Answers\n10 Essential Blockchain Interview Questions \nBlockchain Interview Questions The Collection\nTop 30 Blockchain Interview Questions \u2013 For Freshers to Experienced\nMost Frequently Asked Blockchain Interview Questions\n\nCoding exercises\n\nCommon interview questions and puzzles solved in a number of languages\nInteractive, test-driven Python coding challenges (algorithms and data structures) typically found in coding interviews or coding competitions\nInterview questions solved in python\n7 Swift Coding Challenges to Practice Your Skills\n\nComprehensive lists\n\nA list of helpful front-end related questions you can use to interview potential candidates, test yourself or completely ignore\nFront End Developer Interview Questions\nAnswers to Front End Developer Interview Questions\nSome simple questions to interview potential backend candidates\nAn Annotated List of Frontend Developer Technical Interview Questions\nAn Annotated List of Backend Developer Technical Interview Questions\nAn Annotated List of DevOps Technical Interview Questions\n\nDesign Patterns\n\nDesign Pattern Interview Questions that have been designed specially to get you acquainted with the nature of questions you may encounter during your interview for the subject of Design Pattern\nDesign Patterns for Humans\u2122 - An ultra-simplified explanation\nDesign patterns implemented in Java\n\nData structures\n\nTop 15 Data Structures and Algorithm Interview Questions for Java programmer\nTop 50 Data Structure Interview Questions from Career Guru\n\nNetworks\n\nTop 100 Networking Interview Questions & Answers from Career Guru\n\nSecurity\n\n101 IT Security Interview Questions\nHow to prepare for an information security job interview?\nInformation Security Interview Questions from Daniel Miessler\nTop 50 Information Security Interview Questions for freshers and experts\nSecurity Interview Questions (and Answers) from Matthew Adeline\n\nData Science\n\nData Science Interview Questions for Top Tech Companies\n66 Job Interview Questions for Data Scientists\nAn Annotated List of Data Scientist Technical Interview Questions\nTop 45 Data Science Interview Questions You Must Prepare In 2019\nTop 30 data science interview questions\nTop 100 Data science interview questions\nData Science Interview Questions\n\nLicense\n\n\n"}, {"repo": "TryGhost/Ghost", "language": "JavaScript", "readme": "\n\n\n\n\n\n\nGhost.org |\n    Features |\n    Showcase |\n    Forum |\n    Documentation |\n    Contributing |\n    Twitter\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\nThe easiest way to deploy Ghost is with our official Ghost(Pro) managed service. You can have a fresh instance up and running in a couple of clicks with a worldwide CDN, backups, security and maintenance all done for you.\nNot only will it save you hours of maintenance per month, but all revenue goes to the Ghost Foundation, which funds the maintenance and further development of Ghost itself. So you\u2019ll be supporting open source software and getting a great service! Alternatively if you'd like to support us, we're very grateful to all our backers on Open Collective \u2764\ufe0f\n\u00a0\nQuickstart Install\nIf you want to run your own instance of Ghost, in most cases the best way is to use our CLI tool\n$ npm install ghost-cli -g\n\n\u00a0\nThen, if installing locally add the local flag to get up and running in under a minute - Local install docs\n$ ghost install local\n\n\u00a0\nor on a server run the full install, including automatic SSL setup using LetsEncrypt - Production install docs\n$ ghost install\n\n\u00a0\nCheck out our official documentation for more information about our recommended hosting stack & properly upgrading Ghost, plus everything you need to develop your own Ghost themes or work with our API.\n\u00a0\nGetting Help\nYou can find answers to a huge variety of questions, along with a large community of helpful developers over on the Ghost forum - replies are generally very quick. Ghost(Pro) customers also have access to 24/7 email support.\nTo stay up to date with all the latest news and product updates, make sure you subscribe to our blog \u2014 or you can always follow us on Twitter, if you prefer your updates bite-sized and facetious. \ud83c\udfb7\ud83d\udc22\n\u00a0\nContributors & Advanced Developers\nFor anyone wishing to contribute to Ghost or to hack/customise core files we recommend following our full development setup guides: General Contributor Guide | Developer Setup Instructions | Admin Client development guide\n\u00a0\nCopyright & License\nCopyright (c) 2013-2019 Ghost Foundation - Released under the MIT license. Ghost and the Ghost Logo are trademarks of Ghost Foundation Ltd. Please see our trademark policy for info on acceptable usage.\n\n"}, {"repo": "shadowsocks/shadowsocks", "language": "Python", "readme": "\nRemoved according to regulations.\n\n"}, {"repo": "zeit/hyper", "language": "JavaScript", "readme": "\n\n\n\n\n\n\nFor more details, head to: https://hyper.is\nUsage\nDownload the latest release!\nLinux\nArch and derivatives\nHyper is available in the AUR. Use an AUR package manager like aurman\naurman -S hyper\nmacOS\nUse Homebrew Cask to download the app by running these commands:\nbrew update\nbrew cask install hyper\nWindows\nUse chocolatey to install the app by running the following command (package information can be found here):\nchoco install hyper\nNote: The version available on Homebrew Cask, Chocolatey, Snapcraft or the AUR may not be the latest. Please consider downloading it from here if that's the case.\nContribute\nRegardless of the platform you are working on, you will need to have Yarn installed. If you have never installed Yarn before, you can find out how at: https://yarnpkg.com/en/docs/install.\n\nInstall necessary packages:\n\n\nWindows\n\nBe sure to run  yarn global add windows-build-tools from an elevated prompt (as an administrator) to install windows-build-tools.\n\n\nmacOS\n\nOnce you have installed Yarn, you can skip this section!\n\n\nLinux (You can see here what your Linux is based on.)\n\nRPM-based\n\nGraphicsMagick\nlibicns-utils\nxz (Installed by default on some distributions.)\n\n\nDebian-based\n\ngraphicsmagick\nicnsutils\nxz-utils\n\n\n\n\n\n\nFork this repository to your own GitHub account and then clone it to your local device\nInstall the dependencies: yarn\nBuild the code and watch for changes: yarn run dev\nTo run hyper\n\n\nyarn run app from another terminal tab/window/pane\nIf you are using Visual Studio Code, select Launch Hyper in debugger configuration to launch a new Hyper instance with debugger attached.\nIf you interrupt yarn run dev, you'll need to relaunch it each time you want to test something. Webpack will watch changes and will rebuild renderer code when needed (and only what have changed). You'll just have to relaunch electron by using yarn run app or VSCode launch task.\n\nTo make sure that your code works in the finished application, you can generate the binaries like this:\nyarn run dist\nAfter that, you will see the binary in the ./dist folder!\nKnown issues that can happen during development\nError building node-pty\nIf after building during development you get an alert dialog related to node-pty issues,\nmake sure its build process is working correctly by running yarn run rebuild-node-pty.\nIf you are on macOS, this typically is related to Xcode issues (like not having agreed\nto the Terms of Service by running sudo xcodebuild after a fresh Xcode installation).\nError with c++ on macOS when running yarn\nIf you are getting compiler errors when running yarn add the environment variable export CXX=clang++\nError with codesign on macOS when running yarn run dist\nIf you have issues in the codesign step when running yarn run dist on macOS, you can temporarily disable code signing locally by setting\nexport CSC_IDENTITY_AUTO_DISCOVERY=false for the current terminal session.\nRelated Repositories\n\nArt\nWebsite\nSample Extension\nSample Theme\nAwesome Hyper\n\n\n"}, {"repo": "prakhar1989/awesome-courses", "language": "None", "readme": "\nAwesome CS Courses \nIntroduction\nThere is a lot of hidden treasure lying within university pages scattered across the internet. This list is an attempt to bring to light those awesome CS courses which make their high-quality material i.e. assignments, lectures, notes, readings & examinations available online for free.\nTable of Contents\n\nAlgorithms\nArtificial Intelligence\nComputer Graphics\nCS Theory\nIntroduction to CS\nMachine Learning\nMisc\nProgramming Languages / Compilers\nSecurity\nSystems\n\nLegend\n\n - Lecture Videos\n - Lecture Notes\n - Assignments / Labs\n - Readings\n\nCourses\nSystems\n\nCS 61C Great Ideas in Computer Architecture (Machine Structures) UC Berkeley   \n\nThe subjects covered in this course include: C and assembly language programming, translation of high-level programs into machine language, computer organization, caches, performance measurement, parallelism, CPU design, warehouse-scale computing, and related topics.\nLecture Videos\nLecture Notes\nResources\nOld Exams\n\n\nCS 107 Computer Organization & Systems Stanford University  \n\nCS107 is the third course in Stanford's introductory programming sequence. The course will work from the C programming language down to the microprocessor to de-mystify the machine. With a complete understanding of how computer systems execute programs and manipulate data, you will become a more effective programmer, especially in dealing with issues of debugging, performance, portability, and robustness.\nLecture Videos\nAssignments\n\n\nCS 140 Operating Systems Stanford University  \n\nThis class introduces the basic facilities provided in modern operating systems. The course divides into three major sections. The first part of the course discusses concurrency. The second part of the course addresses the problem of memory management. The third major part of the course concerns file systems.\nLecture Notes\nAssignments\n\n\n6.004 Computation Structures MIT   \n\nIntroduces architecture of digital systems, emphasizing structural principles common to a wide range of technologies. Multilevel implementation strategies; definition of new primitives (e.g., gates, instructions, procedures, processes) and their mechanization using lower-level elements. Analysis of potential concurrency; precedence constraints and performance measures; pipelined and multidimensional systems. Instruction set design issues; architectural support for contemporary software structures. 4 Engineering Design Points. 6.004 offers an introduction to the engineering of digital systems. Starting with MOS transistors, the course develops of series of building blocks logic gates, combinational and sequential circuits, finite-state machines, computers and finally complete systems. Both hardware and software mechanisms are explored through a series of design examples.\nYoutube Playlist\nLecture Notes\nLabs-Assignments\n\n\nCS 162 Operating Systems and Systems Programming UC Berkeley    \n\nThe purpose of this course is to teach the design of operating systems and operating systems concepts that appear in other advanced systems. Topics we will cover include concepts of operating systems, systems programming, networked and distributed systems, and storage systems, including multiple-program systems (processes, interprocess communication, and synchronization), memory allocation (segmentation, paging), resource allocation and scheduling, file systems, basic networking (sockets, layering, APIs, reliability), transactions, security, and privacy.\n\nOperating Systems course by the Chair of EECS, UC Berkeley David Culler\nLecture Videos Spring 2015 lectures\nLecture Notes Spring 2015 lectures\n\n\n\n\nCS 168 Introduction to the Internet: Architecture and Protocols UC Berkeley  \n\nThis course is an introduction to the Internet architecture. We will focus on the concepts and fundamental design principles that have contributed to the Internet's scalability and robustness and survey the various protocols and algorithms used within this architecture. Topics include layering, addressing, intradomain routing, interdomain routing, reliable delivery, congestion control, and the core protocols (e.g., TCP, UDP, IP, DNS, and HTTP) and network technologies (e.g., Ethernet, wireless).\nLecture Notes & Assignments\nDiscussion Notes\n\n\nCS 179 GPU Programming Caltech  \n\nThis course will cover programming techniques for the GPU. The course will introduce NVIDIA's parallel computing language, CUDA. Beyond covering the CUDA programming model and syntax, the course will also discuss GPU architecture, high performance computing on GPUs, parallel algorithms, CUDA libraries, and applications of GPU computing.\nAssignments\nLecture Notes\n\n\nCS 186 Introduction to Database Systems UC Berkeley    \n\nIn the project assignments in CS186, you will write a basic database management system called SimpleDB. For this project, you will focus on implementing the core modules required to access stored data on disk; in future projects, you will add support for various query processing operators, as well as transactions, locking, and concurrent queries.\nLecture Videos\nLecture Notes\nProjects\n\n\nCS 241 Systems Programming (Spring 2016) Univ of Illinois, Urbana-Champaign  \n\nSystem programming refers to writing code that tasks advantage of operating system support for programmers. This course is designed to introduce you to system programming. By the end of this course, you should be proficient at writing programs that take full advantage of operating system support. To be concrete, we need to fix an operating system and we need to choose a programming language for writing programs. We chose the C language running on a Linux/UNIX operating system (which implements the POSIX standard interface between the programmer and the OS).\nAssignments\nLabs\nGithub Page\nCrowd Sourced Book\n\n\nCS 425 Distributed Systems Univ of Illinois, Urbana-Champaign  \n\nBrilliant set of lectures and reading material covering fundamental concepts in distributed systems such as Vector clocks, Consensus and Paxos. This is the 2016 version by Prof Indranil Gupta.\nLectures\nAssignments\n\n\nCS 452 Real-Time Programming University of Waterloo  \n\nWrite a real-time OS microkernel in C, and application code to operate a model train set in response to real-time sensor information. The communication with the train set runs at 2400 baud so it takes about 61 milliseconds to ask all of the sensors for data about the train's possible location.  This makes it particularly challenging because a train can move about 3 centimeters in that time. One of the most challenging and time-consuming courses at the University of Waterloo.\nAssignments\nLecture notes\n\n\nCS 2043 Unix Tools & Scripting Cornell University  \n\nUNIX-like systems are increasingly being used on personal computers, mobile phones, web servers, and many other systems. They represent a wonderful family of programming environments useful both to computer scientists and to people in many other fields, such as computational biology and computational linguistics, in which data is naturally represented by strings. This course provides an intensive training to develop skills in Unix command line tools and scripting that enable the accomplishment and automation of large and challenging computing tasks. The syllabus takes students from shell basics and piping, to regular-expression processing tools, to shell scripting and Python.\nSyllabus\nLectures\nAssignments\n\n\nCS 3410 Computer System Organization and Programming Cornell University  \n\nCS3410 provides an introduction to computer organization, systems programming and the hardware/software interface. Topics include instruction sets, computer arithmetic, datapath design, data formats, addressing modes, memory hierarchies including caches and virtual memory, I/O devices, bus-based I/O systems, and multicore architectures. Students learn assembly language programming and design a pipelined RISC processor.\nLectures\nAssignments\n\n\nCS 4410 Operating Systems Cornell University \n\nCS 4410 covers systems programming and introductory operating system design and implementation. We will cover the basics of operating systems, namely structure, concurrency, scheduling, synchronization, memory management, filesystems, security and networking. The course is open to any undergraduate who has mastered the material in CS3410/ECE3140.\nSyllabus\nLectures\n\n\nCS 4414 Operating Systems University of Virginia  \n\nA course (that) covers topics including: Analysis process communication and synchronization; resource management; virtual memory management algorithms; file systems; and networking and distributed systems. The primary goal of this course is to improve your ability to build scalable, robust and secure computing systems. It focuses on doing that by understanding what underlies the core abstractions of modern computer systems.\nSyllabus\nLectures\n\n\nCS 5412 Cloud Computing Cornell University  \n\nTaught by one of the stalwarts of this field, Prof Ken Birman, this course has a fantastic set of slides that one can go through. The Prof's book is also a gem and recommended as a must read in Google's tutorial on Distributed System Design\nSlides\n\n\nCSCE 3613 Operating Systems University of Arkansas (Fayetteville)  \t- An introduction to operating systems including topics in system structures, process management, storage management, files, distributed systems, and case studies.\n\nSyllabus\nAssignments\nLecture Notes\nReadings\n\n\nCSCI-UA.0202: Operating Systems (Undergrad) Operating Systems NYU   \n\nNYU's operating system course. It's a fundamental course focusing basic ideas of operating systems, including memory management, process shceduling, file system, ect. It also includes some recommended reading materials. What's more, there are a series of hands-on lab materials, helping you easily understand OS.\nAssignments\nLectures\nOld Exams\n\n\nCSCI 360 Computer Architecture 3 CUNY Hunter College  \n\nA course that covers cache design, buses, memory hierarchies, processor-peripheral interfaces, and multiprocessors, including GPUs.\n\n\nCSCI 493.66 UNIX System Programming (formerly UNIX Tools) CUNY Hunter College  \n\nA course that is mostly about writing programs against the UNIX API, covering all of the basic parts of the kernel interface and libraries, including files, processes, terminal control, signals, and threading.\n\n\nCSCI 493.75 Parallel Computing CUNY Hunter College  \n\nThe course is an introduction to parallel algorithms and parallel programming in C and C++, using the Message Passing Interface (MPI) and the OpenMP application programming interface. It also includes a brief introduction to parallel architectures and interconnection networks. It is both theoretical and practical, including material on design methodology, performance analysis, and mathematical concepts, as well as details on programming using MPI and OpenMP.\n\n\nHack the Kernel Introduction to Operating Systems SUNY University at Buffalo, NY   \n\nThis course is an introduction to operating system design and implementation. We study operating systems because they are examples of mature and elegant solutions to a difficult design problem: how to safely and efficiently share system resources and provide abstractions useful to applications.\nFor the processor, memory, and disks, we discuss how the operating system allocates each resource and explore the design and implementation of related abstractions. We also establish techniques for testing and improving system performance and introduce the idea of hardware virtualization. Programming assignments provide hands-on experience with implementing core operating system components in a realistic development environment. Course by Dr.Geoffrey Challen\nSyllabus\nSlides\nVideo lectures\nAssignments\nOld Exams\n\n\nECE 459 Programming for Performance University of Waterloo  \n\nLearn techniques for profiling, rearchitecting, and implementing software systems that can handle industrial-sized inputs, and to design and build critical software infrastructure. Learn performance optimization through parallelization, multithreading, async I/O, vectorization and GPU programming, and distributed computing.\nLecture slides\n\n\nPODC Principles of Distributed Computing ETH-Zurich   \n\nExplore essential algorithmic ideas and lower bound techniques, basically the \"pearls\" of distributed computing in an easy-to-read set of lecture notes, combined with complete exercises and solutions.\nBook\nAssignments and Solutions\n\n\nSPAC Parallelism and Concurrency Univ of Washington \n\nTechnically not a course nevertheless an awesome collection of materials used by Prof Dan Grossman to teach parallelism and concurrency concepts to sophomores at UWash\n\n\n6.824 Distributed Systems MIT  \n\nMIT's graduate-level DS course with a focus on fault tolerance, replication, and consistency, all taught via awesome lab assignments in Golang!\nAssignments - Just do git clone git://g.csail.mit.edu/6.824-golabs-2014 6.824\nReadings\n\n\n6.828 Operating Systems MIT  \n\nMIT's operating systems course focusing on the fundamentals of OS design including booting, memory management, environments, file systems, multitasking, and more. In a series of lab assignments, you will build JOS, an OS exokernel written in C.\nAssignments\nLectures\nVideos Note: These are student recorded cam videos of the 2011 course. The videos  explain a lot of concepts required for the labs and assignments.\n\n\nCSEP 552 Distributed Systems University of Washington   \n\nCSEP552 is a graduate course on distributed systems. Distributed systems have become central to many aspects of how computers are used, from web applications to e-commerce to content distribution. This course will cover abstractions and implementation techniques for the construction of distributed systems, including client server computing, the web, cloud computing, peer-to-peer systems, and distributed storage systems. Topics will include remote procedure call, maintaining consistency of distributed state, fault tolerance, high availability, and other topics. As we believe the best way to learn the material is to build it, there will be a series of hands-on programming projects.\nLectures of a previous session are available to watch.\n\n\n15-213 Introduction to Computer Systems (ICS) Carnegie-Mellon University   \n\nThe ICS course provides a programmer's view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation.\nThis is the must-have course for everyone in CMU who wants to learn some computer science no matter what major are you in. Because it's CMU (The course number is as same as the zip code of CMU)!\nLecture Notes\nVideos\nAssignments\n\n\n15-319/619 Cloud Computing (ICS) Carnegie-Mellon University  \n\nThis project-based on-line course focuses on skill building across various aspects of cloud computing. We cover conceptual topics and provide hands-on experience through projects utilizing public cloud infrastructures (Amazon Web Services (AWS), Microsoft Azure and Google Cloud Platform (GCP)). The adoption of cloud computing services continues to grow across a variety of organizations and in many domains. Simply, cloud computing is the delivery of computing as a service over a network, whereby distributed resources and services are rented, rather than owned, by an end user as a utility.\nFor the projects, students will work with Amazon Web Services, Microsoft Azure and Google Cloud Platform, use them to rent and provision compute resources and then program and deploy applications that run on these resources. Students will develop and evaluate virtual machine (VM) and container scaling, elasticity and load balancing solutions. In addition, students will work with cloud storage systems and learn to develop different applications using batch, iterative and stream processing frameworks. 15-619 students will have to complete an extra project which entails designing and implementing a complete web-service solution for querying big data. For the extra project, the student teams are evaluated based on the cost and performance of their web service.\nLecture Notes\nVideos\n\n\n15-418 Parallel Computer Architecture and Programming Carnegie-Mellon University    \n\nThe goal of this course is to provide a deep understanding of the fundamental principles and engineering trade-offs involved in designing modern parallel computing systems as well as to teach parallel programming techniques necessary to effectively utilize these machines. Because writing good parallel programs requires an understanding of key machine performance characteristics, this course will cover both parallel hardware and software design.\nAssignments\nLecture Notes\nLecture Videos\nReadings\n\n\n15-440 Distributed Systems Carnegie-Mellon University  \n\nIntroduction to distributed systems with a focus on teaching concepts via projects implemented in the Go programming language.\nAssignments\n\n\n15-721 Database Systems Carnegie-Mellon University   \n\nThis course is a comprehensive study of the internals of modern database management systems. It will cover the core concepts and fundamentals of the components that are used in both high-performance transaction processing systems (OLTP) and large-scale analytical systems (OLAP). The class will stress both efficiency and correctness of the implementation of these ideas. All class projects will be in the context of a real in-memory, multi-core database system. The course is appropriate for graduate students in software systems and for advanced undergraduates with strong systems programming skills.\nAssignments\nLecture Videos\nReadings\n\n\n15-445/645 Database Systems Carnegie-Mellon University   \n\nThis course covers fundamental topics of DBMS, compared to CMU 15-721.\nAssignments\nLecture Videos\nReadings\n\n\n15-749 Engineering Distributed Systems Carnegie-Mellon University \n\nA project focused course on Distributed Systems with an awesome list of readings\nReadings\n\n\n18-447 Introduction to Computer Architecture CMU   \n\nVery comprehensive material on Computer Architecture - definitely more than just \"introduction\". Online material is very user-friendly, even the recitation videos available online. This is the Spring'15 version by Prof. Onur Mutlu \nLectures and Recitation\nHomeworks 7 HWs with answer set as well\nReadings\n\n\n\n\nProgramming Languages / Compilers\n\nCS 75 Principles of Compiler Design Swathmore College   \n\nModelled after the influential paper on incremental approach to compiler design, this course teaches how to build a compiler in OCaml\nCourse on Github\nNotes\n\n\nCS 91 Introduction to Programming Languages Swathmore College  \n\nUses the Pyret programming language & PAPL book to understand the fundamentals of programming languages.\nLabs\n\n\nCIS 194 Introduction to Haskell Penn Engineering  \n\nExplore the joys of functional programming, using Haskell as a vehicle. The aim of the course will be to allow you to use Haskell to easily and conveniently write practical programs.\nPrevious semester also available, with more exercises\n\n\nCIS 198 Rust Programming UPenn  \n\nThis course covers what makes Rust so unique and applies it to practical systems programming problems. Topics covered include traits and generics; memory safety (move semantics, borrowing, and lifetimes); Rust\u2019s rich macro system; closures; and concurrency.\nAssignments\n\n\nClojure Functional Programming with Clojure University of Helsinki \n\nThe course is an introduction to functional programming with a dynamically typed language Clojure. We start with an introduction to Clojure; its syntax and development environment. Clojure has a good selection of data structures and we cover most of them. We also go through the basics of recursion and higher-order functions. The course material is in English.\nGithub Page\n\n\nCMSC 430 Introduction to Compilers Univ of Maryland  \n\nThe goal of CMSC 430 is to arm students with the ability to design, implement, and extend a programming language. Throughout the course, students will design and implement several related languages, and will explore parsing, syntax querying, dataflow analysis, compilation to bytecode, type systems, and language interoperation.\nLecture Notes\nAssignments\n\n\nCOS 326 Functional Programming Princeton University  \n\nCovers functional programming concepts like closures, tail-call recursion & parallelism using the OCaml programming language\nLectures\nAssignments\n\n\nCS 143 Compiler construction Stanford University \n\nCS143 is a Stanford's course in the practical and theoretical aspects of compiler construction.\nHome\nSyllabus\nLectures\nAssignments\nCS143 - 2011\n\n\nCS 164 Hack your language! UC Berkeley   \n\nIntroduction to programming languages by designing and implementing domain-specific languages.\nLecture Videos\nCode for Assignments\n\n\nCS 173 Programming Languages Brown University  \n\nCourse by Prof. Krishnamurthi (author of HtDP) and numerous other awesome books on programming languages. Uses a custom designed Pyret programming language to teach the concepts. There was an online class hosted in 2012, which includes all lecture videos for you to enjoy.\nVideos\nAssignments\n\n\nCS 223 Purely Functional Data Structures In Elm University of Chicago  \n\nThis course teaches functional reactive programming and purely functional data structures based on Chris Okazaki's book and using the Elm programming language.\nLectures\nAssignments\n\n\nCS 240h Functional Systems in Haskell Stanford University  \n\nBuilding software systems in Haskell\nLecture Slides\n3 Assignments: Lab1, Lab2, Lab3\n\n\nCS 421 Programming Languages and Compilers Univ of Illinois, Urbana-Champaign   \nCourse that uses OCaml to teach functional programming and programming language design.\n\nLectures\nVideos\nAssignments\nExams\n\n\nCS 3110 Data Structures and Functional Programming Cornell University  \n\nAnother course that uses OCaml to teach alternative programming paradigms, especially functional and concurrent programming.\nLecture Slides\nAssignments\n\n\nCS 4120 Introduction to Compilers Cornell University  \n\nAn introduction to the specification and implementation of modern compilers. Topics covered include lexical scanning, parsing, type checking, code generation and translation, an introduction to optimization, and compile-time and run-time support for modern programming languages.  As part of the course, students build a working compiler for an object-oriented language.\nSyllabus\nLectures\nAssignments\n\n\nCS 4400 Programming Languages Northeastern University   \n\nThis is a course on the study, design, and implementation of programming languages.\nThe course works at two simultaneous levels: first, we will use a programming language that can demonstrate a wide variety of programming paradigms. Second, using this language, we will learn about the mechanics behind programming languages by implementing our own language(s). The two level approach usually means that we will often see how to use a certain feature, and continue by implementing it.\nSyllabus\nLecture Notes/Resources\n\n\nCS 4610 Programming Languages and Compilers University of Virginia  \n\nCourse that uses OCaml to teach functional programming and programming language design. Each assignment is a part of an interpreter and compiler for an object-oriented language similar to Java, and you are required to use a different language for each assignment (i.e., choose 4 from Python, JS, OCaml, Haskell, Ruby).\nLecture Notes\nAssignments\n\n\nCS 5114 Network Programming Languages Cornell University \n\nThis course provides an introduction to the languages used to program computer networks. It will examine recent proposals based on logic, functional, and distributed languages, as well as tools for establishing correctness using automatic solvers, model checkers, and proof assistants.\nSyllabus\nLectures\n\n\nCS 5142 Scripting Languages Cornell University \n\nPerl, PHP, JavaScript, VisualBasic -- they are often-requested skills for employment, but most of us do not have the time to find out what they are all about. In this course, you learn how to use scripting languages for rapid prototyping, web programming, data processing, and application extension. Besides covering traditional programming languages concepts as they apply to scripting (e.g., dynamic typing and scoping), this course looks at new concepts rarely found in traditional languages (e.g., string interpolation, hashes, and polylingual code). Through a series of small projects, you use different languages to achieve programming tasks that highlight the strengths and weaknesses of scripting. As a side effect, you practice teaching yourself new languages.\nSyllabus\nLectures\nAssignments\n\n\nCS 5470 Compilers University of Utah   \n\nIf you're a fan of Prof Matt's writing on his fantastic blog you ought to give this a shot. The course covers the design and implementation of compilers, and it explores related topics such as interpreters, virtual machines and runtime systems. Aside from the Prof's witty take on cheating the page has tons of interesting links on programming languages, parsing and compilers.\nLecture Notes\nProjects\n\n\nCS 6118 Types and Semantics Cornell University \n\nTypes and Semantics is about designing and understand programming languages, whether they be domain specific or general purpose. The goal of this class is to provide a variety of tools for designing custom (programming) languages for whatever task is at hand. Part of that will be a variety of insights on how languages work along with experiences from working with academics and industry on creating new languages such as Ceylon and Kotlin. The class focuses on types and semantics and the interplay between them. This means category theory and constructive type theory (e.g. Coq and richer variations) are ancillary topics of the class. The class also covers unconventional semantic domains such as classical linear type theory in order to both break students from conventional thinking and to provide powerful targets capable of formalizing thinks like networking protocols, resource-sensitive computation, and concurrency constructs. The class project is to design and formalize a (programming) language for a purpose of the student's choosing, and assignments are designed to ensure students have had a chance to practice applying the techniques learned in class before culminating these skills in the class project.\nSyllabus\nLectures\n\n\nCSC 253 CPython internals: A ten-hour codewalk through the Python interpreter source code University of Rochester \n\nNine lectures walking through the internals of CPython, the canonical Python interpreter implemented in C. They were from the Dynamic Languages and Software Development course taught in Fall 2014 at the University of Rochester.\n\n\nCSE 341 Programming Languages University of Washington   \n\nCovers non-imperative paradigms and languages such as Ruby, Racket, and ML and the fundamentals of programming languages.\nLectures and Videos\nAssignments and Tests\n\n\nCSE P 501 Compiler Construction University of Washington  \n\nTeaches understanding of how a modern compiler is structured and the major algorithms that are used to translate code from high-level to machine language. The best way to do this is to actually build a working compiler, so there will be a significant project to implement one that translates programs written in a core subset of Java into executable x86 assembly language. The compilers themselves will use scanner and parser generator tools and the default implementation language is Java.\nLectures\nAssignments, Tests, and Solutions\n\n\nDMFP Discrete Mathematics and Functional Programming Wheaton College  \n\nA course that teaches discrete maths concepts with functional programming\nLecture Videos\nAssignments\n\n\nPCPP Practical Concurrent and Parallel Programming IT University of Copenhagen \n\nIn this MSc course you learn how to write correct and efficient concurrent and parallel software, primarily using Java, on standard shared-memory multicore hardware.\nThe course covers basic mechanisms such as threads, locks and shared memory as well as more advanced mechanisms such as parallel streams for bulk data, transactional memory, message passing, and lock-free data structures with compare-and-swap.\nIt covers concepts such as atomicity, safety, liveness and deadlock.\nIt covers how to measure and understand performance and scalability of parallel programs.\nIt covers tools and methods to find bugs in concurrent programs.\n\n\n6.945 Adventures in Advanced Symbolic Programming MIT \n\nTaught by Gerald Sussman of SICP fame, this class deals with concepts and techniques for the design an implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications.\nAssignments: Extensive programming assignments, using MIT/GNU Scheme. Students should have significant programming experience in Scheme, Common Lisp, Haskell, CAML or other \"functional\" language.\nReadings\n\n\nCS 696 Functional Design and Programming San Diego State University \n\nCovers functional programming basis using Clojure.\nTopics include testing, functional programming, immutable collections and concurrency.\nAlso includes assignments covering Clojurescript, [Reagent](Reagent Github) etc.\n\n\nL28 Advanced Functional Programming University of Cambridge \n\nThis module aims to teach students how to use the features of modern typed functional programming languages (e.g. OCaml, Haskell) to design and implement libraries and DSLs. It aims to demonstrate how such techniques can improve both correctness and efficiency. Students wishing to take the module should have some experience of a typed functional programming language and an understanding of type inference.\nThis particular session was taught by a prominent OCaml programmer, open Source contributor & author of real world OCaml - Dr Anil Madhavapeddy.\n\n\n\n\nAlgorithms\n\nCS 61B Data Structures UC Berkeley    \n\nIn this course, you will study advanced programming techniques including data structures, encapsulation, abstract data types, interfaces, and algorithms for sorting and searching, and you will get a taste of \u201csoftware engineering\u201d\u2014the design and implementation of large programs.\nFull Lecture Materials Lecture of Spring 2016. This website contains full matrials including video links, labs, homeworks, projects. Very good for self-learner. Also a good start for Java. And it includes some other useful resources for Java Documentation, Data Structure Resources, Git/GitHub and Java Development Resources. Resources\nLabs The link to labs and projects is included in the website.\nLecture Videos\n\n\nCS 97SI Introduction to Competitive Programming Stanford University  \n\nFantastic repository of theory and practice problems across various topics for students who are interested to participate in ACM-ICPC.\nLectures and Assignments\n\n\nCS 224 Advanced Algorithms Harvard University   \n\nCS 224 is an advanced course in algorithm design, and topics we will cover include the word RAM model, data structures, amortization, online algorithms, linear programming, semidefinite programming, approximation algorithms, hashing, randomized algorithms, fast exponential time algorithms, graph algorithms, and computational geometry.\nLecture Videos (Youtube)\nAssignments\n\n\nCS 261 A Second Course in Algorithms Stanford University   \n\nAlgorithms for network optimization: max-flow, min-cost flow, matching, assignment, and min-cut problems. Introduction to linear programming. Use of LP duality for design and analysis of algorithms. Approximation algorithms for NP-complete problems such as Steiner Trees, Traveling Salesman, and scheduling problems. Randomized algorithms. Introduction to online algorithms.\nLecture Notes, Videos & Assignments (Youtube)\n\n\nCS 473/573 Fundamental Algorithms Univ of Illinois, Urbana-Champaign  \n\nAlgorithms class covering recursion, randomization, amortization, graph algorithms, network flows and hardness. The lecture notes by Prof. Erikson are comprehensive enough to be a book by themselves. Highly recommended!\nLecture Notes\nLabs and Exams\n\n\nCS 2150 Program & Data Representation University of Virginia  \n\nThis data structures course introduces C++, linked-lists, stacks, queues, trees, numerical representation, hash tables, priority queues, heaps, huffman coding, graphs, and x86 assembly.\nLectures\nAssignments\n\n\nCS 4820 Introduction to Analysis of Algorithms Cornell University   \n\nThis course develops techniques used in the design and analysis of algorithms, with an emphasis on problems arising in computing applications. Example applications are drawn from systems and networks, artificial intelligence, computer vision, data mining, and computational biology. This course covers four major algorithm design techniques (greedy algorithms, divide and conquer, dynamic programming, and network flow), computability theory focusing on undecidability, computational complexity focusing on NP-completeness, and algorithmic techniques for intractable problems, including identification of structured special cases, approximation algorithms, and local search heuristics.\nLectures\nSyllabus\n\n\nCSCI 104 Data Structures and Object Oriented Design   University of Southern California (USC)\n\nLectures\nLabs\nAssignments\nAdditional Resources\n\n\nCSCI 135 Software Design and Analysis I  \nCUNY Hunter College\n\nIt is currently an intensive introduction to program development and problem solving. Its emphasis is on the process of designing, implementing, and evaluating small-scale programs. It is not supposed to be a C++ programming course, although much of the course is spent on the details of C++. C++ is an extremely large and complex programming language with many features that interact in unexpected ways. One does not need to know even half of the language to use it well.\nLectures and Assignments\n\n\nCSCI 235 Software Design and Analysis II CUNY Hunter College  \n\nIntroduces algorithms for a few common problems such as sorting. Practically speaking, it furthers the students' programming skills with topics such as recursion, pointers, and exception handling, and provides a chance to improve software engineering skills and to give the students practical experience for more productive programming.\nLectures and Assignments\n\n\nCSCI 335 Software Design and Analysis III  \nCUNY Hunter College\n\nThis includes the introduction of hashes, heaps, various forms of trees, and graphs. It also revisits recursion and the sorting problem from a higher perspective than was presented in the prequels. On top of this, it is intended to introduce methods of algorithmic analysis.\nLectures and Assignments\n\n\nCSE 331 Software Design and Implementation University of Washington  \n\nExplores concepts and techniques for design and construction of reliable and maintainable software systems in modern high-level languages; program structure and design; program-correctness approaches, including testing.\nLectures, Assignments, and Exams\n\n\nCSE 373 Analysis of Algorithms Stony Brook University    \n\nProf Steven Skiena's no stranger to any student when it comes to algorithms. His seminal book has been touted by many to be best for getting that job in Google. In addition, he's also well-known for tutoring students in competitive programming competitions. If you're looking to brush up your knowledge on Algorithms, you can't go wrong with this course.\nLecture Videos\n\n\nECS 122A Algorithm Design and Analysis UC Davis   \n\nTaught by Dan Gusfield in 2010, this course is an undergraduate introduction to algorithm design and analysis. It features traditional topics, such as Big Oh notation, as well as an importance on implementing specific algorithms. Also featured are sorting (in linear time), graph algorithms, depth-first search, string matching, dynamic programming, NP-completeness, approximation, and randomization.\nSyllabus\nLecture Videos\nAssignments\n\n\nECS 222A Graduate Level Algorithm Design and Analysis UC Davis   \n\nThis is the graduate level complement to the ECS 122A undergraduate algorithms course by Dan Gusfield in 2011. It assumes an undergrad course has already been taken in algorithms, and, while going over some undergraduate algorithms topics, focuses more on increasingly complex and advanced algorithms.\nLecture Videos\nSyllabus\nAssignments\n\n\n6.INT Hacking a Google Interview MIT \n\nThis course taught in the MIT Independent Activities Period in 2009 goes over common solution to common interview questions for software engineer interviews at highly selective companies like Apple, Google, and Facebook. They cover time complexity, hash tables, binary search trees, and other common algorithm topics you should have already covered in a different course, but goes more in depth on things you wouldn't otherwise learn in class- like bitwise logic and problem solving tricks.\nHandouts\nTopics Covered\n\n\n6.006 Introduction to Algorithms MIT  \n\nThis course provides an introduction to mathematical modeling of computational problems. It covers the common algorithms, algorithmic paradigms, and data structures used to solve these problems. The course emphasizes the relationship between algorithms and programming, and introduces basic performance measures and analysis techniques for these problems.\nLecture Videos\nAssignments\nReadings\nResources\nOld Exams\n\n\n6.046J/18.410J Design and Analysis of Algorithms MIT   \n\nThis is an intermediate algorithms course with an emphasis on teaching techniques for the design and analysis of efficient algorithms, emphasizing methods of application. Topics include divide-and-conquer, randomization, dynamic programming, greedy algorithms, incremental improvement, complexity, and cryptography. This course assumes that students know how to analyze simple algorithms and data structures from having taken 6.006. It introduces students to the design of computer algorithms, as well as analysis of sophisticated algorithms.\nLecture Videos\nLecture Notes\nAssignments\nResources\nOld Exams\n\n\n6.851 Advanced Data Structures MIT   \n\nThis is an advanced DS course, you must be done with the Advanced Algorithms course before attempting this one.\nLectures Contains videos from sp2012 version, but there isn't much difference.\nAssignments contains the calendar as well.\n\n\n6.854/18.415J Advanced Algorithms MIT   \n\nAdvanced course in algorithms by Dr. David Karger covering topics such as amortization, randomization, fingerprinting, word-level parallelism, bit scaling, dynamic programming, network flow, linear programming, fixed-parameter algorithms, and approximation algorithms.\nRegister on NB to access the problem set and lectures.\n\n\n6.854J/18.415J Advanced Algorithms MIT  \n\nThis course is a first-year graduate course in algorithms. Emphasis is placed on fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Techniques to be covered include amortization, randomization, fingerprinting, word-level parallelism, bit scaling, dynamic programming, network flow, linear programming, fixed-parameter algorithms, and approximation algorithms. Domains include string algorithms, network optimization, parallel algorithms, computational geometry, online algorithms, external memory, cache, and streaming algorithms, and data structures. The need for efficient algorithms arises in nearly every area of computer science. But the type of problem to be solved, the notion of what algorithms are \"efficient,'' and even the model of computation can vary widely from area to area. In this second class in algorithms, we will survey many of the techniques that apply broadly in the design of efficient algorithms, and study their application in a wide range of application domains and computational models. The goal is for the class to be broad rather than deep. Our plan is to touch upon the following areas. This is a tentative list of topics that might be covered in the class; we will select material adaptively based on the background, interests, and rate of progress of the students.\nLecture Videos - Spring 2016\nLecture Notes\nAssignments\nReadings\nResources\n\n\n15-451/651 Algorithms Carnegie Mellon University \n\nThe required algorithms class that go in depth into all basic algorithms and the proofs behind them. This is one of the heavier algorithms curriculums on this page. Taught by Avrim Blum and Manuel Blum who has a Turing Award due to his contributions to algorithms. Course link includes a very comprehensive set of reference notes by Avrim Blum.\n\n\n16s-4102 Algorithms University of Virginia  \n\nLecture Videos & Homeworks (Youtube)\n\n\n\n\nCS Theory\n\nCIS 500 Software Foundations University of Pennsylvania  \n\nAn introduction to formal verification of software using the Coq proof assistant. Topics include basic concepts of logic, computer-assisted theorem proving, functional programming, operational semantics, Hoare logic, and static type systems.\nLectures and Assignments\nTextbook\n\n\nCS 103 Mathematical Foundations of Computing Stanford University  \n\nCS103 is a first course in discrete math, computability theory, and complexity theory. In this course, we'll probe the limits of computer power, explore why some problems are harder to solve than others, and see how to reason with mathematical certainty.\nLinks to all lectures notes and assignments are directly on the course page\n\n\nCS 173 Discrete Structures Univ of Illinois Urbana-Champaign   \n\nThis course is an introduction to the theoretical side of computer science. In it, you will learn how to construct proofs, read and write literate formal mathematics, get a quick introduction to key theory topics and become familiar with a range of standard mathematics concepts commonly used in computer science.\nTextbook Written by the professor. Includes Instructor's Guide.\nAssignments\nExams\n\n\nCS 276 Foundations of Cryptography UC Berkeley \n\nThis course discusses the complexity-theory foundations of modern cryptography, and looks at recent results in the field such as Fully Homomorphic Encryption, Indistinguishability Obfuscation, MPC and so on.\n\n\nCS 278 Complexity Theory UC Berkeley \n\nA graduate level course on complexity theory that introduces P vs NP, the power of randomness, average-case complexity, hardness of approximation, and so on.\n\n\nCS 374 Algorithms & Models of Computation (Fall 2014) University of Illinois Urbana-Champaign   \n\nCS 498 section 374 (unofficially \"CS 374\") covers fundamental tools and techniques from theoretical computer science, including design and analysis of algorithms, formal languages and automata, computability, and complexity. Specific topics include regular and context-free languages, finite-state automata, recursive algorithms (including divide and conquer, backtracking, dynamic programming, and greedy algorithms), fundamental graph algorithms (including depth- and breadth-first search, topological sorting, minimum spanning trees, and shortest paths), undecidability, and NP-completeness. The course also has a strong focus on clear technical communication.\nAssignments/Exams\nLecture Notes/Labs\nLecture videos\n\n\nCS 3110 Data Structures and Functional Programming Cornell University  \n\nCS 3110 (formerly CS 312) is the third programming course in the Computer Science curriculum, following CS 1110/1112 and CS 2110. The goal of the course is to help students become excellent programmers and software designers who can design and implement software that is elegant, efficient, and correct, and whose code can be maintained and reused.\nSyllabus\nLectures\nAssignments\n\n\nCS 3220 Introduction to Scientific Computing Cornell University  \n\nIn this one-semester survey course, we introduce numerical methods for solving linear and nonlinear equations, interpolating data, computing integrals, and solving differential equations, and we describe how to use these tools wisely (we hope!) when solving scientific problems.\nSyllabus\nLectures\nAssignments\n\n\nCS 4300 Information Retrieval Cornell University  \n\nStudies the methods used to search for and discover information in large-scale systems. The emphasis is on information retrieval applied to textual materials, but there is some discussion of other formats.The course includes techniques for searching, browsing, and filtering information and the use of classification systems and thesauruses. The techniques are illustrated with examples from web searching and digital libraries.\nSyllabus\nLectures\nAssignments\n\n\nCS 4810 Introduction to Theory of Computing Cornell University   \n\nThis undergraduate course provides a broad introduction to the mathematical foundations of computer science. We will examine basic computational models, especially Turing machines. The goal is to understand what problems can or cannot be solved in these models.\nSyllabus\nLectures\nAssignments\n\n\nCS 6810 Theory of Computing Cornell University   \n\nThis graduate course gives a broad introduction to complexity theory, including classical results and recent developments. Complexity theory aims to understand the power of efficient computation (when computational resources like time and space are limited). Many compelling conceptual questions arise in this context. Most of these questions are (surprisingly?) difficult and far from being resolved. Nevertheless, a lot of progress has been made toward understanding them (and also why they are difficult). We will learn about these advances in this course. A theme will be combinatorial constructions with random-like properties, e.g., expander graphs and error-correcting codes. Some examples:\n\nIs finding a solution inherently more difficult than verifying it?\nDo more computational resources mean more computing power?\nIs it easier to find approximate solutions than exact ones?\nAre randomized algorithms more powerful than deterministic ones?\nIs it easier to solve problems in the average case than in the worst case?\nAre quantum computers more powerful than classical ones?\n\n\nSyllabus\nLectures\nAssignments\n\n\nCSCE 3193 Programming Paradigms University of Arkansas (Fayetteville)  \n\nProgramming in different paradigms with emphasis on object oriented programming, network programming and functional programming. Survey of programming languages, event driven programming, concurrency, software validation.\nSyllabus\nNotes\nAssignments\nPractice Exams\n\n\n6.045 Great Ideas in Theoretical Computer Science MIT   \n\nThis course provides a challenging introduction to some of the central ideas of theoretical computer science. Beginning in antiquity, the course will progress through finite automata, circuits and decision trees, Turing machines and computability, efficient algorithms and reducibility, the P versus NP problem, NP-completeness, the power of randomness, cryptography and one-way functions, computational learning theory, and quantum computing. It examines the classes of problems that can and cannot be solved by various kinds of machines. It tries to explain the key differences between computational models that affect their power.\nSyllabus\nLecture Notes\nLecture Videos\n\n\n\n\nIntroduction to CS\n\nCS 10 The Beauty and Joy of Computing UC Berkeley   \n\nCS10 is UCB's introductory computer science class, taught using the beginners' drag-and-drop language. Students learn about history, social implications, great principles, and future of computing. They also learn the joy of programming a computer using a friendly, graphical language, and will complete a substantial team programming project related to their interests.\nSnap*!* (based on Scratch by MIT).\nCurriculum\n\n\nCS 50 Introduction to Computer Science Harvard University   \n\nCS50x is Harvard College's introduction to the intellectual enterprises of computer science and the art of programming for majors and non-majors alike, with or without prior programming experience. An entry-level course taught by David J. Malan.\nLectures\nProblem Sets\nThe course can also be taken from edX.\nThe course's OpenCourseware resides here\n\n\nCS 61A Structure and Interpretation of Computer Programs [Python] UC Berkeley   \n\nIn CS 61A, we are interested in teaching you about programming, not about how to use one particular \tprogramming language. We consider a series of techniques for controlling program complexity, such as functional programming, data abstraction, and object-oriented programming. Mastery of a particular programming language is a very useful side effect of studying these general techniques. However, our hope is that once you have learned the essence of programming, you will find that picking up a new programming language is but a few days' work.\nLecture Resources by Type\nLecture Resources by Topic\nAdditional Resources\nPractice Problems\nExtra Lectures\n\n\nCS 61AS Structure & Interpretation of Computer Programs [Racket] UC Berkeley   \n\nA self-paced version of the CS61 Course but in Racket / Scheme. 61AS is a great introductory course that will ease you into all the amazing concepts that future CS courses will cover, so remember to keep an open mind, have fun, and always respect the data abstraction\nLecture Videos\nAssignments and Notes\n\n\nCS 101 Computer Science 101 Stanford University   \n\nCS101 teaches the essential ideas of Computer Science for a zero-prior-experience audience. Participants play and experiment with short bits of \"computer code\" to bring to life to the power and limitations of computers.\nLectures videos will available for free after registration.\n\n\nCS 106A Programming Methodology Stanford University   \n\nThis course is the largest of the introductory programming courses and is one of the largest courses at Stanford. Topics focus on the introduction to the engineering of computer applications emphasizing modern software engineering principles: object-oriented design, decomposition, encapsulation, abstraction, and testing. Programming Methodology teaches the widely-used Java programming language along with good software engineering principles.\nLecture Videos\nAssignments\nAll materials in a zip file\n\n\nCS 106B Programming Abstractions Stanford University   \n\nThis course is the natural successor to Programming Methodology and covers such advanced programming topics as recursion, algorithmic analysis, and data abstraction using the C++ programming language, which is similar to both C and Java.\nLectures\nAssignments\nAll materials in a zip file\n\n\nCS 107 Programming Paradigms Stanford University   \n\nTopics: Advanced memory management features of C and C++; the differences between imperative and object-oriented paradigms. The functional paradigm (using LISP) and concurrent programming (using C and C++)\nLectures\nAssignments\n\n\nCS 109 Programming Practice Using Scala KAIST  \n\nThis course introduces basic concepts of programming and computer science, such as dynamic and static typing, dynamic memory allocation, objects and methods, binary representation of numbers, using an editor and compiler from the command line, running programs with arguments from the command line, using libraries, and the use of basic data structures such as arrays, lists, sets, and maps. We will use Scala for this course.\n[Lectures] (http://otfried.org/courses/cs109/index.html)\n[Assignments] (http://otfried.org/courses/cs109/index.html)\n\n\nCS 1109 Fundamental Programming Concepts Cornell University  \n\nThis course provides an introduction to programming and problem solving using a high-level programming language. It is designed to increase your knowledge level to comfortably continue to courses CS111x. Our focus will be on generic programming concepts: variables, expressions, control structures, loops, arrays, functions, pseudocode and algorithms. You will learn how to analyze problems and convert your ideas into solutions interpretable by computers. We will use MATLAB; because it provides a productive environment, and it is widely used by all engineering communities.\nSyllabus\nLectures\nAssignments\n\n\nCS 1110 Introduction to Computing Using Python Cornell University  \n\nProgramming and problem solving using Python. Emphasizes principles of software development, style, and testing. Topics include procedures and functions, iteration, recursion, arrays and vectors, strings, an operational model of procedure and function calls, algorithms, exceptions, object-oriented programming, and GUIs (graphical user interfaces). Weekly labs provide guided practice on the computer, with staff present to help. Assignments use graphics and GUIs to help develop fluency and understanding.\nSyllabus\nLectures\nAssignments\n\n\nCS 1112 Introduction to Computing Using Matlab Cornell University  \n\nProgramming and problem solving using MATLAB. Emphasizes the systematic development of algorithms and programs. Topics include iteration, functions, arrays and vectors, strings, recursion, algorithms, object-oriented programming, and MATLAB graphics. Assignments are designed to build an appreciation for complexity, dimension, fuzzy data, inexact arithmetic, randomness, simulation, and the role of approximation. NO programming experience is necessary; some knowledge of Calculus is required.\nSyllabus\nLectures\nAssignments\nProjects\n\n\nCS 1115 Introduction to Computational Science and Engineering Using Matlab Graphical User Interfaces Cornell University  \n\nProgramming and problem solving using MATLAB. Emphasizes the systematic development of algorithms and programs. Topics include iteration, functions, arrays and vectors, strings, recursion, algorithms, object-oriented programming, and MATLAB graphics. Assignments are designed to build an appreciation for complexity, dimension, fuzzy data, inexact arithmetic, randomness, simulation, and the role of approximation. NO programming experience is necessary; some knowledge of Calculus is required.\nSyllabus\nLectures\nProjects\n\n\nCS 1130 Transition to OO Programming Cornell University  \n\nIntroduction to object-oriented concepts using Java. Assumes programming knowledge in a language like MATLAB, C, C++, or Fortran. Students who have learned Java but were not exposed heavily to OO programming are welcome.\nSyllabus\nLectures\nAssignments\n\n\nCS 1133 Transition to Python Cornell University  \n\nIntroduction to the Python programming language. Covers the basic programming constructs of Python, including assignment, conditionals, iteration, functions, object-oriented design, arrays, and vectorized computation. Assumes programming knowledge in a language like Java, Matlab, C, C++, or Fortran.\nSyllabus\nLectures\nAssignments\n\n\nCS 1410-2 and CS2420-20 Computer Science I and II for Hackers University of Utah   \n\nAn intro course in the spirit of SICP designed by Professor Matthew Flatt (one of the lead designers of Racket and author of HtDP). Mostly Racket and C, and a bit of Java, with explanations on how high level functional programming concepts relate to the design of OOP programs. Do this one before SICP if SICP is a bit too much...\nLectures and Assignments 1\nLectures and Assignments 2\nTextbook\nRacket Language\n\n\nCS 2110 Object-Oriented Programming and Data Structures Cornell University  \n\nCS 2110 is an intermediate-level programming course and an introduction to computer science. Topics include program design and development, debugging and testing, object-oriented programming, proofs of correctness, complexity analysis, recursion, commonly used data structures, graph algorithms, and abstract data types. Java is the principal programming language. The course syllabus can easily be extracted by looking at the link to lectures.\nSyllabus\nLectures\nAssignments\n\n\nCS 4302 Web Information Systems Cornell University  \n\nThis course will introduce you to technologies for building data-centric information systems on the World Wide Web, show the practical applications of such systems, and discuss their design and their social and policy context by examining cross-cutting issues such as citizen science, data journalism and open government. Course work involves lectures and readings as well as weekly homework assignments, and a semester-long project in which the students demonstrate their expertise in building data-centric Web information systems.\nSyllabus\nLectures\nAssignments\n\n\nCSCE 2004 Programming Foundations I University of Arkansas (Fayetteville)  \n\nIntroductory course for students majoring in computer science or computer engineering. Software development process: problem specification, program design, implementation, testing and documentation. Programming topics: data representation, conditional and iterative statements, functions, arrays, strings, file I/O, and classes. Using C++ in a UNIX environment.\nSyllabus\nNotes\nAssignments\nPractice Exams\n\n\nCSCI E-1 Understanding Computers and the Internet Harvard University Extension College\n \n\nThis course is all about understanding: understanding what's going on inside your computer when you flip on the switch, why tech support has you constantly rebooting your computer, how everything you do on the Internet can be watched by others, and how your computer can become infected with a worm just by being turned on. Designed for students who use computers and the Internet every day but don't fully understand how it all works, this course fills in the gaps. Through lectures on hardware, software, the Internet, multimedia, security, privacy, website development, programming, and more, this course \"takes the hood off\" of computers and the Internet so that students understand how it all works and why. Through discussions of current events, students are exposed also to the latest technologies.\nLecture Videos\nSyllabus\nNotes / Recaps\nAssignments\n\n\nCS-for-all CS for All Harvey Mudd College   \n\nThis book (and course) takes a unique approach to \u201cIntro CS.\u201d In a nutshell, our objective is to provide an introduction to computer science as an intellectually rich and vibrant field rather than focusing exclusively on computer programming. While programming is certainly an important and pervasive element of our approach, we emphasize concepts and problem-solving over syntax and programming language features.\nLectures and Other resources\n\n\n6.001 Structure and Interpretation of Computer Programs MIT   \n\nTeaches big-picture computing concepts using the Scheme programming language. Students will implement programs in a variety of different programming paradigms (functional, object-oriented, logical). Heavy emphasis on function composition, code-as-data, control abstraction with continuations, and syntactic abstraction through macros. An excellent course if you are looking to build a mental framework on which to hang your programming knowledge.\nLectures\nTextbook (epub, pdf)\nIDE\n\n\n6.005 Software Construction, Fall 2016 MIT  \n\nThis course introduces fundamental principles and techniques of software development. Students learn how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; state machines; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions.\nLectures Notes/Assignments\n\n\n\n\nMachine Learning\n\nDEEPNLP Deep Learning for Natural Language Processing University of Oxford  \n\nThis is an applied course focussing on recent advances in analysing and generating speech and text using recurrent neural networks. We introduce the mathematical definitions of the relevant machine learning models and derive their associated optimisation algorithms. The course covers a range of applications of neural networks in NLP including analysing latent dimensions in text, transcribing speech to text, translating between languages, and answering questions. This course is organised by Phil Blunsom and delivered in partnership with the DeepMind Natural Language Research Group.\nLectures\nAssignments are available on the organisation page titled as \"practicals\"\n\n\nCS20si Tensorflow for Deep Learning Research Stanford University  \n\nThis course will cover the fundamentals and contemporary usage of the Tensorflow library for deep learning research. We aim to help students understand the graphical computational model of Tensorflow, explore the functions it has to offer, and learn how to build and structure models best suited for a deep learning project. Through the course, students will use Tensorflow to build models of different complexity, from simple linear/logistic regression to convolutional neural network and recurrent neural networks with LSTM to solve tasks such as word embeddings, translation, optical character recognition. Students will also learn best practices to structure a model and manage research experiments.\nAssignments available on Github.\n\n\nCOMS 4771 Machine Learning Columbia University  \n\nCourse taught by Tony Jebara introduces topics in Machine Learning for both generative and discriminative estimation. Material will include least squares methods, Gaussian distributions, linear classification, linear regression, maximum likelihood, exponential family distributions, Bayesian networks, Bayesian inference, mixture models, the EM algorithm, graphical models, hidden Markov models, support vector machines, and kernel methods.\nLectures and Assignments\n\n\nCS 109 Data Science Harvard University   \n\nLearning from data in order to gain useful predictions and insights. This course introduces methods for five key facets of an investigation: data wrangling, cleaning, and sampling to get a suitable data set; data management to be able to access big data quickly and reliably; exploratory data analysis to generate hypotheses and intuition; prediction based on statistical methods such as regression and classification; and communication of results through visualization, stories, and interpretable summaries.\nLectures\nSlides\nLabs and Assignments\n2014 Lectures\n2013 Lectures (slightly better)\n\n\nCS 156 Learning from Data Caltech   \n\nThis is an introductory course in machine learning (ML) that covers the basic theory, algorithms, and applications. ML is a key technology in Big Data, and in many financial, medical, commercial, and scientific applications. It enables computational systems to adaptively improve their performance with experience accumulated from the observed data. ML has become one of the hottest fields of study today, taken up by undergraduate and graduate students from 15 different majors at Caltech. This course balances theory and practice, and covers the mathematical as well as the heuristic aspects.\nLectures\nHomework\nTextbook\n\n\nCS 189 Introduction To Machine Learning UC Berkeley  \n\nIntroductory ML course covering a wide range of topics: ranging from least squares to convolutional neural networks\nNotes\nHomework\n\n\nCS 224d Deep Learning for Natural Language Processing Stanford University   \n\nNatural language processing (NLP) is one of the most important technologies of the information age. Understanding complex language utterances is also a crucial part of artificial intelligence. Applications of NLP are everywhere because people communicate most everything in language: web search, advertisement, emails, customer service, language translation, radiology reports, etc. There are a large variety of underlying tasks and machine learning models powering NLP applications. Recently, deep learning approaches have obtained very high performance across many different NLP tasks. These models can often be trained with a single end-to-end model and do not require traditional, task-specific feature engineering. In this spring quarter course students will learn to implement, train, debug, visualize and invent their own neural network models. The course provides a deep excursion into cutting-edge research in deep learning applied to NLP.\nSyllabus\nLectures and Assignments\n\n\nCS 229r Algorithms for Big Data Harvard University   \n\nBig data is data so large that it does not fit in the main memory of a single machine, and the need to process big data by efficient algorithms arises in Internet search, network traffic monitoring, machine learning, scientific computing, signal processing, and several other areas. This course will cover mathematically rigorous models for developing such algorithms, as well as some provable limitations of algorithms operating in those models.\nLectures (Youtube)\nAssignments\n\n\nCS 231n Convolutional Neural Networks for Visual Recognition Stanford University   \n\nComputer Vision has become ubiquitous in our society, with applications in search, image understanding, apps, mapping, medicine, drones, and self-driving cars. This course is a deep dive into details of the deep learning architectures with a focus on learning end-to-end models for these tasks, particularly image classification. During the 10-week course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision.\nLecture Notes\nLecture Videos\nGithub Page\n\n\nCS 287 Advanced Robotics UC Berkeley  \n\nThe course introduces the math and algorithms underneath state-of-the-art robotic systems. The majority of these techniques are heavily based on probabilistic reasoning and optimization---two areas with wide applicability in modern Artificial Intelligence. An intended side-effect of the course is to generally strengthen your expertise in these two areas.\nLectures Notes\nAssignments\n\n\nCS 395T Statistical and Discrete Methods for Scientific Computing University of Texas   \n\nPractical course in applying modern statistical techniques to real data, particularly bioinformatic data and large data sets. The emphasis is on efficient computation and concise coding, mostly in MATLAB and C++.\nTopics covered include probability theory and Bayesian inference; univariate distributions; Central Limit Theorem; generation of random deviates; tail (p-value) tests; multiple hypothesis correction; empirical distributions; model fitting; error estimation; contingency tables; multivariate normal distributions; phylogenetic clustering; Gaussian mixture models; EM methods; maximum likelihood estimation; Markov Chain Monte Carlo; principal component analysis; dynamic programming; hidden Markov models; performance measures for classifiers; support vector machines; Wiener filtering; wavelets; multidimensional interpolation; information theory.\nLectures and Assignments\n\n\nCS 4780 Machine Learning Cornell University \n\nThis course will introduce you to technologies for building data-centric information systems on the World Wide Web, show the practical applications of such systems, and discuss their design and their social and policy context by examining cross-cutting issues such as citizen science, data journalism and open government. Course work involves lectures and readings as well as weekly homework assignments, and a semester-long project in which the students demonstrate their expertise in building data-centric Web information systems.\nSyllabus\nLectures\n\n\nCS 4786 Machine Learning for Data Science Cornell University   \n\nAn introductory course in machine learning, with a focus on data modeling and related methods and learning algorithms for data sciences. Tentative topic list:\n\nDimensionality reduction, such as principal component analysis (PCA) and the singular value decomposition (SVD), canonical correlation analysis (CCA), independent component analysis (ICA), compressed sensing, random projection, the information bottleneck. (We expect to cover some, but probably not all, of these topics).\nClustering, such as k-means, Gaussian mixture models, the expectation-maximization (EM) algorithm, link-based clustering. (We do not expect to cover hierarchical or spectral clustering.).\nProbabilistic-modeling topics such as graphical models, latent-variable models, inference (e.g., belief propagation), parameter learning.\nRegression will be covered if time permits.\n\n\nAssignments\nLectures\n\n\nCVX 101 Convex Optimization Stanford University   \n\nThe course concentrates on recognizing and solving convex optimization problems that arise in applications.  Topics addressed include the following.  Convex sets, functions, and optimization problems.  Basics of convex analysis.  Least-squares, linear and quadratic programs, semidefinite programming, minimax, extremal volume, and other problems.  Optimality conditions, duality theory, theorems of alternative, and applications.  Interior-point methods.  Applications to signal processing, statistics and machine learning, control and mechanical engineering, digital and analog circuit design, and finance.\nTextbook\nLectures and Assignments\n\n\nDS-GA 1008 Deep Learning New York University   \n\nThis increasingly popular course is taught through the Data Science Center at NYU. Originally introduced by Yann Lecun, it is now led by Zaid Harchaoui, although Prof. Lecun is rumored to still stop by from time to time. It covers the theory, technique, and tricks that are used to achieve very high accuracy for machine learning tasks in computer vision and natural language processing. The assignments are in Lua and hosted on Kaggle.\nCourse Page\nRecorded Lectures\n\n\nEECS E6893 & EECS E6895 Big Data Analytics & Advanced Big Data Analytics Columbia University   \n\nStudents will gain knowledge on analyzing Big Data. It serves as an introductory course for graduate students who are expecting to face Big Data storage, processing, analysis, visualization, and application issues on both workplaces and research environments.\nTaught by Dr. Ching-Yung Lin\nCourse Site\nAssignments - Assignments are present in the Course Slides\n\n\nEECS E6894 Deep Learning for Computer Vision and Natural Language Processing Columbia University   \n\nThis graduate level research class focuses on deep learning techniques for vision and natural language processing problems. It gives an overview of the various deep learning models and techniques, and surveys recent advances in the related fields. This course uses Theano as the main programming tool. GPU programming experiences are preferred although not required. Frequent paper presentations and a heavy programming workload are expected.\nReadings\nAssignments\nLecture Notes\n\n\nEE103 Introduction to Matrix Methods Stanford University   \n\nThe course covers the basics of matrices and vectors, solving linear equations, least-squares methods, and many applications. It'll cover the mathematics, but the focus will be on using matrix methods in applications such as tomography, image processing, data fitting, time series prediction, finance, and many others. EE103 is based on a book that Stephen Boyd and Lieven Vandenberghe are currently writing. Students will use a new language called Julia to do computations with matrices and vectors.\nLectures\nBook\nAssignments\nCode\n\n\nFast.ai Introduction to Machine Learning for Coders Fast.ai / University of San Francisco    \n\nThere are around 24 hours of lessons, and you should plan to spend around 8 hours a week for 12 weeks to complete the material. The course is based on lessons recorded at the University of San Francisco for the Masters of Science in Data Science program. We assume that you have at least one year of coding experience, and either remember what you learned in high school math, or are prepared to do some independent study to refresh your knowledge.\nLecture Videos\nLecture Notes\nJupyter Notebooks\n\n\nInfo 290 Analyzing Big Data with Twitter UC Berkeley school of information \n\nIn this course, UC Berkeley professors and Twitter engineers provide lectures on the most cutting-edge algorithms and software tools for data analytics as applied to Twitter's data. Topics include applied natural language processing algorithms such as sentiment analysis, large scale anomaly detection, real-time search, information diffusion and outbreak detection, trend detection in social streams, recommendation algorithms, and advanced frameworks for distributed computing.\nLecture Videos\nPrevious Years coursepage\n\n\nMachine Learning: 2014-2015 University of Oxford   \n\nThe course focusses on neural networks and uses the Torch deep learning library (implemented in Lua) for exercises and assignments. Topics include: logistic regression, back-propagation, convolutional neural networks, max-margin learning, siamese networks, recurrent neural networks, LSTMs, hand-writing with recurrent neural networks, variational autoencoders and image generation and reinforcement learning\nLectures and Assignments\nSource code\n\n\nStatLearning Intro to Statistical Learning Stanford University    \n\nThis is an introductory-level course in supervised learning, with a focus on regression and classification methods. The syllabus includes: linear and polynomial regression, logistic regression and linear discriminant analysis; cross-validation and the bootstrap, model selection and regularization methods (ridge and lasso); nonlinear models, splines and generalized additive models; tree-based methods, random forests and boosting; support-vector machines.\nThe lectures cover all the material in An Introduction to Statistical Learning, with Applications in R which is a more approachable version of the Elements of Statistical Learning (or ESL) book.\n\n\n10-601 Machine Learning Carnegie Mellon University    \n\nThis course covers the theory and practical algorithms for machine learning from a variety of perspectives. It covers topics such as Bayesian networks, decision tree learning, Support Vector Machines, statistical learning methods, unsupervised learning and reinforcement learning. The course covers theoretical concepts such as inductive bias, the PAC learning framework, Bayesian learning methods, margin-based learning, and Occam's Razor. Short programming assignments include hands-on experiments with various learning algorithms. This course is designed to give a graduate-level student a thorough grounding in the methodologies, technologies, mathematics and algorithms currently needed by people who do research in machine learning.\nTaught by one of the leading experts on Machine Learning - Tom Mitchell\nLectures\nProject Ideas and Datasets\n\n\n10-708 Probabilistic Graphical Models Carnegie Mellon University    \n\nMany of the problems in artificial intelligence, statistics, computer systems, computer vision, natural language processing, and computational biology, among many other fields, can be viewed as the search for a coherent global conclusion from local information. The probabilistic graphical models framework provides a unified view for this wide range of problems, enabling efficient inference, decision-making and learning in problems with a very large number of attributes and huge datasets. This graduate-level course will provide you with a strong foundation for both applying graphical models to complex problems and for addressing core research topics in graphical models.\nLecture Videos\nAssignments\nLecture notes\nReadings\n\n\n11-785 Deep Learning Carnegie Mellon University  \n\nThe course presents the subject through a series of seminars and labs, which will explore it from its early beginnings, and work themselves to some of the state of the art. The seminars will cover the basics of deep learning and the underlying theory, as well as the breadth of application areas to which it has been applied, as well as the latest issues on learning from very large amounts of data. We will concentrate largely, although not entirely, on the connectionist architectures that are most commonly associated with it. Lectures and Reading Notes are available on the page.\n\n\nCS246 Mining Massive Data Sets Stanford University    \n\nThe course will discuss data mining and machine learning algorithms for analyzing very large amounts of data. The emphasis will be on Map Reduce as a tool for creating parallel algorithms that can process very large amounts of data.\nLecture Videos\nAssignments\nLecture notes\nReadings\n\n\nCS276 Information Retrieval and Web Search Stanford University  \n\nBasic and advanced techniques for text-based information systems: efficient text indexing; Boolean and vector space retrieval models; evaluation and interface issues; Web search including crawling, link-based algorithms, and Web metadata; text/Web clustering, classification; text mining.\nLecture notes\nReadings\n\n\nPractical_RL Reinforcement Learning in the Wild Yandex SDA    \n\nA course on reinforcement learning in the wild. Taught on-campus in HSE and Yandex SDA (russian) and maintained to be friendly to online students (both english and russian).\nSyllabus\n\n\nUvA DEEP LEARNING UvA Deep Learning Course University of Amsterdam    \n\nThis course is taught in the MSc program in Artificial Intelligence of the University of Amsterdam. In this course we study the theory of deep learning, namely of modern, multi-layered neural networks trained on big data. The course focuses particularly on computer vision and language modelling, which are perhaps two of the most recognizable and impressive applications of the deep learning theory.\nLecture Videos & Notes\nPracticals\nReadings\n\n\n\n\nSecurity\n\nCIS 4930 / CIS 5930 Offensive Computer Security Florida State University   \n\nCourse taught by W. Owen Redwood and Xiuwen Liu. It covers a wide range of computer security topics, starting from Secure C Coding and Reverse Engineering to Penetration Testing, Exploitation and Web Application Hacking, both from the defensive and the offensive point of view.\nLectures and Videos\nAssignments\n\n\nCS 155 Computer and Network Security Stanford  \n\nPrinciples of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system holes, application security (web, email, databases), viruses, social engineering attacks, privacy, and digital rights management. Course projects focus on building reliable code. Recommended: Basic Unix. Primarily intended for seniors and first-year graduate students.\n\n\nCS 161 Computer Security UC Berkeley \n\nIntroduction to computer security. Cryptography, including encryption, authentication, hash functions, cryptographic protocols, and applications. Operating system security, access control. Network security, firewalls, viruses, and worms. Software security, defensive programming, and language-based security. Case studies from real-world systems.\n\n\nCS 259 Security Modeling and Analysis Stanford   \n\nThe course will cover a variety of contemporary network protocols and other systems with security properties. The course goal is to give students hands-on experience in using automated tools and related techniques to analyze and evaluate security mechanisms. To understand security properties and requirements, we will look at several network protocols and their properties, including secrecy, authentication, key establishment, and fairness. In parallel, the course will look at several models and tools used in security analysis and examine their advantages and limitations. In addition to fully automated finite-state model checking techniques, we will also study other approaches, such as constraint solving, process algebras, protocol logics, probabilistic model checking, game theory, and executable models based on logic programming.\n\n\nCS 261 Internet/Network Security UC Berkeley  \n\nThis class aims to provide a thorough grounding in network security suitable for those interested in conducting research in the area, as well as students more generally interested in either security or networking. We will also look at broader issues relating to Internet security for which networking plays a role.  Topics include: denial-of-service; capabilities; network intrusion detection; worms; forensics; scanning; traffic analysis / inferring activity; architecture; protocol issues; legality and ethics; web attacks; anonymity; honeypots; botnets; spam; the underground economy; research pitfalls. The course is taught with an emphasis on seminal papers rather than bleeding-edge for a given topic.\n\n\nCS 5430 System Security Cornell University   \n\nThis course discusses security for computers and networked information systems. We focus on abstractions, principles, and defenses for implementing military as well as commercial-grade secure systems.\nSyllabus\nLectures\nAssignments\n\n\nCSCI 4968 Modern Binary Exploitation Rensselaer Polytechnic Institute \n\nThis repository contains the materials as developed and used by RPISEC to\nteach Modern Binary Exploitation at Rensselaer Polytechnic Institute in\nSpring 2015. This was a university course developed and run solely by students to teach\nskills in vulnerability research, reverse engineering, and binary exploitation.\nLectures Notes\nLabs\nProjects\n\n\nCSCI 4976 Malware Analysis Rensselaer Polytechnic Institute \n\nThis repository contains the materials as developed and used by RPISEC to\nteach Malware Analysis at Rensselaer Polytechnic Institute in\nFall 2015. This was a university course developed and run solely by students, primarily using the\n\n\nEECS 588 Computer & Network Security University of Michigan  \n\nTaught by J. Alex Halderman who has analyzed the security of Electronic Voting Machines in the US and over seas.\nThis intensive research seminar covers foundational work and current topics in computer systems security.\nReadings\nPractical Malware Analysis\nbook by Michael Sikorski and Andrew Honig, to teach skills in reverse engineering, malicious behaviour, malware,\nand anti-analysis techniques.\nLectures Notes\nLabs\nProjects\n\n\n6.857 Computer and Network Security MIT \n\nEmphasis on applied cryptography and may include: basic notion of systems security, cryptographic hash functions, symmetric cryptography (one-time pad, stream ciphers, block ciphers), cryptanalysis, secret-sharing, authentication codes, public-key cryptography (encryption, digital signatures), public-key attacks, web browser security, biometrics, electronic cash, viruses, electronic voting, Assignments include a group final project. Topics may vary year to year.\nLecture Notes\nReferences\n\n\n6.858 Computer Systems Security MIT    \n\nDesign and implementation of secure computer systems. Lectures cover threat models, attacks that compromise security, and techniques for achieving security, based on recent research papers. Topics include operating system (OS) security, capabilities, information flow control, language security, network protocols, hardware security, and security in web applications.\nTaught by James Mickens and Nickolai Zeldovich\nVideo Lectures and Labs\nQuizzes\nReadings\nFinal Projects\n\n\n18-636 Browser Security Stanford  \n\nThe Web continues to grow in popularity as platform for retail transactions, financial services, and rapidly evolving forms of communication. It is becoming an increasingly attractive target for attackers who wish to compromise users' systems or steal data from other sites. Browser vendors must stay ahead of these attacks by providing features that support secure web applications. This course will study vulnerabilities in existing web browsers and the applications they render, as well as new technologies that enable web applications that were never before possible. The material will be largely based on current research problems, and students will be expected to criticize and improve existing defenses. Topics of study include (but are not limited to) browser encryption, JavaScript security, plug-in security, sandboxing, web mashups, and authentication.\n\n\n\n\nArtificial Intelligence\n\nCS 188 Introduction to Artificial Intelligence UC Berkeley   \n\nThis course will introduce the basic ideas and techniques underlying the design of intelligent computer systems. A specific emphasis will be on the statistical and decision-theoretic modeling paradigm. By the end of this course, you will have built autonomous agents that efficiently make decisions in fully informed, partially observable and adversarial settings. Your agents will draw inferences in uncertain environments and optimize actions for arbitrary reward structures. Your machine learning algorithms will classify handwritten digits and photographs. The techniques you learn in this course apply to a wide variety of artificial intelligence problems and will serve as the foundation for further study in any application area you choose to pursue.\nLectures\nProjects\nExams\n\n\nCS 4700 Foundations of Artificial Intelligence Cornell University  \n\nThis course will provide an introduction to computer vision, with topics including image formation, feature detection, motion estimation, image mosaics, 3D shape reconstruction, and object and face detection and recognition. Applications of these techniques include building 3D maps, creating virtual characters, organizing photo and video databases, human computer interaction, video surveillance, automatic vehicle navigation, and mobile computer vision. This is a project-based course, in which you will implement several computer vision algorithms throughout the semester.\nAssignments\nLectures\n\n\nCS 6700 Advanced Artificial Intelligence Cornell University  \n\nThe design of systems that are among top 10 performers in the world (human, computer, or hybrid human-computer).\nSyllabus\nLectures\nReadings\n\n\n6.868J The Society of Mind MIT   \n\nThis course is an introduction, by Prof. Marvin Minsky, to the theory that tries to explain how minds are made from collections of simpler processes. It treats such aspects of thinking as vision, language, learning, reasoning, memory, consciousness, ideals, emotions, and personality. It incorporates ideas from psychology, artificial intelligence, and computer science to resolve theoretical issues such as wholes vs. parts, structural vs. functional descriptions, declarative vs. procedural representations, symbolic vs. connectionist models, and logical vs. common-sense theories of learning.\nLectures\nAssignments\nReadings\n\n\n\n\nComputer Graphics\n\nCAP 5415 Computer Vision University of Central Florida   \n\nAn introductory level course covering the basic topics of computer vision, and introducing some fundamental approaches for computer vision research.\nLectures and Videos\nAssignments\n\n\nCIS 581 Computer Vision and Computational Photography University of Pennsylvania  \n\nAn introductory course in computer vision and computational photography focusing on four topics: image features, image morphing, shape matching, and image search.\nLectures\nAssignments\n\n\nCMU 462 Computer Graphics Carnegie Mellon University   \n\nThis course provides a comprehensive introduction to computer graphics. Focuses on fundamental concepts and techniques, and their cross-cutting relationship to multiple problem domains in graphics (rendering, animation, geometry, imaging). Topics include: sampling, aliasing, interpolation, rasterization, geometric transformations, parameterization, visibility, compositing, filtering, convolution, curves & surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, ray tracing, radiometry, reflectance, light fields, geometric optics, Monte Carlo rendering, importance sampling, camera models, high-performance ray tracing, differential equations, time integration, numerical differentiation, physically-based animation, optimization, numerical linear algebra, inverse kinematics, Fourier methods, data fitting, example-based synthesis.\nLectures and Readings\nAssignments and Quizes\n\n\nCS 378 3D Reconstruction with Computer Vision UTexas  \n\nIn this lab-based class, we'll dive into practical applications of 3D reconstruction, combining hardware and software to build our own 3D environments from scratch. We'll use open-source frameworks like OpenCV to do the heavy lifting, with the focus on understanding and applying state-of-the art approaches to geometric computer vision\nLectures\n\n\nCS 4620 Introduction to Computer Graphics Cornell University   \n\nThe study of creating, manipulating, and using visual images in the computer.\nAssignments\nExams\n\n\nCS 4670 Introduction to Computer Vision Cornell University   \n\nThis course will provide an introduction to computer vision, with topics including image formation, feature detection, motion estimation, image mosaics, 3D shape reconstruction, and object and face detection and recognition. Applications of these techniques include building 3D maps, creating virtual characters, organizing photo and video databases, human computer interaction, video surveillance, automatic vehicle navigation, and mobile computer vision. This is a project-based course, in which you will implement several computer vision algorithms throughout the semester.\nAssignments\nLectures\n\n\nCS 6670 Computer Vision Cornell University  \n\nIntroduction to computer vision. Topics include edge detection, image segmentation, stereopsis, motion and optical flow, image mosaics, 3D shape reconstruction, and object recognition. Students are required to implement several of the algorithms covered in the course and complete a final project.\nSyllabus\nLectures\nAssignments\n\n\nCSCI 1230 Introduction to Computer Graphics Brown University  \n\nThis course offers an in-depth exploration of fundamental concepts in 2D and 3D computer graphics. It introduces 2D raster graphics techniques, including scan conversion, simple image processing, interaction techniques and user interface design. The bulk of the course is devoted to 3D modeling, geometric transformations, and 3D viewing and rendering.\nLectures\nLabs\nDemos\n\n\nCSCI-GA.2270-001 Graduate Computer Graphics New York University   \n\nStep-by-step study computer graphics, with reading and homework at each lecture (Fall2015)\nLectures\n\n\n\n\nMisc\n\nAM 207 Monte Carlo Methods and Stochastic Optimization Harvard University   \n\nThis course introduces important principles of Monte Carlo techniques and demonstrates the power of these techniques with simple (but very useful) applications. All of this in Python!\nLecture Videos\nAssignments\nLecture Notes\n\n\nCS 75 Introduction to Game Development Tufts University  \n\nThe course taught by Ming Y. Chow teaches game development initially in PyGame through Python, before moving on to addressing all facets of game development. Topics addressed include game physics, sprites, animation, game development methodology, sound, testing, MMORPGs and online games, and addressing mobile development in Android, HTML5, and iOS. Most to all of the development is focused on PyGame for learning principles\nText Lectures\nAssignments\nLabs\n\n\nCS 50 Intro to Game Developement Harvard University  \n\nThis course picks up where Harvard College\u2019s CS50 leaves off, focusing on the development of 2D and 3D interactive games. Students explore the design of such childhood games as Super Mario Bros., Legend of Zelda, and Portal in a quest to understand how video games themselves are implemented. Via lectures and hands-on projects, the course explores principles of 2D and 3D graphics, animation, sound, and collision detection using frameworks like Unity and L\u00d6VE 2D, as well as languages like Lua and C#. By class\u2019s end, students will have programmed several of their own games and gained a thorough understanding of the basics of game design and development.\nAssignments\nLecture Videos\n\n\nCS 100 Open Source Software Construction UC Riverside  \n\nThis is a course on how to be a hacker. Your first four homework assignments walk you through the process of building your own unix shell. You'll be developing it as an open source project, and you will collaborate with each other at various points.\nGithub Page\nAssignments\n\n\nCS 108 Object Oriented System Design Stanford  \n\nSoftware design and construction in the context of large OOP libraries. Taught in Java. Topics: OOP design, design patterns, testing, graphical user interface (GUI) OOP libraries, software engineering strategies, approaches to programming in teams.\n\n\nCS 168 Computer Networks UC Berkeley  \n\nThis is an undergraduate level course covering the fundamental concepts of networking as embodied in the Internet. The course will cover a wide range of topics; see the lecture schedule for more details. While the class has a textbook, we will not follow its order of presentation but will instead use the text as a reference when covering each individual topic. The course will also have several projects that involve programming (in Python).\nYou should know programming, data structures, and software engineering. In terms of mathematics, your algebra should be very solid, you need to know basic probability, and you should be comfortable with thinking abstractly. The TAs will spend very little time reviewing material that is not specific to networking. We assume that you either know the material covered in those courses, or are willing to learn the material as necessary. We won't cover any of this material in lecture.\n\n\nCS 193a Android App Development, Spring 2016 Stanford University  \n\nCourse Description: This course provides an introduction to developing applications for the Android mobile platform.\nPrerequisite: CS 106B or equivalent. Java experience highly recommended. OOP highly recommmended.\nDevices: Access to an Android phone and/or tablet recommended but not required.\nVideos: Videos list can be found here\nOther materials: Some codes, handsout, homework ..... and lecture notes are not downloadable on the site due to login requirement. Please head to my Github repo here to download them.\n\n\nCS 193p Developing Applications for iOS Stanford University  \n\nUpdated for iOS 7. Tools and APIs required to build applications for the iPhone and iPad platform using the iOS SDK. User interface designs for mobile devices and unique user interactions using multi-touch technologies. Object-oriented design using model-view-controller paradigm, memory management, Objective-C programming language. Other topics include: object-oriented database API, animation, multi-threading and performance considerations.\nPrerequisites: C language and object-oriented programming experience\nRecommended: Programming Abstractions\nUpdated courses for iOS8 - Swift\nUpdated courses for iOS9 - Swift\n\n\nCS 223A Introduction to Robotics Stanford University   \n\nThe purpose of this course is to introduce you to basics of modeling, design, planning, and control of robot systems. In essence, the material treated in this course is a brief survey of relevant results from geometry, kinematics, statics, dynamics, and control.\n\n\nCS 262a Advanced Topics in Computer Systems UC Berkeley  \n\nCS262a is the first semester of a year-long sequence on computer systems research, including operating systems, database systems, and Internet infrastructure systems.  The goal of the course is to cover a broad array of research topics in computer systems, and to engage you in top-flight systems research.  The first semester is devoted to basic thematic issues and underlying techniques in computer systems, while the second semester goes deeper into topics related to scalable, parallel and distributed systems.  The class is based on a discussion of important research papers and a research project.\nParts: Some Classics, Persistent Storage, Concurrency, Higher-Level Models, Virtual Machines, Cloud Computing, Parallel and Distributed Computing, Potpourri.\nPrerequisites: The historical prerequisite was to pass an entrance exam in class, which covered undergraduate operating systems material (similar to UCB's CS162). There is no longer an exam. However, if you have not already taken a decent undergrad OS class, you should talk with me before taking this class. The exam had the benefit of \"paging in\" the undergrad material, which may have been its primary value (since the pass rate was high).\nReadings & Lectures\n\n\nCS 294 Cutting-edge Web Technologies Berkeley   \n\nWant to learn what makes future web technologies tick? Join us for the class where we will dive into the internals of many of the newest web technologies, analyze and dissect them. We will conduct survey lectures to provide the background and overview of the area as well as invite guest lecturers from various leading projects to present their technologies.\n\n\nCS 411 Software Architecture Design Bilkent University \n\nThis course teaches the basic concepts, methods and techniques for designing software architectures. The topics include: rationale for software architecture design, modeling software architecture design, architectural styles/patterns, architectural requirements analysis, comparison and evaluation of architecture design methods, synthesis-based software architecture design, software product-line architectures, domain modeling, domain engineering and application engineering, software architecture implementation, evaluating software architecture designs.\n\n\nCS 3152 Introduction to Computer Game Development Cornell University  \n\nA project-based course in which programmers and designers collaborate to make a computer game. This course investigates the theory and practice of developing computer games from a blend of technical, aesthetic, and cultural perspectives. Technical aspects of game architecture include software engineering, artificial intelligence, game physics, computer graphics, and networking. Aesthetic and cultural include art and modeling, sound and music, game balance, and player experience.\nSyllabus\nLectures\nAssignments\n\n\nCS 4152 Advanced Topics in Computer Game Development Cornell University  \n\nProject-based follow-up course to CS/INFO 3152. Students work in a multidisciplinary team to develop a game that incorporates innovative game technology. Advanced topics include 3D game development, mobile platforms, multiplayer gaming, and nontraditional input devices. There is a special emphasis on developing games that can be submitted to festivals and competitions, or that can be commercialized.\nSyllabus\nLectures\nAssignments\n\n\nCS 4154 Analytics-driven Game Design Cornell University  \n\nA project-based course in which programmers and designers collaborate to design, implement, and release a video game online through popular game portals. In this course, students will use the internet to gather data anonymously from players. Students will analyze this data in order to improve their game over multiple iterations. Technical aspects of this course include programming, database architecture, and statistical analysis.\nSyllabus\nLectures\nAssignments\n\n\nCS 4812 Quantum Information Processing Cornell University  \n\nHardware that exploits quantum phenomena can dramatically alter the nature of computation. Though constructing a working quantum computer is a formidable technological challenge, there has been much recent experimental progress. In addition, the theory of quantum computation is of interest in itself, offering strikingly different perspectives on the nature of computation and information, as well as providing novel insights into the conceptual puzzles posed by the quantum theory. The course is intended both for physicists, unfamiliar with computational complexity theory or cryptography, and also for computer scientists and mathematicians, unfamiliar with quantum mechanics. The prerequisites are familiarity (and comfort) with finite dimensional vector spaces over the complex numbers, some standard group theory, and ability to count in binary.\nSyllabus\nLectures\n\n\nCS 4860 Applied Logic Cornell University  \n\nIn addition to basic first-order logic, when taught by Computer Science this course involves elements of Formal Methods and Automated Reasoning. Formal Methods is concerned with proving properties of algorithms, specifying programming tasks and synthesizing programs from proofs. We will use formal methods tools such as interactive proof assistants (see www.nuprl.org). We will also spend two weeks on constructive type theory, the language used by the Coq and Nuprl proof assistants.\nSyllabus\nLectures\nAssignments\n\n\nCS 5150 Software Engineering Cornell University   \n\nIntroduction to the practical problems of specifying, designing, building, testing, and delivering reliable software systems\nLectures\nAssignments\n\n\nCS 5220 Applications of Parallel Computers Cornell University   \n\nHow do we solve the large-scale problems of science quickly on modern computers? How do we measure the performance of new or existing simulation codes, and what things can we do to make them run faster? How can we best take advantage of features like multicore processors, vector units, and graphics co-processors? These are the types of questions we will address in CS 5220, Applications of Parallel Computers. Topics include:\n\nSingle-processor architecture, caches, and serial performance tuning\nBasics of parallel machine organization\nDistributed memory programming with MPI\nShared memory programming with OpenMP\nParallel patterns: data partitioning, synchronization, and load balancing\nExamples of parallel numerical algorithms\nApplications from science and engineering\n\n\nLectures\nAssignments\n\n\nCS 5540 Computational Techniques for Analyzing Clinical Data Cornell University  \n\nCS5540 is a masters-level course that covers a wide range of clinical problems and their associated computational challenges. The practice of medicine is filled with digitally accessible information about patients, ranging from EKG readings to MRI images to electronic health records. This poses a huge opportunity for computer tools that make sense out of this data. Computation tools can be used to answer seemingly straightforward questions about a single patient's test results (\u201cDoes this patient have a normal heart rhythm?\u201d), or to address vital questions about large populations (\u201cIs there any clinical condition that affects the risks of Alzheimer\u201d). In CS5540 we will look at many of the most important sources of clinical data and discuss the basic computational techniques used for their analysis, ranging in sophistication from current clinical practice to state-of-the-art research projects.\nSyllabus\nLectures\nAssignments\n\n\nCS 5724 Evolutionary Computation Cornell University  \n\nThis course will cover advanced topics in evolutionary algorithms and their application to open-ended computational design. The field of evolutionary computation tries to address large-scale optimization and planning problems through stochastic population-based methods. It draws inspiration from evolutionary processes in nature and in engineering, and also serves as abstract models for these phenomena. Evolutionary processes are generally weak methods that require little information about the problem domain and hence can be applied across a wide variety of applications. They are especially useful for open-ended problem domains for which little formal knowledge exists and the number of parameters is undefined, such as for the general engineering design process. This course will provide insight to a variety of evolutionary computation paradigms, such as genetic algorithms, genetic programming, and evolutionary strategies, as well as governing dynamics of co-evolution, arms races and mediocre stable states. New methods involving symbiosis models and pattern recognition will also be presented. The material will be intertwined with discussions of representations and results for design problems in a variety of problem domains including software, electronics, and mechanics.\nSyllabus\nLectures\nAssignments\n\n\nCS 6452 Datacenter Networks and Services Cornell University \n\nCS6452 focuses on datacenter networks and services. The emerging demand for web services and cloud computing have created need for large scale data centers. The hardware and software infrastructure for datacenters critically determines the functionality, performance, cost and failure tolerance of applications running on that datacenter. This course will examine design alternatives for both the hardware (networking) infrastructure, and the software infrastructure for datacenters.\nSyllabus\nLectures\n\n\nCS 6630 Realistic Image Synthesis Cornell University   \n\nCS6630 is an introduction to physics-based rendering at the graduate level. Starting from the fundamentals of light transport we will look at formulations of the Rendering Equation, and a series of Monte Carlo methods, from sequential sampling to multiple importance sampling to Markov Chains, for solving the equation to make pictures. We'll look at light reflection from surfaces and scattering in volumes, illumination from luminaries and environments, and diffusion models for translucent materials. We will build working implementations of many of the algorithms we study, and learn how to make sure they are actually working correctly. It's fun to watch integrals and probability distributions transform into photographs of a slightly too perfect synthetic world.\nSyllabus\nLectures\nAssignments\nReadings\n\n\nCS 6640 Computational Photography Cornell University  \n\nA course on the emerging applications of computation in photography. Likely topics include digital photography, unconventional cameras and optics, light field cameras, image processing for photography, techniques for combining multiple images, advanced image editing algorithms, and projector-camera systems.cornell.edu/courses/CS6630/2012sp/about.stm)\nLectures\nAssignments\n\n\nCS 6650 Computational Motion Cornell University \n\nCovers computational aspects of motion, broadly construed. Topics include the computer representation, modeling, analysis, and simulation of motion, and its relationship to various areas, including computational geometry, mesh generation, physical simulation, computer animation, robotics, biology, computer vision, acoustics, and spatio-temporal databases. Students implement several of the algorithms covered in the course and complete a final project.  This offering will also explore the special role of motion processing in physically based sound rendering.\n\n\nCS 6840 Algorithmic Game Theory Cornell University   \n\nAlgorithmic Game Theory combines algorithmic thinking with game-theoretic, or, more generally, economic concepts. The course will study a range of topics at this interface\nSyllabus\nLectures\nAssignments\nReadings\n\n\nCSE 154 Web Programming University of Washington  \n\nThis course is an introduction to programming for the World Wide Web. Covers use of HTML, CSS, PHP, JavaScript, AJAX, and SQL.\nLectures\nAssignments\n\n\nESM 296-4F GIS & Spatial Analysis UC Santa Barbara  \n\nTaught by James Frew, Ben Best, and Lisa Wedding\nFocuses on specific computational languages (e.g., Python, R, shell) and tools (e.g., GDAL/OGR, InVEST, MGET, ModelBuilder) applied to the spatial analysis of environmental problems\nGitHub  (includes lecture materials and labs)\n\n\nICS 314 Software Engineering University of Hawaii   \n\nTaught by Philip Johnson\nIntroduction to software engineering using the \"Athletic Software Engineering\" pedagogy\nReadings\nExperiences\nAssessments\n\n\nIGME 582 Humanitarian Free & Open Source Software Development Rochester Institute of Technology  \n\nThis course provides students with exposure to the design, creation and production of Open Source Software projects. Students will be introduced to the historic intersections of technology and intellectual property rights and will become familiar with Open Source development processes, tools and practices.\n\n\nI485 / H400 Biologically Inspired Computation Indiana University  \n\nCourse taught by Luis Rocha about the multi-disciplinary field algorithms inspired by naturally occurring phenomenon. This course provides introduces the following areas: L-systems, Cellular Automata, Emergence, Genetic Algorithms, Swarm Intelligence and Artificial Immune Systems. It's aim is to cover the fundamentals and enable readers to build up a proficiency in applying various algorithms to real-world problems.\nLectures\nAssignments\n\n\nOpen Sourced Elective: Database and Rails Intro to Ruby on Rails University of Texas  \n\nAn introductory course in Ruby on Rails open sourced by University of Texas' CS Adjunct Professor, Richard Schneeman.\nLectures\nAssignments\nVideos\n\n\nSCICOMP An Introduction to Efficient Scientific Computation Universit\u00e4t Bremen \n\nThis is a graduate course in scientific computing created and taught by Oliver Serang in 2014, which covers topics in computer science and statistics with applications from biology. The course is designed top-down, starting with a problem and then deriving a variety of solutions from scratch.\nTopics include memoization, recurrence closed forms, string matching (sorting, hash tables, radix tries, and suffix tries), dynamic programming (e.g. Smith-Waterman and Needleman-Wunsch), Bayesian statistics (e.g. the envelope paradox), graphical models (HMMs, Viterbi, junction tree, belief propagation), FFT, and the probabilistic convolution tree.\nLecture videos on Youtube and for direct download\n\n\n14-740 Fundamentals of Computer Networks CMU    \n\nThis is an introductory course on Networking for graduate students. It follows a top-down approach to teaching Computer Networks, so it starts with the Application layer which most of the students are familiar with and as the course unravels we learn more about transport, network and link layers of the protocol stack.\nAs far as prerequisites are concerned - basic computer, programming and probability theory background is required.\nThe course site contains links to the lecture videos, reading material and assignments.\n\n\n\n\n"}, {"repo": "tesseract-ocr/tesseract", "language": "C++", "readme": "\nTesseract OCR\n\n\n\n\n\n\n\nAbout\nThis package contains an OCR engine - libtesseract and a command line program - tesseract.\nTesseract 4 adds a new neural net (LSTM) based OCR engine which is focused\non line recognition, but also still supports the legacy Tesseract OCR engine of\nTesseract 3 which works by recognizing character patterns. Compatibility with\nTesseract 3 is enabled by using the Legacy OCR Engine mode (--oem 0).\nIt also needs traineddata files which support the legacy engine, for example\nthose from the tessdata repository.\nThe lead developer is Ray Smith. The maintainer is Zdenko Podobny.\nFor a list of contributors see AUTHORS\nand GitHub's log of contributors.\nTesseract has unicode (UTF-8) support, and can recognize more than 100 languages \"out of the box\".\nTesseract supports various output formats: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV. The master branch also has experimental support for ALTO (XML) output.\nYou should note that in many cases, in order to get better OCR results, you'll need to improve the quality of the image you are giving Tesseract.\nThis project does not include a GUI application. If you need one, please see the 3rdParty wiki page.\nTesseract can be trained to recognize other languages. See Tesseract Training for more information.\nBrief history\nTesseract was originally developed at Hewlett-Packard Laboratories Bristol and\nat Hewlett-Packard Co, Greeley Colorado between 1985 and 1994, with some\nmore changes made in 1996 to port to Windows, and some C++izing in 1998.\nIn 2005 Tesseract was open sourced by HP. Since 2006 it is developed by Google.\nThe latest (LSTM based) stable version is 4.1.0, released on July 7, 2019. Latest source code is available from master branch on GitHub. Open issues can be found in issue tracker, and Planning wiki.\nThe latest 3.5 version is 3.05.02, released on June 19, 2018. Latest source code for 3.05 is available from 3.05 branch on GitHub. There is no development for this version, but it can be used for special cases (e.g. see Regression of features from 3.0x).\nSee Release Notes and Change Log for more details of the releases.\nInstalling Tesseract\nYou can either Install Tesseract via pre-built binary package or build it from source.\nSupported Compilers are:\n\nGCC 4.8 and above\nClang 3.4 and above\nMSVC 2015, 2017, 2019\n\nOther compilers might work, but are not officially supported.\nRunning Tesseract\nBasic command line usage:\ntesseract imagename outputbase [-l lang] [--oem ocrenginemode] [--psm pagesegmode] [configfiles...]\n\nFor more information about the various command line options use tesseract --help or man tesseract.\nExamples can be found in the wiki.\nFor developers\nDevelopers can use libtesseract C or\nC++ API to build their own application.\nIf you need bindings to libtesseract for other programming languages, please see the\nwrapper section on AddOns wiki page.\nDocumentation of Tesseract generated from source code by doxygen can be found on tesseract-ocr.github.io.\nSupport\nBefore you submit an issue, please review the guidelines for this repository.\nFor support, first read the Wiki, particularly the FAQ to see if your problem is addressed there. If not, search the Tesseract user forum, the Tesseract developer forum and past issues, and if you still can't find what you need, ask for support in the mailing-lists.\nMailing-lists:\n\ntesseract-ocr - For tesseract users.\ntesseract-dev - For tesseract developers.\n\nPlease report an issue only for a bug, not for asking questions.\nLicense\nThe code in this repository is licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nNOTE: This software depends on other packages that may be licensed under different open source licenses.\nTesseract uses Leptonica library which essentially\nuses a BSD 2-clause license.\nDependencies\nTesseract uses Leptonica library\nfor opening input images (e.g. not documents like pdf).\nIt is suggested to use leptonica with built-in support for zlib,\npng and\ntiff (for w multipage tiff).\nLatest Version of README\nFor the latest online version of the README.md see:\nhttps://github.com/tesseract-ocr/tesseract/blob/master/README.md\n\n"}, {"repo": "gulpjs/gulp", "language": "JavaScript", "readme": "\n\n\n\n\nThe streaming build system\n\n        \nWhat is gulp?\n\nAutomation - gulp is a toolkit that helps you automate painful or time-consuming tasks in your development workflow.\nPlatform-agnostic - Integrations are built into all major IDEs and people are using gulp with PHP, .NET, Node.js, Java, and other platforms.\nStrong Ecosystem - Use npm modules to do anything you want + over 3000 curated plugins for streaming file transformations\nSimple - By providing only a minimal API surface, gulp is easy to learn and simple to use\n\nWhat's new in 4.0?!\n\nThe task system was rewritten from the ground-up, allowing task composition using series() and parallel() methods\nThe watcher was updated, now using chokidar (no more need for gulp-watch!), with feature parity to our task system\nFirst-class support was added for incremental builds using lastRun()\nA symlink() method was exposed to create symlinks instead of copying files\nBuilt-in support for sourcemaps was added - the gulp-sourcemaps plugin is no longer necessary!\nTask registration of exported functions - using node or ES exports - is now recommended\nCustom registries were designed, allowing for shared tasks or augmented functionality\nStream implementations were improved, allowing for better conditional and phased builds\n\ngulp for enterprise\nAvailable as part of the Tidelift Subscription\nThe maintainers of gulp and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.\nInstallation\nFollow our Quick Start guide.\nRoadmap\nFind out about all our work-in-progress and outstanding issues at https://github.com/orgs/gulpjs/projects.\nDocumentation\nCheck out the Getting Started guide and API docs on our website!\nExcuse our dust! All other docs will be behind until we get everything updated. Please open an issue if something isn't working.\nSample gulpfile.js\nThis file will give you a taste of what gulp does.\nvar gulp = require('gulp');\nvar less = require('gulp-less');\nvar babel = require('gulp-babel');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar cleanCSS = require('gulp-clean-css');\nvar del = require('del');\n\nvar paths = {\n  styles: {\n    src: 'src/styles/**/*.less',\n    dest: 'assets/styles/'\n  },\n  scripts: {\n    src: 'src/scripts/**/*.js',\n    dest: 'assets/scripts/'\n  }\n};\n\n/* Not all tasks need to use streams, a gulpfile is just another node program\n * and you can use all packages available on npm, but it must return either a\n * Promise, a Stream or take a callback and call it\n */\nfunction clean() {\n  // You can use multiple globbing patterns as you would with `gulp.src`,\n  // for example if you are using del 2.0 or above, return its promise\n  return del([ 'assets' ]);\n}\n\n/*\n * Define our tasks using plain functions\n */\nfunction styles() {\n  return gulp.src(paths.styles.src)\n    .pipe(less())\n    .pipe(cleanCSS())\n    // pass in options to the stream\n    .pipe(rename({\n      basename: 'main',\n      suffix: '.min'\n    }))\n    .pipe(gulp.dest(paths.styles.dest));\n}\n\nfunction scripts() {\n  return gulp.src(paths.scripts.src, { sourcemaps: true })\n    .pipe(babel())\n    .pipe(uglify())\n    .pipe(concat('main.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\nfunction watch() {\n  gulp.watch(paths.scripts.src, scripts);\n  gulp.watch(paths.styles.src, styles);\n}\n\n/*\n * Specify if tasks run in series or parallel using `gulp.series` and `gulp.parallel`\n */\nvar build = gulp.series(clean, gulp.parallel(styles, scripts));\n\n/*\n * You can use CommonJS `exports` module notation to declare tasks\n */\nexports.clean = clean;\nexports.styles = styles;\nexports.scripts = scripts;\nexports.watch = watch;\nexports.build = build;\n/*\n * Define default task that can be called by just running `gulp` from cli\n */\nexports.default = build;\nUse latest JavaScript version in your gulpfile\nMost new versions of node support most features that Babel provides, except the import/export syntax. When only that syntax is desired, rename to gulpfile.esm.js, install the [esm][esm-module] module, and skip the Babel portion below.\nNode already supports a lot of ES2015+ features, but to avoid compatibility problems we suggest to install Babel and rename your gulpfile.js to gulpfile.babel.js.\nnpm install --save-dev @babel/register @babel/core @babel/preset-env\nThen create a .babelrc file with the preset configuration.\n{\n  \"presets\": [ \"@babel/preset-env\" ]\n}\nAnd here's the same sample from above written in ES2015+.\nimport gulp from 'gulp';\nimport less from 'gulp-less';\nimport babel from 'gulp-babel';\nimport concat from 'gulp-concat';\nimport uglify from 'gulp-uglify';\nimport rename from 'gulp-rename';\nimport cleanCSS from 'gulp-clean-css';\nimport del from 'del';\n\nconst paths = {\n  styles: {\n    src: 'src/styles/**/*.less',\n    dest: 'assets/styles/'\n  },\n  scripts: {\n    src: 'src/scripts/**/*.js',\n    dest: 'assets/scripts/'\n  }\n};\n\n/*\n * For small tasks you can export arrow functions\n */\nexport const clean = () => del([ 'assets' ]);\n\n/*\n * You can also declare named functions and export them as tasks\n */\nexport function styles() {\n  return gulp.src(paths.styles.src)\n    .pipe(less())\n    .pipe(cleanCSS())\n    // pass in options to the stream\n    .pipe(rename({\n      basename: 'main',\n      suffix: '.min'\n    }))\n    .pipe(gulp.dest(paths.styles.dest));\n}\n\nexport function scripts() {\n  return gulp.src(paths.scripts.src, { sourcemaps: true })\n    .pipe(babel())\n    .pipe(uglify())\n    .pipe(concat('main.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\n /*\n  * You could even use `export as` to rename exported tasks\n  */\nfunction watchFiles() {\n  gulp.watch(paths.scripts.src, scripts);\n  gulp.watch(paths.styles.src, styles);\n}\nexport { watchFiles as watch };\n\nconst build = gulp.series(clean, gulp.parallel(styles, scripts));\n/*\n * Export a default task\n */\nexport default build;\nIncremental Builds\nYou can filter out unchanged files between runs of a task using\nthe gulp.src function's since option and gulp.lastRun:\nconst paths = {\n  ...\n  images: {\n    src: 'src/images/**/*.{jpg,jpeg,png}',\n    dest: 'build/img/'\n  }\n}\n\nfunction images() {\n  return gulp.src(paths.images.src, {since: gulp.lastRun(images)})\n    .pipe(imagemin({optimizationLevel: 5}))\n    .pipe(gulp.dest(paths.images.dest));\n}\n\nfunction watch() {\n  gulp.watch(paths.images.src, images);\n}\nTask run times are saved in memory and are lost when gulp exits. It will only\nsave time during the watch task when running the images task\nfor a second time.\nWant to contribute?\nAnyone can help make this project better - check out our Contributing guide!\nBackers\nSupport us with a monthly donation and help us continue our activities.\n\nSponsors\nBecome a sponsor to get your logo on our README on Github.\n\n\n"}, {"repo": "google/material-design-lite", "language": "HTML", "readme": "\nMaterial Design Lite\n\n\n\n\n\n\nAn implementation of Material Design\ncomponents in vanilla CSS, JS, and HTML.\n\nMaterial Design Lite (MDL) lets you add a Material Design look and feel to your\nstatic content websites. It doesn't rely on any JavaScript frameworks or\nlibraries. Optimized for cross-device use, gracefully degrades in older\nbrowsers, and offers an experience that is accessible from the get-go.\n\nLimited support\n\n\nMaterial Design Lite is now in limited support, with development having moved to the\nMaterial Components for the web repository.\n\n\nNo further development is taking place in MDL by the core team, but we are happy to review PRs, fix critical bugs and\npush out new releases. No breaking changes will be accepted.\n\nUse MDL on your site?\nThis document is targeted at developers that will contribute to or compile\nMDL. If you are looking to use MDL on your website or web app please head to\ngetmdl.io.\nBrowser Support\n\n\n\nIE9\nIE10\nIE11\nChrome\nOpera\nFirefox\nSafari\nChrome (Android)\nMobile Safari\n\n\n\n\nB\nA\nA\nA\nA\nA\nA\nA\nA\n\n\n\nA-grade browsers are fully supported. B-grade browsers will gracefully degrade\nto our CSS-only experience.\nDownload / Clone\nClone the repo using Git:\ngit clone https://github.com/google/material-design-lite.git\nAlternatively you can download\nthis repository.\nWindows users, if you have trouble compiling due to line endings then make sure\nyou configure git to checkout the repository with lf (unix) line endings. This\ncan be achieved by setting core.eol.\ngit config core.eol lf\ngit config core.autocrlf input\ngit rm --cached -r .\ngit reset --hard\n\nRemember, the master branch is considered unstable. Do not use this in\nproduction. Use a tagged state of the repository, npm, or bower for stability!\n\nFeature requests\nMDL is currently in limited support mode, with no further development taking place by the core team.\nWe are happy to accept and review pull requests for new functionality, however, as long as there are no breaking\nchanges.\nWant to contribute?\nIf you found a bug, have any questions or want to contribute. Follow our\nguidelines,\nand help improve the Material Design Lite. For more information visit our\nwiki.\nPlease use the default branch, mdl-1.x.\nTake note that Material Components for Web, which is MDL v2, is under early Alpha stages (which means everything is a moving target, and we can change anything at any moment). Use with caution.\nHowever, we would absolutely love to have people testing MCW and provide feedback about their experiences using it, especially integrating with other frameworks and libraries.\nLicense\n\u00a9 Google, 2015. Licensed under an\nApache-2\nlicense.\n\n"}, {"repo": "bailicangdu/vue2-elm", "language": "Vue", "readme": "\n\u524d\u8a00\nREADME in English\n\u521d\u5b66vue\u65f6\u66fe\u5728\u7f51\u4e0a\u641c\u7d22vue\u7684\u5b9e\u6218\u9879\u76ee\u6e90\u7801\uff0c\u65e0\u5948\u5927\u90e8\u5206\u90fd\u662f\u7b80\u5355\u7684demo\uff0c\u5bf9\u4e8e\u6df1\u7a76vue\u6ca1\u6709\u592a\u5927\u7684\u5e2e\u52a9\uff0c\u5269\u4e0b\u7684\u4e00\u4e9b\u5927\u90e8\u5206\u90fd\u662f\u50cf\u97f3\u4e50\u64ad\u653e\u5668\u4e4b\u7c7b\u7684\u5c55\u793a\u578b\u9879\u76ee\uff0c\u4ea4\u4e92\u6ca1\u6709\u9884\u671f\u90a3\u4e48\u590d\u6742\u3002\u4f46\u6211\u4eec\u5b9e\u9645\u5728\u5de5\u4f5c\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u9047\u5230\u6709\u8d2d\u7269\u8f66\u7684\u9879\u76ee\uff0c\u8fd9\u7c7b\u9879\u76ee\u56e0\u4e3a\u6d89\u53ca\u5230money\uff0c\u6240\u4ee5\u5bf9\u903b\u8f91\u4e25\u8c28\u5ea6\u8981\u6c42\u9ad8\uff0c\u9875\u9762\u4e4b\u95f4\u4ea4\u4e92\u590d\u6742\uff0c\u53c8\u4f1a\u4f34\u968f\u7740\u767b\u5f55\u3001\u6ce8\u518c\u3001\u7528\u6237\u4fe1\u606f\u7b49\u7b49\uff0c\u5e38\u5e38\u4f1a\u8ba9\u6211\u4eec\u5f88\u5934\u75bc\u3002\u65e2\u7136\u8fd8\u6ca1\u4eba\u7528vue\u5199\u8fc7\u8fd9\u6837\u7684\u9879\u76ee\uff0c\u90a3\u4e0d\u5982\u6211\u6765\u5199\uff0c\u5f00\u6e90\u51fa\u6765\u5bf9\u80fd\u770b\u5230\u7684\u4eba\u4e5f\u4f1a\u6709\u5e2e\u52a9\u3002\n\u8fd9\u79cd\u529f\u80fd\u6027\u7684\u9879\u76ee\u5f88\u5b9e\u7528\u4f46\u662f\u5f80\u5f80\u4e5f\u5f88\u67af\u71e5\uff0c\u6ca1\u6709\u97f3\u4e50\u64ad\u653e\u5668\u90a3\u4e48\u770b\u8d77\u6765\u7eda\u4e3d\uff0c\u601d\u6765\u60f3\u53bb\u53d1\u73b0\u997f\u4e86\u4e48\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u7d20\u6750\uff0c\u4e00\u6765\u5b83\u8db3\u591f\u590d\u6742\uff0c\u5f00\u653e\u7684\u5916\u5356\u5e73\u53f0\u6bd4\u4e00\u822c\u7684\u516c\u53f8\u72ec\u6709\u5546\u5e97\u66f4\u52a0\u590d\u6742\u3002\u4e8c\u6765 \u89c1\u5230\u90a3\u4e48\u591a\u7f8e\u98df\uff0c\u5927\u5bb6\u4e5f\u4e0d\u4f1a\u611f\u89c9\u5230\u538c\u70e6\u3002\n\u4e3a\u5565\u662f\u997f\u4e86\u4e48\uff0c\u800c\u4e0d\u662f\u767e\u5ea6\uff0c\u7f8e\u56e2\uff1f\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u4e09\u4e2a\u5916\u5356\u5927\u4f6c\u91cc\uff0c\u997f\u4e86\u4e48\u7684\u8272\u8c03\u548c\u5e03\u5c40\u662f\u6700\u6f02\u4eae\u7684\uff0c\u770b\u8d77\u6765\u6700\u8212\u670d\u3002\n\u6b64\u9879\u76ee\u5927\u5927\u5c0f\u5c0f\u5171 45 \u4e2a\u9875\u9762\uff0c\u6d89\u53ca\u6ce8\u518c\u3001\u767b\u5f55\u3001\u5546\u54c1\u5c55\u793a\u3001\u8d2d\u7269\u8f66\u3001\u4e0b\u5355\u7b49\u7b49\uff0c\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6d41\u7a0b\u3002\u4e00\u822c\u516c\u53f8\u5373\u4fbf\u662f\u5b98\u7f51\u7684\u5355\u9875\u9762\u9879\u76ee\u90fd\u6ca1\u8fd9\u4e48\u590d\u6742\uff0c\u5982\u679c\u8fd9\u4e2a\u9879\u76ee\u80fd\u9a7e\u9a6d\u7684\u4e86\uff0c\u76f8\u4fe1\u5927\u90e8\u5206\u516c\u53f8\u7684\u5176\u4ed6\u5355\u9875\u9762\u5e94\u7528\u4e5f\u5c31\u4e0d\u5728\u8bdd\u4e0b\uff0c\u5373\u4fbf\u66f4\u590d\u6742\uff0c\u4e5f\u4e0d\u4f1a\u6bd4\u8fd9\u4e2a\u9ad8\u5230\u54ea\u91cc\u53bb\u3002\n\u56e0\u4e3a\u5229\u7528\u4e1a\u4f59\u65f6\u95f4\u6765\u505a\uff0c\u5e74\u524d\u5c31\u5f00\u59cb\u5199\uff0c\u53c8\u8de8\u4e2a\u5e74\uff0c\u5468\u671f\u6709\u70b9\u957f\uff0c\u9879\u76ee\u4ece\u96f6\u5e03\u5c40\u5230\u5b8c\u6210\u5171\u7528\u4e862\u4e2a\u591a\u6708\u7684\u65f6\u95f4\uff0c\u76ee\u524d\u9879\u76ee\u5df2\u7ecf\u5b8c\u6210\uff0c\u6b63\u5728\u8fdb\u884c\u4e00\u4e9b\u6027\u80fd\u7684\u4f18\u5316\uff0c\u589e\u52a0\u8be6\u7ec6\u7684\u6ce8\u91ca\u3002\n\u53e6\u5916\uff0c\u8fd9\u4e2a\u9879\u76ee\u548c\u6155\u8bfe\u7f51\u89c6\u9891\u7684\u90a3\u4e2a\u997f\u4e86\u4e48\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u6155\u8bfe\u7f51\u7684\u9879\u76ee\u53ea\u6709\u4e00\u4e2a\u9875\u9762\uff0c\u6211\u5728\u770b\u5b8cvue\u7684\u5b98\u65b9\u6587\u6863\u540e\u76f4\u63a5\u5199\u4e86\u8fd9\u4e2a\u9879\u76ee\uff0c\u6ca1\u6709\u53c2\u7167\u4efb\u4f55\u4eba\u7684\u4ee3\u7801\uff0c\u8bf7\u5927\u5bb6\u4e0d\u8981\u6df7\u4e3a\u4e00\u8c08\u3002\n\u6ce8\uff1a\u6b64\u9879\u76ee\u7eaf\u5c5e\u4e2a\u4eba\u778e\u641e\uff0c\u6b63\u5e38\u4e0b\u5355\u8bf7\u9009\u62e9\u997f\u4e86\u4e48\u5b98\u65b9\u5ba2\u6237\u7aef\u3002\n\u6280\u672f\u6808\nvue2 + vuex + vue-router + webpack + ES6/7 + fetch + sass + flex + svg\n\u9879\u76ee\u8fd0\u884c\n\u6ce8\u610f\uff1a\u7531\u4e8e\u6d89\u53ca\u5927\u91cf\u7684 ES6/7 \u7b49\u65b0\u5c5e\u6027\uff0cnode \u9700\u8981 6.0 \u4ee5\u4e0a\u7248\u672c\ngit clone https://github.com/bailicangdu/vue2-elm.git \u00a0\n\ncd vue2-elm\n\nnpm install \u6216 yarn(\u63a8\u8350)\n\nnpm run dev\n\n\n\u5173\u4e8e\u63a5\u53e3\u6570\u636e\n\u6b64\u9879\u76ee\u7684\u6240\u6709\u63a5\u53e3\u6570\u636e\u90fd\u6765\u6e90\u4e8e\u914d\u5957\u7684\u540e\u53f0\u7cfb\u7edf\uff0c\u540e\u53f0\u9879\u76ee\u4f20\u9001\u5730\u5740\u3002\n\u5982\u679c\u60f3\u4f53\u9a8c\u524d\u540e\u53f0\u540c\u65f6\u5f00\u53d1\uff0c\u53ef\u4ee5\u4e0b\u8f7d\u540e\u53f0\u7cfb\u7edf\u3002\n\u6b64\u65f6\u542f\u52a8\u672c\u9879\u76ee\u7684\u547d\u4ee4\u4e3a\uff1anpm run local \u800c\u4e0d\u662f npm run dev\u3002\n\u540c\u65f6\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u57fa\u4e8eelement-ui\u642d\u5efa\u7684\u540e\u53f0\u7ba1\u7406\u9875\u9762\n\u5982\u679c\u53ea\u505a\u524d\u7aef\u5f00\u53d1\uff0c\u8bf7\u5ffd\u7565\u4e0a\u9762\u8fd9\u51e0\u53e5\u8bdd\u54df\uff5e\n\u8bf4\u660e\n\n\u5982\u679c\u5bf9\u60a8\u6709\u5e2e\u52a9\uff0c\u60a8\u53ef\u4ee5\u70b9\u53f3\u4e0a\u89d2 \"Star\" \u652f\u6301\u4e00\u4e0b \u8c22\u8c22\uff01 ^_^\n\n\n\u6216\u8005\u60a8\u53ef\u4ee5 \"follow\" \u4e00\u4e0b\uff0c\u6211\u4f1a\u4e0d\u65ad\u5f00\u6e90\u66f4\u591a\u7684\u6709\u8da3\u7684\u9879\u76ee\n\n\n\u5f00\u53d1\u73af\u5883 macOS 10.12.3  Chrome 56 \u00a0nodejs 6.10.0\n\n\n\u7279\u522b\u611f\u8c22\u8fb0\u59b9\u5b50@bailichen, @iceRao\uff0c\u5728\u767e\u5fd9\u4e4b\u4e2d\u62bd\u51fa\u65f6\u95f4\u548c\u6211\u4e00\u8d77\u5b8c\u6210\u4e86\u8fd9\u4e2a\u9879\u76ee\uff0c\u8f9b\u82e6\u4e86\ud83c\udf39\n\n\n\u5982\u6709\u95ee\u9898\u8bf7\u76f4\u63a5\u5728 Issues \u4e2d\u63d0\uff0c\u6216\u8005\u60a8\u53d1\u73b0\u95ee\u9898\u5e76\u6709\u975e\u5e38\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6b22\u8fce PR \ud83d\udc4d\n\n\n\u9879\u76ee\u4ea4\u6d41\u7fa4\n\n\n\u63a8\u8350\u4e00\u4e2a react + redux \u5f00\u6e90\u9879\u76ee\uff0c\u5bf9react\u611f\u5174\u8da3\u7684\u670b\u53cb\u8d76\u7d27\u53bb\u770b\u770b\u3002\u5730\u5740\u5728\u8fd9\u91cc\n\n\n\u53e6\u5916\u4e00\u4e2a vue2 + vuex \u7684\u5165\u95e8\u9879\u76ee\uff0c\u6bd4\u5f53\u524d\u7684\u9879\u76ee\u7b80\u5355\u5f88\u591a\uff0c\u975e\u5e38\u9002\u5408\u5165\u95e8\u7ec3\u4e60\u3002\u5730\u5740\u5728\u8fd9\u91cc\n\n\u6548\u679c\u6f14\u793a\n\u67e5\u770bdemo\u8bf7\u6233\u8fd9\u91cc\uff08\u8bf7\u7528chrome\u624b\u673a\u6a21\u5f0f\u9884\u89c8\uff09\n\u79fb\u52a8\u7aef\u626b\u63cf\u4e0b\u65b9\u4e8c\u7ef4\u7801\n\n\u76ee\u6807\u529f\u80fd\n\n \u5b9a\u4f4d\u529f\u80fd -- \u5b8c\u6210\n \u9009\u62e9\u57ce\u5e02 -- \u5b8c\u6210\n \u641c\u7d22\u5730\u5740 -- \u5b8c\u6210\n \u5c55\u793a\u6240\u9009\u5730\u5740\u9644\u8fd1\u5546\u5bb6\u5217\u8868 -- \u5b8c\u6210\n \u641c\u7d22\u7f8e\u98df\uff0c\u9910\u9986 -- \u5b8c\u6210\n \u6839\u636e\u8ddd\u79bb\u3001\u9500\u91cf\u3001\u8bc4\u5206\u3001\u7279\u8272\u83dc\u3001\u914d\u9001\u65b9\u5f0f\u7b49\u8fdb\u884c\u6392\u5e8f\u548c\u7b5b\u9009 -- \u5b8c\u6210\n \u9910\u9986\u98df\u54c1\u5217\u8868\u9875 -- \u5b8c\u6210\n \u8d2d\u7269\u8f66\u529f\u80fd -- \u5b8c\u6210\n \u5e97\u94fa\u8bc4\u4ef7\u9875\u9762 -- \u5b8c\u6210\n \u5355\u4e2a\u98df\u54c1\u8be6\u60c5\u9875\u9762 -- \u5b8c\u6210\n \u5546\u5bb6\u8be6\u60c5\u9875 -- \u5b8c\u6210\n \u767b\u5f55\u3001\u6ce8\u518c -- \u5b8c\u6210\n \u4fee\u6539\u5bc6\u7801 -- \u5b8c\u6210\n \u4e2a\u4eba\u4e2d\u5fc3 -- \u5b8c\u6210\n \u53d1\u9001\u77ed\u4fe1\u3001\u8bed\u97f3\u9a8c\u8bc1 -- \u5b8c\u6210\n \u4e0b\u5355\u529f\u80fd -- \u5b8c\u6210 \u2728\u2728\ud83c\udf89\ud83c\udf89\n \u8ba2\u5355\u5217\u8868 -- \u5b8c\u6210\n \u8ba2\u5355\u8be6\u60c5 -- \u5b8c\u6210\n \u4e0b\u8f7dApp -- \u5b8c\u6210\n \u6dfb\u52a0\u3001\u5220\u9664\u3001\u4fee\u6539\u6536\u8d27\u5730\u5740 -- \u5b8c\u6210\n \u5e10\u6237\u4fe1\u606f -- \u5b8c\u6210\n \u670d\u52a1\u4e2d\u5fc3 -- \u5b8c\u6210\n \u7ea2\u5305 -- \u5b8c\u6210\n \u4e0a\u4f20\u5934\u50cf -- \u5b8c\u6210\n \u4ed8\u6b3e -- \u81e3\u59be\u505a\u4e0d\u5230\u554a~~\n\n\u603b\u7ed3\n1\u3001\u56e0\u4e3a\u5e76\u4e0d\u662felm\u5b98\u65b9\uff0c\u800c\u4e14\u56e0\u4e3a\u8981\u5f00\u4ee3\u7406\uff0c\u5fc5\u987b\u5728pc\u7aef\u6253\u5f00\uff0c\u6700\u591a\u53ea\u80fd\u505a\u5230\u4e0b\u5355\u8fd9\u4e00\u6b65\uff0c\u4e0b\u5355\u6210\u529f\u540e\u53ef\u4ee5\u5728\u624b\u673a\u5ba2\u6237\u7aef\u67e5\u770b\u5e76\u4ed8\u6b3e\u3002\n2\u3001\u4e00\u822c\u6d89\u53ca\u5230money\u7684\u7f51\u9875\u903b\u8f91\u90fd\u6bd4\u8f83\u590d\u6742\uff0c\u5c24\u5176\u50cf\u997f\u4e86\u4e48\u8fd9\u6837\u4e00\u4e2a\u5f00\u653e\u7684\u5e73\u53f0\uff0c\u5546\u5bb6\u548c\u98df\u54c1\u79cd\u7c7b\u7e41\u591a\uff0c\u9875\u9762\u4e0e\u9875\u9762\u4e4b\u95f4\u4ea4\u4e92\u590d\u6742\uff0c\u5728\u5199\u5230 \u8d2d\u7269\u8f66 \u548c \u4e0b\u5355 \u529f\u80fd\u65f6\u4f17\u591a\u7684\u6570\u636e\u548c\u903b\u8f91\u4e00\u5ea6\u8ba9\u4eba\u5f88\u5934\u75bc\uff0c\u53c8\u6ca1\u6709\u8bbe\u8ba1\u548c\u63a5\u53e3api\u6587\u6863\uff0c\u53ea\u80fd\u4e00\u6b65\u6b65\u6478\u7d22\u3002\n3\u3001vue\u56e0\u5176\u8f7b\u91cf\u7ea7\u7684\u6846\u67b6\u5728\u4e2d\u5c0f\u578b\u9879\u76ee\u4e2d\u8868\u73b0\u4eae\u773c\uff0c\u5728\u5927\u578b\u5355\u9875\u9762\u5e94\u7528\u4e2d\u56e0\u4e3avuex\u7684\u5b58\u5728\uff0c\u8868\u73b0\u4f9d\u7136\u51fa\u8272\uff0c\u5728\u5904\u7406\u590d\u6742\u4ea4\u4e92\u903b\u8f91\u7684\u65f6\u5019\uff0cvuex\u7684\u5b58\u5728\u662f\u4e0d\u53ef\u6216\u7f3a\u7684\u3002\u6240\u4ee5\u8bf4\u5229\u7528 vue + vuex \u5b8c\u5168\u53ef\u4ee5\u53bb\u505a\u5927\u578b\u7684\u5355\u9875\u9762\u9879\u76ee\u3002\n4\u3001\u9879\u76ee\u5199\u5230\u73b0\u5728\uff0c\u4ece \u767b\u5f55\u6ce8\u518c\u5230\u3001\u9996\u9875\u3001\u641c\u7d22\u3001\u5546\u5bb6\u5217\u8868\u3001\u8d2d\u7269\u8f66\u3001\u4e0b\u5355\u3001\u8ba2\u5355\u5217\u8868\u3001\u4e2a\u4eba\u4e2d\u5fc3 \u4e00\u4e2a\u6d41\u7a0b\u8d70\u5b8c\u4e4b\u540e\u3001\u4e0d\u4f46\u5bf9vue\u7684\u7406\u89e3\u66f4\u6df1\u4e00\u5c42\uff0c\u800c\u4e14\u5bf9\u4ee5\u540e\u638c\u63a7\u5927\u578b\u9879\u76ee\u7684\u65f6\u5019\u4e5f\u6709\u975e\u5e38\u591a\u7684\u5e2e\u52a9\uff0c\u505a\u4e00\u4e2a\u5b9e\u9645\u7684\u9879\u76ee\u624d\u80fd\u5bf9\u81ea\u5df1\u6709\u5f88\u5927\u7684\u63d0\u5347\u3002\n5\u3001\u66fe\u4e00\u5ea6\u6000\u7591\uff0c\u82b1\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u505a\u8fd9\u6837\u4e00\u4e2a\u9879\u76ee\u5230\u5e95\u6709\u6ca1\u6709\u610f\u4e49\uff0c\u672c\u6765\u53ea\u662f\u60f3\u505a\u4e00\u4e2a\u5c0f\u9879\u76ee\u7ec3\u7ec3\u624b\uff0c\u6ca1\u60f3\u5230\u540e\u6765\u8d8a\u5199\u8d8a\u591a\uff0c\u4e0d\u8fc7\u575a\u6301\u4e0b\u6765\u540e\u6211\u76f8\u4fe1\u4e00\u5207\u90fd\u662f\u503c\u5f97\u7684\u3002\n6\u3001\u9879\u76ee\u5df2\u7ecf\u5b8c\u6210\uff0c\u517145\u4e2a\u9875\u9762\u3002\n\u6700\u7ec8\u76ee\u6807\n1\u3001\u7528node.js\u6784\u5efa\u4e00\u4e2a\u6a21\u62df\u5916\u5356\u5e73\u53f0\u7684\u540e\u53f0\u7cfb\u7edf\u3002\u5730\u5740\u5728\u8fd9\u91cc\n2\u3001\u5199\u51fa\u8de8 Android \u548c IOS \u7684\u539f\u751fAPP\u7248\u672c\u3002\u5730\u5740\u5728\u8fd9\u91cc\n3\u3001\u5982\u679c\u65f6\u95f4\u6765\u7684\u53ca\uff0c\u4f1a\u51fa\u4e00\u5356\u5bb6\u7248\u672c\u3002\n\u6240\u4ee5\u6211\u7684\u76ee\u7684\u662f\u6784\u5efa\u4e00\u4e2a\u6a2a\u8de8\u524d\u540e\u7aef\uff0c\u79fb\u52a8IOS\u3001Android\u7684\u5b8c\u6574\u751f\u6001\u5708\u3002\n\u3002\u3002\u3002\u656c\u8bf7\u671f\u5f85\n\u90e8\u5206\u622a\u56fe\n\u5546\u94fa\u5217\u8868\u9875\n \n\u5546\u94fa\u7b5b\u9009\u9875\n \n\u9910\u9986\u98df\u54c1\u5217\u8868\u4e0e\u8d2d\u7269\u8f66\n \n\u786e\u8ba4\u8ba2\u5355\u9875\n \n\u641c\u7d22\u9875\n \n\u767b\u5f55\u9875\n \n\u4e2a\u4eba\u4e2d\u5fc3\n \n\u9879\u76ee\u5e03\u5c40\n.\n\u251c\u2500\u2500 build                                       // webpack\u914d\u7f6e\u6587\u4ef6\n\u251c\u2500\u2500 config                                      // \u9879\u76ee\u6253\u5305\u8def\u5f84\n\u251c\u2500\u2500 elm                                         // \u4e0a\u7ebf\u9879\u76ee\u6587\u4ef6\uff0c\u653e\u5728\u670d\u52a1\u5668\u5373\u53ef\u6b63\u5e38\u8bbf\u95ee\n\u251c\u2500\u2500 screenshots                                 // \u9879\u76ee\u622a\u56fe\n\u251c\u2500\u2500 src                                         // \u6e90\u7801\u76ee\u5f55\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 components                              // \u7ec4\u4ef6\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 common                              // \u516c\u5171\u7ec4\u4ef6\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 alertTip.vue                    // \u5f39\u51fa\u6846\u7ec4\u4ef6\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 buyCart.vue                     // \u8d2d\u7269\u8f66\u7ec4\u4ef6\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 computeTime.vue                 // \u5012\u8ba1\u65f6\u7ec4\u4ef6\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 loading.vue                     // \u9875\u9762\u521d\u59cb\u5316\u52a0\u8f7d\u6570\u636e\u7684\u52a8\u753b\u7ec4\u4ef6\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 mixin.js                        // \u7ec4\u4ef6\u6df7\u5408(\u5305\u62ec\uff1a\u6307\u4ee4-\u4e0b\u62c9\u52a0\u8f7d\u66f4\u591a\uff0c\u5904\u7406\u56fe\u7247\u5730\u5740)\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 ratingStar.vue                  // \u8bc4\u8bba\u7684\u4e94\u9897\u661f\u7ec4\u4ef6\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 shoplist.vue                    // msite\u548cshop\u9875\u9762\u7684\u9910\u9986\u5217\u8868\u516c\u5171\u7ec4\u4ef6\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 footer\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 footGuide.vue                   // \u5e95\u90e8\u516c\u5171\u7ec4\u4ef6\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 header\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 head.vue                        // \u5934\u90e8\u516c\u5171\u7ec4\u4ef6\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config                                  // \u57fa\u672c\u914d\u7f6e\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 env.js                              // \u73af\u5883\u5207\u6362\u914d\u7f6e\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 fetch.js                            // \u83b7\u53d6\u6570\u636e\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 mUtils.js                           // \u5e38\u7528\u7684js\u65b9\u6cd5\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 rem.js                              // px\u8f6c\u6362rem\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 images                                  // \u516c\u5171\u56fe\u7247\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 page\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 balance\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 balance.vue                     // \u4f59\u989d\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 detail.vue                  // \u4f59\u989d\u8bf4\u660e\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 benefit\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 benefit.vue                     // \u7ea2\u5305\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 commend.vue                 // \u63a8\u8350\u6709\u5956\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 coupon.vue                  // \u4ee3\u91d1\u5238\u8bf4\u660e\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 exchange.vue                // \u5151\u6362\u7ea2\u5305\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 hbDescription.vue           // \u7ea2\u5305\u8bf4\u660e\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 hbHistory.vue               // \u5386\u53f2\u7ea2\u5305\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 city\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 city.vue                        // \u5f53\u524d\u57ce\u5e02\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 confirmOrder\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 addAddress.vue          // \u6dfb\u52a0\u5730\u5740\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 searchAddress.vue   // \u641c\u7d22\u5730\u5740\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 chooseAddress.vue           // \u9009\u62e9\u5730\u5740\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 invoice.vue                 // \u9009\u62e9\u53d1\u7968\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 payment.vue                 // \u4ed8\u6b3e\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 remark.vue                  // \u8ba2\u5355\u5907\u6ce8\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 userValidation.vue          // \u7528\u6237\u9a8c\u8bc1\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 confirmOrder.vue                // \u786e\u8ba4\u8ba2\u5355\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 download\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 download.vue                    // \u4e0b\u8f7dApp\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 find\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 find.vue                        // \u53d1\u73b0\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 food\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 food.vue                        // \u98df\u54c1\u7b5b\u9009\u6392\u5e8f\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 forget\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 forget.vue                      // \u5fd8\u8bb0\u5bc6\u7801\uff0c\u4fee\u6539\u5bc6\u7801\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 home\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 home.vue                        // \u9996\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 login\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 login.vue                       // \u767b\u5f55\u6ce8\u518c\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 msite\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 msite.vue                       // \u5546\u94fa\u5217\u8868\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 order\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 orderDetail.vue             // \u8ba2\u5355\u8be6\u60c5\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 order.vue                       // \u8ba2\u5355\u5217\u8868\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 points\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 detail.vue                  // \u79ef\u5206\u8bf4\u660e\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 points.vue                      // \u79ef\u5206\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 profile\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 address.vue             // \u5730\u5740\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 add.vue             // \u65b0\u589e\u5730\u5740\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2514\u2500\u2500 addDetail.vue   // \u641c\u7d22\u5730\u5740\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 info.vue                    // \u5e10\u6237\u4fe1\u606f\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 setusername.vue             // \u91cd\u7f6e\u7528\u6237\u540d\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 profile.vue                     // \u4e2a\u4eba\u4e2d\u5fc3\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 search\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 search.vue                      // \u641c\u7d22\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 service\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 questionDetail.vue          // \u95ee\u9898\u8be6\u60c5\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 service.vue                     // \u670d\u52a1\u4e2d\u5fc3\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 shop\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 shopSafe.vue            // \u5546\u94fa\u8ba4\u8bc1\u4fe1\u606f\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 foodDetail.vue              // \u5546\u94fa\u4fe1\u606f\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 shopDetail.vue              // \u5355\u4e2a\u5546\u94fa\u4fe1\u606f\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 shop.vue                        // \u5546\u94fa\u7b5b\u9009\u9875\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 vipcard\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 children\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 invoiceRecord.vue           // \u8d2d\u4e70\u8bb0\u5f55\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 useCart.vue                 // \u4f7f\u7528\u5361\u53f7\u8d2d\u4e70\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 vipDescription.vue          // \u4f1a\u5458\u8bf4\u660e\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 vipcard.vue                     // \u4f1a\u5458\u5361\u529e\u7406\u9875\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 plugins                                 // \u5f15\u7528\u7684\u63d2\u4ef6\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 router\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 router.js                           // \u8def\u7531\u914d\u7f6e\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 service                                 // \u6570\u636e\u4ea4\u4e92\u7edf\u4e00\u8c03\u914d\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 getData.js                          // \u83b7\u53d6\u6570\u636e\u7684\u7edf\u4e00\u8c03\u914d\u6587\u4ef6\uff0c\u5bf9\u63a5\u53e3\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 tempdata                            // \u5f00\u53d1\u9636\u6bb5\u7684\u4e34\u65f6\u6570\u636e\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 store                                   // vuex\u7684\u72b6\u6001\u7ba1\u7406\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 action.js                           // \u914d\u7f6eactions\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 getters.js                          // \u914d\u7f6egetters\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 index.js                            // \u5f15\u7528vuex\uff0c\u521b\u5efastore\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 modules                             // store\u6a21\u5757\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 mutation-types.js                   // \u5b9a\u4e49\u5e38\u91cfmuations\u540d\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 mutations.js                        // \u914d\u7f6emutations\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 style\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 common.scss                         // \u516c\u5171\u6837\u5f0f\u6587\u4ef6\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 mixin.scss                          // \u6837\u5f0f\u914d\u7f6e\u6587\u4ef6\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 swiper.min.css\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 App.vue                                 // \u9875\u9762\u5165\u53e3\u6587\u4ef6\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 main.js                                 // \u7a0b\u5e8f\u5165\u53e3\u6587\u4ef6\uff0c\u52a0\u8f7d\u5404\u79cd\u516c\u5171\u7ec4\u4ef6\n\u251c\u2500\u2500 favicon.ico                                 // \u56fe\u6807\n\u251c\u2500\u2500 index.html                                  // \u5165\u53e3html\u6587\u4ef6\n.\n\n56 directories, 203 files\n\nLicense\nGPL\n\n"}, {"repo": "Unitech/pm2", "language": "JavaScript", "readme": "\n\n\n\n\n\n\n\nP(rocess) M(anager) 2\nRuntime Edition\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPM2 is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks.\nStarting an application in production mode is as easy as:\n$ pm2 start app.js\nPM2 is constantly assailed by more than 1800 tests.\nOfficial website: https://pm2.keymetrics.io/\nWorks on Linux (stable) & macOS (stable) & Windows (stable). All Node.js versions are supported starting Node.js 8.X.\n\nInstalling PM2\nWith NPM:\n$ npm install pm2 -g\nOr if you don't have Node.js installed:\nwget -qO- https://getpm2.com/install.sh | bash\nStart an application\nYou can start any application (Node.js, Python, Ruby, binaries in $PATH...) like that:\n$ pm2 start app.js\nYour app is now daemonized, monitored and kept alive forever.\nMore about Process Management\nManaging Applications\nOnce applications are started you can manage them easily:\n\nTo list all running applications:\n$ pm2 list\nManaging apps is straightforward:\n$ pm2 stop     <app_name|namespace|id|'all'|json_conf>\n$ pm2 restart  <app_name|namespace|id|'all'|json_conf>\n$ pm2 delete   <app_name|namespace|id|'all'|json_conf>\nTo have more details on a specific application:\n$ pm2 describe <id|app_name>\nTo monitor logs, custom metrics, application information:\n$ pm2 monit\nMore about Application Management\nCluster Mode: Node.js Load Balancing & Zero Downtime Reload\nThe Cluster mode is a special mode when starting a Node.js application, it starts multiple processes and load-balance HTTP/TCP/UDP queries between them. This increase overall performance (by a factor of x10 on 16 cores machines) and reliability (faster socket re-balancing in case of unhandled errors).\nStarting a Node.js application in cluster mode that will leverage all CPUs available:\n$ pm2 start api.js -i <processes>\n<processes> can be 'max', -1 (all cpu minus 1) or a specified number of instances to start.\nZero Downtime Reload\nHot Reload allows to update an application without any downtime:\n$ pm2 reload all\nSeamlessly supported by all major Node.js frameworks and any Node.js applications without any code change:\n\nMore informations about how PM2 make clustering easy\nContainer Support\nWith the drop-in replacement command for node, called pm2-runtime, run your Node.js application in a hardened production environment.\nUsing it is seamless:\nRUN npm install pm2 -g\nCMD [ \"pm2-runtime\", \"npm\", \"--\", \"start\" ]\n\nRead More about the dedicated integration\nTerminal Based Monitoring\n\nMonitor all processes launched straight from the command line:\n$ pm2 monit\nLog Management\nTo consult logs just type the command:\n$ pm2 logs\nStandard, Raw, JSON and formated output are available.\nExamples:\n$ pm2 logs APP-NAME       # Display APP-NAME logs\n$ pm2 logs --json         # JSON output\n$ pm2 logs --format       # Formated output\n\n$ pm2 flush               # Flush all logs\n$ pm2 reloadLogs          # Reload all logs\nMore about log management\nStartup Scripts Generation\nPM2 can generates and configure a Startup Script to keep PM2 and your processes alive at every server restart.\nInit Systems Supported: systemd, upstart, launchd, rc.d\n# Generate Startup Script\n$ pm2 startup\n\n# Freeze your process list across server restart\n$ pm2 save\n\n# Remove Startup Script\n$ pm2 unstartup\nMore about Startup Scripts Generation\nPM2 Modules\nPM2 embeds a simple and powerful module system. Installing a module is straightforward:\n$ pm2 install <module_name>\nHere are some PM2 compatible modules (standalone Node.js applications managed by PM2):\npm2-logrotate automatically rotate logs and limit logs size\npm2-server-monit monitor the current server with more than 20+ metrics and 8 actions\nUpdating PM2\n# Install latest PM2 version\n$ npm install pm2@latest -g\n# Save process list, exit old PM2 & restore all processes\n$ pm2 update\nPM2 updates are seamless\nPM2+ Monitoring\nIf you manage your apps with PM2, PM2+ makes it easy to monitor and manage apps across servers.\nFeel free to try it:\nDiscover the monitoring dashboard for PM2\nThanks in advance and we hope that you like PM2!\nCHANGELOG\nCHANGELOG\nContributors\nContributors\nLicense\nPM2 is made available under the terms of the GNU Affero General Public License 3.0 (AGPL 3.0).\nFor other licenses contact us.\n\n"}, {"repo": "fatedier/frp", "language": "Go", "readme": "\nfrp\n\nREADME | \u4e2d\u6587\u6587\u6863\nWhat is frp?\nfrp is a fast reverse proxy to help you expose a local server behind a NAT or firewall to the Internet. As of now, it supports TCP and UDP, as well as HTTP and HTTPS protocols, where requests can be forwarded to internal services by domain name.\nfrp also has a P2P connect mode.\nTable of Contents\n\nDevelopment Status\nArchitecture\nExample Usage\n\nAccess your computer in LAN by SSH\nVisit your web service in LAN by custom domains\nForward DNS query request\nForward Unix domain socket\nExpose a simple HTTP file server\nEnable HTTPS for local HTTP service\nExpose your service privately\nP2P Mode\n\n\nFeatures\n\nConfiguration Files\nUsing Environment Variables\nDashboard\nAdmin UI\nAuthenticating the Client\nEncryption and Compression\n\nTLS\n\n\nHot-Reloading frpc configuration\nGet proxy status from client\nOnly allowing certain ports on the server\nPort Reuse\nBandwidth Limit\n\nFor Each Proxy\n\n\nTCP Stream Multiplexing\nSupport KCP Protocol\nConnection Pooling\nLoad balancing\nService Health Check\nRewriting the HTTP Host Header\nSetting other HTTP Headers\nGet Real IP\n\nHTTP X-Forwarded-For\nProxy Protocol\n\n\nRequire HTTP Basic auth (password) for web services\nCustom subdomain names\nURL routing\nConnecting to frps via HTTP PROXY\nRange ports mapping\nPlugins\n\n\nDevelopment Plan\nContributing\nDonation\n\nAliPay\nWechat Pay\nPaypal\n\n\n\nDevelopment Status\nfrp is under development. Try the latest release version in the master branch, or use the dev branch for the version in development.\nThe protocol might change at a release and we don't promise backwards compatibility. Please check the release log when upgrading the client and the server.\nArchitecture\n\nExample Usage\nFirstly, download the latest programs from Release page according to your operating system and architecture.\nPut frps and frps.ini onto your server A with public IP.\nPut frpc and frpc.ini onto your server B in LAN (that can't be connected from public Internet).\nAccess your computer in LAN by SSH\n\nModify frps.ini on server A:\n\n# frps.ini\n[common]\nbind_port = 7000\n\nStart frps on server A:\n\n./frps -c ./frps.ini\n\nOn server B, modify frpc.ini to put in your frps server public IP as server_addr field:\n\n# frpc.ini\n[common]\nserver_addr = x.x.x.x\nserver_port = 7000\n\n[ssh]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 22\nremote_port = 6000\n\nStart frpc on server B:\n\n./frpc -c ./frpc.ini\n\nFrom another machine, SSH to server B like this (assuming that username is test):\n\nssh -oPort=6000 test@x.x.x.x\nVisit your web service in LAN by custom domains\nSometimes we want to expose a local web service behind a NAT network to others for testing with your own domain name and unfortunately we can't resolve a domain name to a local IP.\nHowever, we can expose an HTTP(S) service using frp.\n\nModify frps.ini, set the vhost HTTP port to 8080:\n\n# frps.ini\n[common]\nbind_port = 7000\nvhost_http_port = 8080\n\nStart frps:\n\n./frps -c ./frps.ini\n\nModify frpc.ini and set server_addr to the IP address of the remote frps server. The local_port is the port of your web service:\n\n# frpc.ini\n[common]\nserver_addr = x.x.x.x\nserver_port = 7000\n\n[web]\ntype = http\nlocal_port = 80\ncustom_domains = www.example.com\n\nStart frpc:\n\n./frpc -c ./frpc.ini\n\n\nResolve A record of www.example.com to the public IP of the remote frps server or CNAME record to your origin domain.\n\n\nNow visit your local web service using url http://www.example.com:8080.\n\n\nForward DNS query request\n\nModify frps.ini:\n\n# frps.ini\n[common]\nbind_port = 7000\n\nStart frps:\n\n./frps -c ./frps.ini\n\nModify frpc.ini and set server_addr to the IP address of the remote frps server, forward DNS query request to Google Public DNS server 8.8.8.8:53:\n\n# frpc.ini\n[common]\nserver_addr = x.x.x.x\nserver_port = 7000\n\n[dns]\ntype = udp\nlocal_ip = 8.8.8.8\nlocal_port = 53\nremote_port = 6000\n\nStart frpc:\n\n./frpc -c ./frpc.ini\n\nTest DNS resolution using dig command:\n\ndig @x.x.x.x -p 6000 www.google.com\nForward Unix domain socket\nExpose a Unix domain socket (e.g. the Docker daemon socket) as TCP.\nConfigure frps same as above.\n\nStart frpc with configuration:\n\n# frpc.ini\n[common]\nserver_addr = x.x.x.x\nserver_port = 7000\n\n[unix_domain_socket]\ntype = tcp\nremote_port = 6000\nplugin = unix_domain_socket\nplugin_unix_path = /var/run/docker.sock\n\nTest: Get Docker version using curl:\n\ncurl http://x.x.x.x:6000/version\nExpose a simple HTTP file server\nBrowser your files stored in the LAN, from public Internet.\nConfigure frps same as above.\n\nStart frpc with configuration:\n\n# frpc.ini\n[common]\nserver_addr = x.x.x.x\nserver_port = 7000\n\n[test_static_file]\ntype = tcp\nremote_port = 6000\nplugin = static_file\nplugin_local_path = /tmp/files\nplugin_strip_prefix = static\nplugin_http_user = abc\nplugin_http_passwd = abc\n\nVisit http://x.x.x.x:6000/static/ from your browser and specify correct user and password to view files in /tmp/files on the frpc machine.\n\nEnable HTTPS for local HTTP service\n\nStart frpc with configuration:\n\n# frpc.ini\n[common]\nserver_addr = x.x.x.x\nserver_port = 7000\n\n[test_https2http]\ntype = https\ncustom_domains = test.example.com\n\nplugin = https2http\nplugin_local_addr = 127.0.0.1:80\nplugin_crt_path = ./server.crt\nplugin_key_path = ./server.key\nplugin_host_header_rewrite = 127.0.0.1\nplugin_header_X-From-Where = frp\n\nVisit https://test.example.com.\n\nExpose your service privately\nSome services will be at risk if exposed directly to the public network. With STCP (secret TCP) mode, a preshared key is needed to access the service from another client.\nConfigure frps same as above.\n\nStart frpc on machine B with the following config. This example is for exposing the SSH service (port 22), and note the sk field for the preshared key, and that the remote_port field is removed here:\n\n# frpc.ini\n[common]\nserver_addr = x.x.x.x\nserver_port = 7000\n\n[secret_ssh]\ntype = stcp\nsk = abcdefg\nlocal_ip = 127.0.0.1\nlocal_port = 22\n\nStart another frpc (typically on another machine C) with the following config to access the SSH service with a security key (sk field):\n\n# frpc.ini\n[common]\nserver_addr = x.x.x.x\nserver_port = 7000\n\n[secret_ssh_visitor]\ntype = stcp\nrole = visitor\nserver_name = secret_ssh\nsk = abcdefg\nbind_addr = 127.0.0.1\nbind_port = 6000\n\nOn machine C, connect to SSH on machine B, using this command:\n\nssh -oPort=6000 127.0.0.1\nP2P Mode\nxtcp is designed for transmitting large amounts of data directly between clients. A frps server is still needed, as P2P here only refers the actual data transmission.\nNote it can't penetrate all types of NAT devices. You might want to fallback to stcp if xtcp doesn't work.\n\nIn frps.ini configure a UDP port for xtcp:\n\n# frps.ini\nbind_udp_port = 7001\n\nStart frpc on machine B, expose the SSH port. Note that remote_port field is removed:\n\n# frpc.ini\n[common]\nserver_addr = x.x.x.x\nserver_port = 7000\n\n[p2p_ssh]\ntype = xtcp\nsk = abcdefg\nlocal_ip = 127.0.0.1\nlocal_port = 22\n\nStart another frpc (typically on another machine C) with the config to connect to SSH using P2P mode:\n\n# frpc.ini\n[common]\nserver_addr = x.x.x.x\nserver_port = 7000\n\n[p2p_ssh_visitor]\ntype = xtcp\nrole = visitor\nserver_name = p2p_ssh\nsk = abcdefg\nbind_addr = 127.0.0.1\nbind_port = 6000\n\nOn machine C, connect to SSH on machine B, using this command:\n\nssh -oPort=6000 127.0.0.1\nFeatures\nConfiguration Files\nRead the full example configuration files to find out even more features not described here.\nFull configuration file for frps (Server)\nFull configuration file for frpc (Client)\nUsing Environment Variables\nEnvironment variables can be referenced in the configuration file, using Go's standard format:\n# frpc.ini\n[common]\nserver_addr = {{ .Envs.FRP_SERVER_ADDR }}\nserver_port = 7000\n\n[ssh]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 22\nremote_port = {{ .Envs.FRP_SSH_REMOTE_PORT }}\nWith the config above, variables can be passed into frpc program like this:\nexport FRP_SERVER_ADDR=\"x.x.x.x\"\nexport FRP_SSH_REMOTE_PORT=\"6000\"\n./frpc -c ./frpc.ini\n\nfrpc will render configuration file template using OS environment variables. Remember to prefix your reference with .Envs.\nDashboard\nCheck frp's status and proxies' statistics information by Dashboard.\nConfigure a port for dashboard to enable this feature:\n[common]\ndashboard_port = 7500\n# dashboard's username and password are both optional\uff0cif not set, default is admin.\ndashboard_user = admin\ndashboard_pwd = admin\nThen visit http://[server_addr]:7500 to see the dashboard, with username and password both being admin by default.\n\nAdmin UI\nThe Admin UI helps you check and manage frpc's configuration.\nConfigure an address for admin UI to enable this feature:\n[common]\nadmin_addr = 127.0.0.1\nadmin_port = 7400\nadmin_user = admin\nadmin_pwd = admin\nThen visit http://127.0.0.1:7400 to see admin UI, with username and password both being admin by default.\nAuthenticating the Client\nAlways use the same token in the [common] section in frps.ini and frpc.ini.\nEncryption and Compression\nThe features are off by default. You can turn on encryption and/or compression:\n# frpc.ini\n[ssh]\ntype = tcp\nlocal_port = 22\nremote_port = 6000\nuse_encryption = true\nuse_compression = true\nTLS\nfrp supports the TLS protocol between frpc and frps since v0.25.0.\nConfig tls_enable = true in the [common] section to frpc.ini to enable this feature.\nFor port multiplexing, frp sends a first byte 0x17 to dial a TLS connection.\nHot-Reloading frpc configuration\nThe admin_addr and admin_port fields are required for enabling HTTP API:\n# frpc.ini\n[common]\nadmin_addr = 127.0.0.1\nadmin_port = 7400\nThen run command frpc reload -c ./frpc.ini and wait for about 10 seconds to let frpc create or update or delete proxies.\nNote that parameters in [common] section won't be modified except 'start'.\nGet proxy status from client\nUse frpc status -c ./frpc.ini to get status of all proxies. The admin_addr and admin_port fields are required for enabling HTTP API.\nOnly allowing certain ports on the server\nallow_ports in frps.ini is used to avoid abuse of ports:\n# frps.ini\n[common]\nallow_ports = 2000-3000,3001,3003,4000-50000\nallow_ports consists of specific ports or port ranges (lowest port number, dash -, highest port number), separated by comma ,.\nPort Reuse\nvhost_http_port and vhost_https_port in frps can use same port with bind_port. frps will detect the connection's protocol and handle it correspondingly.\nWe would like to try to allow multiple proxies bind a same remote port with different protocols in the future.\nBandwidth Limit\nFor Each Proxy\n# frpc.ini\n[ssh]\ntype = tcp\nlocal_port = 22\nremote_port = 6000\nbandwidth_limit = 1MB\nSet bandwidth_limit in each proxy's configure to enable this feature. Supported units are MB and KB.\nTCP Stream Multiplexing\nfrp supports tcp stream multiplexing since v0.10.0 like HTTP2 Multiplexing, in which case all logic connections to the same frpc are multiplexed into the same TCP connection.\nYou can disable this feature by modify frps.ini and frpc.ini:\n# frps.ini and frpc.ini, must be same\n[common]\ntcp_mux = false\nSupport KCP Protocol\nKCP is a fast and reliable protocol that can achieve the transmission effect of a reduction of the average latency by 30% to 40% and reduction of the maximum delay by a factor of three, at the cost of 10% to 20% more bandwidth wasted than TCP.\nKCP mode uses UDP as the underlying transport. Using KCP in frp:\n\nEnable KCP in frps:\n\n# frps.ini\n[common]\nbind_port = 7000\n# Specify a UDP port for KCP.\nkcp_bind_port = 7000\nThe kcp_bind_port number can be the same number as bind_port, since bind_port field specifies a TCP port.\n\nConfigure frpc.ini to use KCP to connect to frps:\n\n# frpc.ini\n[common]\nserver_addr = x.x.x.x\n# Same as the 'kcp_bind_port' in frps.ini\nserver_port = 7000\nprotocol = kcp\nConnection Pooling\nBy default, frps creates a new frpc connection to the backend service upon a user request. With connection pooling, frps keeps a certain number of pre-established connections, reducing the time needed to establish a connection.\nThis feature is suitable for a large number of short connections.\n\nConfigure the limit of pool count each proxy can use in frps.ini:\n\n# frps.ini\n[common]\nmax_pool_count = 5\n\nEnable and specify the number of connection pool:\n\n# frpc.ini\n[common]\npool_count = 1\nLoad balancing\nLoad balancing is supported by group.\nThis feature is only available for types tcp and http now.\n# frpc.ini\n[test1]\ntype = tcp\nlocal_port = 8080\nremote_port = 80\ngroup = web\ngroup_key = 123\n\n[test2]\ntype = tcp\nlocal_port = 8081\nremote_port = 80\ngroup = web\ngroup_key = 123\ngroup_key is used for authentication.\nConnections to port 80 will be dispatched to proxies in the same group randomly.\nFor type tcp, remote_port in the same group should be the same.\nFor type http, custom_domains, subdomain, locations should be the same.\nService Health Check\nHealth check feature can help you achieve high availability with load balancing.\nAdd health_check_type = tcp or health_check_type = http to enable health check.\nWith health check type tcp, the service port will be pinged (TCPing):\n# frpc.ini\n[test1]\ntype = tcp\nlocal_port = 22\nremote_port = 6000\n# Enable TCP health check\nhealth_check_type = tcp\n# TCPing timeout seconds\nhealth_check_timeout_s = 3\n# If health check failed 3 times in a row, the proxy will be removed from frps\nhealth_check_max_failed = 3\n# A health check every 10 seconds\nhealth_check_interval_s = 10\nWith health check type http, an HTTP request will be sent to the service and an HTTP 2xx OK response is expected:\n# frpc.ini\n[web]\ntype = http\nlocal_ip = 127.0.0.1\nlocal_port = 80\ncustom_domains = test.example.com\n# Enable HTTP health check\nhealth_check_type = http\n# frpc will send a GET request to '/status'\n# and expect an HTTP 2xx OK response\nhealth_check_url = /status\nhealth_check_timeout_s = 3\nhealth_check_max_failed = 3\nhealth_check_interval_s = 10\nRewriting the HTTP Host Header\nBy default frp does not modify the tunneled HTTP requests at all as it's a byte-for-byte copy.\nHowever, speaking of web servers and HTTP requests, your web server might rely on the Host HTTP header to determine the website to be accessed. frp can rewrite the Host header when forwarding the HTTP requests, with the host_header_rewrite field:\n# frpc.ini\n[web]\ntype = http\nlocal_port = 80\ncustom_domains = test.example.com\nhost_header_rewrite = dev.example.com\nThe HTTP request will have the the Host header rewritten to Host: dev.example.com when it reaches the actual web server, although the request from the browser probably has Host: test.example.com.\nSetting other HTTP Headers\nSimilar to Host, You can override other HTTP request headers with proxy type http.\n# frpc.ini\n[web]\ntype = http\nlocal_port = 80\ncustom_domains = test.example.com\nhost_header_rewrite = dev.example.com\nheader_X-From-Where = frp\nNote that parameter(s) prefixed with header_ will be added to HTTP request headers.\nIn this example, it will set header X-From-Where: frp in the HTTP request.\nGet Real IP\nHTTP X-Forwarded-For\nThis feature is for http proxy only.\nYou can get user's real IP from HTTP request headers X-Forwarded-For and X-Real-IP.\nProxy Protocol\nfrp supports Proxy Protocol to send user's real IP to local services. It support all types except UDP.\nHere is an example for https service:\n# frpc.ini\n[web]\ntype = https\nlocal_port = 443\ncustom_domains = test.example.com\n\n# now v1 and v2 are supported\nproxy_protocol_version = v2\nYou can enable Proxy Protocol support in nginx to expose user's real IP in HTTP header X-Real-IP, and then read X-Real-IP header in your web service for the real IP.\nRequire HTTP Basic auth (password) for web services\nAnyone who can guess your tunnel URL can access your local web server unless you protect it with a password.\nThis enforces HTTP Basic Auth on all requests with the username and password specified in frpc's configure file.\nIt can only be enabled when proxy type is http.\n# frpc.ini\n[web]\ntype = http\nlocal_port = 80\ncustom_domains = test.example.com\nhttp_user = abc\nhttp_pwd = abc\nVisit http://test.example.com in the browser and now you are prompted to enter the username and password.\nCustom subdomain names\nIt is convenient to use subdomain configure for http and https types when many people share one frps server.\n# frps.ini\nsubdomain_host = frps.com\nResolve *.frps.com to the frps server's IP. This is usually called a Wildcard DNS record.\n# frpc.ini\n[web]\ntype = http\nlocal_port = 80\nsubdomain = test\nNow you can visit your web service on test.frps.com.\nNote that if subdomain_host is not empty, custom_domains should not be the subdomain of subdomain_host.\nURL routing\nfrp supports forwarding HTTP requests to different backend web services by url routing.\nlocations specifies the prefix of URL used for routing. frps first searches for the most specific prefix location given by literal strings regardless of the listed order.\n# frpc.ini\n[web01]\ntype = http\nlocal_port = 80\ncustom_domains = web.example.com\nlocations = /\n\n[web02]\ntype = http\nlocal_port = 81\ncustom_domains = web.example.com\nlocations = /news,/about\nHTTP requests with URL prefix /news or /about will be forwarded to web02 and other requests to web01.\nConnecting to frps via HTTP PROXY\nfrpc can connect to frps using HTTP proxy if you set OS environment variable HTTP_PROXY, or if http_proxy is set in frpc.ini file.\nIt only works when protocol is tcp.\n# frpc.ini\n[common]\nserver_addr = x.x.x.x\nserver_port = 7000\nhttp_proxy = http://user:pwd@192.168.1.128:8080\nRange ports mapping\nProxy with names that start with range: will support mapping range ports.\n# frpc.ini\n[range:test_tcp]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 6000-6006,6007\nremote_port = 6000-6006,6007\nfrpc will generate 8 proxies like test_tcp_0, test_tcp_1, ..., test_tcp_7.\nPlugins\nfrpc only forwards requests to local TCP or UDP ports by default.\nPlugins are used for providing rich features. There are built-in plugins such as unix_domain_socket, http_proxy, socks5, static_file and you can see example usage.\nSpecify which plugin to use with the plugin parameter. Configuration parameters of plugin should be started with plugin_. local_ip and local_port are not used for plugin.\nUsing plugin http_proxy:\n# frpc.ini\n[http_proxy]\ntype = tcp\nremote_port = 6000\nplugin = http_proxy\nplugin_http_user = abc\nplugin_http_passwd = abc\nplugin_http_user and plugin_http_passwd are configuration parameters used in http_proxy plugin.\nDevelopment Plan\n\nLog HTTP request information in frps.\n\nContributing\nInterested in getting involved? We would like to help you!\n\nTake a look at our issues list and consider sending a Pull Request to dev branch.\nIf you want to add a new feature, please create an issue first to describe the new feature, as well as the implementation approach. Once a proposal is accepted, create an implementation of the new features and submit it as a pull request.\nSorry for my poor English. Improvements for this document are welcome, even some typo fixes.\nIf you have great ideas, send an email to fatedier@gmail.com.\n\nNote: We prefer you to give your advise in issues, so others with a same question can search it quickly and we don't need to answer them repeatedly.\nDonation\nIf frp helps you a lot, you can support us by:\nfrp QQ group: 606194980\nAliPay\n\nWechat Pay\n\nPaypal\nDonate money by paypal to my account fatedier@gmail.com.\n\n"}, {"repo": "adobe/brackets", "language": "JavaScript", "readme": "\nWelcome to Brackets! \nBrackets is a modern open-source code editor for HTML, CSS\nand JavaScript that's built in HTML, CSS and JavaScript.\nWhat makes Brackets different from other web code editors?\n\nTools shouldn't get in your way. Instead of cluttering up your coding\nenvironment with lots of panels and icons, the Quick Edit UI in Brackets puts\ncontext-specific code and tools inline.\nBrackets is in sync with your browser. With Live Preview, Brackets\nworks directly with your browser to push code edits instantly and jump\nback and forth between your real source code and the browser view.\nDo it yourself. Because Brackets is open source, and built with HTML, CSS\nand JavaScript, you can help build the best code editor for the web.\n\nBrackets may have reached version 1, but we're not stopping there. We have many feature ideas on our\ntrello board that we're anxious to add and other\ninnovative web development workflows that we're planning to build into Brackets.\nSo take Brackets out for a spin and let us know how we can make it your favorite editor.\nYou can see some\nscreenshots of Brackets\non the wiki, intro videos on YouTube, and news on the Brackets blog.\nHow to install and run Brackets\nDownload\nInstallers for the latest stable build for Mac, Windows and Linux (Debian/Ubuntu) can be downloaded here.\nUsage\nBy default, Brackets opens a folder containing some simple \"Getting Started\" content.\nYou can choose a different folder to edit using File > Open Folder.\nMost of Brackets should be pretty self-explanatory, but for information on how\nto use its unique features, like Quick Edit and Live Preview, please read\nHow to Use Brackets.\nAlso, see the release notes\nfor a list of new features and known issues in each build.\nIn addition to the core features built into Brackets, there is a large and growing\ncommunity of developers building extensions that add all sorts of useful functionality.\nSee the Brackets Extension Registry\nfor a list of available extensions. For installation instructions,\nsee the extensions wiki page.\nNeed help?\nHaving problems starting Brackets the first time, or not sure how to use Brackets?  Please\nreview Troubleshooting, which helps\nyou to fix common problems and find extra help if needed.\nHelping Brackets\nI found a bug!\nIf you found a repeatable bug, and troubleshooting\ntips didn't help, then be sure to search existing issues first.\nInclude steps to consistently reproduce the problem, actual vs. expected results, screenshots, and your OS and\nBrackets version number. Disable all extensions to verify the issue is a core Brackets bug.\nRead more guidelines for filing good bugs.\nI have a new suggestion, but don't know how to program!\nFor feature requests please first check our Trello board to\nsee if it's already there; you can upvote it if so. If not, feel free to file it as an issue as above; we'll\nmove it to the feature backlog for you.\nI want to help with the code!\nAwesome! There are lots of ways you can help. First read\nCONTRIBUTING.md,\nthen learn how to pull the repo and hack on Brackets.\nThe text editor inside Brackets is based on\nCodeMirror\u2014thanks to Marijn for\ntaking our pull requests, implementing feature requests and fixing bugs! See\nNotes on CodeMirror\nfor info on how we're using CodeMirror.\nAlthough Brackets is built in HTML/CSS/JS, it currently runs as a desktop\napplication in a thin native shell, so that it can access your local files.\n(If you just try to open the index.html file in a browser, it won't work yet.)\nThe native shell for Brackets lives in a separate repo,\nadobe/brackets-shell.\nI want to keep track of how Brackets is doing!\nNot sure you needed the exclamation point there, but we like your enthusiasm.\nWhat's Brackets working on next?\n\nIn our feature backlog, the columns to the right\n(starting from \"Development\") list the features that we're currently working on.\n\"Ready\" shows what we'll be working on next.\nWatch our GitHub activity stream.\nWatch our Waffle Kanban board: Work items in  are next. The entire development process is outlined in the Developer Guide.\n\nContact info\n\nE-mail: admin@brackets.io\nSlack: Brackets on Slack (You can join by sending a mail to admin@brackets.io with the subject line slack registration request specifying the email addresses you would like to register).\nDevelopers mailing list: http://groups.google.com/group/brackets-dev\nTwitter: @brackets\nBlog: http://blog.brackets.io/\nIRC: #brackets on freenode\n\n\nPlease note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms.\n\n"}, {"repo": "git/git", "language": "C", "readme": "\n\nGit - fast, scalable, distributed revision control system\nGit is a fast, scalable, distributed revision control system with an\nunusually rich command set that provides both high-level operations\nand full access to internals.\nGit is an Open Source project covered by the GNU General Public\nLicense version 2 (some parts of it are under different licenses,\ncompatible with the GPLv2). It was originally written by Linus\nTorvalds with help of a group of hackers around the net.\nPlease read the file INSTALL for installation instructions.\nMany Git online resources are accessible from https://git-scm.com/\nincluding full documentation and Git related tools.\nSee Documentation/gittutorial.txt to get started, then see\nDocumentation/giteveryday.txt for a useful minimum set of commands, and\nDocumentation/git-<commandname>.txt for documentation of each command.\nIf git has been correctly installed, then the tutorial can also be\nread with man gittutorial or git help tutorial, and the\ndocumentation of each command with man git-<commandname> or git help <commandname>.\nCVS users may also want to read Documentation/gitcvs-migration.txt\n(man gitcvs-migration or git help cvs-migration if git is\ninstalled).\nThe user discussion and development of Git take place on the Git\nmailing list -- everyone is welcome to post bug reports, feature\nrequests, comments and patches to git@vger.kernel.org (read\nDocumentation/SubmittingPatches for instructions on patch submission).\nTo subscribe to the list, send an email with just \"subscribe git\" in\nthe body to majordomo@vger.kernel.org. The mailing list archives are\navailable at https://lore.kernel.org/git/,\nhttp://marc.info/?l=git and other archival sites.\nIssues which are security relevant should be disclosed privately to\nthe Git Security mailing list git-security@googlegroups.com.\nThe maintainer frequently sends the \"What's cooking\" reports that\nlist the current status of various development topics to the mailing\nlist.  The discussion following them give a good reference for\nproject status, development direction and remaining tasks.\nThe name \"git\" was given by Linus Torvalds when he wrote the very\nfirst version. He described the tool as \"the stupid content tracker\"\nand the name as (depending on your mood):\n\nrandom three-letter combination that is pronounceable, and not\nactually used by any common UNIX command.  The fact that it is a\nmispronunciation of \"get\" may or may not be relevant.\nstupid. contemptible and despicable. simple. Take your pick from the\ndictionary of slang.\n\"global information tracker\": you're in a good mood, and it actually\nworks for you. Angels sing, and a light suddenly fills the room.\n\"goddamn idiotic truckload of sh*t\": when it breaks\n\n\n"}, {"repo": "leonardomso/33-js-concepts", "language": "JavaScript", "readme": "\n\n\n\n\n\n  33 Concepts Every JavaScript Developer Should Know\n  \n\n\nIntroduction\nThis repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by Stephen Curtis and you can read it here.\n\ud83d\ude80 Considered by GitHub as one of the top open source projects of 2018!\nCommunity\nFeel free to submit a PR adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so.\nAll the translations for this repo will be listed below:\n\nChinese \u2014 Re Tian\nPortuguese-BR \u2014 Tiago Boeing\nKorean \u2014 Suin Lee\nSpanish \u2014 Adonis Mendoza\nTurkish \u2014 \u0130lker Demir\nRussian \u2014 Mihail Gumennii\nTi\u1ebfng Vi\u1ec7t \u2014 Nguy\u1ec5n Tr\u1ea7n Chung\nPolish \u2014 Dawid Lipinski\nPersian \u2014 Majid Alavizadeh\nIndonesian \u2014 Rijdzuan Sampoerna\nFrench \u2014 Robin M\u00e9tral\nHindi \u2014 Vikas Chauhan\nGreek \u2014 Dimitris Zarachanis\nJapanese \u2014 oimo23\nGerman \u2014 burhannn\nUkrainian \u2014 Andrew Savetchuk\nSinhala \u2014 Udaya Shamendra\nItalian - Gianluca Fiore\n\n\nTable of Contents\n\nCall Stack\nPrimitive Types\nValue Types and Reference Types\nImplicit, Explicit, Nominal, Structuring and Duck Typing\n== vs === vs typeof\nFunction Scope, Block Scope and Lexical Scope\nExpression vs Statement\nIIFE, Modules and Namespaces\nMessage Queue and Event Loop\nsetTimeout, setInterval and requestAnimationFrame\nJavaScript Engines\nBitwise Operators, Type Arrays and Array Buffers\nDOM and Layout Trees\nFactories and Classes\nthis, call, apply and bind\nnew, Constructor, instanceof and Instances\nPrototype Inheritance and Prototype Chain\nObject.create and Object.assign\nmap, reduce, filter\nPure Functions, Side Effects and State Mutation\nClosures\nHigh Order Functions\nRecursion\nCollections and Generators\nPromises\nasync/await\nData Structures\nExpensive Operation and Big O Notation\nAlgorithms\nInheritance, Polymorphism and Code Reuse\nDesign Patterns\nPartial Applications, Currying, Compose and Pipe\nClean Code\n\n\n1. Call Stack\nArticles\n\n\ud83d\udcdc Understanding Javascript Call Stack, Event Loops \u2014 Gaurav Pandvia\n\ud83d\udcdc Understanding the JavaScript Call Stack \u2014 Charles Freeborn\n\ud83d\udcdc Javascript: What Is The Execution Context? What Is The Call Stack? \u2014 Valentino Gagliardi\n\ud83d\udcdc What is the JS Event Loop and Call Stack? \u2014 Jess Telford\n\ud83d\udcdc Call Stack \u2014 MDN\n\ud83d\udcdc Understanding Execution Context and Execution Stack in Javascript \u2014 Sukhjinder Arora\n\ud83d\udcdc How JavaScript Works: An Overview of the Engine, the Runtime, and the Call Stack \u2014 Alexander Zlatkov\n\ud83d\udcdc The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript \u2014 Tyler McGinnis\n\nVideos\n\n\ud83c\udfa5 Javascript: the Call Stack explained \u2014 Coding Blocks India\n\ud83c\udfa5 The JS Call Stack Explained In 9 Minutes \u2014 Colt Steele\n\ud83c\udfa5 JavaScript Execution Stack \u2014 Codecademy\n\ud83c\udfa5 What is the Call Stack? \u2014 Eric Traub\n\ud83c\udfa5 The Call Stack \u2014 Kevin Drumm\n\ud83c\udfa5 Understanding JavaScript Execution \u2014 Codesmith\n\ud83c\udfa5 Call Stack & Event Loop \u2014 movies com\n\ud83c\udfa5 The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript \u2014 Tyler McGinnis\n\ud83c\udfa5 What the heck is the event loop anyway? \u2014 Philip Roberts\n\ud83c\udfa5 La PILA DE EJECUCI\u00d3N (Call Stack) de JavaScript \u2014 La Cocina del C\u00f3digo\n\n\u2b06 Back to Top\n\n2. Primitive Types\nArticles\n\n\ud83d\udcdc How numbers are encoded in JavaScript \u2014 Dr. Axel Rauschmayer\n\ud83d\udcdc What You Need to Know About JavaScript Number Type \u2014 Max Wizard K\n\ud83d\udcdc What Every JavaScript Developer Should Know About Floating Point Numbers \u2014 Chewxy\n\ud83d\udcdc The Secret Life of JavaScript Primitives \u2014 Angus Croll\n\ud83d\udcdc Primitive Types \u2014 Flow\n\ud83d\udcdc (Not) Everything in JavaScript is an Object \u2014 Daniel Li\n\ud83d\udcdc JavaScript data types and data structures \u2014 MDN\n\ud83d\udcdc Diving Deeper in JavaScripts Objects \u2014 Arfat Salman\n\ud83d\udcdc The differences between Object.freeze() vs Const in JavaScript \u2014 Bolaji Ayodeji\n\nVideos\n\n\ud83c\udfa5 JavaScript Reference vs Primitive Types \u2014 Academind\n\ud83c\udfa5 JavaScript Primitive Types \u2014 Simon Sez IT\n\ud83c\udfa5 Value Types and Reference Types in JavaScript \u2014 Programming with Mosh\n\ud83c\udfa5 JavaScript Primitive Data Types \u2014 Avelx\n\ud83c\udfa5 Everything you never wanted to know about JavaScript numbers \u2014 Bartek Szopka\n\ud83c\udfa5 What are variables in Javascript? \u2014 JS For Everyone\n\ud83c\udfa5 TIPOS DE DATOS PRIMITIVOS en JAVASCRIPT - La Cocina del C\u00f3digo\n\n\u2b06 Back to Top\n\n3. Value Types and Reference Types\nArticles\n\n\ud83d\udcdc Explaining Value vs. Reference in Javascript \u2014 Arnav Aggarwal\n\ud83d\udcdc Understand Value and Reference Types in JavaScript \u2014 Zsolt Nagy\n\ud83d\udcdc Primitive Types & Reference Types in JavaScript \u2014 Bran van der Meer\n\ud83d\udcdc Value Types, Reference Types and Scope in JavaScript \u2014 Ben Aston\n\ud83d\udcdc Back to roots: JavaScript Value vs Reference \u2014 Miro Koczka\n\ud83d\udcdc Grasp \u201cBy Value\u201d and \u201cBy Reference\u201d in JavaScript \u2014 L\u00e9na Faure\n\ud83d\udcdc JavaScript Reference and Copy Variables \u2014 V\u00edtor Capretz\n\ud83d\udcdc JavaScript Primitive vs Reference Values\n\ud83d\udcdc JavaScript by Reference vs. by Value \u2014 nrabinowitz\n\ud83d\udcdc JavaScript Interview Prep: Primitive vs. Reference Types \u2014 Mike Cronin\n\nVideos\n\n\ud83c\udfa5 Javascript Pass by Value vs Pass by Reference \u2014 techsith\n\ud83c\udfa5 JavaScript Value vs Reference Types \u2014 Programming with Mosh\n\n\u2b06 Back to Top\n\n4. Implicit, Explicit, Nominal, Structuring and Duck Typing\nArticles\n\n\ud83d\udcdc What you need to know about Javascript's Implicit Coercion \u2014 Promise Tochi\n\ud83d\udcdc JavaScript Type Coercion Explained \u2014 Alexey Samoshkin\n\ud83d\udcdc Javascript Coercion Explained \u2014 Ben Garrison\n\ud83d\udcdc What exactly is Type Coercion in Javascript? - Stack Overflow\n\ud83d\udcdc You Don't Know JS: Types & Grammar [Book] \u2014 Kyle Simpson\n\ud83d\udcdc Type Coercion in JavaScript, and why everyone gets it wrong.\n\nVideos\n\n\ud83c\udfa5 == ? === ??? ...#@^% - Shirmung Bielefeld\n\ud83c\udfa5 Coercion in Javascript - Hitesh Choudhary\n\ud83c\udfa5 JavaScript Questions: What is Coercion? - Steven Hancock\n\ud83c\udfa5 Typing: Static vs Dynamic, Weak vs. Strong - Codexpanse\n\n\u2b06 Back to Top\n\n5. == vs === vs typeof\nArticles\n\n\ud83d\udcdc JavaScript Double Equals vs. Triple Equals \u2014 Brandon Morelli\n\ud83d\udcdc Should I use === or == equality comparison operator in JavaScript? \u2014 Panu Pitkamaki\n\ud83d\udcdc == vs === JavaScript: Double Equals and Coercion \u2014 AJ Meyghani\n\ud83d\udcdc Why Use the Triple-Equals Operator in JavaScript? \u2014 Louis Lazaris\n\ud83d\udcdc What is the difference between == and === in JavaScript? \u2014 Craig Buckler\n\ud83d\udcdc Why javascript's typeof always return \"object\"? \u2014 Stack Overflow\n\ud83d\udcdc Checking Types in Javascript \u2014 Toby Ho\n\ud83d\udcdc How to better check data types in JavaScript \u2014 Webbjocke\n\ud83d\udcdc Checking for the Absence of a Value in JavaScript \u2014 Tomer Aberbach\n\nVideos\n\n\ud83c\udfa5 JavaScript - The typeof operator \u2014 Java Brains\n\ud83c\udfa5 Javascript typeof operator \u2014 DevDelight\n\n\u2b06 Back to Top\n\n6. Function Scope, Block Scope and Lexical Scope\nArticles\n\n\ud83d\udcdc You Don't Know JS: Scope & Closures [Book] \u2014 Kyle Simpson\n\ud83d\udcdc JavaScript Functions\u200a\u2014\u200aUnderstanding The Basics \u2014 Brandon Morelli\n\ud83d\udcdc The battle between Function Scope and Block Scope \u2014 Marius Herring\n\ud83d\udcdc Emulating Block Scope in JavaScript \u2014 Josh Clanton\n\ud83d\udcdc The Difference Between Function and Block Scope in JavaScript \u2014 Joseph Cardillo\n\ud83d\udcdc Function Scopes and Block Scopes in JavaScript \u2014 Samer Buna\n\ud83d\udcdc Understanding Scope and Context in JavaScript | Ryan Morr\n\ud83d\udcdc JavaScript Scope and Closures \u2014 Zell Liew\n\ud83d\udcdc Understanding Scope in JavaScript \u2014 Wissam Abirached\n\ud83d\udcdc Speaking JavaScript - Variables: Scopes, Environments, and Closures \u2014 Dr. Axel Rauschmayer\n\ud83d\udcdc Understanding Scope in JavaScript \u2015 Hammad Ahmed\n\ud83d\udcdc When to use a function declaration vs. a function expression \u2015 Amber Wilkie\n\ud83d\udcdc A JavaScript Fundamentals Cheat Sheet: Scope, Context, and \u201cthis\u201d \u2015 Alexandra Fren\n\nVideos\n\n\ud83c\udfa5 What Makes Javascript Weird ... and Awesome pt. 4 \u2014 LearnCode.academy\n\ud83c\udfa5 Variable Scope in JavaScript \u2014 Kirupa Chinnathambi\n\ud83c\udfa5 JavaScript Block Scope and Function Scope \u2014 mmtuts\n\ud83c\udfa5 What the Heck is Lexical Scope? \u2014 NWCalvank\n\n\u2b06 Back to Top\n\n7. Expression vs Statement\nArticles\n\n\ud83d\udcdc All you need to know about Javascript's Expressions, Statements and Expression Statements \u2014 Promise Tochi\n\ud83d\udcdc Function Expressions vs Function Declarations \u2014 Paul Wilkins\n\ud83d\udcdc JavaScript Function \u2014 Declaration vs Expression \u2014 Ravi Roshan\n\ud83d\udcdc Function Declarations vs. Function Expressions \u2014 Mandeep Singh\n\ud83d\udcdc Function Declarations vs. Function Expressions \u2014 Anguls Croll\n\nVideos\n\n\ud83c\udfa5 Expressions vs. Statements in JavaScript \u2014 Hexlet\n\ud83c\udfa5 JavaScript - Expression vs. Statement \u2014 WebTunings\n\ud83c\udfa5 Function Statements and Function Expressions \u2014 Codeacademy\n\n\u2b06 Back to Top\n\n8. IIFE, Modules and Namespaces\nArticles\n\n\ud83d\udcdc Mastering Immediately-Invoked Function Expressions \u2015 Chandra Gundamaraju\n\ud83d\udcdc Do ES6 Modules make the case of IIFEs obsolete?\n\ud83d\udcdc A 10 minute primer to JavaScript modules, module formats, module loaders and module bundlers \u2015 Jurgen Van de Moere\n\ud83d\udcdc Modules \u2015 Exploring JS\n\ud83d\udcdc ES modules: A cartoon deep-dive \u2014 Lin Clark\n\ud83d\udcdc Understanding ES6 Modules \u2014 Craig Buckler\n\ud83d\udcdc An overview of ES6 Modules in JavaScript \u2014 Brent Graham\n\ud83d\udcdc ES6 Modules in Depth \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc ES6 modules, Node.js and the Michael Jackson Solution \u2014 Alberto Gimeno\n\ud83d\udcdc JavaScript Modules: A Beginner\u2019s Guide \u2014 Preethi Kasireddy\n\ud83d\udcdc Using JavaScript modules on the web\n\ud83d\udcdc JavaScript Modules: From IIFEs to CommonJS to ES6 Modules \u2014 Tyler McGinnis\n\nVideos\n\n\ud83c\udfa5 Immediately Invoked Function Expression - Beau teaches JavaScript \u2014 freeCodeCamp\n\ud83c\udfa5 Understanding JavaScript IIFE\n\ud83c\udfa5 JavaScript Modules: ES6 Import and Export \u2014 Kyle Robinson\n\ud83c\udfa5 ES6 - Modules \u2014 Ryan Christiani\n\ud83c\udfa5 ES6 Modules in the Real World \u2014 Sam Thorogood\n\ud83c\udfa5 ES6 Modules \u2014 TempleCoding\n\n\u2b06 Back to Top\n\n9. Message Queue and Event Loop\nArticles\n\n\ud83d\udcdc JavaScript Event Loop Explained \u2014 Anoop Raveendran\n\ud83d\udcdc The JavaScript Event Loop: Explained \u2014 Erin Sweson-Healey\n\ud83d\udcdc What is the Event Loop in Javascript \u2014 WP Tutor.io\n\ud83d\udcdc Understanding JS: The Event Loop \u2014 Alexander Kondov\n\ud83d\udcdc Understanding the JavaScript Event Loop \u2014 Ashish Gupta\n\ud83d\udcdc Event Loop in Javascript \u2014 Manjula Dube\n\ud83d\udcdc The JavaScript Event Loop \u2014 Flavio Copes\n\ud83d\udcdc How JavaScript works: Event loop \u2014 Alexander Zlatkov\n\ud83d\udcdc Tasks, microtasks, queues and schedules \u2014 Jake Archibald\n\ud83d\udcdc Visualising the JavaScript Event Loop with a Pizza Restaurant analogy \u2014 Priyansh Jain\n\nVideos\n\n\ud83c\udfa5 What the heck is the event loop anyway? | JSConf EU \u2014 Philip Roberts\n\ud83c\udfa5 JavaScript Event Loop \u2014 ComScience Simplified\n\ud83c\udfa5 I'm stuck in an Event Loop \u2014 Philip Roberts\n\ud83c\udfa5 In The Loop - Jake Archibald | JSConf.Asia 2018\n\ud83c\udfa5 Desmitificando el Event Loop (Spanish)\n\n\u2b06 Back to Top\n\n10. setTimeout, setInterval and requestAnimationFrame\nArticles\n\n\ud83d\udcdc setTimeout and setInterval \u2014 JavaScript.Info\n\ud83d\udcdc Why not to use setInterval \u2014 Akanksha Sharma\n\ud83d\udcdc setTimeout VS setInterval \u2014 Develoger\n\ud83d\udcdc Using requestAnimationFrame \u2014 Chris Coyier\n\ud83d\udcdc Understanding JavaScript's requestAnimationFrame() \u2014 JavaScript Kit\n\ud83d\udcdc Handling time intervals in JavaScript - Amit Merchant\n\nVideos\n\n\ud83c\udfa5 Javascript: How setTimeout and setInterval works \u2014 Coding Blocks India\n\ud83c\udfa5 setTimeout and setInterval in JavaScript \u2014 techsith\n\ud83c\udfa5 JavaScript Timers \u2014 Steve Griffith\n\ud83c\udfa5 JavaScript setTimeout, setInterval & clearInterval \u2014 DoingITeasyChannel\n\ud83c\udfa5 JavaScript setTimeOut and setInterval Explained \u2014 Theodore Anderson\n\n\u2b06 Back to Top\n\n11. JavaScript Engines\nArticles\n\n\ud83d\udcdc JavaScript Engines \u2014 Jen Looper\n\ud83d\udcdc Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code \u2014 DroidHead\n\ud83d\udcdc Understanding V8\u2019s Bytecode \u2014 Franziska Hinkelmann\n\ud83d\udcdc How the V8 engine works? \u2014 Thibault Laurens\n\ud83d\udcdc A Brief History of Google\u2019s V8 Javascript Engine \u2014 Clair Smith\n\ud83d\udcdc JavaScript essentials: why you should know how the engine works - Rainer Hahnekamp\n\ud83d\udcdc JavaScript engine fundamentals: Shapes and Inline Caches\n\ud83d\udcdc JavaScript engine fundamentals: optimizing prototypes\n\ud83d\udcdc How V8 optimizes array operations\n\nVideos\n\n\ud83c\udfa5 JavaScript Engines: The Good Parts\u2122 \u2014 Mathias Bynens & Benedikt Meurer\n\n\u2b06 Back to Top\n\n12. Bitwise Operators, Type Arrays and Array Buffers\nArticles\n\n\ud83d\udcdc Programming with JS: Bitwise Operations \u2014 Alexander Kondov\n\ud83d\udcdc Using JavaScript\u2019s Bitwise Operators in Real Life \u2014 ian m\n\ud83d\udcdc JavaScript Bitwise Operators \u2014 w3resource\n\ud83d\udcdc Bitwise Operators in Javascript \u2014 Joe Cha\n\ud83d\udcdc A Comprehensive Primer on Binary Computation and Bitwise Operators in Javascript \u2014 Paul Brown\n\ud83d\udcdc How can I understand Bitwise operation in JavaScript?\n\nVideos\n\n\ud83c\udfa5 JavaScript Bitwise Operators \u2014 Programming with Mosh\n\n\u2b06 Back to Top\n\n13. DOM and Layout Trees\nArticles\n\n\ud83d\udcdc How To Understand and Modify the DOM in JavaScript \u2014 Tania Rascia\n\ud83d\udcdc What\u2019s the Document Object Model, and why you should know how to use it \u2014 Leonardo Maldonado\n\ud83d\udcdc JavaScript DOM Tutorial with Example \u2014 Guru99\n\ud83d\udcdc What is the DOM? \u2014 Chris Coyier\n\ud83d\udcdc Traversing the DOM with JavaScript \u2014 Zell Liew\n\ud83d\udcdc Eloquent JavaScript [Book] \u2014 The Document Object Model\n\ud83d\udcdc DOM Tree\n\ud83d\udcdc How to traverse the DOM in Javascript \u2014 Vojislav Gruji\u0107\n\ud83d\udcdc Render Tree Construction \u2014 Ilya Grigorik\n\ud83d\udcdc What exactly is the DOM?\n\ud83d\udcdc A Vanilla JS Guide On Mastering the DOM \u2014 Brian Pak\n\nVideos\n\n\ud83c\udfa5 JavaScript DOM \u2014 The Net Ninja\n\ud83c\udfa5 JavaScript DOM Crash Course \u2014 Traversy Media\n\n\u2b06 Back to Top\n\n14. Factories and Classes\nArticles\n\n\ud83d\udcdc How To Use Classes in JavaScript \u2014 Tania Rascia\n\ud83d\udcdc Javascript Classes \u2014 Under The Hood \u2014 Majid\n\ud83d\udcdc ES6 Classes \u2014 Nathaniel Foster\n\ud83d\udcdc Better JavaScript with ES6, Pt. II: A Deep Dive into Classes \u2015 Peleke Sengstacke\n\ud83d\udcdc Understand the Factory Design Pattern in Plain JavaScript \u2014 Aditya Agarwal\n\ud83d\udcdc Factory Functions in JavaScript \u2014 Josh Miller\n\ud83d\udcdc The Factory Pattern in JS ES6 \u2014 SnstsDev\n\ud83d\udcdc Class vs Factory function: exploring the way forward \u2014 Cristi Salcescu\n\ud83d\udcdc How ES6 classes really work and how to build your own \u2014 Robert Grosse\n\ud83d\udcdc Understanding super in JavaScript\n\nVideos\n\n\ud83c\udfa5 JavaScript Factory Functions \u2014 Programming with Mosh\n\ud83c\udfa5 Factory Functions in JavaScript \u2014 Fun Fun Function\n\ud83c\udfa5 Javascript Tutorial Function Factories \u2014 Crypto Chan\n\n\u2b06 Back to Top\n\n15. this, call, apply and bind\nArticles\n\n\ud83d\udcdc How-to: call() , apply() and bind() in JavaScript \u2014 Niladri Sekhar Dutta\n\ud83d\udcdc JavaScript\u2019s Apply, Call, and Bind Methods are Essential for JavaScript Professionals \u2014 Richard Bovell\n\ud83d\udcdc WTF is this - Understanding the this keyword, call, apply, and bind in JavaScript \u2014 Tyler McGinnis\n\ud83d\udcdc Javascript: call(), apply() and bind() \u2014 Omer Goldberg\n\ud83d\udcdc The difference between call / apply / bind \u2014 Ivan Sifrim\n\ud83d\udcdc Mastering 'this' in JavaScript: Callbacks and bind(), apply(), call() \u2014 Michelle Gienow\n\ud83d\udcdc JavaScript\u2019s apply, call, and bind explained by hosting a cookout \u2014 Kevin Kononenko\n\ud83d\udcdc How AND When to use bind, call, and apply in Javascript \u2014 Eigen X\n\ud83d\udcdc JavaScript .bind() vs .apply() and .call() \u2014 Hack Sparrow\n\ud83d\udcdc call() \u2014 MDN\n\ud83d\udcdc bind() \u2014 MDN\n\ud83d\udcdc apply() \u2014 MDN\n\ud83d\udcdc What is 'this' in JavaScript? \u2014 Daniel Li\n\ud83d\udcdc Let me explain to you what is this. (Javascript) \u2014 Jason Yu\n\ud83d\udcdc Understanding the \u201cthis\u201d Keyword in JavaScript \u2014 Pavan\n\ud83d\udcdc How to understand the keyword this and context in JavaScript \u2014 Lukas Gisder-Dub\u00e9\n\ud83d\udcdc What the heck is this in Javascript? \u2014 Hridayesh Sharma\n\ud83d\udcdc This and Bind In Javascript \u2014 Brian Barbour\n\ud83d\udcdc 3 Techniques for Maintaining Your Sanity Using \"This\" in JavaScript \u2014 Carl\n\ud83d\udcdc 3Mastering the JavaScript \"this\" Keyword \u2014 Aakash Srivastav\n\nVideos\n\n\ud83c\udfa5 JavaScript call, apply and bind \u2014 techsith\n\ud83c\udfa5 JavaScript Practical Applications of Call, Apply and Bind functions\u2014 techsith\n\ud83c\udfa5 JavaScript (call, bind, apply) \u2014 curious aatma\n\ud83c\udfa5 Understanding Functions and 'this' In The World of ES2017 \u2014 Bryan Hughes\n\ud83c\udfa5 bind and this - Object Creation in JavaScript - FunFunFunction\n\ud83c\udfa5 JavaScript Practical Applications of Call, Apply and Bind functions \u2014 techsith\n\ud83c\udfa5 JS Function Methods call(), apply(), and bind() \u2014 Steve Griffith\n\n\u2b06 Back to Top\n\n16. new, Constructor, instanceof and Instances\nArticles\n\n\ud83d\udcdc JavaScript For Beginners: the \u2018new\u2019 operator \u2014 Brandon Morelli\n\ud83d\udcdc Let\u2019s demystify JavaScript\u2019s \u2018new\u2019 keyword \u2014 Cynthia Lee\n\ud83d\udcdc Constructor, operator \"new\" \u2014 JavaScript.Info\n\ud83d\udcdc Understanding JavaScript Constructors \u2014 Faraz Kelhini\n\ud83d\udcdc Use Constructor Functions \u2014 Openclassrooms\n\ud83d\udcdc Beyond typeof and instanceof: simplifying dynamic type checks \u2014 Dr. Axel Rauschmayer\n\ud83d\udcdc What Is the Instanceof Operator in JavaScript \u2014 appendTo\n\ud83d\udcdc Function and Object, instances of each other \u2014 Kiro Risk\n\n\u2b06 Back to Top\n\n17. Prototype Inheritance and Prototype Chain\nArticles\n\n\ud83d\udcdc Javascript : Prototype vs Class \u2014 Valentin PARSY\n\ud83d\udcdc JavaScript engine fundamentals: optimizing prototypes \u2014 Mathias Bynens\n\ud83d\udcdc JavaScript Prototype \u2014 NC Patro\n\ud83d\udcdc Prototype in Javascript \u2014 Sandeep Ranjan\n\ud83d\udcdc Prototypes in JavaScript \u2014 Rupesh Mishra\n\ud83d\udcdc Prototype in JavaScript: it\u2019s quirky, but here\u2019s how it works \u2014 Pranav Jindal\n\ud83d\udcdc Inheritance and the prototype chain \u2014 MDN\n\ud83d\udcdc Understanding JavaScript: Prototype and Inheritance \u2014 Alexander Kondov\n\ud83d\udcdc Understanding Classes (ES5) and Prototypal Inheritance in JavaScript \u2014 Hridayesh Sharma\n\ud83d\udcdc prototype, proto and Prototypal inheritance in JavaScript \u2014 Varun Dey\n\ud83d\udcdc Prototypal Inheritance \u2014 JavaScript.Info\n\ud83d\udcdc How To Work with Prototypes and Inheritance in JavaScript \u2014 Tania Rascia\n\ud83d\udcdc Master JavaScript Prototypes & Inheritance \u2014 Arnav Aggarwal\n\ud83d\udcdc You Don't Know JS [Book] Chapter 5: Prototypes \u2014 Kyle Simpson\n\ud83d\udcdc JavaScript\u2019s Prototypal Inheritance Explained Using CSS \u2014 Nash Vail\n\ud83d\udcdc Prototypal Inheritance in JavaScript \u2014 Jannis Redmann\n\ud83d\udcdc Classical and Prototypical Inheritance in JavaScript \u2014 Danny Cornelisse\n\ud83d\udcdc Demystifying ES6 Classes And Prototypal Inheritance \u2015 Neo Ighodaro\n\ud83d\udcdc Intro To Prototypal Inheritance \u2014 Dharani Jayakanthan\n\ud83d\udcdc Classes in JavaScript - Explained \u2014 Daniel Li\n\ud83d\udcdc You Don't Know JS: this & Object Prototypes \u2014 Kyle Simpson\n\ud83d\udcdc Let\u2019s Build Prototypal Inheritance in JS \u2014 var-che\n\ud83d\udcdc Objects, Prototypes and Classes in JavaScript \u2014 Atta\n\ud83d\udcdc JavaScript Prototypal Inheritance and Object Creation \u2014 Nick Shoup\n\ud83d\udcdc The magical world of JavaScript prototypes \u2014 Bel\u00e9n\n\nVideos\n\n\ud83c\udfa5 Javascript Prototype Inheritance \u2014 Avelx\n\ud83c\udfa5 JavaScript Prototype Inheritance Explained pt. I \u2014 techsith\n\ud83c\udfa5 JavaScript Prototype Inheritance Explained pt. II \u2014 techsith\n\ud83c\udfa5 JavaScript Prototype Inheritance Explained \u2014 Kyle Robinson\n\ud83c\udfa5 Advanced Javascript - Prototypal Inheritance In 1 Minute\n\ud83c\udfa5 An Overview Of Classical Javascript Classes and Prototypal Inheritance \u2014 Pentacode\n\ud83c\udfa5 Object Oriented JavaScript - Prototype \u2014 The Net Ninja\n\ud83c\udfa5 Prototype in JavaScript \u2014 kudvenkat\n\ud83c\udfa5 JavaScript Using Prototypes \u2014 O'Reilly\n\ud83c\udfa5 A Beginner's Guide to Javascript's Prototype \u2014 Tyler Mcginnis\n\ud83c\udfa5 Prototypes in Javascript - p5.js Tutorial \u2014 The Coding Train\n\n\u2b06 Back to Top\n\n18. Object.create and Object.assign\nArticles\n\n\ud83d\udcdc Object.create() \u2014 MDN\n\ud83d\udcdc Object.create in JavaScript \u2014 Rupesh Mishra\n\ud83d\udcdc Object.create(): the New Way to Create Objects in JavaScript \u2014 Rob Gravelle\n\ud83d\udcdc Basic Inheritance with Object.create \u2014 Joshua Clanton\n\ud83d\udcdc Object.create() In JavaScript \u2014 GeeksforGeeks\n\ud83d\udcdc Understanding the difference between Object.create() and the new operator \u2014 Jonathan Voxland\n\ud83d\udcdc JavaScript Object Creation: Patterns and Best Practices \u2014 Jeff Mott\n\ud83d\udcdc Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty\n\ud83d\udcdc Copying Objects in JavaScript \u2015 Orinami Olatunji\n\ud83d\udcdc Object.assign() \u2014 MDN\n\ud83d\udcdc JavaScript: Object.assign() \u2014 Thiago S. Adriano\n\ud83d\udcdc How to deep clone a JavaScript Object \u2014 Flavio Copes\n\ud83d\udcdc Object Assignment vs. Primitive Assignment in JavaScript for Beginners \u2014 Nick Scialli\n\nVideos\n\n\ud83c\udfa5 Object.assign() explained \u2014 Aaron Writes Code\n\ud83c\udfa5 Object.assign() Method \u2014 techsith\n\n\u2b06 Back to Top\n\n19. map, reduce, filter\nArticles\n\n\ud83d\udcdc JavaScript Functional Programming \u2014 map, filter and reduce \u2014 Bojan Gvozderac\n\ud83d\udcdc Learn map, filter and reduce in Javascript \u2014 Jo\u00e3o Miguel Cunha\n\ud83d\udcdc JavaScript\u2019s Map, Reduce, and Filter \u2014 Dan Martensen\n\ud83d\udcdc How to Use Map, Filter, & Reduce in JavaScript \u2014 Peleke Sengstacke\n\ud83d\udcdc JavaScript \u2014 Learn to Chain Map, Filter, and Reduce \u2014 Brandon Morelli\n\ud83d\udcdc Javascript data structure with map, reduce, filter and ES6 \u2014 Deepak Gupta\n\ud83d\udcdc Understanding map, filter and reduce in Javascript \u2014 Luuk Gruijs\n\ud83d\udcdc Functional Programming in JS: map, filter, reduce (Pt. 5) \u2014 Omer Goldberg\n\ud83d\udcdc JavaScript: Map, Filter, Reduce \u2014 William S. Vincent\n\ud83d\udcdc Arrow Functions: Fat and Concise Syntax in JavaScript \u2014 Kyle Pennell\n\ud83d\udcdc JavaScript: Arrow Functions for Beginners \u2014 Brandon Morelli\n\ud83d\udcdc When (and why) you should use ES6 arrow functions \u2014 and when you shouldn\u2019t \u2014 Cynthia Lee\n\ud83d\udcdc JavaScript \u2014 Learn & Understand Arrow Functions \u2014 Brandon Morelli\n\ud83d\udcdc (JavaScript )=> Arrow functions \u2014 sigu\n\ud83d\udcdc Javascript.reduce() \u2014 Paul Anderson\n\ud83d\udcdc Why you should replace forEach with map and filter in JavaScript \u2014 Roope Hakulinen\n\ud83d\udcdc Simplify your JavaScript \u2013 Use .map(), .reduce(), and .filter() \u2014 Etienne Talbot\n\ud83d\udcdc JavaScript\u2019s Reduce Method Explained By Going On a Diet \u2014 Kevin Kononenko\n\ud83d\udcdc Difference between map, filter and reduce in JavaScript \u2014 Amirata Khodaparast\n\ud83d\udcdc Map\u21c4Filter\u21c4Reduce\u21bb \u2014 ashay mandwarya\n\ud83d\udcdc Finding Your Way With .map() \u2014 Brandon Wozniewicz\n\ud83d\udcdc How to write your own map, filter and reduce functions in JavaScript \u2014 Hemand Nair\n\ud83d\udcdc How to Manipulate Arrays in JavaScript \u2014 Bolaji Ayodeji\n\ud83d\udcdc How to simplify your codebase with map(), reduce(), and filter() in JavaScript \u2014 Alex Permyakov\n\ud83d\udcdc .map(), .filter(), and .reduce() \u2014 Andy Pickle\n\ud83d\udcdc Map/Filter/Reduce Crash Course \u2014 Chris Achard\n\ud83d\udcdc Map, Filter and Reduce \u2013 Animated \u2014 JavaScript Teacher\n\ud83d\udcdc Map, Filter, Reduce and others Arrays Iterators You Must Know to Become an Algorithms Wizard \u2014 Mauro Bono\n\ud83d\udcdc How to Use JavaScript\u2019s .map, .filter, and .reduce \u2014 Avery Duffin\n\nVideos\n\n\ud83c\udfa5 Map, Filter and Reduce \u2014 Lydia Hallie\n\ud83c\udfa5 Functional JavaScript: Map, forEach, Reduce, Filter \u2014 Theodore Anderson\n\ud83c\udfa5 JavaScript Array superpowers: Map, Filter, Reduce (part I) \u2014 Michael Rosata\n\ud83c\udfa5 JavaScript Array superpowers: Map, Filter, Reduce (part 2) \u2014 Michael Rosata\n\ud83c\udfa5 JavaScript Higher Order Functions - Filter, Map, Sort & Reduce \u2014 Epicop\n\ud83c\udfa5 [Array Methods 2/3] .filter + .map + .reduce \u2014 CodeWithNick\n\ud83c\udfa5 Arrow functions in JavaScript - What, Why and How \u2014 Fun Fun Function\n\ud83c\udfa5 Learning Functional Programming with JavaScript \u2014 Anjana Vakil - JSUnconf\n\ud83c\udfa5 Map - Parte 2 JavaScript - Fun Fun Function\n\ud83c\udfa5 Reduce basics - Part 3 of FP in JavaScript - Fun Fun Function\n\ud83c\udfa5 Reduce Advanced - Part 4 of FP in JavaScript - Fun Fun Function\n\n\u2b06 Back to Top\n\n20. Pure Functions, Side Effects and State Mutation\nArticles\n\n\ud83d\udcdc Javascript and Functional Programming \u2014 Pure Functions \u2014 Omer Goldberg\n\ud83d\udcdc Master the JavaScript Interview: What is a Pure Function? \u2014 Eric Elliott\n\ud83d\udcdc JavaScript: What Are Pure Functions And Why Use Them? \u2014 James Jeffery\n\ud83d\udcdc Pure functions in JavaScript \u2014 @nicoespeon\n\ud83d\udcdc Functional Programming: Pure Functions \u2014 Arne Brasseur\n\ud83d\udcdc Pure Functions In Javascript \u2014 Krunal\n\ud83d\udcdc Making your JavaScript Pure \u2014 Jack Franklin\n\ud83d\udcdc To mutate, or not to mutate, in JavaScript\n\ud83d\udcdc Arrays, Objects and Mutations \u2014 Federico Kn\u00fcssel\n\ud83d\udcdc The State of Immutability \u2014 Maciej Sikora\n\ud83d\udcdc How to deal with dirty side effects in your pure functional JavaScript \u2014 James Sinclair\n\ud83d\udcdc Preventing Side Effects in JavaScript \u2014 David Walsh\n\ud83d\udcdc Wielding Pure Functions in JavaScript and Function Composition \u2014 Peleke Sengstacke\n\n\ud83d\udcdc JavaScript: Pure Functions \u2014 William S. Vincent\n\ud83d\udcdc Functional programming paradigms in modern JavaScript: Pure functions \u2014 Alexander Kondov\n\ud83d\udcdc Understanding Javascript Mutation and Pure Functions \u2014 Chidume Nnamdi\n\ud83d\udcdc Functional-ish JavaScript \u2014 Daniel Brain\n\nVideos\n\n\ud83c\udfa5 Pure Functions \u2014 Hexlet\n\ud83c\udfa5 Pure Functions - Functional Programming in JavaScript \u2014 Paul McBride\n\ud83c\udfa5 JavaScript Pure Functions \u2014 Seth Alexander\n\ud83c\udfa5 JavaScript Pure vs Impure Functions Explained \u2014 Theodore Anderson\n\ud83c\udfa5 Pure Functions - Programa\u00e7\u00e3o Funcional: Parte 1 - Fun Fun Function\n\n\u2b06 Back to Top\n\n21. Closures\nArticles\n\n\ud83d\udcdc Closures \u2014 MDN\n\ud83d\udcdc I never understood JavaScript closures \u2014 Olivier De Meulder\n\ud83d\udcdc Closure \u2014 JavaScript.Info\n\ud83d\udcdc Understand JavaScript Closures With Ease \u2014 Richard Bovell\n\ud83d\udcdc Understanding JavaScript Closures \u2014 Codesmith\n\ud83d\udcdc Understand Closures in JavaScript \u2014 Brandon Morelli\n\ud83d\udcdc A simple guide to help you understand closures in JavaScript \u2014 Prashant Ram\n\ud83d\udcdc Understanding JavaScript Closures: A Practical Approach \u2014 Paul Upendo\n\ud83d\udcdc Understanding JavaScript: Closures \u2014 Alexander Kondov\n\ud83d\udcdc How to use JavaScript closures with confidence \u2014 L\u00e9na Faure\n\ud83d\udcdc JavaScript closures by example \u2014 tyler\n\ud83d\udcdc JavaScript\u200a\u2014\u200aClosures and Scope \u2014 Alex Aitken\n\ud83d\udcdc Discover the power of closures in JavaScript\u200a\u2014\u200aCristi Salcescu\n\ud83d\udcdc Simplified JavaScript: Getting Started with Closures\u200a\u2014\u200aCode Like A Girl\n\ud83d\udcdc The Ultimate Guide to Hoisting, Scopes, and Closures in JavaScript\u200a\u2014\u200aTyler McGinnis\n\ud83d\udcdc Getting Closure\u200a\u2014\u200aRealLifeJS\n\ud83d\udcdc Understanding Closures in JavaScript\u200a\u2014\u200aSukhjinder Arora\n\ud83d\udcdc A basic guide to Closures in JavaScript\u200a\u2014\u200aParathan Thiyagalingam\n\ud83d\udcdc Closures: Using Memoization\u200a\u2014\u200aBrian Barbour\n\ud83d\udcdc A Brief Introduction to Closures and Lexical Scoping in JavaScript\u200a\u2014\u200aAshutosh K Singh\n\n\ud83d\udcdc Demystify Closures\u200a\u2014\u200astereobooster\n\ud83d\udcdc Scopes and Closures - JavaScript Concepts\u200a\u2014\u200aAgney Menon\n\nVideos\n\n\ud83c\udfa5 Javascript Closure \u2014 techsith\n\ud83c\udfa5 Closures \u2014 Fun Fun Function\n\ud83c\udfa5 Closures in JavaScript \u2014 techsith\n\ud83c\udfa5 JavaScript Closures 101: What is a closure? \u2014 JavaScript Tutorials\n\ud83c\udfa5 Closures \u2014 freeCodeCamp\n\ud83c\udfa5 JavaScript Closures \u2014 CodeWorkr\n\n\u2b06 Back to Top\n\n22. High Order Functions\nArticles\n\n\ud83d\udcdc Higher-Order Functions \u2014 Eloquent JavaScript [Book]\n\ud83d\udcdc Higher-Order Functions in JavaScript \u2014 M. David Green\n\ud83d\udcdc Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code \u2014 Guido Schmitz\n\ud83d\udcdc First-class and Higher Order Functions: Effective Functional JavaScript \u2014 Hugo Di Francesco\n\ud83d\udcdc Higher Order Functions in JavaScript \u2014 John Hannah\n\ud83d\udcdc Higher-order Functions \u2014 Richard Bovell\n\ud83d\udcdc Higher Order Functions in JavaScript \u2014 Zsolt Nagy\n\ud83d\udcdc Fun With Higher Order Functions In JavaScript \u2014 Derick\n\ud83d\udcdc Just a reminder on how to use high order functions \u2014 Pedro Filho\n\ud83d\udcdc Understanding Higher-Order Functions in JavaScript \u2014 Sukhjinder Arora\n\nVideos\n\n\ud83c\udfa5 JavaScript Higher Order Functions & Arrays \u2014 Traversy Media\n\ud83c\udfa5 Higher Order Functions \u2014 Fun Fun Function\n\ud83c\udfa5 Higher Order Functions in Javascript \u2014 Raja Yogan\n\ud83c\udfa5 Higher Order Iterators in JavaScript \u2014 Fun Fun Function\n\ud83c\udfa5 Higher Order Functions in JavaScript \u2014 The Coding Train\n\ud83c\udfa5 Part 1: An Introduction to Callbacks and Higher Order Functions - Codesmith\n\ud83c\udfa5 Part 2: Understanding Why We Need Higher Order Functions - Codesmith\n\n\u2b06 Back to Top\n\n23. Recursion\nArticles\n\n\ud83d\udcdc Recursion in JavaScript \u2014 Kevin Ennis\n\ud83d\udcdc Understanding Recursion in JavaScript \u2014 Zak Frisch\n\ud83d\udcdc Learn and Understand Recursion in JavaScript \u2014 Brandon Morelli\n\ud83d\udcdc Recursion in Functional JavaScript \u2014 M. David Green\n\ud83d\udcdc Programming with JS: Recursion \u2014 Alexander Kondov\n\ud83d\udcdc Anonymous Recursion in JavaScript \u2014 simo\n\ud83d\udcdc Recursion, iteration and tail calls in JS \u2014 loverajoel\n\ud83d\udcdc Understanding Recursion in JavaScript with Confidence \u2014 Jay\n\ud83d\udcdc Intro to Recursion \u2014 Brad Newman\n\ud83d\udcdc Accio Recursion!: Your New Favorite JavaScript Spell \u2014 Leanne Cabey\n\nVideos\n\n\ud83c\udfa5 Recursion In JavaScript \u2014 techsith\n\ud83c\udfa5 Recursion \u2014 Fun Fun Function\n\ud83c\udfa5 Recursion and Recursive Functions \u2014 Hexlet\n\ud83c\udfa5 Recursion: Recursion() \u2014 JS Monthly \u2014 Lucas da Costa\n\ud83c\udfa5 Recursive Function in JavaScript \u2014 kudvenkat\n\ud83c\udfa5 What on Earth is Recursion? \u2014 Computerphile\n\ud83c\udfa5 Javascript Tutorial 34: Introduction To Recursion \u2014 codedamn\n\ud83c\udfa5 Recursion, Iteration, and JavaScript: A Love Story | JSHeroes 2018 \u2014 Anjana Vakil\n\n\u2b06 Back to Top\n\n24. Collections and Generators\nArticles\n\n\ud83d\udcdc ES6 In Depth: Collections \u2014 Jason Orendorff\n\ud83d\udcdc ES6 Collections: Using Map, Set, WeakMap, WeakSet \u2014 Kyle Pennell\n\ud83d\udcdc ES6 WeakMaps, Sets, and WeakSets in Depth \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc Introduction to Sets in JavaScript \u2014 Alligator.io\n\ud83d\udcdc Introduction to Maps in JavaScript \u2014 Alligator.io\n\ud83d\udcdc Map, Set, WeakMap and WeakSet \u2014 JavaScript.Info\n\ud83d\udcdc Maps in ES6 - A Quick Guide \u2014 Ben Mildren\n\ud83d\udcdc ES6 \u2014 Set vs Array \u2014 What and when? \u2014 Maya Shavin\n\ud83d\udcdc ES6 \u2014 Map vs Object \u2014 What and when? \u2014 Maya Shavin\n\ud83d\udcdc ES6: Working with Sets in JavaScript \u2014 Dead Code Rising\n\ud83d\udcdc Array vs Set vs Map vs Object \u2014 Real-time use cases in Javascript (ES6/ES7) \u2014 Rajesh Babu\n\ud83d\udcdc How to create an array of unique values in JavaScript using Sets \u2014 Claire Parker-Jones\n\ud83d\udcdc What You Should Know About ES6 Maps \u2014 Just Chris\n\ud83d\udcdc ES6 Maps in Depth \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc Generator \u2014 MDN web docs\n\ud83d\udcdc What are JavaScript Generators and how to use them \u2014 Vladislav Stepanov\n\ud83d\udcdc Understanding JavaScript Generators With Examples  \u2014 Arfat Salman\n\ud83d\udcdc The Basics of ES6 Generators \u2014 Kyle Simpson\n\ud83d\udcdc Here's everything you'd want to know about ES2015+ generators \u2014 Lucas Chen\n\nVideos\n\n\ud83c\udfa5 JavaScript ES6 / ES2015 Set, Map, WeakSet and WeakMap \u2014 Traversy Media\n\ud83c\udfa5 The Differences between ES6 Maps and Sets \u2014 Steve Griffith\n\ud83c\udfa5 Javascript Generators - THEY CHANGE EVERYTHING - ES6 Generators Harmony Generators \u2014 LearnCode.academy\n\n\u2b06 Back to Top\n\n25. Promises\nArticles\n\n\ud83d\udcdc Promise \u2014 MDN\n\ud83d\udcdc JavaScript Promises for Dummies \u2015 Jecelyn Yeen\n\ud83d\udcdc Understanding promises in JavaScript \u2014 Gokul N K\n\ud83d\udcdc Master the JavaScript Interview: What is a Promise? \u2014 Eric Elliott\n\ud83d\udcdc An Overview of JavaScript Promises \u2014 Sandeep Panda\n\ud83d\udcdc How to use Promises in JavaScript \u2014 Prashant Ram\n\ud83d\udcdc Implementing Promises In JavaScript \u2014 Maciej Cieslar\n\ud83d\udcdc JavaScript: Promises explained with simple real life analogies \u2014 Shruti Kapoor\n\ud83d\udcdc Promises for Asynchronous Programming \u2014 Exploring JS\n\ud83d\udcdc JavaScript Promises Explained By Gambling At A Casino \u2014 Kevin Kononenko\n\ud83d\udcdc ES6 Promises: Patterns and Anti-Patterns \u2014 Bobby Brennan\n\ud83d\udcdc A Simple Guide to ES6 Promises \u2014 Brandon Morelli\n\ud83d\udcdc The ES6 Promises \u2014 Manoj Singh Negi\n\ud83d\udcdc ES6 Promises in Depth \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc Playing with Javascript Promises: A Comprehensive Approach \u2014 Rajesh Babu\n\ud83d\udcdc How to Write a JavaScript Promise \u2014 Brandon Wozniewicz\n\ud83d\udcdc A Coding Writer\u2019s Guide: An Introduction To ES6 Promises \u2014 Andrew Ly\n\ud83d\udcdc Asynchronous JavaScript | Callbacks | Closures | Promises \u2014 Full Stack Geek\n\ud83d\udcdc Understanding Promises in JavaScript \u2014 Chris Noring\n\ud83d\udcdc Converting callbacks to promises \u2014 Zell Liew\n\ud83d\udcdc JavaScript Promises: Zero To Hero Plus Cheat Sheet \u2014 Joshua Saunders\n\nVideos\n\n\ud83c\udfa5 Let's Learn ES6 - Promises \u2014 Ryan Christiani\n\ud83c\udfa5 JavaScript ES6 / ES2015 Promises \u2014 Traversy Media\n\ud83c\udfa5 Promises \u2014 Fun Fun Function\n\ud83c\udfa5 Error Handling Promises in JavaScript \u2014 Fun Fun Function\n\ud83c\udfa5 Promises Part 1 - Topics of JavaScript/ES6 \u2014 The Coding Train\n\n\u2b06 Back to Top\n\n26. async/await\nArticles\n\n\ud83d\udcdc async/await \u2014 JavaScript.Info\n\ud83d\udcdc Understanding async/await in Javascript \u2014 Gokul N K\n\ud83d\udcdc Asynchronous Programming \u2014 Eloquent JavaScript\n\ud83d\udcdc Exploring Async/Await Functions in JavaScript \u2014 Alligator.io\n\ud83d\udcdc Asynchronous Javascript using async/await \u2014 Joy Warugu\n\ud83d\udcdc Modern Asynchronous JavaScript with async/await \u2014 Flavio Copes\n\ud83d\udcdc Asynchronous JavaScript: From Callback Hell to Async and Await \u2014 Demir Selmanovic\n\ud83d\udcdc Javascript \u2014 ES8 Introducing async/await Functions \u2014 Ben Garrison\n\ud83d\udcdc How to escape async/await hell \u2014 Aditya Agarwal\n\ud83d\udcdc Understanding JavaScript\u2019s async await \u2014 Nicol\u00e1s Bevacqua\n\ud83d\udcdc JavaScript Async/Await: Serial, Parallel and Complex Flow \u2014 TechBrij\n\ud83d\udcdc Asynchronous Programming \u2014 Exploring JS\n\ud83d\udcdc From JavaScript Promises to Async/Await: why bother? \u2014 Chris Nwamba\n\ud83d\udcdc Flow Control in Modern JS: Callbacks to Promises to Async/Await \u2014 Craig Buckler\n\ud83d\udcdc JavaScript: Promises and Why Async/Await Wins the Battle \u2014 Nick Parsons\n\ud83d\udcdc How To Master Async/Await With This Real World Example \u2014 Adrian Hajdin\n\ud83d\udcdc How to improve your asynchronous Javascript code with async and await \u2014 Indrek Lasn\n\ud83d\udcdc Making Fetches Easy With Async Await \u2014 Mickey Sheridan\n\ud83d\udcdc 7 Reasons Why JavaScript Async/Await Is Better Than Plain Promises \u2014 Mostafa Gaafar\n\ud83d\udcdc [Asynchronous Operations in JavaScript \u2014 Jscrambler(https://dev.to/jscrambler/asynchronous-operations-in-javascript-2p6b)\n\ud83d\udcdc [Async/await: A slight design flaw. \u2014 Joey(https://dev.to/joeyhub/async-await-a-slight-design-flaw-2h2j)\n\nVideos\n\n\ud83c\udfa5 Async + Await \u2014 Wes Bos\n\ud83c\udfa5 Asynchrony: Under the Hood \u2014 Shelley Vohr\n\ud83c\udfa5 async/await in JavaScript - What, Why and How \u2014 Fun Fun Function\n\ud83c\udfa5 async/await Part 1 - Topics of JavaScript/ES8 \u2014 The Coding Train\n\ud83c\udfa5 async/await Part 2 - Topics of JavaScript/ES8 \u2014 The Coding Train\n\ud83c\udfa5 Complete Guide to JS Async & Await ES2017/ES8 \u2014 Colt Steele\n\n\u2b06 Back to Top\n\n27. Data Structures\nArticles\n\n\ud83d\udcdc Data Structures in JavaScript \u2014 Thon Ly\n\ud83d\udcdc Algorithms and Data Structures in JavaScript \u2014 Oleksii Trekhleb\n\ud83d\udcdc Data Structures: Objects and Arrays \u2015 Chris Nwamba\n\ud83d\udcdc Data structures in JavaScript \u2014 Benoit Vallon\n\ud83d\udcdc Playing with Data Structures in Javascript \u2014 Anish K.\n\ud83d\udcdc The Little Guide of Queue in JavaScript \u2014 Germ\u00e1n Cutraro\n\ud83d\udcdc All algorithms writing with JavaScript in the book 'Algorithms Fourth Edition'\n\ud83d\udcdc Collection of classic computer science paradigms in JavaScript\n\ud83d\udcdc All the things you didn't know you wanted to know about data structures\n\ud83d\udcdc JavaScript Data Structures: Singly Linked List: Setup \u2014 miku86\n\ud83d\udcdc JavaScript Data Structures: Singly Linked List: Insert \u2014 miku86\n\ud83d\udcdc JavaScript Data Structures: Singly Linked List: Remove \u2014 miku86\n\nVideos\n\n\ud83c\udfa5 Algorithms in JavaScript \u2014 Seth Koch\n\ud83c\udfa5 Algorithms In Javascript | Ace Your Interview \u2014 Eduonix Learning Solutions\n\ud83c\udfa5 Data Structures and Algorithms in JavaScript \u2014 freeCodeCamp\n\ud83c\udfa5 Learning JavaScript Data Structures and Algorithms: Sorting \u2014 Packt Video\n\n\u2b06 Back to Top\n\n28. Expensive Operation and Big O Notation\nArticles\n\n\ud83d\udcdc Big O Notation in Javascript \u2014 C\u00e9sar Ant\u00f3n Dorantes\n\ud83d\udcdc Time Complexity/Big O Notation \u2014 Tim Roberts\n\ud83d\udcdc Big O in JavaScript \u2014 Gabriela Medina\n\ud83d\udcdc Big O Search Algorithms in JavaScript \u2014 Bradley Braithwaite\n\ud83d\udcdc Time Complexity Analysis in JavaScript \u2014 Jennifer Bland\n\ud83d\udcdc Algorithms in plain English: time complexity and Big-O Notation \u2014 Michael Olorunnisola\n\nVideos\n\n\ud83c\udfa5 JavaScript: Intro to Big O Notation and Function Runtime \u2014 Eric Traub\n\ud83c\udfa5 Essential Big O for JavaScript Developers \u2014 Dave Smith\n\ud83c\udfa5 Big O Notation - Time Complexity Analysis \u2014 WebTunings\n\n\u2b06 Back to Top\n\n29. Algorithms\nArticles\n\n\ud83d\udcdc Data Structures and Algorithms using ES6\n\ud83d\udcdc Algorithms and data structures implemented in JavaScript with explanations and links to further readings\n\ud83d\udcdc JS: Interview Algorithm\n\ud83d\udcdc Algorithms in JavaScript \u2014 Thon Ly\n\ud83d\udcdc JavaScript Objects, Square Brackets and Algorithms \u2014 Dmitri Grabov\n\ud83d\udcdc Atwood's Law applied to CS101 - Classic algorithms and data structures implemented in JavaScript\n\ud83d\udcdc Data Structures and Algorithms library in JavaScript\n\ud83d\udcdc Collection of computer science algorithms and data structures written in JavaScript\n\n\u2b06 Back to Top\n\n30. Inheritance, Polymorphism and Code Reuse\nArticles\n\n\ud83d\udcdc Class inheritance, super \u2014 JavaScript.Info\n\ud83d\udcdc Inheritance in JavaScript \u2014 MDN\n\ud83d\udcdc Inheritance in JavaScript \u2014 Rupesh Mishra\n\ud83d\udcdc Simple Inheritance with JavaScript \u2014 David Catuhe\n\ud83d\udcdc JavaScript \u2014 Inheritance, delegation patterns and Object linking \u2014 NC Patro\n\ud83d\udcdc Object Oriented JavaScript: Polymorphism with examples \u2014 Knoldus Blogs\n\ud83d\udcdc Program Like Proteus \u2014 A beginner\u2019s guide to polymorphism in Javascript \u2014 Sam Galson\n\ud83d\udcdc Object-oriented JavaScript: A Deep Dive into ES6 Classes \u2014 Jeff Mott\n\nVideos\n\n\ud83c\udfa5 Inheritance in JavaScript \u2014 kudvenkat\n\ud83c\udfa5 JavaScript ES6 Classes and Inheritance \u2014 Traversy Media\n\ud83c\udfa5 Polymorphism in JavaScript \u2014 kudvenkat\n\n\u2b06 Back to Top\n\n31. Design Patterns\nArticles\n\n\ud83d\udcdc 4 JavaScript Design Patterns You Should Know \u2014 Devan Patel\n\ud83d\udcdc JavaScript Design Patterns \u2013 Beginner's Guide to Mobile Web Development \u2014 Soumyajit Pathak\n\ud83d\udcdc JavaScript Design Patterns \u2014 Akash Pal\n\ud83d\udcdc Javascript Design Patterns: What They Are & How To Use Them \u2014 Patrick Simpson\n\ud83d\udcdc JavaScript Design Patterns: Understanding Design Patterns in JavaScript - Sukhjinder Arora\n\ud83d\udcdc All the 23 (GoF) design patterns implemented in Javascript \u2014 Felipe Beline\n\ud83d\udcdc The Power of the Module Pattern in JavaScript \u2014 jsmanifest\n\ud83d\udcdc Learning JavaScript Design Patterns \u2014 Addy Osmani \n\ud83d\udcdc Design Patterns for Developers using JavaScript pt. I \u2014 Oliver Mensah\n\ud83d\udcdc Design Patterns for Developers using JavaScript pt. II \u2014 Oliver Mensah\n\ud83d\udcdc Design patterns in modern JavaScript development\n\ud83d\udcdc Understanding Design Patterns: Iterator using Dev.to and Medium social networks! \u2014 Carlos Caballero\n\ud83d\udcdc JavaScript Design Patterns - Factory Pattern \u2014 KristijanFi\u0161trek\n\nVideos\n\n\ud83c\udfa5 JavaScript Design Patterns \u2014 Udacity\n\ud83c\udfa5 JavaScript Patterns for 2017 \u2014 Scott Allen\n\n\u2b06 Back to Top\n\n32. Partial Applications, Currying, Compose and Pipe\nArticles\n\n\ud83d\udcdc Use function composition in JavaScript \u2014 R\u00e9mi\n\ud83d\udcdc Currying in JavaScript ES6 \u2014 Adam Bene\n\ud83d\udcdc Composition and Currying Elegance in JavaScript \u2014 Pragyan Das\n\ud83d\udcdc Functional JavaScript: Function Composition For Every Day Use \u2014 Joel Thoms\n\ud83d\udcdc Functional Composition: compose() and pipe() \u2014 Anton Paras\n\ud83d\udcdc Why The Hipsters Compose Everything: Functional Composing In JavaScript \u2014 A. Sharif\n\ud83d\udcdc A Gentle Introduction to Functional JavaScript pt III: Functions for making functions \u2014 James Sinclair\n\ud83d\udcdc Curry And Compose (why you should be using something like ramda in your code) \u2014 jsanchesleao\n\ud83d\udcdc Function Composition in JavaScript with Pipe \u2014 Andy Van Slaars\n\ud83d\udcdc Practical Functional JavaScript with Ramda \u2014 Andrew D'Amelio, Yuri Takhteyev\n\ud83d\udcdc The beauty in Partial Application, Currying, and Function Composition \u2014 Joel Thoms\n\ud83d\udcdc Curry or Partial Application? \u2014 Eric Elliott\n\ud83d\udcdc Partial Application in JavaScript \u2014 Ben Alman\n\ud83d\udcdc Partial Application of Functions \u2014 Functional Reactive Ninja\n\ud83d\udcdc Currying vs Partial Application \u2014 Deepak Gupta\n\ud83d\udcdc Partial Application in ECMAScript 2015 \u2014 Ragan Wald\n\ud83d\udcdc Functional Composition in Javascript \u2014 Joe Cortopassi\n\ud83d\udcdc So You Want to be a Functional Programmer pt. I \u2014 Charles Scalfani\n\ud83d\udcdc So You Want to be a Functional Programmer pt. II \u2014 Charles Scalfani\n\ud83d\udcdc So You Want to be a Functional Programmer pt. III \u2014 Charles Scalfani\n\ud83d\udcdc So You Want to be a Functional Programmer pt. IV \u2014 Charles Scalfani\n\ud83d\udcdc So You Want to be a Functional Programmer pt. V \u2014 Charles Scalfani\n\ud83d\udcdc Functional-Light JavaScript Chapter 3: Managing Function Inputs \u2014 Kyle Simpson\n\ud83d\udcdc An introduction to the basic principles of Functional Programming \u2014 TK\n\ud83d\udcdc Concepts of Functional Programming in Javascript \u2014 TK\n\ud83d\udcdc An Introduction to Functional Programming Style in JavaScript \u2014 JavaScript Teacher\n\ud83d\udcdc A practical guide to writing more functional JavaScript \u2014 Nadeesha Cabral\n\ud83d\udcdc A simple explanation of functional pipe in JavaScript \u2014 Ben Lesh\n\nVideos\n\n\ud83c\udfa5 Compose vs Pipe: Functional Programming in JavaScript \u2014 Chyld Studios\n\ud83c\udfa5 JavaScript Functional Programing: Compose \u2014 Theodore Anderson\n\ud83c\udfa5 Function Composition - Functional JavaScript \u2014 NWCalvank\n\ud83c\udfa5 JavaScript Function Composition Explained \u2014 Theodore Anderson\n\ud83c\udfa5 Let's code with function composition \u2014 Fun Fun Function\n\ud83c\udfa5 Partial Application vs. Currying \u2014 NWCalvank\n\ud83c\udfa5 JavaScript Partial Application \u2014 Theodore Anderson\n\n\u2b06 Back to Top\n\n33. Clean Code\nArticles\n\n\ud83d\udcdc Clean Code concepts adapted for JavaScript \u2014 Ryan McDermott\n\ud83d\udcdc JavaScript Clean Coding Best Practices \u2014 Andr\u00e1s T\u00f3th\n\ud83d\udcdc Function parameters in JavaScript Clean Code \u2014 Kevin Peters\n\ud83d\udcdc Keeping your code clean \u2014 Samuel James\n\ud83d\udcdc Best Practices for Using Modern JavaScript Syntax \u2014 M. David Green\n\ud83d\udcdc best practices for cross node/web development - Jimmy W\u00e4rting\n\ud83d\udcdc Writing Clean Code - Dylan Paulus\n\ud83d\udcdc Writing Clean Code and The Practice of Programming - Nityesh Agarwal\n\nVideos\n\n\ud83c\udfa5 JavaScript Pro Tips - Code This, NOT That\n\n\u2b06 Back to Top\n\n"}, {"repo": "ageitgey/face_recognition", "language": "Python", "readme": "\nFace Recognition\nYou can also read a translated version of this file in Chinese \u7b80\u4f53\u4e2d\u6587\u7248 or in Korean \ud55c\uad6d\uc5b4.\nRecognize and manipulate faces from Python or from the command line with\nthe world's simplest face recognition library.\nBuilt using dlib's state-of-the-art face recognition\nbuilt with deep learning. The model has an accuracy of 99.38% on the\nLabeled Faces in the Wild benchmark.\nThis also provides a simple face_recognition command line tool that lets\nyou do face recognition on a folder of images from the command line!\n\n\n\nFeatures\nFind faces in pictures\nFind all the faces that appear in a picture:\n\nimport face_recognition\nimage = face_recognition.load_image_file(\"your_file.jpg\")\nface_locations = face_recognition.face_locations(image)\nFind and manipulate facial features in pictures\nGet the locations and outlines of each person's eyes, nose, mouth and chin.\n\nimport face_recognition\nimage = face_recognition.load_image_file(\"your_file.jpg\")\nface_landmarks_list = face_recognition.face_landmarks(image)\nFinding facial features is super useful for lots of important stuff. But you can also use it for really stupid stuff\nlike applying digital make-up (think 'Meitu'):\n\nIdentify faces in pictures\nRecognize who appears in each photo.\n\nimport face_recognition\nknown_image = face_recognition.load_image_file(\"biden.jpg\")\nunknown_image = face_recognition.load_image_file(\"unknown.jpg\")\n\nbiden_encoding = face_recognition.face_encodings(known_image)[0]\nunknown_encoding = face_recognition.face_encodings(unknown_image)[0]\n\nresults = face_recognition.compare_faces([biden_encoding], unknown_encoding)\nYou can even use this library with other Python libraries to do real-time face recognition:\n\nSee this example for the code.\nOnline Demos\nUser-contributed shared Jupyter notebook demo (not officially supported): \nInstallation\nRequirements\n\nPython 3.3+ or Python 2.7\nmacOS or Linux (Windows not officially supported, but might work)\n\nInstallation Options:\nInstalling on Mac or Linux\nFirst, make sure you have dlib already installed with Python bindings:\n\nHow to install dlib from source on macOS or Ubuntu\n\nThen, install this module from pypi using pip3 (or pip2 for Python 2):\npip3 install face_recognition\nAlternatively, you can try this library with Docker, see this section.\nIf you are having trouble with installation, you can also try out a\npre-configured VM.\nInstalling on an Nvidia Jetson Nano board\n\nJetson Nano installation instructions\n\nPlease follow the instructions in the article carefully. There is current a bug in the CUDA libraries on the Jetson Nano that will cause this library to fail silently if you don't follow the instructions in the article to comment out a line in dlib and recompile it.\n\n\n\nInstalling on Raspberry Pi 2+\n\nRaspberry Pi 2+ installation instructions\n\nInstalling on Windows\nWhile Windows isn't officially supported, helpful users have posted instructions on how to install this library:\n\n@masoudr's Windows 10 installation guide (dlib + face_recognition)\n\nInstalling a pre-configured Virtual Machine image\n\nDownload the pre-configured VM image (for VMware Player or VirtualBox).\n\nUsage\nCommand-Line Interface\nWhen you install face_recognition, you get two simple command-line\nprograms:\n\nface_recognition - Recognize faces in a photograph or folder full for\nphotographs.\nface_detection - Find faces in a photograph or folder full for photographs.\n\nface_recognition command line tool\nThe face_recognition command lets you recognize faces in a photograph or\nfolder full  for photographs.\nFirst, you need to provide a folder with one picture of each person you\nalready know. There should be one image file for each person with the\nfiles named according to who is in the picture:\n\nNext, you need a second folder with the files you want to identify:\n\nThen in you simply run the command face_recognition, passing in\nthe folder of known people and the folder (or single image) with unknown\npeople and it tells you who is in each image:\n$ face_recognition ./pictures_of_people_i_know/ ./unknown_pictures/\n\n/unknown_pictures/unknown.jpg,Barack Obama\n/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person\nThere's one line in the output for each face. The data is comma-separated\nwith the filename and the name of the person found.\nAn unknown_person is a face in the image that didn't match anyone in\nyour folder of known people.\nface_detection command line tool\nThe face_detection command lets you find the location (pixel coordinatates)\nof any faces in an image.\nJust run the command face_detection, passing in a folder of images\nto check (or a single image):\n$ face_detection  ./folder_with_pictures/\n\nexamples/image1.jpg,65,215,169,112\nexamples/image2.jpg,62,394,211,244\nexamples/image2.jpg,95,941,244,792\nIt prints one line for each face that was detected. The coordinates\nreported are the top, right, bottom and left coordinates of the face (in pixels).\nAdjusting Tolerance / Sensitivity\nIf you are getting multiple matches for the same person, it might be that\nthe people in your photos look very similar and a lower tolerance value\nis needed to make face comparisons more strict.\nYou can do that with the --tolerance parameter. The default tolerance\nvalue is 0.6 and lower numbers make face comparisons more strict:\n$ face_recognition --tolerance 0.54 ./pictures_of_people_i_know/ ./unknown_pictures/\n\n/unknown_pictures/unknown.jpg,Barack Obama\n/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person\nIf you want to see the face distance calculated for each match in order\nto adjust the tolerance setting, you can use --show-distance true:\n$ face_recognition --show-distance true ./pictures_of_people_i_know/ ./unknown_pictures/\n\n/unknown_pictures/unknown.jpg,Barack Obama,0.378542298956785\n/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person,None\nMore Examples\nIf you simply want to know the names of the people in each photograph but don't\ncare about file names, you could do this:\n$ face_recognition ./pictures_of_people_i_know/ ./unknown_pictures/ | cut -d ',' -f2\n\nBarack Obama\nunknown_person\nSpeeding up Face Recognition\nFace recognition can be done in parallel if you have a computer with\nmultiple CPU cores. For example, if your system has 4 CPU cores, you can\nprocess about 4 times as many images in the same amount of time by using\nall your CPU cores in parallel.\nIf you are using Python 3.4 or newer, pass in a --cpus <number_of_cpu_cores_to_use> parameter:\n$ face_recognition --cpus 4 ./pictures_of_people_i_know/ ./unknown_pictures/\nYou can also pass in --cpus -1 to use all CPU cores in your system.\nPython Module\nYou can import the face_recognition module and then easily manipulate\nfaces with just a couple of lines of code. It's super easy!\nAPI Docs: https://face-recognition.readthedocs.io.\nAutomatically find all the faces in an image\nimport face_recognition\n\nimage = face_recognition.load_image_file(\"my_picture.jpg\")\nface_locations = face_recognition.face_locations(image)\n\n# face_locations is now an array listing the co-ordinates of each face!\nSee this example\nto try it out.\nYou can also opt-in to a somewhat more accurate deep-learning-based face detection model.\nNote: GPU acceleration (via NVidia's CUDA library) is required for good\nperformance with this model. You'll also want to enable CUDA support\nwhen compliling dlib.\nimport face_recognition\n\nimage = face_recognition.load_image_file(\"my_picture.jpg\")\nface_locations = face_recognition.face_locations(image, model=\"cnn\")\n\n# face_locations is now an array listing the co-ordinates of each face!\nSee this example\nto try it out.\nIf you have a lot of images and a GPU, you can also\nfind faces in batches.\nAutomatically locate the facial features of a person in an image\nimport face_recognition\n\nimage = face_recognition.load_image_file(\"my_picture.jpg\")\nface_landmarks_list = face_recognition.face_landmarks(image)\n\n# face_landmarks_list is now an array with the locations of each facial feature in each face.\n# face_landmarks_list[0]['left_eye'] would be the location and outline of the first person's left eye.\nSee this example\nto try it out.\nRecognize faces in images and identify who they are\nimport face_recognition\n\npicture_of_me = face_recognition.load_image_file(\"me.jpg\")\nmy_face_encoding = face_recognition.face_encodings(picture_of_me)[0]\n\n# my_face_encoding now contains a universal 'encoding' of my facial features that can be compared to any other picture of a face!\n\nunknown_picture = face_recognition.load_image_file(\"unknown.jpg\")\nunknown_face_encoding = face_recognition.face_encodings(unknown_picture)[0]\n\n# Now we can see the two face encodings are of the same person with `compare_faces`!\n\nresults = face_recognition.compare_faces([my_face_encoding], unknown_face_encoding)\n\nif results[0] == True:\n    print(\"It's a picture of me!\")\nelse:\n    print(\"It's not a picture of me!\")\nSee this example\nto try it out.\nPython Code Examples\nAll the examples are available here.\nFace Detection\n\nFind faces in a photograph\nFind faces in a photograph (using deep learning)\nFind faces in batches of images w/ GPU (using deep learning)\nBlur all the faces in a live video using your webcam (Requires OpenCV to be installed)\n\nFacial Features\n\nIdentify specific facial features in a photograph\nApply (horribly ugly) digital make-up\n\nFacial Recognition\n\nFind and recognize unknown faces in a photograph based on photographs of known people\nIdentify and draw boxes around each person in a photo\nCompare faces by numeric face distance instead of only True/False matches\nRecognize faces in live video using your webcam - Simple / Slower Version (Requires OpenCV to be installed)\nRecognize faces in live video using your webcam - Faster Version (Requires OpenCV to be installed)\nRecognize faces in a video file and write out new video file (Requires OpenCV to be installed)\nRecognize faces on a Raspberry Pi w/ camera\nRun a web service to recognize faces via HTTP (Requires Flask to be installed)\nRecognize faces with a K-nearest neighbors classifier\nTrain multiple images per person then recognize faces using a SVM\n\nCreating a Standalone Executable\nIf you want to create a standalone executable that can run without the need to install python or face_recognition, you can use PyInstaller. However, it requires some custom configuration to work with this library. See this issue for how to do it.\nArticles and Guides that cover face_recognition\n\nMy article on how Face Recognition works: Modern Face Recognition with Deep Learning\n\nCovers the algorithms and how they generally work\n\n\nFace recognition with OpenCV, Python, and deep learning by Adrian Rosebrock\n\nCovers how to use face recognition in practice\n\n\nRaspberry Pi Face Recognition by Adrian Rosebrock\n\nCovers how to use this on a Raspberry Pi\n\n\nFace clustering with Python by Adrian Rosebrock\n\nCovers how to automatically cluster photos based on who appears in each photo using unsupervised learning\n\n\n\nHow Face Recognition Works\nIf you want to learn how face location and recognition work instead of\ndepending on a black box library, read my article.\nCaveats\n\nThe face recognition model is trained on adults and does not work very well on children. It tends to mix\nup children quite easy using the default comparison threshold of 0.6.\nAccuracy may vary between ethnic groups. Please see this wiki page for more details.\n\nDeployment to Cloud Hosts (Heroku, AWS, etc)\nSince face_recognition depends on dlib which is written in C++, it can be tricky to deploy an app\nusing it to a cloud hosting provider like Heroku or AWS.\nTo make things easier, there's an example Dockerfile in this repo that shows how to run an app built with\nface_recognition in a Docker container. With that, you should be able to deploy\nto any service that supports Docker images.\nYou can try the Docker image locally by running: docker-compose up --build\nLinux users with a GPU (drivers >= 384.81) and Nvidia-Docker installed can run the example on the GPU: Open the docker-compose.yml file and uncomment the dockerfile: Dockerfile.gpu and runtime: nvidia lines.\nHaving problems?\nIf you run into problems, please read the Common Errors section of the wiki before filing a github issue.\nThanks\n\nMany, many thanks to Davis King (@nulhom)\nfor creating dlib and for providing the trained facial feature detection and face encoding models\nused in this library. For more information on the ResNet that powers the face encodings, check out\nhis blog post.\nThanks to everyone who works on all the awesome Python data science libraries like numpy, scipy, scikit-image,\npillow, etc, etc that makes this kind of stuff so easy and fun in Python.\nThanks to Cookiecutter and the\naudreyr/cookiecutter-pypackage project template\nfor making Python project packaging way more tolerable.\n\n\n"}, {"repo": "blueimp/jQuery-File-Upload", "language": "PHP", "readme": "\njQuery File Upload\nContents\n\nDescription\nDemo\nFeatures\nSecurity\nSetup\nRequirements\n\nMandatory requirements\nOptional requirements\nCross-domain requirements\n\n\nBrowsers\n\nDesktop browsers\nMobile browsers\nExtended browser support information\n\n\nTesting\nSupport\nLicense\n\nDescription\n\nFile Upload widget with multiple file selection, drag&drop support,\nprogress bars, validation and preview images, audio and video for jQuery.\nSupports cross-domain, chunked and resumable file uploads and client-side\nimage resizing.\nWorks with any server-side platform (PHP, Python, Ruby on Rails, Java,\nNode.js, Go etc.) that supports standard HTML form file uploads.\n\nDemo\nDemo File Upload\nFeatures\n\nMultiple file upload:\nAllows to select multiple files at once and upload them simultaneously.\nDrag & Drop support:\nAllows to upload files by dragging them from your desktop or file manager and\ndropping them on your browser window.\nUpload progress bar:\nShows a progress bar indicating the upload progress for individual files and\nfor all uploads combined.\nCancelable uploads:\nIndividual file uploads can be canceled to stop the upload progress.\nResumable uploads:\nAborted uploads can be resumed with browsers supporting the Blob API.\nChunked uploads:\nLarge files can be uploaded in smaller chunks with browsers supporting the\nBlob API.\nClient-side image resizing:\nImages can be automatically resized on client-side with browsers supporting\nthe required JS APIs.\nPreview images, audio and video:\nA preview of image, audio and video files can be displayed before uploading\nwith browsers supporting the required APIs.\nNo browser plugins (e.g. Adobe Flash) required:\nThe implementation is based on open standards like HTML5 and JavaScript and\nrequires no additional browser plugins.\nGraceful fallback for legacy browsers:\nUploads files via XMLHttpRequests if supported and uses iframes as fallback\nfor legacy browsers.\nHTML file upload form fallback:\nAllows progressive enhancement by using a standard HTML file upload form as\nwidget element.\nCross-site file uploads:\nSupports uploading files to a different domain with cross-site XMLHttpRequests\nor iframe redirects.\nMultiple plugin instances:\nAllows to use multiple plugin instances on the same webpage.\nCustomizable and extensible:\nProvides an API to set individual options and define callback methods for\nvarious upload events.\nMultipart and file contents stream uploads:\nFiles can be uploaded as standard \"multipart/form-data\" or file contents\nstream (HTTP PUT file upload).\nCompatible with any server-side application platform:\nWorks with any server-side platform (PHP, Python, Ruby on Rails, Java,\nNode.js, Go etc.) that supports standard HTML form file uploads.\n\nSecurity\n\u26a0\ufe0f Please read the VULNERABILITIES document for a list of\nfixed vulnerabilities\nPlease also read the SECURITY document for instructions on how to\nsecurely configure your Webserver for file uploads.\nSetup\njQuery File Upload can be installed via NPM:\nnpm install blueimp-file-upload\nThis allows you to include jquery.fileupload.js and\nits extensions via node_modules, e.g:\n<script src=\"node_modules/blueimp-file-upload/js/jquery.fileupload.js\"></script>\nThe widget can then be initialized on a file upload form the following way:\n$('#fileupload').fileupload();\nFor further information, please refer to the following guides:\n\nMain documentation page\nList of all available Options\nThe plugin API\nHow to setup the plugin on your website\nHow to use only the basic plugin.\n\nRequirements\nMandatory requirements\n\njQuery v1.6+\njQuery UI widget factory v1.9+\n(included): Required for the basic File Upload plugin, but very lightweight\nwithout any other dependencies from the jQuery UI suite.\njQuery Iframe Transport plugin\n(included): Required for\nbrowsers without XHR file upload support.\n\nOptional requirements\n\nJavaScript Templates engine\nv3+: Used to render the selected and uploaded files for the Basic Plus UI and\njQuery UI versions.\nJavaScript Load Image library\nv2+: Required for the image previews and resizing functionality.\nJavaScript Canvas to Blob polyfill\nv3+:Required for the image previews and resizing functionality.\nblueimp Gallery v2+: Used to display the\nuploaded images in a lightbox.\nBootstrap v3+: Used for the demo design.\nGlyphicons Icon set used by Bootstrap.\n\nCross-domain requirements\nCross-domain File Uploads\nusing the\nIframe Transport plugin\nrequire a redirect back to the origin server to retrieve the upload results. The\nexample implementation\nmakes use of\nresult.html\nas a static redirect page for the origin server.\nThe repository also includes the\njQuery XDomainRequest Transport plugin,\nwhich enables limited cross-domain AJAX requests in Microsoft Internet Explorer\n8 and 9 (IE 10 supports cross-domain XHR requests).\nThe XDomainRequest object allows GET and POST requests only and doesn't support\nfile uploads. It is used on the\nDemo to delete uploaded files\nfrom the cross-domain demo file upload service.\nBrowsers\nDesktop browsers\nThe File Upload plugin is regularly tested with the latest browser versions and\nsupports the following minimal versions:\n\nGoogle Chrome\nApple Safari 4.0+\nMozilla Firefox 3.0+\nOpera 11.0+\nMicrosoft Internet Explorer 6.0+\n\nMobile browsers\nThe File Upload plugin has been tested with and supports the following mobile\nbrowsers:\n\nApple Safari on iOS 6.0+\nGoogle Chrome on iOS 6.0+\nGoogle Chrome on Android 4.0+\nDefault Browser on Android 2.3+\nOpera Mobile 12.0+\n\nExtended browser support information\nFor a detailed overview of the features supported by each browser version and\nknown operating system / browser bugs, please have a look at the\nExtended browser support information.\nTesting\nThe project comes with three sets of tests:\n\nCode linting using ESLint.\nUnit tests using Mocha.\nEnd-to-end tests using blueimp/wdio.\n\nTo run the tests, follow these steps:\n\nStart Docker.\nInstall development dependencies:\nnpm install\n\nRun the tests:\nnpm test\n\n\nSupport\nThis project is actively maintained, but there is no official support channel.\nIf you have a question that another developer might help you with, please post\nto\nStack Overflow\nand tag your question with blueimp jquery file upload.\nLicense\nReleased under the MIT license.\n\n"}, {"repo": "apache/dubbo", "language": "Java", "readme": "\nApache Dubbo Project\n\n\n\n\n\n\n\n\n\nApache Dubbo is a high-performance, Java based open source RPC framework. Please visit official site for quick start and documentations, as well as Wiki for news, FAQ, and release notes.\nWe are now collecting dubbo user info in order to help us to improve Dubbo better, pls. kindly help us by providing yours on issue#1012: Wanted: who's using dubbo, thanks :)\nArchitecture\n\nFeatures\n\nTransparent interface based RPC\nIntelligent load balancing\nAutomatic service registration and discovery\nHigh extensibility\nRuntime traffic routing\nVisualized service governance\n\nGetting started\nThe following code snippet comes from Dubbo Samples. You may clone the sample project and step into dubbo-samples-api sub directory before read on.\n# git clone https://github.com/apache/dubbo-samples.git\n# cd dubbo-samples/dubbo-samples-api\nThere's a README file under dubbo-samples-api directory. Read it and try this sample out by following the instructions.\nMaven dependency\n<properties>\n    <dubbo.version>2.7.4.1</dubbo.version>\n</properties>\n    \n<dependencies>\n    <dependency>\n        <groupId>org.apache.dubbo</groupId>\n        <artifactId>dubbo</artifactId>\n        <version>${dubbo.version}</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.dubbo</groupId>\n        <artifactId>dubbo-dependencies-zookeeper</artifactId>\n        <version>${dubbo.version}</version>\n        <type>pom</type>\n    </dependency>\n</dependencies>\nDefine service interfaces\npackage org.apache.dubbo.samples.api;\n\npublic interface GreetingService {\n    String sayHi(String name);\n}\nSee api/GreetingService.java on GitHub.\nImplement service interface for the provider\npackage org.apache.dubbo.samples.provider;\n\nimport org.apache.dubbo.samples.api.GreetingsService;\n\npublic class GreetingsServiceImpl implements GreetingsService {\n    @Override\n    public String sayHi(String name) {\n        return \"hi, \" + name;\n    }\n}\nSee provider/GreetingServiceImpl.java on GitHub.\nStart service provider\npackage org.apache.dubbo.samples.provider;\n\n\nimport org.apache.dubbo.config.ApplicationConfig;\nimport org.apache.dubbo.config.RegistryConfig;\nimport org.apache.dubbo.config.ServiceConfig;\nimport org.apache.dubbo.samples.api.GreetingsService;\n\nimport java.util.concurrent.CountDownLatch;\n\npublic class Application {\n    private static String zookeeperHost = System.getProperty(\"zookeeper.address\", \"127.0.0.1\");\n\n    public static void main(String[] args) throws Exception {\n        ServiceConfig<GreetingsService> service = new ServiceConfig<>();\n        service.setApplication(new ApplicationConfig(\"first-dubbo-provider\"));\n        service.setRegistry(new RegistryConfig(\"zookeeper://\" + zookeeperHost + \":2181\"));\n        service.setInterface(GreetingsService.class);\n        service.setRef(new GreetingsServiceImpl());\n        service.export();\n\n        System.out.println(\"dubbo service started\");\n        new CountDownLatch(1).await();\n    }\n}\nSee provider/Application.java on GitHub.\nBuild and run the provider\n# mvn clean package\n# mvn -Djava.net.preferIPv4Stack=true -Dexec.mainClass=org.apache.dubbo.samples.provider.Application exec:java\nCall remote service in consumer\npackage org.apache.dubbo.samples.client;\n\n\nimport org.apache.dubbo.config.ApplicationConfig;\nimport org.apache.dubbo.config.ReferenceConfig;\nimport org.apache.dubbo.config.RegistryConfig;\nimport org.apache.dubbo.samples.api.GreetingsService;\n\npublic class Application {\n    private static String zookeeperHost = System.getProperty(\"zookeeper.address\", \"127.0.0.1\");\n\n    public static void main(String[] args) {\n        ReferenceConfig<GreetingsService> reference = new ReferenceConfig<>();\n        reference.setApplication(new ApplicationConfig(\"first-dubbo-consumer\"));\n        reference.setRegistry(new RegistryConfig(\"zookeeper://\" + zookeeperHost + \":2181\"));\n        reference.setInterface(GreetingsService.class);\n        GreetingsService service = reference.get();\n        String message = service.sayHi(\"dubbo\");\n        System.out.println(message);\n    }\n}\nSee consumer/Application.java on GitHub.\nBuild and run the consumer\n# mvn clean package\n# mvn -Djava.net.preferIPv4Stack=true -Dexec.mainClass=org.apache.dubbo.samples.client.Application exec:java\nThe consumer will print out hi, dubbo on the screen.\nNext steps\n\nYour first Dubbo application - A 101 tutorial to reveal more details, with the same code above.\nDubbo user manual - How to use Dubbo and all its features.\nDubbo developer guide - How to involve in Dubbo development.\nDubbo admin manual - How to admin and manage Dubbo services.\n\nBuilding\nIf you want to try out the cutting-edge features, you can build with the following commands. (Java 1.8 is required to build the master branch)\n  mvn clean install\n\nContact\n\n\nMailing list:\n\ndev list: for dev/user discussion. subscribe, unsubscribe, archive,  guide\n\n\n\nBugs: Issues\n\n\nGitter: Gitter channel\n\n\nTwitter: @ApacheDubbo\n\n\nContributing\nSee\u00a0CONTRIBUTING\u00a0for details on submitting patches and the contribution workflow.\nHow can I contribute?\n\nTake a look at issues with tag called Good first issue or Help wanted.\nJoin the discussion on mailing list, subscription guide.\nAnswer questions on issues.\nFix bugs reported on issues, and send us pull request.\nReview the existing pull request.\nImprove the website, typically we need\n\nblog post\ntranslation on documentation\nuse cases about how Dubbo is being used in enterprise system.\n\n\nImprove the dubbo-admin/dubbo-monitor.\nContribute to the projects listed in ecosystem.\nAny form of contribution that is not mentioned above.\nIf you would like to contribute, please send an email to dev@dubbo.apache.org to let us know!\n\nReporting bugs\nPlease follow the template\u00a0for reporting any issues.\nReporting a security vulnerability\nPlease report security vulnerability to us privately.\nDubbo ecosystem\n\nDubbo Ecosystem Entry - A GitHub group dubbo to gather all Dubbo relevant projects not appropriate in apache group yet\nDubbo Website - Apache Dubbo official website\nDubbo Samples - samples for Apache Dubbo\nDubbo Spring Boot - Spring Boot Project for Dubbo\nDubbo Admin - The reference implementation for Dubbo admin\n\nLanguage\n\nNode.js\nPython\nPHP\nGo\nErlang\n\nLicense\nApache Dubbo is under the Apache 2.0 license. See the\u00a0LICENSE\u00a0file for details.\n\n"}, {"repo": "JetBrains/kotlin", "language": "Kotlin", "readme": "\n\n\n\n\nKotlin Programming Language\nWelcome to Kotlin! Some handy links:\n\nKotlin Site\nGetting Started Guide\nTry Kotlin\nKotlin Standard Library\nIssue Tracker\nForum\nKotlin Blog\nFollow Kotlin on Twitter\nPublic Slack channel\nTeamCity CI build\n\nEditing Kotlin\n\nKotlin IntelliJ IDEA Plugin\nKotlin Eclipse Plugin\nKotlin Sublime Text Package\n\nBuild environment requirements\nIn order to build Kotlin distribution you need to have:\n\n\nJDK 1.6, 1.7, 1.8 and 9\n\n\nSetup environment variables as following:\n  JAVA_HOME=\"path to JDK 1.8\"\n  JDK_16=\"path to JDK 1.6\"\n  JDK_17=\"path to JDK 1.7\"\n  JDK_18=\"path to JDK 1.8\"\n  JDK_9=\"path to JDK 9\"\n\n\n\nFor local development, if you're not working on bytecode generation or the standard library, it's OK to have only JDK 1.8 and JDK 9 installed, and to point JDK_16 and JDK_17 environment variables to your JDK 1.8 installation.\nYou also can use Gradle properties to setup JDK_* variables.\n\nNote: The JDK 6 for MacOS is not available on Oracle's site. You can download it here.\n\nOn Windows you might need to add long paths setting to the repo:\ngit config core.longpaths true \n\nBuilding\nThe project is built with Gradle. Run Gradle to build the project and to run the tests\nusing the following command on Unix/macOS:\n./gradlew <tasks-and-options>\n\nor the following command on Windows:\ngradlew <tasks-and-options>\n\nOn the first project configuration gradle will download and setup the dependencies on\n\nintellij-core is a part of command line compiler and contains only necessary APIs.\nidea-full is a full blown IntelliJ IDEA Community Edition to be used in the plugin module.\n\nThese dependencies are quite large, so depending on the quality of your internet connection\nyou might face timeouts getting them. In this case you can increase timeout by specifying the following\ncommand line parameters on the first run:\n./gradlew -Dhttp.socketTimeout=60000 -Dhttp.connectionTimeout=60000\n\nImportant gradle tasks\n\nclean - clean build results\ndist - assembles the compiler distribution into dist/kotlinc/ folder\nideaPlugin - assembles the Kotlin IDEA plugin distribution into dist/artifacts/Kotlin folder\ninstall - build and install all public artifacts into local maven repository\nrunIde - build IDEA plugin and run IDEA with it\ncoreLibsTest - build and run stdlib, reflect and kotlin-test tests\ngradlePluginTest - build and run gradle plugin tests\ncompilerTest - build and run all compiler tests\nideaPluginTest - build and run all IDEA plugin tests\n\nOPTIONAL: Some artifacts, mainly Maven plugin ones, are built separately with Maven.\nRefer to libraries/ReadMe.md for details.\nBuilding for different versions of IntelliJ IDEA and Android Studio\nKotlin plugin is intended to work with several recent versions of IntelliJ IDEA and Android Studio. Each platform is allowed to have a different set of features and might provide a slightly different API. Instead of using several parallel Git branches, project stores everything in a single branch, but files may have counterparts with version extensions (*.as32, *.172, *.181). The primary file is expected to be replaced with its counterpart when targeting non-default platform.\nMore detailed description of this scheme can be found at https://github.com/JetBrains/bunches/blob/master/ReadMe.md.\nUsually, there's no need to care about multiple platforms as all features are enabled everywhere by default. Additional counterparts should be created if there's an expected difference in behavior or an incompatible API usage is required and there's no reasonable workaround to save source compatibility. Kotlin plugin contains a pre-commit check that shows a warning if a file has been updated without its counterparts.\nDevelopment for some particular platform is possible after 'switching' that can be done with Bunch Tool from the command line.\ncd kotlin-project-dir\n\n# switching to IntelliJ Idea 2019.1\nbunch switch 191\n Working with the project in IntelliJ IDEA\nWorking with the Kotlin project requires at least IntelliJ IDEA 2019.1. You can download IntelliJ IDEA 2019.1 here.\nAfter cloning the project, to import the project in Intellij choose the project directory in the Open project dialog. Then, after project opened, Select\nFile -> New... -> Module from Existing Sources in the menu, and select build.gradle.kts file in the project's root folder.\nIn the import dialog, select use default gradle wrapper.\nTo be able to run tests from IntelliJ easily, check Delegate IDE build/run actions to Gradle and choose Gradle Test Runner in the Gradle runner settings after importing the project.\nAt this time, you can use the latest released 1.3.x version of the Kotlin plugin for working with the code. To make sure you have the latest version installed, use Tools | Kotlin | Configure Kotlin Plugin Updates and press \"Check for updates now\".\nCompiling and running\nFrom this root project there are Run/Debug Configurations for running IDEA or the Compiler Tests for example; so if you want to try out the latest and greatest IDEA plugin\n\nVCS -> Git -> Pull\nRun the \"IDEA\" run configuration in the project\na child IntelliJ IDEA with the Kotlin plugin will then startup\n\nIncluding into composite build\nTo include kotlin compiler into composite build you need to define dependencySubstitution for kotlin-compiler module in settings.gradle\nincludeBuild('/path/to/kotlin') {\n    dependencySubstitution {\n        substitute module('org.jetbrains.kotlin:kotlin-compiler') with project(':include:kotlin-compiler')\n    }\n}\n\nLicense\nKotlin is distributed under the terms of the Apache License (Version 2.0). See license folder for details.\nContributing\nPlease be sure to review Kotlin's contributing guidelines to learn how to help the project.\n\n"}, {"repo": "home-assistant/home-assistant", "language": "Python", "readme": "\nHome Assistant \n\nOpen source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.\nCheck out home-assistant.io for a\ndemo, installation instructions,\ntutorials and documentation.\n\n\nFeatured integrations\n\nThe system is built using a modular approach so support for other devices or actions can be implemented easily. See also the section on architecture and the section on creating your own\ncomponents.\nIf you run into issues while using Home Assistant or during development\nof a component, check the Home Assistant help section of our website for further help and information.\n\n"}, {"repo": "BVLC/caffe", "language": "C++", "readme": "\nCaffe\n\n\nCaffe is a deep learning framework made with expression, speed, and modularity in mind.\nIt is developed by Berkeley AI Research (BAIR)/The Berkeley Vision and Learning Center (BVLC) and community contributors.\nCheck out the project site for all the details like\n\nDIY Deep Learning for Vision with Caffe\nTutorial Documentation\nBAIR reference models and the community model zoo\nInstallation instructions\n\nand step-by-step examples.\nCustom distributions\n\nIntel Caffe (Optimized for CPU and support for multi-node), in particular Intel\u00ae Xeon processors.\nOpenCL Caffe e.g. for AMD or Intel devices.\nWindows Caffe\n\nCommunity\n\nPlease join the caffe-users group or gitter chat to ask questions and talk about methods and models.\nFramework development discussions and thorough bug reports are collected on Issues.\nHappy brewing!\nLicense and Citation\nCaffe is released under the BSD 2-Clause license.\nThe BAIR/BVLC reference models are released for unrestricted use.\nPlease cite Caffe in your publications if it helps your research:\n@article{jia2014caffe,\n  Author = {Jia, Yangqing and Shelhamer, Evan and Donahue, Jeff and Karayev, Sergey and Long, Jonathan and Girshick, Ross and Guadarrama, Sergio and Darrell, Trevor},\n  Journal = {arXiv preprint arXiv:1408.5093},\n  Title = {Caffe: Convolutional Architecture for Fast Feature Embedding},\n  Year = {2014}\n}\n\n\n"}, {"repo": "sdmg15/Best-websites-a-programmer-should-visit", "language": "None", "readme": "\n\n\n\n\n\n\nBest-websites-a-programmer-should-visit\nSome useful websites for programmers.\nWhen learning CS, there are some useful sites you must know to get always informed in order to do your technologies even better and learn new things. Here is a non exhaustive list of some sites you should visit. This list will get updated as soon as I can get another link, but you can also contribute by adding those you know \ud83d\ude09\nNote : Chinese Version\nIndex\n\nWhen you get stuck\nNews\nMagazines\nCoding practice for beginners\nCryptocurrency\nFor those who want to start a small project but can't find the ideas\nGeneral Coding advice\nCoding Style\nGeneral Tools\nInterview Preparation\nDocumentaries\nMOOCs for learning something new\nSites related to your preferred programming language (For me Java)\nLearn AI\nSeminar , research writing , talks etc\nEverything in one place\nYouTube Channels\nGood Articles\nBash and Shell scripting\nPodcasts\nBuilding a Simple Compiler/Interpreter\nWatch others code\nTutorials\nWhat should a programmer know\nCompetitive programming\nComputer Books\nVideo Tutorials\nOnline Compiler and Sharing Code snippets\nBlogs of Developers\nFor improving your English\nWhen you get bored from CS related stuff\nOpen Source Websites\nInternships\nJobs\n\nWhen you get stuck\n\nCodementor : A mentorship community to learn from fellow developers via live 1:1 help and more.\ndevRant : Community where you can rant and release your stress\nLearn Anything : Community curated knowledge graph of best paths for learning anything\nQuora : A place to share knowledge and better understand the world\nStack Overflow : subscribe to their weekly newsletter and any other topic which you find interesting\n\nNews\n\nACM TechNews : TechNews\nStratechery : Stratechery by Ben Thompson\nAlternativeTo : Crowdsourced software recommendations\nArs Technica : posts unique quality articles\nBetter Dev Links : Weekly links to help you become a better developer\nDevOpsLinks : An online community of thousands of developers and IT experts interested in DevOps\nGSMArena.com : news related to latest mobile phones and android.\nHacker News Digest : curated automatically, delivered as frequently as you want\nHacker News : news aggregator for programmers where civility is king, try a newsletter to get top news to your inbox:\nHacker Newsletter : curated by hand, delivered weekly\nHacker Noon : How hackers start their afternoons.\nHigh Scalability : Success stories of various companies on their apps, infra scaling.\nLobsters : Lobsters is a technology-focused community centered around link aggregation and discussion.\nproduct hunt : Discover your next favorite thing\nRecode : Tech news that focuses on the business of Silicon Valley\nReddit.com/r/programming : Subreddit with aggregated tech news and articles\nSlashdot : News, Social news (Originally \"News for Nerds. Stuff that Matters\")\nStackShare : See what tools are popular with developers and companies and read about their technology decisions\nTechCrunch : dedicated to obsessively profiling startups, reviewing new Internet products, and breaking tech news\nThe DEV Community : Where programmers share ideas and help each other grow.\nThe Verge : More product oriented tech news\nWCCF Tech : curated news related to Computer Hardware, Software and everything else in the Tech World.\nXDA : Android Developers News\nHashnode : Hashnode is a friendly and inclusive community for software developers\n\nMagazines\n\nMIT Technology Review : MIT's tech review magazine.\nNautilus : NewYorker for tech.\nLWN : Weekly news coverage of opensource technologies, programming, etc. ( Originally Linux Weekly News).\n\nCoding practice for beginners\n\nfreeCodeCamp : Learn to code and build projects for nonprofits. Build your full stack web development portfolio today\nBlackbird School : Learn to code online with our beginner-friendly platform.\nGlitch : Great place to play around with code in an easy-to-set-up environment.\nReddit.com/r/dailyprogrammer : interesting programming challenges where you can learn from looking at other's code , even if you are not able to solve code you can look at how others solved.\nProgramming by Doing : very good site for those who want to start with absolute basics\nCodeAbbey - a place where everyone can master programming : Best place to begin with problems that start at the easiest and gradually increase difficulty with each problem.\nExercism.io : download and solve practice problems in over 30 different languages, and share your solution with others.\nInterviewBit | Coding Interview Questions : Gamifies the experience of practicing for your interview and includes lots of sample problems to solve.\nkaran/Projects-Solutions : Solutions to most of the problems in the link above\nLod - Cloud : The Linking Open Data cloud diagram\nCave of programming : Learn to program, Upgrade your skills.\nVim adventures : Learn VIM by playing\nProgramming Tasks : large collection of small programs\nPramp : It's your turn to be the interviewer. when done, click on the swap roles button on the left\nPaqmind : Guides and challenges to learn programming\ngitignore : A collection of useful .gitignore templates for your project. Select from 442 Operating System, IDE, and Programming Language\nCodeacademy : Learn to code interactively, for free.\ntreehouse : The fast, easy, and affordable way to build your skills.\nGeeksforGeeks : Learn to code, Study for placement, Do competitive coding.\n\nCryptoCurrency\n\nBlockchain demo : A visual demo of Blockchain technology\nCoin demo : CryptoCurrency demo\nLopp Bitcoin Resources : Some Bitcoin Resources\nBlockchain Basics : Great introduction to blockchain\nGitCoin : Gitcoin is the easiest way to monetize or incentivize work in Open Source Software.\nLite Paper : Cryptocurrencies & Blockchain made effortless\n\nFor those who want to start a small project but can't find the ideas\n\nfreeCodeCamp | React project ideas : 27 fun app ideas you can build while learning React.\nmartyr2s-mega-project-ideas-list : contains about 125 project ideas from beginner to intermediate level.\nkaran/Projects : a large collection of small projects for beginners with\nWrong \"big projects\" for beginners : How to choose where to start\nvicky002/1000-Projects : Mega List of practical projects that one can solve in any programming language!\nreddit.com/r/AppIdeas : A place to discuss ideas for applications, for bored developers.\nreddit.com/r/SomebodyMakeThis : A home for ideas by people who lack time, money, or skills.\n\nGeneral Coding advice\n\n10-ways-to-be-a-better-developer : Ways to become a better dev!\nCode Review Best Practices : Kevin London's blog\nDesign Patterns : Design Patterns explained in detail with examples.\nDevelop for Performance : High-performance computing techniques for software architects and developers\nHow to become a programmer, or the art of Googling well : How to become a programmer, or the art of Googling well\nHow to escape tutorial purgatory as a new developer\u200a\u2014\u200aor at any time in your career : How to escape tutorial purgatory\nJS Project Guidelines : A set of best practices for JavaScript projects.\nLearn to Code With Me : A comprehensive site resource by Laurence Bradford for developers who aims to build a career in the tech world\nLessons From A Lifetime Of Being A Programmer : The Codist Header Lessons From A Lifetime Of Being A Programmer\nProgramming Principles : Categorized overview of Programming Principles & Patterns\nSoftware design pattern : The entire collection of Design Patterns.\nThings I Wish Someone Had Told Me When I Was Learning How to Code \u2014 Free Code Camp : What I\u2019ve learned from teaching others\nWhat every computer science major should know : The Principles of Good Programming\nWorking as a Software Developer : Henrik Warne's blog\nThe Open Web Application Security Project (OWASP) : OWASP is an open community dedicated to enabling organizations to conceive, develop, acquire, operate, and maintain applications that can be trusted.\n\nCoding Style\n\nAirbnb JS Style Guide : A mostly reasonable approach to JavaScript\nAirbnb Ruby Style Guide : A ruby style guide by Airbnb\nRuby coding style guide : A community-driven Ruby coding style guide\nAngular 1 Style Guide : Officially endorsed style guide by John Pappa\nCS 106B Coding Style Guide : must see for those who create spaghetti\nDebugging Faqs : Check out how to debug your program\nDirectory of CS Courses (many with online lectures) : Another online CS courses\nDirectory of Online CS Courses : Free online CS courses\nGood C programming habits. \u2022 /r/C_Programming : C programming habits to adopt\nGoogle C++ Style Guide\nHow to Report Bugs Effectively : Want to report a bug but you don't how? Check out this post\nWhat are some bad coding habits you would recommend a beginner avoid getting into? : Bad habits to avoid when you get start\nPEP8 - Style Guide for Python Code : Style Guide for Python Code\nStandard JS Style Guide : JavaScript style guide, with linter & automatic code fixer\nGoogle Python Style Guide : Google Python Style Guide\nAurelia Style Guide : An Aurelia style guide by Behzad Abbasi(Behzad888)\nSource Making : Design Patterns & Refactoring\n\nGeneral Tools\n\nCodePad : Quickly Conduct Coding Interviews and Phone Screen Interviews.\nCodePen : Front End Developer Playground & Code Editor in the Browser\nDevicons : Cheatsheet for devs icons\nregex101 : Online regex tester and debugger: PHP, PCRE, Python, Golang and JavaScript\nregexr : Another online tool to learn, build & test Regular Expressions\nWit AI : Natural Language for Developers\nSeymour : Live Programming for the Classroom\nCode share : Share code in real-time with other developers\nSolid Tools for Developers : Online debugging tools for developers and system administrators\nOS Query : Easily ask questions about your Linux, Windows, and macOS infrastructure\nLaunchPad : Appollo launchepad for testing GraphQl queries\nIDE Onlang : Write in one language and get the same result in other languages.\nPullRequest : Code review as a service from vetted, professional reviewers\nExtends Class : Online developer tools: REST and SOAP clients, SQLite browser, testers (Regex, XPath, JSONPath) and other tools (Encoders, Converters and formatters)\nEmailDrop: Emaildrop is a free disposable email provider.\n\nBash and Shell scripting\n\nAdvanced Bash-Scripting Guide : An in-depth exploration of the art of shell scripting\nBash Guide for Beginners : Bash Guide for Beginners Machtelt Garrels\nBash Programming : by Mike G mikkey at dynamo.com.ar\nBash Reference Manual : Bash Reference Manual\nBashGuide : BashGuide - Greg's Wiki\nConquering the Command Line : Unix and Linux Commands for Developers\nAirbon OS :  Private Google Docs Alternative\n\nInterview Preparation\n\n/r/cscareerquestions : Here's a pretty big list of programming interview questions I compiled while studying for big 4 interviews. I think you guys will find it useful!\n10 Frequently asked SQL Query Interview Questions\nA Collection of Quant Riddles With Answers\nAlgorithm design canvas\nAptitude Questions and Answers : Quant and aptitude preparation\nA site for technical interview questions, brain teasers, puzzles, quizzles : whatever the heck those are) and other things that make you think!\nBeehYve : Student crowdsourced resources for any topic\nBig collection of interview preparation links \u2022 /r/cscareerquestions\nBig-O Algorithm Complexity Cheat Sheet\nBIG O Misconceptions\nBitwise tricks\nChiperSoft/InterviewThis : questions to ask during on a interview to know more about the company.\nCode Project : For those who code!\nCore Java Interview questions - Interview question on each topic\nC PUZZLES, Some interesting C problems\nCS9: Problem-Solving for the CS Technical Interview\nDelightful Puzzles\nDetermining the big-O runtimes of these different loops? : really good stackoverflow question that covers basics of calculating runtime complexity.\nfive-essential-phone-screen-questions - steveyegge2\nFreshers Interviews\nGainlo : Mock interview from professionals\nGeeksforGeeks | A computer science portal for geeks : also subscribe to their feeds to get links to their new articles.\ngithub.com/odino/interviews : list of important questions for interview\nGive your r\u00e9sum\u00e9 a face lift\nHere's How to Prepare for Tech Interviews \u2022 /r/cscareerquestions\nHow to Answer \"Tell Me a Little About Yourself\" | The Art of Manliness\nHow to Answer the Toughest 40 Job Interview Questions | ICS Job Portal\nHow to Break Into the Tech Industry - a Guide to Job Hunting and Tech Interviews\nHow to interview\nHow to prepare for an interview - 1\nIIT Delhi Placement Experience\nsamwincott/Internship-Guide : An aggregrate of links related to internships.\nInterviewing At Jane Street : Interviewing At Jane Street\nInterview Archives - Java Honk\nJob Interview: How to Ace a Job Interview | The Art of Manliness\nJob interviews News, Videos, Reviews and Gossip - Lifehacker\nJob Interview Questions and Best Answers\nkimberli/interviews : study sheet for Interview\nLeetCode : A new way to learn.here you can prepare for your interview.\nMission-peace/interview problems : A large collection of coding interview problems\nPramp | A free on demand interview practice platform for Software Engineers : Practice coding interviews with real peers\nProblems | LeetCode OJ : Coding practice for interviews\nProgrammer And Software Interview Questions Answers\nReddit.com/user/ashish2199/m/puzzles : Logic Puzzles\nSQL interview questions : great SQL test\nSQL Joins explained using venn diagram\nsvozniuk/java-interviews : Java interview questions\nThe 25 most difficult HR questions\nTop 10 Algorithms for Coding Interview : Algorithms for Coding Interview\nUnix / Linux Cheat Sheet\nUnsolicited_advice_for_job_seekers_and_employers\nVisualising Data Structures and Algorithms through Animation\nWe Help Coders Get Hired : website offering courses on system design, interview strategies, soft skills etc\nwhat_are_your_goto_questions_for_the_do_you_have?\nWhy You Make Less Money \u2022 /r/cscareerquestions\nwu :: riddles(hard) : logic puzzles and riddles\n\nDocumentaries\n\nBreaking the Code : Biography of Alan Turing\nCracking The Code Interview : Cracking the Code Interview\nCracking the Coding Interview : Cracking the Coding Interview, Fullstack Speaker Series\nDownload: The True Story of the Internet : Play-list of discovery channel documentary on browser wars, dot com bubble and more.\nHarvard CS50 - Asymptotic Notation (video) : Asymptotic Notation explained by Harvard\nHow does CPU execute program (video) : Take a look at how a CPU executes programs\nMachine Code Instructions (video) : Code instructions\nMachine that Changed the World - a very good documentary about history of computers\n\nPart 1 is unavailable for free streaming due to widespread copyright claims.\nPart 2: Inventing the Future\nPart 3: The Paperback Computer\nPart 4: The Thinking Machine\nPart 5: The World at Your Fingertips\n\n\nMechanical Computer (All Parts) : a very good video from 1950s explaining how mechanical computers used to work without all the modern day electronics.\nProject Code Rush : The Beginnings of Netscape / Mozilla Documentary\nRevolution OS Linux Documentary : a film that traces the history of GNU, Linux, open source, and the free software movement.\nTeach Yourself Computer Science : Teach Yourself Computer Science\nThe Code : Story of Linux documentary\nTriumph of the Nerds : Play-list\nThe Internet's Own Boy : The Story of Aaron Swartz\n\nMOOCs for learning something new\n\nClass Central : a directory of 100,000+ student reviews of thousands of MOOCs.\nClasspert : a website that gathers MOOCs and online courses from several providers, focusing on computer science and data science courses.\nComputer Science Resources : list of MOOCs for autodidacts\nCoursera.org : Take the world's best courses, online.\nCS50 : A set of goods tutorials from cs50\nedX : Free Online Courses, Advance Your Career, Improve Your Life.\nKadenze | Creative Programming : Programming courses focused on art and creativity\nMIT OCW Electrical Engineering and Computer Science\nMOOC.fi : Free online courses from the University of Helsinki\nNPTEL : Free online courses by IIT with certificates\nprakhar1989/awesome-CS-courses : List containing large amount of CS courses\n\nSites related to your preferred programming language (For me C++)\n\nBest books for learning java must read : Get basics of Java\nBjarne Stroustrup's C++ Style and Technique FAQ : The C++ FAQ\nBjarne Stroustrup's FAQ : The C++ FAQ\nC++11 - the new ISO C++ standard : The C++11 FAQ\nCompilers (video) : A set of videos on how the GC works\nDeep Dive Java : Garbage Collection is Good!\nFree Online Chapters of Inside the Java Virtual Machine by Bill Venners : Java Corner\nHow Garbage Collection Works : Java memory management\nImplementation of Algorithms and Data Structures, Interview Questions and Answers\nIntelliJ Keyboard Shortcuts : Keyboard shortcuts to enhance your productivity when working in IntelliJ.\nJava Corner at Artima.com : Java Corner at Artima.com\nJava Lecture Notes : Java Student's Resource\nJava Off Heap : Java Off the Heap house\nJava Revisited : good for learning about Java Language and interview preparation.\nJava-source : Java source\nJava Visualizer : helps visualize references, values of variables, etc\nJournalDev - Java, Java EE, Android, Web Development Tutorials : Java, Java EE, Android, Web Development Tutorials\nLearning Java : a free online textbook for learning Java\nNetbeans Keyboard Shortcuts : Keyboard shortcuts to enhance your productivity when working in Netbeans.\nSearch Open Source Java API : view source of java library and learn how things are implemented.\nThe C++ Programming Language : The C++ Programming Language.\nThe Java Memory Model: The Java Memory Model\nThe Java\u2122 Tutorials : The best tutorials for Java.\nUnderstanding JVM Internals : Understanding JVM Internals\nwhat-is-garbage-collection : Demystify the garbage collection\nJavaWorld : Welcome to Javaworld\nXyzWs Java FAQs : large collection of java interview questions\nJavatPoint : Best website to get a basic Java programming tutorial\n\nLearn AI\n\naima : The leading textbook in Artificial Intelligence (4th most cited publication of the century). Includes Github repositories and more AI resources!\nfast.ai : Free practical deep learning course for coders without grad-level maths!\ngrakn.ai : The Database for AI\nRobots that learn : Robots that Learn\nUnsupervised Sentiment Neuron : Unsupervised Sentiment Neuron\nWhat's the difference between AI- DP and ML? : Difference artificial intelligence, machine-learning, deep-learning-ai\nTensorFlow : An open-source software library for Machine Intelligence\nScikit-learn : A Python module for machine learning build on top of SciPy\nDeepLearning.ai : Deep Learning course by Andrew Ng, Founder of coursera\nCoding the History of Deep Learning : Coding the History of Deep Learning\nSerpent AI : Game Agent Framework. Helping you create AIs / Bots to play any game you own! BETA\nBlog Floydhub : Colorizing B&W Photos with Neural Networks\nMLCOURSE.AI : Open Machine Learning course by OpenDataScience\n\nSeminar , research writing , talks etc\n\nAdvice on Research and Writing : A collection of advice about how to do research and how to communicate effectively (primarily for computer scientists).\nPHD MS Articles : articles and views\nSeminar and reports : Everyone must read this tiny book before writing the seminar report\nLatex reference : Arbitrary reference\nBegin Latex in minutes : Brief Intro to LaTeX for beginners that helps you use LaTeX with ease\nLshort : The Not So Short Introduction to LATEX2\u03b5\n\nEverything in one place\n\nreddit.com/user/ashish2199/m/cs_student_subs : a multisubreddit of all subreddits of topics related to computer science and programming.\nWebsites a programmer should visit : Response on Quora by ashish2199\nRico's cheatsheets : A set of good cheatsheets\nAPI Documentation : A one-place well known API Documentation with searchable interface\nMDN : A place with all the documentation of the web standards\ncheat.sh : curl cheat.sh \u2014 the only cheat sheet you need \u2014 instant answers on programming questions with curl\n\nYouTube Channels\n\nC++Now (BoostCon) : C++Now (previously BoostCon) conference\ncode::dive conference : code::dive conference organized by NOKIA Wroc\u0142aw Technology Center\nCoding Blocks : Tutorials, how to's, tips and tricks\nComputerphile : Must watch for every CS student\nComputerHistory : for those who like to know how we reached where we are.\nCppCon : C++ Conference\nFacebook Developers\nGoogle Developers\nGoogleTechTalks : videos on trending topics and cool stuff happening in the tech industry.\nGynvael Coldwin : Awesome reverse engineering and hacking(CTF) videocasts. Every wednesday are new live streams.\nHowToBecomeTV : contains good interviews of developers and people related to tech industry.\nJava : talks related to java\nJavaOne : Java Conference\njavidx9 : Game and graphics tutorials\nMeeting C++ YT Kanalseite : Talks on C++\nMIT OpenCourseWare : MIT OpenCourseWare for learning in depth algorithms, data structures and computer engineering\nNetflix UI Engineering : great videos to watch for web developers, mobile developers and those interested in some of Netflix's tech stack\nO'Reilly : interviews and talks of world's best technical writers.\nPlacement Grid : Interview and campus placement experience\nScott Meyers: Past Talks\nSiraj Raval : Artificial Intelligence and deep learning tutorials videos\nThinMatrix : blogs and tutorials developer making a 3d game in Java using opengl\nthoughtbot : talks on various topics\nTraversy Media :Web development and programming\nyegor256\nGOTO Conference : tech talks from the GOTO Conference by Developers for Developers\nfreeCodeCamp : freecodecamp youtube channel\nBo Qian : Learn advanced c++\nGeeksforgeeks : geeksforgeeks youtube\nHacker earth : Hacker earth youtube\nHak5 : Put together by a band of IT ninjas, security professionals and hardcore gamers, Hak5 isn't your typical tech show. We take on hacking in the old-school sense.\nKhan Academy : Khan Academy youtube\nLearnCode.academy : 100% FREE Web Development tutorials, web site design tutorials and more. Including, but not limited to: HTML, CSS, JavaScript, CSS Layouts, Responsive Design, React.js, Node.js, Angular.js, Docker, Dev\nRachit Jain : competetive programming\nsentdex : Python Programming tutorials, going further than just the basics. Learn about machine learning, finance, data analysis, robotics, web development, game development and more.\nSteve Griffith : The videos on this channel are largely about web design & development with a good dose of mobile development thrown in just for fun.\nThe Coding Train : In this YouTube channel I publish \"creative coding\" video tutorials every week. Subjects covered range from the basics of programming languages like JavaScript (with p5.js) and Java (with Processing) to generative algorithms like physics simulation, computer vision, and data visualization.\nTheHappieCat : Videos on technology, storytelling, and being happie.\nTutorials Point (India) Pvt. Ltd. : Tutorials Point originated from the idea that there exists a class of readers who respond better to online content and prefer to learn new skills at their own pace from the comforts of their drawing rooms. We bring simple to understand Text and Video tutorials at zero cost and cover many subjects including IT, Engineering, MBA, MCA, Management, Various Exams Preparation and Academic subjects. If you are really not extravagant and willing to save your money and time then we recommend you to try our tutorials.experience\nUdacity : Udacity, a pioneer in online education, is building \"University by Silicon Valley\", a new type of online university\nV. Anton Spraul : Videos for people who want to understand software better, including explanations of how software performs some of its most important jobs and tools programmers can use to to solve programming problems.\nxdadevelopers : You have found the world-famous XDA-Developers.com YouTube Channel, known as XDA TV. We cover Android and Windows Mobile from HTC, Samsung, Motorola, Sony, and more. Learn about rooting your Android, how to build applications, and more.\nKudVenkat : Microsoft .NET technologies and SQL Server tutorials.\nThe Net Ninja: Web development tutorials\n\nGood Articles\n\n40 Keys Computer Science Concepts Explained In Layman\u2019s Terms\nA Gentle Introduction To Graph Theory\nA programmer friendly language that compiles to Lua.\nA Software Developer\u2019s Reading List : Some good books and links in there.\nCode a TCP/IP stack : Let's code a TCP/IP stack, 5: TCP Retransmission\nCodewords.recurse : The language of choice\nData structure and Algorithms : List of some algorithms and datastructure with their solutions.\nDive into the byte code\nExpectations of a Junior Developer\nLinux Inside\nList of algorithms\nStep by Step Guide to Database Normalization: A guide to database normalization.\nThe Key To Accelerating Your Coding Skills\nUnicode\nWe are reinventing the retail industry through innovative technology\nWhat every programmer absolutely, positively needs to know about encodings and character sets to work with text\nWhat every programmer should know about memory - PDF\nWhy fast pages are important : Why App Speed Matters, Revenue\nqotoqot - improving-focus : How I got to 200 productive hours a month\nPixel Beat - Unix : Parallel processing with unix tools\nLearning Vim : What I Wish I Knew\nWrite a Kernel : Kernel 101 \u2013 Let\u2019s write a Kernel\nLearning JavaScript Design Patterns : online version of the Learning JavaScript Design Patterns published by O'Reilly, released by the author Addy Osmani under CC BY-NC-ND 3.0\nWorking with Webhooks : a comprehensive guide on webhooks\n\nPodcasts\n\nCoding Blocks : A podcast covering topics such as best programming practices, design patterns, coding for performance, object oriented coding, database design and implementation, tips, tricks and a whole lot of other things.\nDeveloper On Fire : A podcast that shares the humanity of developers and tells stories of some of the amazing people in software, hosted by Dave Rael.\nDeveloper Tea : A podcast for developers designed to fit inside your tea break.\nFront End Happy Hour : A podcast featuring a panel of Software Engineers from Netflix, Evernote, Atlassian & LinkedIn talking over drinks about all things Front End development.\nFull Stack Radio : Everything from product design and user experience to unit testing and system administration.\nGroovy Podcast : A podcast dedicated to the Groovy programming language and its ecosystem.\nIPhreaks : A weekly group discussion about iOS development and related technology by development veterans. We discuss Apple, tools, practices, and code.\nJavaScript Jabber : A weekly discussion about JavaScript, front-end development, community, careers, and frameworks.\nLearn To Code With Me Podcast : A Season by season of tech podcast episodes by Laurence Bradford with topics ranging from Career in Tech to lessons in doing tech business\nMS Dev Show : Jason Young and Carl Schweitzer talk about the latest in developer news covering topics such as the Azure cloud, Windows, Windows Phone, Visual Studio, and cross-platform development using the Microsoft platform.\nReact Native Radio : A weekly discussion of the tools, techniques, and technologies used to build mobile applications with JavaScript and React.\nSoft Skills Engineering : A weekly advice podcast for software developers about non-technical topics.\nSoftware Engineering Daily : A daily technical interview about software topics.\nSoftware Engineering Radio : A podcast targeted at the professional software developer. The goal is to be a lasting educational resource, not a newscast.\nSyntax : A Tasty Treats Podcast for Web Developers by Wes Bos & Scott Tolinski.\nThe Bike Shed : Guests discuss their development experience and challenges with Ruby, Rails, JavaScript, and others.\nThe Changelog : A weekly conversation that gets to the heart of open source technologies and the people who create them.\nThe Cynical Developer : A podcast that aims to help you to improve your development knowledge and career, through explaining the latest and greatest in development technology and providing you with what you need to succeed as a developer. Covering Desktop, web and mobile development, mainly around the .Net Stack but often looking into other software and frameworks.\nBlockchain Insider by 11:FS : Podcast to learn about the Blockchain Technology\nUnchained Podcast to learn about the Blockchain Technology\nTalk python to me Podcast to learn about Python through interviews and discussions\nPython bytes Podcast to learn about the latest happenings and trends in Python\n\nBuilding a Simple Compiler/Interpreter\n\n\u26c4\ufe0f Possibly the smallest compiler ever : This is an ultra-simplified example of all the major pieces of a modern compiler written in easy to read JavaScript.\nAwesome Compilers : Curated list of awesome resources on Compilers, Interpreters and Runtimes.\nGrowing a compiler : Learn how to grow a compiler\nLet\u2019s Build A Simple Interpreter. Part 1. : Try to demystify compilers by building one\nResources for Amateur Compiler Writers : Resources for Amateur Compiler Writers\nStructure and Interpretation of Computer Programs : Structure and Interpretation of Computer Programs\nWriting My First Compiler : Write out your first compiler\nAn Intro to Compilers : How to Speak to Computers, Pre-Siri\nWrite your own compiler : How to write your own compiler\nCrafting Interpreters A handbook for writing interpreters, first implementing a tree walking interpreter and later a bytecode virtual machine\n\nTutorials\n\nA Hacker's Guide to Git : for those wanting to learn git with a solid foundation\nBest Of - Gustavo Duarte : contains articles on various topics\nCMSI 281: Data Structures : light weight introduction to DS\nCollecting all the cheat sheets : cheat sheets for lots of programming languages\nC Programming\nProgramming Community Curated C++ Resources : resources recommended by developers\nDeep C : very good presentation on C language\nDesign Patterns: Elements of Reusable Object-Oriented Software : aka the \"Gang Of Four\" book, or GOF\nDynamic programming - PrismoSkills : very good resource if want to learn how to solve DP problems.\nGit from the inside out\nHead First Design Patterns\nHow to Program in C++ : Good resource for revising C++ topics and STL\nhttp://www.mysqltutorial.org/\nindradhanush tutotials : Writing a Unix Shell\nIntroduction to C Programming\nLearn UNIX in 10 minutes\nLearning the shell.\nLinux Journey : good site for learning linux\nLinux Tutorial : good resource for learning Linux\nMore about Github-flavored markdown\nMySQL Essentials\nOpen Data Structures : Excellent resource for learning about DS and algos, provides code in various languages C++, Java and pseudocode.\nOS Course Notes : Chapter wise course notes according to Galvin's book\nProgramming, Web Development, and DevOps news, tutorials and tools for beginners to experts\nSQL (Structured Query Language) in one page : SQL.SU : a very good SQL cheat sheet\nSubtle | Poor Man's CI : Learn how continuous integration platforms work under the hood, by building one of your own on top of git with Node.js\nTCP/IP Illustrated Series\nThe Bash Guide : very good guide for learning the Bash Shell\nThe Descent to C : for those moving to C from some higher programming language like java or python.\nThe Linux Command Line: A Complete Introduction\nThe Unix Programming Environment\nTopCoder Tutorials\nTutorialspoint : Text and Video Tutorials for UPSC, IAS, PCS, Civil Services, Banking, Aptitude, Questions, Answers, Explanation, Interview, Entrance, Exams, Solutions\nUNIX and Linux System Administration Handbook, 4th Edition\nVimTutor+ : Learn VIM from the browser.\nW3Schools Online Web Tutorials\nUnix Shell : Unix shell scripting with ksh/bash\nSnap SVG : The JavaScript SVG library for the modern web\nvim.rtorr : Vim Cheat Sheet\nOpen Vim :  Interactive Vim tutorials\nAlgorithm Using Dynamic Programming and A : Designing a Tree Diff Algorithm Using Dynamic Programming and A*\nLearn Python : Free Interactive Python Tutorial\nC++17 : A guide of C++17\nThe Bash Academy : The Bash Academy is an initiative to promote the bash shell language and educate people on its use.\nLearn Shell Programming : This website is intended for everyone who wishes to learn programming with Unix/Linux shell interpreters.\nJava tutorial : A programming community & a great place to find the best online programming courses and tutorials.\nExplain Shell: Match command-line arguments to their help text\nSpeaking io : Tips for public speaking\n\nWatch others code\n\nEducation Ecosystem : screencast of people building application, websites, games, etc.\nTwitch.tv : The programming community of twitch.\n\nWhat should a programmer know\n\nGitHub.com Build software better, together : Place to showcase your project and collaborate with others. (Must know Git in order to use it effectively)\nGitlab offers free unlimited (private) repositories and unlimited collaborators\nProgrammer Competency Matrix : article for knowing what our level as a programmer is.\n\nCompetitive programming\n\nTopic Wise Problem For Competitive Programmer : Topic wise Practise Problem\nArchived Problems - Project Euler : Problems Archives\nArt of Problem Solving : Is math class too easy for you? You've come to the right place!\nCodeChef : The only programming contests Web 2.0 platform\nCodefights : Test your coding skills\nCodeforces : Programming Competition,Programming Contest,Online Computer Programming\nCodewars : Rank up by completing code kata\nCodility : Verify and improve coding skills\nCodingame : Learn coding through games and challenges!\nFacebook Hacker Cup : Facebook's Programming Contest, past problems solutions and FAQ\nGoogle Code Jam Practice and : past contest problems for practice\nHackerEarth - Programming challenges and Developer jobs\nHackerRank : Practice coding. Compete. Find jobs.\nPKU ACM ICPC Practice problems : Judge online for ACMACPC\nSphere Online Judge (SPOJ) : Become a true programming master Learn how to code and build efficient algorithms\nTopcoder : Deliver Faster through Crowdsourcing\nURI Online Judge : Practice coding, Compete and be a better coder.\nUVa Online Judge : hundreds of problems supporting multiple languages.\nWakaTime : leaderboards of coding metrics collected via editor plugins\n\nComputer Books\n\nBecome a Programmer, Motherfucker (list of books) : Exhaustive list of books from Zed A. Shaw.\nBest books for GATE CSE\ncses.fi/book.html\ngithub.com/vhf/free-programming-books : More than 500 free ebooks on almost any language you can think of\nGitBook : GitBook helps your team write, collaborate and publish content online.\nData Science course : Python Data Science Handbook\nGoal Kicker : Programming Notes for Professionals books\nThe GraphQL Guide : The complete guide to GraphQL, the new REST \u2728\n\nVideo Tutorials\n\ncodedamn : front end web dev tutorials\nCode School : A PluralSight Company and an Interactive learning destination for aspiring and experienced Developers\nCodingMadeEasy : C++ tutorials\nCS1: Higher Computing - Richard Buckland UNSW : a very good introductory CS course\nDerek Banas : good quality tutorials\nDesign and Analysis of Algorithms\nDevTips : web dev tutorials\nFreeCourses : Free courses about programming\nKathryn Hodge : Has good videos for beginners\nmycodeschool : Data structures and algorithms tutorials\nPluralsight : Learn Software Development, DevOps and Data Science through multiple short courses\nthenewboston : good but with too much talk as compared to actual content\nTushar Roy : Algorithm and Data structure tutorial by an Indian Youtuber.\nVim Tutorial Videos - Flarfnoogins : good video tutorial for learning vim\nXDA-University - Helping You Learn Android Development\nKhan Academy : learn about computer science for free\nFunctional programming : John Carmack on Functional Programming (2013)\nVideo about vims : A serie of tutorials about Vim\n\nOnline Compiler and Sharing Code snippets\n\nCodePad : Code editor to try, test and run 25+ languages\nCodesandbox.io : CodeSandbox makes it easier to create, share and reuse React projects with others.\nGodbolt.org : Excellent tool for exploring the assembly output of different compilers with and without optimization.\nIdeone.com : online compiler and debugging tool for more than 60 programming languages\nJSFiddle : Test your JavaScript, CSS, HTML or CoffeeScript with online code editor\nJSBin : Front end playground, Output is not framed, so it allow you to share those snippet that will break inside iframe.\nJudge0 IDE : Online compiler with 40+ interpreters and compilers.\nPastebin.com : Pastebin can store texts like code, notes, and snippets online for a set period of time which can be shared instantly.\nC9.io : Your development environment, in the cloud\nGithub Gist : Instantly share code, notes, and snippets.\nCoder : A Web-based development environment using Visual Studio Code as code editor\n\nBlogs of Developers\n\nAlgo-Geeks : Programming Puzzles, Math Tricks, Algorithms etc\nAmit Merchant : Tutorials, tips & tricks and rants about programming and design.\nAndy Heathershaw : Personal website and blog of software developer Andy Heathershaw\nAntonio081014's Algorithms Codes : The world is under the RULE.\nArchives \u2014 Ask a Manager : HR related stuff\nArmin Ronacher's Thoughts and Writings : blog on Python and open source\nblog.might.net : the blog of might dot net\nBrendon Gregg - Linux Kernel Dev : the blog of Brendon D. Gregg\nClean Coder Blog : blog of author of book \"Clean Code\"\nCodeAhoy : Blog on software and human factors. 100% Tested on Humans.\nCoderGears Blog Insights from : the CoderGears Team\nCoding Geek - A blog about IT, programming and Java : A blog about IT, programming and Java\nCoding Horror : one the best coding blog\nCSE Blog : quant, math, computer science puzzles\nDaedtech.com : Stories about software\nDan Dreams of Coding\nDaniel Lemire's Blog : Daniel Lemire's blog\nEli Bendersky : everything from Python to LLVM\nGeek Land : My precious collectibles\nHackerEarth Blog : The hackerearth blog\nIT Enthusiast : IT Enthusiast\nJoel on Software : The blog of the CEO of StackOverflow\nLate Developer :  Random thoughts of an old C++ guy\n1ucasvb's laboriginal math and physics visualization : Lucas Vieira Barbosa's lab original math and physics visualization\nMath \u2229 Programming : Math \u2229 Programming\nMy Tech Interviews : PREPARE FOR A TECHNICAL INTERVIEW\nPaul Graham Essays : Paul Grahan Essays\nProgramming Blog : programming blog of Yegor Bugayenko\nProgramming in the 21st Century : programming in the twenty-first century\nrudhakar Rayavaram : Sudhakar Rayavaram Blog's\nRunhe Tian Coding Practice : Technical interview questions from Apple, Google, Facebook, Amazon and Microsoft\nSmall Programming Challenges and Puzzles : Project Nayuki\nstevehanov.ca : I know how to make and sell software online, and I can share my tips with you.\nTakipi Blog : mainly focuses on Java and JVM languages\nXDA - Android Developer Forum : Android Open Source Developers Forum\nThe Net Ninja: Web development tutorials\n\nFor improving your English\n\nEnglishclub.com/learn-english\nGuide to Grammar and Writing : for those who want to improve their english language skills\nPunctuation and Capitalization Rules\nPurdue University Online Writing Lab (OWL)\nQuia - English\n\nWhen you get bored from CS related stuff\n\nBarcroft TV : Daily short documentaries about the incredible variety of people that make up the world\nBig Think : Expert driven, actionable, educational content, featuring experts ranging from Bill Clinton to Bill Nye\nColdFusion : Past, present, and future of technology\nCrashCourse : small courses on various subjects\nEvery Frame a Painting : High quality analysis of films and filmmaking\nNational Geographic : High volume of high quality content from all over the world\nr/ProgrammerHumor : Subreddit dedicated to exactly what it sounds like\nReddit the front page of the internet : Where free time goes to die\nRidddle : A youtube channel about science, mainly, but not only, the universe and space.\nRegex Crossword : A simple crossword game where clues are regex that must be mached.\nSciShow : Answers to interesting questions that you've always wondered about\nSmarterEveryDay : Lots of amazing scientific information about the world around us, usually captured with a high-speed camera\nTED : Great talks about technology, entertainment, and design\nTestTube News : Interesting information about news from around the world\nHow to live for long time ? : The secret of longevity\nVsauce : The best youtube channel\nOx A cuk : How to live a happy life\nlonelyspeck : Expose to the Right for Astrophotography in Light Pollution \u2013 Palos Verdes, Los Angeles, California\n\nOpen Source Websites\n\nOpen Hatch : OpenHatch is a non-profit dedicated to matching prospective free software contributors with communities, tools, and education.\nSource Forge : SourceForge hosts nearly 280,000 projects (at last count). It serves more than 2 million downloads a day and includes apps and tools in a wide variety of categories.\nGoogle Code : Google offers free hosting for open source projects using the Subversion or Mercurial version control systems. It offers 2 GB of storage, integrated code review tools, a wiki, and an issue tracker. The Google Code site also provides links to Google's many publicly available APIs and other developer tools.\nLaunch Pad : Maintained by Canonical, LaunchPad is particularly targeted at projects that run on Ubuntu. It provides hosting for more than 21,000 projects that use the Bazaar version control system.\nGoogle Open Source : Google Open Source\nRed Hat Developer : The world's leading provider of open source solutions\nOpen Source : Open Source\nGoogle Summer of Code : Google Summer of Code is a global program focused on bringing more student developers into open source software development. Students work with an open source organization on a 3 month programming project during their break from school.\nOpen Source Web Design : Open Source Web Design is a platform for sharing standards-compliant free web design templates. We give web publishers a voice through good design.\nMozilla Winter of Security : The Winter of Security (MWOS) is a program organized by Mozilla's Security teams to involve students with Security projects. Students who have to perform a semester project as part of their university curriculum can apply to one of the MWOS project.\nEclipse Lab : Eclipse Labs is a community of open source projects that build technology based on the Eclipse platform. It provides the infrastructure services typically required by open source projects, such as code repositories, bug tracking, project web sites/wiki. Eclipse Labs is hosted by Google Code Project Hosting, so it will be very familiar to developers already using Google Code Project Hosting.\nBit Bucket : Like GitHub, BitBucket hosts both public and private projects. On this site, open source projects and private projects with fewer than five users are free. It hosts more than 48,000 repositories, many of which are searchable on the site.\nMedia Wiki : MediaWiki is a free software open source wiki package written in PHP, originally for use on Wikipedia. It is now also used by several other projects of the non-profit Wikimedia Foundation and by many other wikis, including this website, the home of MediaWiki.\nCode Curiosity : CodeCuriosity is a platform that encourages contributions to open source. Everyone is rewarded for their efforts, no matter how big or small they are.\nCode Triage : Help out your favorite open source projects and become a better developer while doing it.\nIssue Hub : Contribute to Open Source. Search issue labels to find the right project for you\nUp for Grabs : This is a list of projects which have curated tasks specifically for new contributors. These are a great way to get started with a project, or to help share the load of working on open source projects.\nFirst Timers Only : Contributing to open source for the first time can be scary and a little overwhelming. Perhaps you\u2019re a Code Newbie or maybe you\u2019ve been coding for a while but haven\u2019t found a project you felt comfortable contributing to.\nYour First PR : Your First PR helps you get started contributing to Open Source by showcasing great starter issues on GitHub and elsewhere.\n\nInternships\n\nChegg : It is an awesome resource for finding\ninternships, scholarships, tutors, etc.\nInternshala : You can search internships here\naccording to your skill sets for your interested location. It also helps you\nin getting a good PPO offer from the company.\nLetsintern : Get a smart and challenging\ninternship for you from the LetsIntern.\nPerfectIntern: Get help finding a paid\ninternship, resume prep, interview prep, and more!\n\nJobs\n\nAngelList : AngelList is a\nwebsite for startups, angel investors, and job-seekers\nlooking to work at startups.\nCareerBuilder : CareerBuilder is one of\nthe largest job boards, providing job listings, resume posting, and career\nadvice and resources to job seekers.\nDice : Dice is the leading site for tech job seekers.\nYou can search by company, job title, keyword, employment type, and location.\nDevsnap : Devsnap is a job aggregator for developer jobs.\nGlassdoor : Find the job that's right for you.\nSearch all the open positions on the web. Get your own personalized salary estimate.\nIAESTE : Find more and amazing international internships\nand jobs.\nIndeed : Find international jobs on Indeed and get\na market salary for your dedication and devotion.\nInstahyre : Your dream job is now here. Showcase\nyourself to a curated list of top companies. Complete privacy and no spam.\nMentat : Get your dream job 10x faster. Never apply\nfor a job ever again, talk directly to decision makers and hiring managers.\nThe Muse : Find everything you need to succeed from\ndream jobs to career advice. You can do a lot here on The Muse like exploring\ncompanies, browsing jobs, career advice,  discover careers,  career coaching. Try it.\nPaysa : Paysa helps you in finding new and\ninteresting jobs according to your wish.\nSimplyHired : Simply Hired is a free job search\nengine (and mobile app) that takes the hassle out of getting hired and provides\nyou with all the information you need to make a sound career move.\nSwissDev Jobs : Tech job board for Software Engineers that want to work in Switzerland.\nUndercover Recruiter : Become Recruiter,\nCandidate or Employer. You can get your job easily here.\nWho is Hiring : An awesome resource for searching,\nfiltering and finding new and attractive jobs according to your needs and\ninterests.\nZipRecruiter : The Smartest Way to Get Hired.\nRemoteML : Remote Machine Learning jobs.\nLinkedin jobs : Very nice research tool for programming jobs\n\nSpecial Thanks\n\nPlease consider a github star if you find this useful and/or consider making a contribution.\nA special thanks to Ashish Padalkar (@ashish2199) for contributing a great amount of data and structure to the initial repository Original Post.\n\n\n"}, {"repo": "discourse/discourse", "language": "Ruby", "readme": "\n\nDiscourse is the 100% open source discussion platform built for the next decade of the Internet. Use it as a:\n\nmailing list\ndiscussion forum\nlong-form chat room\n\nTo learn more about the philosophy and goals of the project, visit discourse.org.\nScreenshots\n\n\n\n\n\nBrowse lots more notable Discourse instances.\nDevelopment\nTo get your environment setup, follow the community setup guide for your operating system.\n\nIf you're on macOS, try the macOS development guide.\nIf you're on Ubuntu, try the Ubuntu development guide.\nIf you're on Windows, try the Windows 10 development guide.\n\nIf you're familiar with how Rails works and are comfortable setting up your own environment, you can also try out the Discourse Advanced Developer Guide, which is aimed primarily at Ubuntu and macOS environments.\nBefore you get started, ensure you have the following minimum versions: Ruby 2.5+, PostgreSQL 10+, Redis 2.6+. If you're having trouble, please see our TROUBLESHOOTING GUIDE first!\nSetting up Discourse\nIf you want to set up a Discourse forum for production use, see our Discourse Install Guide.\nIf you're looking for business class hosting, see discourse.org/buy.\nRequirements\nDiscourse is built for the next 10 years of the Internet, so our requirements are high:\n\n\n\nBrowsers\nTablets\nPhones\n\n\n\n\nSafari 10+\niPad 4+\niOS 10+\n\n\nGoogle Chrome 57+\nAndroid 4.4+\nAndroid 4.4+\n\n\nInternet Explorer 11+\n\n\n\n\nFirefox 52+\n\n\n\n\n\nBuilt With\n\nRuby on Rails \u2014 Our back end API is a Rails app. It responds to requests RESTfully in JSON.\nEmber.js \u2014 Our front end is an Ember.js app that communicates with the Rails API.\nPostgreSQL \u2014 Our main data store is in Postgres.\nRedis \u2014 We use Redis as a cache and for transient data.\n\nPlus lots of Ruby Gems, a complete list of which is at /master/Gemfile.\nContributing\n\nDiscourse is 100% free and open source. We encourage and support an active, healthy community that\naccepts contributions from the public \u2013 including you!\nBefore contributing to Discourse:\n\nPlease read the complete mission statements on discourse.org. Yes we actually believe this stuff; you should too.\nRead and sign the Electronic Discourse Forums Contribution License Agreement.\nDig into CONTRIBUTING.MD, which covers submitting bugs, requesting new features, preparing your code for a pull request, etc.\nAlways strive to collaborate with mutual respect.\nNot sure what to work on? We've got some ideas.\n\nWe look forward to seeing your pull requests!\nSecurity\nWe take security very seriously at Discourse; all our code is 100% open source and peer reviewed. Please read our security guide for an overview of security measures in Discourse, or if you wish to report a security issue.\nThe Discourse Team\nThe original Discourse code contributors can be found in AUTHORS.MD. For a complete list of the many individuals that contributed to the design and implementation of Discourse, please refer to the official Discourse blog and GitHub's list of contributors.\nCopyright / License\nCopyright 2014 - 2019 Civilized Discourse Construction Kit, Inc.\nLicensed under the GNU General Public License Version 2.0 (or later);\nyou may not use this work except in compliance with the License.\nYou may obtain a copy of the License in the LICENSE file, or at:\nhttps://www.gnu.org/licenses/old-licenses/gpl-2.0.txt\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\nDiscourse logo and \u201cDiscourse Forum\u201d \u00ae, Civilized Discourse Construction Kit, Inc.\nDedication\nDiscourse is built with love, Internet style.\n\n"}, {"repo": "karan/Projects", "language": "None", "readme": "\nMega Project List\nA list of practical projects that anyone can solve in any programming language (See solutions). These projects are divided in multiple categories, and each category has its own folder.\nTo get started, simply fork this repo.\nCONTRIBUTING\nSee ways of contributing to this repo. You can contribute solutions (will be published in this repo) to existing problems, add new projects or remove existing ones. Make sure you follow all instructions properly.\nSolutions\nYou can find implementations of these projects in many other languages by other users in this repo.\nCredits\nThis repo was compiled by Karan Goel.\nProblems are motivated by the ones shared at:\n\nMartyr2\u2019s Mega Project List\nRosetta Code\n\nTable of Contents\n\nNumbers\nClassic Algorithms\nGraph\nData Structures\nText\nNetworking\nClasses\nThreading\nWeb\nFiles\nDatabases\nGraphics and Multimedia\nSecurity\n\nNumbers\nFind PI to the Nth Digit - Enter a number and have the program generate PI up to that many decimal places. Keep a limit to how far the program will go.\nFind e to the Nth Digit - Just like the previous problem, but with e instead of PI. Enter a number and have the program generate e up to that many decimal places. Keep a limit to how far the program will go.\nFibonacci Sequence - Enter a number and have the program generate the Fibonacci sequence to that number or to the Nth number.\nPrime Factorization - Have the user enter a number and find all Prime Factors (if there are any) and display them.\nNext Prime Number - Have the program find prime numbers until the user chooses to stop asking for the next one.\nFind Cost of Tile to Cover W x H Floor - Calculate the total cost of tile it would take to cover a floor plan of width and height, using a cost entered by the user.\nMortgage Calculator - Calculate the monthly payments of a fixed term mortgage over given Nth terms at a given interest rate. Also figure out how long it will take the user to pay back the loan. For added complexity, add an option for users to select the compounding interval (Monthly, Weekly, Daily, Continually).\nChange Return Program - The user enters a cost and then the amount of money given. The program will figure out the change and the number of quarters, dimes, nickels, pennies needed for the change.\nBinary to Decimal and Back Converter - Develop a converter to convert a decimal number to binary or a binary number to its decimal equivalent.\nCalculator - A simple calculator to do basic operators. Make it a scientific calculator for added complexity.\nUnit Converter (temp, currency, volume, mass and more) - Converts various units between one another. The user enters the type of unit being entered, the type of unit they want to convert to and then the value. The program will then make the conversion.\nAlarm Clock - A simple clock where it plays a sound after X number of minutes/seconds or at a particular time.\nDistance Between Two Cities - Calculates the distance between two cities and allows the user to specify a unit of distance. This program may require finding coordinates for the cities like latitude and longitude.\nCredit Card Validator - Takes in a credit card number from a common credit card vendor (Visa, MasterCard, American Express, Discoverer) and validates it to make sure that it is a valid number (look into how credit cards use a checksum).\nTax Calculator - Asks the user to enter a cost and either a country or state tax. It then returns the tax plus the total cost with tax.\nFactorial Finder - The Factorial of a positive integer, n, is defined as the product of the sequence n, n-1, n-2, ...1 and the factorial of zero, 0, is defined as being 1. Solve this using both loops and recursion.\nComplex Number Algebra - Show addition, multiplication, negation, and inversion of complex numbers in separate functions. (Subtraction and division operations can be made with pairs of these operations.) Print the results for each operation tested.\nHappy Numbers - A happy number is defined by the following process. Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers, while those that do not end in 1 are unhappy numbers. Display an example of your output here. Find first 8 happy numbers.\nNumber Names - Show how to spell out a number in English. You can use a preexisting implementation or roll your own, but you should support inputs up to at least one million (or the maximum value of your language's default bounded integer type, if that's less). Optional: Support for inputs other than positive integers (like zero, negative integers, and floating-point numbers).\nCoin Flip Simulation - Write some code that simulates flipping a single coin however many times the user decides. The code should record the outcomes and count the number of tails and heads.\nLimit Calculator - Ask the user to enter f(x) and the limit value, then return the value of the limit statement Optional: Make the calculator capable of supporting infinite limits.\nFast Exponentiation - Ask the user to enter 2 integers a and b and output a^b (i.e. pow(a,b)) in O(lg n) time complexity.\nClassic Algorithms\nCollatz Conjecture - Start with a number n > 1. Find the number of steps it takes to reach one using the following process: If n is even, divide it by 2. If n is odd, multiply it by 3 and add 1.\nSorting - Implement two types of sorting algorithms: Merge sort and bubble sort.\nClosest pair problem - The closest pair of points problem or closest pair problem is a problem of computational geometry: given n points in metric space, find a pair of points with the smallest distance between them.\nSieve of Eratosthenes - The sieve of Eratosthenes is one of the most efficient ways to find all of the smaller primes (below 10 million or so).\nGraph\nGraph from links - Create a program that will create a graph or network from a series of links.\nEulerian Path - Create a program which will take as an input a graph and output either a Eulerian path or a Eulerian cycle, or state that it is not possible.  A Eulerian Path starts at one node and traverses every edge of a graph  through every node and finishes at another node.  A Eulerian cycle is a eulerian Path that starts and finishes at the same node.\nConnected Graph - Create a program which takes a graph as an input and outputs whether every node is connected or not.\nDijkstra\u2019s Algorithm - Create a program that finds the shortest path through a graph using its edges.\nMinimum Spanning Tree - Create a program which takes a connected, undirected graph with weights and outputs the minimum spanning tree of the graph i.e., a\nsubgraph that is a tree, contains all the vertices, and the sum of its weights is the least possible.\nData Structures\nInverted index - An Inverted Index is a data structure used to create full text search. Given a set of text files, implement a program to create an inverted index. Also create a user interface to do a search using that inverted index which returns a list of files that contain the query term / terms. The search index can be in memory.\nText\nFizz Buzz - Write a program that prints the numbers from 1 to 100. But for multiples of three print \u201cFizz\u201d instead of the number and for the multiples of five print \u201cBuzz\u201d. For numbers which are multiples of both three and five print \u201cFizzBuzz\u201d.\nReverse a String - Enter a string and the program will reverse it and print it out.\nPig Latin - Pig Latin is a game of alterations played on the English language game. To create the Pig Latin form of an English word the initial consonant sound is transposed to the end of the word and an ay is affixed (Ex.: \"banana\" would yield anana-bay). Read Wikipedia for more information on rules.\nCount Vowels - Enter a string and the program counts the number of vowels in the text. For added complexity have it report a sum of each vowel found.\nCheck if Palindrome - Checks if the string entered by the user is a palindrome. That is that it reads the same forwards as backwards like \u201cracecar\u201d\nCount Words in a String - Counts the number of individual words in a string. For added complexity read these strings in from a text file and generate a summary.\nText Editor - Notepad style application that can open, edit, and save text documents. Optional: Add syntax highlighting and other features.\nRSS Feed Creator - Given a link to RSS/Atom Feed, get all posts and display them.\nQuote Tracker (market symbols etc) - A program which can go out and check the current value of stocks for a list of symbols entered by the user. The user can set how often the stocks are checked. For CLI, show whether the stock has moved up or down. Optional: If GUI, the program can show green up and red down arrows to show which direction the stock value has moved.\nGuestbook / Journal - A simple application that allows people to add comments or write journal entries. It can allow comments or not and timestamps for all entries. Could also be made into a shout box. Optional: Deploy it on Google App Engine or Heroku or any other PaaS (if possible, of course).\nVigenere / Vernam / Ceasar Ciphers - Functions for encrypting and decrypting data messages. Then send them to a friend.\nRegex Query Tool - A tool that allows the user to enter a text string and then in a separate control enter a regex pattern. It will run the regular expression against the source text and return any matches or flag errors in the regular expression.\nNetworking\nFTP Program - A file transfer program which can transfer files back and forth from a remote web sever.\nBandwidth Monitor - A small utility program that tracks how much data you have uploaded and downloaded from the net during the course of your current online session. See if you can find out what periods of the day you use more and less and generate a report or graph that shows it.\nPort Scanner - Enter an IP address and a port range where the program will then attempt to find open ports on the given computer by connecting to each of them. On any successful connections mark the port as open.\nMail Checker (POP3 / IMAP) - The user enters various account information include web server and IP, protocol type (POP3 or IMAP) and the application will check for email at a given interval.\nCountry from IP Lookup - Enter an IP address and find the country that IP is registered in. Optional: Find the Ip automatically.\nWhois Search Tool - Enter an IP or host address and have it look it up through whois and return the results to you.\nSite Checker with Time Scheduling - An application that attempts to connect to a website or server every so many minutes or a given time and check if it is up. If it is down, it will notify you by email or by posting a notice on screen.\nClasses\nProduct Inventory Project - Create an application which manages an inventory of products. Create a product class which has a price, id, and quantity on hand. Then create an inventory class which keeps track of various products and can sum up the inventory value.\nAirline / Hotel Reservation System - Create a reservation system which books airline seats or hotel rooms. It charges various rates for particular sections of the plane or hotel. Example, first class is going to cost more than coach. Hotel rooms have penthouse suites which cost more. Keep track of when rooms will be available and can be scheduled.\nCompany Manager - Create an hierarchy of classes - abstract class Employee and subclasses HourlyEmployee, SalariedEmployee, Manager and Executive. Every one's pay is calculated differently, research a bit about it.\nAfter you've established an employee hierarchy, create a Company class that allows you to manage the employees. You should be able to hire, fire and raise employees.\nBank Account Manager - Create a class called Account which will be an abstract class for three other classes called CheckingAccount, SavingsAccount and BusinessAccount. Manage credits and debits from these accounts through an ATM style program.\nPatient / Doctor Scheduler - Create a patient class and a doctor class. Have a doctor that can handle multiple patients and setup a scheduling program where a doctor can only handle 16 patients during an 8 hr work day.\nRecipe Creator and Manager - Create a recipe class with ingredients and a put them in a recipe manager program that organizes them into categories like deserts, main courses or by ingredients like chicken, beef, soups, pies etc.\nImage Gallery - Create an image abstract class and then a class that inherits from it for each image type. Put them in a program which displays them in a gallery style format for viewing.\nShape Area and Perimeter Classes - Create an abstract class called Shape and then inherit from it other shapes like diamond, rectangle, circle, triangle etc. Then have each class override the area and perimeter functionality to handle each shape type.\nFlower Shop Ordering To Go - Create a flower shop application which deals in flower objects and use those flower objects in a bouquet object which can then be sold. Keep track of the number of objects and when you may need to order more.\nFamily Tree Creator - Create a class called Person which will have a name, when they were born and when (and if) they died. Allow the user to create these Person classes and put them into a family tree structure. Print out the tree to the screen.\nThreading\nCreate A Progress Bar for Downloads - Create a progress bar for applications that can keep track of a download in progress. The progress bar will be on a separate thread and will communicate with the main thread using delegates.\nBulk Thumbnail Creator - Picture processing can take a bit of time for some transformations. Especially if the image is large. Create an image program which can take hundreds of images and converts them to a specified size in the background thread while you do other things. For added complexity, have one thread handling re-sizing, have another bulk renaming of thumbnails etc.\nWeb\nPage Scraper - Create an application which connects to a site and pulls out all links, or images, and saves them to a list. Optional: Organize the indexed content and don\u2019t allow duplicates. Have it put the results into an easily searchable index file.\nOnline White Board - Create an application which allows you to draw pictures, write notes and use various colors to flesh out ideas for projects. Optional: Add feature to invite friends to collaborate on a white board online.\nGet Atomic Time from Internet Clock - This program will get the true atomic time from an atomic time clock on the Internet. Use any one of the atomic clocks returned by a simple Google search.\nFetch Current Weather - Get the current weather for a given zip/postal code. Optional: Try locating the user automatically.\nScheduled Auto Login and Action - Make an application which logs into a given site on a schedule and invokes a certain action and then logs out. This can be useful for checking web mail, posting regular content, or getting info for other applications and saving it to your computer.\nE-Card Generator - Make a site that allows people to generate their own little e-cards and send them to other people. Do not use Flash. Use a picture library and perhaps insightful mottos or quotes.\nContent Management System - Create a content management system (CMS) like Joomla, Drupal, PHP Nuke etc. Start small. Optional: Allow for the addition of modules/addons.\nWeb Board (Forum) - Create a forum for you and your buddies to post, administer and share thoughts and ideas.\nCAPTCHA Maker - Ever see those images with letters a numbers when you signup for a service and then asks you to enter what you see? It keeps web bots from automatically signing up and spamming. Try creating one yourself for online forms.\nFiles\nQuiz Maker - Make an application which takes various questions from a file, picked randomly, and puts together a quiz for students. Each quiz can be different and then reads a key to grade the quizzes.\nSort Excel/CSV File Utility - Reads a file of records, sorts them, and then writes them back to the file. Allow the user to choose various sort style and sorting based on a particular field.\nCreate Zip File Maker - The user enters various files from different directories and the program zips them up into a zip file. Optional: Apply actual compression to the files. Start with Huffman Algorithm.\nPDF Generator - An application which can read in a text file, html file or some other file and generates a PDF file out of it. Great for a web based service where the user uploads the file and the program returns a PDF of the file. Optional: Deploy on GAE or Heroku if possible.\nMp3 Tagger - Modify and add ID3v1 tags to MP3 files. See if you can also add in the album art into the MP3 file\u2019s header as well as other ID3v2 tags.\nCode Snippet Manager - Another utility program that allows coders to put in functions, classes or other tidbits to save for use later. Organized by the type of snippet or language the coder can quickly look up code. Optional: For extra practice try adding syntax highlighting based on the language.\nDatabases\nSQL Query Analyzer - A utility application which a user can enter a query and have it run against a local database and look for ways to make it more efficient.\nRemote SQL Tool - A utility that can execute queries on remote servers from your local computer across the Internet. It should take in a remote host, user name and password, run the query and return the results.\nReport Generator - Create a utility that generates a report based on some tables in a database. Generates a sales reports based on the order/order details tables or sums up the days current database activity.\nEvent Scheduler and Calendar - Make an application which allows the user to enter a date and time of an event, event notes and then schedule those events on a calendar. The user can then browse the calendar or search the calendar for specific events. Optional: Allow the application to create re-occurrence events that reoccur every day, week, month, year etc.\nBudget Tracker - Write an application that keeps track of a household\u2019s budget. The user can add expenses, income, and recurring costs to find out how much they are saving or losing over a period of time. Optional: Allow the user to specify a date range and see the net flow of money in and out of the house budget for that time period.\nTV Show Tracker - Got a favorite show you don\u2019t want to miss? Don\u2019t have a PVR or want to be able to find the show to then PVR it later? Make an application which can search various online TV Guide sites, locate the shows/times/channels and add them to a database application. The database/website then can send you email reminders that a show is about to start and which channel it will be on.\nTravel Planner System - Make a system that allows users to put together their own little travel itinerary and keep track of the airline / hotel arrangements, points of interest, budget and schedule.\nGraphics and Multimedia\nSlide Show - Make an application that shows various pictures in a slide show format. Optional: Try adding various effects like fade in/out, star wipe and window blinds transitions.\nStream Video from Online - Try to create your own online streaming video player.\nMp3 Player - A simple program for playing your favorite music files. Add features you think are missing from your favorite music player.\nWatermarking Application - Have some pictures you want copyright protected? Add your own logo or text lightly across the background so that no one can simply steal your graphics off your site. Make a program that will add this watermark to the picture. Optional: Use threading to process multiple images simultaneously.\nTurtle Graphics - This is a common project where you create a floor of 20 x 20 squares. Using various commands you tell a turtle to draw a line on the floor. You have move forward, left or right, lift or drop pen etc. Do a search online for \"Turtle Graphics\" for more information. Optional: Allow the program to read in the list of commands from a file.\nGIF Creator A program that puts together multiple images (PNGs, JPGs, TIFFs) to make a smooth GIF that can be exported. Optional: Make the program convert small video files to GIFs as well.\nSecurity\nCaesar cipher - Implement a Caesar cipher, both encoding and decoding. The key is an integer from 1 to 25. This cipher rotates the letters of the alphabet (A to Z). The encoding replaces each letter with the 1st to 25th next letter in the alphabet (wrapping Z to A). So key 2 encrypts \"HI\" to \"JK\", but key 20 encrypts \"HI\" to \"BC\". This simple \"monoalphabetic substitution cipher\" provides almost no security, because an attacker who has the encoded message can either use frequency analysis to guess the key, or just try all 25 keys.\n\n"}, {"repo": "Trinea/android-open-project", "language": "None", "readme": "\nAndroid \u5f00\u6e90\u9879\u76ee\u5206\u7c7b\u6c47\u603b\uff0c\u66f4\u5168\u66f4\u65b0\u53ef\u89c1 codekk.com\nOther: English Version, \u7e41\u9ad4\u7248, Website Version.\n\n\u6211\u4eec\u7684\u5fae\u4fe1\u516c\u4f17\u53f7\uff1acodekk\u3002\u4e8c\u7ef4\u7801\u5982\u4e0b\uff1a\n\u4e13\u6ce8\u4e8e Android \u5f00\u6e90\u5206\u4eab\u3001\u6e90\u7801\u89e3\u6790\u3001\u6846\u67b6\u8bbe\u8ba1\u3001Android \u5185\u63a8\u3002\n\n\u6211\u4eec\u7684\u7f51\u7ad9\uff1awww.codekk.com\n\nAndroid \u5f00\u53d1\u8c03\u8bd5\u6548\u7387\u6570\u500d\u63d0\u5347\u5de5\u5177\u2014\u2014\u5f00\u53d1\u52a9\u624b App \u6700\u65b0\u7248\uff0c\u53ef\u4ece Google Play\u3001\u5e94\u7528\u5b9d\u3001360 \u624b\u673a\u52a9\u624b\u91cc\u641c\u7d22\u201d\u5f00\u53d1\u52a9\u624b\u201d\u4e0b\u8f7d\uff0c\u6216\u901a\u8fc7\u7f51\u9875\u4e0b\u8f7d\uff1aGoogle Play\u3001\u5e94\u7528\u5b9d\u3001360 \u624b\u673a\u52a9\u624b\u3001\u672c\u5730\u4e0b\u8f7d\nAndroid \u5f00\u6e90\u9879\u76ee\u6e90\u7801\u89e3\u6790(Volley\u3001UIL\u3001Dagger\u3001EventBus\u3001\u63d2\u4ef6\u5316\u5e93\u7b49\u5206\u6790)\nAndroid \u804c\u4f4d\u5185\u90e8\u63a8\u8350(\u963f\u91cc\u3001\u817e\u8baf\u3001\u767e\u5ea6\u3001\u4eac\u4e1c\u3001\u6ef4\u6ef4\u3001\u7f8e\u56e2\u300158\u3001\u534e\u4e3a\u3001\u7f51\u6613\u3001\u9b45\u65cf\u7b49)\n\u5f3a\u5927\u7684 Android \u5f00\u6e90\u9879\u76ee\u641c\u7d22\u7ad9\n\u6bcf\u65e5\u6700\u65b0\u5f00\u6e90\u9879\u76ee\u53ef\u89c1 Android \u5f00\u6e90\u9879\u76ee\u96c6\u5408\uff0c\u6b22\u8fce\u6d4f\u89c8\u548c\u53cd\u9988 :)\n\n\u5173\u4e8e\u6211\uff0c\u6b22\u8fce\u5173\u6ce8\n\u5fae\u535a\uff1aTrinea\u00a0\u00a0\u00a0\u00a0\u4e3b\u9875\uff1atrinea.cn\n\n\u66f4\u591a\uff1aAndroid \u5f00\u6e90\u5e93\u83b7\u53d6\u9014\u5f84\u6574\u7406\n\u5206\u4eab\uff1a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u76ee\u524d\u5305\u62ec\uff1a\n\nAndroid \u5f00\u6e90\u9879\u76ee\u7b2c\u4e00\u7bc7\u2014\u2014\u4e2a\u6027\u5316\u63a7\u4ef6(View)\u7bc7\n\u00a0\u00a0\u5305\u62ecListView\u3001ActionBar\u3001Menu\u3001ViewPager\u3001Gallery\u3001GridView\u3001ImageView\u3001ProgressBar\u3001TextView\u3001ScrollView\u3001TimeView\u3001TipView\u3001FlipView\u3001ColorPickView\u3001GraphView\u3001UI Style\u3001\u5176\u4ed6\nAndroid \u5f00\u6e90\u9879\u76ee\u7b2c\u4e8c\u7bc7\u2014\u2014\u5de5\u5177\u5e93\u7bc7\n\u00a0\u00a0\u5305\u62ec\u4f9d\u8d56\u6ce8\u5165\u3001\u56fe\u7247\u7f13\u5b58\u3001\u7f51\u7edc\u8bf7\u6c42\u3001\u6570\u636e\u5e93 ORM \u5de5\u5177\u5305\u3001Android \u516c\u5171\u5e93\u3001\u9ad8\u7248\u672c\u5411\u4f4e\u7248\u672c\u517c\u5bb9\u5e93\u3001\u591a\u5a92\u4f53\u3001\u4e8b\u4ef6\u603b\u7ebf\u3001\u4f20\u611f\u5668\u3001\u5b89\u5168\u3001\u63d2\u4ef6\u5316\u3001\u6587\u4ef6\u3001\u5176\u4ed6\nAndroid \u5f00\u6e90\u9879\u76ee\u7b2c\u4e09\u7bc7\u2014\u2014\u4f18\u79c0\u9879\u76ee\u7bc7\n\u00a0\u00a0\u6bd4\u8f83\u6709\u610f\u601d\u7684\u5b8c\u6574\u7684 Android \u9879\u76ee\nAndroid \u5f00\u6e90\u9879\u76ee\u7b2c\u56db\u7bc7\u2014\u2014\u5f00\u53d1\u53ca\u6d4b\u8bd5\u5de5\u5177\u7bc7\n\u00a0\u00a0\u5305\u62ec\u5f00\u53d1\u6548\u7387\u5de5\u5177\u3001\u5f00\u53d1\u81ea\u6d4b\u76f8\u5173\u3001\u6d4b\u8bd5\u5de5\u5177\u3001\u5f00\u53d1\u53ca\u7f16\u8bd1\u73af\u5883\u3001\u5176\u4ed6\nAndroid \u5f00\u6e90\u9879\u76ee\u7b2c\u4e94\u7bc7\u2014\u2014\u4f18\u79c0\u4e2a\u4eba\u548c\u56e2\u4f53\u7bc7\n\u00a0\u00a0\u4e50\u4e8e\u5206\u4eab\u5e76\u4e14\u6709\u4e00\u4e9b\u5f88\u4e0d\u9519\u7684\u5f00\u6e90\u9879\u76ee\u7684\u4e2a\u4eba\u548c\u7ec4\u7ec7\uff0c\u5305\u62ec JakeWharton\u3001Chris Banes\u3001Koushik Dutta \u7b49\u5927\u725b\n\n\u7b2c\u4e00\u90e8\u5206 \u4e2a\u6027\u5316\u63a7\u4ef6(View)\n\u4e3b\u8981\u4ecb\u7ecd\u90a3\u4e9b\u4e0d\u9519\u4e2a\u6027\u5316\u7684 View\uff0c\u5305\u62ec ListView\u3001ActionBar\u3001Menu\u3001ViewPager\u3001Gallery\u3001GridView\u3001ImageView\u3001ProgressBar\u3001TextView\u3001ScrollView\u3001TimeView\u3001TipView\u3001FlipView\u3001ColorPickView\u3001GraphView\u3001UI Style \u7b49\u7b49\u3002\n\u4e00\u3001ListView\n\n\nandroid-pulltorefresh\n\u4e00\u4e2a\u5f3a\u5927\u7684\u62c9\u52a8\u5237\u65b0\u5f00\u6e90\u9879\u76ee\uff0c\u652f\u6301\u5404\u79cd\u63a7\u4ef6\u4e0b\u62c9\u5237\u65b0\uff0cListView\u3001ViewPager\u3001WebView\u3001ExpandableListView\u3001GridView\u3001ScrollView\u3001Horizontal  ScrollView\u3001Fragment \u4e0a\u4e0b\u5de6\u53f3\u62c9\u52a8\u5237\u65b0\uff0c\u6bd4\u4e0b\u9762 johannilsson \u90a3\u4e2a\u53ea\u652f\u6301 ListView \u7684\u5f3a\u5927\u7684\u591a\u3002\u5e76\u4e14\u5b83\u5b9e\u73b0\u7684\u4e0b\u62c9\u5237\u65b0 ListView \u5728 item \u4e0d\u8db3\u4e00\u5c4f\u60c5\u51b5\u4e0b\u4e5f\u4e0d\u4f1a\u663e\u793a\u5237\u65b0\u63d0\u793a\uff0c\u4f53\u9a8c\u66f4\u597d\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/chrisbanes/Android-PullToRefresh\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/pull-to-refreshview-demo.apk?raw=true\nAPP \u793a\u4f8b\uff1a\u65b0\u6d6a\u5fae\u535a\u5404\u4e2a\u9875\u9762\n\n\nandroid-pulltorefresh-listview\n\u4e0b\u62c9\u5237\u65b0 ListView\uff0c\u8fd9\u4e2a\u88ab\u5f88\u591a\u4eba\u4f7f\u7528\u7684\u9879\u76ee\u5b9e\u9645\u6709\u4e0d\u5c11 bug\uff0c\u63a8\u8350\u4f7f\u7528 android-Ultra-Pull-to-Refresh\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/johannilsson/android-pulltorefresh\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/pull-to-refresh-listview-demo.apk?raw=true\n\n\nandroid-Ultra-Pull-to-Refresh\n\u4e0b\u62c9\u5237\u65b0\uff0c\u7b2c\u4e00\u4e2a\u9879\u76ee\u5df2\u7ecf\u505c\u6b62\u7ef4\u62a4\u4e86\uff0c\u5e76\u4e14\u4f7f\u7528\u8d77\u6765\u76f8\u5bf9\u590d\u6742\uff0c\u5b9a\u5236\u6027\u4e5f\u5dee\u3002\u8fd9\u4e2a\u662f\u66ff\u4ee3\u548c\u6539\u826f\u65b9\u6848\u3002\u8fd9\u4e2a\u7ee7\u627f\u4e8e ViewGroup \u53ef\u4ee5\u5305\u542b\u4efb\u4f55 View\u3002\u529f\u80fd\u751a\u81f3\u6bd4 SwipeRefreshLayout \u5f3a\u5927\u3002\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355\u3002\u826f\u597d\u7684\u8bbe\u8ba1\uff0c\u5982\u679c\u4f60\u60f3\u5b9a\u5236\u81ea\u5df1\u7684 UI \u6837\u5f0f\uff0c\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u50cf\u7ed9 ListView \u52a0\u4e00\u4e2a Header View \u90a3\u4e48\u7b80\u5355\u3002\u652f\u6301 API LEVEL >= 8\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh\n\u539f\u7406\u5256\u6790\u6587\u6863\uff1a[android-Ultra-Pull-to-Refresh](https://a.codekk.com/detail/Android/Grumoon/android-Ultra-Pull-To-Refresh \u6e90\u7801\u89e3\u6790)\nDemo \u5730\u5740\uff1ahttps://raw.githubusercontent.com/liaohuqiu/android-Ultra-Pull-To-Refresh/master/ptr-demo.apk\n\u6548\u679c\u56fe\uff1a\nhttp://srain-github.qiniudn.com/ultra-ptr/release-to-refresh.gif\nhttp://srain-github.qiniudn.com/ultra-ptr/auto-refresh.gif\nhttp://srain-github.qiniudn.com/ultra-ptr/store-house-string-array.gif\n\n\nAndroid-PullToRefreshRecyclerView\n\u652f\u6301\u4e0b\u62c9\u5237\u65b0\u7684RecyclerView\uff0c\u540c\u65f6\u652f\u6301\u6ed1\u52a8\u5230\u5e95\u90e8\u81ea\u52a8\u52a0\u8f7d\u6570\u636e\u3001\u7ed9RecyclerView\u6dfb\u52a0Header\u3002\u5e76\u4e14\u4e0d\u66f4\u6539\u539f\u6709RecyclerView\u7684\u903b\u8f91\u3002\n\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/HomHomLin/Android-PullToRefreshRecyclerView\nDemo\u5730\u5740\uff1ahttps://github.com/HomHomLin/Android-PullToRefreshRecyclerView/blob/master/sample.apk\n\n\nDragSortListView\n\u62d6\u52a8\u6392\u5e8f\u7684 ListView\uff0c\u540c\u65f6\u652f\u6301 ListView \u6ed1\u52a8 item \u5220\u9664\uff0c\u5404\u4e2a Item \u9ad8\u5ea6\u4e0d\u4e00\u3001\u5355\u9009\u3001\u590d\u9009\u3001CursorAdapter \u505a\u4e3a\u9002\u914d\u5668\u3001\u62d6\u52a8\u80cc\u666f\u53d8\u5316\u7b49\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/bauerca/drag-sort-listview\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.mobeta.android.demodslv\nAPP \u793a\u4f8b\uff1aWordpress Android\n\n\nSwipeListView\n\u652f\u6301\u5b9a\u4e49 ListView \u5de6\u53f3\u6ed1\u52a8\u4e8b\u4ef6\uff0c\u652f\u6301\u5de6\u53f3\u6ed1\u52a8\u4f4d\u79fb\uff0c\u652f\u6301\u5b9a\u4e49\u52a8\u753b\u65f6\u95f4\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/47deg/android-swipelistview\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.fortysevendeg.android.swipelistview\nAPP \u793a\u4f8b\uff1a\u5fae\u4fe1\n\n\nAndroid-SlidingLayout\n\u5b9e\u73b0\u7c7b\u4f3cQQ\u3001\u5fae\u4fe1ListView\u548cWebView\u7684\u4e0a\u62c9\u4e0b\u62c9\u5f39\u8df3\u6548\u679c\u548ciOS\u7684ListView\u7684\u679c\u51bb\u6548\u679c\u3002\u517c\u5bb9Android\u81ea\u5e26\u5e93\u548c\u517c\u5bb9\u5e93\u7684\u6240\u6709View\u7ec4\u4ef6\uff0c\u5305\u62ecRecyclerView\u3001ListView\u3001ScrollView\u4ee5\u53caWebView\u7b49\u7b49\u3002\n\n\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/HomHomLin/SlidingLayout/\u3002\nDemo\u5730\u5740\uff1ahttps://github.com/HomHomLin/SlidingLayout/tree/master/demo\n\n\nSlideAndDragListView\n\u652f\u6301ListView\u7684Item\u7684\u62d6\u52a8\u6392\u5e8f\u3001\u5de6\u53f3\u6ed1\u52a8\u4e8b\u4ef6\uff0c\u53ef\u81ea\u5b9a\u4e49\u5de6\u53f3\u6ed1\u52a8\u663e\u793a\u6587\u5b57\u3001\u56fe\u6807\u3001\u4f4d\u79fb\uff0c\u540c\u65f6\u652f\u6301onItemClick\u3001onItemLongClick\u7b49\u76d1\u542c\u5668\uff0c\u63d0\u4f9b\u4e30\u5bcc\u7684\u56de\u8c03\u63a5\u53e3\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/yydcdut/SlideAndDragListView\nDemo \u5730\u5740\uff1ahttps://github.com/yydcdut/SlideAndDragListView/blob/master/apk/sdlv.apk?raw=true\nAPP \u793a\u4f8b\uff1aAndroid \u624b\u673aQQ 5.0\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid-SwipeToDismiss\n\u6ed1\u52a8 Item \u6d88\u5931 ListView\uff0c\u652f\u6301 3.0 \u4ee5\u4e0b\u7248\u672c\u89c1\uff1ahttps://github.com/JakeWharton/SwipeToDismissNOA\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/romannurik/Android-SwipeToDismiss\nDemo \u5730\u5740\uff1ahttps://github.com/JakeWharton/SwipeToDismissNOA/SwipeToDismissNOA.apk/qr_code\n\n\nRecyclerViewSwipeDismiss\n\u8f7b\u91cf\u7ea7\u652f\u6301 support-v7 \u4e2d\u7684 RecyclerView \u7684\u6ed1\u52a8\u5220\u9664(Swipe to dismiss)\u884c\u4e3a\uff0c\u4e0d\u9700\u8981\u4fee\u6539\u6e90\u4ee3\u7801\uff0c\u53ea\u8981\u7b80\u5355\u7684\u7ed1\u5b9aonTouchListener\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/CodeFalling/RecyclerViewSwipeDismiss\n\u6548\u679c\u56fe\uff1a\n\n\nQuickSideBar\n\u5e2e\u52a9\u5feb\u901f\u67e5\u9605\u5bf9\u5e94\u5206\u7ec4\u7684\u4fa7\u8fb9\u680f\uff0c\u53ef\u4ee5\u914d\u5408\u4efb\u610f\u5217\u8868\uff0cdemo\u4e2d\u7ed9\u51fa\u914d\u5408RecyclerView(\u6d6e\u52a8\u5206\u7ec4\u4f7f\u7528stickyheadersrecyclerview)\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/saiwu-bigkoo/Android-QuickSideBar\n\u6548\u679c\u56fe\uff1a\n\n\nasync-expandable-list\n\u652f\u6301\u5f02\u6b65\u52a0\u8f7d\u5b50\u5217\u8868\u7684 ExpandableListView\uff0c\u5305\u62ecCollectionView\u53ef\u4ee5\u663e\u793a\u5c0f\u6807\u9898\u7684\u5217\u8868\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Ericliu001/async-expandable-list\n\n\n\u6548\u679c\u56fe\uff1a\n \n\n\nPinnedHeaderExpandableListView\n\u9996\u5148\u5b83\u662f\u4e00\u4e2a ExpandableListView\uff0c\u4f46\u662f\u5b83\u7684\u5934\u90e8\u53ef\u4ee5\u56fa\u5b9a\uff0c\u5176\u6b21\uff0c\u5728\u5b83\u7684\u4e0a\u9762\u8fd8\u6709\u4e00\u4e2a\u5934\u90e8\u53ef\u4ee5\u6765\u56de\u4f38\u7f29\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/singwhatiwanna/PinnedHeaderExpandableListView\n\u6548\u679c\u56fe\uff1a\nAPP \u793a\u4f8b\uff1a\u767e\u5ea6\u624b\u673a\u536b\u58eb\u5783\u573e\u6e05\u7406\u754c\u9762\n\n\nStickyListHeaders\nGroupName \u6ed1\u52a8\u5230\u9876\u7aef\u65f6\u4f1a\u56fa\u5b9a\u4e0d\u52a8\u76f4\u5230\u53e6\u5916\u4e00\u4e2a GroupName \u5230\u8fbe\u9876\u7aef\u7684 ExpandListView\uff0c\u652f\u6301\u5feb\u901f\u6ed1\u52a8\uff0c\u652f\u6301 Android2.3 \u53ca\u4ee5\u4e0a\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/emilsjolander/StickyListHeaders\n\u6548\u679c\u56fe\uff1a\nAPP \u793a\u4f8b\uff1aAndroid 4.0 \u8054\u7cfb\u4eba\n\n\npinned-section-listview\nGroupName \u6ed1\u52a8\u5230\u9876\u7aef\u65f6\u4f1a\u56fa\u5b9a\u4e0d\u52a8\u76f4\u5230\u53e6\u5916\u4e00\u4e2a GroupName \u5230\u8fbe\u9876\u7aef\u7684 ExpandListView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/beworker/pinned-section-listview\n\u6548\u679c\u56fe\uff1a\n\n\nPinnedHeaderListView\nGroupName \u6ed1\u52a8\u5230\u9876\u7aef\u65f6\u4f1a\u56fa\u5b9a\u4e0d\u52a8\u76f4\u5230\u53e6\u5916\u4e00\u4e2a GroupName \u5230\u8fbe\u9876\u7aef\u7684 ExpandListView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JimiSmith/PinnedHeaderListView\n\n\nQuickReturn\nListView/ScrollView \u7684 header \u6216 footer\uff0c\u5f53\u5411\u4e0b\u6eda\u52a8\u65f6\u6d88\u5931\uff0c\u5411\u4e0a\u6eda\u52a8\u65f6\u51fa\u73b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/lawloretienne/QuickReturn\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.etiennelawlor.quickreturn\n\n\nQuickReturnHeader\nListView/ScrollView \u7684 header \u6216 footer\uff0c\u5f53\u5411\u4e0b\u6eda\u52a8\u65f6\u6d88\u5931\uff0c\u5411\u4e0a\u6eda\u52a8\u65f6\u51fa\u73b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ManuelPeinado/QuickReturnHeader\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/quick-return-header-demo.apk?raw=true\nAPP \u793a\u4f8b\uff1agoogle plus\n\n\nIndexableListView\nListView \u53f3\u4fa7\u4f1a\u663e\u793a item \u9996\u5b57\u6bcd\u5feb\u6377\u7d22\u5f15\uff0c\u70b9\u51fb\u53ef\u5feb\u901f\u6ed1\u52a8\u5230\u67d0\u4e2a item\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/woozzu/IndexableListView\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/indexable-listview.apk?raw=true\nAPP \u793a\u4f8b\uff1a\u5fae\u4fe1\u901a\u8baf\u5f55\u3001\u5c0f\u7c73\u8054\u7cfb\u4eba\n\n\nCustomFastScrollView\nListView \u5feb\u901f\u6ed1\u52a8\uff0c\u540c\u65f6\u5c4f\u5e55\u4e2d\u95f4 PopupWindows \u663e\u793a\u6ed1\u52a8\u5230\u7684 item \u5185\u5bb9\u6216\u9996\u5b57\u6bcd\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/nolanlawson/CustomFastScrollViewDemo\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid-ScrollBarPanel\nListView \u6ed1\u52a8\u65f6\u56fa\u5b9a\u7684 Panel \u6307\u793a\u663e\u793a\u5728 scrollbar \u65c1\u8fb9\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/rno/Android-ScrollBarPanel\n\u6548\u679c\u56fe\uff1a\n\n\nSlideExpandableListView\n\u7528\u6237\u70b9\u51fb listView item \u6ed1\u51fa\u56fa\u5b9a\u533a\u57df\uff0c\u5176\u4ed6 item \u7684\u533a\u57df\u6536\u7f29\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/tjerkw/Android-SlideExpandableListView\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/slide-expandable-listView-demo.apk?raw=true\n\n\nJazzyListView\nListView \u53ca GridView item \u4ee5\u7279\u6b8a\u52a8\u753b\u6548\u679c\u8fdb\u5165\u5c4f\u5e55\uff0c\u6548\u679c\u5305\u62ec grow\u3001cards\u3001curl\u3001wave\u3001flip\u3001fly \u7b49\u7b49\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/twotoasters/JazzyListView\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.twotoasters.jazzylistview.sample\n\u5728\u7ebf\u6f14\u793a\uff1ahttp://lab.hakim.se/scroll-effects/\n\n\nListViewAnimations\n\u5e26 Item \u663e\u793a\u52a8\u753b\u7684 ListView\uff0c\u52a8\u753b\u5305\u62ec\u5e95\u90e8\u98de\u5165\u3001\u5176\u4ed6\u65b9\u5411\u659c\u98de\u5165\u3001\u4e0b\u5c42\u98de\u5165\u3001\u6e10\u53d8\u6d88\u5931\u3001\u6ed1\u52a8\u5220\u9664\u7b49\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/nhaarman/ListViewAnimations\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.haarman.listviewanimations\nAPP \u793a\u4f8b\uff1aGoogle plus\u3001Google Now \u5361\u7247\u5f0f\u8fdb\u5165\u3001\u5c0f\u7c73\u7cfb\u7edf\u4e2d\u5e94\u7528\u5546\u5e97\u3001\u8054\u7cfb\u4eba\u3001\u6e38\u620f\u4e2d\u5fc3\u3001\u97f3\u4e50\u3001\u6587\u4ef6\u7ba1\u7406\u5668\u7684 ListView\u3001Ultimate\u3001Light Flow Lite\u3001TreinVerkeer\u3001Running Coach\u3001Pearl Jam Lyrics\u3001Calorie Chart\u3001Car Hire\u3001Super BART\u3001DK FlashCards\u3001Counter Plus\u3001Voorlees Verhaaltjes 2.0\n\n\nDevsmartLib-Android\n\u6a2a\u5411 ListView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/dinocore1/DevsmartLib-Android\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/horizontal-listview-demo.apk?raw=true\n\n\nTwoWayView\n\u6a2a\u5411 ListView \u7684\u6548\u679c\uff0c\u7ee7\u627f\u81ea AdapterView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/lucasr/twoway-view\n\n\nHorizontalVariableListView\n\u652f\u6301 Item \u5bbd\u5ea6\u4e0d\u4e00\u81f4\u7684 ListView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/sephiroth74/HorizontalVariableListView\n\n\nLinearListView\n\u7528 LinearLayout \u5b9e\u73b0\u7684 ListView\uff0c\u53ef\u89e3\u51b3\u591a\u4e2a ListView \u5e76\u5b58\u7b49\u95ee\u9898\u3002\u76ee\u524d\u81ea\u5df1\u4e5f\u6709\u9700\u8981\uff0c\u7b49\u4eb2\u81ea\u5c1d\u8bd5\u8fc7\u540e\u4f1a\u518d\u5177\u4f53\u4ecb\u7ecd\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/frankiesardo/LinearListView\n\n\nMultiChoiceAdapter\n\u652f\u6301\u591a\u9009\u7684 ListView Adapter\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ManuelPeinado/MultiChoiceAdapter\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.manuelpeinado.multichoiceadapter.demo\n\n\nEnhancedListView\n\u652f\u6301\u6a2a\u5411\u6ed1\u52a8\u5220\u9664\u5217\u8868\u9879\u4ee5\u53ca\u64a4\u9500\u5220\u9664\u7684 ListView\uff0c\u8be5\u9879\u76ee\u7684\u524d\u8eab\u662fSwipeToDismissUndoList\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/timroes/EnhancedListView\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=de.timroes.android.listviewdemo&rdid=de.timroes.android.listviewdemo\n\n\nListBuddies\n\u81ea\u52a8\u6eda\u52a8\u7684\u53cc\u5217 ListView \uff0c\u4e24\u4e2a ListView \u6eda\u52a8\u901f\u5ea6\u4e0d\u4e00\u81f4\uff0c\u6709\u89c6\u5dee\u6548\u679c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jpardogo/ListBuddies\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.jpardogo.android.listbuddies\n\u6548\u679c\u56fe\uff1a\n\n\nSwipeMenuListView\n\u9488\u5bf9 ListView item \u7684\u4fa7\u6ed1\u83dc\u5355\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/baoyongzhang/SwipeMenuListView\n\u6548\u679c\u56fe\uff1a\nAPP \u793a\u4f8b\uff1a\u624b\u673a QQV5.0\n\n\nPagingListView\n\u5206\u9875\u52a0\u8f7d\u7684 ListView\u3002\u5f53\u6ed1\u52a8\u5230 ListView \u5e95\u90e8\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u663e\u793a\u4e00\u4e2a\u8fdb\u5ea6\u884c\uff0c\u7136\u540e\u52a0\u8f7d\u4e0b\u4e00\u9875\u6570\u636e\uff0c\u5e76\u663e\u793a\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/nicolasjafelle/PagingListView\n\n\nPullZoomView\n\u652f\u6301\u4e0b\u62c9\u65f6 HeaderView \u7f29\u653e\u7684 ListView\u3001ScrollView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Frank-Zhu/PullZoomView\n\u6548\u679c\u56fe\uff1a\n\n\nPullToZoomInListView\n\u6ed1\u52a8 ListView \u65f6\u4f7f\u5176 HeaderView \u8ddf\u968f\u6ed1\u52a8\u7f29\u653e\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/matrixxun/PullToZoomInListView\n\u6548\u679c\u56fe\uff1a\n\n\nCalendarListview\n\u5b9e\u73b0\u6bcf\u4e2a\u6708\u4e00\u884c\u65e5\u5386\u6548\u679c\u7684 ListView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/traex/CalendarListview\n\u539f\u7406\u5256\u6790\u6587\u6863\uff1aCalendarListview\n\u6548\u679c\u56fe\uff1a\n\n\nsticky-headers-recyclerview\nGroupName \u6ed1\u52a8\u5230\u9876\u7aef\u65f6\u4f1a\u56fa\u5b9a\u4e0d\u52a8\u76f4\u5230\u53e6\u5916\u4e00\u4e2a GroupName \u5230\u8fbe\u9876\u7aef\u7684 ListView\uff0c\u91c7\u7528 support-v7 \u4e2d\u7684 RecyclerView \u5b9e\u73b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/timehop/sticky-headers-recyclerview\n\n\nPullSeparateListView\n\u5230\u8fbe\u9876\u90e8\u6216\u5e95\u90e8\u7ee7\u7eed\u62c9\u52a8\u65f6\uff0c\u5b9e\u73b0 Item \u95f4\u7684\u76f8\u4e92\u5206\u79bb\uff0c\u4e24\u79cd\u6a21\u5f0f\uff1a(1) \u5168\u90e8\u5206\u79bb\u7684\u6a21\u5f0f\uff0c\u5373\u5c4f\u5e55\u5185\u6240\u6709 Item \u90fd\u4f1a\u5206\u79bb (2)\u90e8\u5206\u5206\u79bb\u6a21\u5f0f\uff0c\u4ee5\u70b9\u51fb\u4f4d\u7f6e\u4e3a\u5206\u754c\u70b9\uff0c\u90e8\u5206 item \u5206\u79bb\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/chiemy/PullSeparateListView\n\u6548\u679c\u56fe\uff1a\n\n\nExpandableLayout\nHeader \u548c Content Item \u90fd\u53ef\u4ee5\u5c55\u5f00\u7684 ExpandableListview\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/traex/ExpandableLayout\n\n\nPagedHeadListView\n\u652f\u6301 paginated header \u4ee5\u53ca material page indicator \u7684 ListView.\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JorgeCastilloPrz/PagedHeadListView\n\u6548\u679c\u56fe\uff1a\n\n\nCustomSwipeListView\n\u652f\u6301\u5de6\u6ed1\u5f39\u51fa\u81ea\u5b9a\u4e49\u83dc\u5355\uff0c\u53f3\u6ed1\u5220\u9664\u4e14\u5141\u8bb8\u64a4\u9500\uff0c\u540c\u65f6\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6ed1\u52a8\u52a8\u753b\u65f6\u95f4\u548c\u6ed1\u52a8\u89e6\u53d1\u4e8b\u4ef6\u7684\u65f6\u673a\u7b49\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/xyczero/Android-CustomSwipeListView\nDemo \u5730\u5740\uff1aDownload here\n\u6548\u679c\u56fe\uff1a\n\n\nPull-to-Refresh.Rentals-Android\n\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u4e0b\u62c9\u5237\u65b0\u5b9e\u73b0\uff0cYalantis \u51fa\u54c1\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Yalantis/Pull-to-Refresh.Rentals-Android\n\u6548\u679c\u56fe\uff1a\n\n\nScrollerCalendar\n\u5b9e\u73b0\u6bcf\u884c\u663e\u793a\u4e00\u5e74\u7684 12 \u4e2a\u6708\u4efd\u7684 RecyclerView \u5e74\u5386\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/guanchao/ScrollerCalendar\n\u6548\u679c\u56fe\uff1a\n\n\nExtractWordView\n\u4e00\u4e2a\u53ef\u4ee5\u63d0\u53d6\u5355\u8bcd\u7684 ListView,\u652f\u6301\"\u653e\u5927\u955c\"\u6548\u679c\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jcodeing/ExtractWordView\nDemo \u5730\u5740\uff1aDownload here\n\n\n\nFlyRefresh\n\u652f\u6301 ListView, GridView, RecyclerView, ScrollView \u7684\u4e0b\u62c9\u5237\u65b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/race604/FlyRefresh\n\u6548\u679c\u56fe\uff1a\n\n\nMVCHelper\n\u5b9e\u73b0\u4e0b\u62c9\u5237\u65b0\uff0c\u6eda\u52a8\u5e95\u90e8\u81ea\u52a8\u52a0\u8f7d\u66f4\u591a\uff0c\u5206\u9875\u52a0\u8f7d\uff0c\u81ea\u52a8\u5207\u6362\u663e\u793a\u7f51\u7edc\u5931\u8d25\u5e03\u5c40\uff0c\u6682\u65e0\u6570\u636e\u5e03\u5c40\uff0c\u652f\u6301\u4efb\u610f view\uff0c\u771f\u6b63\u7684 MVC \u67b6\u6784\n\u652f\u6301\u5207\u6362\u4e3b\u6d41\u4e0b\u62c9\u5237\u65b0\u6846\u67b6 Android-PullToRefresh-Library,android-Ultra-Pull-To-Refresh-library\uff0cSwipeRefreshLayout\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/LuckyJayce/MVCHelper\nDemo \u5730\u5740\uff1ahttps://github.com/LuckyJayce/MVCHelper/blob/master/raw/MVCHelper_Demo.apk?raw=true\n\n\nRecyclerViewSwipeDismiss\n\u652f\u6301\u6ed1\u52a8 Item \u64cd\u4f5c\u3001\u70b9\u51fb\u5c55\u5f00\u3001\u62d6\u52a8\u6392\u5e8f\u3001\u5c55\u5f00\u540e\u62d6\u52a8\u6392\u5e8f\u7b49\u7279\u6027\u7684 RecyclerView\n\u9879\u76ee\u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.h6ah4i.android.example.advrecyclerview\n\u89c6\u9891\uff1ahttp://www.youtube.com/watch?feature=player_embedded&v=S7cSwMArjUQ\n\n\nWaterDropListView\n\u6a21\u4eff iOS \u4e0b\u62c9\u5237\u65b0\u201c\u6c34\u6ef4\u201d\u6548\u679c\uff0c\u652f\u6301\u4e0b\u62c9\u5237\u65b0\u548c\u4e0a\u62c9\u52a0\u8f7d\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/THEONE10211024/WaterDropListView\n\u6548\u679c\u56fe\uff1a\n\n\nPopupListView\n\u5be6\u73feListItem \u9ede\u64ca\u5f8c\u7f6e\u9802\u4e26\u53ef\u986f\u793a\u5ba2\u88fd\u5316\u6dfb\u52a0\u7684item\u7684\u5167\u90e8View \u7684ListView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/s8871404/PopupListView\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.baobomb.popuplistview_sample\n\u6548\u679c\u56fe\uff1a\n\n\nCircleRefreshLayout\n\u4e00\u4e2a\u5305\u542b\u6709\u8da3\u7684\u52a8\u753b\u7684\u81ea\u5b9a\u4e49\u4e0b\u62c9\u5237\u65b0\u5e03\u5c40\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/tuesda/CircleRefreshLayout\n\u6548\u679c\u56fe\uff1a\n\n\n\nEasyRecyclerView\n\u4e00\u6b3e\u7b80\u5355\u6613\u7528\u7684EasyRecyclerView\n1.\u63d0\u4f9bEasyRecyclerView\uff0c\u4e0d\u9700\u8981\u5199\u592a\u591aRecyclerView\u7684\u914d\u7f6e\u4ee3\u7801\n2.\u63d0\u4f9b\u597d\u4e00\u4e2a\u53ef\u4ee5\u9002\u914d\u5355\u5e03\u5c40\u548c\u591a\u5e03\u5c40\u7684RecyclerViewAdapter\n3.\u63d0\u4f9b\u4e86\u5206\u5272\u7ebf\u7684\u5b9e\u73b0\u7c7b\uff0c\u53ea\u9700\u8981\u4f20\u5165\u4e00\u4e2aDrawableId\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/CaMnter/EasyRecyclerView\n\n\nCanRefresh\n\u53ef\u9002\u914d\u6240\u6709\u89c6\u56fe\u7684\u4e0b\u62c9\u5237\u65b0\u4e0a\u62c9\u52a0\u8f7d\uff0c\u5e76\u652f\u6301\u5404\u79cd\u98ce\u683c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/canyinghao/CanRefresh\n\u6548\u679c\u56fe\uff1a\n\n\n\nNestRefreshLayout\n\u4e0b\u62c9\u5237\u65b0\u53ca\u52a0\u8f7d\u66f4\u591a\u63a7\u4ef6\uff0c\u652f\u6301\u591a\u79cdView\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49Header\u548cFooter\n\u7531\u4e8e\u5b9e\u73b0\u4e86NestedScrollingChild\u548cNestedScrollingParent\u6240\u4ee5\u4e0eSupport-Design\u517c\u5bb9\uff0c\u53ef\u4ee5\u914d\u5408CollapsingToolbarLayout\u4f7f\u7528\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/anzewei/NestRefreshLayout\nDemo \u5730\u5740\uff1ahttps://github.com/anzewei/NestRefreshLayout/blob/master/ext/sample-debug.apk?raw=true\n\n\nSnappingSwipingRecyclerView\n\u5b9e\u73b0\u4e86\u7c7b\u4f3c\u5fae\u4fe1\u8bfb\u4e66\u9996\u9875\u7684\u957f\u6309\u4e4b\u540e\u6ed1\u52a8\u5220\u9664\u7684\u7279\u6548\u548c\u52a8\u753b\n\n\n\n\u9879\u76ee\u5730\u5740:https://github.com/CarlLee/SnappingSwipingRecyclerView\n\u4e8c\u3001ActionBar\n\n\nActionBarSherlock\n\u4e3a Android \u6240\u6709\u7248\u672c\u63d0\u4f9b\u7edf\u4e00\u7684 ActionBar\uff0c\u89e3\u51b3 4.0 \u4ee5\u4e0b ActionBar \u7684\u9002\u914d\u95ee\u9898\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JakeWharton/ActionBarSherlock\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.actionbarsherlock.sample.demos\n\u6807\u7b7e\uff1a\u517c\u5bb9\u5e93, ActionBar\n\n\nActionBar-PullToRefresh\n\u4e0b\u62c9\u5237\u65b0\uff0cActionBar \u51fa\u73b0\u52a0\u8f7d\u4e2d\u63d0\u793a\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/chrisbanes/ActionBar-PullToRefresh\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=uk.co.senab.actionbarpulltorefresh.samples.stock\nAPP \u793a\u4f8b\uff1aGmail\uff0cGoogle Plus\uff0c\u77e5\u4e4e\u7b49\n\n\nFadingActionBar\nListView \u5411\u4e0b\u6eda\u52a8\u9010\u6e10\u663e\u73b0\u7684 ActionBar\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ManuelPeinado/FadingActionBar\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.manuelpeinado.fadingactionbar.demo\nAPP \u793a\u4f8b\uff1agoogle music\uff0c\u77e5\u4e4e\n\n\nNotBoringActionBar\ngoogle music \u4e0b\u62c9\u6536\u7f29\u7684 ActionBar\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/flavienlaurent/NotBoringActionBar\nDemo \u5730\u5740\uff1ahttp://flavienlaurent.com/blog/2013/11/20/making-your-action-bar-not-boring/\nAPP \u793a\u4f8b\uff1aGoogle \u97f3\u4e50\n\n\nRefreshActionItem\n\u5e26\u8fdb\u5ea6\u663e\u793a\u548c\u5237\u65b0\u6309\u94ae\u7684 ActionBar\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ManuelPeinado/RefreshActionItem\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.manuelpeinado.refreshactionitem.demo\nAPP \u793a\u4f8b\uff1aThe New York Times\uff0cDevAppsDirect\n\n\nGlassActionBar\n\u7c7b\u4f3c\u73bb\u7483\u7684\u6709\u4e00\u5b9a\u900f\u660e\u5ea6\u7684 ActionBar\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ManuelPeinado/GlassActionBar\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.manuelpeinado.glassactionbardemo\nAPP \u793a\u4f8b\uff1agoogle music\n\n\n\u4e09\u3001Menu\n\n\nMenuDrawer\n\u6ed1\u51fa\u5f0f\u83dc\u5355\uff0c\u901a\u8fc7\u62d6\u52a8\u5c4f\u5e55\u8fb9\u7f18\u6ed1\u51fa\u83dc\u5355\uff0c\u652f\u6301\u5c4f\u5e55\u4e0a\u4e0b\u5de6\u53f3\u5212\u51fa\uff0c\u652f\u6301\u5f53\u524d View \u5904\u4e8e\u4e0a\u4e0b\u5c42\uff0c\u652f\u6301 Windows \u8fb9\u7f18\u3001ListView \u8fb9\u7f18\u3001ViewPager \u53d8\u5316\u5212\u51fa\u83dc\u5355\u7b49\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/SimonVT/android-menudrawer\nDemo \u5730\u5740\uff1ahttp://simonvt.github.io/android-menudrawer/\nAPP \u793a\u4f8b\uff1aGmail\u3001Google Music \u7b49\u5927\u90e8\u5206 google app\n\n\nSlidingMenu\n\u6ed1\u51fa\u5f0f\u83dc\u5355\uff0c\u901a\u8fc7\u62d6\u52a8\u5c4f\u5e55\u8fb9\u7f18\u6ed1\u51fa\u83dc\u5355\uff0c\u652f\u6301\u5c4f\u5e55\u5de6\u53f3\u5212\u51fa\uff0c\u652f\u6301\u83dc\u5355 zoom\u3001scale\u3001slide up \u4e09\u79cd\u52a8\u753b\u6837\u5f0f\u51fa\u73b0\u3002\u4e0e MenuDrawer \u76f8\u6bd4\u800c\u8a00\uff0cSlidingMenu \u652f\u6301\u83dc\u5355\u52a8\u753b\u6837\u5f0f\u51fa\u73b0\uff0cMenuDrawer \u652f\u6301\u83dc\u5355 view \u5904\u4e8e\u5185\u5bb9\u7684\u4e0a\u4e0b\u5c42\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jfeinstein10/SlidingMenu\n\u539f\u7406\u5256\u6790\u6587\u6863\uff1a[SlidingMenu](https://a.codekk.com/detail/Android/huxian99/SlidingMenu \u6e90\u7801\u89e3\u6790)\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.slidingmenu.example\nAPP \u793a\u4f8b\uff1aFoursquare, LinkedIn, Zappos, Rdio, Evernote Food, Plume, VLC for Android, ESPN ScoreCenter, MLS MatchDay, 9GAG, Wunderlist 2, The Verge, MTG Familiar, Mantano Reader, Falcon Pro (BETA), MW3 Barracks\n\n\nArcMenu\n\u652f\u6301\u7c7b\u4f3c Path \u7684\u5de6\u4e0b\u89d2\u52a8\u753b\u65cb\u8f6c\u83dc\u5355\u53ca\u6a2a\u5411\u5212\u51fa\u83dc\u5355\u3001\u5706\u5fc3\u5f39\u51fa\u83dc\u5355\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/daCapricorn/ArcMenu\n\u6548\u679c\u56fe\uff1a\nhttps://dl.dropboxusercontent.com/u/11369687/preview1.png\nhttps://dl.dropboxusercontent.com/u/11369687/raymenu.png\nAPP \u793a\u4f8b\uff1aPath\n\n\nandroid-satellite-menu\n\u7c7b\u4f3c Path \u7684\u5de6\u4e0b\u89d2\u52a8\u753b\u65cb\u8f6c\u83dc\u5355\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/siyamed/android-satellite-menu\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/satellite-menu-demo.apk?raw=true\nAPP \u793a\u4f8b\uff1aPath\n\n\nradial-menu-widget\n\u5706\u5f62\u83dc\u5355\uff0c\u652f\u6301\u4e8c\u7ea7\u83dc\u5355\n\u9879\u76ee\u5730\u5740\uff1ahttps://code.google.com/p/radial-menu-widget/\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid Wheel Menu\n\u5706\u5f62\u65cb\u8f6c\u9009\u53d6\u83dc\u5355\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/anupcowkur/Android-Wheel-Menu\n\u6548\u679c\u56fe\uff1a\n\n\nFoldingNavigationDrawer\n\u6ed1\u52a8\u5e76\u4ee5\u6298\u53e0\u65b9\u5f0f\u6253\u5f00\u83dc\u5355\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/tibi1712/FoldingNavigationDrawer-Android\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.ptr.folding.sample\n\u6548\u679c\u56fe\uff1a\n\n\nAndroidResideMenu\n\u4eff Dribbble \u7684\u8fb9\u680f\u83dc\u5355\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/SpecialCyCi/AndroidResideMenu\n\u6548\u679c\u56fe\uff1a\n\n\nCircularFloatingActionMenu\n\u4e00\u4e2a\u53ef\u5b9a\u5236\u7684\u5706\u5f62\u7684\u6d6e\u52a8\u83dc\u5355\u63a7\u4ef6\uff0c\u7c7b\u4f3c\u4e8e Path \u7684\u5706\u5f62\u83dc\u5355\u3002\u8fd9\u4e2a\u63a7\u4ef6\u7684\u53ef\u5b9a\u5236\u6027\u66f4\u5f3a\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5b9a\u5236\u83dc\u5355\u51fa\u73b0\u6d88\u5931\u65f6\u7684\u52a8\u753b\uff0c\u8d77\u59cb\u89d2\u5ea6\u548c\u534a\u5f84\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/oguzbilgener/CircularFloatingActionMenu\n\u539f\u7406\u5256\u6790\u6587\u6863\uff1a[CircularFloatingActionMenu](https://a.codekk.com/detail/Android/cpacm/CircularFloatingActionMenu \u6e90\u7801\u89e3\u6790)\nDemo \u5730\u5740\uff1ahttps://github.com/oguzbilgener/CircularFloatingActionMenu/tree/master/samples\n\u6548\u679c\u56fe\uff1a\n\n\nNavigationDrawerSI\nNavigation Drawer \u7684\u4e00\u4e2a\u7b80\u5355\u5b9e\u73b0\uff0c\u6ed1\u52a8\u5e76\u4ee5\u6298\u53e0\u65b9\u5f0f\u6253\u5f00\u83dc\u5355\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mmBs/NavigationDrawerSI\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi\n\u6548\u679c\u56fe\uff1a\nAPP \u793a\u4f8b\uff1ahttps://play.google.com/store/apps/details?id=mmbialas.pl.navigationdrawersi\n\n\nDragLayout\n\u4f7f\u7528 support.v4 \u5305\u4e0b\u7684 ViewDragHelper \u5b9e\u73b0 QQ5.0 \u4fa7\u6ed1\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/BlueMor/DragLayout\n\u6548\u679c\u56fe\uff1a\n\n\nLDrawer\nMaterial Design \u5f62\u5f0f\u7684\u5c55\u5f00\u6298\u53e0 Icon\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ikimuhendis/LDrawer\n\u6548\u679c\u56fe\uff1a\n\n\nFloating Action Button\n\u60ac\u6d6e\u7684\u5706\u5f62\u83dc\u5355\u680f\uff0c\u652f\u6301\u7ec4\u5efa\u6eda\u52a8\u65f6\u81ea\u52a8\u9690\u85cf\u53ca\u5176\u4ed6\u8bbe\u7f6e\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/shamanland/floating-action-button\n\u6548\u679c\u56fe\uff1a\n\n\nSide-Menu.Android\n\u5206\u7c7b\u4fa7\u6ed1\u83dc\u5355\uff0cYalantis \u51fa\u54c1\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Yalantis/Side-Menu.Android\n\u539f\u7406\u5256\u6790\u6587\u6863\uff1a[Side-Menu.Android](https://a.codekk.com/detail/Android/cpacm/Side Menu.Android \u6e90\u7801\u89e3\u6790)\n\u6548\u679c\u56fe\uff1a\n\n\nContext-Menu.Android\n\u53ef\u4ee5\u65b9\u4fbf\u5feb\u901f\u96c6\u6210\u6f02\u4eae\u5e26\u6709\u52a8\u753b\u6548\u679c\u7684\u4e0a\u4e0b\u6587\u83dc\u5355\uff0cYalantis\u51fa\u54c1\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Yalantis/Context-Menu.Android\n\u6548\u679c\u56fe\uff1a\n\n\nDroppy\n\u652f\u6301\u591a\u79cd\u6837\u5f0f\u7684\u4e0b\u62c9\u83dc\u5355\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/shehabic/Droppy\n\n\nMaterialDrawer\nMaterial Design \u98ce\u683c\u7684\u5bfc\u822a\u62bd\u5c49\uff0c\u63d0\u4f9b\u7b80\u4fbf\u4e14\u5f3a\u5927\u7684\u5b9a\u5236\u529f\u80fd\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mikepenz/MaterialDrawer\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details\uff1fid=com.mikepenz.materialdrawer.app\n\u6548\u679c\u56fe\uff1a\n\n\nSlideBottomPanel\n\u5e95\u90e8\u5212\u51fa\u83dc\u5355\uff0c\u6ed1\u52a8\u65f6\u80cc\u666f\u56fe\u900f\u660e\u5ea6\u6e10\u53d8\uff0c\u652f\u6301\u5d4c\u5957 LiewView \u6216 ScrollView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/kingideayou/SlideBottomPanel\nDemo \u5730\u5740\uff1aSlideBottomPanelDemo \u4e0b\u8f7d\n\u6548\u679c\u56fe\uff1a\n\n\nFlowingDrawer\n\u5e26\u624b\u52bf\u6d41\u52a8\u6548\u679c\u4fa7\u6ed1\u83dc\u5355\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mxn21/FlowingDrawer\n\u6548\u679c\u56fe\uff1a\n\n\nFloatingActionMenu-Animation\n\u6269\u5c55FloatingActionMenu\u5e93\uff0c\u81ea\u5b9a\u4e49\u83dc\u5355\u56fe\u6807\uff0c\u52a8\u753b\u6eda\u52a8\u65f6\n\u9879\u76ee\u5730\u5740: https://github.com/toanvc/FloatingActionMenu-Animation\n\u6548\u679c\u56fe: \n\n\n\u56db\u3001ViewPager \u3001Gallery\n\n\nAdvancedPagerSlidingTabStrip\n\u4e00\u4e2a\u5b8c\u7f8e\u517c\u5bb9ViewPager\u7684\u5bfc\u822a\u680f\u7ec4\u4ef6\uff1b\u53ef\u4ee5\u81ea\u5b9a\u4e49TabView\uff1b\u80fd\u52a8\u6001\u52a0\u8f7dTab\u4e0a\u7684Icon\u56fe\u7247\uff1b \u80fd\u663e\u793aTab\u7684\u6d88\u606f\u6570\u91cf\u548c\u63d0\u793a\u5c0f\u5706\u70b9\uff1b\u652f\u6301\u81ea\u5b9a\u4e49\u4e3a\u5fae\u535a\u5f62\u5f0f\u7684\u53ef\u6ed1\u52a8tab\u3002\n\n\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/HomHomLin/AdvancedPagerSlidingTabStrip\u3002\n\n\nConvenientBanner\n\u901a\u7528\u7684\u5e7f\u544a\u680f\u63a7\u4ef6\uff0c\u8ba9\u4f60\u8f7b\u677e\u5b9e\u73b0\u5e7f\u544a\u5934\u6548\u679c\u3002\u652f\u6301\u65e0\u9650\u5faa\u73af\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u81ea\u52a8\u7ffb\u9875\u548c\u65f6\u95f4(\u800c\u4e14\u975e\u5e38\u667a\u80fd\uff0c\u624b\u6307\u89e6\u78b0\u5219\u6682\u505c\u7ffb\u9875\uff0c\u79bb\u5f00\u81ea\u52a8\u5f00\u59cb\u7ffb\u9875\u3002\u4f60\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u5728\u754c\u9762onPause\u7684\u65f6\u5019\u4e0d\u8fdb\u884c\u81ea\u52a8\u7ffb\u9875\uff0conResume\u4e4b\u540e\u7ee7\u7eed\u81ea\u52a8\u7ffb\u9875)\uff0c\u5e76\u4e14\u63d0\u4f9b\u591a\u79cd\u7ffb\u9875\u7279\u6548\u3002 \u5bf9\u6bd4\u5176\u4ed6\u5e7f\u544a\u680f\u63a7\u4ef6\uff0c\u5927\u591a\u90fd\u9700\u8981\u5bf9\u6e90\u7801\u8fdb\u884c\u6539\u52a8\u624d\u80fd\u52a0\u8f7d\u7f51\u7edc\u56fe\u7247\uff0c\u6216\u8005\u5e2e\u4f60\u96c6\u6210\u4e0d\u662f\u4f60\u6240\u9700\u8981\u7684\u56fe\u7247\u7f13\u5b58\u5e93\u3002\u800c\u8fd9\u4e2a\u5e93\u80fd\u8ba9\u6709\u4ee3\u7801\u6d01\u7656\u7684\u4f60\u6b22\u559c\uff0c\u4e0d\u9700\u8981\u5bf9\u5e93\u6e90\u7801\u8fdb\u884c\u4fee\u6539\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u4f60\u559c\u6b22\u7684\u7f51\u7edc\u56fe\u7247\u5e93\u8fdb\u884c\u914d\u5408\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/saiwu-bigkoo/Android-ConvenientBanner\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid-ViewPagerIndicator\n\u914d\u5408 ViewPager \u4f7f\u7528\u7684 Indicator\uff0c\u652f\u6301\u5404\u79cd\u4f4d\u7f6e\u548c\u6837\u5f0f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JakeWharton/Android-ViewPagerIndicator\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.viewpagerindicator.sample\nAPP \u793a\u4f8b\uff1a\u592a\u591a\u4e86\u3002\u3002\n\n\nJazzyViewPager\n\u652f\u6301 Fragment \u5207\u6362\u52a8\u753b\u7684 ViewPager\uff0c\u52a8\u753b\u5305\u62ec\u8f6c\u76d8\u3001\u6de1\u5165\u6de1\u51fa\u3001\u7ffb\u9875\u3001\u5c42\u53e0\u3001\u65cb\u8f6c\u3001\u65b9\u5757\u3001\u7ffb\u8f6c\u3001\u653e\u5927\u7f29\u5c0f\u7b49\uff0c\u6548\u679c\u7c7b\u4f3c\u684c\u9762\u5de6\u53f3\u5207\u6362\u7684\u5404\u79cd\u6548\u679c\uff0c\u4e0d\u8fc7\u684c\u9762\u5e76\u975e\u7528 ViewPager \u5b9e\u73b0\u800c\u5df2\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jfeinstein10/JazzyViewPager\nDemo \u5730\u5740\uff1ahttps://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true\n\n\nJellyViewPager\n\u7279\u6b8a\u5207\u6362\u52a8\u753b\u7684 ViewPager\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/chiemy/JellyViewPager\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid-DirectionalViewPager\n\u652f\u6301\u6a2a\u5411\u548c\u7eb5\u5411(\u5782\u76f4)\u7684 ViewPager\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JakeWharton/Android-DirectionalViewPager\nDemo \u5730\u5740\uff1ahttps://market.android.com/details?id=com.directionalviewpager.sample\n\n\nFancyCoverFlow\n\u652f\u6301 Item \u5207\u6362\u52a8\u753b\u6548\u679c\u7684\u7c7b\u4f3c Gallery View\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/davidschreiber/FancyCoverFlow\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=at.technikum.mti.fancycoverflow.samples\n\u6548\u679c\u56fe\uff1a\n\n\nAndroidTouchGallery\n\u652f\u6301\u53cc\u51fb\u6216\u53cc\u6307\u7f29\u653e\u7684 Gallery(\u7528 ViewPager \u5b9e\u73b0)\uff0c\u76f8\u6bd4\u4e0b\u9762\u7684 PhotoView\uff0c\u5728\u88ab\u653e\u5927\u540e\u4f9d\u7136\u80fd\u6ed1\u5230\u4e0b\u4e00\u4e2a item\uff0c\u5e76\u4e14\u652f\u6301\u76f4\u63a5\u4ece url \u548c\u6587\u4ef6\u4e2d\u83b7\u53d6\u56fe\u7247\uff0c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Dreddik/AndroidTouchGallery\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/touch-gallery-demo.apk?raw=true\nAPP \u793a\u4f8b\uff1a\u7c7b\u4f3c\u5fae\u4fe1\u4e2d\u67e5\u770b\u804a\u5929\u8bb0\u5f55\u56fe\u7247\u65f6\u53ef\u53cc\u51fb\u653e\u5927\uff0c\u5e76\u4e14\u653e\u5927\u60c5\u51b5\u4e0b\u80fd\u6b63\u5e38\u5de6\u53f3\u6ed1\u52a8\u5230\u524d\u540e\u56fe\u7247\n\n\nAndroid Auto Scroll ViewPager\nAndroid \u81ea\u52a8\u6eda\u52a8 \u8f6e\u64ad\u5faa\u73af\u7684 ViewPager\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Trinea/android-auto-scroll-view-pager\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=cn.trinea.android.demo\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://www.trinea.cn/android/auto-scroll-view-pager/\n\n\nAndroid PagerSlidingTabStrip\n\u914d\u5408 ViewPager \u4f7f\u7528\u7684 Indicator\uff0c\u652f\u6301 ViewPager Scroll \u65f6 Indicator \u8054\u52a8\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/astuetz/PagerSlidingTabStrip\n\u539f\u7406\u5256\u6790\u6587\u6863\uff1a[Android PagerSlidingTabStrip](https://a.codekk.com/detail/Android/ayyb1988/PagerSlidingTabStrip \u6e90\u7801\u89e3\u6790)\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.astuetz.viewpager.extensions.sample\n\n\nViewPager3D\nViewPager3D \u6548\u679c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/inovex/ViewPager3D\n\n\nAnimaTabsview\n\u4eff\u7f51\u6613\u4e91\u97f3\u4e50\u6807\u7b7e\u5207\u6362\u7684\u52a8\u753b,\u5e26\u900f\u660e\u5c0f\u4e09\u89d2\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/wuyexiong/transparent-over-animtabsview\n\u5728\u7ebf\u6f14\u793a\uff1ahttp://v.youku.com/v_show/id_XNzA4MjY5NjA0.html\n\n\nLoopingViewPager\n\u65e0\u9650\u5faa\u73af\u7684 ViewPager\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/imbryk/LoopingViewPager\n\n\nandroid_page_curl\n\u7ffb\u4e66\u5377\u66f2\u6548\u679c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/harism/android_page_curl\n\u5728\u7ebf\u6f14\u793a\uff1ahttps://www.youtube.com/watch?v=iwu7P5PCpsw\nAPP \u793a\u4f8b\uff1aiReader\n\n\nViewPagerIndicator\n\u7b80\u5316\u5e76\u5b9e\u73b0 android \u7684 TabHost \u6548\u679c\uff0c\u9876\u90e8\u6ed1\u52a8 tab\uff0c\u5f15\u5bfc\u9875\uff0c\u652f\u6301\u81ea\u5b9a\u4e49 tab \u6837\u5f0f,\u81ea\u5b9a\u4e49\u6ed1\u52a8\u5757\u6837\u5f0f\u548c\u4f4d\u7f6e,\u81ea\u5b9a\u4e49\u5207\u6362 tab \u7684\u8fc7\u6e21\u52a8\u753b,\u5b50\u754c\u9762\u7684\u9884\u52a0\u8f7d\u548c\u754c\u9762\u7f13\u5b58,\u8bbe\u7f6e\u754c\u9762\u662f\u5426\u53ef\u6ed1\u52a8\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/LuckyJayce/ViewPagerIndicator\n\n\nScreenSlideIndicator\n\u8f7b\u91cf\u7ea7\u7684\u5706\u5f62 Indicadtor\uff0c\u4f4d\u7f6e\u53ef\u4ee5\u81ea\u7531\u8c03\u6574\uff0c\u4e0d\u4f1a\u5bf9 ViewPager \u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\u3002\n\u9879\u76ee\u5730\u5740\uff1aScreenSlidePager\n\u6548\u679c\u56fe\uff1a\n\n\nSmartTabLayout\n\u81ea\u5b9a\u4e49\u7684 Tab title strip\uff0c\u57fa\u4e8e Google Samples \u4e2d\u7684 android-SlidingTabBasic \u9879\u76ee\uff0c\u6ed1\u52a8\u65f6 Indicator \u53ef\u5e73\u6ed1\u8fc7\u6e21\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ogaclejapan/SmartTabLayout\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.ogaclejapan.smarttablayout.demo\n\u6548\u679c\u56fe\uff1a\n\n\nAndroidImageSlider\nAndroid \u56fe\u7247\u6ed1\u52a8\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/daimajia/AndroidImageSlider\n\u6548\u679c\u56fe\uff1a\nApp\n\u793a\u4f8b\uff1ahttps://github.com/daimajia/AndroidImageSlider/releases/download/v1.0.8/demo-1.0.8.apk\n\n\nRecyclerViewPager\n\u5b8c\u5168\u7ee7\u627f\u81ea RecyclerView\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u89e6\u53d1\u7ffb\u9875\u7684\u8ddd\u79bb\uff0c\u53ef\u81ea\u5b9a\u4e49\u7ffb\u9875\u901f\u5ea6\uff0c\u652f\u6301\u5782\u76f4\u65b9\u5411\u7684 ViewPager\uff0c\u652f\u6301 Fragment\u3002\n\u9879\u76ee\u5730\u5740\uff1aRecyclerViewPager\n\u6548\u679c\u56fe\uff1a\n\n\nCircleIndicator\n\u8f7b\u91cf\u7ea7ViewPager\u6307\u793a\u5668,\u652f\u6301\u4e09\u79cd\u4e0d\u540c\u7684\u6a21\u5f0f\n\u9879\u76ee\u5730\u5740\uff1aCircleIndicator\n\u6548\u679c\u56fe\uff1a\n\n\n\n\nEasySlidingTabs\n\u4e00\u6b3e\u7b80\u5355\u3001\u6613\u7528\u7684\u6ed1\u52a8\u6807\u7b7e\u9875\n\u9879\u76ee\u5730\u5740\uff1a https://github.com/CaMnter/EasySlidingTabs\n\u6548\u679c\u56fe\uff1a\n\n\n\nParallaxViewPager\nViewPager\u9875\u9762\u5207\u6362\u89c6\u5dee\u6548\u679c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ybq/ParallaxViewPager\n\u6548\u679c\u56fe\uff1a\n\n\n\n\u4e94\u3001GridView\n\n\nStaggeredGridView\n\u5141\u8bb8\u975e\u5bf9\u9f50\u884c\u7684 GridView\uff0c\u7c7b\u4f3c Pinterest \u7684\u7011\u5e03\u6d41\uff0c\u5e76\u4e14\u8ddf ListView \u4e00\u6837\u81ea\u5e26 View \u7f13\u5b58\uff0c\u7ee7\u627f\u81ea ViewGroup\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/maurycyw/StaggeredGridView\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/staggered-gridview-demo.apk?raw=true\nAPP \u793a\u4f8b\uff1aPinterest \u7b49\n\n\nAndroidStaggeredGrid\n\u5141\u8bb8\u975e\u5bf9\u9f50\u884c\u7684 GridView\uff0c\u7c7b\u4f3c Pinterest \u7684\u7011\u5e03\u6d41\uff0c\u7ee7\u627f\u81ea AbsListView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/etsy/AndroidStaggeredGrid\nAPP \u793a\u4f8b\uff1aPinterest \u7b49\n\n\nPinterestLikeAdapterView\n\u5141\u8bb8\u975e\u5bf9\u9f50\u884c\u7684 GridView\uff0c\u7c7b\u4f3c Pinterest \u7684\u7011\u5e03\u6d41\uff0c\u5141\u8bb8\u4e0b\u62c9\u5237\u65b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/GDG-Korea/PinterestLikeAdapterView\nAPP \u793a\u4f8b\uff1aPinterest \u7b49\n\n\nDraggableGridView\nItem \u53ef\u62d6\u52a8\u4ea4\u6362\u4f4d\u7f6e\u7684 GridView\uff0c\u5b9e\u9645\u662f\u81ea\u5df1\u7ee7\u627f ViewGroup \u5b9e\u73b0\uff0c\u7c7b\u4f3c\u684c\u9762\u7684\u5355\u5c4f\u6548\u679c\uff0c\u53ef\u5c4f\u5e55\u81ea\u52a8\u4e0a\u4e0b\u6eda\u52a8\u8fdb\u884c Item \u79fb\u52a8\u4ea4\u6362\uff0c\u591a\u5c4f\u6548\u679c\u89c1\u4e0b\u9762 PagedDragDropGrid\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/thquinn/DraggableGridView\nDemo \u5730\u5740\uff1ahttps://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true\n\u4e5f\u53ef\u81ea\u5b9a\u4e49item\u7684\u5bbd\u9ad8\u548c\u6bcf\u884c\u7684\u4e2a\u6570\uff0c\u540c\u65f6\u4fee\u6539\u4e86\u4ea4\u6362\u903b\u8f91\uff0c\u5f53\u79fb\u52a8\u5230\u53e6\u4e00\u4e2aitem\u65f6\u5c31\u8fdb\u884c\u4ea4\u6362\uff0c\u5e76\u5220\u9664\u6eda\u52a8\u903b\u8f91\u3002\n\u9879\u76ee\u5730\u5740\uff1aDraggableGridView\n\u6548\u679c\u56fe\uff1a\n\n\n\nDividedDraggableView\n\u4e00\u4e2a\u5e26\u6709\u5206\u5272\u533a\u57df\u7684\u53ef\u62d6\u52a8 view ,\u53ef\u5c4f\u5e55\u81ea\u52a8\u4e0a\u4e0b\u6eda\u52a8\u8fdb\u884c Item \u79fb\u52a8\u4ea4\u6362\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/andyken/DividedDraggableView\n\u6548\u679c\u56fe\uff1a\n\n\n\nStickyGridHeaders\nGroupName \u6ed1\u52a8\u5230\u9876\u7aef\u65f6\u4f1a\u56fa\u5b9a\u4e0d\u52a8\u76f4\u5230\u53e6\u5916\u4e00\u4e2a GroupName \u5230\u8fbe\u9876\u7aef\u7684 GridView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/TonicArtos/StickyGridHeaders\n\u6548\u679c\u56fe\uff1a\n\n\nPagedDragDropGrid\nItem \u53ef\u62d6\u52a8\u4ea4\u6362\u4f4d\u7f6e\u3001\u62d6\u52a8\u5220\u9664\u7684\u81ea\u5b9a\u4e49\u63a7\u4ef6\uff0c\u5b9e\u9645\u662f\u81ea\u5df1\u7ee7\u627f ViewGroup \u5b9e\u73b0\uff0c\u7c7b\u4f3c\u684c\u9762\u7684\u591a\u5c4f\u6548\u679c\uff0c\u53ef\u62d6\u52a8\u5230\u5c4f\u5e55\u8fb9\u7f18\uff0c\u5c4f\u5e55\u81ea\u52a8\u5de6\u53f3\u6eda\u52a8\u8fdb\u884c Item \u79fb\u52a8\u4ea4\u6362\uff0c\u53ef\u62d6\u52a8\u8fdb\u884c\u5220\u9664\uff0c\u5355\u5c4f\u6548\u679c\u89c1\u4e0a\u9762 DraggableGridView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mrKlar/PagedDragDropGrid\n\u5728\u7ebf\u6f14\u793a\uff1ahttp://youtu.be/FYTSRfthSuQ\n\n\nAndroid-DraggableGridViewPager\nItem \u53ef\u62d6\u52a8\u4ea4\u6362\u4f4d\u7f6e\u7684 GridView\uff0c\u5b9e\u9645\u662f\u81ea\u5df1\u7ee7\u627f ViewGroup \u5b9e\u73b0\uff0c\u7c7b\u4f3c\u684c\u9762\u7684\u591a\u5c4f\u6548\u679c\uff0c\u53ef\u5c4f\u5e55\u81ea\u52a8\u5de6\u53f3\u6eda\u52a8\u8fdb\u884c Item \u79fb\u52a8\u4ea4\u6362\uff0c\u5355\u5c4f\u6548\u679c\u89c1\u4e0a\u9762 DraggableGridView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/zzhouj/Android-DraggableGridViewPager\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/trinea-download/blob/master/draggable-grid-viewpager-demo.apk?raw=true\n\n\nTwoWayGridView\n\u53ef\u6a2a\u5411\u6eda\u52a8\u7684 GridView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jess-anders/two-way-gridview\n\n\nPagingGridView\n\u5206\u9875\u52a0\u8f7d\u7684 GridView\u3002\u5f53\u6ed1\u52a8\u5230 GridView \u5e95\u90e8\u6700\u540e\u4e00\u4e2a\u884c\u65f6\uff0c\u663e\u793a\u4e00\u4e2a\u8fdb\u5ea6\u884c\uff0c\u7136\u540e\u52a0\u8f7d\u4e0b\u4e00\u9875\u6570\u636e\uff0c\u5e76\u663e\u793a\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/nicolasjafelle/PagingGridView\n\n\nAsymmetricGridView\n\u4e00\u4e2a\u652f\u6301\u8de8\u884c\u548c\u8de8\u5217\u53ef\u53d8 Item \u5927\u5c0f\u7684 GridView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/felipecsl/AsymmetricGridView\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.felipecsl.asymmetricgridview.app\n\u6548\u679c\u56fe\uff1a\n\n\nGridView with Header and Footer\n\u548cListView\u4e00\u6837\u5e26\u5934\u90e8\u548c\u5e95\u90e8\u7684GridView\uff0c\u7528\u6cd5\u548cListView\u4e00\u6837\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/liaohuqiu/android-GridViewWithHeaderAndFooter\n\u6548\u679c\u56fe\uff1a\n\n\n\u516d\u3001ImageView\n\n\nPhotoView\n\u652f\u6301\u53cc\u51fb\u6216\u53cc\u6307\u7f29\u653e\u7684 ImageView\uff0c\u5728 ViewPager \u7b49 Scrolling view \u4e2d\u6b63\u5e38\u4f7f\u7528\uff0c\u76f8\u6bd4\u4e0a\u9762\u7684 AndroidTouchGallery\uff0c\u4e0d\u4ec5\u652f\u6301 ViewPager\uff0c\u540c\u65f6\u652f\u6301\u5355\u4e2a ImageView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/chrisbanes/PhotoView\n\u539f\u7406\u5256\u6790\u6587\u6863\uff1a[PhotoView](https://a.codekk.com/detail/Android/dkmeteor/PhotoView \u6e90\u7801\u89e3\u6790)\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=uk.co.senab.photoview.sample\nAPP \u793a\u4f8b\uff1aphotup\n\n\nFresco-ImageView\nFresco-ImageView\u662f\u4e00\u79cdAndroid\u5e73\u53f0\u7684\u56fe\u50cf\u63a7\u4ef6\uff0c\u5e95\u5c42\u662f\u5bf9Fresco\u7684\u5c01\u88c5\uff0c\u53ef\u4ee5\u5f02\u6b65\u52a0\u8f7d\u7f51\u7edc\u56fe\u7247\u3001\u9879\u76ee\u8d44\u6e90\u548c\u672c\u5730\u56fe\u7247\uff0c\u5e76\u4e14\u652f\u6301\u53cc\u6307\u7f29\u653e\u3001\u56fe\u7247\u7684\u57fa\u672c\u5904\u7406\u4ee5\u53caFresco\u7684\u6240\u6709\u7279\u6027\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/HomHomLin/FrescoImageView\n\n\nandroid-gif-drawable\n\u652f\u6301 gif \u663e\u793a\u7684 view\uff0c\u7528 jni \u5b9e\u73b0\u7684\uff0c\u7f16\u8bd1\u751f\u6210 so \u5e93\u540e\u76f4\u63a5 xml \u5b9a\u4e49 view \u5373\u53ef\uff0c\u800c\u4e14\u672c\u8eab\u4e0d\u4f9d\u8d56\u4e8e\u5176\u4ed6\u5f00\u6e90\u9879\u76ee\u6240\u4ee5\u76f8\u5bf9\u4e0b\u9762\u7684 ImageViewEx \u7b80\u5355\u7684\u591a\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/koral--/android-gif-drawable\n\n\nImageViewEx\n\u652f\u6301 Gif \u663e\u793a\u7684 ImageView\uff0c\u4f9d\u8d56\u5f88\u591a\uff0c\u7f16\u8bd1\u8fc7\u7a0b\u5f88\u7e41\u7410\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/frapontillo/ImageViewEx\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/imageviewex-demo.apk?raw=true\n\n\nRoundedImageView\n\u5e26\u5706\u89d2\u7684 ImageView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/vinc3m1/RoundedImageView\n\u6548\u679c\u56fe\uff1a\n\n\nSelectableRoundedImageView\nImageView \u5141\u8bb8\u56db\u4e2a\u89d2\u7684\u6bcf\u4e00\u4e2a\u6709\u4e0d\u540c\u7684\u534a\u5f84\u503c\u3002\u4e5f\u5141\u8bb8\u692d\u5706\u5f62\u3001\u5706\u5f62\u7684\u5f62\u72b6\u6216\u8005\u8fb9\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/pungrue26/SelectableRoundedImageView\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.joooonho\n\u6548\u679c\u56fe\uff1a\n\n\nColorArt\n\u6839\u636e\u56fe\u7247\u7684\u5747\u8272\u8bbe\u7f6e\u80cc\u666f\u8272\u663e\u793a\u6587\u5b57\u548c\u56fe\u7247\uff0c\u7c7b\u4f3c itune11 \u4e2d\u6548\u679c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/MichaelEvans/ColorArt\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/color-art-demo.apk?raw=true\n\n\nCircleImageView\n\u5706\u5f62\u7684 ImageView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/hdodenhof/CircleImageView\n\u6548\u679c\u56fe\uff1a\n\n\nImageViewZoom\n\u652f\u6301\u653e\u5927\u548c\u5e73\u79fb\u7684 ImageView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/sephiroth74/ImageViewZoom\nAPP \u793a\u4f8b\uff1ahttps://play.google.com/store/apps/details?id=com.aviary.android.feather\n\n\nKenBurnsView\n\u5b9e\u73b0 Ken Burns effect \u6548\u679c\uff0c\u8fbe\u5230\u8eab\u4e34\u5176\u5883\u6548\u679c\u7684 ImageView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/flavioarfaria/KenBurnsView\n\n\nCustomShapeImageView\n\u5404\u79cd\u5f62\u72b6\u7684 ImageView, \u76f8\u6bd4\u4e0a\u9762\u7684\u5706\u5f62 ImageView\uff0c\u591a\u4e86\u66f4\u591a\u5f62\u72b6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/MostafaGazar/CustomShapeImageView\n\u6548\u679c\u56fe\uff1a\n\n\nShape Image View\n\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5404\u79cd\u5f62\u72b6\u7684 ImageView, \u5e76\u4e14\u652f\u6301\u8fb9\u6846\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/siyamed/android-shape-imageview\n\u6548\u679c\u56fe\uff1a\nhttps://github.com/siyamed/android-shape-imageview/raw/master/images/all-samples.png\n\n\nTextDrawable\n\u4e00\u4e2a\u7528\u4e8e\u751f\u6210\u5e26\u6709\u6587\u672c\u6216\u8005\u5b57\u6bcd\u7684\u56fe\u7247\u7684\u8f7b\u91cf\u7ea7\u5e93\u3002\u6269\u5c55\u81ea Drawable\uff0c\u56e0\u6b64\u53ef\u7528\u4e8e\u73b0\u6709/\u81ea\u5b9a\u4e49/\u7f51\u7edc\u7b49 ImageView \u7c7b\uff0c\u5e76\u4e14\u5305\u542b\u4e00\u4e2a\u6d41\u63a5\u53e3\u7528\u4e8e\u521b\u5efa drawables \u4ee5\u53ca\u4e00\u4e2a\u5b9a\u5236\u7684 ColorGenerator\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/amulyakhare/TextDrawable\n\u6548\u679c\u56fe\uff1a\n\n\nandroid-smart-image-view\n\u53ef\u4ece URL \u6216 contact address book \u52a0\u8f7d\u56fe\u7247\u7684 ImageView\uff0c\u652f\u6301\u7f13\u5b58\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/loopj/android-smart-image-view\n\n\nPhotoView\n\u652f\u6301\u53cc\u6307/\u53cc\u51fb\u7f29\u653e\u7684ImageView,\u652f\u6301\u4ece\u4e00\u4e2aPhotoView\u7f29\u653e\u5230\u53e6\u5916\u4e00\u4e2aPhotoView(\u70b9\u51fb\u56fe\u7247\u653e\u5927\u9884\u89c8),\u76f8\u5bf9\u4e8e\u5176\u4ed6PhototView\u6709\u66f4\u52a0\u5e73\u6ed1\u7684\u7f29\u653e,\u5e73\u79fb\u7684\u52a8\u753b,\u5e76\u4e14\u652f\u6301\u6240\u6709\u7684ScaleType,\u53ef\u4ee5\u4f5c\u4e3a\u666e\u901a\u7684ImageView\u4f7f\u7528\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/bm-x/PhotoView\n\u6548\u679c\u56fe\uff1a\n\n\nTextWithImageDrawable\n\u4e00\u4e2a\u53ef\u4ee5\u540c\u65f6\u5305\u542b\u56fe\u7247\u548c\u6587\u5b57\u7684drawable,\u4f7f\u7528\u65b9\u5f0f\u7c7b\u4f3cTextView\u548c\u5b83\u7684drawableLeft\u4e4b\u7c7b\u7684\u65b9\u6cd5,\u529f\u80fd\u6bd4\u8f83\u5168\u9762,\u53ef\u4ee5\u4ee3\u66ffTextView\u6216\u662f\u89e3\u51b3\u4e00\u4e9b\u975e\u5f97\u9700\u8981\u5728ImageView\u4e2d\u540c\u65f6\u663e\u793a\u6587\u5b57\u548c\u56fe\u7247\u7684\u95ee\u9898\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/wuseal/TextWithImageDrawable\n\n\nAnchorImageView\n\u4e00\u4e2a\u53ef\u4ee5\u951a\u70b9\u5b9a\u4f4d\u7684ImageView(\u6839\u636e\u50cf\u7d20\u70b9)\nDemo\u4e2d\u901a\u8fc7AnchorImageView\u7b80\u5355\u7684\u5b9e\u73b0\u4e86\u4e00\u4e2a\u8bfe\u672c\u70b9\u8bfb\u7684\u529f\u80fd\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jcodeing/AnchorImageView\nDemo \u5730\u5740\uff1aDownload here\n\n\n\n\u4e03\u3001ProgressBar\n\n\nSmoothProgressBar\n\u6c34\u5e73\u8fdb\u5ea6\u6761\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/castorflex/SmoothProgressBar\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=fr.castorflex.android.smoothprogressbar.sample\n\n\nMaterialProgessBar\nMaterial Design \u7684\u8fdb\u5ea6\u6761\uff0c\u652f\u6301 Android 4.0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/DreaminginCodeZH/MaterialProgressBar\nDemo \u5730\u5740\uff1ahttps://github.com/DreaminginCodeZH/MaterialProgressBar/blob/master/dist/sample.apk\n\n\nProgressWheel\n\u652f\u6301\u8fdb\u5ea6\u663e\u793a\u7684\u5706\u5f62 ProgressBar\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Todd-Davies/ProgressWheel\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/progress-wheel-demo.apk?raw=true\n\n\nandroid-square-progressbar\n\u5728\u56fe\u7247\u5468\u56f4\u663e\u793a\u8fdb\u5ea6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mrwonderman/android-square-progressbar\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=net.yscs.android.square_progressbar_example\n\u6548\u679c\u56fe\uff1a\nAPP \u793a\u4f8b\uff1asquare\n\n\nHoloCircularProgressBar\nAndroid4.1 \u65f6\u949f App \u6837\u5f0f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/passsy/android-HoloCircularProgressBar\n\u6548\u679c\u56fe\uff1a\nAPP \u793a\u4f8b\uff1aAndroid4.1 \u65f6\u949f App\n\n\nProgressButton\n\u901a\u8fc7\u56fe\u9489\u7684\u4e0d\u540c\u72b6\u6001\u663e\u793a\u8fdb\u5ea6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/f2prateek/progressbutton\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://f2prateek.com/progressbutton/\n\u6548\u679c\u56fe\uff1a\n\n\nGoogleProgressBar\n\u7c7b\u4f3c google \u591a\u4e2a\u5706\u5f62\u5361\u7247\u7ffb\u8f6c\u7684 progressBar\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jpardogo/GoogleProgressBar\n\u6548\u679c\u56fe\uff1a\n\n\nTH-ProgressButton\n\u5e26\u5706\u5f62\u8fdb\u5ea6\u663e\u793a\u7684\u6309\u94ae\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/torryharris/TH-ProgressButton\n\u6548\u679c\u56fe\uff1a\nhttps://raw.github.com/Vyshakh-K/TH-ProgressButton/master/screenshots/progressshot2.png\n\n\nNumberProgressBar\n\u5e26\u6570\u5b57\u8fdb\u5ea6\u7684\u8fdb\u5ea6\u6761\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/daimajia/NumberProgressBar\n\u6548\u679c\u56fe\uff1a\n\n\nCircularProgressDrawable\n\u5e26\u5706\u5f62\u8fdb\u5ea6\u663e\u793a\u7684\u8fdb\u5ea6\u6761\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Sefford/CircularProgressDrawable\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid-RoundCornerProgressBar\nAndroid \u5706\u89d2 ProgressBar\uff0c\u53ef\u81ea\u5b9a\u4e49\u5706\u89d2\u989c\u8272\u548c\u534a\u5f84\uff0c\u5305\u62ec\u5e26 Icon \u548c\u4e0d\u5e26 Icon \u4e24\u79cd\u7c7b\u578b\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/akexorcist/Android-RoundCornerProgressBar\n\u6548\u679c\u56fe\uff1a\n\n\ncircular-progress-button\n\u5e26\u8fdb\u5ea6\u663e\u793a\u7684 Button\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/dmytrodanylyk/circular-progress-button\n\u6548\u679c\u56fe\uff1a\n\n\nWaveView\n\u4e00\u4e2a\u6ce2\u7eb9\u6548\u679c\u7684 View\uff0c\u53ef\u7528\u6765\u505a ProgressBar\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/john990/WaveView\nDemo \u5730\u5740\uff1ahttps://raw.github.com/john990/WaveView/master/screenshot%26apk/demo.unaligned.apk\n\u6548\u679c\u56fe\uff1a\n\n\nMaterialLoadingProgressBar\n\u62bd\u53d6\u81ea SwipeRefreshLayout \u7684 Material Design \u8fdb\u5ea6\u6307\u793a\u5668\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/lsjwzh/MaterialLoadingProgressBar\n\u6548\u679c\u56fe\uff1a\n\n\nMetaballLoading\nA 2d metaball loading\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/dodola/MetaballLoading\n\u6548\u679c\u56fe\uff1a\n\u6548\u679c\u56fe\uff1a\n\n\nSectorProgressView\n\u4e00\u4e2a\u5706\u5f62\u6216\u73af\u5f62\u7684\u8fdb\u5ea6\u663e\u793a\u63a7\u4ef6\uff0c\u7528\u5706\u4e2d\u6247\u5f62\u7684\u89d2\u5ea6\u5927\u5c0f\u6765\u8868\u793a\u8fdb\u5ea6\u4fe1\u606f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/timqi/SectorProgressView\nDemo\uff1aapk download \n\u6548\u679c\u56fe\uff1a \n\n\nCircularFillableLoaders\n\u4e00\u4e2a\u53ef\u4ee5\u7528\u4e8e\u95ea\u5c4f\u6216\u8005\u5176\u4ed6\u5730\u65b9\u52a0\u8f7d\u7684\u63a7\u4ef6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/lopspower/CircularFillableLoaders\nDemo\u5730\u5740\uff1a(https://play.google.com/store/apps/details?id=com.mikhaellopez.circularfillableloaderssample) \n\u6548\u679c\u56fe\uff1a \n\n\nPinWheel\n\u4e00\u4e2a\u65cb\u8f6c\u7684\u5927\u98ce\u8f66Dialog\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/codingWang/PinWheel\n\u6548\u679c\u56fe\uff1a\n\n\nColorArcProgressBar\n\u4e00\u4e2a\u53ef\u5b9a\u5236\u7684\u5706\u5f62\u8fdb\u5ea6\u6761\uff0c\u901a\u8fc7xml\u53c2\u6570\u914d\u7f6e\u53ef\u5b9e\u73b0QQ\u5065\u5eb7\u4e2d\u6b65\u6570\u7684\u5f27\u5f62\u8fdb\u5ea6\u663e\u793a\u3001\u4eea\u76d8\u8868\u663e\u793a\u901f\u5ea6\u3001\u6700\u5e38\u89c1\u7684\u4e0b\u8f7d\u8fdb\u5ea6\u6761\u7b49\u529f\u80fd\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Shinelw/ColorArcProgressBar\n\u6548\u679c\u56fe\uff1a\n\n\nLoadingDrawable\n\u4e00\u4e9b\u9177\u70ab\u7684android\u52a0\u8f7d\u52a8\u753b\uff0c\u53ef\u4ee5\u4e0e\u4efb\u4f55\u7ec4\u4ef6\u914d\u5408\u4f7f\u7528\u4f5c\u4e3a\u52a0\u8f7d\u7684\u7ec4\u4ef6\u6216\u8005ProgressBar\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/dinuscxj/LoadingDrawable\n\u6548\u679c\u56fe\uff1a\n\n\n\n\n\n\nAndroid-SpinKit\nAndroid\u52a0\u8f7d\u52a8\u753b\u5e93\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ybq/Android-SpinKit\n\u6548\u679c\u56fe\uff1a\n\n\n\n\u516b\u3001TextView\n\u5305\u62ec TextView \u53ca\u6240\u6709\u7ee7\u627f\u81ea TextView \u63a7\u4ef6\uff0c\u5982 EditText\u3001Button\u3001RadioButton\n\n\nandroid-flowtextview\n\u6587\u5b57\u81ea\u52a8\u73af\u7ed5\u5176\u4ed6 View \u7684 Layout\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/deano2390/FlowTextView\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid Form EditText\n\u9a8c\u8bc1\u8f93\u5165\u5408\u6cd5\u6027\u7684\u7f16\u8f91\u6846\uff0c\u652f\u6301\u8f93\u5165\u3001\u82f1\u6587\u3001ip\u3001url \u7b49\u591a\u79cd\u6b63\u5219\u9a8c\u8bc1\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/vekexasia/android-edittext-validator\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.andreabaccega.edittextformexample\n\n\nEmojicon\n\u652f\u6301 emojis \u7684 TextView \u548c EditText\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/rockerhieu/emojicon\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://rockerhieu.com/emojicon/\n\n\nandroid-circlebutton\nAndroid \u5706\u5f62\u6309\u94ae\uff0c\u5b9e\u9645\u5b9e\u73b0\u662f\u7ee7\u627f\u81ea ImageView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/markushi/android-circlebutton\nDemo \u5730\u5740\uff1ahttps://github.com/markushi/android-circlebutton/blob/master/example/example.apk\n\n\nSegmented Radio Buttons for Android\niOS\u2019s segmented controls \u7684\u5b9e\u73b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/vinc3m1/android-segmentedradiobutton\nDemo \u5730\u5740\uff1ahttps://github.com/thquinn/DraggableGridView/blob/master/bin/DraggableGridViewSample.apk?raw=true\n\u6548\u679c\u56fe\uff1a\n\n\nChips EditText Library\n\u652f\u6301\u56fd\u5bb6\u540d\u5b57\u8054\u60f3\u4ece\u800c\u9009\u62e9\u663e\u793a\u8be5\u56fd\u56fd\u65d7\u7684 EditText\uff0c\u5b9e\u9645\u5c31\u662f\u901a\u8fc7 SpannableStringBuilder \u5b9e\u73b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/kpbird/chips-edittext-library\nDemo \u5730\u5740\uff1ahttps://github.com/kpbird/chips-edittext-library/tree/master/ChipsEditTextDemo/bin\n\n\nAutoFitTextView\n\u53ef\u56fa\u5b9a\u8fb9\u754c\u5185\u5bb9\u5b57\u4f53\u5927\u5c0f\u81ea\u9002\u5e94\u7684 TextView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/grantland/android-autofittextview\n\n\nShimmer for Android\n\u6587\u5b57\u53d1\u6de1\u5149\u7684 TextView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/RomainPiel/Shimmer-android\n\n\nTitanic\n\u53ef\u4ee5\u663e\u793a\u6c34\u4f4d\u4e0a\u5347\u4e0b\u964d(\u4e0d\u77e5\u9053\u8be5\u600e\u4e48\u63cf\u8ff0 \u56e7)\u7684 TextView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/RomainPiel/Titanic\n\u6548\u679c\u56fe\uff1a\n\n\nandroid-iconify\n\u63d0\u4f9b\u5e26 Icon \u7684 TextView,Menu,Button \u7b49\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JoanZapata/android-iconify\n\n\nCalligraphy\n\u8ba9\u6211\u4eec\u5728 android \u5f00\u53d1\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u5b57\u4f53\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/chrisjenx/Calligraphy\n\u6548\u679c\u56fe\uff1a\n\n\nCreditsRoll\n\u7c7b\u4f3c\u661f\u7403\u5927\u6218\u5b57\u5e55\u6548\u679c\u7684 TextView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/frakbot/CreditsRoll\n\n\nandroid-process-buton\n\u5e26\u52a0\u8f7d\u6216\u63d0\u4ea4\u8fdb\u5ea6\u7684 Button\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/dmytrodanylyk/android-process-buton\n\n\nFButton\n\u6241\u5e73\u5316\u7684 Button\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/hoang8f/android-flat-button\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo\n\n\nFloatingActionButton\n\u4e00\u4e2a\u7c7b\u4f3c Android \u7248 Google+\u6d6e\u52a8\u529f\u80fd\u6309\u94ae\u7684\u63a7\u4ef6\uff0c\u53ef\u4ee5\u54cd\u5e94 ListView \u7684\u6eda\u52a8\u4e8b\u4ef6\u3002\u5f53\u5217\u8868\u5411\u4e0a\u6eda\u52a8\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u663e\u793a\uff0c\u5411\u4e0b\u6eda\u52a8\u7684\u65f6\u5019\u81ea\u52a8\u9690\u85cf\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/makovkastar/FloatingActionButton\nDemo \u5730\u5740\uff1ahttps://github.com/makovkastar/FloatingActionButton/tree/master/\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid Saripaar\nAndroid \u8868\u5355\u9a8c\u8bc1\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ragunathjawahar/android-saripaar/\n\n\nJumpingBeans\n\u6587\u5b57\u50cf Mexican beans \u4e00\u6837\u8df3\u52a8\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/frakbot/JumpingBeans\nDemo \u5730\u5740\uff1ahttp://play.google.com/store/apps/details?id=net.frakbot.jumpingbeans.demo\n\u6548\u679c\u56fe\uff1a\n\n\nFancyButtons\n\u4e00\u4e2a\u4e0d\u7528\u56fe\u7247\u5c31\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u521b\u5efa\u51fa\u6f02\u4eae\u6309\u94ae\u7684\u5e93\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/medyo/fancybuttons\nDemo \u5730\u5740\uff1ahttps://github.com/medyo/fancybuttons/tree/master/samples\n\u6548\u679c\u56fe\uff1a\nhttps://raw.githubusercontent.com/medyo/fancybuttons/master/screenshots/fancy2.png\n\n\nAndroid-RobotoTextView\n\u4e00\u4e2a\u5b9e\u73b0\u4e86\u6240\u6709 Roboto \u5b57\u4f53\u7684 TextView\uff0c\u5305\u62ec\u65b0\u51fa\u7684 Roboto Slab \u5b57\u4f53\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/johnkil/Android-RobotoTextView\nDemo \u5730\u5740\uff1ahttp://play.google.com/store/apps/details?id=com.devspark.robototextview\nDemo \u9879\u76ee\uff1ahttps://github.com/johnkil/Android-RobotoTextView/tree/master/robototextview-sample\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid-WizardPager\n\u4e00\u4e2a\u8868\u5355\u5411\u5bfc\u5e93\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/romannurik/android-wizardpager\nDemo \u9879\u76ee\uff1ahttps://github.com/str4d/android-wizardpager/tree/textfield\n\u6548\u679c\u56fe\uff1a\n\n\nRippleView\n\u4e00\u4e2a\u5b9e\u73b0\u4e86 Android L \u4e0a\u624d\u5f15\u5165\u7684\u70b9\u51fb\u6309\u94ae\u540e\u51fa\u73b0\u6c34\u6ce2\u7eb9\u6548\u679c\u7684\u6309\u94ae\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/siriscac/RippleView\nDemo \u9879\u76ee\uff1ahttps://github.com/siriscac/RippleView/tree/master/RippleViewExample\n\u6548\u679c\u56fe\uff1a\n\n\nRippleEffect\n\u4e00\u4e2a\u5b9e\u73b0 Material Design Ripple \u6548\u679c\u7684\u5e93\uff0c\u652f\u6301 Android API 9+\u4ee5\u4e0a\u7248\u672c\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/traex/RippleEffect\nDemo \u9879\u76ee\uff1ahttps://github.com/traex/RippleEffect/tree/master/sample\n\u6548\u679c\u56fe\uff1a\n\n\nRippleCompat\n\u4f7f\u7528\u6613\u4e8e\u79fb\u690d\u7684\u65b9\u5f0f\u4e3aUI\u63a7\u4ef6\u5b9e\u73b0\u6ce2\u7eb9\u6548\u5e94\uff0c\u53ef\u4ee5\u9002\u914d\u63a7\u4ef6\u539f\u80cc\u666f\u53caPalette\u652f\u6301\u3002api\u7b80\u5355\uff0c\u53ef\u81ea\u5b9a\u4e49\u6548\u679c\uff0c\u517c\u5bb9\u81f3Android API 7+\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/desmond1121/RippleCompat\nDemo \u9879\u76ee\uff1ahttps://github.com/desmond1121/RippleCompat/tree/master/app\n\u6548\u679c\u56fe\uff1a\n\n\n\npalette\u6548\u679c\uff1a\n\n\n\nAndroid Floating Label Widgets\n\u5305\u542b\u4e00\u7cfb\u5217\u63a7\u4ef6\uff0c\u8fd9\u4e9b\u63a7\u4ef6\u7279\u70b9\u662f\uff1a\u6709\u9ed8\u8ba4\u503c\uff0c\u5f53\u503c\u4e0d\u4e3a\u7a7a\u65f6\u9ed8\u8ba4\u503c\u6d6e\u52a8\u5230\u4e0a\u9762\u53d8\u4e3a\u63d0\u793a\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/marvinlabs/android-floatinglabel-widgets\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.marvinlabs.widget.floatinglabel.demo\n\u5728\u7ebf\u6f14\u793a\uff1ahttp://www.youtube.com/watch?v=hpZD9gJcRg0&feature=youtu.be\n\n\nMaterialEditText\nEditText \u7684 Material Design \u5b9e\u73b0\u3002\u5305\u542b Google Material Design Spec\u4e2d\u7684 UI \u6548\u679c\u548c\u4e00\u4e9b\u65b0\u589e\u7279\u6027\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/rengwuxian/MaterialEditText\n\n\nMaterialEditText\n\u5b9e\u73b0 Material Design \u4e2d Ripple \u6548\u679c\u7ebf\u6761\u80cc\u666f\u7684 EditText\u3002\u76f4\u63a5\u66ff\u6362\u539f\u751f EditText \u5373\u53ef\u96c6\u6210\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/DreamingInCodeZH/MaterialEditText\n\n\nMultiActionTextView\n\u53ef\u4ee5\u5206\u522b\u7ed9 TextView \u4e2d\u7684\u67d0\u51e0\u4e2a\u5b57\u8bbe\u7f6e\u70b9\u51fb\u4e8b\u4ef6\u7684 TextView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ajaysahani/MultiActionTextView\n\u6548\u679c\u56fe\uff1a\n\n\nToggleButton\n\u72b6\u6001\u5207\u6362\u7684 Button\uff0c\u7c7b\u4f3c iOS\uff0c\u7528 View \u5b9e\u73b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/zcweng/ToggleButton\n\u6548\u679c\u56fe\uff1a\n\n\nSwitchButton\n\u72b6\u6001\u5207\u6362\u7684 Button\uff0c\u7c7b\u4f3c iOS\uff0c\u62e5\u6709\u826f\u597d\u7684\u7528\u6237\u754c\u9762\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/kyleduo/SwitchButton\n\u6548\u679c\u56fe\uff1a\n\n\nSlideSwitch\n\u72b6\u6001\u5207\u6362\u7684\u5f00\u5173\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u7c7b\u4f3c IOS \u7684\u5706\u5f62\uff0c\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u77e9\u5f62\uff0c\u7528 View \u5b9e\u73b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Leaking/SlideSwitch\n\u6548\u679c\u56fe\uff1a\n\n\nExpandableTextView\n\u53ef\u5c55\u5f00\u548c\u6536\u7f29\u5185\u5bb9\u7684 TextView\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Manabu-GT/ExpandableTextView\n\u6548\u679c\u56fe\uff1a\n\n\nTagCloudView(\u652f\u6301 SingleLine \u6a21\u5f0f\u7684\u6807\u7b7e\u4e91)\n\u6807\u7b7e\u4e91\u6548\u679c\uff0c\u53ea\u9700\u8981\u4e00\u884c\u4ee3\u7801\u5373\u53ef\u8bbe\u7f6e\u4e3a SingleLine \u6a21\u5f0f\uff0c\u8f7b\u677e\u5b9e\u73b0\u77e5\u4e4e\u95ee\u9898\u8bdd\u9898\u5217\u8868\u6548\u679c\u3002SingleLine \u6a21\u5f0f\u65f6\u672b\u5c3e\u6587\u5b57\u53ca\u56fe\u7247\u53ef\u81ea\u5b9a\u4e49\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/kingideayou/TagCloudView\n\u793a\u4f8bAPK\u5730\u5740\uff1ahttps://github.com/kingideayou/TagCloudView/raw/master/apk/Demo.apk\nAPP\u793a\u4f8b\uff1a\u77e5\u4e4e\n\u6548\u679c\u56fe\uff1a\n\n\nBubbleTextView\nAndroid Bubble View\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/dupengtao/BubbleTextView\n\u6548\u679c\u56fe\uff1a\n\n\nshadow-layout\nAndroid Shadow Layout\n\u89e3\u51b3\u4e86CardView\uff1a1.\u4e0d\u80fd\u753b\u5706\u7684\u9634\u5f71\u30022.\u8bbe\u7f6e\u9634\u5f71\u7684\u4f4d\u7f6e\u30023.\u8bbe\u7f6e\u9634\u5f71\u989c\u8272\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/dmytrodanylyk/shadow-layout\n\u6548\u679c\u56fe\uff1a\n\n\n\nMoneyTextView\n\u4e00\u4e2a\u652f\u6301\u52a0\u6cd5\u8fd0\u7b97\u7684\u91d1\u989d\u8f93\u5165TextView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/andyken/MoneyTextView\n\u6548\u679c\u56fe\uff1a\n\n\n\n\u4e5d\u3001ScrollView\n\n\nDiscrollview\n\u652f\u6301\u6eda\u52a8\u65f6 Item \u6de1\u5165\u6de1\u51fa\uff0c\u5e73\u79fb\uff0c\u7f29\u653e\u6548\u679c\u7684 ScrollView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/flavienlaurent/discrollview\nDemo \u5730\u5740\uff1ahttps://github.com/flavienlaurent/discrollview/raw/master/sample.apk\n\n\nPullScrollView\n\u4eff\u7167\u65b0\u6d6a\u5fae\u535a Android \u5ba2\u6237\u7aef\u4e2a\u4eba\u4e2d\u5fc3\u7684 ScrollView\uff0c\u4e0b\u62c9\u80cc\u666f\u4f38\u7f29\u56de\u5f39\u6548\u679c\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/MarkMjw/PullScrollView\n\u6548\u679c\u56fe\uff1a\n\n\nArcLayout\n\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5f27\u5e03\u5c40\u5e93\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ogaclejapan/ArcLayout\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.ogaclejapan.arclayout.demo\n\u6548\u679c\u56fe\uff1a\nhttps://raw.githubusercontent.com/ogaclejapan/ArcLayout/master/art/demo2.gif\n\n\nParallaxScrollView\n\u652f\u6301\u89c6\u5dee\u6eda\u52a8\u7684 ScrollView \uff0c\u80cc\u666f\u56fe\u7247\u7684\u6eda\u52a8\u901f\u5ea6\u5c0f\u4e8e ScrollView \u4e2d\u5b50\u63a7\u4ef6\u7684\u6eda\u52a8\u901f\u5ea6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/chrisjenx/ParallaxScrollView\nDemo \u5730\u5740\uff1ahttp://cloud.github.com/downloads/chrisjenx/ParallaxScrollView/ParallaxScrollViewDemo-v1.0.5.apk\n\n\nAKParallax-Android\n\u652f\u6301\u89c6\u5dee\u6eda\u52a8\u7684 ScrollView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ideaismobile/AKParallax-Android\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.appkraft.parallax_sample\n\n\nAndroid-ObservableScrollView\n\u76d1\u542c\u6eda\u52a8\u89c6\u56fe\u6eda\u52a8\u4e8b\u4ef6\u7684\u5e93\uff0c\u5e2e\u52a9\u4e0e Toolbar \u7684\u4ea4\u4e92\u52a8\u6548\u5904\u7406\u4e0e Material Design \u7684\u5b9e\u73b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ksoichiro/Android-ObservableScrollView\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.github.ksoichiro.android.observablescrollview.samples2\n\n\nOverScrollView\n\u6709\u5f39\u6027\u7684 ScrollView\uff0c\u5b9e\u73b0\u4e86\u5f53\u624b\u6307\u6ed1\u52a8\u5230 ScrollView \u7684\u9876\u90e8\u3001\u5e95\u90e8\u65f6\uff0c\u53ef\u4ee5\u7ee7\u7eed\u7684\u5411\u4e0a\u3001\u5411\u4e0b\u62c9\u4f38\u3002\u5f53\u91ca\u653e\u624b\u6307\u7684\u65f6\u5019\uff0c\u5411\u4e0a\u3001\u4e0b\u56de\u5f39\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/EverythingMe/OverScrollView\n\n\n\u5341\u3001TimeView\n\u5305\u62ec TimePicker\u3001DatePicker\u3001CalendarView\u3001Clock \u7b49\u65f6\u95f4\u76f8\u5173\u63a7\u4ef6\n\n\nandroid-times-square\nAndroid \u65e5\u5386\u65f6\u95f4\u90e8\u4ef6\uff0c\u652f\u6301\u9009\u53d6\u5355\u4e2a\u65e5\u671f\uff0c\u591a\u4e2a\u65e5\u671f\uff0c\u53ca\u65e5\u671f\u533a\u95f4\u6bb5\u548c\u5bf9\u8bdd\u6846\u5f62\u5f0f\u663e\u793a\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/square/android-times-square\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/times-square-demo.apk?raw=true\n\n\nandroid-calendar-card\n\u65e5\u5386\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/kenumir/android-calendar-card\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.wt.calendarcardsample\n\u6548\u679c\u56fe\uff1a\n\n\nAndroidWheel\nAndroid Wheel \u652f\u6301\u57ce\u5e02\u3001\u591a\u79cd\u65e5\u671f\u65f6\u95f4\u3001\u5bc6\u7801\u3001\u56fe\u7247\n\u9879\u76ee\u5730\u5740\uff1ahttps://code.google.com/p/android-wheel/\n\u6548\u679c\u56fe\uff1a\n\n\nGoogleDateTimePickers\n\u65f6\u95f4\u9009\u62e9\u90e8\u4ef6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Mirkoddd/GoogleDateTimePickers\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://play.google.com/store/apps/details?id=com.mirko.sample&hl=it\n\n\nDateTimePicker\n\u65e5\u671f\u9009\u62e9\u90e8\u4ef6(Google Agenda \u7684\u6837\u5f0f\u98ce\u683c)\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/flavienlaurent/datetimepicker\nDemo \u5730\u5740\uff1ahttps://raw.github.com/biboune/datetimepicker/master/datetimepicker-sample.apk\n\u6548\u679c\u56fe\uff1a\n\n\nandroid-betterpickers\n\u63d0\u4f9b\u65e5\u671f\u3001\u6570\u5b57\u3001\u65f6\u95f4\uff08\u6570\u5b57\u65b9\u5f0f\u548c\u949f\u8868\u65b9\u5f0f\uff09\u3001\u91cd\u590d\u5468\u671f\uff08\u95f9\u949f\u7684\u5468\u671f\u91cd\u590d\uff09\u3001HMS\uff08\u65f6\u3001\u5206\u3001\u79d2\uff09\u7684\u9009\u62e9\uff0c\u652f\u6301\u4ee5 DialogFragment \u7684\u5f39\u7a97\u9009\u62e9\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/derekbrameyer/android-betterpickers\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.doomonafireball.betterpickers.sample\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid Week View\n\u65e5\u671f\u63a7\u4ef6\uff0c\u652f\u6301\u5468\uff0c\u5929\u89c6\u56fe\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u6837\u5f0f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/alamkanak/Android-Week-View\n\u6548\u679c\u56fe\uff1a\n\n\nPickerView\n\u4eff iOS \u7684 PickerView \u63a7\u4ef6\uff0c\u6709\u65f6\u95f4\u9009\u62e9\u548c\u9009\u9879\u9009\u62e9\u5e76\u652f\u6301\u4e00\u4e8c\u4e09\u7ea7\u8054\u52a8\u6548\u679c\uff0cTimePopupWindow \u65f6\u95f4\u9009\u62e9\u5668\uff0c\u652f\u6301\u5e74\u6708\u65e5\u65f6\u5206\uff0c\u5e74\u6708\u65e5\uff0c\u65f6\u5206\u7b49\u683c\u5f0f\uff1bOptionsPopupWindow \u9009\u9879\u9009\u62e9\u5668\uff0c\u652f\u6301\u4e00\uff0c\u4e8c\uff0c\u4e09\u7ea7\u9009\u9879\u9009\u62e9\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbe\u7f6e\u662f\u5426\u8054\u52a8\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/saiwu-bigkoo/Android-PickerView\n\u6548\u679c\u56fe\uff1a\n\n\nCountdownView\nAndroid \u5012\u8ba1\u65f6\u63a7\u4ef6\uff0c\u4f7f\u7528Canvas\u7ed8\u5236\uff0c\u652f\u6301\u591a\u79cd\u6837\u5f0f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/iwgang/CountdownView\n\u6548\u679c\u56fe\uff1a\n\n\n\u5341\u4e00\u3001TipView\n\u5305\u62ec Toast\u3001\u89d2\u6807\u3001UndoBar \u7b49\u63d0\u793a\u6027\u63a7\u4ef6\n\n\nSVProgressHUD\nSVProgressHUD For Android \u7cbe\u4effiOS\u7684\u63d0\u793a\u5e93 SVProgressHUD\uff0capi\u4e5f\u51e0\u4e4e\u4e00\u6837\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/saiwu-bigkoo/Android-SVProgressHUD\n\u6548\u679c\u56fe\uff1a\n\n\nCrouton\n\u4e30\u5bcc\u6837\u5f0f\u7684 Toast\uff0c\u5141\u8bb8 alert\u3001comfirm\u3001info \u6837\u5f0f\u53ca\u70b9\u51fb\u6d88\u5931\u6837\u5f0f\uff0c\u5141\u8bb8\u8bbe\u7f6e Toast \u663e\u793a\u65f6\u95f4\uff0c\u5141\u8bb8\u81ea\u5b9a\u4e49 View\u3002 \u672c\u6587 32. SuperToasts \u4e3a\u5176\u6269\u5c55\u7248\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/keyboardsurfer/Crouton\nDemo \u5730\u5740\uff1ahttp://play.google.com/store/apps/details?id=de.keyboardsurfer.app.demo.crouton\n\n\nsupertooltips\n\u5e26\u52a8\u753b\u6548\u679c\u7684 Tips \u663e\u793a\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/nhaarman/supertooltips\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.haarman.supertooltips\n\n\nAndroid ViewBadger\n\u4e3a\u5176\u4ed6 View \u6dfb\u52a0\u89d2\u6807\uff08\u6d88\u606f\u5706\u70b9\uff09\u7b49\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jgilfelt/android-viewbadger\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/android-viewbadger.apk?raw=true\n\u6548\u679c\u56fe\uff1a\n\n\nSuperToasts\n\u66f4\u4e30\u5bcc\u6837\u5f0f\u7684 toast\uff0c\u652f\u6301 Button\u3001Progress\u3001Horizontal Progress \u6837\u5f0f\u3001\u652f\u6301\u8fdb\u5165\u52a8\u753b\u3001\u652f\u6301\u64a4\u9500\u53ca\u5176\u52a8\u753b\u8bbe\u7f6e\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JohnPersano/SuperToasts\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.supertoastsdemo\n\u6548\u679c\u56fe\uff1a\n\n\nUndoBar\n\u5c4f\u5e55\u5e95\u90e8\u663e\u793a\u53d6\u6d88\u6216\u662f\u786e\u8ba4\u7684 PopupWindows\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/soarcn/UndoBar\n\u6548\u679c\u56fe\uff1a\n\n\nUndoBar\n\u5c4f\u5e55\u5e95\u90e8\u663e\u793a\u53d6\u6d88\u6216\u662f\u786e\u8ba4\u67d0\u64cd\u4f5c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jenzz/Android-UndoBar\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid-ActionItemBadge\n\u53ef\u4ee5\u5728 ActionBar \u7684 MenuItem \u4e0a\u663e\u793a\u4e00\u4e2a\u5c0f\u89d2\u6807\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mikepenz/Android-ActionItemBadge\n\u6548\u679c\u56fe\uff1a\n\n\nSnackBar\nMaterial Design \u98ce\u683c\u7684 Toast\uff0c\u7c7b\u4f3c Google inbox \u4e2d\u7684\u63d0\u793a\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/MrEngineer13/SnackBar\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.mrengineer13.snackbar.sample\n\u6548\u679c\u56fe\uff1a\n\n\nHeadsUp\n\u5728 2.3 \u4e0a\u4f7f\u7528 android  5.0 \u7684 HeadsUp \u6548\u679c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/zzz40500/HeadsUp\n\u6548\u679c\u56fe\uff1a![Renderings](gif](http://upload-images.jianshu.io/upload_images/166866-543a5d26ab71d0f6.gif)\n\n\n\u5341\u4e8c\u3001FlipView\n\n\nandroid-flip\n\u7c7b\u4f3c Flipboard \u7ffb\u8f6c\u52a8\u753b\u7684\u5b9e\u73b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/openaphid/android-flip\nDemo \u5730\u5740\uff1ahttps://github.com/openaphid/android-flip/blob/master/FlipView/Demo/APK/Aphid-FlipView-Demo.apk?raw=true\nAPP \u793a\u4f8b\uff1aflipboard\n\n\nFlipImageView\n\u652f\u6301 x\u3001y\u3001z \u53ca\u52a8\u753b\u9009\u62e9\u7684\u7ffb\u8f6c\u52a8\u753b\u7684\u5b9e\u73b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/castorflex/FlipImageView\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=fr.castorflex.android.flipimageview\n\n\nFoldableLayout\nFlip \u7ffb\u8f6c\u6548\u679c\u7684 ListView\uff0c\u76ee\u524d\u8fd8\u4e0d\u652f\u6301 ListView \u7f13\u5b58\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/alexvasilkov/FoldableLayout\nDemo \u5730\u5740\uff1ahttp://play.google.com/store/apps/details?id=com.alexvasilkov.foldablelayout.sample\n\n\nFlipViewPager.Draco\nFlip \u7ffb\u8f6c\u6548\u679c\u7684 ViewPager\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Yalantis/FlipViewPager.Draco\n\u6548\u679c\uff1a\n\n\n\u5341\u4e09\u3001ColorPickView\n\n\nColorPickerView\n\u989c\u8272\u9009\u62e9\u5668\uff0c\u652f\u6301 PopupWindows \u6216\u65b0\u7684 Activity \u4e2d\u6253\u5f00\n\u9879\u76ee\u5730\u5740\uff1ahttps://code.google.com/p/color-picker-view/\n\u6548\u679c\u56fe\uff1a\n\n\nHoloColorPicker\n\u989c\u8272\u9009\u62e9\u5668\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/LarsWerkman/HoloColorPicker\nDemo \u5730\u5740\uff1ahttps://docs.google.com/file/d/0BwclyDTlLrdXRzVnTGJvTlRfU2s/edit\n\n\nColorPickerPreference\n\u989c\u8272\u9009\u62e9\u5668\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/attenzione/android-ColorPickerPreference\n\u6548\u679c\u56fe\uff1a\n\n\nColorPicker\n\u989c\u8272\u9009\u62e9\u5668\uff08Google Agenda \u4e2d\u7684\u6837\u5f0f\u98ce\u683c\uff09\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/flavienlaurent/colorpicker\nDemo \u5730\u5740\uff1ahttps://raw.github.com/biboune/colorpicker/master/colorpicker-sample.apk\n\u6548\u679c\u56fe\uff1a\n\n\n\u5341\u56db\u3001GraphView\n\n\nMPAndroidChart\n\u5f3a\u5927\u7684\u56fe\u8868\u7ed8\u5236\u5de5\u5177\uff0c\u652f\u6301\u6298\u7ebf\u56fe\u3001\u9762\u79ef\u56fe\u3001\u6563\u70b9\u56fe\u3001\u65f6\u95f4\u56fe\u3001\u67f1\u72b6\u56fe\u3001\u6761\u56fe\u3001\u997c\u56fe\u3001\u6c14\u6ce1\u56fe\u3001\u5706\u73af\u56fe\u3001\u8303\u56f4\uff08\u9ad8\u81f3\u4f4e\uff09\u6761\u5f62\u56fe\u3001\u7f51\u72b6\u56fe\u7b49\uff1b\u652f\u6301\u56fe\u7684\u62d6\u62fd\u7f29\u653e\uff1b\u652f\u6301 Android 2.2 \u4ee5\u4e0a\uff0c\u652f\u6301\u6a2a\u7eb5\u8f74\u7f29\u653e\uff0c\u591a\u6307\u7f29\u653e\uff0c\u5c55\u73b0\u52a8\u753b\u3001\u9ad8\u4eae\u3001\u4fdd\u5b58\u5230 sdcard\u3001\u4ece\u6587\u4ef6\u8bfb\u53d6\u56fe\u8868\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/PhilJay/MPAndroidChart\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.xxmassdeveloper.mpchartexample\nDemo \u9879\u76ee\uff1ahttps://github.com/PhilJay/MPAndroidChart/tree/master/MPChartExample\n\u6548\u679c\u56fe\uff1a\nhttps://camo.githubusercontent.com/78b4bc4e50e151970961daf56e81c4c0db72d27c/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6261726368617274332e706e67\nhttps://camo.githubusercontent.com/65f51783ec05038730b481ed614b57a94e867d86/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f626172636861727432642e706e67\nhttps://camo.githubusercontent.com/f66a35bf430b12480d3e2ed8e3bc8d7a17db950f/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f626172636861727433642e706e67\nhttps://camo.githubusercontent.com/60bd0d71462ad577df775b956944b191e939728a/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f70696563686172745f686f6c657261646975735f73706163652e706e67\nhttps://camo.githubusercontent.com/6b254aa699df7f9464967009129c3017de721b77/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f7363617474657263686172742e706e67\n\u5728\u7ebf\u6f14\u793a\uff1ahttps://www.youtube.com/watch?v=ufaK_Hd6BpI\n\n\nachartengine\n\u5f3a\u5927\u7684\u56fe\u8868\u7ed8\u5236\u5de5\u5177\uff0c\u652f\u6301\u6298\u7ebf\u56fe\u3001\u9762\u79ef\u56fe\u3001\u6563\u70b9\u56fe\u3001\u65f6\u95f4\u56fe\u3001\u67f1\u72b6\u56fe\u3001\u6761\u56fe\u3001\u997c\u56fe\u3001\u6c14\u6ce1\u56fe\u3001\u5706\u73af\u56fe\u3001\u8303\u56f4\uff08\u9ad8\u81f3\u4f4e\uff09\u6761\u5f62\u56fe\u3001\u62e8\u53f7\u56fe/\u8868\u3001\u7acb\u65b9\u7ebf\u56fe\u53ca\u5404\u79cd\u56fe\u7684\u7ed3\u5408\n\u9879\u76ee\u5730\u5740\uff1ahttps://code.google.com/p/achartengine/\n\u6548\u679c\u56fe\uff1a\nhttp://www.achartengine.org/dimages/sales_line_and_area_chart.png\nhttp://www.achartengine.org/dimages/temperature_range_chart.png\nhttp://www.achartengine.org/dimages/combined_chart.png\nhttp://www.achartengine.org/dimages/budget_chart.png\n\u5b98\u7f51\u7f51\u5740\uff1ahttp://www.achartengine.org/\nAPP \u793a\u4f8b\uff1aWordpress Android\uff0cGoogle Analytics\n\n\nGraphView\n\u7ed8\u5236\u56fe\u8868\u548c\u66f2\u7ebf\u56fe\u7684 View\uff0c\u53ef\u7528\u4e8e Android \u4e0a\u7684\u66f2\u5f62\u56fe\u3001\u67f1\u72b6\u56fe\u3001\u6ce2\u6d6a\u56fe\u5c55\u793a\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jjoe64/GraphView\nDemo \u9879\u76ee\uff1ahttps://github.com/jjoe64/GraphView-Demos\nAPP \u793a\u4f8b\uff1aWordpress Android\uff0cGoogle Analytics\n\n\nHoloGraphLibrary\n\u7ed8\u5236\u73b0\u72b6\u56fe\u3001\u67f1\u72b6\u56fe\u3001\u997c\u72b6\u56fe\n\u9879\u76ee\u5730\u5740\uff1ahttps://bitbucket.org/danielnadeau/holographlibrary/src\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://bitbucket.org/danielnadeau/holographlibrary/wiki/Home\n\n\nXCL-Charts\nXCL-Charts \u57fa\u4e8e\u539f\u751f\u7684 Canvas \u6765\u7ed8\u5236\u5404\u79cd\u56fe\u8868,\u5728\u8bbe\u8ba1\u65f6\uff0c\u5c3d\u91cf\u5728\u4fdd\u8bc1\u5f00\u53d1\u6548\u7387\u7684\u540c\u65f6\uff0c\u7ed9\u4f7f\u7528\u8005\u63d0\u4f9b\u8db3\u591f\u591a\u7684\u5b9a\u5236\u5316\u80fd\u529b\u3002\u56e0\u6b64\u4f7f\u7528\u7b80\u4fbf,\u540c\u65f6\u5177\u6709\u76f8\u5f53\u7075\u6d3b\u7684\u5b9a\u5236\u80fd\u529b\u3002\u76ee\u524d\u652f\u6301 3D/\u975e 3D \u67f1\u5f62\u56fe(Bar Chart)\u30013D/\u975e 3D \u997c\u56fe(Pie Chart)\u3001\u5806\u79ef\u56fe(Stacked Bar Chart)\u3001\u9762\u79ef\u56fe(Area Chart)\u3001 \u6298\u7ebf\u56fe(Line Chart)\u3001\u66f2\u7ebf\u56fe(Spline Chart)\u3001\u73af\u5f62\u56fe(Dount Chart)\u3001\u5357\u4e01\u683c\u5c14\u73ab\u7470\u56fe(Rose Chart)\u3001\u4eea\u8868\u76d8(Dial Chart)\u3001\u523b\u5ea6\u76d8(Gauge Chart)\u3001\u96f7\u8fbe\u56fe(Radar Chart)\u3001\u5706\u5f62\u56fe(Circle Chart)\u7b49\u56fe\u8868\u3002\u5176\u5b83\u7279\u6027\u8fd8\u5305\u62ec\u652f\u6301\u56fe\u8868\u7f29\u653e\u3001\u624b\u52bf\u79fb\u52a8\u3001\u52a8\u753b\u663e\u793a\u6548\u679c\u3001\u9ad8\u5bc6\u5ea6\u67f1\u5f62\u663e\u793a\u3001\u56fe\u8868\u5206\u754c\u5b9a\u5236\u7ebf\u3001\u591a\u56fe\u8868\u7684\u6df7\u5408\u663e\u793a\u53ca\u540c\u6570\u636e\u6e90\u4e0d\u540c\u7c7b\u578b\u56fe\u8868\u5207\u6362\u7b49\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/xcltapestry/XCL-Charts\nDemo \u5730\u5740\uff1ahttps://github.com/xcltapestry/XCL-Charts/blob/master/XCL-Charts-demo/bin/XCL-Charts-demo.apk?raw=true\n\n\nEazeGraph\nAndroid \u56fe\u8868\u5e93\uff0c\u652f\u6301\u67f1\u72b6\u56fe\u3001\u5206\u5c42\u67f1\u72b6\u56fe\u3001\u997c\u72b6\u56fe\u3001\u7ebf\u6027\u56fe\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/blackfizz/EazeGraph\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=org.eazegraph.app\n\n\nWilliamChart\n\u7ed8\u5236\u56fe\u8868\u7684\u5e93\uff0c\u652f\u6301 LineChartView\u3001BarChartView \u548c StackBarChartView \u4e09\u4e2d\u56fe\u8868\u7c7b\u578b\uff0c\u5e76\u4e14\u652f\u6301 Android 2.2 \u53ca\u4ee5\u4e0a\u7684\u7cfb\u7edf\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/diogobernardino/WilliamChart\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.db.williamchartdemo\nDemo \u9879\u76ee\uff1ahttps://github.com/diogobernardino/WilliamChart/tree/master/sample\n\u6548\u679c\u56fe\uff1a\n\n\nHelloCharts for Android\n\u652f\u6301\u6298\u7ebf\u56fe\u3001\u67f1\u72b6\u56fe\u3001\u997c\u56fe\u3001\u6c14\u6ce1\u56fe\u3001\u7ec4\u5408\u56fe\uff1b\u652f\u6301\u9884\u89c8\u3001\u653e\u5927\u7f29\u5c0f\uff0c\u6eda\u52a8\uff0c\u90e8\u5206\u56fe\u8868\u652f\u6301\u52a8\u753b\uff1b\u652f\u6301 Android 2.2 \u4ee5\u4e0a\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/lecho/hellocharts-android\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=lecho.lib.hellocharts.samples\n\u5728\u7ebf\u6f14\u793a\uff1ahttps://www.youtube.com/watch?v=xbSBjyjH2SY\n\n\nPieChartView\n\u6bd4\u8f83\u7b80\u5355\u76f4\u63a5\u7684\u997c\u72b6\u7edf\u8ba1\u62a5\u8868\u56fe\uff0c\u4f7f\u7528\u65b9\u4fbf\uff0c\u8bbe\u7f6e\u76f8\u5e94\u7684\u5c5e\u6027\u53c2\u6570\u5373\u53ef\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/wuseal/PieChartView\nDemo \u5730\u5740\uff1ahttps://github.com/wuseal/PieChartView\n\u6548\u679c\u56fe\uff1a\n\n\n\n\u5341\u4e94\u3001UI Style\n\u4e0d\u540c\u6837\u5f0f\u7684\u7cfb\u7edf UI \u98ce\u683c\uff0c\u5982 IOS\u3001Bootstrap \u98ce\u683c\n\n\nUITableView\nios \u98ce\u683c\u63a7\u4ef6\uff0c\u5305\u62ec Button\u3001ListView\u3001TableView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/thiagolocatelli/android-uitableview\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/ui-tableview-demo.apk?raw=true\n\n\nATableView\nios \u98ce\u683c\u63a7\u4ef6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/dmacosta/ATableView\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.nakardo.atableview.demo\n\n\nCards-UI\n\u5361\u7247\u5f0f View\uff0c\u652f\u6301\u5355\u4e2a\u5361\u7247\uff0citem \u4e3a\u5361\u7247\u7684 ListView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/afollestad/Cards-UI\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/cards-ui-demo.apk?raw=true\n\n\ncardslib\n\u5361\u7247\u5f0f View\uff0c\u652f\u6301\u5355\u4e2a\u5361\u7247\uff0citem \u4e3a\u5361\u7247\u7684 ListView \u548c GridView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/gabrielemariotti/cardslib\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=it.gmariotti.cardslib.demo\n\n\nAndroid-Bootstrap\nBootstrap \u98ce\u683c\u7684\u6309\u94ae\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Bearded-Hen/Android-Bootstrap\n\u6548\u679c\u56fe\uff1a\n\n\nMaterial Design Android Library\nAndroid L \u4e2d Material Design \u98ce\u683c\u7684\u7ec4\u4ef6\u9002\u914d\u5230 Android 2.2+\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/navasmdc/MaterialDesignLibrary\n\n\nAndroid FlatUI\nAndroid \u6241\u5e73\u5316\u98ce\u683c\u7684\u7ec4\u4ef6\uff0c\u652f\u6301\u4e00\u4e9b\u81ea\u5b9a\u4e49\u6837\u5f0f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/eluleci/FlatUI\n\u6548\u679c\u56fe\uff1a\n\n\ncheesesquare\n\u5168\u65b0 Android \u8bbe\u8ba1\u5e93\u6f14\u793a Demo\uff0c\u5305\u62ec Collapsing Toolbar\u3001FloatingActionButton\u3001View anchoring\u3001NavigationView\u3001Snackbar\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/chrisbanes/cheesesquare\n\u6548\u679c\u56fe\uff1a\n\n\n\u5341\u516d\u3001\u5176\u4ed6\n\n\nSnappingStepper\n\u4e00\u79cd\u6f02\u4eae\u7684UI\u63a7\u4ef6\uff0c\u80fd\u66f4\u7075\u6d3b\u7684\u63a7\u5236\u6570\u5b57\u7684\u589e\u51cf\u3002\u53ef\u7528\u4e8e\u8d2d\u7269\u8f66\u5546\u54c1\u6570\u91cf\u63a7\u5236\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/saiwu-bigkoo/Android-SnappingStepper\n\u6548\u679c\u56fe\uff1a\n\n\nSwipeBackLayout\n\u5de6\u53f3\u6216\u5411\u4e0a\u6ed1\u52a8\u8fd4\u56de\u7684 Activity\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Issacw0ng/SwipeBackLayout\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=me.imid.swipebacklayout.demo\nAPP \u793a\u4f8b\uff1a\u77e5\u4e4e\n\n\nParallaxBackLayout\n\u89c6\u5dee\u6ed1\u52a8\u8fd4\u56de\u7684 Activity\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/anzewei/ParallaxBackLayout\nDemo \u5730\u5740\uff1ahttps://github.com/anzewei/ParallaxBackLayout/blob/master/ext/demo.apk?raw=true\n\u6548\u679c\u56fe\uff1a\n\n\nandroid-styled-dialogs\n\u53ef\u81ea\u5b9a\u4e49\u6837\u5f0f\u7684 dialog\uff0c\u9ed8\u8ba4\u4e0e Holo \u4e3b\u9898\u6837\u5f0f\u4e00\u81f4\uff0c\u5728 Android2.2 \u4ee5\u4e0a\u540c\u4e00\u6837\u5f0f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/inmite/android-styled-dialogs\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/styled-dialogs-demo.apk?raw=true\n\n\nAndroid Sliding Up Panel\n\u53ef\u62d6\u52a8\u7684 View\uff0c\u80fd\u5728\u5f53\u524d Activity \u4e0a\u6276\u8d77\u4e00\u4e2a\u53ef\u62d6\u52a8\u7684 Panel\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/umano/AndroidSlidingUpPanel\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.sothree.umano\nAPP \u793a\u4f8b\uff1aGoogle Music \u7cbe\u7b80\u64ad\u653e\u680f\n\n\nTableFixHeaders\n\u7b2c\u4e00\u5217\u56fa\u5b9a\u7684 Table\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/InQBarna/TableFixHeaders\nDemo \u5730\u5740\uff1ahttp://bit.ly/13buAIq\n\n\nInscription\n\u53ef\u7528\u4e8e\u5c55\u793a\u5e94\u7528 change \u548c new feature \u4fe1\u606f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/MartinvanZ/Inscription\n\n\nActivityTransition\nActivity \u5207\u6362\u52a8\u753b\uff0c\u5305\u62ec\u6e10\u53d8\u3001flip\u3001\u67d0\u4e2a\u4f4d\u7f6e\u8fdb\u5165\u7b49\u7b49\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ophilbert/ActivityTransition\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/jfeinstein10/JazzyViewPager/blob/master/JazzyViewPager.apk?raw=true\n\n\nEasyAndroidAnimations\n\u9488\u5bf9 View \u7684\u5404\u79cd\u52a8\u753b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/2359media/EasyAndroidAnimations\n\n\nViewAnimation\n\u5bf9android view \u52a8\u753b\u8fdb\u884c\u5c01\u88c5,\u5b9e\u73b0\u8d77\u66f4\u7b80\u5355\uff0c\u81ea\u5e26\u4e09\u79cd\u5e38\u89c1\u8fd0\u52a8\u8def\u5f84\uff0c\u5176\u4ed6\u7684\u53ef\u81ea\u5b9a\u4e49\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/guohuanwen/ViewAniamtion\n\u6548\u679c\u56fe\uff1a\nAPP \u793a\u4f8b\uff1aQQ\u540d\u7247\u5708\u5708\u6548\u679c\n\n\nAndroidLoadingAnimation\n\u591a\u79cdandroid\u52a0\u8f7d\u52a8\u753b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/guohuanwen/AndroidLoadingAnimation\n\u6548\u679c\u56fe\uff1a\n\n\nandroid-lockpattern\nAndroid \u7684\u56fe\u6848\u5bc6\u7801\u89e3\u9501\n\u9879\u76ee\u5730\u5740\uff1ahttps://code.google.com/p/android-lockpattern/\n\u539f\u7406\u5256\u6790\u6587\u6863\uff1a[android-lockpattern](https://a.codekk.com/detail/Android/\u7231\u65e9\u8d77/Android Lock Pattern \u6e90\u7801\u89e3\u6790)\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=group.pals.android.lib.ui.lockpattern.demo\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://code.google.com/p/android-lockpattern/wiki/QuickUse\nAPP \u793a\u4f8b\uff1aAndroid \u5f00\u673a\u7684\u56fe\u6848\u5bc6\u7801\u89e3\u9501\uff0c\u652f\u4ed8\u5b9d\u7684\u5bc6\u7801\u89e3\u9501\n\n\nPatternLock\n\u53e6\u4e00\u4e2a Android \u56fe\u6848\u89e3\u9501\u5e93\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/DreaminginCodeZH/PatternLock\nDemo \u5730\u5740\uff1ahttps://github.com/DreaminginCodeZH/PatternLock/raw/master/dist/sample.apk\n\u6548\u679c\u56fe\uff1a\nAPP \u793a\u4f8b\uff1aAndroid \u5f00\u673a\u7684\u56fe\u6848\u5bc6\u7801\u89e3\u9501\uff0c\u652f\u4ed8\u5b9d\u7684\u5bc6\u7801\u89e3\u9501\n\n\nRangeBar\n\u7c7b\u4f3c\u4e8e SeekBar\uff0c\u4e0d\u540c\u7684\u662f\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u8303\u56f4\u5185\u7684\u503c\u800c\u4e0d\u662f\u5355\u4e2a\u503c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/edmodo/range-bar\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/range-bar-demo.apk?raw=true\n\u6548\u679c\u56fe\uff1a\n\n\nChromeView\n\u5229\u7528 Chromium \u5b9e\u73b0\u7684 WebView\uff0c\u89e3\u51b3\u5404\u4e2a Android \u7248\u672c WebView \u4e0d\u540c\u7684\u95ee\u9898\uff0c\u540c\u65f6\u5229\u7528\u6700\u65b0 Chrome \u4ee3\u7801\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/pwnall/chromeview\n\n\nandroid-phased-seek-bar\n\u652f\u6301\u9884\u5148\u5b9a\u4e49\u72b6\u6001\u7684 SeekBar\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ademar111190/android-phased-seek-bar\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid Slider Preference Library\n\u53ef\u6dfb\u52a0\u5230\u8bbe\u7f6e\u4e2d\u7684\u57fa\u4e8e\u5bf9\u8bdd\u6846\u7684 RankBar \u5c0f\u90e8\u4ef6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jayschwa/AndroidSliderPreference\n\n\nShowcaseView library\n\u7528\u4e8e\u9ad8\u4eae\u663e\u793a\u5e94\u7528\u7a0b\u5e8f\u7684\u7279\u5b9a\u90e8\u5206\uff0c\u4ece\u800c\u7a81\u51fa\u7a81\u51fa\u91cd\u70b9\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/amlcurran/ShowcaseView\n\n\nandroid-segmented-control\nAndroid \u4e0a\u7684 Segmented Controls\uff0c\u76f8\u5f53\u4e8e RadioButton \u7ec4\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/hoang8f/android-segmented-control\n\n\nSwipeable Cards\n\u7c7b\u4f3c Tinder \u7684\u5361\u7247\u6548\u679c\uff0c\u53ef\u4ee5\u52a0\u8f7d\u56fe\u7247\u5e76\u52a8\u753b\u6548\u679c\u5c55\u793a\uff0c\u5411\u5de6\u6ed1\u52a8\u8868\u793a\u559c\u6b22\uff0c\u5411\u53f3\u8868\u793a\u4e0d\u559c\u6b22\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/kikoso/Swipeable-Cards\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=info.hoang8f.fbutton.demo\n\n\nEdgeEffectOverride\n\u6539\u53d8 ScrollView, ListView, ExpandableListView, GridView, ViewPager \u7b49\u6eda\u52a8\u63a7\u4ef6\u6eda\u52a8\u5230\u8fb9\u7f18\u7684\u989c\u8272\u6548\u679c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/AndroidAlliance/EdgeEffectOverride\n\n\nandroid-pinned-header-listviews\n\u4f7f ExpandListView \u7684 Group \u6ed1\u52a8\u5230\u9876\u7aef\u65f6\u4f1a\u56fa\u5b9a\u4e0d\u52a8\u76f4\u5230\u53e6\u5916\u4e00\u4e2a Group \u5230\u8fbe\u9876\u7aef\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/rtyley/android-pinned-header-listviews\n\n\nAndroidSwipeLayout\n\u6ed1\u52a8 Layout\uff0c\u652f\u6301\u5355\u4e2a View\uff0cListView\uff0cGridView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/daimajia/AndroidSwipeLayout\nDemo \u5730\u5740\uff1aDownload Demo\n\u6548\u679c\u56fe\uff1a\n\n\nDynamicCardLayout\n\u5728 Android \u4e2d\u5b9e\u73b0\u7684\u7c7b\u4f3c Windows8 \u7684\u74f7\u7247\u5e03\u5c40\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/dodola/DynamicCardLayout\n\u6548\u679c\u56fe\uff1a\n\n\nEmoticons-Keyboard\n\u5e26\u8868\u60c5\u60c5\u7b26\u53f7\u7684\u81ea\u5b9a\u4e49\u952e\u76d8\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/chiragjain/Emoticons-Keyboard\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid Typeface Helper\n\u53ef\u4ee5\u5e2e\u4f60\u8f7b\u677e\u5b9e\u73b0\u81ea\u5b9a\u4e49\u5b57\u4f53\u7684\u5e93\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/norbsoft/android-typeface-helper\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid-Anim-Playground\n\u51e0\u4e2a\u52a8\u753b\u6548\u679c\uff0c\u5176\u4e2d\u7b2c\u4e8c\u4e2a\u57fa\u4e8e android-svg \u7684\u7ed8\u5236\u6548\u679c\u975e\u5e38\u597d\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Tibolte/Android-Anim-Playground\n\u6548\u679c\u56fe\uff1a\n\n\nAlertView\n\u4effiOS\u7684AlertViewController \u51e0\u4e4e\u5b8c\u7f8e\u8fd8\u539fiOS \u7684 AlertViewController \uff0c\u540c\u65f6\u652f\u6301Alert\u548cActionSheet\u6a21\u5f0f\uff0c\u6bcf\u4e00\u4e2a\u7ec6\u8282\u90fd\u662f\u7cbe\u96d5\u7ec6\u7422\uff0c\u5e76\u628aapi\u5c01\u88c5\u6210\u61d2\u5230\u6781\u81f4\u6a21\u5f0f\uff0c\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u8fdb\u884c\u5f39\u7a97.\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/saiwu-bigkoo/Android-AlertView\n\u6548\u679c\u56fe\uff1a\n\n\nNiftyDialogEffects\n\u652f\u6301\u81ea\u5b9a\u4e49\u98de\u5165\u52a8\u753b\u6837\u5f0f\u7684 Dialog\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/sd6352051/NiftyDialogEffects\n\u6548\u679c\u56fe\uff1a\n\u5728\u7ebf\u6f14\u793a\uff1ahttp://tympanus.net/Development/ModalWindowEffects/\n\n\nPostOffice\n\u521b\u5efa Holo \u53ca Material Design \u6837\u5f0f\u7684 Dialog\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/r0adkll/PostOffice\n\u6548\u679c\u56fe\uff1a\n\n\nSwipecards\n\u7c7b\u4f3c Tinder \u7684\u5361\u7247\u6548\u679c\uff0c\u53ef\u4ee5\u52a0\u8f7d\u56fe\u7247\u5e76\u52a8\u753b\u6548\u679c\u5c55\u793a\uff0c\u5411\u5de6\u6ed1\u52a8\u8868\u793a\u559c\u6b22\uff0c\u5411\u53f3\u8868\u793a\u4e0d\u559c\u6b22\uff0c\u6839\u636e Kikoso's Swipeable-Cards \u6539\u9020\u800c\u6765\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Diolor/Swipecards\n\n\nSeekArc\n\u5706\u5f62\u7684 SeekBar\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/TriggerTrap/SeekArc\n\u6548\u679c\u56fe\uff1a\n\n\nBlurDialogFragment\n\u663e\u793a  DialogFragment \u65f6\u80cc\u666f\u6a21\u7cca\u6548\u679c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/tvbarthel/BlurDialogFragment\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=fr.tvbarthel.lib.blurdialogfragment.sample\n\n\nrange-seek-bar\n\u968f\u673a\u503c\u9009\u53d6\u7684 SeekBar\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/yahoo/android-range-seek-bar\n\u6548\u679c\u56fe\uff1a\n\n\nMaterialRangeBar\n\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u8303\u56f4\u5185\u7684\u503c\u800c\u4e0d\u662f\u5355\u4e2a\u503c\u7684 SeekBar\uff0cRangeBar \u7684 Material Design \u98ce\u683c\u9002\u914d\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/oli107/material-range-bar\n\u6548\u679c\u56fe\uff1a\n\n\nMaterialList\nMaterial Design \u98ce\u683c\u7684 CardView\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/dexafree/MaterialList\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.dexafree.materiallistviewexample\n\u6548\u679c\u56fe\uff1a\n\n\nroad-trip\n\u8bbe\u7f6e path \u7684\u5404\u79cd\u52a8\u753b\u6548\u679c\uff0c\u4ee5\u53ca\u5982\u4f55\u5b9e\u73b0\u590d\u6742\u8def\u5f84\u52a8\u753b\uff0c\u7c7b\u4f3c\u4e8e ios \u4e2d\u7684\u6307\u7eb9\u6ce8\u518c\u754c\u9762\u7684\u6307\u7eb9\u52a8\u753b\u6548\u679c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/romainguy/road-trip\n\u6548\u679c\u56fe\uff1a\n\n\ndialogplus\n\u4e00\u4e2a\u7b80\u5355\u7684 Android \u5bf9\u8bdd\u6846\uff0c\u652f\u6301\u4e0d\u540c\u7684\u5f39\u51fa\u6a21\u5f0f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/orhanobut/dialogplus\n\u6548\u679c\u56fe\uff1a\n\n\nFlowLayout\n\u4e00\u4e2a\u7b80\u5355\u7684\u6d41\u5f0f\u5e03\u5c40\uff0c\u7528\u6cd5\u7c7b\u4f3c LinearLayout\uff0c\u4f46\u662f\u80fd\u591f\u8ba9\u5b50\u5143\u7d20\u6839\u636e\u5bbd\u5ea6\u81ea\u52a8\u6362\u884c\n\u9879\u76ee\u5730\u5740\uff1aFLowLayout\n\u6548\u679c\u56fe\uff1a\n\n\nCircleSeekbar\n\u4e00\u4e2a\u73af\u5f62Seekbar\u7ec4\u4ef6,\u652f\u6301\u53e0\u52a0\u590d\u5408\u4f7f\u7528\n\u9879\u76ee\u5730\u5740\uff1aCircleSeekbar\n\u6548\u679c\u56fe\uff1a\n\n\n\n\nFinestWebView\n\u7f8e\u9e97\u7684\u548c\u53ef\u5b9a\u5236\u7684Android\u7684\u6d3b\u52d5\uff0c\u986f\u793a\u5728\u4e00\u500b\u61c9\u7528\u7a0b\u5e8f\u7684\u7db2\u9801\u3002\n\u9879\u76ee\u5730\u5740: https://github.com/TheFinestArtist/FinestWebView-Android\nSample \u5730\u5740: https://play.google.com/store/apps/details?id=com.thefinestartist.finestwebview.sample\n\u6548\u679c\u56fe: \n\n\nYouTubePlayerActivity\n\u53ea\u9700\u901a\u904e\u4e00\u500bURL\u4f86\u5728\u65b0\u7684\u6d3b\u52d5\u64ad\u653eYouTube\u8996\u983b\u3002\u5b83\u652f\u6301\u5c4f\u5e55\u65b9\u5411\uff0c\u5a92\u9ad4\u97f3\u91cf\u63a7\u5236\u7b49\u3002\n\u9879\u76ee\u5730\u5740: https://github.com/TheFinestArtist/YouTubePlayerActivity\nSample \u5730\u5740: https://play.google.com/store/apps/details?id=com.thefinestartist.ytpa.sample\n\u6548\u679c\u56fe: \n\n\nmaterial-camera\nmaterial\u98ce\u683c\u7684camera\u3002\u80fd\u4f7fcamera\u4f7f\u7528\u8d77\u6765\u66f4\u7b80\u5355\u7684\u5e93\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/afollestad/material-camera\n\u6548\u679c\u56fe\uff1a\n\n\n\nmaterial-dialogs\n\u5404\u79cdmaterial\u98ce\u683c\u7684dialog\u3002\n\u6f02\u4eae\u7684\u7684\u3001\u6613\u4e8e\u4f7f\u7528\u7684\u548c\u53ef\u5b9a\u5236\u7684Dialog API\uff0c\u4f60\u80fd\u591f\u4f7f\u7528Material designed\u98ce\u683c\u7684Dialog\u5230API 8\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/afollestad/material-dialogs\nSample\u5730\u5740\uff1ahttps://github.com/afollestad/material-dialogs/blob/master/sample/sample.apk\n\u6548\u679c\u56fe\uff1a\n\n\n\nNotifyUtil\n\u6700\u5e38\u89c1\u7684\u901a\u77e5\u6837\u5f0f\u5e93\n\u9879\u76ee\u5730\u5740:https://github.com/wenmingvs/NotifyUtil\ndemo\u5730\u5740\uff1ahttps://github.com/wenmingvs/NotifyUtil#notifydemo\n\n\nCanPhotos\n\u4f7f\u7528fresco\u9009\u53d6\u591a\u5f20\u56fe\u7247\u5e76\u53ef\u9884\u89c8\u56fe\u7247\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/canyinghao/CanPhotos\n\u6548\u679c\u56fe\uff1a\n\n\n\nCanDialog\n\u4eff\u7167\u7cfb\u7edfDialog\u6240\u5199\uff0c\u7ee7\u627f\u4e8eFrameLayout\uff0c\u6dfb\u52a0\u4e00\u4e9b\u52a8\u753b\uff0c\u4e00\u4e9b\u663e\u793a\u7c7b\u578b\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/canyinghao/CanDialog\n\u6548\u679c\u56fe\uff1a\n\n\n\nWindRoseDiagramView\n\u4e00\u4e2a\u98ce\u529b\u73ab\u7470\u56fe\u7684 View \u7ec4\u4ef6\uff0c\u9879\u76ee\u5730\u5740\uff1a\n\n\n\nMaterialRatingBar\n\u4e0e Google \u7cfb\u5e94\u7528\u8bbe\u8ba1\u76f8\u540c\u3001\u652f\u6301\u62c9\u4f38\u3001\u4fee\u6b63\u539f\u751f\u5b9e\u73b0\u8bf8\u591a\u95ee\u9898\u7684\u661f\u7ea7\u8bc4\u5206\u6761\u3002\u53ef\u76f4\u63a5\u66ff\u6362 RatingBar\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/DreaminginCodeZH/MaterialRatingBar\nDemo \u5730\u5740\uff1ahttps://github.com/DreaminginCodeZH/MaterialRatingBar/releases/download/v1.0.2/sample-release.apk\n\n\n\nSpotlight\nAndroid\u56fe\u4e66\u9986\u70b9\u4eae\u9879\u76ee\u7684\u6559\u7a0b\u6216\u6f2b\u6b65\u7b49...\n\u9805\u76ee\u5730\u5740\uff1ahttps://github.com/TakuSemba/Spotlight\n\n\n\u6548\u679c\u5716: \n\n\nSpeedView\nAndroid\u7684\u52a8\u6001\u8f66\u901f\u8868\u548c\u91cf\u89c4\u3002 \u60ca\u4eba\uff0c\u5f3a\u5927\uff0c\u591a\u5f62 \u26a1\ufe0f\n\u9805\u76ee\u5730\u5740: https://github.com/anastr/SpeedView\n\u6548\u679c\u5716:\n\n\n\nMaterialPlayPauseDrawble\nMaterial Design \u7684\u64ad\u653e/\u6682\u505c\u56fe\u6807\u52a8\u753b\uff0c\u53ef\u4f5c\u4e3a Drawable\u3001ImageView \u6216 ImageButton \u4f7f\u7528\n\u9805\u76ee\u5730\u5740: https://github.com/DreaminginCodeZH/MaterialPlayPauseDrawble\n\u6548\u679c\u56fe:\n\n\n\n\u7b2c\u4e8c\u90e8\u5206 \u5de5\u5177\u5e93\n\u4e3b\u8981\u5305\u62ec\u90a3\u4e9b\u4e0d\u9519\u7684\u5f00\u53d1\u5e93\uff0c\u5305\u62ec\u4f9d\u8d56\u6ce8\u5165\u6846\u67b6\u3001\u56fe\u7247\u7f13\u5b58\u3001\u7f51\u7edc\u8bf7\u6c42\u3001\u6570\u636e\u5e93 ORM \u5efa\u6a21\u3001Android \u516c\u5171\u5e93\u3001Android \u9ad8\u7248\u672c\u5411\u4f4e\u7248\u672c\u517c\u5bb9\u3001\u591a\u5a92\u4f53\u76f8\u5173\u53ca\u5176\u4ed6\u3002\n\u4e00\u3001\u4f9d\u8d56\u6ce8\u5165 DI\n\u901a\u8fc7\u4f9d\u8d56\u6ce8\u5165\u51cf\u5c11 View\u3001\u670d\u52a1\u3001\u8d44\u6e90\u7b80\u5316\u521d\u59cb\u5316\uff0c\u4e8b\u4ef6\u7ed1\u5b9a\u7b49\u91cd\u590d\u7e41\u7410\u5de5\u4f5c\n\n\nAndroidAnnotations(Code Diet)\nandroid \u5feb\u901f\u5f00\u53d1\u6846\u67b6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/excilys/androidannotations\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/excilys/androidannotations/wiki\n\u5b98\u7f51\u7f51\u5740\uff1ahttp://androidannotations.org/\n\u7279\u70b9\uff1a(1) \u4f9d\u8d56\u6ce8\u5165\uff1a\u5305\u62ec view\uff0cextras\uff0c\u7cfb\u7edf\u670d\u52a1\uff0c\u8d44\u6e90\u7b49\u7b49\n(2) \u7b80\u5355\u7684\u7ebf\u7a0b\u6a21\u578b\uff0c\u901a\u8fc7 annotation \u8868\u793a\u65b9\u6cd5\u8fd0\u884c\u5728 ui \u7ebf\u7a0b\u8fd8\u662f\u540e\u53f0\u7ebf\u7a0b\n(3) \u4e8b\u4ef6\u7ed1\u5b9a\uff1a\u901a\u8fc7 annotation \u8868\u793a view \u7684\u54cd\u5e94\u4e8b\u4ef6\uff0c\u4e0d\u7528\u5728\u5199\u5185\u90e8\u7c7b\n(4) REST \u5ba2\u6237\u7aef\uff1a\u5b9a\u4e49\u5ba2\u6237\u7aef\u63a5\u53e3\uff0c\u81ea\u52a8\u751f\u6210 REST \u8bf7\u6c42\u7684\u5b9e\u73b0\n(5) \u6ca1\u6709\u4f60\u60f3\u8c61\u7684\u590d\u6742\uff1aAndroidAnnotations \u53ea\u662f\u5728\u5728\u7f16\u8bd1\u65f6\u751f\u6210\u76f8\u5e94\u5b50\u7c7b\n(6) \u4e0d\u5f71\u54cd\u5e94\u7528\u6027\u80fd\uff1a\u4ec5 50kb\uff0c\u5728\u7f16\u8bd1\u65f6\u5b8c\u6210\uff0c\u4e0d\u4f1a\u5bf9\u8fd0\u884c\u65f6\u6709\u6027\u80fd\u5f71\u54cd\u3002\n\u5176\u4ed6\uff1a\u4e0e roboguice \u7684\u6bd4\u8f83\uff1aroboguice \u901a\u8fc7\u8fd0\u884c\u65f6\u8bfb\u53d6 annotations \u8fdb\u884c\u53cd\u5c04\uff0c\u6240\u4ee5\u53ef\u80fd\u5f71\u54cd\u5e94\u7528\u6027\u80fd\uff0c\u800c AndroidAnnotations \u5728\u7f16\u8bd1\u65f6\u751f\u6210\u5b50\u7c7b\uff0c\u6240\u4ee5\u5bf9\u6027\u80fd\u6ca1\u6709\u5f71\u54cd\n\n\nroboguice\n\u5e2e\u4f60\u5904\u7406\u4e86\u5f88\u591a\u4ee3\u7801\u5f02\u5e38\uff0c\u5229\u7528 annotation \u4f7f\u5f97\u66f4\u5c11\u7684\u4ee3\u7801\u5b8c\u6210\u9879\u76ee\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/roboguice/roboguice\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/roboguice/roboguice/wiki\n\n\nbutterknife\n\u5229\u7528 annotation \u5e2e\u4f60\u5feb\u901f\u5b8c\u6210 View \u7684\u521d\u59cb\u5316\uff0c\u51cf\u5c11\u4ee3\u7801\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JakeWharton/butterknife\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://jakewharton.github.io/butterknife/\n\n\nDagger\n\u4f9d\u8d56\u6ce8\u5165\uff0c\u9002\u7528\u4e8e Android \u548c Java\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/square/dagger\n\u539f\u7406\u5256\u6790\u6587\u6863\uff1a[Dagger](https://a.codekk.com/detail/Android/\u6254\u7269\u7ebf/Dagger \u6e90\u7801\u89e3\u6790)\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://square.github.io/dagger/\n\n\nAutoParcel\n\u6ce8\u89e3\u81ea\u52a8\u751f\u6210Parcelable\u5b9e\u73b0\u4ee3\u7801\u7684\u5e93\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/frankiesardo/auto-parcel\n\u8fd9\u7bc7\u6587\u7ae0\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5b83\u7684\u4f7f\u7528\u65b9\u6cd5\uff1aAutoParcel\n\u4f5c\u8005\u8ba4\u4e3a\u4f7f\u7528AutoParcel\u7684\u597d\u5904\u662f\uff0c\u53ef\u4ee5\u7b80\u5316\u6784\u9020\u51fd\u6570\uff0c\u65b9\u4fbfIDE\u4ee3\u7801\u81ea\u52a8\u5b8c\u6210\uff0c\u65b9\u4fbf\u6d4b\u8bd5\uff0c\u524d\u5411\u517c\u5bb9\uff0c\u751f\u6210\u4e0d\u53ef\u53d8\u7684\u5bf9\u8c61\u3002\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/frankiesardo/auto-parcel\n\n\nDilutions\n\u901a\u8fc7\u6ce8\u89e3\u751f\u6210\u534f\u8bae\u6620\u5c04\u6267\u884c\u8de8\u6a21\u5757\u7684\u754c\u9762\u8df3\u8f6c\u548c\u65b9\u6cd5\u8c03\u7528\uff0c\u89e3\u8026\u7684\u534f\u8bae\u6846\u67b6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/HomHomLin/Dilutions\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/HomHomLin/Dilutions\n\n\n\u4e8c\u3001\u56fe\u7247\u7f13\u5b58\n\n\nAndroid-Universal-Image-Loader\n\u56fe\u7247\u7f13\u5b58\uff0c\u76ee\u524d\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u56fe\u7247\u7f13\u5b58\uff0c\u652f\u6301\u4e3b\u6d41\u56fe\u7247\u7f13\u5b58\u7684\u7edd\u5927\u591a\u6570\u7279\u6027\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/nostra13/Android-Universal-Image-Loader\n\u539f\u7406\u5256\u6790\u6587\u6863\uff1a[Android-Universal-Image-Loader](https://a.codekk.com/detail/Android/huxian99/Android Universal Image Loader \u6e90\u7801\u5206\u6790)\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/universal-imageloader-demo.apk?raw=true\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://www.intexsoft.com/blog/item/74-universal-image-loader-part-3.html\n\n\npicasso\nsquare \u5f00\u6e90\u7684\u56fe\u7247\u7f13\u5b58\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/square/picasso\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://square.github.io/picasso/\n\u7279\u70b9\uff1a(1)\u53ef\u4ee5\u81ea\u52a8\u68c0\u6d4b adapter \u7684\u91cd\u7528\u5e76\u53d6\u6d88\u4e4b\u524d\u7684\u4e0b\u8f7d\n(2)\u56fe\u7247\u53d8\u6362\n(3)\u53ef\u4ee5\u52a0\u8f7d\u672c\u5730\u8d44\u6e90\n(4)\u53ef\u4ee5\u8bbe\u7f6e\u5360\u4f4d\u8d44\u6e90\n(5)\u652f\u6301 debug \u6a21\u5f0f\n\n\nCube ImageLoader\n\u963f\u91cc\u5df4\u5df4\u4e00\u6dd8\u4f7f\u7528\u7684\u56fe\u7247\u52a0\u8f7d\uff0c\u7efc\u5408\u4e86 Android-Universal-Image-Loader \u548c square \u7b49\u7ec4\u4ef6\u4f18\u70b9\uff0c\u7b80\u5355\u6613\u7528\uff0c\u826f\u597d\u7684\u4e2d\u6587\u6587\u6863\u652f\u6301\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/etao-open-source/cube-sdk\nDemo \u5730\u5740\uff1ahttps://github.com/liaohuqiu/cube-sdk/raw/master/cube-sdk-sample.apk\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://cube-sdk.liaohuqiu.net/\n\u6548\u679c\u56fe\uff1a\n\n\nfresco\n\u4e00\u6b3e\u5f3a\u5927\u7684\u56fe\u7247\u7f13\u5b58\u5de5\u5177\uff0c\u7531 Facebook \u5f00\u53d1\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/facebook/fresco\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://frescolib.org/\n\u7279\u70b9\uff1a(1) \u4e24\u4e2a\u5185\u5b58\u7f13\u5b58\u52a0\u4e0a\u78c1\u76d8\u7f13\u5b58\u6784\u6210\u4e86\u4e09\u7ea7\u7f13\u5b58\n(2) \u652f\u6301\u6d41\u5f0f\uff0c\u53ef\u4ee5\u7c7b\u4f3c\u7f51\u9875\u4e0a\u6a21\u7cca\u6e10\u8fdb\u5f0f\u663e\u793a\u56fe\u7247\n(3) \u5bf9\u591a\u5e27\u52a8\u753b\u56fe\u7247\u652f\u6301\u66f4\u597d\uff0c\u5982 Gif\u3001WebP\n(4) \u66f4\u591a\u6837\u7684\u663e\u793a\uff0c\u5982\u5706\u89d2\u3001\u8fdb\u5ea6\u6761\u3001\u70b9\u51fb\u91cd\u8bd5\u3001\u81ea\u5b9a\u4e49\u5bf9\u7126\u70b9\n(5) \u66f4\u591a\u6837\u7684\u52a0\u8f7d\uff0c\u5982\u652f\u6301 EXIF\u3001\u5168\u9762\u652f\u6301 WebP\n(6) \u652f\u6301 Android 2.3+\n\n\nGlide\nGlide \u662f\u4e00\u4e2a android \u5e73\u53f0\u4e0a\u7684\u5feb\u901f\u548c\u9ad8\u6548\u7684\u5f00\u6e90\u7684\u591a\u5a92\u4f53\u8d44\u6e90\u7ba1\u7406\u5e93,\u63d0\u4f9b \u591a\u5a92\u4f53\u6587\u4ef6\u7684\u538b\u7f29,\u5185\u5b58\u548c\u78c1\u76d8\u7f13\u5b58, \u8d44\u6e90\u6c60\u7684\u63a5\u53e3\u3002\n\u5b83\u53ef\u4ee5\u6700\u5927\u6027\u80fd\u5730\u5728 Android \u8bbe\u5907\u4e0a\u8bfb\u53d6\u3001\u89e3\u7801\u3001\u663e\u793a\u56fe\u7247\u548c\u89c6\u9891\u3002Glide \u53ef\u4ee5\u5c06\u8fdc\u7a0b\u7684\u56fe\u7247\u3001\u89c6\u9891\u3001\u52a8\u753b\u56fe\u7247\u7b49\u7f13\u5b58\u5728\u8bbe\u5907\u672c\u5730\u4fbf\u4e8e\u63d0\u9ad8\u7528\u6237\u6d4f\u89c8\u56fe\u7247\u7684\u6d41\u7545\u4f53\u9a8c\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/bumptech/glide\n\u7279\u70b9\uff1a\n(1) GIF \u52a8\u753b\u7684\u89e3\u7801\n(2) \u672c\u5730\u89c6\u9891\u5267\u7167\u7684\u89e3\u7801\n(3) \u652f\u6301\u7f29\u7565\u56fe\n(4) Activity \u751f\u547d\u5468\u671f\u7684\u96c6\u6210\n(5) \u8f6c\u7801\u7684\u652f\u6301\n(6) \u52a8\u753b\u7684\u652f\u6301\n(7) OkHttp \u548c Volley \u7684\u652f\u6301\n\n\n\u4e09\u3001\u7f51\u7edc\u8bf7\u6c42\n\n\nVolley\nGoogle \u63d0\u4f9b\u7684\u7f51\u7edc\u901a\u4fe1\u5e93\uff0c\u4f7f\u5f97\u7f51\u7edc\u8bf7\u6c42\u66f4\u7b80\u5355\u3001\u66f4\u5feb\u901f\n\u9879\u76ee\u5730\u5740\uff1ahttps://android.googlesource.com/platform/frameworks/volley\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://commondatastorage.googleapis.com/io-2013/presentations/110%20-%20Volley-%20Easy,%20Fast%20Networking%20for%20Android.pdf\n\n\nAsynchronous Http Client for Android\nAndroid \u5f02\u6b65 Http \u8bf7\u6c42\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/loopj/android-async-http\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://loopj.com/android-async-http/\n\u7279\u70b9\uff1a(1) \u5728\u533f\u540d\u56de\u8c03\u4e2d\u5904\u7406\u8bf7\u6c42\u7ed3\u679c\n(2) \u5728 UI \u7ebf\u7a0b\u5916\u8fdb\u884c http \u8bf7\u6c42\n(3) \u6587\u4ef6\u65ad\u70b9\u4e0a\u4f20\n(4) \u667a\u80fd\u91cd\u8bd5\n(5) \u9ed8\u8ba4 gzip \u538b\u7f29\n(6) \u652f\u6301\u89e3\u6790\u6210 Json \u683c\u5f0f\n(7) \u53ef\u5c06 Cookies \u6301\u4e45\u5316\u5230 SharedPreferences\n\n\nandroid-query\n\u5f02\u6b65\u52a0\u8f7d\uff0c\u66f4\u5c11\u4ee3\u7801\u5b8c\u6210 Android \u52a0\u8f7d\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/androidquery/androidquery \u6216 https://code.google.com/p/android-query/\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.androidquery\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://code.google.com/p/android-query/#Why_AQuery?\n\u7279\u70b9\uff1ahttps://code.google.com/p/android-query/#Why_AQuery?\n\n\nAsync Http Client\nJava \u5f02\u6b65 Http \u8bf7\u6c42\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/AsyncHttpClient/async-http-client\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://sonatype.github.io/async-http-client/\n\n\nIon\n\u652f\u6301\u56fe\u7247\u3001json\u3001http post \u7b49\u5f02\u6b65\u8bf7\u6c42\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/koush/ion\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/koush/ion#more-examples\n\n\nHttp Request\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/kevinsawicki/http-request\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/kevinsawicki/http-request#examples\n\n\nokhttp\nsquare \u5f00\u6e90\u7684 http \u5de5\u5177\u7c7b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/square/okhttp\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://square.github.io/okhttp/\n\u7279\u70b9\uff1a(1) \u652f\u6301 SPDY( http://zh.wikipedia.org/wiki/SPDY )\u534f\u8bae\u3002SPDY \u534f\u8bae\u662f Google \u5f00\u53d1\u7684\u57fa\u4e8e\u4f20\u8f93\u63a7\u5236\u534f\u8bae\u7684\u5e94\u7528\u5c42\u534f\u8bae\uff0c\u901a\u8fc7\u538b\u7f29\uff0c\u591a\u8def\u590d\u7528(\u4e00\u4e2a TCP \u94fe\u63a5\u4f20\u9001\u7f51\u9875\u548c\u56fe\u7247\u7b49\u8d44\u6e90)\u548c\u4f18\u5148\u7ea7\u6765\u7f29\u77ed\u52a0\u8f7d\u65f6\u95f4\u3002\n(2) \u5982\u679c SPDY \u4e0d\u53ef\u7528\uff0c\u5229\u7528\u8fde\u63a5\u6c60\u51cf\u5c11\u8bf7\u6c42\u5ef6\u8fdf\n(3) Gzip \u538b\u7f29\n(4) Response \u7f13\u5b58\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u8bf7\u6c42\n\n\nRetrofit\nRESTFUL API \u8bbe\u8ba1\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/square/retrofit\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://square.github.io/retrofit/\n\n\nRoboSpice\nAndroid \u5f02\u6b65\u7f51\u7edc\u8bf7\u6c42\u5de5\u5177\uff0c\u652f\u6301\u7f13\u5b58\u3001REST \u7b49\u7b49\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/stephanenicolas/robospice\nDemo \u5730\u5740\uff1ahttps://github.com/stephanenicolas/RoboDemo/downloads\n\n\nTwistVolley\nTwistVolley \u662f\u5bf9 Volley \u7684\u4e00\u4e2a\u5c01\u88c5\u5e93\u3002\u63d0\u4f9b\u7c7b\u4f3c Picasso \u4e00\u6837\u7684\u4e32\u8054\u5f0f API\u3002\u4f7f\u5f97\u4f7f\u7528 Volley \u66f4\u52a0\u65b9\u4fbf\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/TwistedEquations/TwistVolley\n\n\nOkHttpFinal\n\u4e00\u4e2a\u5bf9OkHttp\u5c01\u88c5\u7684\u7b80\u5355\u6613\u7528\u578bHTTP\u8bf7\u6c42\u548c\u6587\u4ef6\u4e0b\u8f7d\u7ba1\u7406\u6846\u67b6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/pengjianbo/OkHttpFinal\nDemo \u5730\u5740\uff1ahttps://github.com/pengjianbo/OkHttpFinal\n\n\n\u56db\u3001\u6570\u636e\u5e93 orm \u5de5\u5177\u5305\norm \u7684 db \u5de5\u5177\u7c7b\uff0c\u7b80\u5316\u5efa\u8868\u3001\u67e5\u8be2\u3001\u66f4\u65b0\u3001\u63d2\u5165\u3001\u4e8b\u52a1\u3001\u7d22\u5f15\u7684\u64cd\u4f5c\n\n\ngreenDAO\nAndroid Sqlite orm \u7684 db \u5de5\u5177\u7c7b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/greenrobot/greenDAO\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://greendao-orm.com/documentation/\n\u5b98\u7f51\u7f51\u5740\uff1ahttp://greendao-orm.com/\n\u7279\u70b9\uff1a(1) \u6027\u80fd\u4f73\n(2) \u7b80\u5355\u6613\u7528\u7684 API\n(3) \u5185\u5b58\u5c0f\u597d\u5c0f\n(4) \u5e93\u5927\u5c0f\u5c0f\n\n\nGreenDaoUpgradeHelper\ngreenDAO\u7684\u6570\u636e\u5e93\u5347\u7ea7\u5e2e\u52a9\u7c7b\uff0c\u53ea\u9700\u4e00\u884c\u4ee3\u7801\u89e3\u51b3\u6570\u636e\u5e93\u5347\u7ea7\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/yuweiguocn/GreenDaoUpgradeHelper\n\n\nActiveAndroid\nAndroid Sqlite orm \u7684 db \u5de5\u5177\u7c7b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/pardom/ActiveAndroid\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/pardom/ActiveAndroid/wiki/_pages\n\n\nSprinkles\nAndroid Sqlite orm \u7684 db \u5de5\u5177\u7c7b\uff0c\u6bd4\u8f83\u663e\u8457\u7684\u7279\u70b9\u5c31\u662f\u914d\u5408 https://github.com/square/retrofit \u80fd\u4fdd\u5b58\u4ece\u670d\u52a1\u5668\u83b7\u53d6\u7684\u6570\u636e\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/emilsjolander/sprinkles\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://emilsjolander.github.io/blog/2013/12/18/android-with-sprinkles/\n\n\nRealm\n\u79fb\u52a8\u7aef\u7684\u6570\u636e\u5e93\uff0c\u9002\u7528\u4e8e Phone\u3001Tablet\u3001Wearable\uff0c\u652f\u6301 ORM\uff0c\u7ebf\u7a0b\u5b89\u5168\u3001\u652f\u6301\u8fde\u8868\u53ca\u6570\u636e\u5e93\u52a0\u5bc6\uff0c\u6bd4 SQLite \u6027\u80fd\u66f4\u597d\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/realm/realm-java\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://realm.io/docs/java/0.72.0/\n\n\normlite-android\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/j256/ormlite-android\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://ormlite.com/sqlite_java_android_orm.shtml\n\n\nSchematic\n\u6839\u636e SQLite \u751f\u6210 ContentProvider\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/SimonVT/schematic\n\n\nDBFlow\nAndroid SQLite ORM \u5de5\u5177\u5e93\u3002\u7efc\u5408\u4e86 Active Android, Schematic, Ollie,Sprinkles \u7b49\u5e93\u7684\u4f18\u70b9\uff1b\u901a\u8fc7\u6ce8\u89e3\u5b9e\u73b0\uff0c\u6027\u80fd\u597d\uff1b\u80fd\u751f\u6210 ContentProvider\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Raizlabs/DBFlow\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/Raizlabs/DBFlow#usage-docs\n\n\nSnappyDB\nSnappyDB\u662f\u4e00\u4e2akey-value\u6570\u636e\u5e93\uff0c\u975e\u5e38\u6d41\u884c\u7684NoSQL\u6570\u636e\u5e93\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/nhachicha/SnappyDB\n\u6f14\u793aDemo\uff1ahttps://play.google.com/store/apps/details?id=com.snappydb.snippets.app\n\u6027\u80fd\u5bf9\u6bd4\u56fe\uff1a\n\n\n\n\u4e94\u3001Android \u516c\u5171\u5e93\n\n\nGuava\nGoogle \u7684\u57fa\u4e8e java1.6 \u7684\u7c7b\u5e93\u96c6\u5408\u7684\u6269\u5c55\u9879\u76ee\uff0c\u5305\u62ec collections, caching, primitives support, concurrency libraries, common annotations, string processing, I/O \u7b49\u7b49. \u8fd9\u4e9b\u9ad8\u8d28\u91cf\u7684 API \u53ef\u4ee5\u4f7f\u4f60\u7684 JAVa \u4ee3\u7801\u66f4\u52a0\u4f18\u96c5\uff0c\u66f4\u52a0\u7b80\u6d01\n\u9879\u76ee\u5730\u5740\uff1ahttps://code.google.com/p/guava-libraries/\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://code.google.com/p/guava-libraries/wiki/GuavaExplained\n\n\nAndroidCommon\nAndroid \u516c\u5171\u5e93\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Trinea/AndroidCommon\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=cn.trinea.android.demo\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://www.trinea.cn/android/android-common-lib/\n\u5305\u62ec\uff1aa. ImageCache \u56fe\u7247\u7f13\u5b58\uff0c\u5305\u542b\u5185\u5b58\u548c Sdcard \u7f13\u5b58\nhttps://www.trinea.cn/android/android-imagecache/\n\u7279\u70b9\uff1a(1)\u652f\u6301\u9884\u53d6\u65b0\u56fe\u7247\uff0c\u652f\u6301\u7b49\u5f85\u961f\u5217\n(2)\u5305\u542b\u4e8c\u7ea7\u7f13\u5b58\uff0c\u53ef\u81ea\u5b9a\u4e49\u6587\u4ef6\u540d\u4fdd\u5b58\u89c4\u5219\n(3)\u53ef\u9009\u62e9\u591a\u79cd\u7f13\u5b58\u7b97\u6cd5(FIFO\u3001LIFO\u3001LRU\u3001MRU\u3001LFU\u3001MFU \u7b49 13 \u79cd)\u6216\u81ea\u5b9a\u4e49\u7f13\u5b58\u7b97\u6cd5\n(4)\u53ef\u65b9\u4fbf\u7684\u4fdd\u5b58\u53ca\u521d\u59cb\u5316\u6062\u590d\u6570\u636e\n(5)\u652f\u6301\u4e0d\u540c\u7c7b\u578b\u7f51\u7edc\u5904\u7406\n(6)\u53ef\u6839\u636e\u7cfb\u7edf\u914d\u7f6e\u521d\u59cb\u5316\u7f13\u5b58\u7b49\n\n\nHttpCache Http \u7f13\u5b58\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://www.trinea.cn/android/android-http-cache\n\u7279\u70b9\u662f\uff1a(1) \u6839\u636e cache-control\u3001expires \u7f13\u5b58 http \u8bf7\u6c42\n(2) \u652f\u6301\u540c\u6b65\u3001\u5f02\u6b65 Http \u8bf7\u6c42\n(3) \u5728\u533f\u540d\u56de\u8c03\u4e2d\u5904\u7406\u8bf7\u6c42\u7ed3\u679c\n(4) \u5728 UI \u7ebf\u7a0b\u5916\u8fdb\u884c http \u8bf7\u6c42\n(5) \u9ed8\u8ba4 gzip \u538b\u7f29\n(2) \u516c\u5171 View(\u4e0b\u62c9\u53ca\u5e95\u90e8\u52a0\u8f7d\u66f4\u591a ListView\u3001\u5e95\u90e8\u52a0\u8f7d\u66f4\u591a ScrollView\u3001\u6ed1\u52a8\u4e00\u9875 Gallery)\n(3) Android \u5e38\u7528\u5de5\u5177\u7c7b(\u7f51\u7edc\u3001\u4e0b\u8f7d\u3001Android \u8d44\u6e90\u64cd\u4f5c\u3001shell\u3001\u6587\u4ef6\u3001Json\u3001\u968f\u673a\u6570\u3001Collection \u7b49\u7b49)\n\n\nDropDownListView \u4e0b\u62c9\u5237\u65b0\u53ca\u6ed1\u52a8\u5230\u5e95\u90e8\u52a0\u8f7d\u66f4\u591a ListView\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://www.trinea.cn/android/dropdown-to-refresh-and-bottom-load-more-listview/\n\n\nshipfaster\n\u6574\u5408\u4e86 Dagger Otto Retrofit Robolectric Picasso OkHttp\uff0c\u65b9\u4fbf\u5feb\u901f\u5f00\u53d1\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/pyricau/shipfaster\n\n\nCleanAndroidCode\n\u6574\u5408\u4e86 Dagger Otto AndroidAnnotations\uff0c\u65b9\u4fbf\u5feb\u901f\u5f00\u53d1\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/pyricau/CleanAndroidCode\n\n\nxUtils\n\u57fa\u4e8e Afinal\uff0c\u5305\u542b DbUtils\u3001ViewUtils\u3001HttpUtils\u3001BitmapUtils \u56db\u5927\u6a21\u5757\uff0c\u53ef\u7528\u4e8e\u5feb\u901f\u5f00\u53d1\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/wyouflf/xUtils\n\u539f\u7406\u5256\u6790\u6587\u6863\uff1a[xUtils](https://a.codekk.com/detail/Android/Caij/xUtils \u6e90\u7801\u89e3\u6790)\n\n\nAfinal\nAfinal \u662f\u4e00\u4e2a android \u7684 ioc\uff0corm \u6846\u67b6\uff0c\u5185\u7f6e\u4e86\u56db\u5927\u6a21\u5757\u529f\u80fd\uff1aFinalAcitivity,FinalBitmap,FinalDb,FinalHttp\u3002\u901a\u8fc7 finalActivity\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6ce8\u89e3\u7684\u65b9\u5f0f\u8fdb\u884c\u7ed1\u5b9a ui \u548c\u4e8b\u4ef6\u3002\u901a\u8fc7 finalBitmap\uff0c\u6211\u4eec\u53ef\u4ee5\u65b9\u4fbf\u7684\u52a0\u8f7d bitmap \u56fe\u7247\uff0c\u800c\u65e0\u9700\u8003\u8651 oom \u7b49\u95ee\u9898\u3002\u901a\u8fc7 finalDB \u6a21\u5757\uff0c\u6211\u4eec\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5bf9 android \u7684 sqlite \u6570\u636e\u5e93\u8fdb\u884c\u589e\u5220\u6539\u67e5\u3002\u901a\u8fc7 FinalHttp \u6a21\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5 ajax \u5f62\u5f0f\u8bf7\u6c42 http \u6570\u636e\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/yangfuhai/afinal\n\u5b98\u7f51\u7f51\u5740\uff1ahttp://www.afinal.org\n\n\nUltimateAndroid\nUltimateAndroid \u662f\u4e00\u4e2a\u5feb\u901f\u5f00\u53d1 Android \u5e94\u7528\u7684\u6846\u67b6\uff0c\u6846\u67b6\u76ee\u524d\u4e3b\u8981\u5305\u542b\u7684\u529f\u80fd\u6709 View Injection,ORM,\u5f02\u6b65\u7f51\u7edc\u8bf7\u6c42\u548c\u56fe\u7247\u52a0\u8f7d\uff0c\u81ea\u52a8\u5316\u811a\u672c\u6d4b\u8bd5,\u78c1\u76d8 LRU \u7b49\u529f\u80fd.\u540c\u65f6\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u4e8e TripleDes\u3001Webview \u5feb\u901f\u8bbe\u7f6e\u3001Md5 \u5904\u7406\u3001String \u5904\u7406,Https \u5904\u7406\u7b49\u5e38\u7528\u5de5\u5177\u7c7b\uff0c\u8fd8\u6709\u8d85\u8fc7 100 \u591a\u79cd UI \u63a7\u4ef6\u6548\u679c\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/cymcsg/UltimateAndroid\n\u5b98\u7f51\u7f51\u5740\uff1ahttp://blog.marshalchen.com/UltimateAndroid/\n\n\nSAF\nSAF(Simple Android Framework)\u662f\u4e00\u4e2a\u7b80\u5355\u7684 android \u6846\u67b6\uff0c\u5b83\u4e3a\u5f00\u53d1 Android app \u63d0\u4f9b\u4e86\u57fa\u7840\u6027\u7ec4\u4ef6\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/fengzhizi715/SAF\n\u5b98\u7f51\u7f51\u5740\uff1ahttp://www.salesuite.cn/\n\u5305\u62ec\uff1a(1)Event Bus(\u4e8b\u4ef6\u603b\u7ebf)\n(2) Rest Client(http \u7684\u6846\u67b6)\n(3) Image Cache(\u56fe\u7247\u7f13\u5b58)\n(4) Dependency Injection(\u4f9d\u8d56\u6ce8\u5165)\n(5) Sqlite ORM(sqlite \u7684 orm)\n(6) Router(Activity\u3001Fragment \u7684 Router)\n(7) Utils(\u5404\u79cd\u5e38\u7528\u7684\u5de5\u5177\u7c7b)\n\n\nBarber\nCustom View \u795e\u5668\u3002\u901a\u8fc7\u7b80\u5355\u7684\u6ce8\u89e3\u5e2e\u52a9\u4f60\u5927\u5927\u51cf\u5c11 Custom View \u4e2d\u7684\u4ee3\u7801\u91cf\u3002\u7531\u4e8e\u548c ButterKnife \u4e00\u6837\u4f7f\u7528\u4e86 Annotation Proccessor \uff0c\u6240\u4ee5\u5bf9\u7a0b\u5e8f\u6027\u80fd\u6ca1\u6709\u5f71\u54cd\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/hzsweers/barber\n\n\ndevice-year-class\nA library that analyzes an Android device's specifications and calculates which year the device would be considered \"high end\u201d.(facebook \u5f00\u53d1\u7684\u68c0\u6d4b\u624b\u673a\u4e3b\u6d41\u914d\u7f6e\u5de5\u5177)\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/facebook/device-year-class\n\n\nRxAndroid\n\u5bf9RxJava\u5728Android\u4e0a\u7684\u6269\u5c55\uff0c\u4f7f\u5f97Android\u4e0a\u4e5f\u5f88\u5bb9\u6613\u5b9e\u73b0reactive components\uff0c\u7b80\u5316\u7ebf\u7a0b\u64cd\u4f5c\uff0c\u4ece\u800c\u5199\u51fa\u5f88\u6f02\u4eae\u7684\u4ee3\u7801\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ReactiveX/RxAndroid\n\u6587\u6863\u4ecb\u7ecd\uff1a\u7ed9Android \u5f00\u53d1\u8005\u7684 RxJava \u8be6\u89e3\n\n\nMultiImageSelector\n\u4e00\u4e2a\u672c\u5730\u56fe\u7247\u9009\u62e9\u5668\uff0c\u652f\u6301\u56fe\u7247\u7684\u5355\u9009\u548c\u591a\u9009\uff0c\u76f4\u63a5\u8fd4\u56de\u6240\u9009\u56fe\u7247\u7684\u8def\u5f84\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/lovetuzitong/MultiImageSelector.git\n\n\n\u516d\u3001Android \u9ad8\u7248\u672c\u5411\u4f4e\u7248\u672c\u517c\u5bb9\n\n\nNine Old Androids\n\u5c06 Android 3.0(Honeycomb)\u6240\u6709\u52a8\u753b API(ObjectAnimator ValueAnimator \u7b49)\u517c\u5bb9\u5230 Android1.0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JakeWharton/NineOldAndroids\n\u539f\u7406\u5256\u6790\u6587\u6863\uff1a[Nine Old Androids](https://a.codekk.com/detail/Android/Mr.Simple/NineOldAnimations \u6e90\u7801\u89e3\u6790)\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.jakewharton.nineoldandroids.sample\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://nineoldandroids.com/\n\n\nHoloEverywhere\n\u5c06 Android 3.0 \u7684 Holo \u4e3b\u9898\u517c\u5bb9\u5230 Android2.1++\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Prototik/HoloEverywhere\nDemo \u5730\u5740\uff1ahttps://raw.github.com/Prototik/HoloEverywhere/repo/org/holoeverywhere/demo/2.1.0/demo-2.1.0.apk\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://android-developers.blogspot.com/2012/01/holo-everywhere.html\n\n\nSherlockNavigationDrawer\n\u5c06 Android NavigationDrawer \u548c ActionbarSherlock \u7ed3\u5408\uff0c\u89e3\u51b3 4.0 \u4ee5\u4e0b NavigationDrawer \u7684\u9002\u914d\u95ee\u9898\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/tobykurien/SherlockNavigationDrawer\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://developer.android.com/training/implementing-navigation/nav-drawer.html\n\n\nNotifications4EveryWhere\n\u5c06 Android 4.1 \u7684 Notification \u517c\u5bb9\u5230 Android2.2++\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/youxiachai/Notifications4EveryWhere\n\n\nAndroid Switch Widget Backport\n\u5c06 Android Switch \u548c SwitchPreference \u7684\u517c\u5bb9\u5230 Android2.1++\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/BoD/android-switch-backport\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=org.jraf.android.backport.switchwidget.sample\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/BoD/android-switch-backport#using-the-switch\n\n\nandroid-datepicker\n\u5c06 Android 4.0 \u7684 datepicker \u517c\u5bb9\u5230 Android2.2++\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/SimonVT/android-datepicker\n\n\nTransitions Everywhere\nAndroid 4.4 \u7684 Transitions API \u517c\u5bb9\u5230 Android 2.2 \u4ee5\u4e0a\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/andkulikov/transitions-everywhere\n\n\nKShareViewActivityManager\n\u4e00\u4e2a\u517c\u5bb9Android 5.0 \u4ee5\u4e0bShared Element Transition \uff08\u9875\u9762\u95f4\u5171\u4eab\u5143\u7d20\u4f4d\u79fb\u52a8\u753b\uff09\u5e93\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/kot32go/KShareViewActivityManager\n\u6548\u679c\u56fe\uff1ahttp://i8.tietuku.com/aa5726b8302ae711.gif\n\n\n\u4e03\u3001\u591a\u5a92\u4f53\u76f8\u5173\n\n\ncocos2d-x\n\u8de8\u5e73\u53f0\u7684 2d \u6e38\u620f\u6846\u67b6\uff0c\u652f\u6301 Android\u3001IOS\u3001Linux\u3001Windows \u7b49\u4f17\u591a\u5e73\u53f0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/cocos2d/cocos2d-x\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://www.cocos2d-x.org/wiki\n\u5b98\u7f51\u7f51\u5740\uff1ahttp://www.cocos2d-x.org/\n\n\nJustWeEngine\nAndroid\u7684\u8f7b\u91cf\u7ea7\u6e38\u620f\u6846\u67b6\uff0c\u80fd\u5927\u5927\u7f29\u51cf\u7f16\u5199\u539f\u751f\u6e38\u620f\u7684\u4ee3\u7801\u91cf\u548c\u96be\u5ea6\uff0c\u4ecd\u5728\u6301\u7eed\u66f4\u65b0\u4e2d\u3002\n\u9879\u76ee\u5730\u5740: https://github.com/lfkdsk/JustWeEngine\nDemo\u5730\u5740: https://github.com/lfkdsk/EngineDemo\n\n\nVitamio\n\u662f\u4e00\u6b3e Android \u4e0e iOS \u5e73\u53f0\u4e0a\u7684\u5168\u80fd\u591a\u5a92\u4f53\u5f00\u53d1\u6846\u67b6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/yixia/VitamioBundle\n\u7f51\u7ad9\u4ecb\u7ecd\uff1ahttp://www.vitamio.org/docs/\n\u7279\u70b9\uff1a(1) \u5168\u9762\u652f\u6301\u786c\u4ef6\u89e3\u7801\u4e0e GPU \u6e32\u67d3\n(2) \u80fd\u591f\u6d41\u7545\u64ad\u653e 720P \u751a\u81f3 1080P \u9ad8\u6e05 MKV\uff0cFLV\uff0cMP4\uff0cMOV\uff0cTS\uff0cRMVB \u7b49\u5e38\u89c1\u683c\u5f0f\u7684\u89c6\u9891\n(3) \u5728 Android \u4e0e iOS \u4e0a\u8de8\u5e73\u53f0\u652f\u6301 MMS, RTSP, RTMP, HLS(m3u8)\u7b49\u5e38\u89c1\u7684\u591a\u79cd\u89c6\u9891\u6d41\u5a92\u4f53\u534f\u8bae\uff0c\u5305\u62ec\u70b9\u64ad\u4e0e\u76f4\u64ad\u3002\n\n\nVDPlayerSDK\n\u6700\u5bb9\u6613\u96c6\u6210\u7684\u5f00\u6e90\u64ad\u653e\u5668\u7ec4\u4ef6\uff0c\u652f\u6301\u76f4\u64ad\uff0c\u652f\u6301\u8f6f\u786c\u89e3\u5207\u6362\uff0c\u652f\u6301\u6e05\u6670\u5ea6\u5207\u6362\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/SinaVDDeveloper/\nDemo \u5730\u5740\uff1ahttps://github.com/SinaVDDeveloper/demo\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/SinaVDDeveloper/sinavideo_playersdk\n\u7279\u70b9\uff1a\n(1) \u4f7f\u7528\u81ea\u5b9a\u4e49\u63a7\u4ef6\u65b9\u5f0f\u63d0\u4f9b\u64ad\u653e\u5668UI\uff0c\u4e0d\u9700\u8981\u89c6\u9891\u76f8\u5173\u77e5\u8bc6\uff0c\u80fd\u7f16\u5199android\u5e94\u7528\u5c31\u80fd\u4f7f\u7528\n(2) \u8f6f\u786c\u89e3\u5207\u6362\u3001\u70b9\u64ad\u76f4\u64ad\u652f\u6301\n(3) \u89e3\u7801\u5185\u6838\u5c0f\u4e8e4M\uff0c\u66f4\u65b9\u4fbf\u96c6\u6210\u5230\u975e\u4e13\u4e1a\u89c6\u9891app\u4e2d\n(4) \u4fee\u6b63\u4e00\u4e9bvitaimio\u7684\u95ee\u9898\uff0c\u6bd4\u5982m3u8\u53ef\u4ee5\u62d6\u52a8\u7b49\u7b49\n\n\nVideoPlayerManager\n\u5e2e\u52a9\u5b9e\u73b0VideoPlayer\u63a7\u5236\uff0c\u4f7f\u5f97\u5b83\u66f4\u5bb9\u6613\u4f7f\u7528ListView\u548crecyclerview\u3002\u5b83\u8fd8\u53ef\u4ee5\u8ddf\u8e2a\u6eda\u52a8\u5217\u8868\u4e2d\u53ef\u89c1\u7684\u9879\u3002\u5f53\u5217\u8868\u4e2d\u7684\u65b0\u9879\u53ef\u89c1\u57df\u6700\u5927\u65f6\uff0c\u8be5\u5e93\u7ed9\u51fa\u4e86\u63a5\u53e3\u6765\u8ddf\u8e2a\u5b83\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/danylovolokh/VideoPlayerManager\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://medium.com/@v.danylo/implementing-video-playback-in-a-scrolled-list-listview-recyclerview-d04bc2148429#.hs5n0geqn\n\n\nUniversalVideoView\nAndroid\u4e0a\u5b9a\u4e49\u64ad\u653e\u5668\u63a7\u4ef6,\u652f\u6301\u81ea\u5b9a\u4e49\u63a7\u5236UI, \u5168\u5c4f\u64ad\u653e, \u91cd\u529b\u611f\u5e94\u81ea\u52a8\u5207\u6362\u6a2a\u7ad6\u5c4f.\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/linsea/UniversalVideoView\n\n\n\n\nPhotoProcessing\n\u5229\u7528 ndk \u5904\u7406\u56fe\u7247\u5e93\uff0c\u652f\u6301 Instafix\u3001Ansel\u3001Testino\u3001XPro\u3001Retro\u3001BW\u3001Sepia\u3001Cyano\u3001Georgia\u3001Sahara\u3001HDR\u3001Rotate(\u65cb\u8f6c)\u3001Flip(\u7ffb\u8f6c)\u7b49\u5404\u79cd\u7279\u6548\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/lightbox/PhotoProcessing\nDemo \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/photo-processing.apk?raw=true\n\n\nAndroid StackBlur\n\u56fe\u7247\u6a21\u7cca\u6548\u679c\u5de5\u5177\u7c7b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/kikoso/android-stackblur\nDemo \u5730\u5740\uff1ahttps://github.com/kikoso/android-stackblur/blob/master/StackBlurDemo/bin/StackBlurDemo.apk?raw=true\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/kikoso/android-stackblur#usage\n\n\nBitmap Smart Clipping using OpenCV\n\u56fe\u7247\u667a\u80fd\u88c1\u526a\u4fdd\u7559\u91cd\u8981\u90e8\u5206\u663e\u793a\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/beartung/tclip-android\n\u5229\u7528\u6dd8\u5b9d\u7684 http://code.taobao.org/p/tclip/ \u5e93\u5b8c\u6210\n\u4e00\u6dd8\u73a9\u5ba2\u6b63\u5728\u4f7f\u7528\u7684\u56fe\u7247\u88c1\u526a\uff0c\u81ea\u52a8\u8bc6\u522b\u56fe\u7247\u4e2d\u7684\u91cd\u8981\u533a\u57df\uff0c\u5e76\u4e14\u5728\u56fe\u7247\u88c1\u526a\u65f6\u4fdd\u7559\u91cd\u8981\u533a\u57df\n\u7279\u70b9\uff1a(1). \u80fd\u8fdb\u884c\u4eba\u8138\u8bc6\u522b\u3002\u56fe\u7247\u4e2d\u6709\u4eba\u8138\uff0c\u5c06\u81ea\u52a8\u89c6\u4e3a\u4eba\u8138\u533a\u57df\u4e3a\u91cd\u8981\u533a\u57df\uff0c\u5c06\u4e0d\u4f1a\u88ab\u88c1\u526a\u6389\n(2).\u81ea\u52a8\u5176\u5b83\u91cd\u8981\u533a\u57df\u3002\u5982\u679c\u56fe\u7247\u4e2d\u672a\u8bc6\u522b\u51fa\u4eba\u8138\uff0c\u5219\u4f1a\u6839\u636e\u7279\u5f81\u5206\u5e03\u8ba1\u7b97\u51fa\u91cd\u533a\u57df\n\n\nCropper\n\u56fe\u7247\u5c40\u90e8\u526a\u5207\u5de5\u5177\uff0c\u53ef\u89e6\u6478\u63a7\u5236\u9009\u62e9\u533a\u57df\u6216\u65cb\u8f6c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/edmodo/cropper\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/edmodo/cropper/wiki\n\u6548\u679c\u56fe\uff1a\n\n\nuCrop\nYalantis \u51fa\u54c1\u7684\u5f3a\u5927\u7684\u56fe\u7247\u88c1\u526a\u5e93 \uff0c\u652f\u6301\u7f29\u653e\uff0c\u65cb\u8f6c\u56fe\u7247\uff0c\u652f\u6301\u5404\u79cd\u6bd4\u4f8b\u7684\u88c1\u526a\u6846\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Yalantis/uCrop\n\u6548\u679c\u56fe\uff1a\n\n\nandroid-crop\n\u56fe\u7247\u88c1\u526a Activity\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jdamcd/android-crop\n\u6548\u679c\u56fe\uff1a\n\n\nTileView\n\u53ef\u5206\u5757\u663e\u793a\u5927\u56fe\uff0c\u652f\u6301 2D \u62d6\u52a8\u3001\u53cc\u51fb\u3001\u53cc\u6307\u653e\u5927\u3001\u53cc\u6307\u634f\u5408\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/moagrius/TileView\nDemo \u5730\u5740\uff1ahttp://moagrius.github.io/TileView/TileViewDemo.apk\n\n\nBlurEffectForAndroidDesign\n\u56fe\u7247\u6a21\u7cca\u6548\u679c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/PomepuyN/BlurEffectForAndroidDesign\n\n\nandroid-eye\nPC \u7aef\u7f51\u9875\u67e5\u770b\u540c\u4e00\u5c40\u57df\u7f51\u5185\u7684\u624b\u673a\u6444\u50cf\u5934\u5185\u5bb9\uff0c\u53ef\u4ee5\u7528\u6765\u76d1\u63a7\u54e6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Teaonly/android-eye\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=teaonly.droideye\n\n\nlibpng for Android\nPNG \u56fe\u7247\u7684 jni \u5e93\uff0c\u652f\u6301\u51e0\u4e4e png \u7684\u6240\u6709\u7279\u6027\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/julienr/libpng-android\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://www.libpng.org/pub/png/libpng.html\n\n\nandroid-gpuimage\n\u57fa\u4e8e GPU \u7684\u56fe\u7247\u6ee4\u955c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/CyberAgent/android-gpuimage\n\n\nAndroidFaceCropper\n\u56fe\u7247\u8138\u90e8\u81ea\u52a8\u8bc6\u522b\uff0c\u5c06\u8bc6\u522b\u540e\u7684\u5c40\u90e8\u56fe\u7247\u8fd4\u56de\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/lafosca/AndroidFaceCropper\n\n\nAndroid Video Crop\n\u5229\u7528 TextureView \u64ad\u653e\u548c\u526a\u5207\u89c6\u9891\uff0c\u7c7b\u4f3c ImageView.setScaleType\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/dmytrodanylyk/android-video-crop\nDemo \u5730\u5740\uff1ahttps://github.com/lafosca/AndroidFaceCropper/releases/download/1.0/FaceCropper-sample-debug-unaligned.apk\n\n\nsvg-android\nAndroid Svg \u77e2\u91cf\u56fe\u5f62\u652f\u6301\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/japgolly/svg-android https://github.com/japgolly/svg-android\n\n\nAndroid Visualizer\n\u4ece Android MediaPlayer \u83b7\u5f97\u97f3\u9891\uff0c\u7136\u540e\u50cf iTunes \u53ca WinAmp \u4e00\u6837\u5c55\u793a\u97f3\u8f68\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/felixpalmer/android-visualizer\n\n\nExoPlayer\n\u5305\u62ec\u4eea\u8868\u677f\u548c SmoothStreaming \u81ea\u9002\u5e94\u56de\u653e\uff0c\u7f13\u5b58\u6301\u4e45\u5316\u548c\u81ea\u5b9a\u4e49\u6e32\u67d3\u5668\uff0c\u65b9\u4fbf\u81ea\u5b9a\u4e49\u548c\u6269\u5c55\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u5e94\u7528\u5546\u5e97\u66f4\u65b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/google/ExoPlayer\n\n\nDanmakuFlameMaster\nandroid \u4e0a\u5f00\u6e90\u5f39\u5e55\u89e3\u6790\u7ed8\u5236\u5f15\u64ce\u9879\u76ee\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ctiao/DanmakuFlameMaster\n\n\nOpenDanmaku\nandroid \u4e0a\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u66f4\u7b80\u5355\u7684\u5f00\u6e90\u5f39\u5e55\u63a7\u4ef6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/linsea/OpenDanmaku\n\n\nK-Sonic\n\u4e00\u4e2a\u57fa\u4e8eSonic\u7684\u53d8\u97f3Demo,\u53ef\u8c03\u8282Speed,Pitch,Rate.\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jcodeing/K-Sonic\nDemo \u5730\u5740\uff1aDownload here\n\n\nKMedia\n\u4e00\u4e2a\u4e3aAndroid\u6253\u9020\u7684\u5e94\u7528\u7ea7\u5a92\u4f53\u6846\u67b6, \u5b83\u53ef\u4ee5\u52a9\u4f60\u5feb\u901f\u642d\u5efa\u5a92\u4f53\u5e94\u7528.\n\u5185\u90e8\u91cd\u65b0\u5b9a\u4e49Android MediaPlayer API\u5e76\u5bf9\u5176\u5c01\u88c5, \u7b80\u5316\u548c\u6269\u5c55\u4e00\u4e9b\u539f\u751fAPI\u4e0d\u652f\u6301\u7684\u529f\u80fd.\n\u5176\u4e2d\u6db5\u76d6\u4e86, AB\u64ad\u653e/\u5faa\u73af \u4f4d\u7f6e\u5355\u5143/\u95f4\u9694/\u5faa\u73af \u53d8\u901f\u64ad\u653e \u5a92\u4f53\u961f\u5217\u7ba1\u7406 \u5a92\u4f53\u670d\u52a1/\u7ed1\u5b9a \u97f3\u9891\u540e\u53f0/\u901a\u77e5\u680f\u63a7\u5236\n\u5a92\u4f53\u6309\u952e\u81ea\u5b9a\u4e49\u5904\u7406 \u97f3\u9891\u7126\u70b9\u7ba1\u7406 \u5a92\u4f53\u5f15\u64ce\u5207\u6362/\u6269\u5c55... \u7b49\u529f\u80fd\u7684\u5feb\u901f\u5b9e\u73b0.\n\u4ee5\u53ca, \u5bf9\u89c6\u9891\u64ad\u653e\u5b9e\u73b0\u65b9\u9762\u7684\u5c01\u88c5. \u5176\u4e2d\u5c06\u89c6\u9891\u89c6\u56fe\u4e3b\u8981\u5206\u4e3a: \u7ed8\u5236\u5c42 \u63a7\u5236\u7ec4 \u63a7\u5236\u5c42, \u4e09\u4e2a\u90e8\u5206.\n\u4ece\u800c\u80fd\u591f\u5feb\u901f\u5e76\u7075\u6d3b\u7684\u5b9e\u73b0Video\u76f8\u5173\u5e94\u7528\u7684\u5927\u90e8\u5206\u529f\u80fd, \u5305\u62ec \u89c6\u9891\u6d6e\u7a97/\u62d6\u52a8/\u8c03\u6574\u4f4d\u7f6e\u5927\u5c0f \u6a2a\u7ad6\u5c4f\u81ea\u52a8\u5207\u6362 \u5168\u5c4f\u9501\u5b9a\n\u624b\u52bf\u8c03\u6574\u4eae\u5ea6/\u97f3\u91cf/\u8fdb\u5ea6 \u5b57\u5e55/\u5207\u6362/\u62d6\u52a8 \u89c6\u9891\u6bb5\u843d/\u95f4\u9694\u590d\u8bfb \u89c6\u9891\u7eed\u96c6/\u5217\u8868/\u5faa\u73af\u64ad\u653e \u52a8\u6001\u5207\u6362\u89c6\u9891\u63a7\u5236\u5c42\n\u63a7\u5236\u5c42\u5206\u79bb... \u7b49\u529f\u80fd\u7684\u5feb\u901f\u5b9e\u73b0.\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jcodeing/KMedia \u2192\u9879\u76ee\u6a21\u5757\uff1aKMedia-Core & KMedia-Uie & KMedia-Exo\n\n\n\n\u516b\u3001\u4e8b\u4ef6\u603b\u7ebf(\u8ba2\u9605\u8005\u6a21\u5f0f)\n\u901a\u8fc7\u53d1\u5e03/\u8ba2\u9605\u4e8b\u4ef6\u89e3\u8026\u4e8b\u4ef6\u53d1\u9001\u548c\u63a5\u53d7\uff0c\u4ece\u800c\u7b80\u5316\u5e94\u7528\u7a0b\u5e8f\u7ec4\u4ef6(Activities, Fragments \u53ca\u540e\u53f0\u7ebf\u7a0b)\u4e4b\u95f4\u7684\u901a\u4fe1\n\n\nEventBus\ngreenrobot \u7684\u5f00\u6e90\u9879\u76ee\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/greenrobot/EventBus\n\u539f\u7406\u5256\u6790\u6587\u6863\uff1a[EventBus](https://a.codekk.com/detail/Android/Trinea/EventBus \u6e90\u7801\u89e3\u6790)\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/greenrobot/EventBus#general-usage-and-api\n\u7279\u70b9\uff1a(1) \u652f\u6301\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u7ebf\u7a0b\u4e2d\u5904\u7406\u8ba2\u9605\uff0c\u5305\u62ec\u53d1\u5e03\u6240\u5728\u7ebf\u7a0b\uff0cUI \u7ebf\u7a0b\u3001\u5355\u4e00\u540e\u53f0\u7ebf\u7a0b\u3001\u5f02\u6b65\u7ebf\u7a0b\n(2) \u652f\u6301\u4e8b\u4ef6\u4f18\u5148\u7ea7\u5b9a\u4e49\uff0c\u652f\u6301\u4f18\u5148\u7ea7\u9ad8\u7684\u8ba2\u9605\u8005\u53d6\u6d88\u4e8b\u4ef6\u7ee7\u7eed\u4f20\u9012\uff0c\u652f\u6301\u7c98\u6027\u4e8b\u4ef6\uff0c\u662f\u4e0d\u662f\u8ddf\u7cfb\u7edf\u7684\u6709\u5e8f\u5e7f\u64ad\u3001\u7c98\u6027\u5e7f\u64ad\u5f88\u50cf\u554a\n(3) \u4e0d\u662f\u57fa\u4e8e annotations\n(4) \u6027\u80fd\u66f4\u4f18\n(5) \u4f53\u79ef\u5c0f\n(6) \u652f\u6301\u5355\u4f8b\u521b\u5efa\u6216\u521b\u5efa\u591a\u4e2a\u5bf9\u8c61\n(7) \u652f\u6301\u6839\u636e\u4e8b\u4ef6\u7c7b\u578b\u8ba2\u9605\n\n\nOtto\nSquare \u7684\u5f00\u6e90\u9879\u76ee\uff0c\u57fa\u4e8e Guava \u7684 Android \u4f18\u5316\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/square/otto\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://square.github.io/otto/\nEventBus \u4e0e Otto \u7684\u529f\u80fd\u53ca\u6027\u80fd\u5bf9\u6bd4\u6587\u6863\nEventBus \u4e0e Otto \u6027\u80fd\u5bf9\u6bd4 Demo Apk\n\n\n\u4e5d\u3001\u4f20\u611f\u5668\n\n\nGreat Android Sensing Toolkit\nAndroid \u611f\u5e94\u5668\u5de5\u5177\u5305\uff0c\u5305\u542b\u793a\u4f8b\u53ca\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u9700\u8981\u7684\u7b97\u6cd5\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/gast-lib/gast-lib\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=root.gast.playground\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/gast-lib/gast-lib#documentation\n\n\nSensorManager\nAndroid \u4f20\u611f\u5668\u7ba1\u7406\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/nlathia/SensorManager\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://docs.google.com/document/d/1TqThJULb-4e6TGb1gdkAaPCfyuXStjJpbnt7a0OZ9OE/edit\n\n\nGPSLogger\n\u8bb0\u5f55 GPS \u4fe1\u606f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mendhak/gpslogger\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.mendhak.gpslogger\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://code.mendhak.com/gpslogger/\n\n\nPedometer\n\u8ba1\u6b65\u5668\uff0c\u4f7f\u7528\u786c\u4ef6\u8ba1\u6b65\u611f\u5e94\u5668\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/j4velin/Pedometer\n\n\nleapcast\nChromeCast \u6a21\u62df\u5668\u7684 App\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/dz0ny/leapcast\n\n\nArduino-Communicator\n\u4e0e Arduino \u901a\u4fe1\u7684 App\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jeppsson/Arduino-Communicator\n\n\nandroid-pedometer\nAndroid \u8ba1\u6b65\u5668\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/bagilevi/android-pedometer\nDemo \u5730\u5740\uff1ahttp://pedometer.googlecode.com/files/Pedometer-1.4.apk\n\n\nOwnTracks for Android\n\u81ea\u5df1\u7684\u8f68\u8ff9\u8bb0\u5f55\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/owntracks/android\n\n\nShake Detector library for Android\nAndroid \u624b\u673a\u9707\u52a8\u6447\u6643\u68c0\u6d4b\u5e93\uff0c\u63d0\u4f9b\u4f9b UI \u7ebf\u7a0b\u8c03\u7528\u7684\u56de\u8c03\u63a5\u53e3\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/tbouron/ShakeDetector\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.github.tbouron.shakedetector.example\n\n\nAndroid heart rate monitor\nAndroid \u5fc3\u8df3\u68c0\u6d4b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/phishman3579/android-heart-rate-monitor\n\n\nBluetooth LE Library for Android\n\u84dd\u7259\u6e90\u4fe1\u606f\uff0c\u5305\u62ec\u5b9d\u5e93 Mac\u3001\u66f4\u65b0\u65f6\u95f4\u3001RSSI\u3001UUID\u3001\u4fe1\u53f7\u6e90\u8ddd\u79bb\u3001\u5f71\u54cd\u8303\u56f4\u7b49\u4fe1\u606f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/alt236/Bluetooth-LE-Library---Android\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=uk.co.alt236.btlescan\n\n\nfarebot\n\u901a\u8fc7 NFC \u4ece\u516c\u4ea4\u5361\u4e2d\u8bfb\u53d6\u6570\u636e\u7684\u4e00\u4e2a\u5e94\u7528\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/codebutler/farebot\n\n\n\u5341\u3001\u5b89\u5168\n\n\nSQLCipher\nSqlite \u52a0\u5bc6\u5de5\u5177\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/sqlcipher/sqlcipher\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://sqlcipher.net/sqlcipher-for-android/\n\n\nConceal\n\u5feb\u901f\u9ad8\u6548\u7684\u8fdb\u884c\u6587\u4ef6\u52a0\u5bc6\u89e3\u5bc6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/facebook/conceal\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/facebook/conceal#usage\n\n\nAndroid-PasscodeLock\n\u5e94\u7528\u9501\uff0c\u6bcf\u6b21\u542f\u52a8\u6216\u4ece\u4efb\u4f55 Activity \u542f\u52a8\u5e94\u7528\u90fd\u9700\u8981\u8f93\u5165\u56db\u4f4d\u6570\u5b57\u7684\u5bc6\u7801\u65b9\u53ef\u8fdb\u5165\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/wordpress-mobile/Android-PasscodeLock\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=org.wordpress.android\nAPP \u793a\u4f8b\uff1aWordpress Android\uff0c\u652f\u4ed8\u5b9d\uff0c\u6316\u8d22\n\n\nGlowPadBackport\n\u5c06 Android4.2 \u7684\u9501\u5c4f\u754c\u9762\u89e3\u9501\u6269\u5c55\u5230 Android1.6 \u53ca 1.6+\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/rock3r/GlowPadBackport\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=net.sebastianopoggi.samples.ui.GlowPadSample\n\u6548\u679c\u56fe\uff1a\n\n\nGlowPadView\nAndroid 4 \u9501\u5c4f\u754c\u9762\u89e3\u9501\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/nadavfima/GlowPadView\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid-InsecureBank\n\u5173\u4e8e Android \u4e0d\u5b89\u5168\u6027\u7684\u793a\u4f8b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/dineshshetty/Android-InsecureBankv2\n\n\n\u5341\u4e00\u3001\u63d2\u4ef6\u5316\n\u66f4\u591a\u89c1\uff1aAndroid \u63d2\u4ef6\u5316\u4f5c\u7528\u3001\u6982\u5ff5\u4ee5\u53ca\u4e0d\u9519\u7684\u8d44\u6599(\u5305\u62ec\u5f00\u6e90\u9879\u76ee)\u548c\u89e3\u51b3\u65b9\u6848\n\n\ndynamic-load-apk\nAndroid \u52a8\u6001\u52a0\u8f7d Apk\uff0c\u70ed\u90e8\u7f72\uff0c\u5229\u7528 ClassLoader \u4ee5\u53ca Activity \u4ee3\u7406\u7684\u65b9\u5f0f\u89e3\u51b3\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/singwhatiwanna/dynamic-load-apk\n\u539f\u7406\u5256\u6790\u6587\u6863\uff1a[dynamic-load-apk](https://a.codekk.com/detail/Android/FFish/DynamicLoadApk \u6e90\u7801\u89e3\u6790)\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://blog.csdn.net/singwhatiwanna/article/details/22597587\n\n\nAndroid Dynamic Loader\n\u70b9\u8bc4\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u548c\u4e0a\u9762\u4e0d\u540c\u7684\u662f\uff1a\u4ed6\u4e0d\u662f\u7528\u4ee3\u7406 Activity \u7684\u65b9\u5f0f\u5b9e\u73b0\u800c\u662f\u7528 Fragment \u4ee5\u53ca Schema \u7684\u65b9\u5f0f\u5b9e\u73b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mmin18/AndroidDynamicLoader\nDemo \u5730\u5740\uff1ahttps://github.com/mmin18/AndroidDynamicLoader/raw/master/host.apk\n\n\nxCombine\nAndroid App \u63d2\u4ef6\u5f0f\u63d2\u4ef6\u5f00\u53d1\uff0c\u63d2\u4ef6\u5fc5\u987b\u5148\u5b89\u88c5\uff0c\u66f4\u63a8\u8350\u770b\u4e0a\u9762\u4e24\u4e2a\u5f00\u6e90\u9879\u76ee\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/wyouflf/xCombine\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://my.oschina.net/u/1171837/blog/155377\n\n\nAndroid Plugin Framework\nAndroid \u63d2\u4ef6\u5f0f\u5f00\u53d1\uff0c\u5f00\u653e\u7684\u6e90\u7801\u76ee\u524d\u4e0d\u5b8c\u6574\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/umeng/apf\n\n\nAndroid OpenAtlas\nAndroid\u63d2\u4ef6\u6846\u67b6\uff0c\u57fa\u4e8eOSGI\uff0c\u975e\u4ee3\u7406\u65b9\u5f0f\uff0c\u7ec4\u4ef6\u9700\u8981\u5728\u5bbf\u4e3b\u4e2d\u58f0\u660e\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/bunnyblue/OpenAtlas\nDemo \u5730\u5740\uff1ahttps://github.com/bunnyblue/OpenAtlasExtension/blob/master/Dist/OpenAtlasLauncher.apk\n\n\nmultidex\n\u5b89\u88c5\u591a dex \u7684 classloader\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/casidiablo/multidex\n\n\nANR-WatchDog\nAndroid ANR \u76d1\u542c\uff0c\u901a\u8fc7\u76d1\u542c\u81ea\u5df1\u7684 UI Thread \u662f\u5426\u88ab\u6267\u884c\u786e\u5b9a\u662f\u5426\u53d1\u751f\u4e86 ANR\uff0c\u5e76\u53ef\u4ee5\u8bbe\u7f6e\u76f8\u5173\u4e8b\u4ef6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/SalomonBrys/ANR-WatchDog\n\n\n\u5341\u4e8c\u3001\u6587\u4ef6\n\u5bf9\u4e0d\u540c\u6587\u6863\u7c7b\u578b\u7684\u5904\u7406\uff0c\u5305\u62ec PDF\u3001Word\u3001EPub\u3001Html\u3001Zip \u7b49\n\n\npurePDF\n\u5141\u8bb8\u4ece\u4efb\u4f55\u8fd0\u884c\u7684 SWF \u6587\u4ef6\u8bfb\u53d6\u548c\u521b\u5efa PDF \u6587\u6863\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/sephiroth74/purePDF\n\n\nandroid-pdfview\n\u5feb\u901f\u89e3\u6790 pdf \u7684 view\uff0c\u9ed8\u8ba4\u652f\u6301\u624b\u52bf\u7f29\u653e\u548c\u76f8\u5173\u52a8\u753b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JoanZapata/android-pdfview\n\n\nOffice 365 SDK for Android Preview\n\u53ef\u652f\u6301 Microsoft SharePoint Lists, Microsoft SharePoint Files, Microsoft Exchange Calendar, Microsoft Exchange Contacts, Microsoft Exchange Mail\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/OfficeDev/Office-365-SDK-for-Android\n\n\nOpenSpritz-Android\nEPub \u9605\u8bfb\u5668\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/OnlyInAmerica/OpenSpritz-Android\n\n\njsoup\n\u4e00\u4e2a\u89e3\u6790 html \u7684 java \u5e93\uff0c\u53ef\u65b9\u4fbf\u7684\u63d0\u53d6\u548c\u64cd\u4f5c\u6570\u636e\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jhy/jsoup\n\u5b98\u7f51\u7f51\u5740\uff1ahttp://jsoup.org/\n\u4f5c\u7528\uff1a(1) \u4ece\u4e00\u4e2a url\u3001\u6587\u4ef6\u6216 string \u83b7\u5f97 html \u5e76\u89e3\u6790\n(2) \u5229\u7528 dom \u904d\u5386\u6216 css \u9009\u62e9\u5668\u67e5\u627e\u3001\u63d0\u53d6\u6570\u636e\n(3) \u64cd\u4f5c html \u5143\u7d20\n(4) \u6839\u636e\u767d\u540d\u5355\u53bb\u9664\u7528\u4e8e\u63d0\u4ea4\u7684\u975e\u6cd5\u6570\u636e\u9632\u6b62 xss \u653b\u51fb\n(5) \u8f93\u51fa\u6574\u9f50\u7684 html\n\n\nZIP\njava \u538b\u7f29\u548c\u89e3\u538b\u5e93\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/zeroturnaround/zt-zip\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/zeroturnaround/zt-zip#examples\n\u4f5c\u7528\uff1a(1) \u89e3\u538b\u548c\u538b\u7f29\uff0c\u5e76\u652f\u6301\u6587\u4ef6\u5939\u5185\u9012\u5f52\u64cd\u4f5c\n(2) \u652f\u6301\u5305\u542b\u548c\u6392\u9664\u67d0\u4e9b\u5143\u7d20\n(3) \u652f\u6301\u91cd\u547d\u540d\u5143\u7d20\n(4) \u652f\u6301\u904d\u5386 zip \u5305\u5185\u5bb9\n(5) \u6bd4\u8f83\u4e24\u4e2a zip \u5305\u7b49\u529f\u80fd\n\n\nImage File Selector\n\u8f7b\u91cf\u7ea7\u7684\u56fe\u7247\u6587\u4ef6\u9009\u62e9\u5668\uff0c\u7528\u7cfb\u7edfapi\u9009\u53d6\uff0c\u538b\u7f29\u548c\u88c1\u5207\u56fe\u7247\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u5f97\u8981\u6307\u5b9a\u5c3a\u5bf8\u7684\u56fe\u7247\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/sw926/ImageFileSelector\n\n\n\u5341\u4e09\u3001\u5176\u4ed6\n\n\nFragmentStack\n\u4e00\u4e2a\u5c01\u88c5\u4e86\u542f\u52a8\u6a21\u5f0f\u7684Fragment\u4fbf\u6377\u4f7f\u7528\u5e93,\u65b9\u4fbf\u6784\u5efa\u5355Activity+\u591aFragment\u8f7b\u91cf\u7ea7\u6846\u67b6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Mr-wangyong/FragmentStack\n\u6548\u679c\u56fe\uff1ahttps://github.com/Mr-wangyong/FragmentStack/blob/master/play.gif\nApp\u793a\u4f8b\uff1a\u5357\u74dc\u7535\u5f71\n\n\nCustomTabsHelper\n\u5feb\u901f\u96c6\u6210 CustomTabs \u7684\u5de5\u5177\u7c7b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/DreaminginCodeZH/CustomTabsHelper\n\n\nEffortlessPermissions\n\u57fa\u4e8e Google EasyPermissions \u8fdb\u884c\u6269\u5c55\u7684\u52a8\u6001\u6743\u9650\u5e93\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/DreaminginCodeZH/EffortlessPermissions\n\n\nSalvage view\n\u5e26 View \u7f13\u5b58\u7684 Viewpager PagerAdapter\uff0c\u5f88\u65b9\u4fbf\u4f7f\u7528\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JakeWharton/salvage\n\n\nAndroid Priority Job Queue\nAndroid \u540e\u53f0\u4efb\u52a1\u961f\u5217\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/path/android-priority-jobqueue\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/path/android-priority-jobqueue#getting-started\n\n\nCobub Razor\n\u5f00\u6e90\u7684 mobile \u884c\u4e3a\u5206\u6790\u7cfb\u7edf\uff0c\u5305\u62ec web \u7aef\u3001android \u7aef\uff0c\u652f\u6301 ios \u548c window phone\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/cobub/razor\nDemo \u5730\u5740\uff1ahttp://demo.cobub.com/razor\n\u5b98\u7f51\u7f51\u5740\uff1ahttp://dev.cobub.com/\n\n\nCountly\nAndroid \u79fb\u52a8\u7aef\u6570\u636e\u91c7\u96c6\u5206\u6790\u7cfb\u7edf\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Countly/countly-sdk-android\n\u5b98\u7f51\u7f51\u5740\uff1ahttps://count.ly/\n\n\naFileChooser\n\u6587\u4ef6\u9009\u62e9\u5668\uff0c\u53ef\u5185\u5d4c\u5230\u7a0b\u5e8f\u4e2d\uff0c\u800c\u65e0\u9700\u4f7f\u7528\u7cfb\u7edf\u6216\u4e09\u65b9\u6587\u4ef6\u9009\u62e9\u5668\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/iPaulPro/aFileChooser\n\n\nandroidpn\n\u57fa\u4e8e xmpp \u534f\u8bae\u7684\u6d88\u606f\u63a8\u9001\u89e3\u51b3\u65b9\u6848\uff0c\u5305\u62ec\u670d\u52a1\u5668\u7aef\u548c android \u7aef\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/dannytiehui/androidpn\n\n\nBolts\nAndroid \u7684\u5f02\u6b65\u7f16\u7a0b\u6a21\u5f0f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/BoltsFramework/Bolts-Android/\n\u4e0e AsyncTask \u6bd4\u8f83\uff1a(1) \u4f7f\u7528\u7684\u662f\u65e0\u5927\u5c0f\u9650\u5236\u7684\u7ebf\u7a0b\u6c60\n(2) \u4efb\u52a1\u53ef\u7ec4\u5408\u53ef\u7ea7\u8054\uff0c\u9632\u6b62\u4e86\u4ee3\u7801\u8026\u5408\n\n\nCastCompanionLibrary-android\n\u4f7f Android \u7a0b\u5e8f\u4e2d\u66f4\u5feb\u7684\u63a5\u5165 Google Cast\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/googlecast/CastCompanionLibrary-android\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://developers.google.com/cast/\n\n\nCastVideos-android\n\u4ece Android \u8bbe\u5907\u5206\u4eab Video \u901a\u8fc7 Google Cast\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/googlecast/CastVideos-android\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://developers.google.com/cast/\n\n\nUninstall_Statics\nAndroid \u5e94\u7528\u81ea\u8eab\u88ab\u5378\u8f7d\u76d1\u542c\u53ca\u6253\u5f00\u6d4f\u89c8\u5668\u7b49\u53cd\u9988\u529f\u80fd\u5b9e\u73b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/sevenler/Uninstall_Statics\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://www.cnblogs.com/zealotrouge/p/3157126.html http://www.cnblogs.com/zealotrouge/p/3159772.html\n\n\nMemento\n\u4fdd\u8bc1\u5728\u7cfb\u7edf\u914d\u7f6e\u6539\u53d8\u65f6\uff0cActivity \u4e2d\u7684\u67d0\u4e9b\u6570\u636e\u53ef\u4ee5\u7b80\u5355\u5b89\u5168\u7684\u4fdd\u6301\u4e0d\u53d8\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mttkay/memento\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/mttkay/memento#usage\n\n\nFreeFlow\n\u5e03\u5c40\u5f15\u64ce\uff0c\u66f4\u7b80\u5355\u7684\u521b\u5efa\u81ea\u5b9a\u4e49\u5e03\u5c40\uff0c\u5e76\u4e14\u5f53\u6570\u636e\u548c\u5e03\u5c40\u6539\u53d8\u65f6\u66f4\u7f8e\u89c2\u7684\u8fc7\u6e21\u52a8\u753b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Comcast/FreeFlow\nDemo \u5730\u5740\uff1ahttps://github.com/Comcast/FreeFlow/releases\n\n\nAndroid Gesture Detectors Framework\nAndroid \u624b\u52bf\u6846\u67b6\uff0c\u652f\u6301\u53cc\u6307\u65cb\u8f6c\u3001\u79fb\u52a8\u3001\u5e73\u79fb\u3001\u7f29\u653e\u7b49\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Almeros/android-gesture-detectors\n\n\nMapbox Android SDK\nAndroid Map \u7684\u66ff\u4ee3\u7248\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mapbox/mapbox-android-sdk\n\n\nActivity animation\nActivity \u8df3\u8f6c\u52a8\u753b\uff0c\u652f\u6301\u5404\u4e2a\u65b9\u5411\u6ce2\u6d6a\u7684\u6548\u679c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/flavienlaurent/activityanimation\n\u5728\u7ebf\u6f14\u793a\uff1ahttps://www.youtube.com/watch?v=-E0sc6w_Jck\n\n\nKryoNet\n\u901a\u8fc7 NIO \u63d0\u4f9b\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef TCP/UDP \u7f51\u7edc\u4f20\u8f93\u7684 Java \u5e93\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/EsotericSoftware/kryonet\n\n\nRebound\n\u4e00\u4e2a\u6a21\u4eff\u5f39\u7c27\u53cd\u5f39\u7684 Java \u5e93\uff0c\u53ef\u7528\u4e8e\u521b\u5efa\u52a8\u753b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/facebook/rebound\n\n\nAndroid Social Networks\n\u793e\u4ea4\u7f51\u7edc\u63a5\u5165\u7edf\u4e00\u7ba1\u7406\u5668\uff0c\u53ef\u65b9\u4fbf\u7684\u4ece Twitter, LinkedIn, Facebook, Google Plus \u767b\u9646\u3001\u83b7\u5f97\u4e2a\u4eba\u4fe1\u606f\u3001\u53d1\u9001\u6d88\u606f\u3001\u53d1\u9001\u4e13\u7bc7\u3001\u6dfb\u52a0\u6216\u5220\u9664\u597d\u53cb\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/antonkrasov/AndroidSocialNetworks\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.github.androidsocialnetworks.apidemos\n\n\nSmartAppUpdates\nAndroid App \u589e\u91cf\u5347\u7ea7\uff0c\u5305\u542b\u524d\u540e\u7aef\u65b9\u6848\u3001Demo\u3001\u4ee5\u53ca so \u5e93\uff0c\u53ef\u7528\u4e8e\u5546\u5e97\u6216\u5927\u4f53\u79ef App \u5dee\u5206\u5347\u7ea7\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/cundong/SmartAppUpdates\n\n\nMagnet\n\u521b\u5efa\u7c7b\u4f3c Facebook \u804a\u5929\u684c\u9762\u60ac\u6d6e\u7a97\u7684\u6548\u679c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/premnirmal/Magnet\n\n\nAcDisplay\n\u5c06 Android \u7684\u901a\u77e5\u90fd\u96c6\u4e2d\u5230\u9501\u5c4f\u663e\u793a\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/AChep/AcDisplay\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.achep.acdisplay\n\n\nQrCodeScan\nZXing \u548c ZBar \u7ed3\u5408\u7684\u4e8c\u7ef4\u7801\u626b\u63cf\u9879\u76ee\uff0c\u63d0\u9ad8\u4e86\u626b\u63cf\u6548\u7387\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/SkillCollege/QrCodeScan\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid-ScreenShot\n\u5b9e\u73b0 android \u7cfb\u7edf\u622a\u5c4f\u529f\u80fd\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Android-ScreenShot/AndroidScreenShotService\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://blog.csdn.net/buptgshengod/article/details/39155979\n\n\ncard.io SDK for Android\n\u4fe1\u7528\u5361\u626b\u63cf Android SDK\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/card-io/card.io-Android-SDK\nDemo \u9879\u76ee\uff1ahttps://github.com/card-io/card.io-Android-SDK/tree/master/SampleApp\n\n\nASNE\nTwitter, Facebook, Google Plus, LinkedIn, Instagram, Vkontakte, Odnoklassniki \u7684\u96c6\u6210\u5e93\uff0c\u5305\u62ec\u4ed6\u4eec\u7684\u5927\u591a\u6570\u529f\u80fd\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/gorbin/ASNE\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.gorbin.androidsocialnetworksextended.asne\n\n\nAndroid Signature Pad\nAndroid \u81ea\u5b9a\u4e49\u7684\u7b7e\u540d View\uff0c\u53ef\u81ea\u5b9a\u4e49\u7b14\u989c\u8272\u548c\u5927\u5c0f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/gcacace/android-signaturepad\nDemo \u9879\u76ee\uff1ahttps://github.com/gcacace/android-signaturepad/tree/master/SignaturePad-Example\n\n\nTeleport\nAndroid Wear \u6570\u636e\u540c\u6b65\u548c\u6d88\u606f\u4f20\u9001\u5e93\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/Mariuxtheone/Teleport\n\n\nDebugLog\n\u53ef\u4ee5\u5e2e\u4f60\u521b\u5efa\u66f4\u7b80\u5355\u548c\u66f4\u5bb9\u6613\u7406\u89e3\u7684\u8c03\u8bd5\u65e5\u5fd7\uff0c\u80fd\u591f\u53cb\u597d\u7684\u663e\u793a\u8c03\u8bd5\u4fe1\u606f\u6240\u5728\u7c7b\u548c\u51fd\u6570\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/MustafaFerhan/DebugLog\n\u6548\u679c\u56fe\uff1a\n\n\nLogger\n\u7b80\u5355\u3001\u7f8e\u89c2\u800c\u4e14\u5341\u5206\u5f3a\u5927\u7684 Android \u65e5\u5fd7\u5de5\u5177\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/orhanobut/logger\nDemo \u5730\u5740\uff1ahttps://github.com/orhanobut/logger/tree/master/app\n\u6548\u679c\u56fe\uff1a\n\n\njlog\n\u53ef\u4ee5\u7075\u6d3b\u914d\u7f6e\u7684\u65e5\u5fd7\u5de5\u5177\uff0c\u652f\u6301JSON\u6253\u5370\uff0c\u65e5\u5fd7\u4fdd\u5b58\u5230\u6307\u5b9a\u6587\u4ef6\uff0c\u65e5\u5fd7\u663e\u793a\u8c03\u7528\u4f4d\u7f6e\uff08\u6df7\u6dc6\u6a21\u5f0f\u4e0b\u4f9d\u7136\u6709\u6548\uff09\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JiongBull/jlog\nDemo \u5730\u5740\uff1aapk\u5730\u5740\n\u6548\u679c\u56fe\uff1a\n\n\nPhrase\nsquare \u7ec4\u5f00\u6e90\u5927\u725b\u5199\u7684\u5b57\u7b26\u4e32\u66ff\u6362\u7c7b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/square/phrase\n\n\nColorPhrase\n\u6a21\u4eff phrase \u5199\u7684\u5bf9\u5b57\u7b26\u4e32\u4e2a\u522b\u5b57\u7b26\u989c\u8272\u6539\u53d8\u7684\u7c7b\uff0c\u9ad8\u6548\u5f3a\u5927\uff01\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/THEONE10211024/ColorPhrase\n\u6548\u679c\u56fe\uff1a\n\n\nPinyinSearch\n\u4e00\u4e2a\u4e3a T9 \u641c\u7d22\u548c Qwerty \u641c\u7d22,\u63d0\u4f9b\u6570\u636e\u89e3\u6790\u4e0e\u5339\u914d\u7b49\u65b9\u6cd5\u7684\u62fc\u97f3\u641c\u7d22 java \u5e93\u3002\n\u9879\u76ee\u5730\u5740\uff1a https://github.com/handsomezhou/PinyinSearchLibrary\nDemo \u5730\u5740\uff1a ContactsSearch AppSearch\n\u6548\u679c\u56fe\uff1a\nAPP \u793a\u4f8b\uff1a \u901a\u8baf\u5f55\u5e94\u7528\uff0c\u5fae\u4fe1\u7535\u8bdd\u672c\n\n\nPrainView\nPaintView \u662f\u4e00\u4e2a\u753b\u56fe\u5de5\u5177:\n\u53ef\u76f4\u63a5\u4f7f\u7528\u8bbe\u5b9a\u6309\u94ae\u6765\u5b9e\u73b0\u5df2\u62e5\u6709\u7684\u65b9\u6cd5\uff0c\u4e14\u62d3\u5c55\u6027\u5f3a\n\u57fa\u7840\u529f\u80fd\uff1a\u66f4\u6362\u989c\u8272\u3001\u66f4\u6362\u6a61\u76ae\u3001\u4ee5\u53ca\u66f4\u6362\u6a61\u76ae\u548c\u7b14\u7684\u7c97\u7ec6\u3001\u6e05\u5c4f\u3001\u5012\u5165\u56fe\u7247\n\u7279\u6b8a\u529f\u80fd\uff1a\u4fdd\u5b58\u753b\u7b14\u8f68\u8ff9\u5e27\u52a8\u753b\u3001\u5e27\u52a8\u753b\u5bfc\u5165\u5bfc\u51fa\u3001ReDo\u548cUnDo\n\u9879\u76ee\u5730\u5740\uff1aPaintview\n\u6548\u679c\u56fe\uff1a\n\ndemo\u5730\u5740\uff1aapk\u5730\u5740\n\u539f\u7406\u89e3\u6790\uff1aPaintView \u7ed8\u56fe\u63a7\u4ef6\u89e3\u6790\n\n\nCodeView\nCodeView\u4ee3\u7801\u67e5\u770b\uff0f\u4fee\u6539\u5de5\u5177: \u57fa\u4e8eWebView\u5236\u4f5c\u7684\u4ee3\u7801\u7f16\u8f91\u5668,\u5b9e\u73b0\u4ee3\u7801\u9ad8\u4eae\uff0c\u6697\u8272\u4e3b\u9898\n\u9879\u76ee\u5730\u5740\uff1aCodeView\n\u6548\u679c\u56fe\uff1a\n\ndemo\u5730\u5740\uff1aapk\u5730\u5740\n\n\nExplorerView\n\u6587\u4ef6\u6d4f\u89c8\u5668\uff1a\u7ee7\u627f\u81eaListView\uff0c\u53ef\u62d3\u5c55\u6027\u5f3a\uff0c\u53ef\u8fdb\u884c\u6587\u4ef6\u7c7b\u578b\u5206\u6790\n\u9879\u76ee\u5730\u5740\uff1aCodeView\n\u6548\u679c\u56fe\uff1a\n\ndemo\u5730\u5740\uff1aapk\u5730\u5740\n\n\nReadView\n\u5c0f\u8bf4\u9605\u8bfb\u5668\uff0c\u652f\u6301\u6587\u5b57\u5b57\u4f53\u3001\u989c\u8272\u3001\u80cc\u666f\u3001\u8fdb\u5ea6\u7b49\u591a\u79cd\u8c03\u6574\uff0c\u652f\u6301\u4e00\u952e\u8bbe\u7f6e\u3002\n\u9879\u76ee\u5730\u5740\uff1aReadView\n\u6548\u679c\u56fe\uff1a\ndemo\u5730\u5740\uff1aapk\u5730\u5740\n\n\nMarkDownView\n\u652f\u6301MarkDown\u8bed\u6cd5\u7684\u6e32\u67d3\u5668,\u57fa\u4e8eWebView\u7684MarkDown\u6e32\u67d3\u5668,\u652f\u6301\u6807\u51c6\u5316\u7684MarkDown\u8bed\u6cd5,\n\u8c03\u7528\u63a5\u53e3\u548cCodeView\u4fdd\u6301\u4e00\u81f4\u4f7f\u7528\u7b80\u4fbf\n\u9879\u76ee\u5730\u5740\uff1aReadView\n\u6548\u679c\u56fe\uff1a\ndemo\u5730\u5740\uff1aapk\u5730\u5740\n\n\nVerTextView\u7ad6\u884c\u6392\u7248\u7684TextView:\n\u652f\u6301\u7ad6\u884c\u6392\u7248\uff0c\u6dfb\u52a0\u4e86\u4e0b\u5212\u7ebf\u529f\u80fd\uff0c\u5f00\u542f\u7b80\u4fbf\uff0c\u4e0b\u5212\u7ebf\u7c97\u7ec6\u3001\u989c\u8272\u3001\u95f4\u8ddd\u5747\u53ef\u81ea\u5b9a\u4e49\uff0c\n\u63a5\u53e3\u8c03\u7528\u65b9\u5f0f\u4e0eTextView\u76f8\u4f3c\uff0c\u4f7f\u7528\u7b80\u4fbf\u3002\n\u9879\u76ee\u5730\u5740\uff1aReadView\n\u6548\u679c\u56fe\uff1a\ndemo\u5730\u5740\uff1aapk\u5730\u5740\n\n\nGHDownload\u4e0b\u8f7d\u6846\u67b6\n\u652f\u6301\u5355\u7ebf\u7a0b\u548c\u591a\u7ebf\u7a0b\u65ad\u70b9\u4e0b\u8f7d\uff0c\u7b80\u5355\u6613\u7528\u3002\n\u9879\u76ee\u5730\u5740\uff1aGHDownload\n\n\n\u7b2c\u4e09\u90e8\u5206 \u4f18\u79c0\u9879\u76ee\n\u4e3b\u8981\u4ecb\u7ecd\u90a3\u4e9b Android \u8fd8\u4e0d\u9519\u7684\u5b8c\u6574\u9879\u76ee\uff0c\u76ee\u524d\u5305\u542b\u7684\u9879\u76ee\u4e3b\u8981\u4f9d\u636e\u662f\u9879\u76ee\u6709\u610f\u601d\u6216\u9879\u76ee\u5206\u5c42\u89c4\u8303\u6bd4\u8f83\u597d\u3002\n\u4e00\u3001\u7cfb\u7edf\u53ca\u5e73\u53f0\n\nLinux\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/torvalds/linux\nAndroid\n\u9879\u76ee\u5730\u5740\uff1ahttps://android.googlesource.com/\n\n\u4e8c\u3001\u9879\u76ee\n\n\nZXing\n\u4e8c\u7ef4\u7801\u626b\u63cf\u5de5\u5177\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/zxing/zxing \u6216 https://code.google.com/p/zxing/\nAPK \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.google.zxing.client.android\n\u5176\u4ed6\uff1a\u73b0\u5728\u5e02\u9762\u4e0a\u5f88\u591a\u5e94\u7528\u7684\u4e8c\u7ef4\u7801\u626b\u63cf\u529f\u80fd\u90fd\u662f\u4ece\u8fd9\u4e2a\u4fee\u6539\u800c\u6765\n\n\nphotup\n\u7f16\u8f91\u673a\u6279\u91cf\u4e0a\u4f20\u7167\u7247\u5230 facebook \u4e0a\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/chrisbanes/photup\nAPK \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=uk.co.senab.photup\n\u5176\u4ed6\uff1a\u4ee3\u7801\u5206\u5305\u5408\u7406\uff0c\u5f88\u68d2\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u9879\u76ee\u4f9d\u8d56\u7684\u5f00\u6e90\u9879\u76ee\u6bd4\u8f83\u591a\uff0c\u6bd4\u8f83\u96be\u7f16\u8bd1\n\n\ngithub-android\nGithub \u7684 Android \u5ba2\u6237\u7aef\u9879\u76ee\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/github/android\nAPK \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.github.mobile\n\n\nNotes\nMIUI \u4fbf\u7b7e\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/MiCode/Notes\nAPK \u5730\u5740\uff1ahttps://github.com/Trinea/TrineaDownload/blob/master/miui-note-demo.apk?raw=true\n\u5176\u4ed6\uff1a\u9879\u76ee\u5206\u5305\u6bd4\u8f83\u5408\u7406\uff0c\u76f8\u6bd4\u8f83 miui \u7684\u6587\u4ef6\u7ba1\u7406\u5668 https://github.com/MiCode/FileExplorer \u4ee3\u7801\u89c4\u8303\u8f83\u597d\u5f97\u591a\n\n\nweicuiyuan\n\u56db\u6b21\u5143-\u65b0\u6d6a\u5fae\u535a\u5ba2\u6237\u7aef\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/qii/weiciyuan\nAPK \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=org.qii.weiciyuan\n\n\nDouya\n\u8c46\u82bd\u2014\u2014Material Design \u7684\u8c46\u74e3\u5ba2\u6237\u7aef\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/DreaminginCodeZH/Douya\n\u6548\u679c\u56fe\uff1a\n\n\ngnucash-android\n\u4e00\u4e2a\u8bb0\u8d26\u7406\u8d22\u8f6f\u4ef6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/codinguser/gnucash-android\nAPK \u5730\u5740\uff1ahttp://play.google.com/store/apps/details?id=org.gnucash.android\n\n\nAntennaPod\n\u652f\u6301 rss \u8ba2\u9605\u3001\u97f3\u4e50\u8ba2\u9605\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/danieloeh/AntennaPod\nAPK \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=de.danoeh.antennapod\n\n\nChaseWhisplyProject\n\u6253\u9b3c\u6e38\u620f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/tvbarthel/ChaseWhisplyProject\nAPK \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=fr.tvbarthel.games.chasewhisply\n\n\nTweet Lanes\n\u529f\u80fd\u5b8c\u6574\u7684 Twitter \u5ba2\u6237\u7aef\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/chrislacy/TweetLanes\nAPK \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.tweetlanes.android\n\n\nFinancius\n\u7b80\u5355\u6613\u7528\u7684\u8bb0\u8d26\u7a0b\u5e8f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mvarnagiris/Financius\nAPK \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.code44.finance\n\n\ntodo.txt-android\ntodo.txt \u7684\u5b98\u65b9 Android \u5e94\u7528\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ginatrapani/todo.txt-android\nAPK \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.todotxt.todotxttouch\n\n\nsimpletask\n\u57fa\u4e8e todo.txt \u5b98\u65b9\u5e94\u7528\u7684\u53e6\u4e00\u4e2a\u5ba2\u6237\u7aef\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mpcjanssen/simpletask-android\nAPK \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=nl.mpcjanssen.todotxtholo\n\n\nMuzei Live Wallpaper\n\u5b9a\u65f6\u66f4\u6362\u684c\u9762\u7cbe\u7f8e\u58c1\u7eb8\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/romannurik/muzei\nAPK \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=net.nurik.roman.muzei\n\n\nScanbook\n\u626b\u63cf\u641c\u7d22\u67e5\u8be2\u56fe\u4e66\u4fe1\u606f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JayFang1993/ScanBook\nAPK \u5730\u5740\uff1ahttp://www.wandoujia.com/apps/com.scanbook\n\n\niosched\nThe Google I/O 2014 Android App\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/google/iosched\nAPK \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=com.google.samples.apps.iosched\n\n\nCoolClock\nAn Android clock\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/socoolby/CoolClock\nAPK \u5730\u5740\uff1ahttps://github.com/socoolby/CoolClock/blob/master/CoolClock.apk\n\u6548\u679c\u56fe\uff1a\n\n\n\n\u7b2c\u56db\u90e8\u5206 \u5f00\u53d1\u5de5\u5177\u53ca\u6d4b\u8bd5\u5de5\u5177\n\u4e3b\u8981\u4ecb\u7ecd\u548c Android \u5f00\u53d1\u5de5\u5177\u548c\u6d4b\u8bd5\u5de5\u5177\u76f8\u5173\u7684\u5f00\u6e90\u9879\u76ee\u3002\n\u4e00\u3001\u5f00\u53d1\u6548\u7387\u5de5\u5177\n\n\nParceler\n\u901a\u8fc7\u6ce8\u89e3\u53ca\u5de5\u5177\u7c7b\u81ea\u52a8\u5b8c\u6210\u5b9e\u4f53\u7c7b Parcelable \u53ca\u503c\u4f20\u9012\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/johncarl81/parceler\n\n\nJson2Java\n\u6839\u636e JSon \u6570\u636e\u81ea\u52a8\u751f\u6210\u5bf9\u5e94\u7684 Java \u5b9e\u4f53\u7c7b\uff0c\u8fd8\u652f\u6301 Parcel\u3001Gson Annotations \u5bf9\u5e94\u4ee3\u7801\u81ea\u52a8\u751f\u6210\u3002\u671f\u5f85\u540e\u7eed\u7684\u63d0\u53d6\u7236\u7c7b\u4ee5\u53ca\u591a url \u6784\u5efa\u6574\u4e2a\u5de5\u7a0b\u7684\u529f\u80fd\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jonfhancock/JsonToJava\n\u5728\u7ebf\u6f14\u793a\uff1ahttp://jsontojava.appspot.com/\n\n\nIntelliJ Plugin for Android Parcelable boilerplate code generation\nAndroid studio \u63d2\u4ef6\uff0c\u751f\u6210 Parcelable \u4ee3\u7801\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mcharmas/android-parcelable-intellij-plugin\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid Holo Colors IntelliJ Plugin\nAndroid studio \u63d2\u4ef6\uff0c\u751f\u6210 holo \u6837\u5f0f 9 patch \u56fe\u7247\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jeromevdl/android-holo-colors-idea-plugin\n\u6548\u679c\u56fe\uff1a\n\n\nAndroid Drawable Factory\n\u7528\u4e8e\u751f\u6210\u5404\u4e2a\u5206\u8fa8\u7387\u7684\u56fe\u7247\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/tizionario/AndroidDrawableFactory\n\u6548\u679c\u56fe\uff1a\n\n\nSelectorChapek for Android\nAndroid Studio \u63d2\u4ef6\uff0c\u53ef\u6839\u636e\u56fa\u5b9a\u6587\u4ef6\u540d\u683c\u5f0f\u8d44\u6e90\u81ea\u52a8\u751f\u6210 drawable selectors xml \u6587\u4ef6\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/inmite/android-selector-chapek\n\n\nAndroid Action Bar Style Generator\nAndroid ActionBar \u6837\u5f0f\u751f\u6210\u5668\uff0c\u53ef\u5728\u7ebf\u9009\u62e9 ActionBar \u6837\u5f0f\u81ea\u52a8\u751f\u6210\u6240\u9700\u8981\u7684\u56fe\u7247\u8d44\u6e90\u53ca xml \u6587\u4ef6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jgilfelt/android-actionbarstylegenerator\n\u5728\u7ebf\u6f14\u793a\uff1ahttp://jgilfelt.github.io/android-actionbarstylegenerator/\n\n\nButterKnifeZelezny\n\u7528\u4e8e\u5feb\u901f\u751f\u6210ButterKnifeView \u6ce8\u5165\u4ee3\u7801\u7684 Android Studio/IDEA \u63d2\u4ef6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/inmite/android-butterknife-zelezny\n\n\nRoboCoP\n\u5229\u7528 Gradle task \u6839\u636e\u56fa\u5b9a\u683c\u5f0f\u7684 json \u6587\u4ef6\u751f\u6210 ContentProvider\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mediarain/RoboCoP\n\n\nappiconsizes\n\u7528\u4e8e\u751f\u6210\u5404\u4e2a\u5206\u8fa8\u7387\u7684\u56fe\u7247\n\u9879\u76ee\u5730\u5740\uff1ahttp://www.appiconsizes.com/\n\n\nAndroidUtiles\n\u96c6\u5408\u4e86\u6240\u6709\u5e38\u7528\u7684\u5b89\u5353\u5de5\u5177\u7c7b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/l123456789jy/Lazy\n\n\nGradle Retrolambda Plugin\nRetrolambda\u662f\u5c06 Java8 \u7684 Lambdas \u5e94\u7528\u4e8e Java7 \u7684\u5de5\u5177\uff0c\u672c\u9879\u76ee\u662f Gradle \u63d2\u4ef6\uff0c\u901a\u8fc7 Retrolambda \u4ece\u800c\u4f7f Java \u6216 Android \u9879\u76ee\u7528 Java8 \u7684 Lambdas \u7f16\u5199\uff0c\u5c06\u7f16\u8bd1\u540e\u7684\u5b57\u8282\u7801\u8f6c\u6362\u4e3a Java6 \u548c 7 \u7684\u5b57\u8282\u7801\u4ece\u800c\u6b63\u5e38\u8fd0\u884c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/evant/gradle-retrolambda\n\n\nDagger IntelliJ Plugin\ndagger \u7684 intellij \u63d2\u4ef6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/square/dagger-intellij-plugin\n\n\nAndroid Gen Drawable Maven plugin\n\u5728\u7f16\u8bd1\u65f6\u6839\u636e SVG \u63cf\u8ff0\u6587\u4ef6\u751f\u6210\u4e0d\u540c\u5206\u8fa8\u7387\u7684 jpg\u3001png \u6216\u70b9 9 \u56fe\u7247\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/avianey/androidgendrawable-maven-plugin\n\n\nAndroid Asset Studio\n\u5404\u79cd Android \u8d44\u6e90\u81ea\u52a8\u751f\u6210\u5668\uff0c\u5305\u62ec\u542f\u52a8\u56fe\u6807\u3001ActionBar \u56fe\u6807\u3001\u901a\u77e5\u680f\u56fe\u6807\u3001\u70b9 9 \u7b49\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/romannurik/AndroidAssetStudio\n\u5728\u7ebf\u6f14\u793a\uff1ahttp://romannurik.github.io/AndroidAssetStudio/\n\n\njsonschema2pojo\n\u6839\u636e Json \u5185\u5bb9\u751f\u6210 java \u5bf9\u8c61\uff0c\u652f\u6301 jackjson \u548c gson\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/joelittlejohn/jsonschema2pojo\n\u5728\u7ebf\u6f14\u793a\uff1ahttp://www.jsonschema2pojo.org/\n\n\nGsonFormat\n\u6839\u636e JSONObject \u683c\u5f0f\u7684\u5b57\u7b26\u4e32,\u81ea\u52a8\u751f\u6210\u5b9e\u4f53\u7c7b\u53c2\u6570\u7684 Android Studio/IntelliJ IDEA \u63d2\u4ef6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/zzz40500/GsonFormat\n\u6548\u679c\u56fe\uff1a\n\n\nJson2Class\n\u6839\u636eJson\u751f\u6210Java\u6587\u4ef6\u7684Android Studio/IntelliJ IDEA \u63d2\u4ef6\uff0c\u5e76\u4e14\u53ef\u4ee5\u9009\u62e9Parcelable\u6216\u8005Serializable\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/anzewei/Json2Class\n\u6548\u679c\u56fe\uff1a\n\n\n9-Patch-Resizer\n\u81ea\u52a8\u751f\u6210 png \u53ca\u70b9 9 \u56fe\u7247\u7684\u4e0d\u540c\u5206\u8fa8\u7387\u7248\u672c\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/redwarp/9-Patch-Resizer\n\n\nAndroidLocalizationer\n\u53ef\u7528\u4e8e\u5c06\u9879\u76ee\u4e2d\u7684 string \u8d44\u6e90\u81ea\u52a8\u7ffb\u8bd1\u4e3a\u5176\u4ed6\u8bed\u8a00\u7684 Android Studio/IntelliJ IDEA \u63d2\u4ef6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/westlinkin/AndroidLocalizationer\n\n\nMaterial Palette\n\u4e00\u4e2a\u5c06\u73b0\u6709\u7684\u8272\u5f69\u65b9\u6848\u7ec4\u5408\u6210\u6750\u6599\u8bbe\u8ba1\u7684\u8c03\u8272\u677f\u65b9\u6848\uff0c\u63d0\u4f9b\u4e0b\u8f7d\u3002\u9009\u53d6\u4e24\u4e2a\u4e3b\u8981\u8272\u5f69\u540e\u4fbf\u53ef\u4ee5\u63d0\u4f9b\u4e0b\u8f7d\uff0c\u63d0\u4f9b\u4e0b\u8f7d\u7684\u683c\u5f0f\u53ef\u4ee5\u662f android \u7684\u8d44\u6e90 xml \u6587\u4ef6\uff0c\u4ee5\u8272\u5f69\u7684\u65b9\u5f0f\u63d0\u4f9b\uff0c\u4e5f\u53ef\u4ee5\u662f CSS\u3001SVG\u3001PNG \u7b49\u5e38\u89c1\u683c\u5f0f\u6587\u4ef6\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttp://www.materialpalette.com/\n\n\n\u4e8c\u3001\u5f00\u53d1\u81ea\u6d4b\u76f8\u5173\n\n\nQuality Tools for Android\nAndroid \u6d4b\u8bd5\u53ca\u81ea\u6d4b\u5de5\u5177\u96c6\u5408\u548c\u793a\u4f8b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/stephanenicolas/Quality-Tools-for-Android\n\n\nandroid-test-kit\nGoogle \u7684 Android \u6d4b\u8bd5\u5de5\u5177\n\u5305\u62ec GoogleInstrumentationTestRunner(\u589e\u5f3a\u7248\u7684 InstrumentationTestRunner)\u548c Espresso(\u7528\u4e8e\u5feb\u901f\u5199\u51fa\u53ef\u9760\u6d4b\u8bd5\u7528\u4f8b\u7684 API)\n\u9879\u76ee\u5730\u5740\uff1ahttps://code.google.com/p/android-test-kit/\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://code.google.com/p/android-test-kit/w/list\n\n\nrobolectric\n\u6d4b\u8bd5\u7528\u4f8b\u7f16\u5199\u6846\u67b6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/robolectric/robolectric\nDemo \u5730\u5740\uff1ahttps://github.com/robolectric/robolectricsample\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://robolectric.org/\n\u7279\u70b9\uff1a(1). \u4e0d\u9700\u8981\u6a21\u62df\u5668\u5728\u4e00\u822c JVM \u5c31\u53ef\u4ee5\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\n(2). \u80fd\u5b8c\u6210\u5728\u771f\u673a\u4e0a\u7684\u5927\u90e8\u5206\u6d4b\u8bd5\u5305\u62ec\u611f\u5e94\u5668\n\u5176\u4ed6\u7684\u6d4b\u8bd5\u7528\u4f8b\u53ca\u76f8\u5173\u6a21\u5757 Mock \u53ef\u89c1\uff1aandroid-mock, mockito, easy-mock\n\n\nAndroid FEST\n\u63d0\u4f9b\u4e00\u4e9b\u5217\u65b9\u4fbf\u7684\u65ad\u8a00\uff0c\u53ef\u7528\u4e8e\u63d0\u9ad8\u7f16\u5199 Android \u81ea\u6d4b\u4ee3\u7801\u6548\u7387\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/square/fest-android\n\n\nBoundBox\n\u53ef\u7528\u4e8e\u6d4b\u8bd5\u7c7b\u5404\u79cd\u8bbf\u95ee\u6743\u9650\u7684\u5c5e\u6027\u3001\u65b9\u6cd5\u3002\u5b9e\u9645\u662f\u901a\u8fc7 BoundBox \u8fd9\u4e2a annotation \u751f\u6210\u4e00\u4e2a\u5c5e\u6027\u548c\u65b9\u6cd5\u90fd\u662f public \u6743\u9650\u7684\u4e2d\u95f4\u7c7b\u5e76\u5bf9\u6b64\u7c7b\u8fdb\u884c\u6d4b\u8bd5\u5b8c\u6210\u7684\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/stephanenicolas/boundbox\n\n\nHugo\n\u7528\u4e8e\u6253\u5370\u51fd\u6570\u4fe1\u606f\u53ca\u6267\u884c\u65f6\u95f4\u7684\u5de5\u5177\uff0c\u4ec5\u5728 debug \u6a21\u5f0f\u751f\u6548\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JakeWharton/hugo\n\n\nscalpel\n\u5728\u5e94\u7528\u4e0b\u9762\u6dfb\u52a0\u4e00\u5c42\u7528\u4e8e\u754c\u9762\u8c03\u8bd5\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JakeWharton/scalpel\n\n\nAndroid Screenshot library\nAndroid \u622a\u56fe\u5de5\u5177\u7c7b\uff0c\u7528\u4e8e\u5728\u6301\u7eed\u96c6\u6210\u65f6\u622a\u56fe\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/rtyley/android-screenshot-lib\n\n\nsonar-android-lint-plugin\n\u5c06 android lint \u7684\u9519\u8bef\u5728 sonar \u4e2d\u5c55\u73b0\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/SonarCommunity/sonar-android\n\n\n\u4e09\u3001\u6d4b\u8bd5\u5de5\u5177\n\n\nSpoon\n\u53ef\u7528\u4e8e android \u4e0d\u540c\u673a\u578b\u8bbe\u5907\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u80fd\u5c06\u5e94\u7528 apk \u548c\u6d4b\u8bd5 apk \u8fd0\u884c\u5728\u4e0d\u540c\u673a\u5668\u4e0a\u5e76\u751f\u6210\u76f8\u5e94\u6d4b\u8bd5\u62a5\u544a\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/square/spoon\n\n\nTencent APT\nAPT \u662f\u817e\u8baf\u5f00\u6e90\u7684\u4e00\u4e2a Android \u5e73\u53f0\u9ad8\u6548\u6027\u80fd\u6d4b\u8bd5\u7ec4\u4ef6\uff0c\u63d0\u4f9b\u4e30\u5bcc\u5b9e\u7528\u7684\u529f\u80fd\uff0c\u9002\u7528\u4e8e\u5f00\u53d1\u81ea\u6d4b\u3001\u5b9a\u4f4d\u6027\u80fd\u74f6\u9888\uff1b\u6d4b\u8bd5\u4eba\u5458\u5b8c\u6210\u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5\u3001\u7ade\u54c1\u5bf9\u6bd4\u6d4b\u8bd5\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/stormzhang/APT\n\n\nEmmagee\n\u7f51\u6613\u5f00\u6e90\u7684\u6027\u80fd\u6d4b\u8bd5\u5de5\u5177\uff0c\u5305\u62ec CPU\u3001\u5185\u5b58\u3001\u7f51\u7edc\u6d41\u91cf\u3001\u542f\u52a8\u65f6\u95f4\u3001\u7535\u6c60\u72b6\u6001\u7b49\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/NetEase/Emmagee\n\n\nAndroid py-uiautomator\npy-uiautomator \u662f\u4e00\u4e2a\u5bf9 Android uiautomator \u7528 python \u8fdb\u884c\u5c01\u88c5\u7684\u6d4b\u8bd5\u6846\u67b6.\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/xiaocong/uiautomator\n\n\nAugmented Traffic Control\n\u6a21\u62df\u7f51\u7edc\u72b6\u51b5\uff0c\u5305\u62ec\u5e26\u5bbd\u3001\u65f6\u5ef6\u6296\u52a8\u3001\u4e22\u5305\u7387\u3001\u9519\u5305\u7387\u3001\u5305\u91cd\u6392\u7387\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/facebook/augmented-traffic-control\n\n\nstetho\n\u5f3a\u5927\u7684 Android Debug \u5de5\u5177\u3002\u652f\u6301\u7f51\u7edc\u8bf7\u6c42\u76d1\u63a7\u4ee5\u53ca\u6570\u636e\u5e93\u67e5\u770b\uff0c\u53ef\u4ee5\u548c Chrome DevTools \u7ed3\u5408\u6216\u8005\u547d\u4ee4\u884c\u6a21\u5f0f\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/facebook/stetho\n\n\n\u56db\u3001\u5f00\u53d1\u53ca\u7f16\u8bd1\u73af\u5883\n\n\nBuck\nfacebook \u5f00\u6e90\u7684 Android \u7f16\u8bd1\u5de5\u5177\uff0c\u6548\u7387\u662f ant \u7684\u4e24\u500d\u3002\u4e3b\u8981\u4f18\u70b9\u5728\u4e8e\uff1a\n(1) \u52a0\u5feb\u7f16\u8bd1\u901f\u5ea6\uff0c\u901a\u8fc7\u5e76\u884c\u5229\u7528\u591a\u6838 cpu \u548c\u8ddf\u8e2a\u4e0d\u53d8\u8d44\u6e90\u51cf\u5c11\u589e\u91cf\u7f16\u8bd1\u65f6\u95f4\u5b9e\u73b0\n(2) \u53ef\u4ee5\u5728\u7f16\u8bd1\u7cfb\u7edf\u4e2d\u751f\u6210\u7f16\u8bd1\u89c4\u5219\u800c\u65e0\u987b\u53e6\u5916\u7684\u7cfb\u7edf\u751f\u6210\u7f16\u8bd1\u89c4\u5219\u6587\u4ef6\n(3) \u7f16\u8bd1\u540c\u65f6\u53ef\u751f\u6210\u5355\u5143\u6d4b\u8bd5\u7ed3\u679c\n(4) \u65e2\u53ef\u7528\u4e8e IDE \u7f16\u8bd1\u4e5f\u53ef\u7528\u4e8e\u6301\u7eed\u96c6\u6210\u7f16\u8bd1\n(5) facebook \u6301\u7eed\u4f18\u5316\u4e2d\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/facebook/buck\n\n\nAndroid Maven Plugin\nAndroid Maven \u63d2\u4ef6\uff0c\u53ef\u7528\u4e8e\u5bf9 android \u4e09\u65b9\u4f9d\u8d56\u8fdb\u884c\u7ba1\u7406\u3002\u5728 J2EE \u5f00\u53d1\u4e2d\uff0cmaven \u662f\u975e\u5e38\u6210\u719f\u7684\u4f9d\u8d56\u5e93\u7ba1\u7406\u5de5\u5177\uff0c\u53ef\u7edf\u4e00\u7ba1\u7406\u4f9d\u8d56\u5e93\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jayway/maven-android-plugin\n\n\numeng-muti-channel-build-tool\n\u6e20\u9053\u6253\u5305\u5de5\u5177\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/umeng/umeng-muti-channel-build-tool\n\u53e6\u53ef\u53c2\u89c1 Google \u7684\u6784\u5efa\u7cfb\u7edf Gradle\uff1ahttp://tools.android.com/tech-docs/new-build-system/user-guide\n\n\nGenymotion\n\u76ee\u524d\u6700\u597d\u7528\u6700\u5feb\u7684 android \u6a21\u62df\u5668\n\u9879\u76ee\u5730\u5740\uff1ahttp://www.genymotion.com/\nAndroid studio \u96c6\u6210\u63a7\u4ef6\uff1a http://plugins.jetbrains.com/plugin/7269?pr=idea\nCyril Mottier \u63a8\u8350\uff1ahttp://cyrilmottier.com/2013/06/27/a-productive-android-development-environment/\n\n\ngradle-mvn-push\n\u65b9\u4fbf\u7684\u5c06 Gradle \u7684 Artifacts \u4e0a\u4f20\u5230 Maven \u4ed3\u5e93\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/chrisbanes/gradle-mvn-push\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/chrisbanes/gradle-mvn-push#usage\n\n\nAndroid Emulator Plugin for Jenkins\nAndroid \u6a21\u62df\u5668 jenkins \u63d2\u4ef6\uff0c\u7528\u4e8e Jenkins \u505a\u6301\u7eed\u96c6\u6210\u65f6\u8dd1\u6a21\u62df\u5668\u6d4b\u8bd5\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jenkinsci/android-emulator-plugin\n\n\nAndroid Maven Plugin\n\u7ba1\u7406\u5e94\u7528\u6240\u9700\u8981\u7684\u4f9d\u8d56\u5e93\u3002\u5305\u62ec\u7684\u6784\u5efa\u5de5\u5177\u6709 Maven\u3001Gradle\u3001ant\u3001sbt\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mosabua/maven-android-sdk-deployer\n\n\nSDK Manager Plugin\n\u4e0b\u8f7d\u548c\u7ba1\u7406 Android SDK \u7684 Gradle \u63d2\u4ef6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JakeWharton/sdk-manager-plugin\n\n\nGradle Protobuf Plugin\n\u5c06.proto \u6587\u4ef6\u8f6c\u6362\u6210 Java \u6587\u4ef6\u7684 gradle \u63d2\u4ef6\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/andrewkroh/gradle-protobuf-plugin\n\n\nChromeADB\nChrome \u7684 Adb \u63d2\u4ef6\uff0c\u5f53\u767b\u5f55\u540e\uff0c\u80fd\u770b\u5230\u6240\u6709\u8fde\u63a5\u7684\u8bbe\u5907\u5e76\u64cd\u4f5c\uff0c\u53ef\u4ee5\u770b\u5e94\u7528\u3001\u8fdb\u7a0b\u3001\u5185\u5b58\u53ca\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5\u7b49\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/importre/chromeadb\n\n\n\u4e94\u3001\u5176\u4ed6\n\n\nGT\nAPP\u7684\u968f\u8eab\u8c03\u8bd5\u5e73\u53f0\uff0c\u5b83\u662f\u76f4\u63a5\u8fd0\u884c\u5728\u624b\u673a\u4e0a\u7684\u201c\u96c6\u6210\u8c03\u8bd5\u73af\u5883\u201d(IDTE, Integrated Debug Environment)\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/TencentOpen/GT\n\u6587\u6863\u4ecb\u7ecd\uff1ahttp://gt.qq.com/docs.html\n\n\nViewServer\n\u5141\u8bb8 app \u8fd0\u884c\u5728\u4efb\u4f55\u624b\u673a\u4e0a\u90fd\u53ef\u4ee5\u7528 HierarchyViewer \u67e5\u770b\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/romainguy/ViewServer\n\n\nGridWichterle for Android\n\u5728\u6574\u4e2a\u7cfb\u7edf\u4e0a\u663e\u793a\u4e00\u4e2a grid\uff0c\u7528\u6765\u5e2e\u52a9\u67e5\u770b\u5e94\u7528\u5e03\u5c40\u53ca\u4f7f\u5f97\u5e03\u5c40\u66f4\u7f8e\u89c2\uff0c\u53ef\u8bbe\u7f6e grid \u7f51\u683c\u5927\u5c0f\u548c\u989c\u8272\uff0candroid \u63a8\u8350 48dp \u548c 8dp\uff0c\u53ef\u89c1 Android Design Guidelines \u2013 Metrics and Grids\uff0c\u6bd4\u8d77 hierarchyviewer \u76f8\u5dee\u751a\u8fdc\uff0c\u4e0d\u8fc7\u5076\u5c14\u53ef\u7528\u6765\u4f5c\u4e3a\u5e03\u5c40\u67e5\u770b\u5de5\u5177\u3002\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/inmite/android-grid-wichterle\nDemo \u5730\u5740\uff1ahttps://play.google.com/store/apps/details?id=eu.inmite.android.gridwichterle\n\n\nCatlog\n\u624b\u673a\u7aef log \u67e5\u770b\u5de5\u5177\uff0c\u652f\u6301\u4e0d\u540c\u989c\u8272\u663e\u793a\u3001\u5173\u952e\u5b57\u8fc7\u6ee4\u3001\u7ea7\u522b\u8fc7\u6ee4\u3001\u8fdb\u7a0b id \u8fc7\u6ee4\u3001\u5f55\u5236\u529f\u80fd\u7b49\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/nolanlawson/Catlog\n\u5728\u7ebf\u6f14\u793a\uff1ahttps://play.google.com/store/apps/details?id=com.nolanlawson.logcat\n\n\nPID Cat\n\u6839\u636e package \u67e5\u770b logcat \u65e5\u5fd7\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/JakeWharton/pidcat\n\n\nACRA\n\u5e94\u7528\u5d29\u6e83\u4fe1\u606f\u65e5\u5fd7\u4e0a\u62a5\u5230 GoogleDoc \u5de5\u5177\uff0c\u7f51\u9875\u7248\u5c55\u73b0\u7ed3\u679c\u4e09\u65b9\u5f00\u6e90\u5730\u5740 https://github.com/BenoitDuffez/crashreportsviewer\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/ACRA/acra\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/ACRA/acra/wiki/BasicSetup\n\n\nCrashlytics\n\u63d0\u4f9b\u4e30\u5bcc\u7684\u5e94\u7528\u5d29\u6e83\u4fe1\u606f\u65e5\u5fd7\u6536\u96c6\n\u8f7b\u91cf\u7ea7\uff0c\u4e30\u5bcc\uff0c\u53ef\u81ea\u5b9a\u4e49\u5e94\u7528\u5d29\u6e83\u4fe1\u606f\u6536\u96c6\u5668\uff0c\u9644\u6709\u90ae\u4ef6\u901a\u77e5\n\u9879\u76ee\u5730\u5740\uff1ahttp://www.crashlytics.com/\n\u96c6\u6210\u63d2\u4ef6\uff1aAndroid Studio, Eclipse and IntelliJ\n\n\nAndroid Resource Navigator\nchrome \u63d2\u4ef6\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u67e5\u770b github \u4e0a android \u6e90\u7801\u5de5\u7a0b\u7684 styles.xml \u548c themes.xml\u3002\u4e3b\u8981\u529f\u80fd\uff1a\n(1) \u5feb\u901f\u6253\u5f00 android styles.xml themes.xml\n(2) \u65b9\u4fbf\u5728\u8d44\u6e90\u95f4\u8df3\u8f6c\u3002styles.xml themes.xml \u6587\u4ef6\u4e2d\u8d44\u6e90\u94fe\u63a5\u8df3\u8f6c\uff0c\u53ef\u4ee5\u65b9\u4fbf\u8df3\u8f6c\u5230\u67d0\u4e2a\u8d44\u6e90\n(3) \u65b9\u4fbf\u67e5\u627e\u67d0\u4e2a style \u548c theme\u3002chrome \u5730\u5740\u680f\u8f93\u5165 arn+tab+\u641c\u7d22\u5185\u5bb9\u56de\u8f66\u5373\u53ef\n(4) \u81ea\u52a8\u4e0b\u8f7d\u4e0d\u540c\u5206\u8fa8\u7387\u4e0b\u7684 drawable\n(5) \u901a\u8fc7\u6620\u5c04\u67e5\u627e\u90a3\u4e9b\u4e0d\u662f\u6309\u7167\u56fa\u5b9a\u547d\u540d\u89c4\u5219\u547d\u540d\u7684 style \u548c theme\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/jgilfelt/android-resource-navigator\n\u5728\u7ebf\u6f14\u793a\uff1ahttps://chrome.google.com/webstore/detail/android-resource-navigato/agoomkionjjbejegcejiefodgbckeebo?hl=en&gl=GB\n\n\nandroid-resource-remover\n\u6839\u636e lint \u7684\u63d0\u793a\u5220\u9664\u9879\u76ee\u4e2d\u65e0\u7528\u7684\u8d44\u6e90\uff0c\u51cf\u5c11\u5305\u7684\u5927\u5c0f\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/KeepSafe/android-resource-remover\n\n\nTelescope\n\u901a\u8fc7\u624b\u52bf\u622a\u56fe\u4ee5\u7279\u5b9a\u4e3b\u9898\u53d1\u9001\u5230\u7279\u5b9a\u90ae\u7bb1\u5730\u5740\u62a5\u544a Bug\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/mattprecious/telescope\n\n\nComplete Android Fragment & Activity Lifecycle\n\u5b8c\u6574\u7684 Android Fragment/Activity \u751f\u547d\u5468\u671f\u56fe\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/xxv/android-lifecycle\n\n\nBugsnag Notifier for Android\n\u901a\u8fc7Thread.UncaughtExceptionHandler\u6355\u83b7\u5e94\u7528\u672a\u5904\u7406\u7684\u5f02\u5e38\u5d29\u6e83 Bug \u5e76\u7528 Notification \u5c55\u793a\u540c\u65f6\u4e0a\u4f20\u5230\u540e\u53f0\u670d\u52a1\u5668\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/bugsnag/bugsnag-android\n\u6587\u6863\u4ecb\u7ecd\uff1ahttps://github.com/bugsnag/bugsnag-android#installation--setup\n\n\nMaterial Design Icons\nGoogle Material Design \u89c4\u8303\u4e2d\u7684 Icon\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/google/material-design-icons\n\n\nscrollscreenshot\nAndroid \u6eda\u52a8\u5c4f\u5e55\u81ea\u52a8\u622a\u56fe jar \u5305\uff0c\u652f\u6301\u7eb5\u5411\u3001\u6a2a\u5411\u6eda\u52a8\u622a\u5c4f\u62fc\u63a5\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/PGSSoft/scrollscreenshot\n\u6548\u679c\u56fe\uff1a\n\n\ndroidicon\n1600+\u7684\u6d77\u91cf Icon\uff0c\u5305\u62ec 750+\u7684 Material Design icons\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/theDazzler/droidicon\n\n\nleakcanary\nAndroid \u5185\u5b58\u6cc4\u9732\u68c0\u6d4b\u5de5\u5177\uff0c\u96c6\u6210\u65b9\u4fbf\uff0c\u51fa\u73b0\u6cc4\u9732\u540e\u62a5\u544a\u76f4\u89c2\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/square/leakcanary\n\u6548\u679c\u56fe\uff1a\n\n\nCacheUtilsLibrary\n\u5c06\u4efb\u4f55Java Object\u7c7b\u578b\u7684\u6570\u636e\u5e8f\u5217\u5316\u540e\u5199\u5165\u7f13\u5b58\u6587\u4ef6\uff0c\u5c06\u6765\u4f7f\u7528\u65f6\u8bfb\u53d6\u7f13\u5b58\u6587\u4ef6\u5e76\u53cd\u5e8f\u5217\u5316\u6210\u5bf9\u5e94Java Object\u7684\u5e93\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/westlinkin/CacheUtilsLibrary\n\n\nBlockCanary\nBlockCanary\u662f\u4e00\u4e2aAndroid\u5e73\u53f0\u7684\u4e00\u4e2a\u975e\u4fb5\u5165\u5f0f\u7684\u6027\u80fd\u76d1\u63a7\u7ec4\u4ef6\uff0c\u5e94\u7528\u53ea\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u63d0\u4f9b\u4e00\u4e9b\u8be5\u7ec4\u4ef6\u9700\u8981\u7684\u4e0a\u4e0b\u6587\u73af\u5883\uff0c\u5c31\u53ef\u4ee5\u5728\u5e73\u65f6\u4f7f\u7528\u5e94\u7528\u7684\u65f6\u5019\u68c0\u6d4b\u4e3b\u7ebf\u7a0b\u4e0a\u7684\u5404\u79cd\u5361\u6162\u95ee\u9898\uff0c\u5e76\u901a\u8fc7\u7ec4\u4ef6\u63d0\u4f9b\u7684\u5404\u79cd\u4fe1\u606f\u5206\u6790\u51fa\u539f\u56e0\u5e76\u8fdb\u884c\u4fee\u590d\u3002\n\u9879\u76ee\u5730\u5740: https://github.com/moduth/blockcanary\n\n\n\u7b2c\u4e94\u90e8\u5206\n\u4e3b\u8981\u4ecb\u7ecd\u90a3\u4e9b\u4e50\u4e8e\u5206\u4eab\u5e76\u4e14\u6709\u4e00\u4e9b\u5f88\u4e0d\u9519\u7684\u5f00\u6e90\u9879\u76ee\u7684\u4e2a\u4eba\u548c\u7ec4\u7ec7\u3002Follow \u5927\u795e\uff0c\u6df1\u6316\u5927\u795e\u7684\u9879\u76ee\u548c following\uff0c\u4f60\u4f1a\u53d1\u73b0\u5f88\u591a\u3002\n\u4e00\u3001\u4e2a\u4eba\n\n\nJakeWharton \u00a0\n\u73b0\u5c31\u804c\u4e8e Google\uff0c\uff08\u66fe\u5c31\u804c\u4e8e Square\uff09\uff0c\u7edd\u5bf9\u725b\u903c\u7684\u5927\u795e\uff0c\u9879\u76ee\u4e3b\u8981\u96c6\u4e2d\u5728 Android \u7248\u672c\u517c\u5bb9\uff0cViewPager \u53ca\u5f00\u53d1\u5de5\u5177\u4e0a \u00a0\nGithub \u5730\u5740\uff1ahttps://github.com/JakeWharton\n\u4ee3\u8868\u4f5c\uff1aActionBarSherlock\uff0cAndroid-ViewPagerIndicator\uff0cNine Old Androids\uff0cSwipeToDismissNOA\uff0chugo\uff0cbutterknife\uff0cAndroid-DirectionalViewPager, scalpel\npidcat \u53e6\u5916\u5bf9 square \u53ca\u5176\u4ed6\u5f00\u6e90\u9879\u76ee\u6709\u5f88\u591a\u8d21\u732e\n\u4e3b\u9875\uff1ahttp://jakewharton.com/\n\n\nChris Banes\nGithub \u5730\u5740\uff1ahttps://github.com/chrisbanes\n\u4ee3\u8868\u4f5c\uff1aActionBar-PullToRefresh\uff0cPhotoView\uff0cAndroid-BitmapCache\uff0cAndroid-PullToRefresh\n\u4e3b\u9875\uff1ahttp://chris.banes.me/\n\n\nKoushik Dutta\n\u5c31\u804c\u4e8e ClockworkMod\nGithub \u5730\u5740\uff1ahttps://github.com/koush\n\u4ee3\u8868\u4f5c\uff1aSuperuser\uff0cAndroidAsync\uff0cUrlImageViewHelper\uff0cion, \u53e6\u5916\u5bf9 https://github.com/CyanogenMod \u7684\u5f00\u6e90\u9879\u76ee\u6709\u5f88\u591a\u8d21\u732e\n\u4e3b\u9875\uff1ahttp://koush.com/\n\n\nSimon Vig\nGithub \u5730\u5740\uff1ahttps://github.com/SimonVT\n\u4ee3\u8868\u4f5c\uff1aandroid-menudrawer\uff0cMessageBar\n\u4e3b\u9875\uff1ahttp://simonvt.net/\n\n\nManuel Peinado\nGithub \u5730\u5740\uff1ahttps://github.com/ManuelPeinado\n\u4ee3\u8868\u4f5c\uff1aFadingActionBar\uff0cGlassActionBar\uff0cRefreshActionItem\uff0cQuickReturnHeader\n\n\nEmil Sj?lander\nGithub \u5730\u5740\uff1ahttps://github.com/emilsjolander\n\u4ee3\u8868\u4f5c\uff1aStickyListHeaders\uff0csprinkles\uff0candroid-FlipView\n\u4e3b\u9875\uff1ahttp://emilsjolander.se/\n\n\ngreenrobot\nGithub \u5730\u5740\uff1ahttps://github.com/greenrobot\n\u4ee3\u8868\u4f5c\uff1agreenDAO\uff0cEventBus\n\u4e3b\u9875\uff1ahttp://greenrobot.de/\n\n\nJeff Gilfelt\nGithub \u5730\u5740\uff1ahttps://github.com/jgilfelt\n\u4ee3\u8868\u4f5c\uff1aandroid-mapviewballoons\uff0candroid-viewbadger\uff0candroid-actionbarstylegenerator\uff0candroid-sqlite-asset-helper\n\u4e3b\u9875\uff1ahttp://jeffgilfelt.com\n\n\nRomain Guy\nAndroid team \u6210\u5458(2013.10 \u5df2\u79bb\u5f00 Android team\uff0c\u4ecd\u5728 Google)\nGithub \u5730\u5740\uff1ahttps://github.com/romainguy\n\u4ee3\u8868\u4f5c\uff1aViewServer\n\u4e3b\u9875\uff1ahttp://www.curious-creature.org/category/android/\n\u500b\u4eba\u651d\u5f71\u4f5c\u54c1\uff1ahttp://www.flickr.com/photos/romainguy\n\n\nsephiroth74\n\u5c31\u804c\u4e8e Aviary.com\nGithub \u5730\u5740\uff1ahttps://github.com/sephiroth74\n\u4ee3\u8868\u4f5c\uff1aImageViewZoom\uff0cHorizontalVariableListView\uff0cAndroidWheel\uff0cpurePDF\n\u4e3b\u9875\uff1ahttp://www.sephiroth.it/\n\n\nCyril Mottier\nGoogle \u5f00\u53d1\u8005\u4e13\u5bb6\u8ba4\u8bc1\uff0c\u53d1\u5e03\u4e00\u4e9b Android \u6280\u5de7\u53ca\u6587\u7ae0\nGithub \u5730\u5740\uff1ahttps://github.com/cyrilmottier\n\u4ee3\u8868\u4f5c\uff1aGreenDroid\uff0cPolaris\n\u4e3b\u9875\uff1ahttp://cyrilmottier.com/\n\n\n\u4e8c\u3001\u7ec4\u7ec7\n\n\nSquare\n\u6709\u6001\u5ea6\u6709\u826f\u5fc3\u7684\u4f01\u4e1a\uff0c\u5f88\u591a\u4e0d\u9519\u7684\u5206\u4eab\nGithub \u5730\u5740\uff1ahttps://github.com/square\n\u4ee3\u8868\u4f5c\uff1aokhttp\u3001fest-android\uff0candroid-times-square\u3001picasso\u3001dagger\u3001spoon \u7b49\u7b49\n\u4e3b\u9875\uff1ahttp://square.github.io/\n\n\nInmite s.r.o.\nGithub \u5730\u5740\uff1ahttps://github.com/inmite\n\u4ee3\u8868\u4f5c\uff1aandroid-styled-dialogs\uff0candroid-grid-wichterle\uff0candroid-selector-chapek\n\u4e3b\u9875\uff1ahttp://www.inmite.eu/\n\n\n\u4e09\u3001\u535a\u5ba2\n\u90e8\u5206\u56fd\u5916\u8457\u540d Android \u5f00\u53d1\u8005\u4fe1\u606f\nLicense\nCopyright 2014 [trinea.cn](https://www.trinea.cn/)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n"}, {"repo": "PhilJay/MPAndroidChart", "language": "Java", "readme": "\n\n\n\n\n\n\n\u26a1\ufe0f A powerful & easy to use chart library for Android \u26a1\ufe0f\nCharts is the iOS version of this library\nTable of Contents\n\nQuick Start\n\nGradle\nMaven\n\n\nDocumentation\nExamples\nQuestions\nDonate\nSocial Media\nMore Examples\nLicense\nCreators\n\nRealtime Graphing Solution | SciChart\n\n\nMPAndroidChart is free software, as a result dynamic & realtime data is not officially supported. If you are looking for an enterprise-grade chart solution with extreme realtime performance and tech support, we recommend\nSciChart Android.\n\nAll MPAndroidChart users are entitled to a special discount of 5% off the SciChart store, using the following discount code: MPANDROIDCHART\n\nBi-Weekly Coding Newsletter\nSign up for my coding newsletter to get quick updates on Kotlin and Android development related topics.\nQuick Start \ud83d\udcc8\nAdd the library to your Android project, then check out the examples below!\nGradle Setup\nrepositories {\n    maven { url 'https://jitpack.io' }\n}\n\ndependencies {\n    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'\n}\nMaven Setup\n<!-- <repositories> section of pom.xml -->\n<repository>\n    <id>jitpack.io</id>\n   <url>https://jitpack.io</url>\n</repository>\n\n<!-- <dependencies> section of pom.xml -->\n<dependency>\n    <groupId>com.github.PhilJay</groupId>\n    <artifactId>MPAndroidChart</artifactId>\n    <version>v3.1.0</version>\n</dependency>\n\nDocumentation \ud83d\udcd4\nSee the documentation for examples and general use of MPAndroidChart.\nSee the javadocs for more advanced documentation.\n\nExamples \ud83d\udc40\nDownload the MPAndroidChart Example App or look at the source code.\n\n\nQuestions & Issues \ud83e\udd14\nThis repository's issue tracker is only for bugs and feature requests. The maintainers ask that you refrain from asking questions about how to use MPAndroidChart through the issue tracker.\nPlease read the documentation first, then ask all your questions on stackoverflow.com for the fastest answer.\n\nDonations \u2764\ufe0f\nThis project needs you! If you would like to support this project's further development, the creator of this project or the continuous maintenance of this project, feel free to donate. Your donation is highly appreciated (and I love food, coffee and beer). Thank you!\nMy Bitcoin Wallet (Bitcoin only)\n1G8G6tqQ3oh38BvDH3xq8o6gGVMvBTkcUg\nMy Ethereum Wallet (Ethereum only)\n0x04ef098bf9f91871391363e3caf791afa3adc39b\nLightning Network (tippin.me)\nPayPal\n\nDonate 5 $: Thank's for creating this project, here's a coffee (or some beer) for you!\nDonate 10 $: Wow, I am stunned. Let me take you to the movies!\nDonate 15 $: I really appreciate your work, let's grab some lunch!\nDonate 25 $: That's some awesome stuff you did right there, dinner is on me!\nOr you can also choose what you want to donate, all donations are awesome!\n\n\nSocial Media \ud83d\udd25\nIf you like this library, please tell others about it \ud83d\udc95 \ud83d\udc95\n\n\n\nYou can follow me on Twitter @PhilippJahoda or sign up for my coding newsletter.\n\nMore Examples \ud83d\udc4d\n\nLineChart (with legend, simple design)\n\n\nLineChart (with legend, simple design)\n\n\nLineChart (cubic lines)\n\n\nLineChart (gradient fill)\n\n\nBarChart (with legend, simple design)\n\n\nBarChart (grouped DataSets)\n\n\nHorizontal-BarChart\n\n\nCombined-Chart (bar- and linechart in this case)\n\n\nPieChart (with selection, ...)\n\n\nScatterChart (with squares, triangles, circles, ... and more)\n\n\nCandleStickChart (for financial data)\n\n\nBubbleChart (area covered by bubbles indicates the yValue)\n\n\nRadarChart (spider web chart)\n\n\nLicense \ud83d\udcc4\nCopyright 2019 Philipp Jahoda\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nSpecial Thanks \u2764\ufe0f\nThese people rock!\n\ndanielgindi - Daniel Gindi\nmikegr - Michael Greifeneder\ntony - Tony\nalmic - Mick A.\njitpack.io - JitPack.io\n\n\n"}, {"repo": "tiimgreen/github-cheat-sheet", "language": "None", "readme": "\nGitHub Cheat Sheet \nA collection of cool hidden and not so hidden features of Git and GitHub. This cheat sheet was inspired by Zach Holman's Git and GitHub Secrets talk at Aloha Ruby Conference 2012 (slides) and his More Git and GitHub Secrets talk at WDCNZ 2013 (slides).\nShortlink: http://git.io/sheet\nRead this in other languages: English, \ud55c\uad6d\uc5b4, \u65e5\u672c\u8a9e, \u7b80\u4f53\u4e2d\u6587, \u6b63\u9ad4\u4e2d\u6587.\nTable of Contents\n\nGitHub\n\nIgnore Whitespace\nAdjust Tab Space\nCommit History by Author\nCloning a Repository\nBranch\n\nCompare all Branches to Another Branch\nComparing Branches\nCompare Branches across Forked Repositories\n\n\nGists\nGit.io\nKeyboard Shortcuts\nLine Highlighting in Repositories\nClosing Issues via Commit Messages\nCross-Link Issues\nLocking Conversations\nCI Status on Pull Requests\nFilters\nSyntax Highlighting in Markdown Files\nEmojis\nImages/GIFs\n\nEmbedding Images in GitHub Wiki\n\n\nQuick Quoting\nPasting Clipboard Image to Comments\nQuick Licensing\nTask Lists\n\nTask Lists in Markdown Documents\n\n\nRelative Links\nMetadata and Plugin Support for GitHub Pages\nViewing YAML Metadata in your Documents\nRendering Tabular Data\nRendering PDF\nRevert a Pull Request\nDiffs\n\nRendered Prose Diffs\nDiffable Maps\nExpanding Context in Diffs\nDiff or Patch of Pull Request\nRendering and diffing images\n\n\nHub\nContribution Guidelines\n\nCONTRIBUTING file\nISSUE_TEMPLATE file\nPULL_REQUEST_TEMPLATE file\n\n\nOcticons\nGitHub Student Developer Pack\nGitHub Resources\n\nGitHub Talks\n\n\nSSH keys\nRepository Templates\n\n\nGit\n\nRemove All Deleted Files from the Working Tree\nPrevious Branch\nStripspace\nChecking out Pull Requests\nEmpty Commits\nStyled Git Status\nStyled Git Log\nGit Query\nGit Grep\nMerged Branches\nFixup and Autosquash\nWeb Server for Browsing Local Repositories\nGit Configurations\n\nAliases\nAuto-Correct\nColor\n\n\nGit Resources\n\nGit Books\nGit Videos\nGit Articles\n\n\n\n\n\nGitHub\nIgnore Whitespace\nAdding ?w=1 to any diff URL will remove any changes only in whitespace, enabling you to see only the code that has changed.\n\nRead more about GitHub secrets.\nAdjust Tab Space\nAdding ?ts=4 to a diff or file URL will display tab characters as 4 spaces wide instead of the default 8. The number after ts can be adjusted to suit your preference. This does not work on Gists, or raw file views, but a Chrome extension can automate this.\nHere is a Go source file before adding ?ts=4:\n\n...and this is after adding ?ts=4:\n\nCommit History by Author\nTo view all commits on a repo by author add ?author={user} to the URL.\nhttps://github.com/rails/rails/commits/master?author=dhh\n\n\nRead more about the differences between commits views.\nCloning a Repository\nWhen cloning a repository the .git can be left off the end.\n$ git clone https://github.com/tiimgreen/github-cheat-sheet\nRead more about the Git clone command.\nBranch\nCompare all Branches to Another Branch\nIf you go to the repo's Branches page, next to the Commits button:\nhttps://github.com/{user}/{repo}/branches\n\n... you would see a list of all branches which are not merged into the main branch.\nFrom here you can access the compare page or delete a branch with a click of a button.\n\nComparing Branches\nTo use GitHub to compare branches, change the URL to look like this:\nhttps://github.com/{user}/{repo}/compare/{range}\n\nwhere {range} = master...4-1-stable\nFor example:\nhttps://github.com/rails/rails/compare/master...4-1-stable\n\n\n{range} can be changed to things like:\nhttps://github.com/rails/rails/compare/master@{1.day.ago}...master\nhttps://github.com/rails/rails/compare/master@{2014-10-04}...master\n\nHere, dates are in the format YYYY-MM-DD\n\nBranches can also be compared in diff and patch views:\nhttps://github.com/rails/rails/compare/master...4-1-stable.diff\nhttps://github.com/rails/rails/compare/master...4-1-stable.patch\n\nRead more about comparing commits across time.\nCompare Branches across Forked Repositories\nTo use GitHub to compare branches across forked repositories, change the URL to look like this:\nhttps://github.com/{user}/{repo}/compare/{foreign-user}:{branch}...{own-branch}\n\nFor example:\nhttps://github.com/rails/rails/compare/byroot:master...master\n\n\nGists\nGists are an easy way to work with small bits of code without creating a fully fledged repository.\n\nAdd .pibb to the end of any Gist URL (like this) in order to get the HTML-only version suitable for embedding in any other site.\nGists can be treated as a repository so they can be cloned like any other:\n$ git clone https://gist.github.com/tiimgreen/10545817\n\nThis means you also can modify and push updates to Gists:\n$ git commit\n$ git push\nUsername for 'https://gist.github.com':\nPassword for 'https://tiimgreen@gist.github.com':\nHowever, Gists do not support directories. All files need to be added to the repository root.\nRead more about creating Gists.\nGit.io\nGit.io is a simple URL shortener for GitHub.\n\nYou can also use it via pure HTTP using Curl:\n$ curl -i http://git.io -F \"url=https://github.com/...\"\nHTTP/1.1 201 Created\nLocation: http://git.io/abc123\n\n$ curl -i http://git.io/abc123\nHTTP/1.1 302 Found\nLocation: https://github.com/...\nRead more about Git.io.\nKeyboard Shortcuts\nWhen on a repository page, keyboard shortcuts allow you to navigate easily.\n\nPressing t will bring up a file explorer.\nPressing w will bring up the branch selector.\nPressing s will focus the search field for the current repository. Pressing Backspace to delete the \u201cThis repository\u201d pill changes the field to search all of GitHub.\nPressing l will edit labels on existing Issues.\nPressing y when looking at a file (e.g., https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.md) will change your URL to one which, in effect, freezes the page you are looking at. If this code changes, you will still be able to see what you saw at that current time.\n\nTo see all of the shortcuts for the current page press ?:\n\nRead more about search syntax you can use.\nLine Highlighting in Repositories\nEither adding, e.g., #L52 to the end of a code file URL or simply clicking the line number will highlight that line number.\nIt also works with ranges, e.g., #L53-L60, to select ranges, hold shift and click two lines:\nhttps://github.com/rails/rails/blob/master/activemodel/lib/active_model.rb#L53-L60\n\n\nClosing Issues via Commit Messages\nIf a particular commit fixes an issue, any of the keywords fix/fixes/fixed, close/closes/closed or resolve/resolves/resolved, followed by the issue number, will close the issue once it is committed to the repository's default branch.\n$ git commit -m \"Fix screwup, fixes #12\"\nThis closes the issue and references the closing commit.\n\nRead more about closing Issues via commit messages.\nCross-Link Issues\nIf you want to link to another issue in the same repository, simply type hash # then the issue number, and it will be auto-linked.\nTo link to an issue in another repository, {user}/{repo}#ISSUE_NUMBER, e.g., tiimgreen/toc#12.\n\nLocking Conversations\nPull Requests and Issues can now be locked by owners or collaborators of the repo.\n\nThis means that users who are not collaborators on the project will no longer be able to comment.\n\nRead more about locking conversations.\nCI Status on Pull Requests\nIf set up correctly, every time you receive a Pull Request, Travis CI will build that Pull Request just like it would every time you make a new commit. Read more about how to get started with Travis CI.\n\nRead more about the commit status API.\nFilters\nBoth issues and pull requests allow filtering in the user interface.\nFor the Rails repo: https://github.com/rails/rails/issues, the following filter is built by selecting the label \"activerecord\":\nis:issue label:activerecord\nBut, you can also find all issues that are NOT labeled activerecord:\nis:issue -label:activerecord\nAdditionally, this also works for pull requests:\nis:pr -label:activerecord\nGithub has tabs for displaying open or closed issues and pull requests but you\ncan also see merged pull requests.  Just put the following in the filter:\nis:merged\nRead more about searching issues.\nFinally, github now allows you to filter by the Status API's status.\nPull requests with only successful statuses:\nstatus:success\nRead more about searching on the Status API.\nSyntax Highlighting in Markdown Files\nFor example, to syntax highlight Ruby code in your Markdown files write:\n```ruby\nrequire 'tabbit'\ntable = Tabbit.new('Name', 'Email')\ntable.add_row('Tim Green', 'tiimgreen@gmail.com')\nputs table.to_s\n```\n\nThis will produce:\nrequire 'tabbit'\ntable = Tabbit.new('Name', 'Email')\ntable.add_row('Tim Green', 'tiimgreen@gmail.com')\nputs table.to_s\nGitHub uses Linguist to perform language detection and syntax highlighting. You can find out which keywords are valid by perusing the languages YAML file.\nRead more about GitHub Flavored Markdown.\nEmojis\nEmojis can be added to Pull Requests, Issues, commit messages, repository descriptions, etc. using :name_of_emoji:.\nThe full list of supported Emojis on GitHub can be found at emoji-cheat-sheet.com or scotch-io/All-Github-Emoji-Icons.\nA handy emoji search engine can be found at emoji.muan.co.\nThe top 5 used Emojis on GitHub are:\n\n:shipit:\n:sparkles:\n:-1:\n:+1:\n:clap:\n\nImages/GIFs\nImages and GIFs can be added to comments, READMEs etc.:\n![Alt Text](http://www.sheawong.com/wp-content/uploads/2013/08/keephatin.gif)\n\nRaw images from the repo can be used by calling them directly.:\n![Alt Text](https://github.com/{user}/{repo}/raw/master/path/to/image.gif)\n\n\nAll images are cached on GitHub, so if your host goes down, the image will remain available.\nEmbedding Images in GitHub Wiki\nThere are multiple ways of embedding images in Wiki pages. There's the standard Markdown syntax (shown above). But there's also a syntax that allows things like specifying the height or width of the image:\n[[ http://www.sheawong.com/wp-content/uploads/2013/08/keephatin.gif | height = 100px ]]\nWhich produces:\n\nQuick Quoting\nWhen on a comment thread and you want to quote something someone previously said, highlight the text and press r, this will copy it into your text box in the block-quote format.\n\nRead more about quick quoting.\nPasting Clipboard Image to Comments\n(Works on Chrome browsers only)\nAfter taking a screenshot and adding it to the clipboard (mac: cmd-ctrl-shift-4), you can simply paste (cmd-v / ctrl-v) the image into the comment section and it will be auto-uploaded to github.\n\nRead more about issue attachments.\nQuick Licensing\nWhen creating a repository, GitHub gives you the option of adding in a pre-made license:\n\nYou can also add them to existing repositories by creating a new file through the web interface. When the name LICENSE is typed in you will get an option to use a template:\n\nAlso works for .gitignore.\nRead more about open source licensing.\nTask Lists\nIn Issues and Pull requests check boxes can be added with the following syntax (notice the space):\n- [ ] Be awesome\n- [ ] Prepare dinner\n  - [ ] Research recipe\n  - [ ] Buy ingredients\n  - [ ] Cook recipe\n- [ ] Sleep\n\n\nWhen they are clicked, they will be updated in the pure Markdown:\n- [x] Be awesome\n- [ ] Prepare dinner\n  - [x] Research recipe\n  - [x] Buy ingredients\n  - [ ] Cook recipe\n- [ ] Sleep\n\nRead more about task lists.\nTask Lists in Markdown Documents\nIn full Markdown documents read-only checklists can now be added using the following syntax:\n- [ ] Mercury\n- [x] Venus\n- [x] Earth\n  - [x] Moon\n- [x] Mars\n  - [ ] Deimos\n  - [ ] Phobos\n\n\n Mercury\n Venus\n Earth\n\n Moon\n\n\n Mars\n\n Deimos\n Phobos\n\n\n\nRead more about task lists in markdown documents.\nRelative Links\nRelative links are recommended in your Markdown files when linking to internal content.\n[Link to a header](#awesome-section)\n[Link to a file](docs/readme)\nAbsolute links have to be updated whenever the URL changes (e.g., repository renamed, username changed, project forked). Using relative links makes your documentation easily stand on its own.\nRead more about relative links.\nMetadata and Plugin Support for GitHub Pages\nWithin Jekyll pages and posts, repository information is available within the site.github namespace, and can be displayed, for example, using {{ site.github.project_title }}.\nThe Jemoji and jekyll-mentions plugins enable emoji and @mentions in your Jekyll posts and pages to work just like you'd expect when interacting with a repository on GitHub.com.\nRead more about repository metadata and plugin support for GitHub Pages.\nViewing YAML Metadata in your Documents\nMany blogging websites, like Jekyll with GitHub Pages, depend on some YAML-formatted metadata at the beginning of your post. GitHub will render this metadata as a horizontal table, for easier reading\n\nRead more about viewing YAML metadata in your documents.\nRendering Tabular Data\nGitHub supports rendering tabular data in the form of .csv (comma-separated) and .tsv (tab-separated) files.\n\nRead more about rendering tabular data.\nRendering PDF\nGitHub supports rendering PDF:\n\nRead more about rendering PDF.\nRevert a Pull Request\nAfter a pull request is merged, you may find it does not help anything or it was a bad decision to merge the pull request.\nYou can revert it by clicking the Revert button on the right side of a commit in the pull request page to create a pull request with reverted changes to this specific pull request.\n\nRead more about reverting pull requests\nDiffs\nRendered Prose Diffs\nCommits and pull requests, including rendered documents supported by GitHub (e.g., Markdown), feature source and rendered views.\n\nClick the \"rendered\" button to see the changes as they'll appear in the rendered document. Rendered prose view is handy when you're adding, removing, and editing text:\n\nRead more about rendered prose diffs.\nDiffable Maps\nAny time you view a commit or pull request on GitHub that includes geodata, GitHub will render a visual representation of what was changed.\n\nRead more about diffable maps.\nExpanding Context in Diffs\nUsing the unfold button in the gutter of a diff, you can reveal additional lines of context with a click. You can keep clicking unfold until you've revealed the whole file, and the feature is available anywhere GitHub renders diffs.\n\nRead more about expanding context in diffs.\nDiff or Patch of Pull Request\nYou can get the diff of a Pull Request by adding a .diff or .patch\nextension to the end of the URL. For example:\nhttps://github.com/tiimgreen/github-cheat-sheet/pull/15\nhttps://github.com/tiimgreen/github-cheat-sheet/pull/15.diff\nhttps://github.com/tiimgreen/github-cheat-sheet/pull/15.patch\n\nThe .diff extension would give you this in plain text:\ndiff --git a/README.md b/README.md\nindex 88fcf69..8614873 100644\n--- a/README.md\n+++ b/README.md\n@@ -28,6 +28,7 @@ All the hidden and not hidden features of Git and GitHub. This cheat sheet was i\n - [Merged Branches](#merged-branches)\n - [Quick Licensing](#quick-licensing)\n - [TODO Lists](#todo-lists)\n+- [Relative Links](#relative-links)\n - [.gitconfig Recommendations](#gitconfig-recommendations)\n     - [Aliases](#aliases)\n     - [Auto-correct](#auto-correct)\n@@ -381,6 +382,19 @@ When they are clicked, they will be updated in the pure Markdown:\n - [ ] Sleep\n\n(...)\n\nRendering and diffing images\nGitHub can display several common image formats, including PNG, JPG, GIF, and PSD. In addition, there are several ways to compare differences between versions of those image formats.\n\nRead more about rendering and diffing images.\nHub\nHub is a command line Git wrapper that gives you extra features and commands that make working with GitHub easier.\nThis allows you to do things like:\n$ hub clone tiimgreen/toc\nCheck out some more cool commands Hub has to offer.\nContribution Guidelines\nGitHub supports adding 3 different files which help users contribute to your project.\nThese files can either be placed in the root of your repository or a .github directory under the root.\nCONTRIBUTING File\nAdding a CONTRIBUTING or CONTRIBUTING.md file to either the root of your repository or a .github directory will add a link to your file when a contributor creates an Issue or opens a Pull Request.\n\nRead more about contributing guidelines.\nISSUE_TEMPLATE file\nYou can define a template for all new issues opened in your project. The content of this file will pre-populate the new issue box when users create new issues. Add an ISSUE_TEMPLATE or ISSUE_TEMPLATE.md file to either the root of your repository or a .github directory.\nRead more about issue templates.\nIssue template file generator\n\nPULL_REQUEST_TEMPLATE file\nYou can define a template for all new pull requests opened in your project. The content of this file will pre-populate the text area when users create pull requests. Add a PULL_REQUEST_TEMPLATE or PULL_REQUEST_TEMPLATE.md file to either the root of your repository or a .github directory.\nRead more about pull request templates.\nPull request template file generator\nOcticons\nGitHubs icons (Octicons) have now been open sourced.\n\nRead more about GitHub's Octicons\nGitHub Student Developer Pack\nIf you are a student you will be eligible for the GitHub Student Developer Pack. This gives you free credit, free trials and early access to software that will help you when developing.\n\nRead more about GitHub's Student Developer Pack\nGitHub Resources\n\n\n\nTitle\nLink\n\n\n\n\nGitHub Explore\nhttps://github.com/explore\n\n\nGitHub Blog\nhttps://github.com/blog\n\n\nGitHub Help\nhttps://help.github.com/\n\n\nGitHub Training\nhttps://training.github.com/\n\n\nGitHub Developer\nhttps://developer.github.com/\n\n\nGithub Education (Free Micro Account and other stuff for students)\nhttps://education.github.com/\n\n\nGitHub Top 10 Best Practices\nBest Practices List\n\n\n\nGitHub Talks\n\n\n\nTitle\nLink\n\n\n\n\nHow GitHub Uses GitHub to Build GitHub\nhttps://www.youtube.com/watch?v=qyz3jkOBbQY\n\n\nIntroduction to Git with Scott Chacon of GitHub\nhttps://www.youtube.com/watch?v=ZDR433b0HJY\n\n\nHow GitHub No Longer Works\nhttps://www.youtube.com/watch?v=gXD1ITW7iZI\n\n\nGit and GitHub Secrets\nhttps://www.youtube.com/watch?v=Foz9yvMkvlA\n\n\nMore Git and GitHub Secrets\nhttps://www.youtube.com/watch?v=p50xsL-iVgU\n\n\n\nSSH keys\nYou can get a list of public ssh keys in plain text format by visiting:\nhttps://github.com/{user}.keys\n\ne.g. https://github.com/tiimgreen.keys\nRead more about accessing public ssh keys.\nRepository Templates\nYou can enable templating on your repository which allows anyone to copy the directory structure and files, allowing them to instantly use the files (e.g. for a tutorial or if writing boilerplate code). This can be enabled in the settings of your repository.\n\nChanging to a template repository will give a new URL endpoint which can be shared and instantly allows users to use your repository as a template. Alternatively, they can go to your repository and click the 'Use as template' button.\n\nRead more about using repositories as templates\nGit\nRemove All Deleted Files from the Working Tree\nWhen you delete a lot of files using /bin/rm you can use the following command to remove them from the working tree and from the index, eliminating the need to remove each one individually:\n$ git rm $(git ls-files -d)\nFor example:\n$ git status\nOn branch master\nChanges not staged for commit:\n\tdeleted:    a\n\tdeleted:    c\n\n$ git rm $(git ls-files -d)\nrm 'a'\nrm 'c'\n\n$ git status\nOn branch master\nChanges to be committed:\n\tdeleted:    a\n\tdeleted:    c\nPrevious Branch\nTo move to the previous branch in Git:\n$ git checkout -\n# Switched to branch 'master'\n\n$ git checkout -\n# Switched to branch 'next'\n\n$ git checkout -\n# Switched to branch 'master'\nRead more about Git branching.\nStripspace\nGit Stripspace:\n\nStrips trailing whitespace\nCollapses newlines\nAdds newline to end of file\n\nA file must be passed when calling the command, e.g.:\n$ git stripspace < README.md\nRead more about the Git stripspace command.\nChecking out Pull Requests\nPull Requests are special branches on the GitHub repository which can be retrieved locally in several ways:\nRetrieve a specific Pull Request and store it temporarily in FETCH_HEAD for quickly diff-ing or merge-ing:\n$ git fetch origin refs/pull/[PR-Number]/head\nAcquire all Pull Request branches as local remote branches by refspec:\n$ git fetch origin '+refs/pull/*/head:refs/remotes/origin/pr/*'\nOr setup the remote to fetch Pull Requests automatically by adding these corresponding lines in your repository's .git/config:\n[remote \"origin\"]\n    fetch = +refs/heads/*:refs/remotes/origin/*\n    url = git@github.com:tiimgreen/github-cheat-sheet.git\n\n[remote \"origin\"]\n    fetch = +refs/heads/*:refs/remotes/origin/*\n    url = git@github.com:tiimgreen/github-cheat-sheet.git\n    fetch = +refs/pull/*/head:refs/remotes/origin/pr/*\n\nFor Fork-based Pull Request contributions, it's useful to checkout a remote branch representing the Pull Request and create a local branch from it:\n$ git checkout pr/42 pr-42\nOr should you work on more repositories, you can globally configure fetching pull requests in the global git config instead.\ngit config --global --add remote.origin.fetch \"+refs/pull/*/head:refs/remotes/origin/pr/*\"\nThis way, you can use the following short commands in all your repositories:\ngit fetch origin\ngit checkout pr/42\nRead more about checking out pull requests locally.\nEmpty Commits\nCommits can be pushed with no code changes by adding --allow-empty:\n$ git commit -m \"Big-ass commit\" --allow-empty\nSome use-cases for this (that make sense), include:\n\nAnnotating the start of a new bulk of work or a new feature.\nDocumenting when you make changes to the project that aren't code related.\nCommunicating with people using your repository.\nThe first commit of a repository: git commit -m \"Initial commit\" --allow-empty.\n\nStyled Git Status\nRunning:\n$ git status\nproduces:\n\nBy adding -sb:\n$ git status -sb\nthis is produced:\n\nRead more about the Git status command.\nStyled Git Log\nRunning:\n$ git log --all --graph --pretty=format:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative\nproduces:\n\nCredit to Palesz\nThis can be aliased using the instructions found here.\nRead more about the Git log command.\nGit Query\nA Git query allows you to search all your previous commit messages and find the most recent one matching the query.\n$ git show :/query\nwhere query (case-sensitive) is the term you want to search, this then finds the last one and gives details on the lines that were changed.\n$ git show :/typo\n\nPress q to quit.\nGit Grep\nGit Grep will return a list of lines matching a pattern.\nRunning:\n$ git grep aliases\nwill show all the files containing the string aliases.\n\nPress q to quit.\nYou can also use multiple flags for more advanced search. For example:\n\n-e The next parameter is the pattern (e.g., regex)\n--and, --or and --not Combine multiple patterns.\n\nUse it like this:\n $ git grep -e pattern --and -e anotherpattern\nRead more about the Git grep command.\nMerged Branches\nRunning:\n$ git branch --merged\nwill give you a list of all branches that have been merged into your current branch.\nConversely:\n$ git branch --no-merged\nwill give you a list of branches that have not been merged into your current branch.\nRead more about the Git branch command.\nFixup and Autosquash\nIf there is something wrong with a previous commit (can be one or more from HEAD), for example abcde, run the following command after you've amended the problem:\n$ git commit --fixup=abcde\n$ git rebase abcde^ --autosquash -i\nRead more about the Git commit command.\nRead more about the Git rebase command.\nWeb Server for Browsing Local Repositories\nUse the Git instaweb command to instantly browse your working repository in gitweb. This command is a simple script to set up gitweb and a web server for browsing the local repository.\n$ git instaweb\nopens:\n\nRead more about the Git instaweb command.\nGit Configurations\nYour .gitconfig file contains all your Git configurations.\nAliases\nAliases are helpers that let you define your own git calls. For example you could set git a to run git add --all.\nTo add an alias, either navigate to ~/.gitconfig and fill it out in the following format:\n[alias]\n  co = checkout\n  cm = commit\n  p = push\n  # Show verbose output about tags, branches or remotes\n  tags = tag -l\n  branches = branch -a\n  remotes = remote -v\n\n...or type in the command-line:\n$ git config --global alias.new_alias git_function\nFor example:\n$ git config --global alias.cm commit\nFor an alias with multiple functions use quotes:\n$ git config --global alias.ac 'add -A . && commit'\nSome useful aliases include:\n\n\n\nAlias\nCommand\nWhat to Type\n\n\n\n\ngit cm\ngit commit\ngit config --global alias.cm commit\n\n\ngit co\ngit checkout\ngit config --global alias.co checkout\n\n\ngit ac\ngit add . -A git commit\ngit config --global alias.ac '!git add -A && git commit'\n\n\ngit st\ngit status -sb\ngit config --global alias.st 'status -sb'\n\n\ngit tags\ngit tag -l\ngit config --global alias.tags 'tag -l'\n\n\ngit branches\ngit branch -a\ngit config --global alias.branches 'branch -a'\n\n\ngit cleanup\ngit branch --merged | grep -v '*' | xargs git branch -d\ngit config --global alias.cleanup \"!git branch --merged | grep -v '*' | xargs git branch -d\"\n\n\ngit remotes\ngit remote -v\ngit config --global alias.remotes 'remote -v'\n\n\ngit lg\ngit log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --\ngit config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --\"\n\n\n\nSome Aliases are taken from @mathiasbynens dotfiles: https://github.com/mathiasbynens/dotfiles/blob/master/.gitconfig\nAuto-Correct\nGit gives suggestions for misspelled commands and if auto-correct is enabled the command can be fixed and executed automatically. Auto-correct is enabled by specifying an integer which is the delay in tenths of a second before git will run the corrected command. Zero is the default value where no correcting will take place, and a negative value will run the corrected command with no delay.\nFor example, if you type git comit you will get this:\n$ git comit -m \"Message\"\n# git: 'comit' is not a git command. See 'git --help'.\n\n# Did you mean this?\n#   commit\nAuto-correct can be enabled like this (with a 1.5 second delay):\n$ git config --global help.autocorrect 15\nSo now the command git comit will be auto-corrected to git commit like this:\n$ git comit -m \"Message\"\n# WARNING: You called a Git command named 'comit', which does not exist.\n# Continuing under the assumption that you meant 'commit'\n# in 1.5 seconds automatically...\nThe delay before git will rerun the command is so the user has time to abort.\nColor\nTo add more color to your Git output:\n$ git config --global color.ui 1\nRead more about the Git config command.\nGit Resources\n\n\n\nTitle\nLink\n\n\n\n\nOfficial Git Site\nhttp://git-scm.com/\n\n\nOfficial Git Video Tutorials\nhttp://git-scm.com/videos\n\n\nCode School Try Git\nhttp://try.github.com/\n\n\nIntroductory Reference & Tutorial for Git\nhttp://gitref.org/\n\n\nOfficial Git Tutorial\nhttp://git-scm.com/docs/gittutorial\n\n\nEveryday Git\nhttp://git-scm.com/docs/everyday\n\n\nGit Immersion\nhttp://gitimmersion.com/\n\n\nGit God\nhttps://github.com/gorosgobe/git-god\n\n\nGit for Computer Scientists\nhttp://eagain.net/articles/git-for-computer-scientists/\n\n\nGit Magic\nhttp://www-cs-students.stanford.edu/~blynn/gitmagic/\n\n\nGitHub Training Kit\nhttps://training.github.com/kit/\n\n\nGit Visualization Playground\nhttp://onlywei.github.io/explain-git-with-d3/#freeplay\n\n\nLearn Git Branching\nhttp://pcottle.github.io/learnGitBranching/\n\n\nA collection of useful .gitignore templates\nhttps://github.com/github/gitignore\n\n\nUnixorn's git-extra-commands collection of git scripts\nhttps://github.com/unixorn/git-extra-commands\n\n\n\nGit Books\n\n\n\nTitle\nLink\n\n\n\n\nPragmatic Version Control Using Git\nhttps://pragprog.com/titles/tsgit/pragmatic-version-control-using-git\n\n\nPro Git\nhttp://git-scm.com/book\n\n\nGit Internals PluralSight\nhttps://github.com/pluralsight/git-internals-pdf\n\n\nGit in the Trenches\nhttp://cbx33.github.io/gitt/\n\n\nVersion Control with Git\nhttp://www.amazon.com/Version-Control-Git-collaborative-development/dp/1449316387\n\n\nPragmatic Guide to Git\nhttps://pragprog.com/titles/pg_git/pragmatic-guide-to-git\n\n\nGit: Version Control for Everyone\nhttps://www.packtpub.com/application-development/git-version-control-everyone\n\n\n\nGit Videos\n\n\n\nTitle\nLink\n\n\n\n\nLinus Torvalds on Git\nhttps://www.youtube.com/watch?v=4XpnKHJAok8\n\n\nIntroduction to Git with Scott Chacon\nhttps://www.youtube.com/watch?v=ZDR433b0HJY\n\n\nGit From the Bits Up\nhttps://www.youtube.com/watch?v=MYP56QJpDr4\n\n\nGraphs, Hashes, and Compression, Oh My!\nhttps://www.youtube.com/watch?v=ig5E8CcdM9g\n\n\nGitHub Training & Guides\nhttps://www.youtube.com/watch?list=PLg7s6cbtAD15G8lNyoaYDuKZSKyJrgwB-&v=FyfwLX4HAxM\n\n\n\nGit Articles\n\n\n\nTitle\nLink\n\n\n\n\nGitHub Flow\nhttp://scottchacon.com/2011/08/31/github-flow.html\n\n\n\n\n"}, {"repo": "XX-net/XX-Net", "language": "Python", "readme": "\nXX-Net\n\u4e2d\u6587\u6587\u6863 \u00a0 \u00a0 \u00a0English \u00a0 \u00a0 \u00a0\u0641\u0627\u0631\u0633\u06cc \u0635\u0641\u062d\u0647 \u0627\u0635\u0644\u06cc\n\n\u6613\u7528\u7684\u7ffb\u5899\u5de5\u5177\n\u5305\u542b\u7684GAE_proxy\u548cX-Tunnel\uff1a\n\n\n\n\n\u6a21\u5757\nGAE_proxy\nX-Tunnel\n\n\n\n\n\u8054\u901a\u6027\n\u4f9d\u8d56IPv6\n\u66f4\u591a\u901a\u9053\n\n\n\u901f\u5ea6\n\u6d41\u7545\n\u4e0b\u8f7d\u5feb\u901f\uff0c\u7a0d\u5fae\u5ef6\u8fdf\n\n\n\u5b89\u5168\u6027\nGoogle\u53ef\u770b\u5230\u901a\u4fe1\u5185\u5bb9\n\u652f\u6301\u5b8c\u6574https\u52a0\u5bc6\n\n\n\u6613\u7528\n\u9700\u5f00\u542fIpv6\uff0c\u90e8\u7f72\u670d\u52a1\u7aef\uff0c\u5bfc\u5165\u8bc1\u4e66\n\u7b80\u5355\n\n\n\u517c\u5bb9\u6027\n\u90e8\u5206\u7f51\u7ad9\u4e0d\u652f\u6301\n\u65e0\u95ee\u9898\n\n\n\u6536\u8d39\n\u514d\u8d39\n\u4ed8\u8d39\n\n\n\n\n\u4e0b\u8f7d\u9875\u9762\n\n\u6700\u65b0\u72b6\u6001\uff1a\n2019-8-8\n\n\nGoogle \u66f4\u65b0\u670d\u52a1\u5668\u8bc1\u4e66\uff0c\u8bf7\u66f4\u65b0\u52303.13.2 \u53ca\u4ee5\u4e0a\u3002\n\n\nGAE_Proxy \u8bf7\u5f00\u542fIPv6\uff0c\u53c2\u8003:\n\u5982\u4f55\u5f00\u542fIPv6\n\n\n\n\u63d0\u793a\uff1a\n\n\u6709\u95ee\u9898\u8bf7\u5148\u770bWiki\u6587\u6863\n\u63d0\u95ee\u524d\uff0c\u8bf7\u5148\u770b\u6700\u8fd1\u8ba8\u8bba\u4e3b\u9898\uff0c\u907f\u514d\u91cd\u590d\u53d1\u95ee\u3002\n\n\n"}, {"repo": "sahat/hackathon-starter", "language": "JavaScript", "readme": "\n\nHackathon Starter\n   \nLive Demo: https://hackathon-starter.walcony.com\nJump to What's new?\nA boilerplate for Node.js web applications.\nIf you have attended any hackathons in the past, then you know how much time it takes to\nget a project started: decide on what to build, pick a programming language, pick a web framework,\npick a CSS framework. A while later, you might have an initial project up on GitHub and only then\ncan other team members start contributing. Or how about doing something as simple as Sign in with Facebook\nauthentication? You can spend hours on it if you are not familiar with how OAuth 2.0 works.\nWhen I started this project, my primary focus was on simplicity and ease of use.\nI also tried to make it as generic and reusable as possible to cover most use cases of hackathon web apps,\nwithout being too specific. In the worst case, you can use this as a learning guide for your projects,\nif for example you are only interested in Sign in with Google authentication and nothing else.\nTestimonials\n\n\u201cNice! That README alone is already gold!\u201d\n\u2014 Adrian Le Bas\n\n\n\u201cAwesome. Simply awesome.\u201d\n\u2014 Steven Rueter\n\n\n\u201cI'm using it for a year now and many projects, it's an awesome boilerplate and the project is well maintained!\u201d\n\u2014 Kevin Granger\n\n\n\u201cSmall world with Sahat's project. We were using his hackathon starter for our hackathon this past weekend and got some prizes. Really handy repo!\u201d\n\u2014 Interview candidate for one of the companies I used to work with.\n\nModern Theme\n\nFlatly Bootstrap Theme\n\nAPI Examples\n\nTable of Contents\n\nFeatures\nPrerequisites\nGetting Started\nObtaining API Keys\nProject Structure\nList of Packages\nUseful Tools and Resources\nRecommended Design Resources\nRecommended Node.js Libraries\nRecommended Client-side Libraries\nPro Tips\nFAQ\nHow It Works\nCheatsheets\n\nES6\nJavaScript Date\nMongoose Cheatsheet\n\n\nDeployment\nDocker\nProduction\nChangelog\nContributing\nLicense\n\nFeatures\n\nLocal Authentication using Email and Password\nOAuth 1.0a Authentication via Twitter\nOAuth 2.0 Authentication via Facebook, Google, GitHub, LinkedIn, Instagram\nFlash notifications\nMVC Project Structure\nNode.js clusters support\nSass stylesheets (auto-compiled via middleware)\nBootstrap 4 + Extra Themes\nContact Form (powered by Mailgun, Sendgrid or Mandrill)\nAccount Management\nGravatar\nProfile Details\nChange Password\nForgot Password\nReset Password\nLink multiple OAuth strategies to one account\nDelete Account\nCSRF protection\nAPI Examples: Facebook, Foursquare, Last.fm, Tumblr, Twitter, Stripe, LinkedIn and more.\n\nPrerequisites\n\nMongoDB\nNode.js 8.0+\nCommand Line Tools\n\u00a0Mac OS X: Xcode (or OS X 10.9+: xcode-select --install)\n\u00a0Windows: Visual Studio OR Visual Studio Code + Windows Subsystem for Linux - Ubuntu\n\u00a0Ubuntu / \u00a0Linux Mint: sudo apt-get install build-essential\n\u00a0Fedora: sudo dnf groupinstall \"Development Tools\"\n\u00a0OpenSUSE: sudo zypper install --type pattern devel_basis\n\nNote: If you are new to Node or Express, you may find\nNode.js & Express From Scratch series\nhelpful for learning the basics of Node and Express. Alternatively,\nhere is another great tutorial for complete beginners - Getting Started With Node.js, Express, MongoDB.\nGetting Started\nThe easiest way to get started is to clone the repository:\n# Get the latest snapshot\ngit clone https://github.com/sahat/hackathon-starter.git myproject\n\n# Change directory\ncd myproject\n\n# Install NPM dependencies\nnpm install\n\n# Then simply start your app\nnode app.js\nWarning: If you want to use some API that need https to work (for example Pinterest or facebook),\nyou will need to download ngrok.\nYou must start ngrok after starting the project.\n# start ngrok to intercept the data exchanged on port 8080\n./ngrok http 8080\nNext, you must use the https URL defined by ngrok, for example, https://hackaton.ngrok.io\nNote: I highly recommend installing Nodemon.\nIt watches for any changes in your  node.js app and automatically restarts the\nserver. Once installed, instead of node app.js use nodemon app.js. It will\nsave you a lot of time in the long run, because you won't need to manually\nrestart the server each time you make a small change in code. To install, run\nsudo npm install -g nodemon.\nObtaining API Keys\nTo use any of the included APIs or OAuth authentication methods, you will need\nto obtain appropriate credentials: Client ID, Client Secret, API Key, or\nUsername & Password. You will need to go through each provider to generate new\ncredentials.\n\n\nVisit Google Cloud Console\nClick on the Create Project button\nEnter Project Name, then click on Create button\nThen click on APIs & auth in the sidebar and select API tab\nClick on Google+ API under Social APIs, then click Enable API\nClick on Google Drive API under G Suite, then click Enable API\nClick on Google Sheets API under G Suite, then click Enable API\nNext, under APIs & auth in the sidebar click on Credentials tab\nClick on Create new Client ID button\nSelect Web Application and click on Configure Consent Screen\nFill out the required fields then click on Save\nIn the Create Client ID modal dialog:\nApplication Type: Web Application\nAuthorized Javascript origins: http://localhost:8080\nAuthorized redirect URI: http://localhost:8080/auth/google/callback\nClick on Create Client ID button\nCopy and paste Client ID and Client secret keys into .env\n\nNote: When you ready to deploy to production don't forget to\nadd your new URL to Authorized Javascript origins and Authorized redirect URI,\ne.g. http://my-awesome-app.herokuapp.com and\nhttp://my-awesome-app.herokuapp.com/auth/google/callback respectively.\nThe same goes for other providers.\n\n\n\nVisit Snap Kit Developer Portal\nClick on the + button to create an app\nEnter a name for your app\nEnable the scopes that you will want to use in your app\nClick on the Continue button\nFind the Kits section and make sure that Login Kit is enabled\nFind the Redirect URLs section, click the + Add button, and enter http://localhost:8080/auth/snapchat/callback\nFind the Development Environment section. Click the Generate button next to the Confidential OAuth2 Client heading within it.\nCopy and paste the generated Private Key and OAuth2 Client ID keys into .env\nNote: OAuth2 Client ID is SNAPCHAT_ID, Private Key is SNAPCHAT_SECRET in .env\nTo prepare the app for submission, fill out the rest of the required fields: Category, Description, Privacy Policy Url, and App Icon\n\nNote: For production use, don't forget to:\n\ngenerate a Confidential OAuth2 Client in the Production Environment and use the production Private Key and OAuth2 Client ID\nadd the production URL to Redirect URLs section, e.g. http://my-awesome-app.herokuapp.com/auth/snapchat/callback\nsubmit the app for review and wait for approval\n\n\n\n\nVisit Facebook Developers\nClick My Apps, then select *Add a New App from the dropdown menu\nEnter a new name for your app\nClick on the Create App ID button\nFind the Facebook Login Product and click on Facebook Login\nInstead of going through their Quickstart, click on Settings for your app in the top left corner\nCopy and paste App ID and App Secret keys into .env\nNote: App ID is FACEBOOK_ID, App Secret is FACEBOOK_SECRET in .env\nEnter localhost under App Domains\nChoose a Category that best describes your app\nClick on + Add Platform and select Website\nEnter http://localhost:8080 under Site URL\nClick on the Settings tab in the left nav under Facebook Login\nEnter http://localhost:8080/auth/facebook/callback under Valid OAuth redirect URIs\n\nNote: After a successful sign in with Facebook, a user will be redirected back to the home page with appended hash #_=_ in the URL. It is not a bug. See this Stack Overflow discussion for ways to handle it.\n\n\n\nGo to Account Settings\nSelect Developer settings from the sidebar\nThen click on OAuth Apps and then on Register new application\nEnter Application Name and Homepage URL\nFor Authorization Callback URL: http://localhost:8080/auth/github/callback\nClick Register application\nNow copy and paste Client ID and Client Secret keys into .env file\n\n\n\n\nSign in at https://apps.twitter.com\nClick Create a new application\nEnter your application name, website and description\nFor Callback URL: http://127.0.0.1:8080/auth/twitter/callback\nGo to Settings tab\nUnder Application Type select Read and Write access\nCheck the box Allow this application to be used to Sign in with Twitter\nClick Update this Twitter's applications settings\nCopy and paste Consumer Key and Consumer Secret keys into .env file\n\n\n\n\nSign in at LinkedIn Developer Network\nFrom the account name dropdown menu select API Keys\nIt may ask you to sign in once again\nClick + Add New Application button\nFill out all the required fields\nOAuth 2.0 Redirect URLs: http://localhost:8080/auth/linkedin/callback\nJavaScript API Domains: http://localhost:8080\nFor Default Application Permissions make sure at least the following is checked:\nr_basicprofile\nFinish by clicking Add Application button\nCopy and paste API Key and Secret Key keys into .env file\nAPI Key is your clientID\nSecret Key is your clientSecret\n\n\n\n\nSign up or log into your dashboard\nClick on your profile and click on Account Settings\nThen click on API Keys\nCopy the Secret Key. and add this into .env file\n\n\n\n\nVisit PayPal Developer\nLog in to your PayPal account\nClick Applications > Create App in the navigation bar\nEnter Application Name, then click Create app\nCopy and paste Client ID and Secret keys into .env file\nApp ID is client_id, App Secret is client_secret\nChange host to api.paypal.com if you want to test against production and use the live credentials\n\n\n\n\nGo to Foursquare for Developers\nClick on My Apps in the top menu\nClick the Create A New App button\nEnter App Name, Welcome page url,\nFor Redirect URI: http://localhost:8080/auth/foursquare/callback\nClick Save Changes\nCopy and paste Client ID and Client Secret keys into .env file\n\n\n\n\nGo to http://www.tumblr.com/oauth/apps\nOnce signed in, click +Register application\nFill in all the details\nFor Default Callback URL: http://localhost:8080/auth/tumblr/callback\nClick \u2714Register\nCopy and paste OAuth consumer key and OAuth consumer secret keys into .env file\n\n\n\n\nGo to http://steamcommunity.com/dev/apikey\nSign in with your existing Steam account\nEnter your Domain Name, then and click Register\nCopy and paste Key into .env file\n\n\n\n\nGo to https://sendgrid.com/user/signup\nSign up and confirm your account via the activation email\nThen enter your SendGrid Username and Password into .env file\n\n\n\n\nGo to http://www.mailgun.com\nSign up and add your Domain Name\nFrom the domain overview, copy and paste the default SMTP Login and Password into .env file\n\n\n\n\nGo to https://developer.here.com\nSign up and create a Freemium project\nCreate JAVASCRIPT/REST credentials. Copy and paste the APP_ID and APP into .env file.\nNote that these credentials are available on the client side, and you need to create a domain whitelist for your app credentials when you are publicly launching the app.\n\n\n\n\nGo to https://www.twilio.com/try-twilio\nSign up for an account.\nOnce logged into the dashboard, expand the link 'show api credentials'\nCopy your Account Sid and Auth Token\n\n\n\n\nGo to https://developer.intuit.com/app/developer/qbo/docs/get-started\nUse the Sign Up option in the upper right corner of the screen (nav bar) to get a free developer account and a sandbox company.\nCreate a new app by going to your Dashboard using the My Apps option in the top nav bar or by going to https://developer.intuit.com/app/developer/myapps\nIn your App, under Development, Keys & OAuth (right nav), find the Client ID and Client Secret for your .env file\n\nProject Structure\n\n\n\nName\nDescription\n\n\n\n\nconfig/passport.js\nPassport Local and OAuth strategies, plus login middleware.\n\n\ncontrollers/api.js\nController for /api route and all api examples.\n\n\ncontrollers/contact.js\nController for contact form.\n\n\ncontrollers/home.js\nController for home page (index).\n\n\ncontrollers/user.js\nController for user account management.\n\n\nmodels/User.js\nMongoose schema and model for User.\n\n\npublic/\nStatic assets (fonts, css, js, img).\n\n\npublic/js/application.js\nSpecify client-side JavaScript dependencies.\n\n\npublic/js/main.js\nPlace your client-side JavaScript here.\n\n\npublic/css/main.scss\nMain stylesheet for your app.\n\n\npublic/css/themes/default.scss\nSome Bootstrap overrides to make it look prettier.\n\n\nviews/account/\nTemplates for login, password reset, signup, profile.\n\n\nviews/api/\nTemplates for API Examples.\n\n\nviews/partials/flash.pug\nError, info and success flash notifications.\n\n\nviews/partials/header.pug\nNavbar partial template.\n\n\nviews/partials/footer.pug\nFooter partial template.\n\n\nviews/layout.pug\nBase template.\n\n\nviews/home.pug\nHome page template.\n\n\n.dockerignore\nFolder and files ignored by docker usage.\n\n\n.env.example\nYour API keys, tokens, passwords and database URI.\n\n\n.eslintrc\nRules for eslint linter.\n\n\n.gitignore\nFolder and files ignored by git.\n\n\n.travis.yml\nConfiguration files for continuous integration.\n\n\napp.js\nThe main application file.\n\n\ndocker-compose.yml\nDocker compose configuration file.\n\n\nDockerfile\nDocker configuration file.\n\n\npackage.json\nNPM dependencies.\n\n\npackage-lock.json\nContains exact versions of NPM dependencies in package.json.\n\n\n\nNote: There is no preference how you name or structure your views.\nYou could place all your templates in a top-level views directory without\nhaving a nested folder structure, if that makes things easier for you.\nJust don't forget to update extends ../layout  and corresponding\nres.render() paths in controllers.\nList of Packages\n\n\n\nPackage\nDescription\n\n\n\n\n@octokit/rest\nGitHub API library.\n\n\nbcrypt\nLibrary for hashing and salting user passwords.\n\n\nbody-parser\nNode.js body parsing middleware.\n\n\nchai\nBDD/TDD assertion library.\n\n\nchalk\nTerminal string styling done right.\n\n\ncheerio\nScrape web pages using jQuery-style syntax.\n\n\nclockwork\nClockwork SMS API library.\n\n\ncompression\nNode.js compression middleware.\n\n\nconnect-mongo\nMongoDB session store for Express.\n\n\ndotenv\nLoads environment variables from .env file.\n\n\nerrorhandler\nDevelopment-only error handler middleware.\n\n\neslint\nLinter JavaScript.\n\n\neslint-config-airbnb-base\nConfiguration eslint by airbnb.\n\n\neslint-plugin-chai-friendly\nMakes eslint friendly towards Chai.js 'expect' and 'should' statements.\n\n\neslint-plugin-import\nESLint plugin with rules that help validate proper imports.\n\n\nexpress\nNode.js web framework.\n\n\nexpress-flash\nProvides flash messages for Express.\n\n\nexpress-session\nSimple session middleware for Express.\n\n\nexpress-status-monitor\nReports real-time server metrics for Express.\n\n\nfbgraph\nFacebook Graph API library.\n\n\ninstagram-node\nInstagram API library.\n\n\nlastfm\nLast.fm API library.\n\n\nlob\nLob API library.\n\n\nlodash\nA utility library for working with arrays, numbers, objects, strings.\n\n\nlusca\nCSRF middleware.\n\n\nmailchecker\nVerifies that an email address is valid and not a disposable address.\n\n\nmocha\nTest framework.\n\n\nmoment\nParse, validate, compute dates and times.\n\n\nmongoose\nMongoDB ODM.\n\n\nmorgan\nHTTP request logger middleware for node.js.\n\n\nmulter\nNode.js middleware for handling multipart/form-data.\n\n\nnode-foursquare\nFoursquare API library.\n\n\nnode-sass\nNode.js bindings to libsass.\n\n\nnode-sass-middleware\nSass middleware compiler.\n\n\nnyc\nCoverage test.\n\n\nnodemailer\nNode.js library for sending emails.\n\n\nnode-quickbooks\nQuickbooks API library.\n\n\npassport\nSimple and elegant authentication library for node.js.\n\n\npassport-facebook\nSign-in with Facebook plugin.\n\n\npassport-github\nSign-in with GitHub plugin.\n\n\npassport-google-oauth\nSign-in with Google plugin.\n\n\npassport-instagram\nSign-in with Instagram plugin.\n\n\npassport-linkedin-oauth2\nSign-in with LinkedIn plugin.\n\n\npassport-local\nSign-in with Username and Password plugin.\n\n\npassport-openid\nSign-in with OpenId plugin.\n\n\npassport-oauth\nAllows you to set up your own OAuth 1.0a and OAuth 2.0 strategies.\n\n\npassport-oauth2-refresh\nA library to refresh OAuth 2.0 access tokens using refresh tokens.\n\n\npassport-snapchat\nSign-in with Snapchat plugin.\n\n\npassport-twitter\nSign-in with Twitter plugin.\n\n\npaypal-rest-sdk\nPayPal APIs library.\n\n\npug\nTemplate engine for Express.\n\n\nrequest\nSimplified HTTP request library.\n\n\nsinon\nTest spies, stubs and mocks for JavaScript.\n\n\nsinon-mongoose\nExtend Sinon stubs for Mongoose methods to test chained methods easily.\n\n\nstripe\nOffical Stripe API library.\n\n\nsupertest\nHTTP assertion library.\n\n\ntumblr.js\nTumblr API library.\n\n\ntwilio\nTwilio API library.\n\n\ntwit\nTwitter API library.\n\n\nvalidator\nA library of string validators and sanitizers.\n\n\n\nUseful Tools and Resources\n\nJavaScripting - The Database of JavaScript Libraries\nJS Recipes - JavaScript tutorials for backend and frontend development.\nHTML to Pug converter - HTML to PUG is a free online converter helping you to convert HTML files to pug syntax in real-time.\nJavascriptOO - A directory of JavaScript libraries with examples, CDN links, statistics, and videos.\nFavicon Generator - Generate favicons for PC, Android, iOS, Windows 8.\n\nRecommended Design Resources\n\nCode Guide - Standards for developing flexible, durable, and sustainable HTML and CSS.\nBootsnipp - Code snippets for Bootstrap.\nBootstrap Zero - Free Bootstrap templates themes.\nGoogle Bootstrap - Google-styled theme for Bootstrap.\nFont Awesome Icons - It's already part of the Hackathon Starter, so use this page as a reference.\nColors - A nicer color palette for the web.\nCreative Button Styles - awesome button styles.\nCreative Link Effects - Beautiful link effects in CSS.\nMedium Scroll Effect - Fade in/out header background image as you scroll.\nGeoPattern - SVG background pattern generator.\nTrianglify - SVG low-poly background pattern generator.\n\nRecommended Node.js Libraries\n\nNodemon - Automatically restart Node.js server on code changes.\ngeoip-lite - Geolocation coordinates from IP address.\nFilesize.js - Pretty file sizes, e.g. filesize(265318); // \"265.32 kB\".\nNumeral.js - Library for formatting and manipulating numbers.\nNode Inspector - Node.js debugger based on Chrome Developer Tools.\nnode-taglib - Library for reading the meta-data of several popular audio formats.\nsharp - Node.js module for resizing JPEG, PNG, WebP and TIFF images.\n\nRecommended Client-side Libraries\n\nFramework7 - Full Featured HTML Framework For Building iOS7 Apps.\nInstantClick - Makes your pages load instantly by pre-loading them on mouse hover.\nNProgress.js - Slim progress bars like on YouTube and Medium.\nHover - Awesome CSS3 animations on mouse hover.\nMagnific Popup - Responsive jQuery Lightbox Plugin.\njQuery Raty - Star Rating Plugin.\nHeadroom.js - Hide your header until you need it.\nX-editable - Edit form elements inline.\nOffline.js - Detect when user's internet connection goes offline.\nAlertify.js - Sweet looking alerts and browser dialogs.\nselectize.js - Styleable select elements and input tags.\ndrop.js -  Powerful Javascript and CSS library for creating dropdowns and other floating displays.\nscrollReveal.js - Declarative on-scroll reveal animations.\n\nPro Tips\n\nUse async.parallel() when you need to run multiple\nasynchronous tasks, and then render a page, but only when all tasks are completed. For example, you might want to scrape three different websites for some data and render the results in a template after all three websites have been scraped.\nNeed to find a specific object inside an Array? Use _.find\nfunction from Lodash. For example, this is how you would retrieve a\nTwitter token from database: var token = _.find(req.user.tokens, { kind: 'twitter' });,\nwhere 1st parameter is an array, and a 2nd parameter is an object to search for.\n\nFAQ\nWhy do I get 403 Error: Forbidden when submitting a form?\nYou need to add the following hidden input element to your form. This has been\nadded in the pull request #40\nas part of the CSRF protection.\ninput(type='hidden', name='_csrf', value=_csrf)\n\nNote: It is now possible to whitelist certain URLs. In other words you can\nspecify a list of routes that should bypass CSRF verification check.\nNote 2: To whitelist dynamic URLs use regular expression tests inside the\nCSRF middleware to see if req.originalUrl matches your desired pattern.\nI am getting MongoDB Connection Error, how do I fix it?\nThat's a custom error message defined in app.js to indicate that there was a\nproblem connecting to MongoDB:\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log('%s MongoDB connection error. Please make sure MongoDB is running.', chalk.red('\u2717'));\n  process.exit();\n});\nYou need to have a MongoDB server running before launching app.js. You can\ndownload MongoDB here, or install it via a package manager.\n\nWindows users, read Install MongoDB on Windows.\nTip: If you are always connected to the internet, you could just use\nMongoDB Atlas or Compose instead\nof downloading and installing MongoDB locally. You will only need to update database credentials\nin .env file.\nI get an error when I deploy my app, why?\nChances are you haven't changed the Database URI in .env. If MONGODB is\nset to localhost, it will only work on your machine as long as MongoDB is\nrunning. When you deploy to Heroku, OpenShift or some other provider, you will not have MongoDB\nrunning on localhost. You need to create an account with MongoDB Atlas\nor Compose, then create a free tier database.\nSee Deployment for more information on how to setup an account\nand a new database step-by-step with MongoDB Atlas.\nWhy Pug (Jade) instead of Handlebars?\nWhen I first started this project I didn't have any experience with Handlebars. Since then I have worked on Ember.js apps and got myself familiar with the Handlebars syntax. While it is true Handlebars is easier, because it looks like good old HTML, I have no regrets picking Jade over Handlebars. First off, it's the default template engine in Express, so someone who has built Express apps in the past already knows it. Secondly, I find extends and block to be indispensable, which as far as I know, Handlebars does not have out of the box. And lastly, subjectively speaking, Jade looks much cleaner and shorter than Handlebars, or any non-HAML style for that matter.\nWhy do you have all routes defined in app.js?\nFor the sake of simplicity. While there might be a better approach,\nsuch as passing app context to each controller as outlined in this\nblog,\nI find such style to be confusing for beginners.\nIt took me a long time to grasp the concept of exports and module.exports,\nlet alone having a global app reference in other files.\nThat to me is backward thinking.\nThe app.js is the \"heart of the app\", it should be the one referencing\nmodels, routes, controllers, etc.\nWhen working solo on small projects, I prefer to have everything inside app.js as is the case with this\nREST API server.\nHow do I switch SendGrid for another email delivery service, like Mailgun or SparkPost?\nInside the nodemailer.createTransport method arguments, change the service from 'Sendgrid' to some other email service. Also, be sure to update both username and password below that. See the list of all supported services by Nodemailer.\nHow It Works (mini guides)\nThis section is intended for giving you a detailed explanation of\nhow a particular functionality works. Maybe you are just curious about\nhow it works, or perhaps you are lost and confused while reading the code,\nI hope it provides some guidance to you.\nCustom HTML and CSS Design 101\nHTML5 UP has many beautiful templates that you can download for free.\nWhen you download the ZIP file, it will come with index.html, images, css and js folders. So, how do you\nintegrate it with Hackathon Starter? Hackathon Starter uses Bootstrap CSS framework, but these templates do not.\nTrying to use both CSS files at the same time will likely result in undesired effects.\nNote: Using the custom templates approach, you should understand that you cannot reuse any of the views I have created: layout, home page, api browser, login, signup, account management, contact. Those views were built using Bootstrap grid and styles. You will have to manually update the grid using a different syntax provided in the template. Having said that, you can mix and match if you want to do so: Use Bootstrap for main app interface, and a custom template for a landing page.\nLet's start from the beginning. For this example I will use Escape Velocity template:\n\nNote: For the sake of simplicity I will only consider index.html, and skip left-sidebar.html,\nno-sidebar.html, right-sidebar.html.\nMove all JavaScript files from html5up-escape-velocity/js to public/js. Then move all CSS files from html5up-escape-velocity/css to public/css. And finally, move all images from html5up-escape-velocity/images to public/images. You could move it to the existing img folder, but that would require manually changing every img reference. Grab the contents of index.html and paste it into HTML To Pug.\nNote: Do not forget to update all the CSS and JS paths accordingly.\nCreate a new file escape-velocity.pug and paste the Pug markup in views folder.\nWhenever you see the code res.render('account/login') - that means it will search for views/account/login.pug file.\nLet's see how it looks. Create a new controller escapeVelocity inside controllers/home.js:\nexports.escapeVelocity = (req, res) => {\n  res.render('escape-velocity', {\n    title: 'Landing Page'\n  });\n};\nAnd then create a route in app.js. I placed it right after the index controller:\napp.get('/escape-velocity', homeController.escapeVelocity);\nRestart the server (if you are not using nodemon); then you should see the new template at http://localhost:8080/escape-velocity.\nI will stop right here, but if you would like to use this template as more than just a single page, take a look at how these Pug templates work: layout.pug - base template, index.pug - home page, partials/header.pug - Bootstrap navbar, partials/footer.pug - sticky footer. You will have to manually break it apart into smaller pieces. Figure out which part of the template you want to keep the same on all pages - that's your new layout.pug.\nThen, each page that changes, be it index.pug, about.pug, contact.pug\nwill be embedded in your new layout.pug via block content. Use existing templates as a reference.\nThis is a rather lengthy process, and templates you get from elsewhere might have yet another grid system. That's why I chose Bootstrap for the Hackathon Starter.\nMany people are already familiar with Bootstrap, plus it's easy to get started with it if you have never used Bootstrap.\nYou can also buy many beautifully designed Bootstrap themes at Themeforest, and use them as a drop-in replacement for Hackathon Starter. However, if you would like to go with a completely custom HTML/CSS design, this should help you to get started!\n\nHow do flash messages work in this project?\nFlash messages allow you to display a message at the end of the request and access\nit on next request and only next request. For instance, on a failed login attempt, you would\ndisplay an alert with some error message, but as soon as you refresh that page or visit a different\npage and come back to the login page, that error message will be gone. It is only displayed once.\nThis project uses express-flash module for flash messages. And that\nmodule is built on top of connect-flash, which is what I used in\nthis project initially. With express-flash you don't have to\nexplicitly send a flash message to every view inside res.render().\nAll flash messages are available in your views via messages object by default,\nthanks to express-flash.\nFlash messages have a two-step process. You use req.flash('errors', { msg: 'Error messages goes here' }\nto create a flash message in your controllers, and then display them in your views:\nif messages.errors\n  .alert.alert-danger.fade.in\n    for error in messages.errors\n      div= error.msg\nIn the first step, 'errors' is the name of a flash message, which should match the\nname of the property on messages object in your views. You place alert messages\ninside if message.errors because you don't want to show them flash messages are present.\nThe reason why you pass an error like { msg: 'Error message goes here' } instead\nof just a string - 'Error message goes here', is for the sake of consistency.\nTo clarify that, express-validator module which is used for validating and sanitizing user's input,\nreturns all errors as an array of objects, where each object has a msg property with a message why an error has occurred. Here is a more general example of what express-validator returns when there are errors present:\n[\n  { param: \"name\", msg: \"Name is required\", value: \"<received input>\" },\n  { param: \"email\", msg: \"A valid email is required\", value: \"<received input>\" }\n]\nTo keep consistent with that style, you should pass all flash messages\nas { msg: 'My flash message' } instead of a string. Otherwise, you will see an alert box\nwithout an error message. That is because in partials/flash.pug template it will try to output\nerror.msg (i.e. \"My flash message\".msg), in other words, it will try to call a msg method on a String object,\nwhich will return undefined. Everything I just mentioned about errors, also applies\nto \"info\" and \"success\" flash messages, and you could even create a new one yourself, such as:\nData Usage Controller (Example)\nreq.flash('warning', { msg: 'You have exceeded 90% of your data usage' });\n\nUser Account Page (Example)\nif messages.warning\n  .alert.alert-warning.fade.in\n    for warning in messages.warning\n      div= warning.msg\npartials/flash.pug is a partial template that contains how flash messages\nare formatted. Previously, flash\nmessages were scattered throughout each view that used flash messages\n(contact, login, signup, profile), but now, thankfully it uses a DRY approach.\nThe flash messages partial template is included in the layout.pug, along with footer and navigation.\nbody\n    include partials/header\n\n    .container\n      include partials/flash\n      block content\n\n    include partials/footer\nIf you have any further questions about flash messages,\nplease feel free to open an issue, and I will update this mini-guide accordingly,\nor send a pull request if you would like to include something that I missed.\n\nHow do I create a new page?\nA more correct way to say this would be \"How do I create a new route?\" The main file app.js contains all the routes.\nEach route has a callback function associated with it. Sometimes you will see three or more arguments for a route. In a case like that, the first argument is still a URL string, while middle arguments\nare what's called middleware. Think of middleware as a door. If this door prevents you from\ncontinuing forward, you won't get to your callback function. One such example is a route that requires authentication.\napp.get('/account', passportConfig.isAuthenticated, userController.getAccount);\nIt always goes from left to right. A user visits /account page. Then isAuthenticated middleware checks if you are authenticated:\nexports.isAuthenticated = (req, res, next) => {\n  if (req.isAuthenticated()) {\n    return next();\n  }\n  res.redirect('/login');\n};\nIf you are authenticated, you let this visitor pass through your \"door\" by calling return next();. It then proceeds to the\nnext middleware until it reaches the last argument, which is a callback function that typically renders a template on GET requests or redirects on POST requests. In this case, if you are authenticated, you will be redirected to the Account Management page; otherwise, you will be redirected to the Login page.\nexports.getAccount = (req, res) => {\n  res.render('account/profile', {\n    title: 'Account Management'\n  });\n};\nExpress.js has app.get, app.post, app.put, app.delete, but for the most part, you will only use the first two HTTP verbs, unless you are building a RESTful API.\nIf you just want to display a page, then use GET, if you are submitting a form, sending a file then use POST.\nHere is a typical workflow for adding new routes to your application. Let's say we are building a page that lists all books from the database.\nStep 1. Start by defining a route.\napp.get('/books', bookController.getBooks);\n\nNote: As of Express 4.x you can define your routes like so:\napp.route('/books')\n  .get(bookController.getBooks)\n  .post(bookController.createBooks)\n  .put(bookController.updateBooks)\n  .delete(bookController.deleteBooks)\nAnd here is how a route would look if it required an authentication and an authorization middleware:\napp.route('/api/twitter')\n  .all(passportConfig.isAuthenticated)\n  .all(passportConfig.isAuthorized)\n  .get(apiController.getTwitter)\n  .post(apiController.postTwitter)\nUse whichever style that makes sense to you. Either one is acceptable. I think that chaining HTTP verbs on app.route is a very clean and elegant approach, but on the other hand, I can no longer see all my routes at a glance when you have one route per line.\nStep 2. Create a new schema and a model Book.js inside the models directory.\nconst mongoose = require('mongoose');\n\nconst bookSchema = new mongoose.Schema({\n  name: String\n});\n\nconst Book = mongoose.model('Book', bookSchema);\nmodule.exports = Book;\nStep 3. Create a new controller file called book.js inside the controllers directory.\n/**\n * GET /books\n * List all books.\n */\nconst Book = require('../models/Book.js');\n\nexports.getBooks = (req, res) => {\n  Book.find((err, docs) => {\n    res.render('books', { books: docs });\n  });\n};\nStep 4. Import that controller in app.js.\nconst bookController = require('./controllers/book');\nStep 5. Create books.pug template.\nextends layout\n\nblock content\n  .page-header\n    h3 All Books\n\n  ul\n    for book in books\n      li= book.name\nThat's it! I will say that you could have combined Step 1, 2, 3 as following:\napp.get('/books',(req, res) => {\n  Book.find((err, docs) => {\n    res.render('books', { books: docs });\n  });\n});\nSure, it's simpler, but as soon as you pass 1000 lines of code in app.js it becomes a little challenging to navigate the file.\nI mean, the whole point of this boilerplate project was to separate concerns, so you could\nwork with your teammates without running into MERGE CONFLICTS. Imagine you have four developers\nworking on a single app.js, I promise you it won't be fun resolving merge conflicts all the time.\nIf you are the only developer, then it's okay. But as I said, once it gets up to a certain LoC size, it becomes difficult to maintain everything in a single file.\nThat's all there is to it. Express.js is super simple to use.\nMost of the time you will be dealing with other APIs to do the real work:\nMongoose for querying database, socket.io for sending and receiving messages over websockets,\nsending emails via Nodemailer, form validation using express-validator library,\nparsing websites using Cheerio, etc.\n\nHow do I use Socket.io with Hackathon Starter?\nDan Stroot submitted an excellent pull request that adds a real-time dashboard with socket.io.\nAnd as  much as I'd like to add it to the project, I think it violates one of the main\nprinciples of the Hackathon Starter:\n\nWhen I started this project, my primary focus was on simplicity and ease of use.\nI also tried to make it as generic and reusable as possible to cover most use cases of\nhackathon web apps, without being too specific.\n\nWhen I need to use socket.io, I really need it, but most of the time - I don't. But more importantly, websockets support is still experimental on most hosting providers. As of October 2013,\nHeroku supports websockets, but not until you opt-in by running this command:\nheroku labs:enable websockets -a myapp\nAnd what if you are deploying to OpenShift? They do support websockets, but it is currently in a\npreview state. So, for OpenShift you would need to change the socket.io connect URI to the following:\nconst socket = io.connect('http://yoursite-namespace.rhcloud.com:8000');\nWait, why is it on port 8000? Who knows, and if I didn't run across this blog post\nI wouldn't even know I had to use port 8000.\nI am really glad that Heroku and OpenShift at least\nhave a websockets support, because many other PaaS providers still do not support it.\nDue to the aforementioned issues with websockets, I cannot include socket.io as part of the Hackathon Starter. For now...\nIf you need to use socket.io in your app, please continue reading.\nFirst, you need to install socket.io:\nnpm install socket.io\nReplace const app = express(); with the following code:\nconst app = express();\nconst server = require('http').Server(app);\nconst io = require('socket.io')(server);\nI like to have the following code organization in app.js (from top to bottom): module dependencies,\nimport controllers, import configs, connect to database, express configuration, routes,\nstart the server, socket.io stuff. That way I always know where to look for things.\nAdd the following code at the end of app.js:\nio.on('connection', (socket) => {\n  socket.emit('greet', { hello: 'Hey there browser!' });\n  socket.on('respond', (data) => {\n    console.log(data);\n  });\n  socket.on('disconnect', () => {\n    console.log('Socket disconnected');\n  });\n});\nOne last thing left to change:\napp.listen(app.get('port'), () => {\nto\nserver.listen(app.get('port'), () => {\nAt this point, we are done with the back-end.\nYou now have a choice - to include your JavaScript code in Pug templates or have all your client-side\nJavaScript in a separate file - in main.js. I admit, when I first started with Node.js and JavaScript in general,\nI placed all JavaScript code inside templates because I have access to template variables passed in from Express\nright then and there. It's the easiest thing you can do, but also the least efficient and harder to maintain. Since then I\nalmost never include inline JavaScript inside templates anymore.\nBut it's also understandable if you want to take the easier road.\nMost of the time you don't even care about performance during hackathons, you just\nwant to \"get shit done\" before the time runs out.\nWell, either way, use whichever approach makes more sense to you. At the end of the day,\nit's what you build that matters, not how you build it.\nIf you want to stick all your JavaScript inside templates, then in layout.pug -\nyour main template file, add this to head block.\nscript(src='/socket.io/socket.io.js')\nscript.\n    let socket = io.connect(window.location.href);\n    socket.on('greet', function (data) {\n      console.log(data);\n      socket.emit('respond', { message: 'Hey there, server!' });\n    });\nNote: Notice the path of the socket.io.js, you don't actually\nhave to have socket.io.js file anywhere in your project; it will be generated\nautomatically at runtime.\nIf you want to have JavaScript code separate from templates, move that inline\nscript code into main.js, inside the $(document).ready() function:\n$(document).ready(function() {\n\n  // Place JavaScript code here...\n  let socket = io.connect(window.location.href);\n  socket.on('greet', function (data) {\n    console.log(data);\n    socket.emit('respond', { message: 'Hey there, server!' });\n  });\n\n});\nAnd we are done!\nCheatsheets\n ES6 Cheatsheet\nDeclarations\nDeclares a read-only named constant.\nconst name = 'yourName';\nDeclares a block scope local variable.\nlet index = 0;\nTemplate Strings\nUsing the `${}` syntax, strings can embed expressions.\nconst name = 'Oggy';\nconst age = 3;\n\nconsole.log(`My cat is named ${name} and is ${age} years old.`);\nModules\nTo import functions, objects or primitives exported from an external module. These are the most common types of importing.\nconst name = require('module-name');\nconst { foo, bar } = require('module-name');\nTo export functions, objects or primitives from a given file or module.\nmodule.exports = { myFunction };\nmodule.exports.name = 'yourName';\nmodule.exports = myFunctionOrClass;\nSpread Operator\nThe spread operator allows an expression to be expanded in places where multiple arguments (for function calls) or multiple elements (for array literals) are expected.\nmyFunction(...iterableObject);\n<ChildComponent {...this.props} />\nPromises\nA Promise is used in asynchronous computations to represent an operation that hasn't completed yet, but is expected in the future.\nvar p = new Promise(function(resolve, reject) { });\nThe catch() method returns a Promise and deals with rejected cases only.\np.catch(function(reason) { /* handle rejection */ });\nThe then() method returns a Promise. It takes two arguments: callback for the success & failure cases.\np.then(function(value) { /* handle fulfillment */ }, function(reason) { /* handle rejection */ });\nThe Promise.all(iterable) method returns a promise that resolves when all of the promises in the iterable argument have resolved or rejects with the reason of the first passed promise that rejects.\nPromise.all([p1, p2, p3]).then(function(values) { console.log(values) });\nArrow Functions\nArrow function expression. Shorter syntax & lexically binds the this value. Arrow functions are anonymous.\nsingleParam => { statements }\n() => { statements }\n(param1, param2) => expression\nconst arr = [1, 2, 3, 4, 5];\nconst squares = arr.map(x => x * x);\nClasses\nThe class declaration creates a new class using prototype-based inheritance.\nclass Person {\n  constructor(name, age, gender) {\n    this.name   = name;\n    this.age    = age;\n    this.gender = gender;\n  }\n\n  incrementAge() {\n    this.age++;\n  }\n}\n\ud83c\udf81 Credits: DuckDuckGo and @DrkSephy.\n\ud83d\udd1d back to top\n JavaScript Date Cheatsheet\nUnix Timestamp (seconds)\nMath.floor(Date.now() / 1000);\nmoment().unix();\n\nAdd 30 minutes to a Date object\nvar now = new Date();\nnow.setMinutes(now.getMinutes() + 30);\nmoment().add(30, 'minutes');\n\nDate Formatting\n// DD-MM-YYYY\nvar now = new Date();\n\nvar DD = now.getDate();\nvar MM = now.getMonth() + 1;\nvar YYYY = now.getFullYear();\n\nif (DD < 10) {\n  DD = '0' + DD;\n}\n\nif (MM < 10) {\n  MM = '0' + MM;\n}\n\nconsole.log(MM + '-' + DD + '-' + YYYY); // 03-30-2016\nconsole.log(moment(new Date(), 'MM-DD-YYYY'));\n\n// hh:mm (12 hour time with am/pm)\nvar now = new Date();\nvar hours = now.getHours();\nvar minutes = now.getMinutes();\nvar amPm = hours >= 12 ? 'pm' : 'am';\n\nhours = hours % 12;\nhours = hours ? hours : 12;\nminutes = minutes < 10 ? '0' + minutes : minutes;\n\nconsole.log(hours + ':' + minutes + ' ' + amPm); // 1:43 am\nconsole.log(moment(new Date(), 'hh:mm A'));\n\nNext week Date object\nvar today = new Date();\nvar nextWeek = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);\nmoment().add(7, 'days');\n\nYesterday Date object\nvar today = new Date();\nvar yesterday = date.setDate(date.getDate() - 1);\nmoment().add(-1, 'days');\n\n\ud83d\udd1d back to top\nMongoose Cheatsheet\nFind all users:\nUser.find((err, users) => {\n  console.log(users);\n});\nFind a user by email:\nlet userEmail = 'example@gmail.com';\nUser.findOne({ email: userEmail }, (err, user) => {\n  console.log(user);\n});\nFind 5 most recent user accounts:\nUser\n  .find()\n  .sort({ _id: -1 })\n  .limit(5)\n  .exec((err, users) => {\n    console.log(users);\n  });\nGet the total count of a field from all documents:\nLet's suppose that each user has a votes field and you would like to count\nthe total number of votes in your database across all users. One very\ninefficient way would be to loop through each document and manually accumulate\nthe count. Or you could use MongoDB Aggregation Framework instead:\nUser.aggregate({ $group: { _id: null, total: { $sum: '$votes' } } }, (err, votesCount)  => {\n  console.log(votesCount.total);\n});\n\ud83d\udd1d back to top\nDocker\nYou will need docker and docker-compose installed to build the application.\n\n\nDocker installation\n\n\nCommon problems setting up docker\n\n\nAfter installing docker, start the application with the following commands :\n# To build the project for the first time or when you add dependencies\ndocker-compose build web\n\n# To start the application (or to restart after making changes to the source code)\ndocker-compose up web\n\n\nTo view the app, find your docker IP address + port 8080 ( this will typically be http://localhost:8080/ ).  To use a port other than 8080, you would need to modify the port in app.js, Dockerfile, and docker-compose.yml.\nDeployment\nOnce you are ready to deploy your app, you will need to create an account with a cloud platform to host it. These are not the only choices, but they are my top picks. From my experience, the easiest way to get started is with Heroku. It will automatically restart your Node.js process when it crashes, has zero-downtime deployments and supports custom domains on free accounts. Additionally, you can\ncreate an account with MongoDB Atlas and then pick one of the 4 providers below.\nAgain, there are plenty of other choices, and you are not limited to just the ones\nlisted below.\n1-Step Deployment with Heroku\n\n\nDownload and install Heroku Toolbelt\nIn a terminal, run heroku login and enter your Heroku credentials\nFrom your app directory run heroku create\nRun heroku addons:create mongolab.  This will set up the mLab add-on and configure the MONGODB_URI environment variable in your Heroku app for you.\nLastly, do git push heroku master.  Done!\n\nNote: To install Heroku add-ons your account must be verified.\n\nHosted MongoDB Atlas\n\n\nGo to https://www.mongodb.com/cloud/atlas\nClick the green Get started free button\nFill in your information then hit Get started free\nYou will be redirected to Create New Cluster page.\nSelect a Cloud Provider and Region (such as AWS and a free tier region)\nSelect cluster Tier to Free Shared Clusters\nGive Cluster a name (default: Cluster0)\nClick on green \u26a1\ufe0fCreate Cluster button\nNow, to access your database you need to create a DB user. To create a new MongoDB user, from the Clusters view, select the Security tab\nUnder the MongoDB Users tab, click on +Add New User\nFill in a username and password and give it either Atlas Admin User Privilege\nNext, you will need to create an IP address whitelist and obtain the connection URI.  In the Clusters view, under the cluster details (i.e. SANDBOX - Cluster0), click on the CONNECT button.\nUnder section (1) Check the IP Whitelist, click on ALLOW ACCESS FROM ANYWHERE. The form will add a field with 0.0.0.0/0.  Click SAVE to save the 0.0.0.0/0 whitelist.\nUnder section (2) Choose a connection method, click on Connect Your Application\nIn the new screen, select Node.js as Driver and version 2.2.12 or later. WARNING: Do not pick 3.0 or later since connect-mongo can't handle mongodb+srv:// connection strings.\nFinally, copy the URI connection string and replace the URI in MONGODB_URI of .env.example with this URI string.  Make sure to replace the  with the db User password that you created under the Security tab.\nNote that after some of the steps in the Atlas UI, you may see a banner stating We are deploying your changes.  You will need to wait for the deployment to finish before using the DB in your application.\n\nNote: As an alternative to MongoDB Atlas, there is also Compose.\n\nOpenShift\n\n**NOTE** *These instructions might be out of date due to changes in OpenShift. Heroku is currently a good free alternative.  If you the new process, please feel free to help us update this page*\n\nFirst, install this Ruby gem: sudo gem install rhc \ud83d\udc8e\nRun rhc login and enter your OpenShift credentials\nFrom your app directory run rhc app create MyApp nodejs-0.10\nNote: MyApp is the name of your app (no spaces)\nOnce that is done, you will be provided with URL, SSH and Git Remote links\nVisit provided URL, and you should see the Welcome to your Node.js application on OpenShift page\nCopy and paste Git Remote into git remote add openshift YOUR_GIT_REMOTE\nBefore you push your app, you need to do a few modifications to your code\n\nAdd these two lines to app.js, just place them anywhere before app.listen():\nvar IP_ADDRESS = process.env.OPENSHIFT_NODEJS_IP || '127.0.0.1';\nvar PORT = process.env.OPENSHIFT_NODEJS_PORT || 8080;\nThen change app.listen() to:\napp.listen(PORT, IP_ADDRESS,() => {\n  console.log(`Express server listening on port ${PORT} in ${app.settings.env} mode`);\n});\nAdd this to package.json, after name and version. This is necessary because, by default, OpenShift looks for server.js file. And by specifying supervisor app.js it will automatically restart the server when node.js process crashes.\n\"main\": \"app.js\",\n\"scripts\": {\n  \"start\": \"supervisor app.js\"\n},\n\nFinally, you can now push your code to OpenShift by running git push -f openshift master\nNote: The first time you run this command, you have to pass -f (force) flag because OpenShift creates a dummy server with the welcome page when you create a new Node.js app. Passing -f flag will override everything with your Hackathon Starter project repository. Do not run git pull as it will create unnecessary merge conflicts.\nAnd you are done!\n\n\nAzure\n\n**NOTE** *Beyond the initial 12 month trial of Azure, the platform does not seem to offer a free tier for hosting NodeJS apps.  If you are looking for a free tier service to host your app, Heroku might be a better choice at this point*\n\nLogin to Windows Azure Management Portal\nClick the + NEW button on the bottom left of the portal\nClick COMPUTE, then WEB APP, then QUICK CREATE\nEnter a name for URL and select the datacenter REGION for your web site\nClick on CREATE WEB APP button\nOnce the web site status changes to Running, click on the name of the web site to access the Dashboard\nAt the bottom right of the Quickstart page, select Set up a deployment from source control\nSelect Local Git repository from the list, and then click the arrow\nTo enable Git publishing, Azure will ask you to create a user name and password\nOnce the Git repository is ready, you will be presented with a GIT URL\nInside your Hackathon Starter directory, run git remote add azure [Azure Git URL]\nTo push your changes run git push azure master\nNote: You will be prompted for the password you created earlier\nOn Deployments tab of your Windows Azure Web App, you will see the deployment history\n\n\nIBM Bluemix Cloud Platform\nNOTE At this point it appears that Bluemix's free tier to host NodeJS apps is limited to 30 days.  If you are looking for a free tier service to host your app, Heroku might be a better choice at this point\n\n\nCreate a Bluemix Account\nSign up for Bluemix, or use an existing account.\n\n\nDownload and install the Cloud Foundry CLI to push your applications to Bluemix.\n\n\nCreate a manifest.yml file in the root of your application.\n\n\napplications:\n- name:      <your-app-name>\n  host:      <your-app-host>\n  memory:    128M\n  services:\n  - myMongo-db-name\n\nThe host you use will determinate your application URL initially, e.g. <host>.mybluemix.net.\nThe service name 'myMongo-db-name' is a declaration of your MongoDB service.  If you are using other services like Watson for example, then you would declare them the same way.\n\nConnect and login to Bluemix via the Cloud-foundry CLI\n\n$ cf login -a https://api.ng.bluemix.net\n\n\nCreate a MongoDB service\n\n$ cf create-service mongodb 100 [your-service-name]\n\nNote: this is a free and experiment verion of MongoDB instance.\nUse the MongoDB by Compose instance for production applications:\n$ cf create-service compose-for-mongodb Standard [your-service-name]'\n\n\n\nPush the application\n$ cf push\n\n$ cf env <your-app-name >\n(To view the *environment variables* created for your application)\n\n\n\n\nDone, now go to the staging domain (<host>.mybluemix.net) and see your app running.\nCloud Foundry Commands\nMore Bluemix samples\nSimple ToDo app in a programming language of your choice\nIBM Watson\nBe sure to check out the full list of Watson services to forwarder enhance your application functionality with a little effort. Watson services are easy to get going; it is simply a RESTful API call. Here is an example of a Watson Toner Analyzer to understand the emotional context of a piece of text that you send to Watson.\nWatson catalog of services\n Conversation -     Quickly build and deploy chatbots and virtual agents across a variety of channels, including mobile devices, messaging platforms, and even robots.\n Discovery - Unlock hidden value in data to find answers, monitor trends and surface patterns with the world\u2019s most advanced cloud-native insight engine.\n Language Translator - Translate text from one language to another.\n Natural Language Classifier - Interpret and classify natural language with confidence.\n Natural Language Understanding - Analyze text to extract meta-data from content such as concepts, entities, keywords and more.\n Personality Insights - Predict personality characteristics, needs and values through written text.\n Speech to Text - Convert audio and voice into written text for quick understanding of content.\n Text to Speech - Convert written text into natural sounding audio in a variety of languages and voices.\n Tone Analyzer - Understand emotions, social tendencies and perceived writing style.\n Visual Recognition - Tag, classify and search visual content using machine learning.\nClick here for live demos of each Watson service.\n\nGoogle Cloud Platform\n\n\n\nDownload and install Node.js\n\n\nSelect or create a Google Cloud Platform Console project\n\n\nEnable billing for your project (there's a $300 free trial)\n\n\nInstall and initialize the Google Cloud SDK\n\n\nCreate an app.yaml file at the root of your hackathon-starter folder with the following contents:\nruntime: nodejs\nenv: flex\nmanual_scaling:\n  instances: 1\n\n\nMake sure you've set MONGODB_URI in .env.example\n\n\nRun the following command to deploy the hackathon-starter app:\ngcloud app deploy\n\n\nMonitor your deployed app in the Cloud Console\n\n\nView the logs for your app in the Cloud Console\n\n\nProduction\nIf you are starting with this boilerplate to build an application for prod deployment, or if after your hackathon you would like to get your project hardened for production use, see prod-checklist.md.\nChangelog\nYou can find the changelog for the project in: CHANGELOG.md\nContributing\nIf something is unclear, confusing, or needs to be refactored, please let me know.\nPull requests are always welcome, but due to the opinionated nature of this\nproject, I cannot accept every pull request. Please open an issue before\nsubmitting a pull request. This project uses\nAirbnb JavaScript Style Guide with a\nfew minor exceptions. If you are submitting a pull request that involves\nPug templates, please make sure you are using spaces, not tabs.\nLicense\nThe MIT License (MIT)\nCopyright (c) 2014-2019 Sahat Yalkabov\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"}]