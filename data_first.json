[{"repo": "freeCodeCamp/freeCodeCamp", "language": "JavaScript", "readme": "\n\n\n\n\n\nfreeCodeCamp.org's open-source codebase and curriculum\nfreeCodeCamp.org is a friendly community where you can learn to code for free. It is run by a donor-supported 501(c)(3) nonprofit to help  millions of busy adults transition into tech. Our community has already helped more than 10,000 people get their first developer job.\nOur full-stack web development curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.\nTable of Contents\n\nCertifications\nThe Learning Platform\nReporting Bugs and Issues\nReporting Security Issues\nContributing\nPlatform, Build and Deployment Status\nLicense\n\nCertifications\nfreeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginning programmer around 300 hours to earn.\nEach of these 30 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you've fulfilled all the user stories before you submit it.\nYou can pull in these test suites through freeCodeCamp's CDN. This means you can build these projects on websites like CodePen and Glitch - or even on your local computer's development environment.\nOnce you\u2019ve earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or r\u00e9sum\u00e9. And when your prospective employers or freelance clients click that link, they\u2019ll see a verified certification specific to you.\nThe one exception to this is if we discover violations of our Academic Honesty Policy. When we catch people unambiguously plagiarizing (submitting other people's code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.\nHere are our six core certifications:\n1. Responsive Web Design Certification\n\nBasic HTML and HTML5\nBasic CSS\nApplied Visual Design\nApplied Accessibility\nResponsive Web Design Principles\nCSS Flexbox\nCSS Grid\n\n\nProjects: Tribute Page, Survey Form, Product Landing Page, Technical Documentation Page, Personal Portfolio Webpage\n\n2. JavaScript Algorithms and Data Structures Certification\n\nBasic JavaScript\nES6\nRegular Expressions\nDebugging\nBasic Data Structures\nAlgorithm Scripting\nObject-Oriented Programming\nFunctional Programming\nIntermediate Algorithm Scripting\n\n\nProjects: Palindrome Checker, Roman Numeral Converter, Caesar's Cipher, Telephone Number Validator, Cash Register\n\n3. Front End Libraries Certification\n\nBootstrap\njQuery\nSass\nReact\nRedux\nReact and Redux\n\n\nProjects: Random Quote Machine, Markdown Previewer, Drum Machine, JavaScript Calculator, Pomodoro Clock\n\n4. Data Visualization Certification\n\nData Visualization with D3\nJSON APIs and Ajax\n\n\nProjects: Bar Chart, Scatterplot Graph, Heat Map, Choropleth Map, Treemap Diagram\n\n5. APIs and Microservices Certification\n\nManaging Packages with Npm\nBasic Node and Express\nMongoDB and Mongoose\n\n\nProjects: Timestamp Microservice, Request Header Parser, URL Shortener, Exercise Tracker, File Metadata Microservice\n\n6. Information Security and Quality Assurance Certification\n\nInformation Security with HelmetJS\nQuality Assurance and Testing with Chai\nAdvanced Node and Express\n\n\nProjects: Metric-Imperial Converter, Issue Tracker, Personal Library, Stock Price Checker, Anonymous Message Board\n\nFull Stack Development Certification\nOnce you have earned all 6 of these certifications, you'll be able to claim your freeCodeCamp.org Full Stack Development Certification. This final distinction signifies that you\u2019ve completed around 1,800 hours of coding with a wide range of web development tools.\nLegacy Certifications\nWe also have 3 legacy certifications from our 2015 curriculum, which are still available. All of the required projects for these legacy certifications will remain available on freeCodeCamp.org.\n\nLegacy Front End Development Certification\nLegacy Data Visualization Certification\nLegacy Back End Development Certification\n\nThe Learning Platform\nThis code is running live at freeCodeCamp.org.\nOur community also has:\n\nA forum where you can usually get programming help or project feedback within hours.\nA YouTube channel with free courses on Python, SQL, Android, and a wide variety of other technologies.\nA podcast with technology insights and inspiring stories from developers.\nA Developer News publication, a free, open source, no-ads place to cross-post your blog articles.\n\n\nJoin our community here.\n\nReporting Bugs and Issues\nIf you think you've found a bug, first read the how to report a bug article and follow its instructions.\nIf you're confident it's a new bug and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue. Be sure to include as much information as possible so we can reproduce the bug.\nReporting Security Issues\nIf you think you have found a vulnerability, please report responsibly. Don't create GitHub issues for security issues. Instead, please send an email to security@freecodecamp.org and we'll look into it immediately.\nContributing\n\nPlease follow these steps to contribute.\n\nPlatform, Build and Deployment Status\nThe general platform status for all our applications is available at status.freecodecamp.org. The build and deployment status for the code is available in our DevOps Guide.\nLicense\nCopyright \u00a9 2019 freeCodeCamp.org\nThe content of this repository is bound by the following licenses:\n\nThe computer software is licensed under the BSD-3-Clause license.\nThe learning resources in the /curriculum directory including their subdirectories thereon are licensed under the CC-BY-SA-4.0 license.\n\n\n"}, {"repo": "996icu/996.ICU", "language": "Rust", "readme": "\n996.ICU\nPlease note that there exists NO other official account, app or merchandise except for the official domain and this repository.\n\n\u4e2d\u6587\u7248\n\nThe name 996.ICU refers to \"Work by '996', sick in ICU\", an ironic saying among Chinese developers, which means that by following the \"996\" work schedule, you are risking yourself getting into the ICU (Intensive Care Unit).\n\n\n\n\nRelated press coverage:\n\nRadiiChina: GitHub Protest Over Chinese Tech Companies\u2019 \u201c996\u201d Culture Goes Viral\nFinancial Times: China tech worker protest against long working hours goes viral\nWired: How github is helping overworked Chinese programmers\n\nSee a full list of press\nWhat is 996?\nA \"996\" work schedule refers to an unofficial work schedule (9 a.m.\u20139 p.m., 6 days per week) that has been gaining popularity. Serving a company that encourages the \"996\" work schedule usually means working for at least 60 hours per week.\nVisit 996 working hour system on Wikipedia for more details.\nWhat can I do?\n\nUpdate this list with evidence to help every worker.  Third party perfect list channel\nAdd this badge to your project to support 996.ICU.\nLicense your awesome projects with the Anti 996 License.\nAdd proposals to give advice about the development of 996.ICU.\nGo home at 6 pm without feeling sorry.\n\nVoices\nState Media\n\nThe 996 shall disappear\n\nCapitalists\n\nJack Ma, founder of Alibaba: It is a huge blessing to be able to '996'.\nRichard Liu, founder of JD.com: We will never force our employee to work as '996'.\n(However, as a result many anonymous employees claim that there is a list of departments which ranked them by overtime hours. The shortest will take punishments. And the leaders never leave evidences when asking employees to work as '996'.)\nBai Ya, founder of Youzan: This will definitely be a right decision when we look back in a few years.\n\nDevelopers\n\nGuido van Rossum, founder of Python: The '996' working schedule is inhumane.\n\nPrinciples and purposes\n\n\n996.ICU is an initiative initiated by IT practitioners. We welcome people from other fields and other countries to join the discussion.\n\n\nThis is not a political movement. We firmly uphold the labor law and request employers to respect the legitimate rights and interests of their employees.\n\n\nIt is great progress from closed source to open source, and it will also be great progress from open source to emphasizing labor rights at the same time. What we want is to create an open source software license that advocates workers' rights.\n\n\nWe are willing to hear all positive and constructive proposals and advocate mature and responsible speech.\n\n\nExpanding influence\nPlease feel free to translate 996.ICU's contents, adjust the format, add some contents or fix grammatical errors. Please note that adding too many translations is getting off the track.\nCommunity powers\n\n955.WLB is a repo that maintains a whitelist of 955 work-life balanced companies.\n996.LIST is a repo of a rank list of 996 companies and 955 companies.\n996.law This is a manual for workers who want to conduct labor arbitration and litigation on their own.\n996.YAOCL Yet Another Overtime Corps List, current another anonymous voting list.\n996.Leave encourages & introduces working overseas.\n996.RIP Old news never vanished.\n996.Petition initiates petitions by sending open letters to relevant government departments.\n996.action Supporters are encouraged to participate in public supervision.\n996.avengers adds 996ICU and 955WLB tags on recruitment websites.\n996.OD occupational diseases are the forewarning of ICU.\n996.Q A repository to collect mocks, jokes, or gags about 996.\n996.survey A survey of the status of 996.\nsupport.996.ICU Microsoft and GitHub Workers Support 996.ICU\n996.Blockchain Blockchain for the 996 evidence\n996.Error Collect \"996\" exceptions written in various languages and can be used directly in the project.\n\nWhere are the issues?\nEven with interaction limits on, the issues area was totally out of control.\nSo I personally decided to switch it off, not by GitHub or others.\nLicense\nAnti-996 License\n\n\nThe purpose of this license is to prevent anti-labour-law companies from using the software or codes under the license, and force those companies to weigh their way of working\n\n\nSee a full list of projects under Anti-996 License\n\n\nThis draft is adapted from the MIT license. For a more detailed explanation, please see Wiki. This license is designed to be compatible with all major open source licenses.\n\n\nFor law professionals or anyone who is willing to contribute to future version directly, please go to Anti-996-License-1.0. Thank you.\n\n\nContact\nYou can reach me by E-mail if you need.\n\n"}, {"repo": "vuejs/vue", "language": "JavaScript", "readme": "\n\n\n\n\n\n\n\n\n\n\n\nSupporting Vue.js\nVue.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome backers. If you'd like to join them, please consider:\n\nBecome a backer or sponsor on Patreon.\nBecome a backer or sponsor on Open Collective.\nOne-time donation via PayPal or crypto-currencies.\n\nWhat's the difference between Patreon and OpenCollective?\nFunds donated via Patreon go directly to support Evan You's full-time work on Vue.js. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events. Your name/logo will receive proper recognition and exposure by donating on either platform.\nSpecial Sponsors\n\n\n\n\n\nPlatinum Sponsors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlatinum Sponsors (China)\n\n\n\n\n\n\n\n\n\n\n\nGold Sponsors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors via Open Collective\nPlatinum\n\n\nGold\n\n\n\n\n\n\nIntroduction\nVue (pronounced /vju\u02d0/, like view) is a progressive framework for building user interfaces. It is designed from the ground up to be incrementally adoptable, and can easily scale between a library and a framework depending on different use cases. It consists of an approachable core library that focuses on the view layer only, and an ecosystem of supporting libraries that helps you tackle complexity in large Single-Page Applications.\nBrowser Compatibility\nVue.js supports all browsers that are ES5-compliant (IE8 and below are not supported).\nEcosystem\n\n\n\nProject\nStatus\nDescription\n\n\n\n\nvue-router\n\nSingle-page application routing\n\n\nvuex\n\nLarge-scale state management\n\n\nvue-cli\n\nProject scaffolding\n\n\nvue-loader\n\nSingle File Component (*.vue file) loader for webpack\n\n\nvue-server-renderer\n\nServer-side rendering support\n\n\nvue-class-component\n\nTypeScript decorator for a class-based API\n\n\nvue-rx\n\nRxJS integration\n\n\nvue-devtools\n\nBrowser DevTools extension\n\n\n\nDocumentation\nTo check out live examples and docs, visit vuejs.org.\nQuestions\nFor questions and support please use the official forum or community chat. The issue list of this repo is exclusively for bug reports and feature requests.\nIssues\nPlease make sure to read the Issue Reporting Checklist before opening an issue. Issues not conforming to the guidelines may be closed immediately.\nChangelog\nDetailed changes for each release are documented in the release notes.\nStay In Touch\n\nTwitter\nBlog\nJob Board\n\nContribution\nPlease make sure to read the Contributing Guide before making a pull request. If you have a Vue-related project/component/tool, add it with a pull request to this curated list!\nThank you to all the people who already contributed to Vue!\n\nLicense\nMIT\nCopyright (c) 2013-present, Yuxi (Evan) You\n\n"}, {"repo": "facebook/react", "language": "JavaScript", "readme": "\nReact \u00b7    \nReact is a JavaScript library for building user interfaces.\n\nDeclarative: React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.\nComponent-Based: Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.\nLearn Once, Write Anywhere: We don't make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using React Native.\n\nLearn how to use React in your own project.\nInstallation\nReact has been designed for gradual adoption from the start, and you can use as little or as much React as you need:\n\nUse Online Playgrounds to get a taste of React.\nAdd React to a Website as a <script> tag in one minute.\nCreate a New React App if you're looking for a powerful JavaScript toolchain.\n\nYou can use React as a <script> tag from a CDN, or as a react package on npm.\nDocumentation\nYou can find the React documentation on the website.\nCheck out the Getting Started page for a quick overview.\nThe documentation is divided into several sections:\n\nTutorial\nMain Concepts\nAdvanced Guides\nAPI Reference\nWhere to Get Support\nContributing Guide\n\nYou can improve it by sending pull requests to this repository.\nExamples\nWe have several examples on the website. Here is the first one to get you started:\nfunction HelloMessage({ name }) {\n  return <div>Hello {name}</div>;\n}\n\nReactDOM.render(\n  <HelloMessage name=\"Taylor\" />,\n  document.getElementById('container')\n);\nThis example will render \"Hello Taylor\" into a container on the page.\nYou'll notice that we used an HTML-like syntax; we call it JSX. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML. If you're using React as a <script> tag, read this section on integrating JSX; otherwise, the recommended JavaScript toolchains handle it automatically.\nContributing\nThe main purpose of this repository is to continue to evolve React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.\nCode of Conduct\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the full text so that you can understand what actions will and will not be tolerated.\nContributing Guide\nRead our contributing guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.\nGood First Issues\nTo help you get your feet wet and get you familiar with our contribution process, we have a list of good first issues that contain bugs which have a relatively limited scope. This is a great place to get started.\nLicense\nReact is MIT licensed.\n\n"}, {"repo": "tensorflow/tensorflow", "language": "C++", "readme": "\n\n\n\n\n\n\nDocumentation\n\n\n\n\n\n\n\n\nTensorFlow is an end-to-end open source platform\nfor machine learning. It has a comprehensive, flexible ecosystem of\ntools,\nlibraries, and\ncommunity resources that lets\nresearchers push the state-of-the-art in ML and developers easily build and\ndeploy ML-powered applications.\nTensorFlow was originally developed by researchers and engineers working on the\nGoogle Brain team within Google's Machine Intelligence Research organization to\nconduct machine learning and deep neural networks research. The system is\ngeneral enough to be applicable in a wide variety of other domains, as well.\nTensorFlow provides stable Python\nand C++ APIs, as well as\nnon-guaranteed backward compatible API for\nother languages.\nKeep up-to-date with release announcements and security updates by subscribing\nto\nannounce@tensorflow.org.\nSee all the mailing lists.\nInstall\nSee the TensorFlow install guide for the\npip package, to\nenable GPU support, use a\nDocker container, and\nbuild from source.\nTo install the current release for CPU-only:\n$ pip install tensorflow\n\nUse the GPU package for\nCUDA-enabled GPU cards (Ubuntu and\nWindows):\n$ pip install tensorflow-gpu\n\nNightly binaries are available for testing using the\ntf-nightly and\ntf-nightly-gpu packages on PyPi.\nTry your first TensorFlow program\n$ python\n>>> import tensorflow as tf\n>>> tf.add(1, 2).numpy()\n3\n>>> hello = tf.constant('Hello, TensorFlow!')\n>>> hello.numpy()\n'Hello, TensorFlow!'\nFor more examples, see the\nTensorFlow tutorials.\nContribution guidelines\nIf you want to contribute to TensorFlow, be sure to review the\ncontribution guidelines. This project adheres to TensorFlow's\ncode of conduct. By participating, you are expected to\nuphold this code.\nWe use GitHub issues for\ntracking requests and bugs, please see\nTensorFlow Discuss\nfor general questions and discussion, and please direct specific questions to\nStack Overflow.\nThe TensorFlow project strives to abide by generally accepted best practices in\nopen-source software development:\n\n\nContinuous build status\nOfficial Builds\n\n\n\nBuild Type\nStatus\nArtifacts\n\n\n\n\nLinux CPU\n\nPyPI\n\n\nLinux GPU\n\nPyPI\n\n\nLinux XLA\n\nTBA\n\n\nmacOS\n\nPyPI\n\n\nWindows CPU\n\nPyPI\n\n\nWindows GPU\n\nPyPI\n\n\nAndroid\n\n\n\n\nRaspberry Pi 0 and 1\n \nPy2 Py3\n\n\nRaspberry Pi 2 and 3\n \nPy2 Py3\n\n\n\nCommunity Supported Builds\n\n\n\nBuild Type\nStatus\nArtifacts\n\n\n\n\nLinux AMD ROCm GPU Nightly\n\nNightly\n\n\nLinux AMD ROCm GPU Stable Release\n\nRelease 1.15 / 2.x\n\n\nLinux s390x Nightly\n\nNightly\n\n\nLinux s390x CPU Stable Release\n\nRelease\n\n\nLinux ppc64le CPU Nightly\n\nNightly\n\n\nLinux ppc64le CPU Stable Release\n\nRelease 1.15 / 2.x\n\n\nLinux ppc64le GPU Nightly\n\nNightly\n\n\nLinux ppc64le GPU Stable Release\n\nRelease 1.15 / 2.x\n\n\nLinux CPU with Intel\u00ae MKL-DNN Nightly\n\nNightly\n\n\nLinux CPU with Intel\u00ae MKL-DNN Stable Release\n\nRelease 1.15 / 2.x\n\n\nRed Hat\u00ae Enterprise Linux\u00ae 7.6 CPU & GPU  Python 2.7, 3.6\n\n1.13.1 PyPI\n\n\n\nResources\n\nTensorFlow.org\nTensorFlow tutorials\nTensorFlow official models\nTensorFlow examples\nTensorFlow in Practice from Coursera\nIntro to TensorFlow for Deep Learning from Udacity\nIntroduction to TensorFlow Lite from Udacity\nTensorFlow blog\nTensorFlow Twitter\nTensorFlow YouTube\nTensorFlow roadmap\nTensorFlow white papers\nTensorBoard visualization toolkit\n\nLearn more about the\nTensorFlow community and how to\ncontribute.\nLicense\nApache License 2.0\n\n"}, {"repo": "twbs/bootstrap", "language": "JavaScript", "readme": "\n\n\n\n\n\nBootstrap\n\n  Sleek, intuitive, and powerful front-end framework for faster and easier web development.\n  \nExplore Bootstrap docs \u00bb\n\n\nReport bug\n  \u00b7\n  Request feature\n  \u00b7\n  Themes\n  \u00b7\n  Blog\n\nTable of contents\n\nQuick start\nStatus\nWhat's included\nBugs and feature requests\nDocumentation\nContributing\nCommunity\nVersioning\nCreators\nThanks\nCopyright and license\n\nQuick start\nSeveral quick start options are available:\n\nDownload the latest release.\nClone the repo: git clone https://github.com/twbs/bootstrap.git\nInstall with npm: npm install bootstrap\nInstall with yarn: yarn add bootstrap@4.3.1\nInstall with Composer: composer require twbs/bootstrap:4.3.1\nInstall with NuGet: CSS: Install-Package bootstrap Sass: Install-Package bootstrap.sass\n\nRead the Getting started page for information on the framework contents, templates and examples, and more.\nStatus\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat's included\nWithin the download you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this:\nbootstrap/\n\u2514\u2500\u2500 dist/\n    \u251c\u2500\u2500 css/\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-utilities.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.css\n    \u2502   \u251c\u2500\u2500 bootstrap.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.min.css\n    \u2502   \u2514\u2500\u2500 bootstrap.min.css.map\n    \u2514\u2500\u2500 js/\n        \u251c\u2500\u2500 bootstrap.bundle.js\n        \u251c\u2500\u2500 bootstrap.bundle.js.map\n        \u251c\u2500\u2500 bootstrap.bundle.min.js\n        \u251c\u2500\u2500 bootstrap.bundle.min.js.map\n        \u251c\u2500\u2500 bootstrap.esm.js\n        \u251c\u2500\u2500 bootstrap.esm.js.map\n        \u251c\u2500\u2500 bootstrap.esm.min.js\n        \u251c\u2500\u2500 bootstrap.esm.min.js.map\n        \u251c\u2500\u2500 bootstrap.js\n        \u251c\u2500\u2500 bootstrap.js.map\n        \u251c\u2500\u2500 bootstrap.min.js\n        \u2514\u2500\u2500 bootstrap.min.js.map\n\nWe provide compiled CSS and JS (bootstrap.*), as well as compiled and minified CSS and JS (bootstrap.min.*). source maps (bootstrap.*.map) are available for use with certain browsers' developer tools. Bundled JS files (bootstrap.bundle.js and minified bootstrap.bundle.min.js) include Popper.\nBugs and feature requests\nHave a bug or a feature request? Please first read the issue guidelines and search for existing and closed issues. If your problem or idea is not addressed yet, please open a new issue.\nDocumentation\nBootstrap's documentation, included in this repo in the root directory, is built with Hugo and publicly hosted on GitHub Pages at https://getbootstrap.com/. The docs may also be run locally.\nDocumentation search is powered by Algolia's DocSearch. Working on our search? Be sure to set debug: true in site/assets/js/src/search.js file.\nRunning documentation locally\n\nRun npm install to install the Node.js dependencies, including Hugo (the site builder).\nRun npm run test (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.\nFrom the root /bootstrap directory, run npm run docs-serve in the command line.\nOpen http://localhost:9001/ in your browser, and voil\u00e0.\n\nLearn more about using Hugo by reading its documentation.\nDocumentation for previous releases\nYou can find all our previous releases docs on https://getbootstrap.com/docs/versions/.\nPrevious releases and their documentation are also available for download.\nContributing\nPlease read through our contributing guidelines. Included are directions for opening issues, coding standards, and notes on development.\nMoreover, if your pull request contains JavaScript patches or features, you must include relevant unit tests. All HTML and CSS should conform to the Code Guide, maintained by Mark Otto.\nEditor preferences are available in the editor config for easy use in common text editors. Read more and download plugins at https://editorconfig.org/.\nCommunity\nGet updates on Bootstrap's development and chat with the project maintainers and community members.\n\nFollow @getbootstrap on Twitter.\nRead and subscribe to The Official Bootstrap Blog.\nJoin the official Slack room.\nChat with fellow Bootstrappers in IRC. On the irc.freenode.net server, in the ##bootstrap channel.\nImplementation help may be found at Stack Overflow (tagged bootstrap-4).\nDevelopers should use the keyword bootstrap on packages which modify or add to the functionality of Bootstrap when distributing through npm or similar delivery mechanisms for maximum discoverability.\n\nVersioning\nFor transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under the Semantic Versioning guidelines. Sometimes we screw up, but we adhere to those rules whenever possible.\nSee the Releases section of our GitHub project for changelogs for each release version of Bootstrap. Release announcement posts on the official Bootstrap blog contain summaries of the most noteworthy changes made in each release.\nCreators\nMark Otto\n\nhttps://twitter.com/mdo\nhttps://github.com/mdo\n\nJacob Thornton\n\nhttps://twitter.com/fat\nhttps://github.com/fat\n\nThanks\n\n\n\nThanks to BrowserStack for providing the infrastructure that allows us to test in real browsers!\nBackers\nThank you to all our backers! \ud83d\ude4f [Become a backer]\n\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\nCopyright and license\nCode and documentation copyright 2011-2019 the Bootstrap Authors and Twitter, Inc. Code released under the MIT License. Docs released under Creative Commons.\n\n"}, {"repo": "EbookFoundation/free-programming-books", "language": "None", "readme": "\nThis page is available as an easy-to-read website at https://ebookfoundation.github.io/.\nList of Free Learning Resources \nView the English list\nIntro\nThis list was originally a clone of stackoverflow - List of Freely Available Programming Books with contributions from Karan Bhangui and George Stocker.\nThe list was moved to GitHub by Victor Felder for collaborative updating and maintenance. It has grown to become one of the most popular repositories on Github, with over 100,000 stars, over 4500 commits, over 950 contributors, and over 25,000 forks.\nThe repo is now administered by the Free Ebook Foundation, a not-for-profit organization devoted to promoting the creation, distribution, archiving and sustainability of free ebooks. Donations to the Free Ebook Foundation are tax-deductible in the US.\nHow To Contribute\nPlease read CONTRIBUTING. If you're new to Github, welcome!\nHow to Share\n\nShare on Twitter\nShare on Facebook\nShare on Google Plus\nShare on LinkedIn\nShare on Telegram\n\nIn Other Written Languages\n\nArabic\nAzerbaijani\nBengali\nBulgarian\nBurmese\nChinese\nCzech\nDutch\nEnglish\nFrench\nGerman\nGreek\nHungarian\nIndonesian\nItalian\nJapanese\nKorean\nPersian/Farsi (Iran)\nPolish\nPortuguese (Brazil)\nPortuguese (Portugal)\nRomanian (Romania)\nRussian\nSlovak\nSpanish\nSwedish\nTamil\nTurkish\nUkrainian\n\nFree Online Courses\n\nBulgarian\nEnglish\nFinnish\nGerman\nItalian\nKorean\nPolish\nPortuguese (Brazil)\nRussian\nSpanish\nVietnamese\n\nInteractive Programming Resources\n\nEnglish\nRussian\n\nProblem Sets and Competitive Programming\n\nProblem Sets\n\nPodcast - Screencast\nFree Podcasts and Screencasts:\n\nCzech\nEnglish\nPortuguese (Brazil)\nRussian\nSwedish\n\nProgramming Playgrounds\n\nFree Programming Playgrounds\n\nLicense\nEach file included in this repository is licensed under the CC BY License.\n\n"}, {"repo": "sindresorhus/awesome", "language": "None", "readme": "\n\n\n\n\n\n\n\nMy open source work is supported by the community\n\n\nSpecial thanks to:\n\n\n\n\n\n\n\n\n\n\n\n\nWhat is an awesome list?\u00a0\u00a0\u00a0\n\tContribution guide\u00a0\u00a0\u00a0\n\tCreating a list\u00a0\u00a0\u00a0\n\tTwitter\u00a0\u00a0\u00a0\n\tStickers & t-shirts\n\n\n\nFollow the Awesome Twitter account for updates on new list additions.\n\n\n\nJust type awesome.re to go here. Check out my blog and follow me on Twitter.\n\n\nContents\n\nPlatforms\nProgramming Languages\nFront-End Development\nBack-End Development\nComputer Science\nBig Data\nTheory\nBooks\nEditors\nGaming\nDevelopment Environment\nEntertainment\nDatabases\nMedia\nLearn\nSecurity\nContent Management Systems\nHardware\nBusiness\nWork\nNetworking\nDecentralized Systems\nHigher Education\nMiscellaneous\nRelated\n\n\n\n\n\nLooking for a job?\n\n\t\t\tNo resume needed. Just prove you can code.\n\t\t\t\n\n\n\n\nClicking this helps fund the Awesome project\n\n\n\nPlatforms\n\nNode.js - Async non-blocking event-driven JavaScript runtime built on Chrome's V8 JavaScript engine.\n\nCross-Platform - Writing cross-platform code on Node.js.\n\n\nFrontend Development\niOS - Mobile operating system for Apple phones and tablets.\nAndroid - Mobile operating system developed by Google.\nIoT & Hybrid Apps\nElectron - Cross-platform native desktop apps using JavaScript/HTML/CSS.\nCordova - JavaScript API for hybrid apps.\nReact Native - JavaScript framework for writing natively rendering mobile apps for iOS and Android.\nXamarin - Mobile app development IDE, testing, and distribution.\nLinux\n\nContainers\neBPF - Virtual machine that allows you to write more efficient and powerful tracing and monitoring for Linux systems.\nArch-based Projects - Linux distributions and projects based on Arch Linux.\n\n\nmacOS - Operating system for Apple's Mac computers.\n\nCommand-Line\nScreensavers\nApps\nOpen Source Apps\n\n\nwatchOS - Operating system for the Apple Watch.\nJVM\nSalesforce\nAmazon Web Services\nWindows\nIPFS - P2P hypermedia protocol.\nFuse - Mobile development tools.\nHeroku - Cloud platform as a service.\nRaspberry Pi - Credit card-sized computer aimed at teaching kids programming, but capable of a lot more.\nQt - Cross-platform GUI app framework.\nWebExtensions - Cross-browser extension system.\nRubyMotion - Write cross-platform native apps for iOS, Android, macOS, tvOS, and watchOS in Ruby.\nSmart TV - Create apps for different TV platforms.\nGNOME - Simple and distraction-free desktop environment for Linux.\nKDE - A free software community dedicated to creating an open and user-friendly computing experience.\n.NET\n\nCore\nRoslyn - Open-source compilers and code analysis APIs for C# and VB.NET languages.\n\n\nAmazon Alexa - Virtual home assistant.\nDigitalOcean - Cloud computing platform designed for developers.\nFlutter - Google's mobile SDK for building native iOS and Android apps from a single codebase written in Dart.\nHome Assistant - Open source home automation that puts local control and privacy first.\nIBM Cloud - Cloud platform for developers and companies.\nFirebase - App development platform built on Google Cloud Platform.\nRobot Operating System 2.0 - Set of software libraries and tools that help you build robot apps.\nAdafruit IO - Visualize and store data from any device.\nCloudflare - CDN, DNS, DDoS protection, and security for your site.\nActions on Google - Developer platform for Google Assistant.\n\nProgramming Languages\n\nJavaScript\n\nPromises\nStandard Style - Style guide and linter.\nMust Watch Talks\nTips\nNetwork Layer\nMicro npm Packages\nMad Science npm Packages - Impossible sounding projects that exist.\nMaintenance Modules - For npm packages.\nnpm - Package manager.\nAVA - Test runner.\nESLint - Linter.\nFunctional Programming\nObservables\nnpm scripts - Task runner.\n30 Seconds of Code - Code snippets you can understand in 30 seconds.\n\n\nSwift - Apple's compiled programming language that is secure, modern, programmer-friendly, and fast.\n\nEducation\nPlaygrounds\n\n\nPython - General-purpose programming language designed for readability.\n\nAsyncio - Asynchronous I/O in Python 3.\nScientific Audio - Scientific research in audio/music.\nCircuitPython - A version of Python for microcontrollers.\nData Science - Data analysis and machine learning.\nTyping - Optional static typing for Python.\n\n\nRust\nHaskell\nPureScript\nGo\nScala\n\nScala Native - Optimizing ahead-of-time compiler for Scala based on LLVM.\n\n\nRuby\nClojure\nClojureScript\nElixir\nElm\nErlang\nJulia\nLua\nC\nC/C++ - General-purpose language with a bias toward system programming and embedded, resource-constrained software.\nR\nD\nCommon Lisp\nPerl\nGroovy\nDart\nJava - Popular secure object-oriented language designed for flexibility to \"write once, run anywhere\".\n\nRxJava\n\n\nKotlin\nOCaml\nColdFusion\nFortran\nPHP - Server-side scripting language.\n\nComposer - Package manager.\n\n\nPascal\nAssembler\nAutoHotkey\nAutoIt\nCrystal\nFrege - Haskell for the JVM.\nCMake - Build, test, and package software.\nActionScript 3 - Object-oriented language targeting Adobe AIR.\nEta - Functional programming language for the JVM.\nIdris - General purpose pure functional programming language with dependent types influenced by Haskell and ML.\nAda/SPARK - Modern programming language designed for large, long-lived apps where reliability and efficiency are essential.\nQ# - Domain-specific programming language used for expressing quantum algorithms.\nImba - Programming language inspired by Ruby and Python and compiles to performant JavaScript.\nVala - Programming language designed to take full advantage of the GLib and GNOME ecosystems, while preserving the speed of C code.\n\nFront-End Development\n\nES6 Tools\nWeb Performance Optimization\nWeb Tools\nCSS - Style sheet language that specifies how HTML elements are displayed on screen.\n\nCritical-Path Tools\nScalability\nMust-Watch Talks\nProtips\nFrameworks\n\n\nReact - App framework.\n\nRelay - Framework for building data-driven React apps.\nReact Hooks - A new feature that lets you use state and other React features without writing a class.\n\n\nWeb Components\nPolymer - JavaScript library to develop Web Components.\nAngular - App framework.\nBackbone - App framework.\nHTML5 - Markup language used for websites & web apps.\nSVG - XML-based vector image format.\nCanvas\nKnockoutJS - JavaScript library.\nDojo Toolkit - JavaScript toolkit.\nInspiration\nEmber - App framework.\nAndroid UI\niOS UI\nMeteor\nBEM\nFlexbox\nWeb Typography\nWeb Accessibility\nMaterial Design\nD3 - Library for producing dynamic, interactive data visualizations.\nEmails\njQuery - Easy to use JavaScript library for DOM manipulation.\n\nTips\n\n\nWeb Audio\nOffline-First\nStatic Website Services\nCycle.js - Functional and reactive JavaScript framework.\nText Editing\nMotion UI Design\nVue.js - App framework.\nMarionette.js - App framework.\nAurelia - App framework.\nCharting\nIonic Framework 2\nChrome DevTools\nPostCSS - CSS tool.\nDraft.js - Rich text editor framework for React.\nService Workers\nProgressive Web Apps\nchoo - App framework.\nRedux - State container for JavaScript apps.\nwebpack - Module bundler.\nBrowserify - Module bundler.\nSass - CSS preprocessor.\nAnt Design - Enterprise-class UI design language.\nLess - CSS preprocessor.\nWebGL - JavaScript API for rendering 3D graphics.\nPreact - App framework.\nProgressive Enhancement\nNext.js - Framework for server-rendered React apps.\nHyperapp - Tiny JavaScript library for building web apps.\nlit-html - HTML templating library for JavaScript.\nJAMstack - Modern web development architecture based on client-side JavaScript, reusable APIs, and prebuilt markup.\nWordPress-Gatsby - Web development technology stack with WordPress as a back end and Gatsby as a front end.\nMobile Web Development - Creating a great mobile web experience.\nStorybook - Development environment for UI components.\nBlazor - .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly.\nWeb Performance Metrics - Metrics to help understand page speed and user experience.\nTailwind CSS - Utility-first CSS framework for rapid UI development.\n\nBack-End Development\n\nFlask - Python framework.\nDocker\nVagrant - Automation virtual machine environment.\nPyramid - Python framework.\nPlay1 Framework\nCakePHP - PHP framework.\nSymfony - PHP framework.\n\nEducation\n\n\nLaravel - PHP framework.\n\nEducation\n\n\nRails - Web app framework for Ruby.\n\nGems - Packages.\n\n\nPhalcon - PHP framework.\nUseful .htaccess Snippets\nnginx - Web server.\nDropwizard - Java framework.\nKubernetes - Open-source platform that automates Linux container operations.\nLumen - PHP micro-framework.\nServerless Framework - Serverless computing and serverless architectures.\nApache Wicket - Java web app framework.\nVert.x - Toolkit for building reactive apps on the JVM.\nTerraform - Tool for building, changing, and versioning infrastructure.\nVapor - Server-side development in Swift.\nDash - Python web app framework.\n\nComputer Science\n\nUniversity Courses\nData Science\n\nTutorials\n\n\nMachine Learning\n\nTutorials\nML with Ruby - Learning, implementing, and applying Machine Learning using Ruby.\nCore ML Models - Models for Apple's machine learning framework.\nH2O - Open source distributed machine learning platform written in Java with APIs in R, Python, and Scala.\n\n\nSpeech and Natural Language Processing\n\nSpanish\nNLP with Ruby\nQuestion Answering - The science of asking and answering in natural language with a machine.\n\n\nLinguistics\nCryptography\n\nPapers - Theory basics for using cryptography by non-cryptographers.\n\n\nComputer Vision\nDeep Learning - Neural networks.\n\nTensorFlow - Library for machine intelligence.\nPapers - The most cited deep learning papers.\nEducation\n\n\nDeep Vision\nOpen Source Society University\nFunctional Programming\nEmpirical Software Engineering - Evidence-based research on software systems.\nStatic Analysis & Code Quality\nInformation Retrieval - Learn to develop your own search engine.\nQuantum Computing - Computing which utilizes quantum mechanics and qubits on quantum computers.\n\nBig Data\n\nBig Data\nPublic Datasets\nHadoop - Framework for distributed storage and processing of very large data sets.\nData Engineering\nStreaming\nApache Spark - Unified engine for large-scale data processing.\nQlik - Business intelligence platform for data visualization, analytics, and reporting apps.\n\nTheory\n\nPapers We Love\nTalks\nAlgorithms\n\nEducation - Learning and practicing.\n\n\nAlgorithm Visualizations\nArtificial Intelligence\nSearch Engine Optimization\nCompetitive Programming\nMath\nRecursion Schemes - Traversing nested data structures.\n\nBooks\n\nFree Programming Books\nFree Software Testing Books\nGo Books\nR Books\nMind Expanding Books\nBook Authoring\nElixir Books\n\nEditors\n\nSublime Text\nVim\nEmacs\nAtom - Open-source and hackable text editor.\nVisual Studio Code - Cross-platform open-source text editor.\n\nGaming\n\nGame Development\nGame Networking - Network programming for multiplayer online games.\nGame Talks\nGodot - Game engine.\nOpen Source Games\nUnity - Game engine.\nChess\nL\u00d6VE - Game engine.\nPICO-8 - Fantasy console.\nGame Boy Development\nConstruct 2 - Game engine.\nGideros - Game engine.\nMinecraft - Sandbox video game.\nGame Datasets - Materials and datasets for Artificial Intelligence in games.\nHaxe Game Development - A high-level strongly typed programming language used to produce cross-platform native code.\nlibGDX - Java game framework.\nPlayCanvas - Game engine.\n\nDevelopment Environment\n\nQuick Look Plugins - For macOS.\nDev Env\nDotfiles\nShell\nFish - User-friendly shell.\nCommand-Line Apps\nZSH Plugins\nGitHub - Hosting service for Git repositories.\n\nBrowser Extensions\nCheat Sheet\nPinned Gists - Dynamic pinned gists for your GitHub profile.\n\n\nGit Cheat Sheet & Git Flow\nGit Tips\nGit Add-ons - Enhance the git CLI.\nGit Hooks - Scripts for automating tasks during git workflows.\nSSH\nFOSS for Developers\nHyper - Cross-platform terminal app built on web technologies.\nPowerShell - Cross-platform object-oriented shell.\nAlfred Workflows - Productivity app for macOS.\nTerminals Are Sexy\n\nEntertainment\n\nScience Fiction - Scifi.\nFantasy\nPodcasts\nEmail Newsletters\nIT Quotes\n\nDatabases\n\nDatabase\nMySQL\nSQLAlchemy\nInfluxDB\nNeo4j\nMongoDB - NoSQL database.\nRethinkDB\nTinkerPop - Graph computing framework.\nPostgreSQL - Object-relational database.\nCouchDB - Document-oriented NoSQL database.\nHBase - Distributed, scalable, big data store.\nNoSQL Guides - Help on using non-relational, distributed, open-source, and horizontally scalable databases.\n\nMedia\n\nCreative Commons Media\nFonts\nCodeface - Text editor fonts.\nStock Resources\nGIF - Image format known for animated images.\nMusic\nOpen Source Documents\nAudio Visualization\nBroadcasting\nPixel Art - Pixel-level digital art.\nFFmpeg - Cross-platform solution to record, convert and stream audio and video.\nIcons - Downloadable SVG/PNG/font icon projects.\n\nLearn\n\nCLI Workshoppers - Interactive tutorials.\nLearn to Program\nSpeaking\nTech Videos\nDive into Machine Learning\nComputer History\nProgramming for Kids\nEducational Games - Learn while playing.\nJavaScript Learning\nCSS Learning - Mainly about CSS \u2013 the language and the modules.\nProduct Management - Learn how to be a better product manager.\nRoadmaps - Gives you a clear route to improve your knowledge and skills.\n\nSecurity\n\nApplication Security\nSecurity\nCTF - Capture The Flag.\nMalware Analysis\nAndroid Security\nHacking\nHoneypots - Deception trap, designed to entice an attacker into attempting to compromise the information systems in an organization.\nIncident Response\nVehicle Security and Car Hacking\nWeb Security - Security of web apps & services.\nLockpicking - The art of unlocking a lock by manipulating its components without the key.\nCybersecurity Blue Team - Groups of individuals who identify security flaws in information technology systems.\nFuzzing - Automated software testing technique that involves feeding pseudo-randomly generated input data.\nEmbedded and IoT Security\nGDPR - Regulation on data protection and privacy for all individuals within EU.\n\nContent Management Systems\n\nUmbraco\nRefinery CMS - Ruby on Rails CMS.\nWagtail - Django CMS focused on flexibility and user experience.\nTextpattern - Lightweight PHP-based CMS.\nDrupal - Extensible PHP-based CMS.\nCraft CMS - Content-first CMS.\n\nHardware\n\nRobotics\nInternet of Things\nElectronics - For electronic engineers and hobbyists.\nBluetooth Beacons\nElectric Guitar Specifications - Checklist for building your own electric guitar.\n\nBusiness\n\nOpen Companies\nPlaces to Post Your Startup\nOKR Methodology - Goal setting & communication best practices.\nLeading and Managing - Leading people and being a manager in a technology company/environment.\nIndie - Independent developer businesses.\nTools of the Trade - Tools used by companies on Hacker News.\nClean Tech - Fighting climate change with technology.\nWardley Maps - Provides high situational awareness to help improve strategic planning and decision making.\n\nWork\n\nSlack - Team collaboration.\n\nCommunities\n\n\nRemote Jobs\nProductivity\nNiche Job Boards\nProgramming Interviews\nCode Review - Reviewing code.\n\nNetworking\n\nSoftware-Defined Networking\nNetwork Analysis\nPCAPTools\n\nDecentralized Systems\n\nBitcoin - Bitcoin services and tools for software developers.\nRipple - Open source distributed settlement network.\nNon-Financial Blockchain - Non-financial blockchain applications.\nMastodon - Open source decentralized microblogging network.\nEthereum - Distributed computing platform for smart contract development.\nBlockchain AI - Blockchain projects for artificial intelligence and machine learning.\nEOSIO - A decentralized operating system supporting industrial-scale apps.\n\nHigher Education\n\nComputational Neuroscience - A multidisciplinary science which uses computational approaches to study the nervous system.\nDigital History - Computer-aided scientific investigation of history.\n\nMiscellaneous\n\nJSON - Text based data interchange format.\n\nGeoJSON\nDatasets\n\n\nCSV - A text file format that stores tabular data and uses a comma to separate values.\nDiscounts for Student Developers\nSysadmin\nRadio\nAwesome - Recursion illustrated.\nAnalytics\nREST\nSelenium\nAppium - Test automation tool for apps.\nContinuous Integration and Continuous Delivery\nServices Engineering\nFree for Developers\nAnswers - Stack Overflow, Quora, etc.\nSketch - Design app for macOS.\nBoilerplate Projects\nReadme\nDesign and Development Guides\nSoftware Engineering Blogs\nSelf Hosted\nFOSS Production Apps\nGulp - Task runner.\nAMA - Ask Me Anything.\n\nAnswers\n\n\nOpen Source Photography\nOpenGL - Cross-platform API for rendering 2D and 3D graphics.\nGraphQL\nTransit\nResearch Tools\nData Visualization\nSocial Media Share Links\nMicroservices\nUnicode - Unicode standards, quirks, packages and resources.\n\nCode Points\n\n\nBeginner-Friendly Projects\nKatas\nTools for Activism\nCitizen Science - For community-based and non-institutional scientists.\nTAP - Test Anything Protocol.\nMQTT - \"Internet of Things\" connectivity protocol.\nHacking Spots\nFor Girls\nVorpal - Node.js CLI framework.\nVulkan - Low-overhead, cross-platform 3D graphics and compute API.\nLaTeX - Typesetting language.\nEconomics - An economist's starter kit.\nFunny Markov Chains\nBioinformatics\nCheminformatics - Informatics techniques applied to problems in chemistry.\nColorful - Choose your next color scheme.\nSteam - Digital distribution platform.\nBots - Building bots.\nSite Reliability Engineering\nEmpathy in Engineering - Building and promoting more compassionate engineering cultures.\nDTrace - Dynamic tracing framework.\nUserscripts - Enhance your browsing experience.\nPok\u00e9mon - Pok\u00e9mon and Pok\u00e9mon GO.\nChatOps - Managing technical and business operations through a chat.\nFalsehood - Falsehoods programmers believe in.\nDomain-Driven Design - Software development approach for complex needs by connecting the implementation to an evolving model.\nQuantified Self - Self-tracking through technology.\nSaltStack - Python-based config management system.\nWeb Design - For digital designers.\nJMeter - Load testing and performance measurement tool.\nCreative Coding - Programming something expressive instead of something functional.\nNo-Login Web Apps - Web apps that work without login.\nTesting - Software testing.\nFree Software - Free as in freedom.\nFramer - Prototyping interactive UI designs.\nMarkdown - Markup language.\nDev Fun - Funny developer projects.\nEvents in Italy - Tech-related events in Italy.\nEvents in the Netherlands - Tech-related events in the Netherlands.\nHealthcare - Open source healthcare software for facilities, providers, developers, policy experts, and researchers.\nMagento 2 - Open Source eCommerce built with PHP.\nTikZ - Graph drawing packages for TeX/LaTeX/ConTeXt.\nNeuroscience - Study of the nervous system and brain.\nAd-Free - Ad-free alternatives.\nEsolangs - Programming languages designed for experimentation or as jokes rather than actual use.\nPrometheus - Open-source monitoring system.\nHomematic - Smart home devices.\nLedger - Double-entry accounting on the command-line.\nUncopyright - Public domain works.\nCrypto Currency Tools & Algorithms - Digital currency where encryption is used to regulate the generation of units and verify transfers.\nDiversity - Creating a more inclusive and diverse tech community.\nOpen Source Supporters - Companies that offer their tools and services for free to open source projects.\nDesign Principles - Create better and more consistent designs and experiences.\nVisual Regression Testing - Ensures changes did not break the functionality or style.\nTheravada - Teachings from the Theravada Buddhist tradition.\ninspectIT - Open source Java app performance management tool.\nOpen Source Maintainers - The experience of being an open source maintainer.\nCalculators - Calculators for every platform.\nCaptcha - A type of challenge\u2013response test used in computing to determine whether or not the user is human.\nJupyter - Create and share documents that contain code, equations, visualizations and narrative text.\nFIRST Robotics Competition - International high school robotics championship.\nHumane Technology - Open source projects that help improve society.\nSpeakers - Conference and meetup speakers in the programming and design community.\nBoard Games - Table-top gaming fun for all.\nSoftware Patreons - Fund individual programmers or the development of open source projects.\nParasite - Parasites and host-pathogen interactions.\nFood - Food-related projects on GitHub.\nMental Health - Mental health awareness and self-care in the software industry.\nBitcoin Payment Processors - Start accepting Bitcoin.\nScientific Computing - Solving complex scientific problems using computers.\nAmazon Sellers\nAgriculture - Open source technology for farming and gardening.\nPlotters - Computer-controlled drawing machines and other visual art robots.\nProduct Design - Design a product from the initial concept to production.\nPrisma - Turn your database into a GraphQL API.\nSoftware Architecture - The discipline of designing and building software.\nConnectivity Data and Reports - Better understand who has access to telecommunication and internet infrastructure and on what terms.\nStacks - Tech stacks for building different apps and features.\nCytodata - Image-based profiling of biological phenotypes for computational biologists.\nIRC - Open source messaging protocol.\nAdvertising - Advertising and programmatic media for websites.\nEarth - Find ways to resolve the climate crisis.\nNaming - Naming things in computer science done right.\nBiomedical Information Extraction - How to extract information from unstructured biomedical data and text.\n\nRelated\n\nAwesome Indexed - Search the Awesome dataset.\nAwesome Search - Quick search for Awesome lists.\n\n\n"}, {"repo": "getify/You-Dont-Know-JS", "language": "None", "readme": "\nYou Don't Know JS Yet (book series) - 2nd Edition\nThis is a series of books diving deep into the core mechanisms of the JavaScript language.\nTo read more about the motivations and perspective behind this book series, check out the Preface.\nPremier Sponsor\nThis edition of the YDKJS book series is exclusively sponsored by Frontend Masters.\nFrontend Masters is the gold standard for top-of-the-line expert training material in frontend-oriented software development. With over 150 courses on all things frontend, this should be your first and only stop for quality video training on HTML, CSS, JS, and related technologies.\n\nI teach all my workshops exclusively through Frontend Masters. If you like this book content, please check out my video training courses.\nI want to extend a warm and deep thanks to Marc Grabanski and the entire Frontend Masters team, not only for their excellent work with the video training platform, but for their unwavering support of me and of the \"You Don't Know JS\" books!\n\nTitles\nI recommend reading the books in this order:\n\nGet Started\nScope & Closures\nObjects & Classes\nTypes & Grammar\nSync & Async\nES.Next & Beyond\n\nPublishing\nAs always, you'll be able to read these books online here entirely for free.\nThis edition of the books is being self-published through GetiPub publishing. The published books will be made available for sale through normal book retail sources.\nIf you'd like to contribute financially towards the effort (or any of my other OSS efforts) aside from purchasing the published books, please consider these options:\n\nGithub Sponsorship\nPatreon\nPaypal\n\nContributions\nPlease feel free to contribute to the quality of this content by submitting PRs for improvements to code snippets, explanations, etc. While typo fixes are welcomed, they will likely be caught through normal editing/publishing processes, so please don't worry about them right now.\nAny contributions you make to this effort are of course greatly appreciated.\nBut PLEASE read the Contributions Guidelines carefully before submitting a PR.\nLicense & Copyright\nThe materials herein are all \u00a9 2019-2020 Kyle Simpson.\nThis work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivs 4.0 Unported License.\n\n"}, {"repo": "ohmyzsh/ohmyzsh", "language": "Shell", "readme": "\n\n\n\n\n\nOh My Zsh is an open source, community-driven framework for managing your zsh configuration.\nSounds boring. Let's try again.\nOh My Zsh will not make you a 10x developer...but you may feel like one.\nOnce installed, your terminal shell will become the talk of the town or your money back! With each keystroke in your command prompt, you'll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in caf\u00e9s and ask you, \"that is amazing! are you some sort of genius?\"\nFinally, you'll begin to get the sort of attention that you have always felt you deserved. ...or maybe you'll use the time that you're saving to start flossing more often. \ud83d\ude2c\nTo learn more, visit ohmyz.sh and follow @ohmyzsh on Twitter.\nGetting Started\nPrerequisites\n\nA Unix-like operating system: macOS, Linux, BSD. On Windows: WSL is preferred, but cygwin or msys also mostly work.\nZsh should be installed (v4.3.9 or more recent). If not pre-installed (run zsh --version to confirm), check the following instructions here: Installing ZSH\ncurl or wget should be installed\ngit should be installed\n\nBasic Installation\nOh My Zsh is installed by running one of the following commands in your terminal. You can install this via the command-line with either curl or wget.\nvia curl\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\nvia wget\nsh -c \"$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\nManual inspection\nIt's a good idea to inspect the install script from projects you don't yet know. You can do\nthat by downloading the install script first, looking through it so everything looks normal,\nthen running it:\ncurl -Lo install.sh https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh\nsh install.sh\nUsing Oh My Zsh\nPlugins\nOh My Zsh comes with a shitload of plugins to take advantage of. You can take a look in the plugins directory and/or the wiki to see what's currently available.\nEnabling Plugins\nOnce you spot a plugin (or several) that you'd like to use with Oh My Zsh, you'll need to enable them in the .zshrc file. You'll find the zshrc file in your $HOME directory. Open it with your favorite text editor and you'll see a spot to list all the plugins you want to load.\nvi ~/.zshrc\nFor example, this might begin to look like this:\nplugins=(\n  git\n  bundler\n  dotenv\n  osx\n  rake\n  rbenv\n  ruby\n)\nNote that the plugins are separated by whitespace. Do not use commas between them.\nUsing Plugins\nMost plugins (should! we're working on this) include a README, which documents how to use them.\nThemes\nWe'll admit it. Early in the Oh My Zsh world, we may have gotten a bit too theme happy. We have over one hundred themes now bundled. Most of them have screenshots on the wiki. Check them out!\nSelecting a Theme\nRobby's theme is the default one. It's not the fanciest one. It's not the simplest one. It's just the right one (for him).\nOnce you find a theme that you'd like to use, you will need to edit the ~/.zshrc file. You'll see an environment variable (all caps) in there that looks like:\nZSH_THEME=\"robbyrussell\"\nTo use a different theme, simply change the value to match the name of your desired theme. For example:\nZSH_THEME=\"agnoster\" # (this is one of the fancy ones)\n# see https://github.com/ohmyzsh/ohmyzsh/wiki/Themes#agnoster\nNote: many themes require installing the Powerline Fonts in order to render properly.\nOpen up a new terminal window and your prompt should look something like this:\n\nIn case you did not find a suitable theme for your needs, please have a look at the wiki for more of them.\nIf you're feeling feisty, you can let the computer select one randomly for you each time you open a new terminal window.\nZSH_THEME=\"random\" # (...please let it be pie... please be some pie..)\nAnd if you want to pick random theme from a list of your favorite themes:\nZSH_THEME_RANDOM_CANDIDATES=(\n  \"robbyrussell\"\n  \"agnoster\"\n)\nFAQ\nIf you have some more questions or issues, you might find a solution in our FAQ.\nAdvanced Topics\nIf you're the type that likes to get their hands dirty, these sections might resonate.\nAdvanced Installation\nSome users may want to manually install Oh My Zsh, or change the default path or other settings that\nthe installer accepts (these settings are also documented at the top of the install script).\nCustom Directory\nThe default location is ~/.oh-my-zsh (hidden in your home directory)\nIf you'd like to change the install directory with the ZSH environment variable, either by running\nexport ZSH=/your/path before installing, or by setting it before the end of the install pipeline\nlike this:\nZSH=\"$HOME/.dotfiles/oh-my-zsh\" sh install.sh\nUnattended install\nIf you're running the Oh My Zsh install script as part of an automated install, you can pass the\nflag --unattended to the install.sh script. This will have the effect of not trying to change\nthe default shell, and also won't run zsh when the installation has finished.\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" \"\" --unattended\nInstalling from a forked repository\nThe install script also accepts these variables to allow installation of a different repository:\n\n\nREPO (default: ohmyzsh/ohmyzsh): this takes the form of owner/repository. If you set\nthis variable, the installer will look for a repository at https://github.com/{owner}/{repository}.\n\n\nREMOTE (default: https://github.com/${REPO}.git): this is the full URL of the git repository\nclone. You can use this setting if you want to install from a fork that is not on GitHub (GitLab,\nBitbucket...) or if you want to clone with SSH instead of HTTPS (git@github.com:user/project.git).\nNOTE: it's incompatible with setting the REPO variable. This setting will take precedence.\n\n\nBRANCH (default: master): you can use this setting if you want to change the default branch to be\nchecked out when cloning the repository. This might be useful for testing a Pull Request, or if you\nwant to use a branch other than master.\n\n\nFor example:\nREPO=apjanke/oh-my-zsh BRANCH=edge sh install.sh\nManual Installation\n1. Clone the repository:\ngit clone https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh\n2. Optionally, backup your existing ~/.zshrc file:\ncp ~/.zshrc ~/.zshrc.orig\n3. Create a new zsh configuration file\nYou can create a new zsh config file by copying the template that we have included for you.\ncp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n4. Change your default shell\nchsh -s $(which zsh)\nYou must log out from your user session and log back in to see this change.\n5. Initialize your new zsh configuration\nOnce you open up a new terminal window, it should load zsh with Oh My Zsh's configuration.\nInstallation Problems\nIf you have any hiccups installing, here are a few common fixes.\n\nYou might need to modify your PATH in ~/.zshrc if you're not able to find some commands after\nswitching to oh-my-zsh.\nIf you installed manually or changed the install location, check the ZSH environment variable in\n~/.zshrc.\n\nCustom Plugins and Themes\nIf you want to override any of the default behaviors, just add a new file (ending in .zsh) in the custom/ directory.\nIf you have many functions that go well together, you can put them as a XYZ.plugin.zsh file in the custom/plugins/ directory and then enable this plugin.\nIf you would like to override the functionality of a plugin distributed with Oh My Zsh, create a plugin of the same name in the custom/plugins/ directory and it will be loaded instead of the one in plugins/.\nGetting Updates\nBy default, you will be prompted to check for upgrades every few weeks. If you would like oh-my-zsh to automatically upgrade itself without prompting you, set the following in your ~/.zshrc:\nDISABLE_UPDATE_PROMPT=true\nTo disable automatic upgrades, set the following in your ~/.zshrc:\nDISABLE_AUTO_UPDATE=true\nManual Updates\nIf you'd like to upgrade at any point in time (maybe someone just released a new plugin and you don't want to wait a week?) you just need to run:\nupgrade_oh_my_zsh\nMagic! \ud83c\udf89\nUninstalling Oh My Zsh\nOh My Zsh isn't for everyone. We'll miss you, but we want to make this an easy breakup.\nIf you want to uninstall oh-my-zsh, just run uninstall_oh_my_zsh from the command-line. It will remove itself and revert your previous bash or zsh configuration.\nHow do I contribute to Oh My Zsh?\nBefore you participate in our delightful community, please read the code of conduct.\nI'm far from being a Zsh expert and suspect there are many ways to improve \u2013 if you have ideas on how to make the configuration easier to maintain (and faster), don't hesitate to fork and send pull requests!\nWe also need people to test out pull-requests. So take a look through the open issues and help where you can.\nSee Contributing for more details.\nDo NOT send us themes\nWe have (more than) enough themes for the time being. Please add your theme to the external themes wiki page.\nContributors\nOh My Zsh has a vibrant community of happy users and delightful contributors. Without all the time and help from our contributors, it wouldn't be so awesome.\nThank you so much!\nFollow Us\nWe're on the social media.\n\n@ohmyzsh on Twitter. You should follow it.\nOh My Zsh on Facebook.\n\nMerchandise\nWe have stickers, shirts, and coffee mugs available for you to show off your love of Oh My Zsh. Again, you will become the talk of the town!\nLicense\nOh My Zsh is released under the MIT license.\nAbout Planet Argon\n\nOh My Zsh was started by the team at Planet Argon, a Ruby on Rails development agency. Check out our other open source projects.\n\n"}, {"repo": "jwasham/coding-interview-university", "language": "None", "readme": "\nCoding Interview University\n\nI originally created this as a short to-do list of study topics for becoming a software engineer,\nbut it grew to the large list you see today. After going through this study plan, I got hired\nas a Software Development Engineer at Amazon!\nYou probably won't have to study as much as I did. Anyway, everything you need is here.\nI studied about 8-12 hours a day, for several months. This is my story: Why I studied full-time for 8 months for a Google interview\nThe items listed here will prepare you well for an interview at just about any software company,\nincluding the giants: Amazon, Facebook, Google or Microsoft.\nBest of luck to you!\n\n\nTranslations:\n\n\u4e2d\u6587\u7248\u672c\nTi\u1ebfng Vi\u1ec7t - Vietnamese\nEspa\u00f1ol\nPortugu\u00eas Brasileiro\n\n\n\nTranslations in progress:\n\n\u0939\u093f\u0928\u094d\u0926\u0940\n\u05e2\u05d1\u05e8\u05d9\u05ea\nBahasa Indonesia\nArabic\nTurkish\nFrench\nRussian\nUkrainian\nKorean(\ud55c\uad6d\uc5b4)\nTelugu\nPolish\nUrdu\nThai\nGreek\nItalian\nMalayalam\nJapanese (\u65e5\u672c\u8a9e)\n\n\nWhat is it?\nThis is my multi-month study plan for going from web developer (self-taught, no CS degree) to software engineer for a large company.\n\nThis is meant for new software engineers or those switching from\nsoftware/web development to software engineering (where computer science knowledge is required). If you have\nmany years of experience and are claiming many years of software engineering experience, expect a harder interview.\nIf you have many years of software/web development experience, note that large software companies like Google, Amazon,\nFacebook and Microsoft view software engineering as different from software/web development, and they require computer science knowledge.\nIf you want to be a reliability engineer or operations engineer, study more from the optional list (networking, security).\n\nTable of Contents\n\nWhat is it?\nWhy use it?\nHow to use it\nDon't feel you aren't smart enough\nAbout Video Resources\nInterview Process & General Interview Prep\nPick One Language for the Interview\nBook List\nBefore you Get Started\nWhat you Won't See Covered\nPrerequisite Knowledge\nThe Daily Plan\nAlgorithmic complexity / Big-O / Asymptotic analysis\nData Structures\n\nArrays\nLinked Lists\nStack\nQueue\nHash table\n\n\nMore Knowledge\n\nBinary search\nBitwise operations\n\n\nTrees\n\nTrees - Notes & Background\nBinary search trees: BSTs\nHeap / Priority Queue / Binary Heap\nbalanced search trees (general concept, not details)\ntraversals: preorder, inorder, postorder, BFS, DFS\n\n\nSorting\n\nselection\ninsertion\nheapsort\nquicksort\nmerge sort\n\n\nGraphs\n\ndirected\nundirected\nadjacency matrix\nadjacency list\ntraversals: BFS, DFS\n\n\nEven More Knowledge\n\nRecursion\nDynamic Programming\nObject-Oriented Programming\nDesign Patterns\nCombinatorics (n choose k) & Probability\nNP, NP-Complete and Approximation Algorithms\nCaches\nProcesses and Threads\nTesting\nScheduling\nString searching & manipulations\nTries\nFloating Point Numbers\nUnicode\nEndianness\nNetworking\n\n\nSystem Design, Scalability, Data Handling (if you have 4+ years experience)\nFinal Review\nCoding Question Practice\nCoding exercises/challenges\nOnce you're closer to the interview\nYour Resume\nBe thinking of for when the interview comes\nHave questions for the interviewer\nOnce You've Got The Job\n\n---------------- Everything below this point is optional ----------------\n\nAdditional Resources\n\nAdditional Books\nAdditional Learning\n\nCompilers\nEmacs and vi(m)\nUnix command line tools\nInformation theory\nParity & Hamming Code\nEntropy\nCryptography\nCompression\nComputer Security\nGarbage collection\nParallel Programming\nMessaging, Serialization, and Queueing Systems\nA*\nFast Fourier Transform\nBloom Filter\nHyperLogLog\nLocality-Sensitive Hashing\nvan Emde Boas Trees\nAugmented Data Structures\nBalanced search trees\n\nAVL trees\nSplay trees\nRed/black trees\n2-3 search trees\n2-3-4 Trees (aka 2-4 trees)\nN-ary (K-ary, M-ary) trees\nB-Trees\n\n\nk-D Trees\nSkip lists\nNetwork Flows\nDisjoint Sets & Union Find\nMath for Fast Processing\nTreap\nLinear Programming\nGeometry, Convex hull\nDiscrete math\nMachine Learning\n\n\nAdditional Detail on Some Subjects\nVideo Series\nComputer Science Courses\nPapers\n\n\n\nWhy use it?\nWhen I started this project, I didn't know a stack from a heap, didn't know Big-O anything, anything about trees, or how to\ntraverse a graph. If I had to code a sorting algorithm, I can tell ya it wouldn't have been very good.\nEvery data structure I've ever used was built into the language, and I didn't know how they worked\nunder the hood at all. I've never had to manage memory unless a process I was running would give an \"out of\nmemory\" error, and then I'd have to find a workaround. I've used a few multidimensional arrays in my life and\nthousands of associative arrays, but I've never created data structures from scratch.\nIt's a long plan. It may take you months. If you are familiar with a lot of this already it will take you a lot less time.\nHow to use it\n\nHow to use it\nEverything below is an outline, and you should tackle the items in order from top to bottom.\nI'm using Github's special markdown flavor, including tasks lists to check progress.\nCreate a new branch so you can check items like this, just put an x in the brackets: [x]\nFork a branch and follow the commands below\n\ngit checkout -b progress\ngit remote add jwasham https://github.com/jwasham/coding-interview-university\ngit fetch --all\nMark all boxes with X after you completed your changes\n\ngit add .\ngit commit -m \"Marked x\"\ngit rebase jwasham/master\ngit push --force\nMore about Github-flavored markdown\n\nDon't feel you aren't smart enough\n\nSuccessful software engineers are smart, but many have an insecurity that they aren't smart enough.\nThe myth of the Genius Programmer\nIt's Dangerous to Go Alone: Battling the Invisible Monsters in Tech\nBelieve you can change\nThink you're not smart enough to work at Google? Well, think again\n\nAbout Video Resources\nSome videos are available only by enrolling in a Coursera or EdX class. These are called MOOCs.\nSometimes the classes are not in session so you have to wait a couple of months, so you have no access.\nI'd appreciate your help to add free and always-available public sources, such as YouTube videos to accompany the online course videos.\nI like using university lectures.\n\nInterview Process & General Interview Prep\n\nInterview Process & General Interview Prep\n\n\n ABC: Always Be Coding\n\n\n Whiteboarding\n\n\n Effective Whiteboarding during Programming Interviews\n\n\n Demystifying Tech Recruiting\n\n\n Cracking The Coding Interview Set 1:\n\n Gayle L McDowell - Cracking The Coding Interview (video)\n Cracking the Coding Interview with Author Gayle Laakmann McDowell (video)\n\n\n\n How to Get a Job at the Big 4:\n\n How to Get a Job at the Big 4 - Amazon, Facebook, Google & Microsoft (video)\n\n\n\n Prep Course:\n\n Software Engineer Interview Unleashed (paid course):\n\nLearn how to make yourself ready for software engineer interviews from a former Google interviewer.\n\n\n Python for Data Structures, Algorithms, and Interviews! (paid course):\n\nA Python centric interview prep course which covers data structures, algorithms, mock interviews and much more.\n\n\n Intro to Data Structures and Algorithms using Python! (Udacity free course):\n\nA free Python centric data structures and algorithms course.\n\n\n Data Structures and Algorithms Nanodegree! (Udacity paid Nanodegree):\n\nGet hands-on practice with over 100 data structures and algorithm exercises and guidance from a dedicated mentor to help prepare you for interviews and on-the-job scenarios.\n\n\n\n\n\n\nPick One Language for the Interview\nYou can use a language you are comfortable in to do the coding part of the interview, but for large companies, these are solid choices:\n\nC++\nJava\nPython\n\nYou could also use these, but read around first. There may be caveats:\n\nJavaScript\nRuby\n\nHere is an article I wrote about choosing a language for the interview: Pick One Language for the Coding Interview\nYou need to be very comfortable in the language and be knowledgeable.\nRead more about choices:\n\nhttp://www.byte-by-byte.com/choose-the-right-language-for-your-coding-interview/\nhttp://blog.codingforinterviews.com/best-programming-language-jobs/\n\nSee language resources here\nYou'll see some C, C++, and Python learning included below, because I'm learning. There are a few books involved, see the bottom.\nBook List\nThis is a shorter list than what I used. This is abbreviated to save you time.\nInterview Prep\n\n Programming Interviews Exposed: Coding Your Way Through the Interview, 4nd Edition\n\nanswers in C++ and Java\nthis is a good warm-up for Cracking the Coding Interview\nnot too difficult, most problems may be easier than what you'll see in an interview (from what I've read)\n\n\n Cracking the Coding Interview, 6th Edition\n\nanswers in Java\n\n\n\n\nIf you have tons of extra time:\nChoose one:\n\n Elements of Programming Interviews (C++ version)\n Elements of Programming Interviews (Java version)\n\nbook\nCompanion Project - Method Stub and Test Cases for Every Problem in the Book\n\n\n\n\nComputer Architecture\n\n Write Great Code: Volume 1: Understanding the Machine\n\n\nThe book was published in 2004, and is somewhat outdated, but it's a terrific resource for understanding a computer in brief.\n\n\nThe author invented HLA, so take mentions and examples in HLA with a grain of salt. Not widely used, but decent examples of what assembly looks like.\n\n\nThese chapters are worth the read to give you a nice foundation:\n\n......\n\nChapter 2 - Numeric Representation\nChapter 3 - Binary Arithmetic and Bit Operations\nChapter 4 - Floating-Point Representation\nChapter 5 - Character Representation\nChapter 6 - Memory Organization and Access\nChapter 7 - Composite Data Types and Memory Objects\nChapter 9 - CPU Architecture\nChapter 10 - Instruction Set Architecture\nChapter 11 - Memory Architecture and Organization\n\n\n\n\n\n\nLanguage Specific\nYou need to choose a language for the interview (see above).\nHere are my recommendations by language. I don't have resources for all languages. I welcome additions.\nIf you read through one of these, you should have all the data structures and algorithms knowledge you'll need to start doing coding problems.\nYou can skip all the video lectures in this project, unless you'd like a review.\nAdditional language-specific resources here.\nC++\n\nC++\nI haven't read these two, but they are highly rated and written by Sedgewick. He's awesome.\n\n Algorithms in C++, Parts 1-4: Fundamentals, Data Structure, Sorting, Searching\n Algorithms in C++ Part 5: Graph Algorithms\n\nIf you have a better recommendation for C++, please let me know. Looking for a comprehensive resource.\n\nJava\n\nJava\n\n Algorithms (Sedgewick and Wayne)\n\nvideos with book content (and Sedgewick!) on coursera:\n\nAlgorithms I\nAlgorithms II\n\n\n\n\n\nOR:\n\n Data Structures and Algorithms in Java\n\nby Goodrich, Tamassia, Goldwasser\nused as optional text for CS intro course at UC Berkeley\nsee my book report on the Python version below. This book covers the same topics.\n\n\n\n\nPython\n\nPython\n\n Data Structures and Algorithms in Python\n\nby Goodrich, Tamassia, Goldwasser\nI loved this book. It covered everything and more.\nPythonic code\nmy glowing book report: https://startupnextdoor.com/book-report-data-structures-and-algorithms-in-python/\n\n\n\n\nBefore you Get Started\nThis list grew over many months, and yes, it kind of got out of hand.\nHere are some mistakes I made so you'll have a better experience.\n1. You Won't Remember it All\nI watched hours of videos and took copious notes, and months later there was much I didn't remember. I spent 3 days going\nthrough my notes and making flashcards so I could review.\nRead please so you won't make my mistakes:\nRetaining Computer Science Knowledge\n2. Use Flashcards\nTo solve the problem, I made a little flashcards site where I could add flashcards of 2 types: general and code.\nEach card has different formatting.\nI made a mobile-first website so I could review on my phone and tablet, wherever I am.\nMake your own for free:\n\nFlashcards site repo\nMy flash cards database (old - 1200 cards):\nMy flash cards database (new - 1800 cards):\n\nKeep in mind I went overboard and have cards covering everything from assembly language and Python trivia to machine learning and statistics. It's way too much for what's required.\nNote on flashcards: The first time you recognize you know the answer, don't mark it as known. You have to see the\nsame card and answer it several times correctly before you really know it. Repetition will put that knowledge deeper in\nyour brain.\nAn alternative to using my flashcard site is Anki, which has been recommended to me numerous times. It uses a repetition system to help you remember.\nIt's user-friendly, available on all platforms and has a cloud sync system. It costs $25 on iOS but is free on other platforms.\nMy flashcard database in Anki format: https://ankiweb.net/shared/info/25173560 (thanks @xiewenya)\n3. Review, review, review\nI keep a set of cheat sheets on ASCII, OSI stack, Big-O notations, and more. I study them when I have some spare time.\nTake a break from programming problems for a half hour and go through your flashcards.\n4. Focus\nThere are a lot of distractions that can take up valuable time. Focus and concentration are hard.\nWhat you won't see covered\nThese are prevalent technologies but not part of this study plan:\n\nSQL\nJavascript\nHTML, CSS, and other front-end technologies\n\nThe Daily Plan\nSome subjects take one day, and some will take multiple days. Some are just learning with nothing to implement.\nEach day I take one subject from the list below, watch videos about that subject, and write an implementation in:\n\nC - using structs and functions that take a struct * and something else as args.\nC++ - without using built-in types\nC++ - using built-in types, like STL's std::list for a linked list\nPython - using built-in types (to keep practicing Python)\nand write tests to ensure I'm doing it right, sometimes just using simple assert() statements\nYou may do Java or something else, this is just my thing.\n\nYou don't need all these. You need only one language for the interview.\nWhy code in all of these?\n\nPractice, practice, practice, until I'm sick of it, and can do it with no problem (some have many edge cases and bookkeeping details to remember)\nWork within the raw constraints (allocating/freeing memory without help of garbage collection (except Python or Java))\nMake use of built-in types so I have experience using the built-in tools for real-world use (not going to write my own linked list implementation in production)\n\nI may not have time to do all of these for every subject, but I'll try.\nYou can see my code here:\n\nC\nC++\nPython\n\nYou don't need to memorize the guts of every algorithm.\nWrite code on a whiteboard or paper, not a computer. Test with some sample inputs. Then test it out on a computer.\nPrerequisite Knowledge\n\nPrerequisite Knowledge\n\n\n Learn C\n\nC is everywhere. You'll see examples in books, lectures, videos, everywhere while you're studying.\n C Programming Language, Vol 2\n\nThis is a short book, but it will give you a great handle on the C language and if you practice it a little\nyou'll quickly get proficient. Understanding C helps you understand how programs and memory work.\nanswers to questions\n\n\n\n\n\n How computers process a program:\n\n How CPU executes a program (video)\n How computers calculate - ALU (video)\n Registers and RAM (video)\n The Central Processing Unit (CPU) (video)\n Instructions and Programs (video)\n\n\n\n\nAlgorithmic complexity / Big-O / Asymptotic analysis\n\nAlgorithmic complexity / Big-O / Asymptotic analysis\n\nNothing to implement\nThere are a lot of videos here. Just watch enough until you understand it. You can always come back and review.\nIf some of the lectures are too mathy, you can jump down to the bottom and watch the discrete mathematics videos to get the background knowledge.\n Harvard CS50 - Asymptotic Notation (video)\n Big O Notations (general quick tutorial) (video)\n Big O Notation (and Omega and Theta) - best mathematical explanation (video)\n Skiena:\n\nvideo\nslides\n\n\n A Gentle Introduction to Algorithm Complexity Analysis\n Orders of Growth (video)\n Asymptotics (video)\n UC Berkeley Big O (video)\n UC Berkeley Big Omega (video)\n Amortized Analysis (video)\n Illustrating \"Big O\" (video)\n TopCoder (includes recurrence relations and master theorem):\n\nComputational Complexity: Section 1\nComputational Complexity: Section 2\n\n\n Cheat sheet\n\n\nData Structures\n\nData Structures\n\n\nArrays\n\nImplement an automatically resizing vector.\n Description:\n\nArrays (video)\nUC Berkeley CS61B - Linear and Multi-Dim Arrays (video) (Start watching from 15m 32s)\nBasic Arrays (video)\nMulti-dim (video)\nDynamic Arrays (video)\nJagged Arrays (video)\nJagged Arrays (video)\nResizing arrays (video)\n\n\n Implement a vector (mutable array with automatic resizing):\n\n Practice coding using arrays and pointers, and pointer math to jump to an index instead of using indexing.\n new raw data array with allocated memory\n\ncan allocate int array under the hood, just not use its features\nstart with 16, or if starting number is greater, use power of 2 - 16, 32, 64, 128\n\n\n size() - number of items\n capacity() - number of items it can hold\n is_empty()\n at(index) - returns item at given index, blows up if index out of bounds\n push(item)\n insert(index, item) - inserts item at index, shifts that index's value and trailing elements to the right\n prepend(item) - can use insert above at index 0\n pop() - remove from end, return value\n delete(index) - delete item at index, shifting all trailing elements left\n remove(item) - looks for value and removes index holding it (even if in multiple places)\n find(item) - looks for value and returns first index with that value, -1 if not found\n resize(new_capacity) // private function\n\nwhen you reach capacity, resize to double the size\nwhen popping an item, if size is 1/4 of capacity, resize to half\n\n\n\n\n Time\n\nO(1) to add/remove at end (amortized for allocations for more space), index, or update\nO(n) to insert/remove elsewhere\n\n\n Space\n\ncontiguous in memory, so proximity helps performance\nspace needed = (array capacity, which is >= n) * size of item, but even if 2n, still O(n)\n\n\n\n\n\nLinked Lists\n\n Description:\n\n Singly Linked Lists (video)\n CS 61B - Linked Lists 1 (video)\n CS 61B - Linked Lists 2 (video)\n\n\n C Code (video)\n- not the whole video, just portions about Node struct and memory allocation.\n Linked List vs Arrays:\n\nCore Linked Lists Vs Arrays (video)\nIn The Real World Linked Lists Vs Arrays (video)\n\n\n why you should avoid linked lists (video)\n Gotcha: you need pointer to pointer knowledge:\n(for when you pass a pointer to a function that may change the address where that pointer points)\nThis page is just to get a grasp on ptr to ptr. I don't recommend this list traversal style. Readability and maintainability suffer due to cleverness.\n\nPointers to Pointers\n\n\n implement (I did with tail pointer & without):\n\n size() - returns number of data elements in list\n empty() - bool returns true if empty\n value_at(index) - returns the value of the nth item (starting at 0 for first)\n push_front(value) - adds an item to the front of the list\n pop_front() - remove front item and return its value\n push_back(value) - adds an item at the end\n pop_back() - removes end item and returns its value\n front() - get value of front item\n back() - get value of end item\n insert(index, value) - insert value at index, so current item at that index is pointed to by new item at index\n erase(index) - removes node at given index\n value_n_from_end(n) - returns the value of the node at nth position from the end of the list\n reverse() - reverses the list\n remove_value(value) - removes the first item in the list with this value\n\n\n Doubly-linked List\n\nDescription (video)\nNo need to implement\n\n\n\n\n\nStack\n\n Stacks (video)\n Using Stacks Last-In First-Out (video)\n Will not implement. Implementing with array is trivial.\n\n\n\nQueue\n\n Using Queues First-In First-Out(video)\n Queue (video)\n Circular buffer/FIFO\n Priority Queues (video)\n Implement using linked-list, with tail pointer:\n\nenqueue(value) - adds value at position at tail\ndequeue() - returns value and removes least recently added element (front)\nempty()\n\n\n Implement using fixed-sized array:\n\nenqueue(value) - adds item at end of available storage\ndequeue() - returns value and removes least recently added element\nempty()\nfull()\n\n\n Cost:\n\na bad implementation using linked list where you enqueue at head and dequeue at tail would be O(n)\nbecause you'd need the next to last element, causing a full traversal each dequeue\nenqueue: O(1) (amortized, linked list and array [probing])\ndequeue: O(1) (linked list and array)\nempty: O(1) (linked list and array)\n\n\n\n\n\nHash table\n\n\n Videos:\n\n Hashing with Chaining (video)\n Table Doubling, Karp-Rabin (video)\n Open Addressing, Cryptographic Hashing (video)\n PyCon 2010: The Mighty Dictionary (video)\n (Advanced) Randomization: Universal & Perfect Hashing (video)\n (Advanced) Perfect hashing (video)\n\n\n\n Online Courses:\n\n Understanding Hash Functions (video)\n Using Hash Tables (video)\n Supporting Hashing (video)\n Language Support Hash Tables (video)\n Core Hash Tables (video)\n Data Structures (video)\n Phone Book Problem (video)\n distributed hash tables:\n\nInstant Uploads And Storage Optimization In Dropbox (video)\nDistributed Hash Tables (video)\n\n\n\n\n\n implement with array using linear probing\n\nhash(k, m) - m is size of hash table\nadd(key, value) - if key already exists, update value\nexists(key)\nget(key)\nremove(key)\n\n\n\n\n\n\nMore Knowledge\n\nMore Knowledge\n\n\nBinary search\n\n Binary Search (video)\n Binary Search (video)\n detail\n Implement:\n\nbinary search (on sorted array of integers)\nbinary search using recursion\n\n\n\n\n\nBitwise operations\n\n Bits cheat sheet - you should know many of the powers of 2 from (2^1 to 2^16 and 2^32)\n Get a really good understanding of manipulating bits with: &, |, ^, ~, >>, <<\n\n words\n Good intro:\nBit Manipulation (video)\n C Programming Tutorial 2-10: Bitwise Operators (video)\n Bit Manipulation\n Bitwise Operation\n Bithacks\n The Bit Twiddler\n The Bit Twiddler Interactive\n\n\n 2s and 1s complement\n\nBinary: Plusses & Minuses (Why We Use Two's Complement) (video)\n1s Complement\n2s Complement\n\n\n count set bits\n\n4 ways to count bits in a byte (video)\nCount Bits\nHow To Count The Number Of Set Bits In a 32 Bit Integer\n\n\n round to next power of 2:\n\nRound Up To Next Power Of Two\n\n\n swap values:\n\nSwap\n\n\n absolute value:\n\nAbsolute Integer\n\n\n\n\n\n\nTrees\n\nTrees\n\n\nTrees - Notes & Background\n\n Series: Core Trees (video)\n Series: Trees (video)\nbasic tree construction\ntraversal\nmanipulation algorithms\n BFS(breadth-first search) and DFS(depth-first search) (video)\n\nBFS notes:\n\nlevel order (BFS, using queue)\ntime complexity: O(n)\nspace complexity: best: O(1), worst: O(n/2)=O(n)\n\n\nDFS notes:\n\ntime complexity: O(n)\nspace complexity:\nbest: O(log n) - avg. height of tree\nworst: O(n)\ninorder (DFS: left, self, right)\npostorder (DFS: left, right, self)\npreorder (DFS: self, left, right)\n\n\n\n\n\n\n\nBinary search trees: BSTs\n\n Binary Search Tree Review (video)\n Series (video)\n\nstarts with symbol table and goes through BST applications\n\n\n Introduction (video)\n MIT (video)\nC/C++:\n\n Binary search tree - Implementation in C/C++ (video)\n BST implementation - memory allocation in stack and heap (video)\n Find min and max element in a binary search tree (video)\n Find height of a binary tree (video)\n Binary tree traversal - breadth-first and depth-first strategies (video)\n Binary tree: Level Order Traversal (video)\n Binary tree traversal: Preorder, Inorder, Postorder (video)\n Check if a binary tree is binary search tree or not (video)\n Delete a node from Binary Search Tree (video)\n Inorder Successor in a binary search tree (video)\n\n\n Implement:\n\n insert    // insert value into tree\n get_node_count // get count of values stored\n print_values // prints the values in the tree, from min to max\n delete_tree\n is_in_tree // returns true if given value exists in the tree\n get_height // returns the height in nodes (single node's height is 1)\n get_min   // returns the minimum value stored in the tree\n get_max   // returns the maximum value stored in the tree\n is_binary_search_tree\n delete_value\n get_successor // returns next-highest value in tree after given value, -1 if none\n\n\n\n\n\nHeap / Priority Queue / Binary Heap\n\nvisualized as a tree, but is usually linear in storage (array, linked list)\n Heap\n Introduction (video)\n Naive Implementations (video)\n Binary Trees (video)\n Tree Height Remark (video)\n Basic Operations (video)\n Complete Binary Trees (video)\n Pseudocode (video)\n Heap Sort - jumps to start (video)\n Heap Sort (video)\n Building a heap (video)\n MIT: Heaps and Heap Sort (video)\n CS 61B Lecture 24: Priority Queues (video)\n Linear Time BuildHeap (max-heap)\n Implement a max-heap:\n\n insert\n sift_up - needed for insert\n get_max - returns the max item, without removing it\n get_size() - return number of elements stored\n is_empty() - returns true if heap contains no elements\n extract_max - returns the max item, removing it\n sift_down - needed for extract_max\n remove(i) - removes item at index x\n heapify - create a heap from an array of elements, needed for heap_sort\n heap_sort() - take an unsorted array and turn it into a sorted array in-place using a max heap\n\nnote: using a min heap instead would save operations, but double the space needed (cannot do in-place).\n\n\n\n\n\n\n\n\nSorting\n\nSorting\n\n\n Notes:\n\nImplement sorts & know best case/worst case, average complexity of each:\n\nno bubble sort - it's terrible - O(n^2), except when n <= 16\n\n\n stability in sorting algorithms (\"Is Quicksort stable?\")\n\nSorting Algorithm Stability\nStability In Sorting Algorithms\nStability In Sorting Algorithms\nSorting Algorithms - Stability\n\n\n Which algorithms can be used on linked lists? Which on arrays? Which on both?\n\nI wouldn't recommend sorting a linked list, but merge sort is doable.\nMerge Sort For Linked List\n\n\n\n\n\nFor heapsort, see Heap data structure above. Heap sort is great, but not stable.\n\n\n Sedgewick - Mergesort (5 videos)\n\n 1. Mergesort\n 2. Bottom up Mergesort\n 3. Sorting Complexity\n 4. Comparators\n 5. Stability\n\n\n\n Sedgewick - Quicksort (4 videos)\n\n 1. Quicksort\n 2. Selection\n 3. Duplicate Keys\n 4. System Sorts\n\n\n\n UC Berkeley:\n\n CS 61B Lecture 29: Sorting I (video)\n CS 61B Lecture 30: Sorting II (video)\n CS 61B Lecture 32: Sorting III (video)\n CS 61B Lecture 33: Sorting V (video)\n\n\n\n Bubble Sort (video)\n\n\n Analyzing Bubble Sort (video)\n\n\n Insertion Sort, Merge Sort (video)\n\n\n Insertion Sort (video)\n\n\n Merge Sort (video)\n\n\n Quicksort (video)\n\n\n Selection Sort (video)\n\n\n Merge sort code:\n\n Using output array (C)\n Using output array (Python)\n In-place (C++)\n\n\n\n Quick sort code:\n\n Implementation (C)\n Implementation (C)\n Implementation (Python)\n\n\n\n Implement:\n\n Mergesort: O(n log n) average and worst case\n Quicksort O(n log n) average case\nSelection sort and insertion sort are both O(n^2) average and worst case\nFor heapsort, see Heap data structure above.\n\n\n\n Not required, but I recommended them:\n\n Sedgewick - Radix Sorts (6 videos)\n\n 1. Strings in Java\n 2. Key Indexed Counting\n 3. Least Significant Digit First String Radix Sort\n 4. Most Significant Digit First String Radix Sort\n 5. 3 Way Radix Quicksort\n 6. Suffix Arrays\n\n\n Radix Sort\n Radix Sort (video)\n Radix Sort, Counting Sort (linear time given constraints) (video)\n Randomization: Matrix Multiply, Quicksort, Freivalds' algorithm (video)\n Sorting in Linear Time (video)\n\n\n\nAs a summary, here is a visual representation of 15 sorting algorithms.\nIf you need more detail on this subject, see \"Sorting\" section in Additional Detail on Some Subjects\n\nGraphs\n\nGraphs\nGraphs can be used to represent many problems in computer science, so this section is long, like trees and sorting were.\n\n\nNotes:\n\nThere are 4 basic ways to represent a graph in memory:\n\nobjects and pointers\nadjacency matrix\nadjacency list\nadjacency map\n\n\nFamiliarize yourself with each representation and its pros & cons\nBFS and DFS - know their computational complexity, their tradeoffs, and how to implement them in real code\nWhen asked a question, look for a graph-based solution first, then move on if none.\n\n\n\n MIT(videos):\n\n Breadth-First Search\n Depth-First Search\n\n\n\n Skiena Lectures - great intro:\n\n CSE373 2012 - Lecture 11 - Graph Data Structures (video)\n CSE373 2012 - Lecture 12 - Breadth-First Search (video)\n CSE373 2012 - Lecture 13 - Graph Algorithms (video)\n CSE373 2012 - Lecture 14 - Graph Algorithms (con't) (video)\n CSE373 2012 - Lecture 15 - Graph Algorithms (con't 2) (video)\n CSE373 2012 - Lecture 16 - Graph Algorithms (con't 3) (video)\n\n\n\n Graphs (review and more):\n\n 6.006 Single-Source Shortest Paths Problem (video)\n 6.006 Dijkstra (video)\n 6.006 Bellman-Ford (video)\n 6.006 Speeding Up Dijkstra (video)\n Aduni: Graph Algorithms I - Topological Sorting, Minimum Spanning Trees, Prim's Algorithm -  Lecture 6 (video)\n Aduni: Graph Algorithms II - DFS, BFS, Kruskal's Algorithm, Union Find Data Structure - Lecture 7 (video)\n Aduni: Graph Algorithms III: Shortest Path - Lecture 8 (video)\n Aduni: Graph Alg. IV: Intro to geometric algorithms - Lecture 9 (video)\n CS 61B 2014 (starting at 58:09) (video)\n CS 61B 2014: Weighted graphs (video)\n Greedy Algorithms: Minimum Spanning Tree (video)\n Strongly Connected Components Kosaraju's Algorithm Graph Algorithm (video)\n\n\n\nFull Coursera Course:\n\n Algorithms on Graphs (video)\n\n\n\nI'll implement:\n\n DFS with adjacency list (recursive)\n DFS with adjacency list (iterative with stack)\n DFS with adjacency matrix (recursive)\n DFS with adjacency matrix (iterative with stack)\n BFS with adjacency list\n BFS with adjacency matrix\n single-source shortest path (Dijkstra)\n minimum spanning tree\nDFS-based algorithms (see Aduni videos above):\n\n check for cycle (needed for topological sort, since we'll check for cycle before starting)\n topological sort\n count connected components in a graph\n list strongly connected components\n check for bipartite graph\n\n\n\n\n\n\nEven More Knowledge\n\nEven More Knowledge\n\n\nRecursion\n\n Stanford lectures on recursion & backtracking:\n\n Lecture 8 | Programming Abstractions (video)\n Lecture 9 | Programming Abstractions (video)\n Lecture 10 | Programming Abstractions (video)\n Lecture 11 | Programming Abstractions (video)\n\n\nwhen it is appropriate to use it\nhow is tail recursion better than not?\n\n What Is Tail Recursion Why Is It So Bad?\n Tail Recursion (video)\n\n\n\n\n\nDynamic Programming\n\nYou probably won't see any dynamic programming problems in your interview, but it's worth being able to recognize a problem as being a candidate for dynamic programming.\nThis subject can be pretty difficult, as each DP soluble problem must be defined as a recursion relation, and coming up with it can be tricky.\nI suggest looking at many examples of DP problems until you have a solid understanding of the pattern involved.\n Videos:\n\nthe Skiena videos can be hard to follow since he sometimes uses the whiteboard, which is too small to see\n Skiena: CSE373 2012 - Lecture 19 - Introduction to Dynamic Programming (video)\n Skiena: CSE373 2012 - Lecture 20 - Edit Distance (video)\n Skiena: CSE373 2012 - Lecture 21 - Dynamic Programming Examples (video)\n Skiena: CSE373 2012 - Lecture 22 - Applications of Dynamic Programming (video)\n Simonson: Dynamic Programming 0 (starts at 59:18) (video)\n Simonson: Dynamic Programming I - Lecture 11 (video)\n Simonson: Dynamic programming II - Lecture 12 (video)\n List of individual DP problems (each is short):\nDynamic Programming (video)\n\n\n Yale Lecture notes:\n\n Dynamic Programming\n\n\n Coursera:\n\n The RNA secondary structure problem (video)\n A dynamic programming algorithm (video)\n Illustrating the DP algorithm (video)\n Running time of the DP algorithm (video)\n DP vs. recursive implementation (video)\n Global pairwise sequence alignment (video)\n Local pairwise sequence alignment (video)\n\n\n\n\n\nObject-Oriented Programming\n\n Optional: UML 2.0 Series (video)\n Object-Oriented Software Engineering: Software Dev Using UML and Java (21 videos):\n\nCan skip this if you have a great grasp of OO and OO design practices.\nOOSE: Software Dev Using UML and Java (video)\n\n\n SOLID OOP Principles:\n\n Bob Martin SOLID Principles of Object Oriented and Agile Design (video)\n SOLID Principles (video)\n S - Single Responsibility Principle | Single responsibility to each Object\n\nmore flavor\n\n\n O - Open/Closed Principal  | On production level Objects are ready for extension but not for modification\n\nmore flavor\n\n\n L - Liskov Substitution Principal | Base Class and Derived class follow \u2018IS A\u2019 principal\n\nmore flavor\n\n\n I - Interface segregation principle | clients should not be forced to implement interfaces they don't use\n\nInterface Segregation Principle in 5 minutes (video)\nmore flavor\n\n\n D -Dependency Inversion principle | Reduce the dependency In composition of objects.\n\nWhy Is The Dependency Inversion Principle And Why Is It Important\nmore flavor\n\n\n\n\n\n\n\nDesign patterns\n\n Quick UML review (video)\n Learn these patterns:\n\n strategy\n singleton\n adapter\n prototype\n decorator\n visitor\n factory, abstract factory\n facade\n observer\n proxy\n delegate\n command\n state\n memento\n iterator\n composite\n flyweight\n\n\n Chapter 6 (Part 1) - Patterns (video)\n Chapter 6 (Part 2) - Abstraction-Occurrence, General Hierarchy, Player-Role, Singleton, Observer, Delegation (video)\n Chapter 6 (Part 3) - Adapter, Facade, Immutable, Read-Only Interface, Proxy (video)\n Series of videos (27 videos)\n Head First Design Patterns\n\nI know the canonical book is \"Design Patterns: Elements of Reusable Object-Oriented Software\", but Head First is great for beginners to OO.\n\n\n Handy reference: 101 Design Patterns & Tips for Developers\n Design patterns for humans\n\n\n\nCombinatorics (n choose k) & Probability\n\n Math Skills: How to find Factorial, Permutation and Combination (Choose) (video)\n Make School: Probability (video)\n Make School: More Probability and Markov Chains (video)\n Khan Academy:\n\nCourse layout:\n\n Basic Theoretical Probability\n\n\nJust the videos - 41 (each are simple and each are short):\n\n Probability Explained (video)\n\n\n\n\n\n\n\nNP, NP-Complete and Approximation Algorithms\n\nKnow about the most famous classes of NP-complete problems, such as traveling salesman and the knapsack problem,\nand be able to recognize them when an interviewer asks you them in disguise.\nKnow what NP-complete means.\n Computational Complexity (video)\n Simonson:\n\n Greedy Algs. II & Intro to NP Completeness (video)\n NP Completeness II & Reductions (video)\n NP Completeness III (Video)\n NP Completeness IV (video)\n\n\n Skiena:\n\n CSE373 2012 - Lecture 23 - Introduction to NP-Completeness (video)\n CSE373 2012 - Lecture 24 - NP-Completeness Proofs (video)\n CSE373 2012 - Lecture 25 - NP-Completeness Challenge (video)\n\n\n Complexity: P, NP, NP-completeness, Reductions (video)\n Complexity: Approximation Algorithms (video)\n Complexity: Fixed-Parameter Algorithms (video)\nPeter Norvig discusses near-optimal solutions to traveling salesman problem:\n\nJupyter Notebook\n\n\nPages 1048 - 1140 in CLRS if you have it.\n\n\n\nCaches\n\n LRU cache:\n\n The Magic of LRU Cache (100 Days of Google Dev) (video)\n Implementing LRU (video)\n LeetCode - 146 LRU Cache (C++) (video)\n\n\n CPU cache:\n\n MIT 6.004 L15: The Memory Hierarchy (video)\n MIT 6.004 L16: Cache Issues (video)\n\n\n\n\n\nProcesses and Threads\n\n Computer Science 162 - Operating Systems (25 videos):\n\nfor processes and threads see videos 1-11\nOperating Systems and System Programming (video)\n\n\nWhat Is The Difference Between A Process And A Thread?\nCovers:\n\nProcesses, Threads, Concurrency issues\n\ndifference between processes and threads\nprocesses\nthreads\nlocks\nmutexes\nsemaphores\nmonitors\nhow they work\ndeadlock\nlivelock\n\n\nCPU activity, interrupts, context switching\nModern concurrency constructs with multicore processors\nPaging, segmentation and virtual memory (video)\nInterrupts (video)\nScheduling (video)\nProcess resource needs (memory: code, static storage, stack, heap, and also file descriptors, i/o)\nThread resource needs (shares above (minus stack) with other threads in the same process but each has its own pc, stack counter, registers, and stack)\nForking is really copy on write (read-only) until the new process writes to memory, then it does a full copy.\nContext switching\n\nHow context switching is initiated by the operating system and underlying hardware\n\n\n\n\n threads in C++ (series - 10 videos)\n concurrency in Python (videos):\n\n Short series on threads\n Python Threads\n Understanding the Python GIL (2010)\n\nreference\n\n\n David Beazley - Python Concurrency From the Ground Up: LIVE! - PyCon 2015\n Keynote David Beazley - Topics of Interest (Python Asyncio)\n Mutex in Python\n\n\n\n\n\nTesting\n\nTo cover:\n\nhow unit testing works\nwhat are mock objects\nwhat is integration testing\nwhat is dependency injection\n\n\n Agile Software Testing with James Bach (video)\n Open Lecture by James Bach on Software Testing (video)\n Steve Freeman - Test-Driven Development (that\u2019s not what we meant) (video)\n\nslides\n\n\n TDD is dead. Long live testing.\n Is TDD dead? (video)\n Video series (152 videos) - not all are needed (video)\n Test-Driven Web Development with Python\n Dependency injection:\n\n video\n Tao Of Testing\n\n\n How to write tests\n\n\n\nScheduling\n\nin an OS, how it works\ncan be gleaned from Operating System videos\n\n\n\nString searching & manipulations\n\n Sedgewick - Suffix Arrays (video)\n Sedgewick - Substring Search (videos)\n\n 1. Introduction to Substring Search\n 2. Brute-Force Substring Search\n 3. Knuth-Morris Pratt\n 4. Boyer-Moore\n 5. Rabin-Karp\n\n\n Search pattern in text (video)\n\nIf you need more detail on this subject, see \"String Matching\" section in Additional Detail on Some Subjects\n\n\nTries\n\nNote there are different kinds of tries. Some have prefixes, some don't, and some use string instead of bits\nto track the path.\nI read through code, but will not implement.\n Sedgewick - Tries (3 videos)\n\n 1. R Way Tries\n 2. Ternary Search Tries\n 3. Character Based Operations\n\n\n Notes on Data Structures and Programming Techniques\n Short course videos:\n\n Introduction To Tries (video)\n Performance Of Tries (video)\n Implementing A Trie (video)\n\n\n The Trie: A Neglected Data Structure\n TopCoder - Using Tries\n Stanford Lecture (real world use case) (video)\n MIT, Advanced Data Structures, Strings (can get pretty obscure about halfway through) (video)\n\n\n\nFloating Point Numbers\n\n simple 8-bit: Representation of Floating Point Numbers - 1 (video - there is an error in calculations - see video description)\n 32 bit: IEEE754 32-bit floating point binary (video)\n\n\n\nUnicode\n\n The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets\n What Every Programmer Absolutely, Positively Needs To Know About Encodings And Character Sets To Work With Text\n\n\n\nEndianness\n\n Big And Little Endian\n Big Endian Vs Little Endian (video)\n Big And Little Endian Inside/Out (video)\n\nVery technical talk for kernel devs. Don't worry if most is over your head.\nThe first half is enough.\n\n\n\n\n\nNetworking\n\nif you have networking experience or want to be a reliability engineer or operations engineer, expect questions\notherwise, this is just good to know\n Khan Academy\n UDP and TCP: Comparison of Transport Protocols (video)\n TCP/IP and the OSI Model Explained! (video)\n Packet Transmission across the Internet. Networking & TCP/IP tutorial. (video)\n HTTP (video)\n SSL and HTTPS (video)\n SSL/TLS (video)\n HTTP 2.0 (video)\n Video Series (21 videos) (video)\n Subnetting Demystified - Part 5 CIDR Notation (video)\n Sockets:\n\n Java - Sockets - Introduction (video)\n Socket Programming (video)\n\n\n\n\n\n\nSystem Design, Scalability, Data Handling\n\nSystem Design, Scalability, Data Handling\nYou can expect system design questions if you have 4+ years of experience.\n\nScalability and System Design are very large topics with many topics and resources, since\nthere is a lot to consider when designing a software/hardware system that can scale.\nExpect to spend quite a bit of time on this.\nConsiderations:\n\nscalability\n\nDistill large data sets to single values\nTransform one data set to another\nHandling obscenely large amounts of data\n\n\nsystem design\n\nfeatures sets\ninterfaces\nclass hierarchies\ndesigning a system under certain constraints\nsimplicity and robustness\ntradeoffs\nperformance analysis and optimization\n\n\n\n\n START HERE: The System Design Primer\n System Design from HiredInTech\n How Do I Prepare To Answer Design Questions In A Technical Inverview?\n 8 Things You Need to Know Before a System Design Interview\n Algorithm design\n Database Normalization - 1NF, 2NF, 3NF and 4NF (video)\n System Design Interview - There are a lot of resources in this one. Look through the articles and examples. I put some of them below.\n How to ace a systems design interview\n Numbers Everyone Should Know\n How long does it take to make a context switch?\n Transactions Across Datacenters (video)\n A plain English introduction to CAP Theorem\n Consensus Algorithms:\n\n Paxos - Paxos Agreement - Computerphile (video)\n Raft - An Introduction to the Raft Distributed Consensus Algorithm (video)\n\n Easy-to-read paper\n Infographic\n\n\n\n\n Consistent Hashing\n NoSQL Patterns\n Scalability:\n\nYou don't need all of these. Just pick a few that interest you.\n Great overview (video)\n Short series:\n\nClones\nDatabase\nCache\nAsynchronism\n\n\n Scalable Web Architecture and Distributed Systems\n Fallacies of Distributed Computing Explained\n Pragmatic Programming Techniques\n\nextra: Google Pregel Graph Processing\n\n\n Jeff Dean - Building Software Systems At Google and Lessons Learned (video)\n Introduction to Architecting Systems for Scale\n Scaling mobile games to a global audience using App Engine and Cloud Datastore (video)\n How Google Does Planet-Scale Engineering for Planet-Scale Infra (video)\n The Importance of Algorithms\n Sharding\n Scale at Facebook (2012), \"Building for a Billion Users\" (video)\n Engineering for the Long Game - Astrid Atkinson Keynote(video)\n 7 Years Of YouTube Scalability Lessons In 30 Minutes\n\nvideo\n\n\n How PayPal Scaled To Billions Of Transactions Daily Using Just 8VMs\n How to Remove Duplicates in Large Datasets\n A look inside Etsy's scale and engineering culture with Jon Cowie (video)\n What Led Amazon to its Own Microservices Architecture\n To Compress Or Not To Compress, That Was Uber's Question\n Asyncio Tarantool Queue, Get In The Queue\n When Should Approximate Query Processing Be Used?\n Google's Transition From Single Datacenter, To Failover, To A Native Multihomed Architecture\n Spanner\n Machine Learning Driven Programming: A New Programming For A New World\n The Image Optimization Technology That Serves Millions Of Requests Per Day\n A Patreon Architecture Short\n Tinder: How Does One Of The Largest Recommendation Engines Decide Who You'll See Next?\n Design Of A Modern Cache\n Live Video Streaming At Facebook Scale\n A Beginner's Guide To Scaling To 11 Million+ Users On Amazon's AWS\n How Does The Use Of Docker Effect Latency?\n A 360 Degree View Of The Entire Netflix Stack\n Latency Is Everywhere And It Costs You Sales - How To Crush It\n Serverless (very long, just need the gist)\n What Powers Instagram: Hundreds of Instances, Dozens of Technologies\n Cinchcast Architecture - Producing 1,500 Hours Of Audio Every Day\n Justin.Tv's Live Video Broadcasting Architecture\n Playfish's Social Gaming Architecture - 50 Million Monthly Users And Growing\n TripAdvisor Architecture - 40M Visitors, 200M Dynamic Page Views, 30TB Data\n PlentyOfFish Architecture\n Salesforce Architecture - How They Handle 1.3 Billion Transactions A Day\n ESPN's Architecture At Scale - Operating At 100,000 Duh Nuh Nuhs Per Second\n See \"Messaging, Serialization, and Queueing Systems\" way below for info on some of the technologies that can glue services together\n Twitter:\n\nO'Reilly MySQL CE 2011: Jeremy Cole, \"Big and Small Data at @Twitter\" (video)\nTimelines at Scale\n\n\nFor even more, see \"Mining Massive Datasets\" video series in the Video Series section.\n\n\n Practicing the system design process: Here are some ideas to try working through on paper, each with some documentation on how it was handled in the real world:\n\nreview: The System Design Primer\nSystem Design from HiredInTech\ncheat sheet\nflow:\n\nUnderstand the problem and scope:\n\ndefine the use cases, with interviewer's help\nsuggest additional features\nremove items that interviewer deems out of scope\nassume high availability is required, add as a use case\n\n\nThink about constraints:\n\nask how many requests per month\nask how many requests per second (they may volunteer it or make you do the math)\nestimate reads vs. writes percentage\nkeep 80/20 rule in mind when estimating\nhow much data written per second\ntotal storage required over 5 years\nhow much data read per second\n\n\nAbstract design:\n\nlayers (service, data, caching)\ninfrastructure: load balancing, messaging\nrough overview of any key algorithm that drives the service\nconsider bottlenecks and determine solutions\n\n\n\n\nExercises:\n\nDesign a CDN network: old article\nDesign a random unique ID generation system\nDesign an online multiplayer card game\nDesign a key-value database\nDesign a picture sharing system\nDesign a recommendation system\nDesign a URL-shortener system: copied from above\nDesign a cache system\n\n\n\n\n\n\n\nFinal Review\n\nFinal Review\nThis section will have shorter videos that you can watch pretty quickly to review most of the important concepts.\nIt's nice if you want a refresher often.\n\n\n Series of 2-3 minutes short subject videos (23 videos)\n\nVideos\n\n\n Series of 2-5 minutes short subject videos - Michael Sambol (18 videos):\n\nVideos\n\n\n Sedgewick Videos - Algorithms I\n Sedgewick Videos - Algorithms II\n\n\n\nCoding Question Practice\n\nCoding Question Practice\nNow that you know all the computer science topics above, it's time to practice answering coding problems.\nCoding question practice is not about memorizing answers to programming problems.\nWhy you need to practice doing programming problems:\n\nproblem recognition, and where the right data structures and algorithms fit in\ngathering requirements for the problem\ntalking your way through the problem like you will in the interview\ncoding on a whiteboard or paper, not a computer\ncoming up with time and space complexity for your solutions\ntesting your solutions\n\nThere is a great intro for methodical, communicative problem solving in an interview. You'll get this from the programming\ninterview books, too, but I found this outstanding:\nAlgorithm design canvas\nNo whiteboard at home? That makes sense. I'm a weirdo and have a big whiteboard. Instead of a whiteboard, pick up a\nlarge drawing pad from an art store. You can sit on the couch and practice. This is my \"sofa whiteboard\".\nI added the pen in the photo for scale. If you use a pen, you'll wish you could erase. Gets messy quick.\n\nSupplemental:\n\nMathematics for Topcoders\nDynamic Programming \u2013 From Novice to Advanced\nMIT Interview Materials\nExercises for getting better at a given language\n\nRead and Do Programming Problems (in this order):\n\n Programming Interviews Exposed: Secrets to Landing Your Next Job, 2nd Edition\n\nanswers in C, C++ and Java\n\n\n Cracking the Coding Interview, 6th Edition\n\nanswers in Java\n\n\n\nSee Book List above\n\nCoding exercises/challenges\n\nCoding Question Practice\nOnce you've learned your brains out, put those brains to work.\nTake coding challenges every day, as many as you can.\n\n How to Find a Solution\n How to Dissect a Topcoder Problem Statement\n\nCoding Interview Question Videos:\n\nIDeserve (88 videos)\nTushar Roy (5 playlists)\n\nChallenge sites:\n\nLeetCode\nTopCoder\nProject Euler (math-focused)\nCodewars\nHackerEarth\nHackerRank\nCodility\nInterviewCake\nGeeks for Geeks\nInterviewBit\nSphere Online Judge (spoj)\nCodechef\n\nChallenge repos:\n\nInteractive Coding Interview Challenges in Python\n\nMock Interviews:\n\nGainlo.co: Mock interviewers from big companies - I used this and it helped me relax for the phone screen and on-site interview.\nPramp: Mock interviews from/with peers - peer-to-peer model of practice interviews\nRefdash: Mock interviews and expedited interviews - also help candidates fast track by skipping multiple interviews with tech companies.\n\n\nOnce you're closer to the interview\n\n Cracking The Coding Interview Set 2 (videos):\n\nCracking The Code Interview\nCracking the Coding Interview - Fullstack Speaker Series\n\n\n\nYour Resume\n\nSee Resume prep items in Cracking The Coding Interview and back of Programming Interviews Exposed\n\nBe thinking of for when the interview comes\nThink of about 20 interview questions you'll get, along with the lines of the items below. Have 2-3 answers for each.\nHave a story, not just data, about something you accomplished.\n\nWhy do you want this job?\nWhat's a tough problem you've solved?\nBiggest challenges faced?\nBest/worst designs seen?\nIdeas for improving an existing product.\nHow do you work best, as an individual and as part of a team?\nWhich of your skills or experiences would be assets in the role and why?\nWhat did you most enjoy at [job x / project y]?\nWhat was the biggest challenge you faced at [job x / project y]?\nWhat was the hardest bug you faced at [job x / project y]?\nWhat did you learn at [job x / project y]?\nWhat would you have done better at [job x / project y]?\n\nHave questions for the interviewer\nSome of mine (I already may know answer to but want their opinion or team perspective):\n\n\nHow large is your team?\nWhat does your dev cycle look like? Do you do waterfall/sprints/agile?\nAre rushes to deadlines common? Or is there flexibility?\nHow are decisions made in your team?\nHow many meetings do you have per week?\nDo you feel your work environment helps you concentrate?\nWhat are you working on?\nWhat do you like about it?\nWhat is the work life like?\n\nOnce You've Got The Job\nCongratulations!\nKeep learning.\nYou're never really done.\n\n*****************************************************************************************************\n*****************************************************************************************************\n\nEverything below this point is optional.\nBy studying these, you'll get greater exposure to more CS concepts, and will be better prepared for\nany software engineering job. You'll be a much more well-rounded software engineer.\n\n*****************************************************************************************************\n*****************************************************************************************************\n\n\nAdditional Books\n\nAdditional Books\n\n\nThe Unix Programming Environment\n\nan oldie but a goodie\n\n\n\nThe Linux Command Line: A Complete Introduction\n\na modern option\n\n\n\nTCP/IP Illustrated Series\n\n\nHead First Design Patterns\n\na gentle introduction to design patterns\n\n\n\nDesign Patterns: Elements of Reusable Object-Oriente\u200bd Software\n\naka the \"Gang Of Four\" book, or GOF\nthe canonical design patterns book\n\n\n\nUNIX and Linux System Administration Handbook, 5th Edition\n\n\nAlgorithm Design Manual (Skiena)\n\nAs a review and problem recognition\nThe algorithm catalog portion is well beyond the scope of difficulty you'll get in an interview.\nThis book has 2 parts:\n\nclass textbook on data structures and algorithms\n\npros:\n\nis a good review as any algorithms textbook would be\nnice stories from his experiences solving problems in industry and academia\ncode examples in C\n\n\ncons:\n\ncan be as dense or impenetrable as CLRS, and in some cases, CLRS may be a better alternative for some subjects\nchapters 7, 8, 9 can be painful to try to follow, as some items are not explained well or require more brain than I have\ndon't get me wrong: I like Skiena, his teaching style, and mannerisms, but I may not be Stony Brook material.\n\n\n\n\nalgorithm catalog:\n\nthis is the real reason you buy this book.\nabout to get to this part. Will update here once I've made my way through it.\n\n\n\n\nCan rent it on kindle\nAnswers:\n\nSolutions\nSolutions\n\n\nErrata\n\n\n\nIntroduction to Algorithms\n\nImportant: Reading this book will only have limited value. This book is a great review of algorithms and data structures, but won't teach you how to write good code. You have to be able to code a decent solution efficiently.\naka CLR, sometimes CLRS, because Stein was late to the game\n\n\n\nComputer Architecture, Sixth Edition: A Quantitative Approach\n\nFor a richer, more up-to-date (2017), but longer treatment\n\n\n\nProgramming Pearls\n\nThe first couple of chapters present clever solutions to programming problems (some very old using data tape) but\nthat is just an intro. This a guidebook on program design and architecture, much like Code Complete, but much shorter.\n\n\n\n\nAdditional Learning\n\nAdditional Learning\nThese topics will likely not come up in an interview, but I added them to help you become a well-rounded\nsoftware engineer, and to be aware of certain technologies and algorithms, so you'll have a bigger toolbox.\n\n\nCompilers\n\n How a Compiler Works in ~1 minute (video)\n Harvard CS50 - Compilers (video)\n C++ (video)\n Understanding Compiler Optimization (C++) (video)\n\n\n\nEmacs and vi(m)\n\nFamiliarize yourself with a unix-based code editor\nvi(m):\n\nEditing With vim 01 - Installation, Setup, and The Modes (video)\nVIM Adventures\nset of 4 videos:\n\nThe vi/vim editor - Lesson 1\nThe vi/vim editor - Lesson 2\nThe vi/vim editor - Lesson 3\nThe vi/vim editor - Lesson 4\n\n\nUsing Vi Instead of Emacs\n\n\nemacs:\n\nBasics Emacs Tutorial (video)\nset of 3 (videos):\n\nEmacs Tutorial (Beginners) -Part 1- File commands, cut/copy/paste, cursor commands\nEmacs Tutorial (Beginners) -Part 2- Buffer management, search, M-x grep and rgrep modes\nEmacs Tutorial (Beginners) -Part 3- Expressions, Statements, ~/.emacs file and packages\n\n\nEvil Mode: Or, How I Learned to Stop Worrying and Love Emacs (video)\nWriting C Programs With Emacs\n(maybe) Org Mode In Depth: Managing Structure (video)\n\n\n\n\n\nUnix command line tools\n\nI filled in the list below from good tools.\n bash\n cat\n grep\n sed\n awk\n curl or wget\n sort\n tr\n uniq\n strace\n tcpdump\n\n\n\nInformation theory (videos)\n\n Khan Academy\n more about Markov processes:\n\n Core Markov Text Generation\n Core Implementing Markov Text Generation\n Project = Markov Text Generation Walk Through\n\n\nSee more in MIT 6.050J Information and Entropy series below.\n\n\n\nParity & Hamming Code (videos)\n\n Intro\n Parity\n Hamming Code:\n\nError detection\nError correction\n\n\n Error Checking\n\n\n\nEntropy\n\nalso see videos below\nmake sure to watch information theory videos first\n Information Theory, Claude Shannon, Entropy, Redundancy, Data Compression & Bits (video)\n\n\n\nCryptography\n\nalso see videos below\nmake sure to watch information theory videos first\n Khan Academy Series\n Cryptography: Hash Functions\n Cryptography: Encryption\n\n\n\nCompression\n\nmake sure to watch information theory videos first\n Computerphile (videos):\n\n Compression\n Entropy in Compression\n Upside Down Trees (Huffman Trees)\n EXTRA BITS/TRITS - Huffman Trees\n Elegant Compression in Text (The LZ 77 Method)\n Text Compression Meets Probabilities\n\n\n Compressor Head videos\n (optional) Google Developers Live: GZIP is not enough!\n\n\n\nComputer Security\n\nMIT (23 videos)\n\n Introduction, Threat Models\n Control Hijacking Attacks\n Buffer Overflow Exploits and Defenses\n Privilege Separation\n Capabilities\n Sandboxing Native Code\n Web Security Model\n Securing Web Applications\n Symbolic Execution\n Network Security\n Network Protocols\n Side-Channel Attacks\n\n\n\n\n\nGarbage collection\n\n GC in Python (video)\n Deep Dive Java: Garbage Collection is Good!\n Deep Dive Python: Garbage Collection in CPython (video)\n\n\n\nParallel Programming\n\n Coursera (Scala)\n Efficient Python for High Performance Parallel Computing (video)\n\n\n\nMessaging, Serialization, and Queueing Systems\n\n Thrift\n\nTutorial\n\n\n Protocol Buffers\n\nTutorials\n\n\n gRPC\n\ngRPC 101 for Java Developers (video)\n\n\n Redis\n\nTutorial\n\n\n Amazon SQS (queue)\n Amazon SNS (pub-sub)\n RabbitMQ\n\nGet Started\n\n\n Celery\n\nFirst Steps With Celery\n\n\n ZeroMQ\n\nIntro - Read The Manual\n\n\n ActiveMQ\n Kafka\n MessagePack\n Avro\n\n\n\nA*\n\n A Search Algorithm\n A* Pathfinding Tutorial (video)\n A* Pathfinding (E01: algorithm explanation) (video)\n\n\n\nFast Fourier Transform\n\n An Interactive Guide To The Fourier Transform\n What is a Fourier transform? What is it used for?\n What is the Fourier Transform? (video)\n Divide & Conquer: FFT (video)\n Understanding The FFT\n\n\n\nBloom Filter\n\nGiven a Bloom filter with m bits and k hashing functions, both insertion and membership testing are O(k)\nBloom Filters (video)\nBloom Filters | Mining of Massive Datasets | Stanford University (video)\nTutorial\nHow To Write A Bloom Filter App\n\n\n\nHyperLogLog\n\nHow To Count A Billion Distinct Objects Using Only 1.5KB Of Memory\n\n\n\nLocality-Sensitive Hashing\n\nused to determine the similarity of documents\nthe opposite of MD5 or SHA which are used to determine if 2 documents/strings are exactly the same.\nSimhashing (hopefully) made simple\n\n\n\nvan Emde Boas Trees\n\n Divide & Conquer: van Emde Boas Trees (video)\n MIT Lecture Notes\n\n\n\nAugmented Data Structures\n\n CS 61B Lecture 39: Augmenting Data Structures\n\n\n\nBalanced search trees\n\n\nKnow at least one type of balanced binary tree (and know how it's implemented):\n\n\n\"Among balanced search trees, AVL and 2/3 trees are now pass\u00e9, and red-black trees seem to be more popular.\nA particularly interesting self-organizing data structure is the splay tree, which uses rotations\nto move any accessed key to the root.\" - Skiena\n\n\nOf these, I chose to implement a splay tree. From what I've read, you won't implement a\nbalanced search tree in your interview. But I wanted exposure to coding one up\nand let's face it, splay trees are the bee's knees. I did read a lot of red-black tree code.\n\nsplay tree: insert, search, delete functions\nIf you end up implementing red/black tree try just these:\nsearch and insertion functions, skipping delete\n\n\n\nI want to learn more about B-Tree since it's used so widely with very large data sets.\n\n\n Self-balancing binary search tree\n\n\n AVL trees\n\nIn practice:\nFrom what I can tell, these aren't used much in practice, but I could see where they would be:\nThe AVL tree is another structure supporting O(log n) search, insertion, and removal. It is more rigidly\nbalanced than red\u2013black trees, leading to slower insertion and removal but faster retrieval. This makes it\nattractive for data structures that may be built once and loaded without reconstruction, such as language\ndictionaries (or program dictionaries, such as the opcodes of an assembler or interpreter).\n MIT AVL Trees / AVL Sort (video)\n AVL Trees (video)\n AVL Tree Implementation (video)\n Split And Merge\n\n\n\n Splay trees\n\nIn practice:\nSplay trees are typically used in the implementation of caches, memory allocators, routers, garbage collectors,\ndata compression, ropes (replacement of string used for long text strings), in Windows NT (in the virtual memory,\nnetworking and file system code) etc.\n CS 61B: Splay Trees (video)\n MIT Lecture: Splay Trees:\n\nGets very mathy, but watch the last 10 minutes for sure.\nVideo\n\n\n\n\n\n Red/black trees\n\nthese are a translation of a 2-3 tree (see below)\nIn practice:\nRed\u2013black trees offer worst-case guarantees for insertion time, deletion time, and search time.\nNot only does this make them valuable in time-sensitive applications such as real-time applications,\nbut it makes them valuable building blocks in other data structures which provide worst-case guarantees;\nfor example, many data structures used in computational geometry can be based on red\u2013black trees, and\nthe Completely Fair Scheduler used in current Linux kernels uses red\u2013black trees. In the version 8 of Java,\nthe Collection HashMap has been modified such that instead of using a LinkedList to store identical elements with poor\nhashcodes, a Red-Black tree is used.\n Aduni - Algorithms - Lecture 4 (link jumps to starting point) (video)\n Aduni - Algorithms - Lecture 5 (video)\n Red-Black Tree\n An Introduction To Binary Search And Red Black Tree\n\n\n\n 2-3 search trees\n\nIn practice:\n2-3 trees have faster inserts at the expense of slower searches (since height is more compared to AVL trees).\nYou would use 2-3 tree very rarely because its implementation involves different types of nodes. Instead, people use Red Black trees.\n 23-Tree Intuition and Definition (video)\n Binary View of 23-Tree\n 2-3 Trees (student recitation) (video)\n\n\n\n 2-3-4 Trees (aka 2-4 trees)\n\nIn practice:\nFor every 2-4 tree, there are corresponding red\u2013black trees with data elements in the same order. The insertion and deletion\noperations on 2-4 trees are also equivalent to color-flipping and rotations in red\u2013black trees. This makes 2-4 trees an\nimportant tool for understanding the logic behind red\u2013black trees, and this is why many introductory algorithm texts introduce\n2-4 trees just before red\u2013black trees, even though 2-4 trees are not often used in practice.\n CS 61B Lecture 26: Balanced Search Trees (video)\n Bottom Up 234-Trees (video)\n Top Down 234-Trees (video)\n\n\n\n N-ary (K-ary, M-ary) trees\n\nnote: the N or K is the branching factor (max branches)\nbinary trees are a 2-ary tree, with branching factor = 2\n2-3 trees are 3-ary\n K-Ary Tree\n\n\n\n B-Trees\n\nfun fact: it's a mystery, but the B could stand for Boeing, Balanced, or Bayer (co-inventor)\nIn Practice:\nB-Trees are widely used in databases. Most modern filesystems use B-trees (or Variants). In addition to\nits use in databases, the B-tree is also used in filesystems to allow quick random access to an arbitrary\nblock in a particular file. The basic problem is turning the file block i address into a disk block\n(or perhaps to a cylinder-head-sector) address.\n B-Tree\n B-Tree Datastructure\n Introduction to B-Trees (video)\n B-Tree Definition and Insertion (video)\n B-Tree Deletion (video)\n MIT 6.851 - Memory Hierarchy Models (video)\n- covers cache-oblivious B-Trees, very interesting data structures\n- the first 37 minutes are very technical, may be skipped (B is block size, cache line size)\n\n\n\n\n\nk-D Trees\n\ngreat for finding number of points in a rectangle or higher dimension object\na good fit for k-nearest neighbors\n Kd Trees (video)\n kNN K-d tree algorithm (video)\n\n\n\nSkip lists\n\n\"These are somewhat of a cult data structure\" - Skiena\n Randomization: Skip Lists (video)\n For animations and a little more detail\n\n\n\nNetwork Flows\n\n Ford-Fulkerson in 5 minutes \u2014 Step by step example (video)\n Ford-Fulkerson Algorithm (video)\n Network Flows (video)\n\n\n\nDisjoint Sets & Union Find\n\n UCB 61B - Disjoint Sets; Sorting & selection (video)\n Sedgewick Algorithms - Union-Find (6 videos)\n\n\n\nMath for Fast Processing\n\n Integer Arithmetic, Karatsuba Multiplication (video)\n The Chinese Remainder Theorem (used in cryptography) (video)\n\n\n\nTreap\n\nCombination of a binary search tree and a heap\n Treap\n Data Structures: Treaps explained (video)\n Applications in set operations\n\n\n\nLinear Programming (videos)\n\n Linear Programming\n Finding minimum cost\n Finding maximum value\n Solve Linear Equations with Python - Simplex Algorithm\n\n\n\nGeometry, Convex hull (videos)\n\n Graph Alg. IV: Intro to geometric algorithms - Lecture 9\n Geometric Algorithms: Graham & Jarvis - Lecture 10\n Divide & Conquer: Convex Hull, Median Finding\n\n\n\nDiscrete math\n\nsee videos below\n\n\n\nMachine Learning\n\n Why ML?\n\n How Google Is Remaking Itself As A Machine Learning First Company\n Large-Scale Deep Learning for Intelligent Computer Systems (video)\n Deep Learning and Understandability versus Software Engineering and Verification by Peter Norvig\n\n\n Google's Cloud Machine learning tools (video)\n Google Developers' Machine Learning Recipes (Scikit Learn & Tensorflow) (video)\n Tensorflow (video)\n Tensorflow Tutorials\n Practical Guide to implementing Neural Networks in Python (using Theano)\nCourses:\n\nGreat starter course: Machine Learning\n- videos only\n- see videos 12-18 for a review of linear algebra (14 and 15 are duplicates)\nNeural Networks for Machine Learning\nGoogle's Deep Learning Nanodegree\nGoogle/Kaggle Machine Learning Engineer Nanodegree\nSelf-Driving Car Engineer Nanodegree\nMetis Online Course ($99 for 2 months)\n\n\nResources:\n\nBooks:\n\nPython Machine Learning\nData Science from Scratch: First Principles with Python\nIntroduction to Machine Learning with Python\n\n\nMachine Learning for Software Engineers\nData School: http://www.dataschool.io/\n\n\n\n\n\n\n\nAdditional Detail on Some Subjects\n\nAdditional Detail on Some Subjects\nI added these to reinforce some ideas already presented above, but didn't want to include them\nabove because it's just too much. It's easy to overdo it on a subject.\nYou want to get hired in this century, right?\n\n\n\n Union-Find\n\n Overview\n Naive Implementation\n Trees\n Union By Rank\n Path Compression\n Analysis Options\n\n\n\n More Dynamic Programming (videos)\n\n 6.006: Dynamic Programming I: Fibonacci, Shortest Paths\n 6.006: Dynamic Programming II: Text Justification, Blackjack\n 6.006: DP III: Parenthesization, Edit Distance, Knapsack\n 6.006: DP IV: Guitar Fingering, Tetris, Super Mario Bros.\n 6.046: Dynamic Programming & Advanced DP\n 6.046: Dynamic Programming: All-Pairs Shortest Paths\n 6.046: Dynamic Programming (student recitation)\n\n\n\n Advanced Graph Processing (videos)\n\n Synchronous Distributed Algorithms: Symmetry-Breaking. Shortest-Paths Spanning Trees\n Asynchronous Distributed Algorithms: Shortest-Paths Spanning Trees\n\n\n\n MIT Probability (mathy, and go slowly, which is good for mathy things) (videos):\n\n MIT 6.042J - Probability Introduction\n MIT 6.042J - Conditional Probability\n MIT 6.042J - Independence\n MIT 6.042J - Random Variables\n MIT 6.042J - Expectation I\n MIT 6.042J - Expectation II\n MIT 6.042J - Large Deviations\n MIT 6.042J - Random Walks\n\n\n\n Simonson: Approximation Algorithms (video)\n\n\n String Matching\n\n Rabin-Karp (videos):\n\nRabin Karps Algorithm\nPrecomputing\nOptimization: Implementation and Analysis\nTable Doubling, Karp-Rabin\nRolling Hashes, Amortized Analysis\n\n\n Knuth-Morris-Pratt (KMP):\n\nTThe Knuth-Morris-Pratt (KMP) String Matching Algorithm\n\n\n Boyer\u2013Moore string search algorithm\n\nBoyer-Moore String Search Algorithm\nAdvanced String Searching Boyer-Moore-Horspool Algorithms (video)\n\n\n Coursera: Algorithms on Strings\n\nstarts off great, but by the time it gets past KMP it gets more complicated than it needs to be\nnice explanation of tries\ncan be skipped\n\n\n\n\n\n Sorting\n\n Stanford lectures on sorting:\n\n Lecture 15 | Programming Abstractions (video)\n Lecture 16 | Programming Abstractions (video)\n\n\n Shai Simonson, Aduni.org:\n\n Algorithms - Sorting - Lecture 2 (video)\n Algorithms - Sorting II - Lecture 3 (video)\n\n\n Steven Skiena lectures on sorting:\n\n lecture begins at 26:46 (video)\n lecture begins at 27:40 (video)\n lecture begins at 35:00 (video)\n lecture begins at 23:50 (video)\n\n\n\n\n\n\nVideo Series\nSit back and enjoy. \"Netflix and skill\" :P\n\nVideo Series\n\n\n List of individual Dynamic Programming problems (each is short)\n\n\n x86 Architecture, Assembly, Applications (11 videos)\n\n\n MIT 18.06 Linear Algebra, Spring 2005 (35 videos)\n\n\n Excellent - MIT Calculus Revisited: Single Variable Calculus\n\n\n Computer Science 70, 001 - Spring 2015 - Discrete Mathematics and Probability Theory\n\n\n Discrete Mathematics by Shai Simonson (19 videos)\n\n\n Discrete Mathematics Part 1 by Sarada Herke (5 videos)\n\n\n CSE373 - Analysis of Algorithms (25 videos)\n\nSkiena lectures from Algorithm Design Manual\n\n\n\n UC Berkeley 61B (Spring 2014): Data Structures (25 videos)\n\n\n UC Berkeley 61B (Fall 2006): Data Structures (39 videos)\n\n\n UC Berkeley 61C: Machine Structures (26 videos)\n\n\n OOSE: Software Dev Using UML and Java (21 videos)\n\n\n UC Berkeley CS 152: Computer Architecture and Engineering (20 videos)\n\n\n MIT 6.004: Computation Structures (49 videos)\n\n\n Carnegie Mellon - Computer Architecture Lectures (39 videos)\n\n\n MIT 6.006: Intro to Algorithms (47 videos)\n\n\n MIT 6.033: Computer System Engineering (22 videos)\n\n\n MIT 6.034 Artificial Intelligence, Fall 2010 (30 videos)\n\n\n MIT 6.042J: Mathematics for Computer Science, Fall 2010 (25 videos)\n\n\n MIT 6.046: Design and Analysis of Algorithms (34 videos)\n\n\n MIT 6.050J: Information and Entropy, Spring 2008 (19 videos)\n\n\n MIT 6.851: Advanced Data Structures (22 videos)\n\n\n MIT 6.854: Advanced Algorithms, Spring 2016 (24 videos)\n\n\n Harvard COMPSCI 224: Advanced Algorithms (25 videos)\n\n\n MIT 6.858 Computer Systems Security, Fall 2014\n\n\n Stanford: Programming Paradigms (27 videos)\n\n\n Introduction to Cryptography by Christof Paar\n\nCourse Website along with Slides and Problem Sets\n\n\n\n Mining Massive Datasets - Stanford University (94 videos)\n\n\n Graph Theory by Sarada Herke (67 videos)\n\n\n\nComputer Science Courses\n\nDirectory of Online CS Courses\nDirectory of CS Courses (many with online lectures)\n\nPapers\n\nPapers\n\nLove classic papers?\n 1978: Communicating Sequential Processes\n\nimplemented in Go\n\n\n 2003: The Google File System\n\nreplaced by Colossus in 2012\n\n\n 2004: MapReduce: Simplified Data Processing on Large Clusters\n\nmostly replaced by Cloud Dataflow?\n\n\n 2006: Bigtable: A Distributed Storage System for Structured Data\n\nAn Inside Look at Google BigQuery\n\n\n 2006: The Chubby Lock Service for Loosely-Coupled Distributed Systems\n 2007: Dynamo: Amazon\u2019s Highly Available Key-value Store\n\nThe Dynamo paper kicked off the NoSQL revolution\n\n\n 2007: What Every Programmer Should Know About Memory (very long, and the author encourages skipping of some sections)\n 2010: Dapper, a Large-Scale Distributed Systems Tracing Infrastructure\n 2010: Dremel: Interactive Analysis of Web-Scale Datasets\n 2012: Google's Colossus\n\npaper not available\n\n\n 2012: AddressSanitizer: A Fast Address Sanity Checker:\n\npaper\nvideo\n\n\n 2013: Spanner: Google\u2019s Globally-Distributed Database:\n\npaper\nvideo\n\n\n 2014: Machine Learning: The High-Interest Credit Card of Technical Debt\n 2015: Continuous Pipelines at Google\n 2015: High-Availability at Massive Scale: Building Google\u2019s Data Infrastructure for Ads\n 2015: TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems\n 2015: How Developers Search for Code: A Case Study\n 2016: Borg, Omega, and Kubernetes\n\n\nLICENSE\nCC-BY-SA-4.0\n\n"}, {"repo": "github/gitignore", "language": "None", "readme": "\nA collection of .gitignore templates\nThis is GitHub\u2019s collection of .gitignore file templates.\nWe use this list to populate the .gitignore template choosers available\nin the GitHub.com interface when creating new repositories and files.\nFor more information about how .gitignore files work, and how to use them,\nthe following resources are a great place to start:\n\nThe Ignoring Files chapter of the Pro Git book.\nThe Ignoring Files article on the GitHub Help site.\nThe gitignore(5) manual page.\n\nFolder structure\nWe support a collection of templates, organized in this way:\n\nthe root folder contains templates in common use, to help people get started\nwith popular programming languages and technologies. These define a meaningful\nset of rules to help get started, and ensure you are not committing\nunimportant files into your repository\nGlobal contains templates for various editors, tools and\noperating systems that can be used in different situations. It is recommended\nthat you either add these to your global template\nor merge these rules into your project-specific templates if you want to use\nthem permanently.\ncommunity contains specialized templates for other popular\nlanguages, tools and project, which don't currently belong in the mainstream\ntemplates. These should be added to your project-specific templates when you\ndecide to adopt the framework or tool.\n\nWhat makes a good template?\nA template should contain a set of rules to help Git repositories work with a\nspecific programming language, framework, tool or environment.\nIf it's not possible to curate a small set of useful rules for this situation,\nthen the template is not a good fit for this collection.\nIf a template is mostly a list of files installed by a particular version of\nsome software (e.g. a PHP framework), it could live under the community\ndirectory. See versioned templates for more details.\nIf you have a small set of rules, or want to support a technology that is not\nwidely in use, and still believe this will be helpful to others, please read the\nsection about specialized templates for more details.\nIf you believe your template is important and should be highly visible, please\nadd details about the impact of the technology when you open a pull request. We\nmay not accept it immediately, but we can promote it to the root at a later date\nbased on interest.\nPlease also understand that we can\u2019t list every tool that ever existed.\nOur aim is to curate a collection of the most common and helpful templates,\nnot to make sure we cover every project possible. If we choose not to\ninclude your language, tool, or project, it\u2019s not because it\u2019s not awesome.\nContributing guidelines\nWe\u2019d love for you to help us improve this project. To help us keep this collection\nhigh quality, we request that contributions adhere to the following guidelines.\n\n\nProvide a link to the application or project\u2019s homepage. Unless it\u2019s\nextremely popular, there\u2019s a chance the maintainers don\u2019t know about or use\nthe language, framework, editor, app, or project your change applies to.\n\n\nProvide links to documentation supporting the change you\u2019re making.\nCurrent, canonical documentation mentioning the files being ignored is best.\nIf documentation isn\u2019t available to support your change, do the best you can\nto explain what the files being ignored are for.\n\n\nExplain why you\u2019re making a change. Even if it seems self-evident, please\ntake a sentence or two to tell us why your change or addition should happen.\nIt\u2019s especially helpful to articulate why this change applies to everyone\nwho works with the applicable technology, rather than just you or your team.\n\n\nPlease consider the scope of your change. If your change is specific to a\ncertain language or framework, then make sure the change is made to the\ntemplate for that language or framework, rather than to the template for an\neditor, tool, or operating system.\n\n\nPlease only modify one template per pull request. This helps keep pull\nrequests and feedback focused on a specific project or technology.\n\n\nIn general, the more you can do to help us understand the change you\u2019re making,\nthe more likely we\u2019ll be to accept your contribution quickly.\nVersioned templates\nSome templates can change greatly between versions, and if you wish to contribute\nto this repository we need to follow this specific flow:\n\nthe template at the root should be the current supported version\nthe template at the root should not have a version in the filename (i.e.\n\"evergreen\")\nprevious versions of templates should live under community/\nprevious versions of the template should embed the version in the filename,\nfor readability\n\nThis helps ensure users get the latest version (because they'll use whatever is\nat the root) but helps maintainers support older versions still in the wild.\nSpecialized templates\nIf you have a template that you would like to contribute, but it isn't quite\nmainstream, please consider adding this to the community directory under a\nfolder that best suits where it belongs.\nThe rules in your specialized template should be specific to the framework or\ntool, and any additional templates should be mentioned in a comment in the\nheader of the template\nFor example, this template might live at community/DotNet/InforCRM.gitignore:\n# gitignore template for InforCRM (formerly SalesLogix)\n# website: https://www.infor.com/product-summary/cx/infor-crm/\n#\n# Recommended: VisualStudio.gitignore\n\n# Ignore model files that are auto-generated\nModelIndex.xml\nExportedFiles.xml\n\n# Ignore deployment files\n[Mm]odel/[Dd]eployment\n\n# Force include portal SupportFiles\n!Model/Portal/*/SupportFiles/[Bb]in/\n!Model/Portal/PortalTemplates/*/SupportFiles/[Bb]in\n\nContributing workflow\nHere\u2019s how we suggest you go about proposing a change to this project:\n\nFork this project to your account.\nCreate a branch for the change you intend to make.\nMake your changes to your fork.\nSend a pull request from your fork\u2019s branch to our master branch.\n\nUsing the web-based interface to make changes is fine too, and will help you\nby automatically forking the project and prompting to send a pull request too.\nLicense\nCC0-1.0.\n\n"}, {"repo": "kamranahmedse/developer-roadmap", "language": "None", "readme": "\n\n\nRoadmap to becoming a web developer in 2019\n\n\nBelow you find a set of charts demonstrating the paths that you can take and the technologies that you would want to adopt in order to become a frontend, backend or a devops. I made these charts for an old professor of mine who wanted something to share with his college students to give them a perspective; sharing them here to help the community.\nIf you think that these can be improved in anyway, please do suggest.\n\n \ud83c\udf89 We are working on a more concise version of these roadmaps \ud83c\udf89 Keep your eyes on roadmap.sh for the details!\n\n\nThe purpose of these roadmaps is to give you an idea about the landscape and to guide you if you are confused about what to learn next and not to encourage you to pick what is hip and trendy. You should grow some understanding of why one tool would better suited for some cases than the other and remember hip and trendy never means best suited for the job.\n\nIntroduction\n\nFrontend Roadmap\n\nBack-end Roadmap\n\nDevOps Roadmap\n\n\ud83d\udea6 Wrap Up\nIf you think any of the roadmaps can be improved, feel free to discuss it in the issues. Also, I will continue to improve this, so you might want to watch this repository or subscribe at roadmap.sh to revisit.\n\ud83d\ude4c Contribution\n\nHave a look at contribution docs for how to update any of the roadmaps\n\n\nOpen pull request with improvements\nDiscuss ideas in issues\nSpread the word\nReach out with any feedback \n\nLicense\n\n\n"}, {"repo": "airbnb/javascript", "language": "JavaScript", "readme": "\nAirbnb JavaScript Style Guide() {\nA mostly reasonable approach to JavaScript\n\nNote: this guide assumes you are using Babel, and requires that you use babel-preset-airbnb or the equivalent. It also assumes you are installing shims/polyfills in your app, with airbnb-browser-shims or the equivalent.\n\n\n\n\nThis guide is available in other languages too. See Translation\nOther Style Guides\n\nES5 (Deprecated)\nReact\nCSS-in-JavaScript\nCSS & Sass\nRuby\n\nTable of Contents\n\nTypes\nReferences\nObjects\nArrays\nDestructuring\nStrings\nFunctions\nArrow Functions\nClasses & Constructors\nModules\nIterators and Generators\nProperties\nVariables\nHoisting\nComparison Operators & Equality\nBlocks\nControl Statements\nComments\nWhitespace\nCommas\nSemicolons\nType Casting & Coercion\nNaming Conventions\nAccessors\nEvents\njQuery\nECMAScript 5 Compatibility\nECMAScript 6+ (ES 2015+) Styles\nStandard Library\nTesting\nPerformance\nResources\nIn the Wild\nTranslation\nThe JavaScript Style Guide Guide\nChat With Us About JavaScript\nContributors\nLicense\nAmendments\n\nTypes\n\n\n\n1.1 Primitives: When you access a primitive type you work directly on its value.\n\nstring\nnumber\nboolean\nnull\nundefined\nsymbol\n\nconst foo = 1;\nlet bar = foo;\n\nbar = 9;\n\nconsole.log(foo, bar); // => 1, 9\n\nSymbols cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don\u2019t support them natively.\n\n\n\n\n\n\n1.2 Complex: When you access a complex type you work on a reference to its value.\n\nobject\narray\nfunction\n\nconst foo = [1, 2];\nconst bar = foo;\n\nbar[0] = 9;\n\nconsole.log(foo[0], bar[0]); // => 9, 9\n\n\n\u2b06 back to top\nReferences\n\n\n\n2.1 Use const for all of your references; avoid using var. eslint: prefer-const, no-const-assign\n\nWhy? This ensures that you can\u2019t reassign your references, which can lead to bugs and difficult to comprehend code.\n\n// bad\nvar a = 1;\nvar b = 2;\n\n// good\nconst a = 1;\nconst b = 2;\n\n\n\n\n\n2.2 If you must reassign references, use let instead of var. eslint: no-var\n\nWhy? let is block-scoped rather than function-scoped like var.\n\n// bad\nvar count = 1;\nif (true) {\n  count += 1;\n}\n\n// good, use the let.\nlet count = 1;\nif (true) {\n  count += 1;\n}\n\n\n\n\n\n2.3 Note that both let and const are block-scoped.\n// const and let only exist in the blocks they are defined in.\n{\n  let a = 1;\n  const b = 1;\n}\nconsole.log(a); // ReferenceError\nconsole.log(b); // ReferenceError\n\n\n\u2b06 back to top\nObjects\n\n\n\n3.1 Use the literal syntax for object creation. eslint: no-new-object\n// bad\nconst item = new Object();\n\n// good\nconst item = {};\n\n\n\n\n\n3.2 Use computed property names when creating objects with dynamic property names.\n\nWhy? They allow you to define all the properties of an object in one place.\n\nfunction getKey(k) {\n  return `a key named ${k}`;\n}\n\n// bad\nconst obj = {\n  id: 5,\n  name: 'San Francisco',\n};\nobj[getKey('enabled')] = true;\n\n// good\nconst obj = {\n  id: 5,\n  name: 'San Francisco',\n  [getKey('enabled')]: true,\n};\n\n\n\n\n\n3.3 Use object method shorthand. eslint: object-shorthand\n// bad\nconst atom = {\n  value: 1,\n\n  addValue: function (value) {\n    return atom.value + value;\n  },\n};\n\n// good\nconst atom = {\n  value: 1,\n\n  addValue(value) {\n    return atom.value + value;\n  },\n};\n\n\n\n\n\n3.4 Use property value shorthand. eslint: object-shorthand\n\nWhy? It is shorter and descriptive.\n\nconst lukeSkywalker = 'Luke Skywalker';\n\n// bad\nconst obj = {\n  lukeSkywalker: lukeSkywalker,\n};\n\n// good\nconst obj = {\n  lukeSkywalker,\n};\n\n\n\n\n\n3.5 Group your shorthand properties at the beginning of your object declaration.\n\nWhy? It\u2019s easier to tell which properties are using the shorthand.\n\nconst anakinSkywalker = 'Anakin Skywalker';\nconst lukeSkywalker = 'Luke Skywalker';\n\n// bad\nconst obj = {\n  episodeOne: 1,\n  twoJediWalkIntoACantina: 2,\n  lukeSkywalker,\n  episodeThree: 3,\n  mayTheFourth: 4,\n  anakinSkywalker,\n};\n\n// good\nconst obj = {\n  lukeSkywalker,\n  anakinSkywalker,\n  episodeOne: 1,\n  twoJediWalkIntoACantina: 2,\n  episodeThree: 3,\n  mayTheFourth: 4,\n};\n\n\n\n\n\n3.6 Only quote properties that are invalid identifiers. eslint: quote-props\n\nWhy? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.\n\n// bad\nconst bad = {\n  'foo': 3,\n  'bar': 4,\n  'data-blah': 5,\n};\n\n// good\nconst good = {\n  foo: 3,\n  bar: 4,\n  'data-blah': 5,\n};\n\n\n\n\n\n3.7 Do not call Object.prototype methods directly, such as hasOwnProperty, propertyIsEnumerable, and isPrototypeOf. eslint: no-prototype-builtins\n\nWhy? These methods may be shadowed by properties on the object in question - consider { hasOwnProperty: false } - or, the object may be a null object (Object.create(null)).\n\n// bad\nconsole.log(object.hasOwnProperty(key));\n\n// good\nconsole.log(Object.prototype.hasOwnProperty.call(object, key));\n\n// best\nconst has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.\nconsole.log(has.call(object, key));\n/* or */\nimport has from 'has'; // https://www.npmjs.com/package/has\nconsole.log(has(object, key));\n\n\n\n\n\n3.8 Prefer the object spread operator over Object.assign to shallow-copy objects. Use the object rest operator to get a new object with certain properties omitted.\n// very bad\nconst original = { a: 1, b: 2 };\nconst copy = Object.assign(original, { c: 3 }); // this mutates `original` \u0ca0_\u0ca0\ndelete copy.a; // so does this\n\n// bad\nconst original = { a: 1, b: 2 };\nconst copy = Object.assign({}, original, { c: 3 }); // copy => { a: 1, b: 2, c: 3 }\n\n// good\nconst original = { a: 1, b: 2 };\nconst copy = { ...original, c: 3 }; // copy => { a: 1, b: 2, c: 3 }\n\nconst { a, ...noA } = copy; // noA => { b: 2, c: 3 }\n\n\n\u2b06 back to top\nArrays\n\n\n\n4.1 Use the literal syntax for array creation. eslint: no-array-constructor\n// bad\nconst items = new Array();\n\n// good\nconst items = [];\n\n\n\n\n\n4.2 Use Array#push instead of direct assignment to add items to an array.\nconst someStack = [];\n\n// bad\nsomeStack[someStack.length] = 'abracadabra';\n\n// good\nsomeStack.push('abracadabra');\n\n\n\n\n\n4.3 Use array spreads ... to copy arrays.\n// bad\nconst len = items.length;\nconst itemsCopy = [];\nlet i;\n\nfor (i = 0; i < len; i += 1) {\n  itemsCopy[i] = items[i];\n}\n\n// good\nconst itemsCopy = [...items];\n\n\n\n\n\n\n4.4 To convert an iterable object to an array, use spreads ... instead of Array.from.\nconst foo = document.querySelectorAll('.foo');\n\n// good\nconst nodes = Array.from(foo);\n\n// best\nconst nodes = [...foo];\n\n\n\n\n\n4.5 Use Array.from for converting an array-like object to an array.\nconst arrLike = { 0: 'foo', 1: 'bar', 2: 'baz', length: 3 };\n\n// bad\nconst arr = Array.prototype.slice.call(arrLike);\n\n// good\nconst arr = Array.from(arrLike);\n\n\n\n\n\n4.6 Use Array.from instead of spread ... for mapping over iterables, because it avoids creating an intermediate array.\n// bad\nconst baz = [...foo].map(bar);\n\n// good\nconst baz = Array.from(foo, bar);\n\n\n\n\n\n4.7 Use return statements in array method callbacks. It\u2019s ok to omit the return if the function body consists of a single statement returning an expression without side effects, following 8.2. eslint: array-callback-return\n// good\n[1, 2, 3].map((x) => {\n  const y = x + 1;\n  return x * y;\n});\n\n// good\n[1, 2, 3].map((x) => x + 1);\n\n// bad - no returned value means `acc` becomes undefined after the first iteration\n[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) => {\n  const flatten = acc.concat(item);\n});\n\n// good\n[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) => {\n  const flatten = acc.concat(item);\n  return flatten;\n});\n\n// bad\ninbox.filter((msg) => {\n  const { subject, author } = msg;\n  if (subject === 'Mockingbird') {\n    return author === 'Harper Lee';\n  } else {\n    return false;\n  }\n});\n\n// good\ninbox.filter((msg) => {\n  const { subject, author } = msg;\n  if (subject === 'Mockingbird') {\n    return author === 'Harper Lee';\n  }\n\n  return false;\n});\n\n\n\n\n\n4.8 Use line breaks after open and before close array brackets if an array has multiple lines\n// bad\nconst arr = [\n  [0, 1], [2, 3], [4, 5],\n];\n\nconst objectInArray = [{\n  id: 1,\n}, {\n  id: 2,\n}];\n\nconst numberInArray = [\n  1, 2,\n];\n\n// good\nconst arr = [[0, 1], [2, 3], [4, 5]];\n\nconst objectInArray = [\n  {\n    id: 1,\n  },\n  {\n    id: 2,\n  },\n];\n\nconst numberInArray = [\n  1,\n  2,\n];\n\n\n\u2b06 back to top\nDestructuring\n\n\n\n5.1 Use object destructuring when accessing and using multiple properties of an object. eslint: prefer-destructuring\n\nWhy? Destructuring saves you from creating temporary references for those properties.\n\n// bad\nfunction getFullName(user) {\n  const firstName = user.firstName;\n  const lastName = user.lastName;\n\n  return `${firstName} ${lastName}`;\n}\n\n// good\nfunction getFullName(user) {\n  const { firstName, lastName } = user;\n  return `${firstName} ${lastName}`;\n}\n\n// best\nfunction getFullName({ firstName, lastName }) {\n  return `${firstName} ${lastName}`;\n}\n\n\n\n\n\n5.2 Use array destructuring. eslint: prefer-destructuring\nconst arr = [1, 2, 3, 4];\n\n// bad\nconst first = arr[0];\nconst second = arr[1];\n\n// good\nconst [first, second] = arr;\n\n\n\n\n\n5.3 Use object destructuring for multiple return values, not array destructuring.\n\nWhy? You can add new properties over time or change the order of things without breaking call sites.\n\n// bad\nfunction processInput(input) {\n  // then a miracle occurs\n  return [left, right, top, bottom];\n}\n\n// the caller needs to think about the order of return data\nconst [left, __, top] = processInput(input);\n\n// good\nfunction processInput(input) {\n  // then a miracle occurs\n  return { left, right, top, bottom };\n}\n\n// the caller selects only the data they need\nconst { left, top } = processInput(input);\n\n\n\u2b06 back to top\nStrings\n\n\n\n6.1 Use single quotes '' for strings. eslint: quotes\n// bad\nconst name = \"Capt. Janeway\";\n\n// bad - template literals should contain interpolation or newlines\nconst name = `Capt. Janeway`;\n\n// good\nconst name = 'Capt. Janeway';\n\n\n\n\n\n6.2 Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.\n\nWhy? Broken strings are painful to work with and make code less searchable.\n\n// bad\nconst errorMessage = 'This is a super long error that was thrown because \\\nof Batman. When you stop to think about how Batman had anything to do \\\nwith this, you would get nowhere \\\nfast.';\n\n// bad\nconst errorMessage = 'This is a super long error that was thrown because ' +\n  'of Batman. When you stop to think about how Batman had anything to do ' +\n  'with this, you would get nowhere fast.';\n\n// good\nconst errorMessage = 'This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.';\n\n\n\n\n\n6.3 When programmatically building up strings, use template strings instead of concatenation. eslint: prefer-template template-curly-spacing\n\nWhy? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.\n\n// bad\nfunction sayHi(name) {\n  return 'How are you, ' + name + '?';\n}\n\n// bad\nfunction sayHi(name) {\n  return ['How are you, ', name, '?'].join();\n}\n\n// bad\nfunction sayHi(name) {\n  return `How are you, ${ name }?`;\n}\n\n// good\nfunction sayHi(name) {\n  return `How are you, ${name}?`;\n}\n\n\n\n\n6.4 Never use eval() on a string, it opens too many vulnerabilities. eslint: no-eval\n\n\n\n\n6.5 Do not unnecessarily escape characters in strings. eslint: no-useless-escape\n\nWhy? Backslashes harm readability, thus they should only be present when necessary.\n\n// bad\nconst foo = '\\'this\\' \\i\\s \\\"quoted\\\"';\n\n// good\nconst foo = '\\'this\\' is \"quoted\"';\nconst foo = `my name is '${name}'`;\n\n\n\u2b06 back to top\nFunctions\n\n\n\n7.1 Use named function expressions instead of function declarations. eslint: func-style\n\nWhy? Function declarations are hoisted, which means that it\u2019s easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function\u2019s definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it\u2019s time to extract it to its own module! Don\u2019t forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error\u2019s call stack. (Discussion)\n\n// bad\nfunction foo() {\n  // ...\n}\n\n// bad\nconst foo = function () {\n  // ...\n};\n\n// good\n// lexical name distinguished from the variable-referenced invocation(s)\nconst short = function longUniqueMoreDescriptiveLexicalFoo() {\n  // ...\n};\n\n\n\n\n\n7.2 Wrap immediately invoked function expressions in parentheses. eslint: wrap-iife\n\nWhy? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.\n\n// immediately-invoked function expression (IIFE)\n(function () {\n  console.log('Welcome to the Internet. Please follow me.');\n}());\n\n\n\n\n7.3 Never declare a function in a non-function block (if, while, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: no-loop-func\n\n\n\n\n7.4 Note: ECMA-262 defines a block as a list of statements. A function declaration is not a statement.\n// bad\nif (currentUser) {\n  function test() {\n    console.log('Nope.');\n  }\n}\n\n// good\nlet test;\nif (currentUser) {\n  test = () => {\n    console.log('Yup.');\n  };\n}\n\n\n\n\n\n7.5 Never name a parameter arguments. This will take precedence over the arguments object that is given to every function scope.\n// bad\nfunction foo(name, options, arguments) {\n  // ...\n}\n\n// good\nfunction foo(name, options, args) {\n  // ...\n}\n\n\n\n\n\n7.6 Never use arguments, opt to use rest syntax ... instead. eslint: prefer-rest-params\n\nWhy? ... is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like arguments.\n\n// bad\nfunction concatenateAll() {\n  const args = Array.prototype.slice.call(arguments);\n  return args.join('');\n}\n\n// good\nfunction concatenateAll(...args) {\n  return args.join('');\n}\n\n\n\n\n\n7.7 Use default parameter syntax rather than mutating function arguments.\n// really bad\nfunction handleThings(opts) {\n  // No! We shouldn\u2019t mutate function arguments.\n  // Double bad: if opts is falsy it'll be set to an object which may\n  // be what you want but it can introduce subtle bugs.\n  opts = opts || {};\n  // ...\n}\n\n// still bad\nfunction handleThings(opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  // ...\n}\n\n// good\nfunction handleThings(opts = {}) {\n  // ...\n}\n\n\n\n\n\n7.8 Avoid side effects with default parameters.\n\nWhy? They are confusing to reason about.\n\nvar b = 1;\n// bad\nfunction count(a = b++) {\n  console.log(a);\n}\ncount();  // 1\ncount();  // 2\ncount(3); // 3\ncount();  // 3\n\n\n\n\n\n7.9 Always put default parameters last.\n// bad\nfunction handleThings(opts = {}, name) {\n  // ...\n}\n\n// good\nfunction handleThings(name, opts = {}) {\n  // ...\n}\n\n\n\n\n\n7.10 Never use the Function constructor to create a new function. eslint: no-new-func\n\nWhy? Creating a function in this way evaluates a string similarly to eval(), which opens vulnerabilities.\n\n// bad\nvar add = new Function('a', 'b', 'return a + b');\n\n// still bad\nvar subtract = Function('a', 'b', 'return a - b');\n\n\n\n\n\n7.11 Spacing in a function signature. eslint: space-before-function-paren space-before-blocks\n\nWhy? Consistency is good, and you shouldn\u2019t have to add or remove a space when adding or removing a name.\n\n// bad\nconst f = function(){};\nconst g = function (){};\nconst h = function() {};\n\n// good\nconst x = function () {};\nconst y = function a() {};\n\n\n\n\n\n7.12 Never mutate parameters. eslint: no-param-reassign\n\nWhy? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.\n\n// bad\nfunction f1(obj) {\n  obj.key = 1;\n}\n\n// good\nfunction f2(obj) {\n  const key = Object.prototype.hasOwnProperty.call(obj, 'key') ? obj.key : 1;\n}\n\n\n\n\n\n7.13 Never reassign parameters. eslint: no-param-reassign\n\nWhy? Reassigning parameters can lead to unexpected behavior, especially when accessing the arguments object. It can also cause optimization issues, especially in V8.\n\n// bad\nfunction f1(a) {\n  a = 1;\n  // ...\n}\n\nfunction f2(a) {\n  if (!a) { a = 1; }\n  // ...\n}\n\n// good\nfunction f3(a) {\n  const b = a || 1;\n  // ...\n}\n\nfunction f4(a = 1) {\n  // ...\n}\n\n\n\n\n\n7.14 Prefer the use of the spread operator ... to call variadic functions. eslint: prefer-spread\n\nWhy? It\u2019s cleaner, you don\u2019t need to supply a context, and you can not easily compose new with apply.\n\n// bad\nconst x = [1, 2, 3, 4, 5];\nconsole.log.apply(console, x);\n\n// good\nconst x = [1, 2, 3, 4, 5];\nconsole.log(...x);\n\n// bad\nnew (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));\n\n// good\nnew Date(...[2016, 8, 5]);\n\n\n\n\n\n7.15 Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: function-paren-newline\n// bad\nfunction foo(bar,\n             baz,\n             quux) {\n  // ...\n}\n\n// good\nfunction foo(\n  bar,\n  baz,\n  quux,\n) {\n  // ...\n}\n\n// bad\nconsole.log(foo,\n  bar,\n  baz);\n\n// good\nconsole.log(\n  foo,\n  bar,\n  baz,\n);\n\n\n\u2b06 back to top\nArrow Functions\n\n\n\n8.1 When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: prefer-arrow-callback, arrow-spacing\n\nWhy? It creates a version of the function that executes in the context of this, which is usually what you want, and is a more concise syntax.\n\n\nWhy not? If you have a fairly complicated function, you might move that logic out into its own named function expression.\n\n// bad\n[1, 2, 3].map(function (x) {\n  const y = x + 1;\n  return x * y;\n});\n\n// good\n[1, 2, 3].map((x) => {\n  const y = x + 1;\n  return x * y;\n});\n\n\n\n\n\n8.2 If the function body consists of a single statement returning an expression without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a return statement. eslint: arrow-parens, arrow-body-style\n\nWhy? Syntactic sugar. It reads well when multiple functions are chained together.\n\n// bad\n[1, 2, 3].map((number) => {\n  const nextNumber = number + 1;\n  `A string containing the ${nextNumber}.`;\n});\n\n// good\n[1, 2, 3].map((number) => `A string containing the ${number + 1}.`);\n\n// good\n[1, 2, 3].map((number) => {\n  const nextNumber = number + 1;\n  return `A string containing the ${nextNumber}.`;\n});\n\n// good\n[1, 2, 3].map((number, index) => ({\n  [index]: number,\n}));\n\n// No implicit return with side effects\nfunction foo(callback) {\n  const val = callback();\n  if (val === true) {\n    // Do something if callback returns true\n  }\n}\n\nlet bool = false;\n\n// bad\nfoo(() => bool = true);\n\n// good\nfoo(() => {\n  bool = true;\n});\n\n\n\n\n\n8.3 In case the expression spans over multiple lines, wrap it in parentheses for better readability.\n\nWhy? It shows clearly where the function starts and ends.\n\n// bad\n['get', 'post', 'put'].map((httpMethod) => Object.prototype.hasOwnProperty.call(\n    httpMagicObjectWithAVeryLongName,\n    httpMethod,\n  )\n);\n\n// good\n['get', 'post', 'put'].map((httpMethod) => (\n  Object.prototype.hasOwnProperty.call(\n    httpMagicObjectWithAVeryLongName,\n    httpMethod,\n  )\n));\n\n\n\n\n\n8.4 Always include parentheses around arguments for clarity and consistency. eslint: arrow-parens\n\nWhy? Minimizes diff churn when adding or removing arguments.\n\n// bad\n[1, 2, 3].map(x => x * x);\n\n// good\n[1, 2, 3].map((x) => x * x);\n\n// bad\n[1, 2, 3].map(number => (\n  `A long string with the ${number}. It\u2019s so long that we don\u2019t want it to take up space on the .map line!`\n));\n\n// good\n[1, 2, 3].map((number) => (\n  `A long string with the ${number}. It\u2019s so long that we don\u2019t want it to take up space on the .map line!`\n));\n\n// bad\n[1, 2, 3].map(x => {\n  const y = x + 1;\n  return x * y;\n});\n\n// good\n[1, 2, 3].map((x) => {\n  const y = x + 1;\n  return x * y;\n});\n\n\n\n\n\n8.5 Avoid confusing arrow function syntax (=>) with comparison operators (<=, >=). eslint: no-confusing-arrow\n// bad\nconst itemHeight = (item) => item.height <= 256 ? item.largeSize : item.smallSize;\n\n// bad\nconst itemHeight = (item) => item.height >= 256 ? item.largeSize : item.smallSize;\n\n// good\nconst itemHeight = (item) => (item.height <= 256 ? item.largeSize : item.smallSize);\n\n// good\nconst itemHeight = (item) => {\n  const { height, largeSize, smallSize } = item;\n  return height <= 256 ? largeSize : smallSize;\n};\n\n\n\n\n\n8.6 Enforce the location of arrow function bodies with implicit returns. eslint: implicit-arrow-linebreak\n// bad\n(foo) =>\n  bar;\n\n(foo) =>\n  (bar);\n\n// good\n(foo) => bar;\n(foo) => (bar);\n(foo) => (\n   bar\n)\n\n\n\u2b06 back to top\nClasses & Constructors\n\n\n\n9.1 Always use class. Avoid manipulating prototype directly.\n\nWhy? class syntax is more concise and easier to reason about.\n\n// bad\nfunction Queue(contents = []) {\n  this.queue = [...contents];\n}\nQueue.prototype.pop = function () {\n  const value = this.queue[0];\n  this.queue.splice(0, 1);\n  return value;\n};\n\n// good\nclass Queue {\n  constructor(contents = []) {\n    this.queue = [...contents];\n  }\n  pop() {\n    const value = this.queue[0];\n    this.queue.splice(0, 1);\n    return value;\n  }\n}\n\n\n\n\n\n9.2 Use extends for inheritance.\n\nWhy? It is a built-in way to inherit prototype functionality without breaking instanceof.\n\n// bad\nconst inherits = require('inherits');\nfunction PeekableQueue(contents) {\n  Queue.apply(this, contents);\n}\ninherits(PeekableQueue, Queue);\nPeekableQueue.prototype.peek = function () {\n  return this.queue[0];\n};\n\n// good\nclass PeekableQueue extends Queue {\n  peek() {\n    return this.queue[0];\n  }\n}\n\n\n\n\n\n9.3 Methods can return this to help with method chaining.\n// bad\nJedi.prototype.jump = function () {\n  this.jumping = true;\n  return true;\n};\n\nJedi.prototype.setHeight = function (height) {\n  this.height = height;\n};\n\nconst luke = new Jedi();\nluke.jump(); // => true\nluke.setHeight(20); // => undefined\n\n// good\nclass Jedi {\n  jump() {\n    this.jumping = true;\n    return this;\n  }\n\n  setHeight(height) {\n    this.height = height;\n    return this;\n  }\n}\n\nconst luke = new Jedi();\n\nluke.jump()\n  .setHeight(20);\n\n\n\n\n\n9.4 It\u2019s okay to write a custom toString() method, just make sure it works successfully and causes no side effects.\nclass Jedi {\n  constructor(options = {}) {\n    this.name = options.name || 'no name';\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  toString() {\n    return `Jedi - ${this.getName()}`;\n  }\n}\n\n\n\n\n\n9.5 Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: no-useless-constructor\n// bad\nclass Jedi {\n  constructor() {}\n\n  getName() {\n    return this.name;\n  }\n}\n\n// bad\nclass Rey extends Jedi {\n  constructor(...args) {\n    super(...args);\n  }\n}\n\n// good\nclass Rey extends Jedi {\n  constructor(...args) {\n    super(...args);\n    this.name = 'Rey';\n  }\n}\n\n\n\n\n\n9.6 Avoid duplicate class members. eslint: no-dupe-class-members\n\nWhy? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.\n\n// bad\nclass Foo {\n  bar() { return 1; }\n  bar() { return 2; }\n}\n\n// good\nclass Foo {\n  bar() { return 1; }\n}\n\n// good\nclass Foo {\n  bar() { return 2; }\n}\n\n\n\n\n\n9.7 Class methods should use this or be made into a static method unless an external library or framework requires to use specific non-static methods. Being an instance method should indicate that it behaves differently based on properties of the receiver. eslint: class-methods-use-this\n// bad\nclass Foo {\n  bar() {\n    console.log('bar');\n  }\n}\n\n// good - this is used\nclass Foo {\n  bar() {\n    console.log(this.bar);\n  }\n}\n\n// good - constructor is exempt\nclass Foo {\n  constructor() {\n    // ...\n  }\n}\n\n// good - static methods aren't expected to use this\nclass Foo {\n  static bar() {\n    console.log('bar');\n  }\n}\n\n\n\u2b06 back to top\nModules\n\n\n\n10.1 Always use modules (import/export) over a non-standard module system. You can always transpile to your preferred module system.\n\nWhy? Modules are the future, let\u2019s start using the future now.\n\n// bad\nconst AirbnbStyleGuide = require('./AirbnbStyleGuide');\nmodule.exports = AirbnbStyleGuide.es6;\n\n// ok\nimport AirbnbStyleGuide from './AirbnbStyleGuide';\nexport default AirbnbStyleGuide.es6;\n\n// best\nimport { es6 } from './AirbnbStyleGuide';\nexport default es6;\n\n\n\n\n\n10.2 Do not use wildcard imports.\n\nWhy? This makes sure you have a single default export.\n\n// bad\nimport * as AirbnbStyleGuide from './AirbnbStyleGuide';\n\n// good\nimport AirbnbStyleGuide from './AirbnbStyleGuide';\n\n\n\n\n\n10.3 And do not export directly from an import.\n\nWhy? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.\n\n// bad\n// filename es6.js\nexport { es6 as default } from './AirbnbStyleGuide';\n\n// good\n// filename es6.js\nimport { es6 } from './AirbnbStyleGuide';\nexport default es6;\n\n\n\n\n\n10.4 Only import from a path in one place.\neslint: no-duplicate-imports\n\nWhy? Having multiple lines that import from the same path can make code harder to maintain.\n\n// bad\nimport foo from 'foo';\n// \u2026 some other imports \u2026 //\nimport { named1, named2 } from 'foo';\n\n// good\nimport foo, { named1, named2 } from 'foo';\n\n// good\nimport foo, {\n  named1,\n  named2,\n} from 'foo';\n\n\n\n\n\n10.5 Do not export mutable bindings.\neslint: import/no-mutable-exports\n\nWhy? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.\n\n// bad\nlet foo = 3;\nexport { foo };\n\n// good\nconst foo = 3;\nexport { foo };\n\n\n\n\n\n10.6 In modules with a single export, prefer default export over named export.\neslint: import/prefer-default-export\n\nWhy? To encourage more files that only ever export one thing, which is better for readability and maintainability.\n\n// bad\nexport function foo() {}\n\n// good\nexport default function foo() {}\n\n\n\n\n\n10.7 Put all imports above non-import statements.\neslint: import/first\n\nWhy? Since imports are hoisted, keeping them all at the top prevents surprising behavior.\n\n// bad\nimport foo from 'foo';\nfoo.init();\n\nimport bar from 'bar';\n\n// good\nimport foo from 'foo';\nimport bar from 'bar';\n\nfoo.init();\n\n\n\n\n\n10.8 Multiline imports should be indented just like multiline array and object literals.\n\nWhy? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.\n\n// bad\nimport {longNameA, longNameB, longNameC, longNameD, longNameE} from 'path';\n\n// good\nimport {\n  longNameA,\n  longNameB,\n  longNameC,\n  longNameD,\n  longNameE,\n} from 'path';\n\n\n\n\n\n10.9 Disallow Webpack loader syntax in module import statements.\neslint: import/no-webpack-loader-syntax\n\nWhy? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in webpack.config.js.\n\n// bad\nimport fooSass from 'css!sass!foo.scss';\nimport barCss from 'style!css!bar.css';\n\n// good\nimport fooSass from 'foo.scss';\nimport barCss from 'bar.css';\n\n\n\u2b06 back to top\nIterators and Generators\n\n\n\n11.1 Don\u2019t use iterators. Prefer JavaScript\u2019s higher-order functions instead of loops like for-in or for-of. eslint: no-iterator no-restricted-syntax\n\nWhy? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.\n\n\nUse map() / every() / filter() / find() / findIndex() / reduce() / some() / ... to iterate over arrays, and Object.keys() / Object.values() / Object.entries() to produce arrays so you can iterate over objects.\n\nconst numbers = [1, 2, 3, 4, 5];\n\n// bad\nlet sum = 0;\nfor (let num of numbers) {\n  sum += num;\n}\nsum === 15;\n\n// good\nlet sum = 0;\nnumbers.forEach((num) => {\n  sum += num;\n});\nsum === 15;\n\n// best (use the functional force)\nconst sum = numbers.reduce((total, num) => total + num, 0);\nsum === 15;\n\n// bad\nconst increasedByOne = [];\nfor (let i = 0; i < numbers.length; i++) {\n  increasedByOne.push(numbers[i] + 1);\n}\n\n// good\nconst increasedByOne = [];\nnumbers.forEach((num) => {\n  increasedByOne.push(num + 1);\n});\n\n// best (keeping it functional)\nconst increasedByOne = numbers.map((num) => num + 1);\n\n\n\n\n\n11.2 Don\u2019t use generators for now.\n\nWhy? They don\u2019t transpile well to ES5.\n\n\n\n\n\n\n11.3 If you must use generators, or if you disregard our advice, make sure their function signature is spaced properly. eslint: generator-star-spacing\n\nWhy? function and * are part of the same conceptual keyword - * is not a modifier for function, function* is a unique construct, different from function.\n\n// bad\nfunction * foo() {\n  // ...\n}\n\n// bad\nconst bar = function * () {\n  // ...\n};\n\n// bad\nconst baz = function *() {\n  // ...\n};\n\n// bad\nconst quux = function*() {\n  // ...\n};\n\n// bad\nfunction*foo() {\n  // ...\n}\n\n// bad\nfunction *foo() {\n  // ...\n}\n\n// very bad\nfunction\n*\nfoo() {\n  // ...\n}\n\n// very bad\nconst wat = function\n*\n() {\n  // ...\n};\n\n// good\nfunction* foo() {\n  // ...\n}\n\n// good\nconst foo = function* () {\n  // ...\n};\n\n\n\u2b06 back to top\nProperties\n\n\n\n12.1 Use dot notation when accessing properties. eslint: dot-notation\nconst luke = {\n  jedi: true,\n  age: 28,\n};\n\n// bad\nconst isJedi = luke['jedi'];\n\n// good\nconst isJedi = luke.jedi;\n\n\n\n\n\n12.2 Use bracket notation [] when accessing properties with a variable.\nconst luke = {\n  jedi: true,\n  age: 28,\n};\n\nfunction getProp(prop) {\n  return luke[prop];\n}\n\nconst isJedi = getProp('jedi');\n\n\n\n\n\n12.3 Use exponentiation operator ** when calculating exponentiations. eslint: no-restricted-properties.\n// bad\nconst binary = Math.pow(2, 10);\n\n// good\nconst binary = 2 ** 10;\n\n\n\u2b06 back to top\nVariables\n\n\n\n13.1 Always use const or let to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: no-undef prefer-const\n// bad\nsuperPower = new SuperPower();\n\n// good\nconst superPower = new SuperPower();\n\n\n\n\n\n13.2 Use one const or let declaration per variable or assignment. eslint: one-var\n\nWhy? It\u2019s easier to add new variable declarations this way, and you never have to worry about swapping out a ; for a , or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.\n\n// bad\nconst items = getItems(),\n    goSportsTeam = true,\n    dragonball = 'z';\n\n// bad\n// (compare to above, and try to spot the mistake)\nconst items = getItems(),\n    goSportsTeam = true;\n    dragonball = 'z';\n\n// good\nconst items = getItems();\nconst goSportsTeam = true;\nconst dragonball = 'z';\n\n\n\n\n\n13.3 Group all your consts and then group all your lets.\n\nWhy? This is helpful when later on you might need to assign a variable depending on one of the previous assigned variables.\n\n// bad\nlet i, len, dragonball,\n    items = getItems(),\n    goSportsTeam = true;\n\n// bad\nlet i;\nconst items = getItems();\nlet dragonball;\nconst goSportsTeam = true;\nlet len;\n\n// good\nconst goSportsTeam = true;\nconst items = getItems();\nlet dragonball;\nlet i;\nlet length;\n\n\n\n\n\n13.4 Assign variables where you need them, but place them in a reasonable place.\n\nWhy? let and const are block scoped and not function scoped.\n\n// bad - unnecessary function call\nfunction checkName(hasName) {\n  const name = getName();\n\n  if (hasName === 'test') {\n    return false;\n  }\n\n  if (name === 'test') {\n    this.setName('');\n    return false;\n  }\n\n  return name;\n}\n\n// good\nfunction checkName(hasName) {\n  if (hasName === 'test') {\n    return false;\n  }\n\n  const name = getName();\n\n  if (name === 'test') {\n    this.setName('');\n    return false;\n  }\n\n  return name;\n}\n\n\n\n\n\n13.5 Don\u2019t chain variable assignments. eslint: no-multi-assign\n\nWhy? Chaining variable assignments creates implicit global variables.\n\n// bad\n(function example() {\n  // JavaScript interprets this as\n  // let a = ( b = ( c = 1 ) );\n  // The let keyword only applies to variable a; variables b and c become\n  // global variables.\n  let a = b = c = 1;\n}());\n\nconsole.log(a); // throws ReferenceError\nconsole.log(b); // 1\nconsole.log(c); // 1\n\n// good\n(function example() {\n  let a = 1;\n  let b = a;\n  let c = a;\n}());\n\nconsole.log(a); // throws ReferenceError\nconsole.log(b); // throws ReferenceError\nconsole.log(c); // throws ReferenceError\n\n// the same applies for `const`\n\n\n\n\n\n13.6 Avoid using unary increments and decrements (++, --). eslint no-plusplus\n\nWhy? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like num += 1 instead of num++ or num ++. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.\n\n// bad\n\nconst array = [1, 2, 3];\nlet num = 1;\nnum++;\n--num;\n\nlet sum = 0;\nlet truthyCount = 0;\nfor (let i = 0; i < array.length; i++) {\n  let value = array[i];\n  sum += value;\n  if (value) {\n    truthyCount++;\n  }\n}\n\n// good\n\nconst array = [1, 2, 3];\nlet num = 1;\nnum += 1;\nnum -= 1;\n\nconst sum = array.reduce((a, b) => a + b, 0);\nconst truthyCount = array.filter(Boolean).length;\n\n\n\n\n\n13.7 Avoid linebreaks before or after = in an assignment. If your assignment violates max-len, surround the value in parens. eslint operator-linebreak.\n\nWhy? Linebreaks surrounding = can obfuscate the value of an assignment.\n\n// bad\nconst foo =\n  superLongLongLongLongLongLongLongLongFunctionName();\n\n// bad\nconst foo\n  = 'superLongLongLongLongLongLongLongLongString';\n\n// good\nconst foo = (\n  superLongLongLongLongLongLongLongLongFunctionName()\n);\n\n// good\nconst foo = 'superLongLongLongLongLongLongLongLongString';\n\n\n\n\n\n13.8 Disallow unused variables. eslint: no-unused-vars\n\nWhy? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.\n\n// bad\n\nvar some_unused_var = 42;\n\n// Write-only variables are not considered as used.\nvar y = 10;\ny = 5;\n\n// A read for a modification of itself is not considered as used.\nvar z = 0;\nz = z + 1;\n\n// Unused function arguments.\nfunction getX(x, y) {\n    return x;\n}\n\n// good\n\nfunction getXPlusY(x, y) {\n  return x + y;\n}\n\nvar x = 1;\nvar y = a + 2;\n\nalert(getXPlusY(x, y));\n\n// 'type' is ignored even if unused because it has a rest property sibling.\n// This is a form of extracting an object that omits the specified keys.\nvar { type, ...coords } = data;\n// 'coords' is now the 'data' object without its 'type' property.\n\n\n\u2b06 back to top\nHoisting\n\n\n\n14.1 var declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. const and let declarations are blessed with a new concept called Temporal Dead Zones (TDZ). It\u2019s important to know why typeof is no longer safe.\n// we know this wouldn\u2019t work (assuming there\n// is no notDefined global variable)\nfunction example() {\n  console.log(notDefined); // => throws a ReferenceError\n}\n\n// creating a variable declaration after you\n// reference the variable will work due to\n// variable hoisting. Note: the assignment\n// value of `true` is not hoisted.\nfunction example() {\n  console.log(declaredButNotAssigned); // => undefined\n  var declaredButNotAssigned = true;\n}\n\n// the interpreter is hoisting the variable\n// declaration to the top of the scope,\n// which means our example could be rewritten as:\nfunction example() {\n  let declaredButNotAssigned;\n  console.log(declaredButNotAssigned); // => undefined\n  declaredButNotAssigned = true;\n}\n\n// using const and let\nfunction example() {\n  console.log(declaredButNotAssigned); // => throws a ReferenceError\n  console.log(typeof declaredButNotAssigned); // => throws a ReferenceError\n  const declaredButNotAssigned = true;\n}\n\n\n\n\n\n14.2 Anonymous function expressions hoist their variable name, but not the function assignment.\nfunction example() {\n  console.log(anonymous); // => undefined\n\n  anonymous(); // => TypeError anonymous is not a function\n\n  var anonymous = function () {\n    console.log('anonymous function expression');\n  };\n}\n\n\n\n\n\n14.3 Named function expressions hoist the variable name, not the function name or the function body.\nfunction example() {\n  console.log(named); // => undefined\n\n  named(); // => TypeError named is not a function\n\n  superPower(); // => ReferenceError superPower is not defined\n\n  var named = function superPower() {\n    console.log('Flying');\n  };\n}\n\n// the same is true when the function name\n// is the same as the variable name.\nfunction example() {\n  console.log(named); // => undefined\n\n  named(); // => TypeError named is not a function\n\n  var named = function named() {\n    console.log('named');\n  };\n}\n\n\n\n\n\n14.4 Function declarations hoist their name and the function body.\nfunction example() {\n  superPower(); // => Flying\n\n  function superPower() {\n    console.log('Flying');\n  }\n}\n\n\nFor more information refer to JavaScript Scoping & Hoisting by Ben Cherry.\n\n\n\u2b06 back to top\nComparison Operators & Equality\n\n\n15.1 Use === and !== over == and !=. eslint: eqeqeq\n\n\n\n\n15.2 Conditional statements such as the if statement evaluate their expression using coercion with the ToBoolean abstract method and always follow these simple rules:\n\nObjects evaluate to true\nUndefined evaluates to false\nNull evaluates to false\nBooleans evaluate to the value of the boolean\nNumbers evaluate to false if +0, -0, or NaN, otherwise true\nStrings evaluate to false if an empty string '', otherwise true\n\nif ([0] && []) {\n  // true\n  // an array (even an empty one) is an object, objects will evaluate to true\n}\n\n\n\n\n\n15.3 Use shortcuts for booleans, but explicit comparisons for strings and numbers.\n// bad\nif (isValid === true) {\n  // ...\n}\n\n// good\nif (isValid) {\n  // ...\n}\n\n// bad\nif (name) {\n  // ...\n}\n\n// good\nif (name !== '') {\n  // ...\n}\n\n// bad\nif (collection.length) {\n  // ...\n}\n\n// good\nif (collection.length > 0) {\n  // ...\n}\n\n\n\n\n15.4 For more information see Truth Equality and JavaScript by Angus Croll.\n\n\n\n\n15.5 Use braces to create blocks in case and default clauses that contain lexical declarations (e.g. let, const, function, and class). eslint: no-case-declarations\n\nWhy? Lexical declarations are visible in the entire switch block but only get initialized when assigned, which only happens when its case is reached. This causes problems when multiple case clauses attempt to define the same thing.\n\n// bad\nswitch (foo) {\n  case 1:\n    let x = 1;\n    break;\n  case 2:\n    const y = 2;\n    break;\n  case 3:\n    function f() {\n      // ...\n    }\n    break;\n  default:\n    class C {}\n}\n\n// good\nswitch (foo) {\n  case 1: {\n    let x = 1;\n    break;\n  }\n  case 2: {\n    const y = 2;\n    break;\n  }\n  case 3: {\n    function f() {\n      // ...\n    }\n    break;\n  }\n  case 4:\n    bar();\n    break;\n  default: {\n    class C {}\n  }\n}\n\n\n\n\n\n15.6 Ternaries should not be nested and generally be single line expressions. eslint: no-nested-ternary\n// bad\nconst foo = maybe1 > maybe2\n  ? \"bar\"\n  : value1 > value2 ? \"baz\" : null;\n\n// split into 2 separated ternary expressions\nconst maybeNull = value1 > value2 ? 'baz' : null;\n\n// better\nconst foo = maybe1 > maybe2\n  ? 'bar'\n  : maybeNull;\n\n// best\nconst foo = maybe1 > maybe2 ? 'bar' : maybeNull;\n\n\n\n\n\n15.7 Avoid unneeded ternary statements. eslint: no-unneeded-ternary\n// bad\nconst foo = a ? a : b;\nconst bar = c ? true : false;\nconst baz = c ? false : true;\n\n// good\nconst foo = a || b;\nconst bar = !!c;\nconst baz = !c;\n\n\n\n\n\n15.8 When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators: +, -, and ** since their precedence is broadly understood. We recommend enclosing / and * in parentheses because their precedence can be ambiguous when they are mixed.\neslint: no-mixed-operators\n\nWhy? This improves readability and clarifies the developer\u2019s intention.\n\n// bad\nconst foo = a && b < 0 || c > 0 || d + 1 === 0;\n\n// bad\nconst bar = a ** b - 5 % d;\n\n// bad\n// one may be confused into thinking (a || b) && c\nif (a || b && c) {\n  return d;\n}\n\n// bad\nconst bar = a + b / c * d;\n\n// good\nconst foo = (a && b < 0) || c > 0 || (d + 1 === 0);\n\n// good\nconst bar = a ** b - (5 % d);\n\n// good\nif (a || (b && c)) {\n  return d;\n}\n\n// good\nconst bar = a + (b / c) * d;\n\n\n\u2b06 back to top\nBlocks\n\n\n\n16.1 Use braces with all multi-line blocks. eslint: nonblock-statement-body-position\n// bad\nif (test)\n  return false;\n\n// good\nif (test) return false;\n\n// good\nif (test) {\n  return false;\n}\n\n// bad\nfunction foo() { return false; }\n\n// good\nfunction bar() {\n  return false;\n}\n\n\n\n\n\n16.2 If you\u2019re using multi-line blocks with if and else, put else on the same line as your if block\u2019s closing brace. eslint: brace-style\n// bad\nif (test) {\n  thing1();\n  thing2();\n}\nelse {\n  thing3();\n}\n\n// good\nif (test) {\n  thing1();\n  thing2();\n} else {\n  thing3();\n}\n\n\n\n\n\n16.3 If an if block always executes a return statement, the subsequent else block is unnecessary. A return in an else if block following an if block that contains a return can be separated into multiple if blocks. eslint: no-else-return\n// bad\nfunction foo() {\n  if (x) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\n// bad\nfunction cats() {\n  if (x) {\n    return x;\n  } else if (y) {\n    return y;\n  }\n}\n\n// bad\nfunction dogs() {\n  if (x) {\n    return x;\n  } else {\n    if (y) {\n      return y;\n    }\n  }\n}\n\n// good\nfunction foo() {\n  if (x) {\n    return x;\n  }\n\n  return y;\n}\n\n// good\nfunction cats() {\n  if (x) {\n    return x;\n  }\n\n  if (y) {\n    return y;\n  }\n}\n\n// good\nfunction dogs(x) {\n  if (x) {\n    if (z) {\n      return y;\n    }\n  } else {\n    return z;\n  }\n}\n\n\n\u2b06 back to top\nControl Statements\n\n\n\n17.1 In case your control statement (if, while etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.\n\nWhy? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.\n\n// bad\nif ((foo === 123 || bar === 'abc') && doesItLookGoodWhenItBecomesThatLong() && isThisReallyHappening()) {\n  thing1();\n}\n\n// bad\nif (foo === 123 &&\n  bar === 'abc') {\n  thing1();\n}\n\n// bad\nif (foo === 123\n  && bar === 'abc') {\n  thing1();\n}\n\n// bad\nif (\n  foo === 123 &&\n  bar === 'abc'\n) {\n  thing1();\n}\n\n// good\nif (\n  foo === 123\n  && bar === 'abc'\n) {\n  thing1();\n}\n\n// good\nif (\n  (foo === 123 || bar === 'abc')\n  && doesItLookGoodWhenItBecomesThatLong()\n  && isThisReallyHappening()\n) {\n  thing1();\n}\n\n// good\nif (foo === 123 && bar === 'abc') {\n  thing1();\n}\n\n\n\n\n\n17.2 Don't use selection operators in place of control statements.\n// bad\n!isRunning && startRunning();\n\n// good\nif (!isRunning) {\n  startRunning();\n}\n\n\n\u2b06 back to top\nComments\n\n\n\n18.1 Use /** ... */ for multi-line comments.\n// bad\n// make() returns a new element\n// based on the passed in tag name\n//\n// @param {String} tag\n// @return {Element} element\nfunction make(tag) {\n\n  // ...\n\n  return element;\n}\n\n// good\n/**\n * make() returns a new element\n * based on the passed-in tag name\n */\nfunction make(tag) {\n\n  // ...\n\n  return element;\n}\n\n\n\n\n\n18.2 Use // for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it\u2019s on the first line of a block.\n// bad\nconst active = true;  // is current tab\n\n// good\n// is current tab\nconst active = true;\n\n// bad\nfunction getType() {\n  console.log('fetching type...');\n  // set the default type to 'no type'\n  const type = this.type || 'no type';\n\n  return type;\n}\n\n// good\nfunction getType() {\n  console.log('fetching type...');\n\n  // set the default type to 'no type'\n  const type = this.type || 'no type';\n\n  return type;\n}\n\n// also good\nfunction getType() {\n  // set the default type to 'no type'\n  const type = this.type || 'no type';\n\n  return type;\n}\n\n\n\n\n\n18.3 Start all comments with a space to make it easier to read. eslint: spaced-comment\n// bad\n//is current tab\nconst active = true;\n\n// good\n// is current tab\nconst active = true;\n\n// bad\n/**\n *make() returns a new element\n *based on the passed-in tag name\n */\nfunction make(tag) {\n\n  // ...\n\n  return element;\n}\n\n// good\n/**\n * make() returns a new element\n * based on the passed-in tag name\n */\nfunction make(tag) {\n\n  // ...\n\n  return element;\n}\n\n\n\n\n18.4 Prefixing your comments with FIXME or TODO helps other developers quickly understand if you\u2019re pointing out a problem that needs to be revisited, or if you\u2019re suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are FIXME: -- need to figure this out or TODO: -- need to implement.\n\n\n\n\n18.5 Use // FIXME: to annotate problems.\nclass Calculator extends Abacus {\n  constructor() {\n    super();\n\n    // FIXME: shouldn\u2019t use a global here\n    total = 0;\n  }\n}\n\n\n\n\n\n18.6 Use // TODO: to annotate solutions to problems.\nclass Calculator extends Abacus {\n  constructor() {\n    super();\n\n    // TODO: total should be configurable by an options param\n    this.total = 0;\n  }\n}\n\n\n\u2b06 back to top\nWhitespace\n\n\n\n19.1 Use soft tabs (space character) set to 2 spaces. eslint: indent\n// bad\nfunction foo() {\n\u2219\u2219\u2219\u2219let name;\n}\n\n// bad\nfunction bar() {\n\u2219let name;\n}\n\n// good\nfunction baz() {\n\u2219\u2219let name;\n}\n\n\n\n\n\n19.2 Place 1 space before the leading brace. eslint: space-before-blocks\n// bad\nfunction test(){\n  console.log('test');\n}\n\n// good\nfunction test() {\n  console.log('test');\n}\n\n// bad\ndog.set('attr',{\n  age: '1 year',\n  breed: 'Bernese Mountain Dog',\n});\n\n// good\ndog.set('attr', {\n  age: '1 year',\n  breed: 'Bernese Mountain Dog',\n});\n\n\n\n\n\n19.3 Place 1 space before the opening parenthesis in control statements (if, while etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: keyword-spacing\n// bad\nif(isJedi) {\n  fight ();\n}\n\n// good\nif (isJedi) {\n  fight();\n}\n\n// bad\nfunction fight () {\n  console.log ('Swooosh!');\n}\n\n// good\nfunction fight() {\n  console.log('Swooosh!');\n}\n\n\n\n\n\n19.4 Set off operators with spaces. eslint: space-infix-ops\n// bad\nconst x=y+5;\n\n// good\nconst x = y + 5;\n\n\n\n\n\n19.5 End files with a single newline character. eslint: eol-last\n// bad\nimport { es6 } from './AirbnbStyleGuide';\n  // ...\nexport default es6;\n// bad\nimport { es6 } from './AirbnbStyleGuide';\n  // ...\nexport default es6;\u21b5\n\u21b5\n// good\nimport { es6 } from './AirbnbStyleGuide';\n  // ...\nexport default es6;\u21b5\n\n\n\n\n\n19.6 Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which\nemphasizes that the line is a method call, not a new statement. eslint: newline-per-chained-call no-whitespace-before-property\n// bad\n$('#items').find('.selected').highlight().end().find('.open').updateCount();\n\n// bad\n$('#items').\n  find('.selected').\n    highlight().\n    end().\n  find('.open').\n    updateCount();\n\n// good\n$('#items')\n  .find('.selected')\n    .highlight()\n    .end()\n  .find('.open')\n    .updateCount();\n\n// bad\nconst leds = stage.selectAll('.led').data(data).enter().append('svg:svg').classed('led', true)\n    .attr('width', (radius + margin) * 2).append('svg:g')\n    .attr('transform', `translate(${radius + margin},${radius + margin})`)\n    .call(tron.led);\n\n// good\nconst leds = stage.selectAll('.led')\n    .data(data)\n  .enter().append('svg:svg')\n    .classed('led', true)\n    .attr('width', (radius + margin) * 2)\n  .append('svg:g')\n    .attr('transform', `translate(${radius + margin},${radius + margin})`)\n    .call(tron.led);\n\n// good\nconst leds = stage.selectAll('.led').data(data);\n\n\n\n\n\n19.7 Leave a blank line after blocks and before the next statement.\n// bad\nif (foo) {\n  return bar;\n}\nreturn baz;\n\n// good\nif (foo) {\n  return bar;\n}\n\nreturn baz;\n\n// bad\nconst obj = {\n  foo() {\n  },\n  bar() {\n  },\n};\nreturn obj;\n\n// good\nconst obj = {\n  foo() {\n  },\n\n  bar() {\n  },\n};\n\nreturn obj;\n\n// bad\nconst arr = [\n  function foo() {\n  },\n  function bar() {\n  },\n];\nreturn arr;\n\n// good\nconst arr = [\n  function foo() {\n  },\n\n  function bar() {\n  },\n];\n\nreturn arr;\n\n\n\n\n\n19.8 Do not pad your blocks with blank lines. eslint: padded-blocks\n// bad\nfunction bar() {\n\n  console.log(foo);\n\n}\n\n// bad\nif (baz) {\n\n  console.log(qux);\n} else {\n  console.log(foo);\n\n}\n\n// bad\nclass Foo {\n\n  constructor(bar) {\n    this.bar = bar;\n  }\n}\n\n// good\nfunction bar() {\n  console.log(foo);\n}\n\n// good\nif (baz) {\n  console.log(qux);\n} else {\n  console.log(foo);\n}\n\n\n\n\n\n19.9 Do not use multiple blank lines to pad your code. eslint: no-multiple-empty-lines\n// bad\nclass Person {\n  constructor(fullName, email, birthday) {\n    this.fullName = fullName;\n\n\n    this.email = email;\n\n\n    this.setAge(birthday);\n  }\n\n\n  setAge(birthday) {\n    const today = new Date();\n\n\n    const age = this.getAge(today, birthday);\n\n\n    this.age = age;\n  }\n\n\n  getAge(today, birthday) {\n    // ..\n  }\n}\n\n// good\nclass Person {\n  constructor(fullName, email, birthday) {\n    this.fullName = fullName;\n    this.email = email;\n    this.setAge(birthday);\n  }\n\n  setAge(birthday) {\n    const today = new Date();\n    const age = getAge(today, birthday);\n    this.age = age;\n  }\n\n  getAge(today, birthday) {\n    // ..\n  }\n}\n\n\n\n\n\n19.10 Do not add spaces inside parentheses. eslint: space-in-parens\n// bad\nfunction bar( foo ) {\n  return foo;\n}\n\n// good\nfunction bar(foo) {\n  return foo;\n}\n\n// bad\nif ( foo ) {\n  console.log(foo);\n}\n\n// good\nif (foo) {\n  console.log(foo);\n}\n\n\n\n\n\n19.11 Do not add spaces inside brackets. eslint: array-bracket-spacing\n// bad\nconst foo = [ 1, 2, 3 ];\nconsole.log(foo[ 0 ]);\n\n// good\nconst foo = [1, 2, 3];\nconsole.log(foo[0]);\n\n\n\n\n\n19.12 Add spaces inside curly braces. eslint: object-curly-spacing\n// bad\nconst foo = {clark: 'kent'};\n\n// good\nconst foo = { clark: 'kent' };\n\n\n\n\n\n19.13 Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per above, long strings are exempt from this rule, and should not be broken up. eslint: max-len\n\nWhy? This ensures readability and maintainability.\n\n// bad\nconst foo = jsonData && jsonData.foo && jsonData.foo.bar && jsonData.foo.bar.baz && jsonData.foo.bar.baz.quux && jsonData.foo.bar.baz.quux.xyzzy;\n\n// bad\n$.ajax({ method: 'POST', url: 'https://airbnb.com/', data: { name: 'John' } }).done(() => console.log('Congratulations!')).fail(() => console.log('You have failed this city.'));\n\n// good\nconst foo = jsonData\n  && jsonData.foo\n  && jsonData.foo.bar\n  && jsonData.foo.bar.baz\n  && jsonData.foo.bar.baz.quux\n  && jsonData.foo.bar.baz.quux.xyzzy;\n\n// good\n$.ajax({\n  method: 'POST',\n  url: 'https://airbnb.com/',\n  data: { name: 'John' },\n})\n  .done(() => console.log('Congratulations!'))\n  .fail(() => console.log('You have failed this city.'));\n\n\n\n\n\n19.14 Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: block-spacing\n// bad\nfunction foo() {return true;}\nif (foo) { bar = 0;}\n\n// good\nfunction foo() { return true; }\nif (foo) { bar = 0; }\n\n\n\n\n\n19.15 Avoid spaces before commas and require a space after commas. eslint: comma-spacing\n// bad\nvar foo = 1,bar = 2;\nvar arr = [1 , 2];\n\n// good\nvar foo = 1, bar = 2;\nvar arr = [1, 2];\n\n\n\n\n\n19.16 Enforce spacing inside of computed property brackets. eslint: computed-property-spacing\n// bad\nobj[foo ]\nobj[ 'foo']\nvar x = {[ b ]: a}\nobj[foo[ bar ]]\n\n// good\nobj[foo]\nobj['foo']\nvar x = { [b]: a }\nobj[foo[bar]]\n\n\n\n\n\n19.17 Avoid spaces between functions and their invocations. eslint: func-call-spacing\n// bad\nfunc ();\n\nfunc\n();\n\n// good\nfunc();\n\n\n\n\n\n19.18 Enforce spacing between keys and values in object literal properties. eslint: key-spacing\n// bad\nvar obj = { \"foo\" : 42 };\nvar obj2 = { \"foo\":42 };\n\n// good\nvar obj = { \"foo\": 42 };\n\n\n\n\n19.19 Avoid trailing spaces at the end of lines. eslint: no-trailing-spaces\n\n\n\n\n19.20 Avoid multiple empty lines, only allow one newline at the end of files, and avoid a newline at the beginning of files. eslint: no-multiple-empty-lines\n// bad - multiple empty lines\nvar x = 1;\n\n\nvar y = 2;\n\n// bad - 2+ newlines at end of file\nvar x = 1;\nvar y = 2;\n\n\n// bad - 1+ newline(s) at beginning of file\n\nvar x = 1;\nvar y = 2;\n\n// good\nvar x = 1;\nvar y = 2;\n\n\n\n\u2b06 back to top\nCommas\n\n\n\n20.1 Leading commas: Nope. eslint: comma-style\n// bad\nconst story = [\n    once\n  , upon\n  , aTime\n];\n\n// good\nconst story = [\n  once,\n  upon,\n  aTime,\n];\n\n// bad\nconst hero = {\n    firstName: 'Ada'\n  , lastName: 'Lovelace'\n  , birthYear: 1815\n  , superPower: 'computers'\n};\n\n// good\nconst hero = {\n  firstName: 'Ada',\n  lastName: 'Lovelace',\n  birthYear: 1815,\n  superPower: 'computers',\n};\n\n\n\n\n\n20.2 Additional trailing comma: Yup. eslint: comma-dangle\n\nWhy? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don\u2019t have to worry about the trailing comma problem in legacy browsers.\n\n// bad - git diff without trailing comma\nconst hero = {\n     firstName: 'Florence',\n-    lastName: 'Nightingale'\n+    lastName: 'Nightingale',\n+    inventorOf: ['coxcomb chart', 'modern nursing']\n};\n\n// good - git diff with trailing comma\nconst hero = {\n     firstName: 'Florence',\n     lastName: 'Nightingale',\n+    inventorOf: ['coxcomb chart', 'modern nursing'],\n};\n// bad\nconst hero = {\n  firstName: 'Dana',\n  lastName: 'Scully'\n};\n\nconst heroes = [\n  'Batman',\n  'Superman'\n];\n\n// good\nconst hero = {\n  firstName: 'Dana',\n  lastName: 'Scully',\n};\n\nconst heroes = [\n  'Batman',\n  'Superman',\n];\n\n// bad\nfunction createHero(\n  firstName,\n  lastName,\n  inventorOf\n) {\n  // does nothing\n}\n\n// good\nfunction createHero(\n  firstName,\n  lastName,\n  inventorOf,\n) {\n  // does nothing\n}\n\n// good (note that a comma must not appear after a \"rest\" element)\nfunction createHero(\n  firstName,\n  lastName,\n  inventorOf,\n  ...heroArgs\n) {\n  // does nothing\n}\n\n// bad\ncreateHero(\n  firstName,\n  lastName,\n  inventorOf\n);\n\n// good\ncreateHero(\n  firstName,\n  lastName,\n  inventorOf,\n);\n\n// good (note that a comma must not appear after a \"rest\" element)\ncreateHero(\n  firstName,\n  lastName,\n  inventorOf,\n  ...heroArgs\n);\n\n\n\u2b06 back to top\nSemicolons\n\n\n\n21.1 Yup. eslint: semi\n\nWhy? When JavaScript encounters a line break without a semicolon, it uses a set of rules called Automatic Semicolon Insertion to determine whether or not it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.\n\n// bad - raises exception\nconst luke = {}\nconst leia = {}\n[luke, leia].forEach((jedi) => jedi.father = 'vader')\n\n// bad - raises exception\nconst reaction = \"No! That\u2019s impossible!\"\n(async function meanwhileOnTheFalcon() {\n  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`\n  // ...\n}())\n\n// bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!\nfunction foo() {\n  return\n    'search your feelings, you know it to be foo'\n}\n\n// good\nconst luke = {};\nconst leia = {};\n[luke, leia].forEach((jedi) => {\n  jedi.father = 'vader';\n});\n\n// good\nconst reaction = \"No! That\u2019s impossible!\";\n(async function meanwhileOnTheFalcon() {\n  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`\n  // ...\n}());\n\n// good\nfunction foo() {\n  return 'search your feelings, you know it to be foo';\n}\nRead more.\n\n\n\u2b06 back to top\nType Casting & Coercion\n\n\n22.1 Perform type coercion at the beginning of the statement.\n\n\n\n\n22.2 Strings: eslint: no-new-wrappers\n// => this.reviewScore = 9;\n\n// bad\nconst totalScore = new String(this.reviewScore); // typeof totalScore is \"object\" not \"string\"\n\n// bad\nconst totalScore = this.reviewScore + ''; // invokes this.reviewScore.valueOf()\n\n// bad\nconst totalScore = this.reviewScore.toString(); // isn\u2019t guaranteed to return a string\n\n// good\nconst totalScore = String(this.reviewScore);\n\n\n\n\n\n22.3 Numbers: Use Number for type casting and parseInt always with a radix for parsing strings. eslint: radix no-new-wrappers\nconst inputValue = '4';\n\n// bad\nconst val = new Number(inputValue);\n\n// bad\nconst val = +inputValue;\n\n// bad\nconst val = inputValue >> 0;\n\n// bad\nconst val = parseInt(inputValue);\n\n// good\nconst val = Number(inputValue);\n\n// good\nconst val = parseInt(inputValue, 10);\n\n\n\n\n\n22.4 If for whatever reason you are doing something wild and parseInt is your bottleneck and need to use Bitshift for performance reasons, leave a comment explaining why and what you\u2019re doing.\n// good\n/**\n * parseInt was the reason my code was slow.\n * Bitshifting the String to coerce it to a\n * Number made it a lot faster.\n */\nconst val = inputValue >> 0;\n\n\n\n\n\n22.5 Note: Be careful when using bitshift operations. Numbers are represented as 64-bit values, but bitshift operations always return a 32-bit integer (source). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. Discussion. Largest signed 32-bit Int is 2,147,483,647:\n2147483647 >> 0; // => 2147483647\n2147483648 >> 0; // => -2147483648\n2147483649 >> 0; // => -2147483647\n\n\n\n\n\n22.6 Booleans: eslint: no-new-wrappers\nconst age = 0;\n\n// bad\nconst hasAge = new Boolean(age);\n\n// good\nconst hasAge = Boolean(age);\n\n// best\nconst hasAge = !!age;\n\n\n\u2b06 back to top\nNaming Conventions\n\n\n\n23.1 Avoid single letter names. Be descriptive with your naming. eslint: id-length\n// bad\nfunction q() {\n  // ...\n}\n\n// good\nfunction query() {\n  // ...\n}\n\n\n\n\n\n23.2 Use camelCase when naming objects, functions, and instances. eslint: camelcase\n// bad\nconst OBJEcttsssss = {};\nconst this_is_my_object = {};\nfunction c() {}\n\n// good\nconst thisIsMyObject = {};\nfunction thisIsMyFunction() {}\n\n\n\n\n\n23.3 Use PascalCase only when naming constructors or classes. eslint: new-cap\n// bad\nfunction user(options) {\n  this.name = options.name;\n}\n\nconst bad = new user({\n  name: 'nope',\n});\n\n// good\nclass User {\n  constructor(options) {\n    this.name = options.name;\n  }\n}\n\nconst good = new User({\n  name: 'yup',\n});\n\n\n\n\n\n23.4 Do not use trailing or leading underscores. eslint: no-underscore-dangle\n\nWhy? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean \u201cprivate\u201d, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won\u2019t count as breaking, or that tests aren\u2019t needed. tl;dr: if you want something to be \u201cprivate\u201d, it must not be observably present.\n\n// bad\nthis.__firstName__ = 'Panda';\nthis.firstName_ = 'Panda';\nthis._firstName = 'Panda';\n\n// good\nthis.firstName = 'Panda';\n\n// good, in environments where WeakMaps are available\n// see https://kangax.github.io/compat-table/es6/#test-WeakMap\nconst firstNames = new WeakMap();\nfirstNames.set(this, 'Panda');\n\n\n\n\n\n23.5 Don\u2019t save references to this. Use arrow functions or Function#bind.\n// bad\nfunction foo() {\n  const self = this;\n  return function () {\n    console.log(self);\n  };\n}\n\n// bad\nfunction foo() {\n  const that = this;\n  return function () {\n    console.log(that);\n  };\n}\n\n// good\nfunction foo() {\n  return () => {\n    console.log(this);\n  };\n}\n\n\n\n\n\n23.6 A base filename should exactly match the name of its default export.\n// file 1 contents\nclass CheckBox {\n  // ...\n}\nexport default CheckBox;\n\n// file 2 contents\nexport default function fortyTwo() { return 42; }\n\n// file 3 contents\nexport default function insideDirectory() {}\n\n// in some other file\n// bad\nimport CheckBox from './checkBox'; // PascalCase import/export, camelCase filename\nimport FortyTwo from './FortyTwo'; // PascalCase import/filename, camelCase export\nimport InsideDirectory from './InsideDirectory'; // PascalCase import/filename, camelCase export\n\n// bad\nimport CheckBox from './check_box'; // PascalCase import/export, snake_case filename\nimport forty_two from './forty_two'; // snake_case import/filename, camelCase export\nimport inside_directory from './inside_directory'; // snake_case import, camelCase export\nimport index from './inside_directory/index'; // requiring the index file explicitly\nimport insideDirectory from './insideDirectory/index'; // requiring the index file explicitly\n\n// good\nimport CheckBox from './CheckBox'; // PascalCase export/import/filename\nimport fortyTwo from './fortyTwo'; // camelCase export/import/filename\nimport insideDirectory from './insideDirectory'; // camelCase export/import/directory name/implicit \"index\"\n// ^ supports both insideDirectory.js and insideDirectory/index.js\n\n\n\n\n\n23.7 Use camelCase when you export-default a function. Your filename should be identical to your function\u2019s name.\nfunction makeStyleGuide() {\n  // ...\n}\n\nexport default makeStyleGuide;\n\n\n\n\n\n23.8 Use PascalCase when you export a constructor / class / singleton / function library / bare object.\nconst AirbnbStyleGuide = {\n  es6: {\n  },\n};\n\nexport default AirbnbStyleGuide;\n\n\n\n\n\n23.9 Acronyms and initialisms should always be all uppercased, or all lowercased.\n\nWhy? Names are for readability, not to appease a computer algorithm.\n\n// bad\nimport SmsContainer from './containers/SmsContainer';\n\n// bad\nconst HttpRequests = [\n  // ...\n];\n\n// good\nimport SMSContainer from './containers/SMSContainer';\n\n// good\nconst HTTPRequests = [\n  // ...\n];\n\n// also good\nconst httpRequests = [\n  // ...\n];\n\n// best\nimport TextMessageContainer from './containers/TextMessageContainer';\n\n// best\nconst requests = [\n  // ...\n];\n\n\n\n\n\n23.10 You may optionally uppercase a constant only if it (1) is exported, (2) is a const (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.\n\nWhy? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.\n\n\nWhat about all const variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.\nWhat about exported objects? - Uppercase at the top level of export (e.g. EXPORTED_OBJECT.key) and maintain that all nested properties do not change.\n\n// bad\nconst PRIVATE_VARIABLE = 'should not be unnecessarily uppercased within a file';\n\n// bad\nexport const THING_TO_BE_CHANGED = 'should obviously not be uppercased';\n\n// bad\nexport let REASSIGNABLE_VARIABLE = 'do not use let with uppercase variables';\n\n// ---\n\n// allowed but does not supply semantic value\nexport const apiKey = 'SOMEKEY';\n\n// better in most cases\nexport const API_KEY = 'SOMEKEY';\n\n// ---\n\n// bad - unnecessarily uppercases key while adding no semantic value\nexport const MAPPING = {\n  KEY: 'value'\n};\n\n// good\nexport const MAPPING = {\n  key: 'value'\n};\n\n\n\u2b06 back to top\nAccessors\n\n\n24.1 Accessor functions for properties are not required.\n\n\n\n\n24.2 Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use getVal() and setVal('hello').\n// bad\nclass Dragon {\n  get age() {\n    // ...\n  }\n\n  set age(value) {\n    // ...\n  }\n}\n\n// good\nclass Dragon {\n  getAge() {\n    // ...\n  }\n\n  setAge(value) {\n    // ...\n  }\n}\n\n\n\n\n\n24.3 If the property/method is a boolean, use isVal() or hasVal().\n// bad\nif (!dragon.age()) {\n  return false;\n}\n\n// good\nif (!dragon.hasAge()) {\n  return false;\n}\n\n\n\n\n\n24.4 It\u2019s okay to create get() and set() functions, but be consistent.\nclass Jedi {\n  constructor(options = {}) {\n    const lightsaber = options.lightsaber || 'blue';\n    this.set('lightsaber', lightsaber);\n  }\n\n  set(key, val) {\n    this[key] = val;\n  }\n\n  get(key) {\n    return this[key];\n  }\n}\n\n\n\u2b06 back to top\nEvents\n\n\n\n25.1 When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a \"hash\") instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:\n// bad\n$(this).trigger('listingUpdated', listing.id);\n\n// ...\n\n$(this).on('listingUpdated', (e, listingID) => {\n  // do something with listingID\n});\nprefer:\n// good\n$(this).trigger('listingUpdated', { listingID: listing.id });\n\n// ...\n\n$(this).on('listingUpdated', (e, data) => {\n  // do something with data.listingID\n});\n\n\n\u2b06 back to top\njQuery\n\n\n\n26.1 Prefix jQuery object variables with a $.\n// bad\nconst sidebar = $('.sidebar');\n\n// good\nconst $sidebar = $('.sidebar');\n\n// good\nconst $sidebarBtn = $('.sidebar-btn');\n\n\n\n\n\n26.2 Cache jQuery lookups.\n// bad\nfunction setSidebar() {\n  $('.sidebar').hide();\n\n  // ...\n\n  $('.sidebar').css({\n    'background-color': 'pink',\n  });\n}\n\n// good\nfunction setSidebar() {\n  const $sidebar = $('.sidebar');\n  $sidebar.hide();\n\n  // ...\n\n  $sidebar.css({\n    'background-color': 'pink',\n  });\n}\n\n\n\n\n26.3 For DOM queries use Cascading $('.sidebar ul') or parent > child $('.sidebar > ul'). jsPerf\n\n\n\n\n26.4 Use find with scoped jQuery object queries.\n// bad\n$('ul', '.sidebar').hide();\n\n// bad\n$('.sidebar').find('ul').hide();\n\n// good\n$('.sidebar ul').hide();\n\n// good\n$('.sidebar > ul').hide();\n\n// good\n$sidebar.find('ul').hide();\n\n\n\u2b06 back to top\nECMAScript 5 Compatibility\n\n\n27.1 Refer to Kangax\u2019s ES5 compatibility table.\n\n\u2b06 back to top\n\nECMAScript 6+ (ES 2015+) Styles\n\n\n28.1 This is a collection of links to the various ES6+ features.\n\n\nArrow Functions\nClasses\nObject Shorthand\nObject Concise\nObject Computed Properties\nTemplate Strings\nDestructuring\nDefault Parameters\nRest\nArray Spreads\nLet and Const\nExponentiation Operator\nIterators and Generators\nModules\n\n\n\n\n28.2 Do not use TC39 proposals that have not reached stage 3.\n\nWhy? They are not finalized, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.\n\n\n\n\u2b06 back to top\nStandard Library\nThe Standard Library\ncontains utilities that are functionally broken but remain for legacy reasons.\n\n\n\n29.1 Use Number.isNaN instead of global isNaN.\neslint: no-restricted-globals\n\nWhy? The global isNaN coerces non-numbers to numbers, returning true for anything that coerces to NaN.\nIf this behavior is desired, make it explicit.\n\n// bad\nisNaN('1.2'); // false\nisNaN('1.2.3'); // true\n\n// good\nNumber.isNaN('1.2.3'); // false\nNumber.isNaN(Number('1.2.3')); // true\n\n\n\n\n\n29.2 Use Number.isFinite instead of global isFinite.\neslint: no-restricted-globals\n\nWhy? The global isFinite coerces non-numbers to numbers, returning true for anything that coerces to a finite number.\nIf this behavior is desired, make it explicit.\n\n// bad\nisFinite('2e3'); // true\n\n// good\nNumber.isFinite('2e3'); // false\nNumber.isFinite(parseInt('2e3', 10)); // true\n\n\n\u2b06 back to top\nTesting\n\n\n\n30.1 Yup.\nfunction foo() {\n  return true;\n}\n\n\n\n\n30.2 No, but seriously:\n\nWhichever testing framework you use, you should be writing tests!\nStrive to write many small pure functions, and minimize where mutations occur.\nBe cautious about stubs and mocks - they can make your tests more brittle.\nWe primarily use mocha and jest at Airbnb. tape is also used occasionally for small, separate modules.\n100% test coverage is a good goal to strive for, even if it\u2019s not always practical to reach it.\nWhenever you fix a bug, write a regression test. A bug fixed without a regression test is almost certainly going to break again in the future.\n\n\n\n\u2b06 back to top\nPerformance\n\nOn Layout & Web Performance\nString vs Array Concat\nTry/Catch Cost In a Loop\nBang Function\njQuery Find vs Context, Selector\ninnerHTML vs textContent for script text\nLong String Concatenation\nAre JavaScript functions like map(), reduce(), and filter() optimized for traversing arrays?\nLoading...\n\n\u2b06 back to top\nResources\nLearning ES6+\n\nLatest ECMA spec\nExploringJS\nES6 Compatibility Table\nComprehensive Overview of ES6 Features\n\nRead This\n\nStandard ECMA-262\n\nTools\n\nCode Style Linters\n\nESlint - Airbnb Style .eslintrc\nJSHint - Airbnb Style .jshintrc\n\n\nNeutrino Preset - @neutrinojs/airbnb\n\nOther Style Guides\n\nGoogle JavaScript Style Guide\nGoogle JavaScript Style Guide (Old)\njQuery Core Style Guidelines\nPrinciples of Writing Consistent, Idiomatic JavaScript\nStandardJS\n\nOther Styles\n\nNaming this in nested functions - Christian Johansen\nConditional Callbacks - Ross Allen\nPopular JavaScript Coding Conventions on GitHub - JeongHoon Byun\nMultiple var statements in JavaScript, not superfluous - Ben Alman\n\nFurther Reading\n\nUnderstanding JavaScript Closures - Angus Croll\nBasic JavaScript for the impatient programmer - Dr. Axel Rauschmayer\nYou Might Not Need jQuery - Zack Bloom & Adam Schwartz\nES6 Features - Luke Hoban\nFrontend Guidelines - Benjamin De Cock\n\nBooks\n\nJavaScript: The Good Parts - Douglas Crockford\nJavaScript Patterns - Stoyan Stefanov\nPro JavaScript Design Patterns - Ross Harmes and Dustin Diaz\nHigh Performance Web Sites: Essential Knowledge for Front-End Engineers - Steve Souders\nMaintainable JavaScript - Nicholas C. Zakas\nJavaScript Web Applications - Alex MacCaw\nPro JavaScript Techniques - John Resig\nSmashing Node.js: JavaScript Everywhere - Guillermo Rauch\nSecrets of the JavaScript Ninja - John Resig and Bear Bibeault\nHuman JavaScript - Henrik Joreteg\nSuperhero.js - Kim Joar Bekkelund, Mads Mob\u00e6k, & Olav Bjorkoy\nJSBooks - Julien Bouquillon\nThird Party JavaScript - Ben Vinegar and Anton Kovalyov\nEffective JavaScript: 68 Specific Ways to Harness the Power of JavaScript - David Herman\nEloquent JavaScript - Marijn Haverbeke\nYou Don\u2019t Know JS: ES6 & Beyond - Kyle Simpson\n\nBlogs\n\nJavaScript Weekly\nJavaScript, JavaScript...\nBocoup Weblog\nAdequately Good\nNCZOnline\nPerfection Kills\nBen Alman\nDmitry Baranovskiy\nnettuts\n\nPodcasts\n\nJavaScript Air\nJavaScript Jabber\n\n\u2b06 back to top\nIn the Wild\nThis is a list of organizations that are using this style guide. Send us a pull request and we'll add you to the list.\n\n123erfasst: 123erfasst/javascript\n3blades: 3Blades\n4Catalyzer: 4Catalyzer/javascript\nAan Zee: AanZee/javascript\nAdult Swim: adult-swim/javascript\nAirbnb: airbnb/javascript\nAltSchool: AltSchool/javascript\nApartmint: apartmint/javascript\nAscribe: ascribe/javascript\nAvalara: avalara/javascript\nAvant: avantcredit/javascript\nAxept: axept/javascript\nBashPros: BashPros/javascript\nBillabong: billabong/javascript\nBisk: bisk\nBonhomme: bonhommeparis/javascript\nBrainshark: brainshark/javascript\nCaseNine: CaseNine/javascript\nCerner: Cerner\nChartboost: ChartBoost/javascript-style-guide\nCoeur d'Alene Tribe: www.cdatribe-nsn.gov\nComparaOnline: comparaonline/javascript\nCompass Learning: compasslearning/javascript-style-guide\nDailyMotion: dailymotion/javascript\nDoSomething: DoSomething/eslint-config\nDigitpaint digitpaint/javascript\nDrupal: www.drupal.org\nEcosia: ecosia/javascript\nEvernote: evernote/javascript-style-guide\nEvolution Gaming: evolution-gaming/javascript\nEvozonJs: evozonjs/javascript\nExactTarget: ExactTarget/javascript\nExpensify Expensify/Style-Guide\nFlexberry: Flexberry/javascript-style-guide\nGawker Media: gawkermedia\nGeneral Electric: GeneralElectric/javascript\nGeneration Tux: GenerationTux/javascript\nGoodData: gooddata/gdc-js-style\nGreenChef: greenchef/javascript\nGrooveshark: grooveshark/javascript\nGrupo-Abraxas: Grupo-Abraxas/javascript\nHappeo: happeo/javascript\nHoney: honeyscience/javascript\nHow About We: howaboutwe/javascript\nHuballin: huballin\nHubSpot: HubSpot/javascript\nHyper: hyperoslo/javascript-playbook\nInterCity Group: intercitygroup/javascript-style-guide\nJam3: Jam3/Javascript-Code-Conventions\nJeopardyBot: kesne/jeopardy-bot\nJSSolutions: JSSolutions/javascript\nKaplan Komputing: kaplankomputing/javascript\nKickorStick: kickorstick\nKinetica Solutions: kinetica/javascript\nLEINWAND: LEINWAND/javascript\nLonely Planet: lonelyplanet/javascript\nM2GEN: M2GEN/javascript\nMighty Spring: mightyspring/javascript\nMinnPost: MinnPost/javascript\nMitocGroup: MitocGroup/javascript\nModCloth: modcloth/javascript\nMoney Advice Service: moneyadviceservice/javascript\nMuber: muber\nNational Geographic: natgeo\nNimbl3: nimbl3/javascript\nNullDev: NullDevCo/JavaScript-Styleguide\nNulogy: nulogy/javascript\nOrange Hill Development: orangehill/javascript\nOrion Health: orionhealth/javascript\nOutBoxSoft: OutBoxSoft/javascript\nPeerby: Peerby/javascript\nPier 1: Pier1/javascript\nQotto: Qotto/javascript-style-guide\nRazorfish: razorfish/javascript-style-guide\nreddit: reddit/styleguide/javascript\nReact: facebook.github.io/react/contributing/how-to-contribute.html#style-guide\nREI: reidev/js-style-guide\nRipple: ripple/javascript-style-guide\nSainsbury\u2019s Supermarkets: jsainsburyplc\nSeekingAlpha: seekingalpha/javascript-style-guide\nShutterfly: shutterfly/javascript\nSourcetoad: sourcetoad/javascript\nSpringload: springload\nStratoDem Analytics: stratodem/javascript\nSteelKiwi Development: steelkiwi/javascript\nStudentSphere: studentsphere/javascript\nSwoopApp: swoopapp/javascript\nSysGarage: sysgarage/javascript-style-guide\nSyzygy Warsaw: syzygypl/javascript\nTarget: target/javascript\nTerra: terra\nTheLadders: TheLadders/javascript\nThe Nerdery: thenerdery/javascript-standards\nTomify: tomprats\nTraitify: traitify/eslint-config-traitify\nT4R Technology: T4R-Technology/javascript\nUrbanSim: urbansim\nVoxFeed: VoxFeed/javascript-style-guide\nWeBox Studio: weboxstudio/javascript\nWeggo: Weggo/javascript\nZillow: zillow/javascript\nZocDoc: ZocDoc/javascript\n\n\u2b06 back to top\nTranslation\nThis style guide is also available in other languages:\n\n Brazilian Portuguese: armoucar/javascript-style-guide\n Bulgarian: borislavvv/javascript\n Catalan: fpmweb/javascript-style-guide\n Chinese (Simplified): lin-123/javascript\n Chinese (Traditional): jigsawye/javascript\n French: nmussy/javascript-style-guide\n German: timofurrer/javascript-style-guide\n Italian: sinkswim/javascript-style-guide\n Japanese: mitsuruog/javascript-style-guide\n Korean: ParkSB/javascript-style-guide\n Russian: leonidlebedev/javascript-airbnb\n Spanish: paolocarrasco/javascript-style-guide\n Thai: lvarayut/javascript-style-guide\n Turkish: eraycetinay/javascript\n Ukrainian: ivanzusko/javascript\n Vietnam: dangkyokhoang/javascript-style-guide\n\nThe JavaScript Style Guide Guide\n\nReference\n\nChat With Us About JavaScript\n\nFind us on gitter.\n\nContributors\n\nView Contributors\n\nLicense\n(The MIT License)\nCopyright (c) 2012 Airbnb\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\u2b06 back to top\nAmendments\nWe encourage you to fork this guide and change the rules to fit your team\u2019s style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.\n};\n\n"}, {"repo": "d3/d3", "language": "JavaScript", "readme": "\nD3: Data-Driven Documents\n\nD3 (or D3.js) is a JavaScript library for visualizing data using web standards. D3 helps you bring data to life using SVG, Canvas and HTML. D3 combines powerful visualization and interaction techniques with a data-driven approach to DOM manipulation, giving you the full capabilities of modern browsers and the freedom to design the right visual interface for your data.\nResources\n\nAPI Reference\nRelease Notes\nGallery\nExamples\nWiki\n\nInstalling\nIf you use npm, npm install d3. Otherwise, download the latest release. The released bundle supports anonymous AMD, CommonJS, and vanilla environments. You can load directly from d3js.org, CDNJS, or unpkg. For example:\n<script src=\"https://d3js.org/d3.v5.js\"></script>\nFor the minified version:\n<script src=\"https://d3js.org/d3.v5.min.js\"></script>\nYou can also use the standalone D3 microlibraries. For example, d3-selection:\n<script src=\"https://d3js.org/d3-selection.v1.js\"></script>\nD3 is written using ES2015 modules. Create a custom bundle using Rollup, Webpack, or your preferred bundler. To import D3 into an ES2015 application, either import specific symbols from specific D3 modules:\nimport {scaleLinear} from \"d3-scale\";\nOr import everything into a namespace (here, d3):\nimport * as d3 from \"d3\";\nIn Node:\nvar d3 = require(\"d3\");\nYou can also require individual modules and combine them into a d3 object using Object.assign:\nvar d3 = Object.assign({}, require(\"d3-format\"), require(\"d3-geo\"), require(\"d3-geo-projection\"));\n\n"}, {"repo": "microsoft/vscode", "language": "TypeScript", "readme": "\nVisual Studio Code - Open Source (\"Code - OSS\")\n\n\n\n\nThe Repository\nThis repository (\"Code - OSS\") is where we (Microsoft) develop the Visual Studio Code product. Not only do we work on code and issues here, we also publish our roadmap, monthly iteration plans, and our endgame plans. This source code is available to everyone under the standard MIT license.\nVisual Studio Code\n\n\n\nVisual Studio Code is a distribution of the Code - OSS repository with Microsoft specific customizations released under a traditional Microsoft product license.\nVisual Studio Code combines the simplicity of a code editor with what developers need for their core edit-build-debug cycle. It provides comprehensive code editing, navigation, and understanding support along with lightweight debugging, a rich extensibility model, and lightweight integration with existing tools.\nVisual Studio Code is updated monthly with new features and bug fixes. You can download it for Windows, macOS, and Linux on Visual Studio Code's website. To get the latest releases every day, install the Insiders build.\nContributing\nThere are many ways in which you can participate in the project, for example:\n\nSubmit bugs and feature requests, and help us verify as they are checked in\nReview source code changes\nReview the documentation and make pull requests for anything from typos to new content\n\nIf you are interested in fixing issues and contributing directly to the code base,\nplease see the document How to Contribute, which covers the following:\n\nHow to build and run from source\nThe development workflow, including debugging and running tests\nCoding guidelines\nSubmitting pull requests\nFinding an issue to work on\nContributing to translations\n\nFeedback\n\nAsk a question on Stack Overflow\nRequest a new feature\nUp vote popular feature requests\nFile an issue\nFollow @code and let us know what you think!\n\nRelated Projects\nMany of the core components and extensions to VS Code live in their own repositories on GitHub. For example, the node debug adapter and the mono debug adapter have their own repositories. For a complete list, please visit the Related Projects page on our wiki.\nBundled Extensions\nVS Code includes a set of built-in extensions located in the extensions folder, including grammars and snippets for many languages. Extensions that provide rich language support (code completion, Go to Definition) for a language have the suffix language-features. For example, the json extension provides coloring for JSON and the json-language-features provides rich language support for JSON.\nCode of Conduct\nThis project has adopted the Microsoft Open Source Code of Conduct. For more information see the Code of Conduct FAQ or contact opencode@microsoft.com with any additional questions or comments.\nLicense\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the MIT license.\n\n"}, {"repo": "CyC2018/CS-Notes", "language": "Java", "readme": "\n\n \n \n \n \n\n\n\n\n\n\u00a0\u7b97\u6cd5\u00a0\n\u64cd\u4f5c\u7cfb\u7edf\n\u00a0\u7f51\u7edc\u00a0\n\u9762\u5411\u5bf9\u8c61\n\u00a0\u00a0\u6570\u636e\u5e93\u00a0\u00a0\n\u00a0\u00a0\u00a0Java\u00a0\u00a0\u00a0\n\u7cfb\u7edf\u8bbe\u8ba1\n\u00a0\u00a0\u00a0\u5de5\u5177\u00a0\u00a0\u00a0\n\u7f16\u7801\u5b9e\u8df5\n\u00a0\u00a0\u00a0\u540e\u8bb0\u00a0\u00a0\u00a0\n\n\n\n\n\u270f\ufe0f\n\ud83d\udcbb\n\u2601\ufe0f\n\ud83c\udfa8\n\ud83d\udcbe\n\u2615\ufe0f\n\ud83d\udca1\n\ud83d\udd27\n\ud83c\udf49\n\ud83d\udcdd\n\n\n\n\n\n\n\n\n\u270f\ufe0f \u7b97\u6cd5\n\n\u5251\u6307 Offer \u9898\u89e3\nLeetcode \u9898\u89e3\n\u7b97\u6cd5\n\u7b14\u8bd5\u9762\u8bd5\u9898\u5e93\n\n\ud83d\udcbb \u64cd\u4f5c\u7cfb\u7edf\n\n\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf\nLinux\n\n\u2601\ufe0f \u7f51\u7edc\n\n\u8ba1\u7b97\u673a\u7f51\u7edc\nHTTP\nSocket\n\n\ud83c\udfa8 \u9762\u5411\u5bf9\u8c61\n\n\u9762\u5411\u5bf9\u8c61\u601d\u60f3\n\u8bbe\u8ba1\u6a21\u5f0f\n\n\ud83d\udcbe \u6570\u636e\u5e93\n\n\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406\nSQL\nLeetcode-Database \u9898\u89e3\nMySQL\nRedis\n\n\u2615\ufe0f Java\n\nJava \u57fa\u7840\nJava \u5bb9\u5668\nJava \u5e76\u53d1\nJava \u865a\u62df\u673a\nJava I/O\n\n\ud83d\udca1 \u7cfb\u7edf\u8bbe\u8ba1\n\n\u7cfb\u7edf\u8bbe\u8ba1\u57fa\u7840\n\u5206\u5e03\u5f0f\n\u96c6\u7fa4\n\u653b\u51fb\u6280\u672f\n\u7f13\u5b58\n\u6d88\u606f\u961f\u5217\n\n\ud83d\udd27 \u5de5\u5177\n\nGit\nDocker\n\u6784\u5efa\u5de5\u5177\n\u6b63\u5219\u8868\u8fbe\u5f0f\n\n\ud83c\udf49 \u7f16\u7801\u5b9e\u8df5\n\n\u4ee3\u7801\u53ef\u8bfb\u6027\n\u4ee3\u7801\u98ce\u683c\u89c4\u8303\n\n\ud83d\udcdd \u540e\u8bb0\n\n \u6211\u7684\u9762\u7ecf  /  \u6211\u7684\u7b80\u5386  /  \u7b80\u5386\u6a21\u7248  /  \u5185\u63a8  /  \u4e13\u680f  /  QQ \u7fa4\n\n\n\n\u6392\u7248\n\u7b14\u8bb0\u5185\u5bb9\u6309\u7167 \u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317 \u8fdb\u884c\u6392\u7248\uff0c\u4ee5\u4fdd\u8bc1\u5185\u5bb9\u7684\u53ef\u8bfb\u6027\u3002\n\u4e0d\u4f7f\u7528 ![]() \u8fd9\u79cd\u65b9\u5f0f\u6765\u5f15\u7528\u56fe\u7247\uff0c\u800c\u662f\u7528 <img> \u6807\u7b7e\u3002\u4e00\u65b9\u9762\u662f\u4e3a\u4e86\u80fd\u591f\u63a7\u5236\u56fe\u7247\u4ee5\u5408\u9002\u7684\u5927\u5c0f\u663e\u793a\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u56e0\u4e3a GFM \u4e0d\u652f\u6301 <center> ![]() </center> \u8fd9\u79cd\u65b9\u6cd5\u8ba9\u56fe\u7247\u5c45\u4e2d\u663e\u793a\uff0c\u53ea\u80fd\u4f7f\u7528 <div align=\"center\"> <img src=\"\"/> </div> \u8fbe\u5230\u5c45\u4e2d\u7684\u6548\u679c\u3002\n\u5728\u7ebf\u6392\u7248\u5de5\u5177\uff1aText-Typesetting\u3002\nLicense\n\u672c\u4ed3\u5e93\u7684\u5185\u5bb9\u4e0d\u662f\u5c06\u7f51\u4e0a\u7684\u8d44\u6599\u968f\u610f\u62fc\u51d1\u800c\u6765\uff0c\u9664\u4e86\u5c11\u90e8\u5206\u5f15\u7528\u4e66\u4e0a\u548c\u6280\u672f\u6587\u6863\u7684\u539f\u6587\uff08\u8fd9\u90e8\u5206\u5185\u5bb9\u90fd\u5728\u672b\u5c3e\u7684\u53c2\u8003\u94fe\u63a5\u4e2d\u52a0\u4e86\u51fa\u5904\uff09\uff0c\u5176\u4f59\u90fd\u662f\u6211\u7684\u539f\u521b\u3002\u5728\u60a8\u5f15\u7528\u672c\u4ed3\u5e93\u5185\u5bb9\u6216\u8005\u5bf9\u5185\u5bb9\u8fdb\u884c\u4fee\u6539\u6f14\u7ece\u65f6\uff0c\u8bf7\u7f72\u540d\u5e76\u4ee5\u76f8\u540c\u65b9\u5f0f\u5171\u4eab\uff0c\u8c22\u8c22\u3002\n\u8f6c\u8f7d\u6587\u7ae0\u8bf7\u5728\u5f00\u5934\u660e\u663e\u5904\u6807\u660e\u8be5\u9875\u9762\u5730\u5740\uff0c\u516c\u4f17\u53f7\u7b49\u5176\u5b83\u8f6c\u8f7d\u8bf7\u8054\u7cfb zhengyc101@163.com\u3002\nLogo\uff1alogomakr\n\n\u81f4\u8c22\n\u611f\u8c22\u4ee5\u4e0b\u4eba\u5458\u5bf9\u672c\u4ed3\u5e93\u505a\u51fa\u7684\u8d21\u732e\uff0c\u5f53\u7136\u4e0d\u4ec5\u4ec5\u53ea\u6709\u8fd9\u4e9b\u8d21\u732e\u8005\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002\u5982\u679c\u4f60\u5e0c\u671b\u88ab\u6dfb\u52a0\u5230\u8fd9\u4e2a\u540d\u5355\u4e2d\uff0c\u5e76\u4e14\u63d0\u4ea4\u8fc7 Issue \u6216\u8005 PR\uff0c\u8bf7\u4e0e\u6211\u8054\u7cfb\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}, {"repo": "torvalds/linux", "language": "C", "readme": "\nLinux kernel\n============\n\nThere are several guides for kernel developers and users. These guides can\nbe rendered in a number of formats, like HTML and PDF. Please read\nDocumentation/admin-guide/README.rst first.\n\nIn order to build the documentation, use ``make htmldocs`` or\n``make pdfdocs``.  The formatted documentation can also be read online at:\n\n    https://www.kernel.org/doc/html/latest/\n\nThere are various text files in the Documentation/ subdirectory,\nseveral of them using the Restructured Text markup notation.\n\nPlease read the Documentation/process/changes.rst file, as it contains the\nrequirements for building and running the kernel, and information about\nthe problems which may result by upgrading your kernel.\n\n"}, {"repo": "facebook/react-native", "language": "JavaScript", "readme": "\n\n\n    React Native\n  \n\n\nLearn once, write anywhere:\n  Build mobile apps with React.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\n \u00b7 \nLearn the Basics\n \u00b7 \nShowcase\n \u00b7 \nContribute\n \u00b7 \nCommunity\n \u00b7 \nSupport\n\nReact Native brings React's declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.\n\nDeclarative. React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.\nComponent-Based. Build encapsulated components that manage their state, then compose them to make complex UIs.\nDeveloper Velocity. See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.\nPortability. Reuse code across iOS, Android, and other platforms.\n\nReact Native is developed and supported by many companies and individual core contributors. Find out more in our ecosystem overview.\nContents\n\nRequirements\nBuilding your first React Native app\nDocumentation\nUpgrading\nHow to Contribute\nCode of Conduct\nLicense\n\n\ud83d\udccb Requirements\nReact Native apps may target iOS 9.0 and Android 4.1 (API 16) or newer. You may use Windows, macOS, or Linux as your development operating system, though building and running iOS apps is limited to macOS. Tools like Expo can be used to work around this.\n\ud83c\udf89 Building your first React Native app\nFollow the Getting Started guide. The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:\n\nTrying out React Native\nCreating a New Application\nAdding React Native to an Existing Application\n\n\ud83d\udcd6 Documentation\nThe full documentation for React Native can be found on our website.\nThe React Native documentation discusses components, APIs, and topics that are specific to React Native. For further documentation on the React API that is shared between React Native and React DOM, refer to the React documentation.\nThe source for the React Native documentation and website is hosted on a separate repo, @facebook/react-native-website.\n\ud83d\ude80 Upgrading\nUpgrading to new versions of React Native may give you access to more APIs, views, developer tools, and other goodies. See the Upgrading Guide for instructions.\nReact Native releases are discussed in the React Native Community, @react-native-community/react-native-releases.\n\ud83d\udc4f How to Contribute\nThe main purpose of this repository is to continue evolving React Native core. We want to make contributing to this project as easy and transparent as possible, and we are grateful to the community for contributing bug fixes and improvements. Read below to learn how you can take part in improving React Native.\nCode of Conduct\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to.\nPlease read the full text so that you can understand what actions will and will not be tolerated.\nContributing Guide\nRead our Contributing Guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React Native.\nOpen Source Roadmap\nYou can learn more about our vision for React Native in the Roadmap.\nGood First Issues\nWe have a list of good first issues that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.\nDiscussions\nLarger discussions and proposals are discussed in @react-native-community/discussions-and-proposals.\n\ud83d\udcc4 License\nReact Native is MIT licensed, as found in the LICENSE file.\nReact Native documentation is Creative Commons licensed, as found in the LICENSE-docs file.\n\n"}, {"repo": "flutter/flutter", "language": "Dart", "readme": "\n\n\n\n\nFlutter is Google's SDK for crafting beautiful, fast user experiences for\nmobile, web and desktop from a single codebase. Flutter works with existing\ncode, is used by developers and organizations around the world, and is free\nand open source.\nDocumentation\n\nInstall Flutter\nFlutter documentation\nDevelopment wiki\nContributing to Flutter\n\nFor announcements about new releases and breaking changes, follow the\nflutter-announce@googlegroups.com\nmailing list.\nAbout Flutter\nWe think Flutter will help you create beautiful, fast apps, with a productive,\nextensible and open development model.\nBeautiful user experiences\nWe want to enable designers to deliver their full creative vision without being\nforced to water it down due to limitations of the underlying framework.\nFlutter's layered architecture gives you control over every pixel on the\nscreen, and its powerful compositing capabilities let you overlay and animate\ngraphics, video, text and controls without limitation. Flutter includes a full\nset of widgets that deliver pixel-perfect experiences on both\niOS and Android.\n\nFast results\nFlutter is fast. It's powered by the same hardware-accelerated Skia 2D\ngraphics library that underpins Chrome and Android. We architected Flutter to\nsupport glitch-free, jank-free graphics at the native speed of your device.\nFlutter code is powered by the world-class Dart platform, which enables\ncompilation to 32-bit and 64-bit ARM machine code for iOS and Android, as well\nas JavaScript for the web and Intel x64 for desktop devices.\n\nProductive development\nFlutter offers stateful hot reload, allowing you to make changes to your code\nand see the results instantly without restarting your app or losing its state.\n\nExtensible and open model\nFlutter works with any development tool (or none at all), but includes editor\nplug-ins for both Visual Studio Code and IntelliJ / Android Studio. Flutter\nprovides thousands of packages to speed your development,\nregardless of your target platform. And accessing other native code is easy,\nwith support for both FFI and platform-specific APIs.\nFlutter is a fully open source project, and we welcome contributions.\nInformation on how to get started can be found at our\ncontributor guide.\n\n"}, {"repo": "electron/electron", "language": "C++", "readme": "\n\n\n\n\n\ud83d\udcdd Available Translations: \ud83c\udde8\ud83c\uddf3 \ud83c\uddf9\ud83c\uddfc \ud83c\udde7\ud83c\uddf7 \ud83c\uddea\ud83c\uddf8 \ud83c\uddf0\ud83c\uddf7 \ud83c\uddef\ud83c\uddf5 \ud83c\uddf7\ud83c\uddfa \ud83c\uddeb\ud83c\uddf7 \ud83c\uddf9\ud83c\udded \ud83c\uddf3\ud83c\uddf1 \ud83c\uddf9\ud83c\uddf7 \ud83c\uddee\ud83c\udde9 \ud83c\uddfa\ud83c\udde6 \ud83c\udde8\ud83c\uddff \ud83c\uddee\ud83c\uddf9 \ud83c\uddf5\ud83c\uddf1.\nView these docs in other languages at electron/i18n.\nThe Electron framework lets you write cross-platform desktop applications\nusing JavaScript, HTML and CSS. It is based on Node.js and\nChromium and is used by the Atom\neditor and many other apps.\nFollow @ElectronJS on Twitter for important\nannouncements.\nThis project adheres to the Contributor Covenant\ncode of conduct.\nBy participating, you are expected to uphold this code. Please report unacceptable\nbehavior to coc@electronjs.org.\nInstallation\nTo install prebuilt Electron binaries, use npm.\nThe preferred method is to install Electron as a development dependency in your\napp:\nnpm install electron --save-dev [--save-exact]\nThe --save-exact flag is recommended for Electron prior to version 2, as it does not follow semantic\nversioning. As of version 2.0.0, Electron follows semver, so you don't need --save-exact flag. For info on how to manage Electron versions in your apps, see\nElectron versioning.\nFor more installation options and troubleshooting tips, see\ninstallation.\nQuick start & Electron Fiddle\nUse Electron Fiddle\nto build, run, and package small Electron experiments, to see code examples for all of Electron's APIs, and\nto try out different versions of Electron. It's designed to make the start of your journey with\nElectron easier.\nAlternatively, clone and run the\nelectron/electron-quick-start\nrepository to see a minimal Electron app in action:\ngit clone https://github.com/electron/electron-quick-start\ncd electron-quick-start\nnpm install\nnpm start\nResources for learning Electron\n\nelectronjs.org/docs - All of Electron's documentation\nelectron/fiddle - A tool to build, run, and package small Electron experiments\nelectron/electron-quick-start - A very basic starter Electron app\nelectronjs.org/community#boilerplates - Sample starter apps created by the community\nelectron/simple-samples - Small applications with ideas for taking them further\nelectron/electron-api-demos - An Electron app that teaches you how to use Electron\nhokein/electron-sample-apps - Small demo apps for the various Electron APIs\n\nProgrammatic usage\nMost people use Electron from the command line, but if you require electron inside\nyour Node app (not your Electron app) it will return the file path to the\nbinary. Use this to spawn Electron from Node scripts:\nconst electron = require('electron')\nconst proc = require('child_process')\n\n// will print something similar to /Users/maf/.../Electron\nconsole.log(electron)\n\n// spawn Electron\nconst child = proc.spawn(electron)\nMirrors\n\nChina\n\nDocumentation Translations\nFind documentation translations in electron/i18n.\nContributing\nIf you are interested in reporting/fixing issues and contributing directly to the code base, please see CONTRIBUTING.md for more information on what we're looking for and how to get started.\nCommunity\nInfo on reporting bugs, getting help, finding third-party tools and sample apps,\nand more can be found in the support document.\nLicense\nMIT\nWhen using the Electron or other GitHub logos, be sure to follow the GitHub logo guidelines.\n\n"}, {"repo": "donnemartin/system-design-primer", "language": "Python", "readme": "\nEnglish \u2219 \u65e5\u672c\u8a9e \u2219 \u7b80\u4f53\u4e2d\u6587 \u2219 \u7e41\u9ad4\u4e2d\u6587 | \u0627\u0644\u0639\u064e\u0631\u064e\u0628\u0650\u064a\u064e\u0651\u0629\u200e \u2219 \u09ac\u09be\u0982\u09b2\u09be \u2219 Portugu\u00eas do Brasil \u2219 Deutsch \u2219 \u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac \u2219 \u05e2\u05d1\u05e8\u05d9\u05ea \u2219 Italiano \u2219 \u97d3\u570b\u8a9e \u2219 \u0641\u0627\u0631\u0633\u06cc \u2219 Polski \u2219 \u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a \u2219 Espa\u00f1ol \u2219 \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 \u2219 T\u00fcrk\u00e7e \u2219 ti\u1ebfng Vi\u1ec7t \u2219 Fran\u00e7ais | Add Translation\nThe System Design Primer\n\n\n\n\nMotivation\n\nLearn how to design large-scale systems.\nPrep for the system design interview.\n\nLearn how to design large-scale systems\nLearning how to design scalable systems will help you become a better engineer.\nSystem design is a broad topic.  There is a vast amount of resources scattered throughout the web on system design principles.\nThis repo is an organized collection of resources to help you learn how to build systems at scale.\nLearn from the open source community\nThis is a continually updated, open source project.\nContributions are welcome!\nPrep for the system design interview\nIn addition to coding interviews, system design is a required component of the technical interview process at many tech companies.\nPractice common system design interview questions and compare your results with sample solutions: discussions, code, and diagrams.\nAdditional topics for interview prep:\n\nStudy guide\nHow to approach a system design interview question\nSystem design interview questions, with solutions\nObject-oriented design interview questions, with solutions\nAdditional system design interview questions\n\nAnki flashcards\n\n\n\n\nThe provided Anki flashcard decks use spaced repetition to help you retain key system design concepts.\n\nSystem design deck\nSystem design exercises deck\nObject oriented design exercises deck\n\nGreat for use while on-the-go.\nCoding Resource: Interactive Coding Challenges\nLooking for resources to help you prep for the Coding Interview?\n\n\n\n\nCheck out the sister repo Interactive Coding Challenges, which contains an additional Anki deck:\n\nCoding deck\n\nContributing\n\nLearn from the community.\n\nFeel free to submit pull requests to help:\n\nFix errors\nImprove sections\nAdd new sections\nTranslate\n\nContent that needs some polishing is placed under development.\nReview the Contributing Guidelines.\nIndex of system design topics\n\nSummaries of various system design topics, including pros and cons.  Everything is a trade-off.\nEach section contains links to more in-depth resources.\n\n\n\n\n\n\nSystem design topics: start here\n\nStep 1: Review the scalability video lecture\nStep 2: Review the scalability article\nNext steps\n\n\nPerformance vs scalability\nLatency vs throughput\nAvailability vs consistency\n\nCAP theorem\n\nCP - consistency and partition tolerance\nAP - availability and partition tolerance\n\n\n\n\nConsistency patterns\n\nWeak consistency\nEventual consistency\nStrong consistency\n\n\nAvailability patterns\n\nFail-over\nReplication\nAvailability in numbers\n\n\nDomain name system\nContent delivery network\n\nPush CDNs\nPull CDNs\n\n\nLoad balancer\n\nActive-passive\nActive-active\nLayer 4 load balancing\nLayer 7 load balancing\nHorizontal scaling\n\n\nReverse proxy (web server)\n\nLoad balancer vs reverse proxy\n\n\nApplication layer\n\nMicroservices\nService discovery\n\n\nDatabase\n\nRelational database management system (RDBMS)\n\nMaster-slave replication\nMaster-master replication\nFederation\nSharding\nDenormalization\nSQL tuning\n\n\nNoSQL\n\nKey-value store\nDocument store\nWide column store\nGraph Database\n\n\nSQL or NoSQL\n\n\nCache\n\nClient caching\nCDN caching\nWeb server caching\nDatabase caching\nApplication caching\nCaching at the database query level\nCaching at the object level\nWhen to update the cache\n\nCache-aside\nWrite-through\nWrite-behind (write-back)\nRefresh-ahead\n\n\n\n\nAsynchronism\n\nMessage queues\nTask queues\nBack pressure\n\n\nCommunication\n\nTransmission control protocol (TCP)\nUser datagram protocol (UDP)\nRemote procedure call (RPC)\nRepresentational state transfer (REST)\n\n\nSecurity\nAppendix\n\nPowers of two table\nLatency numbers every programmer should know\nAdditional system design interview questions\nReal world architectures\nCompany architectures\nCompany engineering blogs\n\n\nUnder development\nCredits\nContact info\nLicense\n\nStudy guide\n\nSuggested topics to review based on your interview timeline (short, medium, long).\n\n\nQ: For interviews, do I need to know everything here?\nA: No, you don't need to know everything here to prepare for the interview.\nWhat you are asked in an interview depends on variables such as:\n\nHow much experience you have\nWhat your technical background is\nWhat positions you are interviewing for\nWhich companies you are interviewing with\nLuck\n\nMore experienced candidates are generally expected to know more about system design.  Architects or team leads might be expected to know more than individual contributors.  Top tech companies are likely to have one or more design interview rounds.\nStart broad and go deeper in a few areas.  It helps to know a little about various key system design topics.  Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.\n\nShort timeline - Aim for breadth with system design topics.  Practice by solving some interview questions.\nMedium timeline - Aim for breadth and some depth with system design topics.  Practice by solving many interview questions.\nLong timeline - Aim for breadth and more depth with system design topics.  Practice by solving most interview questions.\n\n\n\n\n\nShort\nMedium\nLong\n\n\n\n\nRead through the System design topics to get a broad understanding of how systems work\n\ud83d\udc4d\n\ud83d\udc4d\n\ud83d\udc4d\n\n\nRead through a few articles in the Company engineering blogs for the companies you are interviewing with\n\ud83d\udc4d\n\ud83d\udc4d\n\ud83d\udc4d\n\n\nRead through a few Real world architectures\n\ud83d\udc4d\n\ud83d\udc4d\n\ud83d\udc4d\n\n\nReview How to approach a system design interview question\n\ud83d\udc4d\n\ud83d\udc4d\n\ud83d\udc4d\n\n\nWork through System design interview questions with solutions\nSome\nMany\nMost\n\n\nWork through Object-oriented design interview questions with solutions\nSome\nMany\nMost\n\n\nReview Additional system design interview questions\nSome\nMany\nMost\n\n\n\nHow to approach a system design interview question\n\nHow to tackle a system design interview question.\n\nThe system design interview is an open-ended conversation.  You are expected to lead it.\nYou can use the following steps to guide the discussion.  To help solidify this process, work through the System design interview questions with solutions section using the following steps.\nStep 1: Outline use cases, constraints, and assumptions\nGather requirements and scope the problem.  Ask questions to clarify use cases and constraints.  Discuss assumptions.\n\nWho is going to use it?\nHow are they going to use it?\nHow many users are there?\nWhat does the system do?\nWhat are the inputs and outputs of the system?\nHow much data do we expect to handle?\nHow many requests per second do we expect?\nWhat is the expected read to write ratio?\n\nStep 2: Create a high level design\nOutline a high level design with all important components.\n\nSketch the main components and connections\nJustify your ideas\n\nStep 3: Design core components\nDive into details for each core component.  For example, if you were asked to design a url shortening service, discuss:\n\nGenerating and storing a hash of the full url\n\nMD5 and Base62\nHash collisions\nSQL or NoSQL\nDatabase schema\n\n\nTranslating a hashed url to the full url\n\nDatabase lookup\n\n\nAPI and object-oriented design\n\nStep 4: Scale the design\nIdentify and address bottlenecks, given the constraints.  For example, do you need the following to address scalability issues?\n\nLoad balancer\nHorizontal scaling\nCaching\nDatabase sharding\n\nDiscuss potential solutions and trade-offs.  Everything is a trade-off.  Address bottlenecks using principles of scalable system design.\nBack-of-the-envelope calculations\nYou might be asked to do some estimates by hand.  Refer to the Appendix for the following resources:\n\nUse back of the envelope calculations\nPowers of two table\nLatency numbers every programmer should know\n\nSource(s) and further reading\nCheck out the following links to get a better idea of what to expect:\n\nHow to ace a systems design interview\nThe system design interview\nIntro to Architecture and Systems Design Interviews\n\nSystem design interview questions with solutions\n\nCommon system design interview questions with sample discussions, code, and diagrams.\nSolutions linked to content in the solutions/ folder.\n\n\n\n\nQuestion\n\n\n\n\n\nDesign Pastebin.com (or Bit.ly)\nSolution\n\n\nDesign the Twitter timeline and search (or Facebook feed and search)\nSolution\n\n\nDesign a web crawler\nSolution\n\n\nDesign Mint.com\nSolution\n\n\nDesign the data structures for a social network\nSolution\n\n\nDesign a key-value store for a search engine\nSolution\n\n\nDesign Amazon's sales ranking by category feature\nSolution\n\n\nDesign a system that scales to millions of users on AWS\nSolution\n\n\nAdd a system design question\nContribute\n\n\n\nDesign Pastebin.com (or Bit.ly)\nView exercise and solution\n\nDesign the Twitter timeline and search (or Facebook feed and search)\nView exercise and solution\n\nDesign a web crawler\nView exercise and solution\n\nDesign Mint.com\nView exercise and solution\n\nDesign the data structures for a social network\nView exercise and solution\n\nDesign a key-value store for a search engine\nView exercise and solution\n\nDesign Amazon's sales ranking by category feature\nView exercise and solution\n\nDesign a system that scales to millions of users on AWS\nView exercise and solution\n\nObject-oriented design interview questions with solutions\n\nCommon object-oriented design interview questions with sample discussions, code, and diagrams.\nSolutions linked to content in the solutions/ folder.\n\n\nNote: This section is under development\n\n\n\n\nQuestion\n\n\n\n\n\nDesign a hash map\nSolution\n\n\nDesign a least recently used cache\nSolution\n\n\nDesign a call center\nSolution\n\n\nDesign a deck of cards\nSolution\n\n\nDesign a parking lot\nSolution\n\n\nDesign a chat server\nSolution\n\n\nDesign a circular array\nContribute\n\n\nAdd an object-oriented design question\nContribute\n\n\n\nSystem design topics: start here\nNew to system design?\nFirst, you'll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.\nStep 1: Review the scalability video lecture\nScalability Lecture at Harvard\n\nTopics covered:\n\nVertical scaling\nHorizontal scaling\nCaching\nLoad balancing\nDatabase replication\nDatabase partitioning\n\n\n\nStep 2: Review the scalability article\nScalability\n\nTopics covered:\n\nClones\nDatabases\nCaches\nAsynchronism\n\n\n\nNext steps\nNext, we'll look at high-level trade-offs:\n\nPerformance vs scalability\nLatency vs throughput\nAvailability vs consistency\n\nKeep in mind that everything is a trade-off.\nThen we'll dive into more specific topics such as DNS, CDNs, and load balancers.\nPerformance vs scalability\nA service is scalable if it results in increased performance in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.1\nAnother way to look at performance vs scalability:\n\nIf you have a performance problem, your system is slow for a single user.\nIf you have a scalability problem, your system is fast for a single user but slow under heavy load.\n\nSource(s) and further reading\n\nA word on scalability\nScalability, availability, stability, patterns\n\nLatency vs throughput\nLatency is the time to perform some action or to produce some result.\nThroughput is the number of such actions or results per unit of time.\nGenerally, you should aim for maximal throughput with acceptable latency.\nSource(s) and further reading\n\nUnderstanding latency vs throughput\n\nAvailability vs consistency\nCAP theorem\n\n\n\nSource: CAP theorem revisited\n\nIn a distributed computer system, you can only support two of the following guarantees:\n\nConsistency - Every read receives the most recent write or an error\nAvailability - Every request receives a response, without guarantee that it contains the most recent version of the information\nPartition Tolerance - The system continues to operate despite arbitrary partitioning due to network failures\n\nNetworks aren't reliable, so you'll need to support partition tolerance.  You'll need to make a software tradeoff between consistency and availability.\nCP - consistency and partition tolerance\nWaiting for a response from the partitioned node might result in a timeout error.  CP is a good choice if your business needs require atomic reads and writes.\nAP - availability and partition tolerance\nResponses return the most recent version of the data available on a node, which might not be the latest.  Writes might take some time to propagate when the partition is resolved.\nAP is a good choice if the business needs allow for eventual consistency or when the system needs to continue working despite external errors.\nSource(s) and further reading\n\nCAP theorem revisited\nA plain english introduction to CAP theorem\nCAP FAQ\n\nConsistency patterns\nWith multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data.  Recall the definition of consistency from the CAP theorem - Every read receives the most recent write or an error.\nWeak consistency\nAfter a write, reads may or may not see it.  A best effort approach is taken.\nThis approach is seen in systems such as memcached.  Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games.  For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.\nEventual consistency\nAfter a write, reads will eventually see it (typically within milliseconds).  Data is replicated asynchronously.\nThis approach is seen in systems such as DNS and email.  Eventual consistency works well in highly available systems.\nStrong consistency\nAfter a write, reads will see it.  Data is replicated synchronously.\nThis approach is seen in file systems and RDBMSes.  Strong consistency works well in systems that need transactions.\nSource(s) and further reading\n\nTransactions across data centers\n\nAvailability patterns\nThere are two main patterns to support high availability: fail-over and replication.\nFail-over\nActive-passive\nWith active-passive fail-over, heartbeats are sent between the active and the passive server on standby.  If the heartbeat is interrupted, the passive server takes over the active's IP address and resumes service.\nThe length of downtime is determined by whether the passive server is already running in 'hot' standby or whether it needs to start up from 'cold' standby.  Only the active server handles traffic.\nActive-passive failover can also be referred to as master-slave failover.\nActive-active\nIn active-active, both servers are managing traffic, spreading the load between them.\nIf the servers are public-facing, the DNS would need to know about the public IPs of both servers.  If the servers are internal-facing, application logic would need to know about both servers.\nActive-active failover can also be referred to as master-master failover.\nDisadvantage(s): failover\n\nFail-over adds more hardware and additional complexity.\nThere is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.\n\nReplication\nMaster-slave and master-master\nThis topic is further discussed in the Database section:\n\nMaster-slave replication\nMaster-master replication\n\nAvailability in numbers\nAvailability is often quantified by uptime (or downtime) as a percentage of time the service is available.  Availability is generally measured in number of 9s--a service with 99.99% availability is described as having four 9s.\n99.9% availability - three 9s\n\n\n\nDuration\nAcceptable downtime\n\n\n\n\nDowntime per year\n8h 45min 57s\n\n\nDowntime per month\n43m 49.7s\n\n\nDowntime per week\n10m 4.8s\n\n\nDowntime per day\n1m 26.4s\n\n\n\n99.99% availability - four 9s\n\n\n\nDuration\nAcceptable downtime\n\n\n\n\nDowntime per year\n52min 35.7s\n\n\nDowntime per month\n4m 23s\n\n\nDowntime per week\n1m 5s\n\n\nDowntime per day\n8.6s\n\n\n\nAvailability in parallel vs in sequence\nIf a service consists of multiple components prone to failure, the service's overall availability depends on whether the components are in sequence or in parallel.\nIn sequence\nOverall availability decreases when two components with availability < 100% are in sequence:\nAvailability (Total) = Availability (Foo) * Availability (Bar)\n\nIf both Foo and Bar each had 99.9% availability, their total availability in sequence would be 99.8%.\nIn parallel\nOverall availability increases when two components with availability < 100% are in parallel:\nAvailability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))\n\nIf both Foo and Bar each had 99.9% availability, their total availability in parallel would be 99.9999%.\nDomain name system\n\n\n\nSource: DNS security presentation\n\nA Domain Name System (DNS) translates a domain name such as www.example.com to an IP address.\nDNS is hierarchical, with a few authoritative servers at the top level.  Your router or ISP provides information about which DNS server(s) to contact when doing a lookup.  Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays.  DNS results can also be cached by your browser or OS for a certain period of time, determined by the time to live (TTL).\n\nNS record (name server) - Specifies the DNS servers for your domain/subdomain.\nMX record (mail exchange) - Specifies the mail servers for accepting messages.\nA record (address) - Points a name to an IP address.\nCNAME (canonical) - Points a name to another name or CNAME (example.com to www.example.com) or to an A record.\n\nServices such as CloudFlare and Route 53 provide managed DNS services.  Some DNS services can route traffic through various methods:\n\nWeighted round robin\n\nPrevent traffic from going to servers under maintenance\nBalance between varying cluster sizes\nA/B testing\n\n\nLatency-based\nGeolocation-based\n\nDisadvantage(s): DNS\n\nAccessing a DNS server introduces a slight delay, although mitigated by caching described above.\nDNS server management could be complex and is generally managed by governments, ISPs, and large companies.\nDNS services have recently come under DDoS attack, preventing users from accessing websites such as Twitter without knowing Twitter's IP address(es).\n\nSource(s) and further reading\n\nDNS architecture\nWikipedia\nDNS articles\n\nContent delivery network\n\n\n\nSource: Why use a CDN\n\nA content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user.  Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content.  The site's DNS resolution will tell clients which server to contact.\nServing content from CDNs can significantly improve performance in two ways:\n\nUsers receive content at data centers close to them\nYour servers do not have to serve requests that the CDN fulfills\n\nPush CDNs\nPush CDNs receive new content whenever changes occur on your server.  You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN.  You can configure when content expires and when it is updated.  Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.\nSites with a small amount of traffic or sites with content that isn't often updated work well with push CDNs.  Content is placed on the CDNs once, instead of being re-pulled at regular intervals.\nPull CDNs\nPull CDNs grab new content from your server when the first user requests the content.  You leave the content on your server and rewrite URLs to point to the CDN.  This results in a slower request until the content is cached on the CDN.\nA time-to-live (TTL) determines how long content is cached.  Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.\nSites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.\nDisadvantage(s): CDN\n\nCDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.\nContent might be stale if it is updated before the TTL expires it.\nCDNs require changing URLs for static content to point to the CDN.\n\nSource(s) and further reading\n\nGlobally distributed content delivery\nThe differences between push and pull CDNs\nWikipedia\n\nLoad balancer\n\n\n\nSource: Scalable system design patterns\n\nLoad balancers distribute incoming client requests to computing resources such as application servers and databases.  In each case, the load balancer returns the response from the computing resource to the appropriate client.  Load balancers are effective at:\n\nPreventing requests from going to unhealthy servers\nPreventing overloading resources\nHelping eliminate single points of failure\n\nLoad balancers can be implemented with hardware (expensive) or with software such as HAProxy.\nAdditional benefits include:\n\nSSL termination - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations\n\nRemoves the need to install X.509 certificates on each server\n\n\nSession persistence - Issue cookies and route a specific client's requests to same instance if the web apps do not keep track of sessions\n\nTo protect against failures, it's common to set up multiple load balancers, either in active-passive or active-active mode.\nLoad balancers can route traffic based on various metrics, including:\n\nRandom\nLeast loaded\nSession/cookies\nRound robin or weighted round robin\nLayer 4\nLayer 7\n\nLayer 4 load balancing\nLayer 4 load balancers look at info at the transport layer to decide how to distribute requests.  Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet.  Layer 4 load balancers forward network packets to and from the upstream server, performing Network Address Translation (NAT).\nLayer 7 load balancing\nLayer 7 load balancers look at the application layer to decide how to distribute requests.  This can involve contents of the header, message, and cookies.  Layer 7 load balancers terminates network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server.  For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.\nAt the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.\nHorizontal scaling\nLoad balancers can also help with horizontal scaling, improving performance and availability.  Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called Vertical Scaling.  It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.\nDisadvantage(s): horizontal scaling\n\nScaling horizontally introduces complexity and involves cloning servers\n\nServers should be stateless: they should not contain any user-related data like sessions or profile pictures\nSessions can be stored in a centralized data store such as a database (SQL, NoSQL) or a persistent cache (Redis, Memcached)\n\n\nDownstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out\n\nDisadvantage(s): load balancer\n\nThe load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.\nIntroducing a load balancer to help eliminate single points of failure results in increased complexity.\nA single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.\n\nSource(s) and further reading\n\nNGINX architecture\nHAProxy architecture guide\nScalability\nWikipedia\nLayer 4 load balancing\nLayer 7 load balancing\nELB listener config\n\nReverse proxy (web server)\n\n\n\nSource: Wikipedia\n\n\nA reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public.  Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server's response to the client.\nAdditional benefits include:\n\nIncreased security - Hide information about backend servers, blacklist IPs, limit number of connections per client\nIncreased scalability and flexibility - Clients only see the reverse proxy's IP, allowing you to scale servers or change their configuration\nSSL termination - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations\n\nRemoves the need to install X.509 certificates on each server\n\n\nCompression - Compress server responses\nCaching - Return the response for cached requests\nStatic content - Serve static content directly\n\nHTML/CSS/JS\nPhotos\nVideos\nEtc\n\n\n\nLoad balancer vs reverse proxy\n\nDeploying a load balancer is useful when you have multiple servers.  Often, load balancers  route traffic to a set of servers serving the same function.\nReverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.\nSolutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.\n\nDisadvantage(s): reverse proxy\n\nIntroducing a reverse proxy results in increased complexity.\nA single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a failover) further increases complexity.\n\nSource(s) and further reading\n\nReverse proxy vs load balancer\nNGINX architecture\nHAProxy architecture guide\nWikipedia\n\nApplication layer\n\n\n\nSource: Intro to architecting systems for scale\n\nSeparating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently.  Adding a new API results in adding application servers without necessarily adding additional web servers.  The single responsibility principle advocates for small and autonomous services that work together.  Small teams with small services can plan more aggressively for rapid growth.\nWorkers in the application layer also help enable asynchronism.\nMicroservices\nRelated to this discussion are microservices, which can be described as a suite of independently deployable, small, modular services.  Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. 1\nPinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.\nService Discovery\nSystems such as Consul, Etcd, and Zookeeper can help services find each other by keeping track of registered names, addresses, and ports.  Health checks help verify service integrity and are often done using an HTTP endpoint.  Both Consul and Etcd have a built in key-value store that can be useful for storing config values and other shared data.\nDisadvantage(s): application layer\n\nAdding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).\nMicroservices can add complexity in terms of deployments and operations.\n\nSource(s) and further reading\n\nIntro to architecting systems for scale\nCrack the system design interview\nService oriented architecture\nIntroduction to Zookeeper\nHere's what you need to know about building microservices\n\nDatabase\n\n\n\nSource: Scaling up to your first 10 million users\n\nRelational database management system (RDBMS)\nA relational database like SQL is a collection of data items organized in tables.\nACID is a set of properties of relational database transactions.\n\nAtomicity - Each transaction is all or nothing\nConsistency - Any transaction will bring the database from one valid state to another\nIsolation - Executing transactions concurrently has the same results as if the transactions were executed serially\nDurability - Once a transaction has been committed, it will remain so\n\nThere are many techniques to scale a relational database: master-slave replication, master-master replication, federation, sharding, denormalization, and SQL tuning.\nMaster-slave replication\nThe master serves reads and writes, replicating writes to one or more slaves, which serve only reads.  Slaves can also replicate to additional slaves in a tree-like fashion.  If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.\n\n\n\nSource: Scalability, availability, stability, patterns\n\nDisadvantage(s): master-slave replication\n\nAdditional logic is needed to promote a slave to a master.\nSee Disadvantage(s): replication for points related to both master-slave and master-master.\n\nMaster-master replication\nBoth masters serve reads and writes and coordinate with each other on writes.  If either master goes down, the system can continue to operate with both reads and writes.\n\n\n\nSource: Scalability, availability, stability, patterns\n\nDisadvantage(s): master-master replication\n\nYou'll need a load balancer or you'll need to make changes to your application logic to determine where to write.\nMost master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.\nConflict resolution comes more into play as more write nodes are added and as latency increases.\nSee Disadvantage(s): replication for points related to both master-slave and master-master.\n\nDisadvantage(s): replication\n\nThere is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.\nWrites are replayed to the read replicas.  If there are a lot of writes, the read replicas can get bogged down with replaying writes and can't do as many reads.\nThe more read slaves, the more you have to replicate, which leads to greater replication lag.\nOn some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.\nReplication adds more hardware and additional complexity.\n\nSource(s) and further reading: replication\n\nScalability, availability, stability, patterns\nMulti-master replication\n\nFederation\n\n\n\nSource: Scaling up to your first 10 million users\n\nFederation (or functional partitioning) splits up databases by function.  For example, instead of a single, monolithic database, you could have three databases: forums, users, and products, resulting in less read and write traffic to each database and therefore less replication lag.  Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality.  With no single central master serializing writes you can write in parallel, increasing throughput.\nDisadvantage(s): federation\n\nFederation is not effective if your schema requires huge functions or tables.\nYou'll need to update your application logic to determine which database to read and write.\nJoining data from two databases is more complex with a server link.\nFederation adds more hardware and additional complexity.\n\nSource(s) and further reading: federation\n\nScaling up to your first 10 million users\n\nSharding\n\n\n\nSource: Scalability, availability, stability, patterns\n\nSharding distributes data across different databases such that each database can only manage a subset of the data.  Taking a users database as an example, as the number of users increases, more shards are added to the cluster.\nSimilar to the advantages of federation, sharding results in less read and write traffic, less replication, and more cache hits.  Index size is also reduced, which generally improves performance with faster queries.  If one shard goes down, the other shards are still operational, although you'll want to add some form of replication to avoid data loss.  Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.\nCommon ways to shard a table of users is either through the user's last name initial or the user's geographic location.\nDisadvantage(s): sharding\n\nYou'll need to update your application logic to work with shards, which could result in complex SQL queries.\nData distribution can become lopsided in a shard.  For example, a set of power users on a shard could result in increased load to that shard compared to others.\n\nRebalancing adds additional complexity.  A sharding function based on consistent hashing can reduce the amount of transferred data.\n\n\nJoining data from multiple shards is more complex.\nSharding adds more hardware and additional complexity.\n\nSource(s) and further reading: sharding\n\nThe coming of the shard\nShard database architecture\nConsistent hashing\n\nDenormalization\nDenormalization attempts to improve read performance at the expense of some write performance.  Redundant copies of the data are written in multiple tables to avoid expensive joins.  Some RDBMS such as PostgreSQL and Oracle support materialized views which handle the work of storing redundant information and keeping redundant copies consistent.\nOnce data becomes distributed with techniques such as federation and sharding, managing joins across data centers further increases complexity.  Denormalization might circumvent the need for such complex joins.\nIn most systems, reads can heavily outnumber writes 100:1 or even 1000:1.  A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.\nDisadvantage(s): denormalization\n\nData is duplicated.\nConstraints can help redundant copies of information stay in sync, which increases complexity of the database design.\nA denormalized database under heavy write load might perform worse than its normalized counterpart.\n\nSource(s) and further reading: denormalization\n\nDenormalization\n\nSQL tuning\nSQL tuning is a broad topic and many books have been written as reference.\nIt's important to benchmark and profile to simulate and uncover bottlenecks.\n\nBenchmark - Simulate high-load situations with tools such as ab.\nProfile - Enable tools such as the slow query log to help track performance issues.\n\nBenchmarking and profiling might point you to the following optimizations.\nTighten up the schema\n\nMySQL dumps to disk in contiguous blocks for fast access.\nUse CHAR instead of VARCHAR for fixed-length fields.\n\nCHAR effectively allows for fast, random access, whereas with VARCHAR, you must find the end of a string before moving onto the next one.\n\n\nUse TEXT for large blocks of text such as blog posts.  TEXT also allows for boolean searches.  Using a TEXT field results in storing a pointer on disk that is used to locate the text block.\nUse INT for larger numbers up to 2^32 or 4 billion.\nUse DECIMAL for currency to avoid floating point representation errors.\nAvoid storing large BLOBS, store the location of where to get the object instead.\nVARCHAR(255) is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.\nSet the NOT NULL constraint where applicable to improve search performance.\n\nUse good indices\n\nColumns that you are querying (SELECT, GROUP BY, ORDER BY, JOIN) could be faster with indices.\nIndices are usually represented as self-balancing B-tree that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.\nPlacing an index can keep the data in memory, requiring more space.\nWrites could also be slower since the index also needs to be updated.\nWhen loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.\n\nAvoid expensive joins\n\nDenormalize where performance demands it.\n\nPartition tables\n\nBreak up a table by putting hot spots in a separate table to help keep it in memory.\n\nTune the query cache\n\nIn some cases, the query cache could lead to performance issues.\n\nSource(s) and further reading: SQL tuning\n\nTips for optimizing MySQL queries\nIs there a good reason i see VARCHAR(255) used so often?\nHow do null values affect performance?\nSlow query log\n\nNoSQL\nNoSQL is a collection of data items represented in a key-value store, document store, wide column store, or a graph database.  Data is denormalized, and joins are generally done in the application code.  Most NoSQL stores lack true ACID transactions and favor eventual consistency.\nBASE is often used to describe the properties of NoSQL databases.  In comparison with the CAP Theorem, BASE chooses availability over consistency.\n\nBasically available - the system guarantees availability.\nSoft state - the state of the system may change over time, even without input.\nEventual consistency - the system will become consistent over a period of time, given that the system doesn't receive input during that period.\n\nIn addition to choosing between SQL or NoSQL, it is helpful to understand which type of NoSQL database best fits your use case(s).  We'll review key-value stores, document stores, wide column stores, and graph databases in the next section.\nKey-value store\n\nAbstraction: hash table\n\nA key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD.  Data stores can maintain keys in lexicographic order, allowing efficient retrieval of key ranges.  Key-value stores can allow for storing of metadata with a value.\nKey-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer.  Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.\nA key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.\nSource(s) and further reading: key-value store\n\nKey-value database\nDisadvantages of key-value stores\nRedis architecture\nMemcached architecture\n\nDocument store\n\nAbstraction: key-value store with documents stored as values\n\nA document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object.  Document stores provide APIs or a query language to query based on the internal structure of the document itself.  Note, many key-value stores include features for working with a value's metadata, blurring the lines between these two storage types.\nBased on the underlying implementation, documents are organized by collections, tags, metadata, or directories.  Although documents can be organized or grouped together, documents may have fields that are completely different from each other.\nSome document stores like MongoDB and CouchDB also provide a SQL-like language to perform complex queries.  DynamoDB supports both key-values and documents.\nDocument stores provide high flexibility and are often used for working with occasionally changing data.\nSource(s) and further reading: document store\n\nDocument-oriented database\nMongoDB architecture\nCouchDB architecture\nElasticsearch architecture\n\nWide column store\n\n\n\nSource: SQL & NoSQL, a brief history\n\n\nAbstraction: nested map ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>\n\nA wide column store's basic unit of data is a column (name/value pair).  A column can be grouped in column families (analogous to a SQL table).  Super column families further group column families.  You can access each column independently with a row key, and columns with the same row key form a row.  Each value contains a timestamp for versioning and for conflict resolution.\nGoogle introduced Bigtable as the first wide column store, which influenced the open-source HBase often-used in the Hadoop ecosystem, and Cassandra from Facebook.  Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.\nWide column stores offer high availability and high scalability.  They are often used for very large data sets.\nSource(s) and further reading: wide column store\n\nSQL & NoSQL, a brief history\nBigtable architecture\nHBase architecture\nCassandra architecture\n\nGraph database\n\n\n\nSource: Graph database\n\n\nAbstraction: graph\n\nIn a graph database, each node is a record and each arc is a relationship between two nodes.  Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.\nGraphs databases offer high performance for data models with complex relationships, such as a social network.  They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources.  Many graphs can only be accessed with REST APIs.\nSource(s) and further reading: graph\n\nGraph database\nNeo4j\nFlockDB\n\nSource(s) and further reading: NoSQL\n\nExplanation of base terminology\nNoSQL databases a survey and decision guidance\nScalability\nIntroduction to NoSQL\nNoSQL patterns\n\nSQL or NoSQL\n\n\n\nSource: Transitioning from RDBMS to NoSQL\n\nReasons for SQL:\n\nStructured data\nStrict schema\nRelational data\nNeed for complex joins\nTransactions\nClear patterns for scaling\nMore established: developers, community, code, tools, etc\nLookups by index are very fast\n\nReasons for NoSQL:\n\nSemi-structured data\nDynamic or flexible schema\nNon-relational data\nNo need for complex joins\nStore many TB (or PB) of data\nVery data intensive workload\nVery high throughput for IOPS\n\nSample data well-suited for NoSQL:\n\nRapid ingest of clickstream and log data\nLeaderboard or scoring data\nTemporary data, such as a shopping cart\nFrequently accessed ('hot') tables\nMetadata/lookup tables\n\nSource(s) and further reading: SQL or NoSQL\n\nScaling up to your first 10 million users\nSQL vs NoSQL differences\n\nCache\n\n\n\nSource: Scalable system design patterns\n\nCaching improves page load times and can reduce the load on your servers and databases.  In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.\nDatabases often benefit from a uniform distribution of reads and writes across its partitions.  Popular items can skew the distribution, causing bottlenecks.  Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.\nClient caching\nCaches can be located on the client side (OS or browser), server side, or in a distinct cache layer.\nCDN caching\nCDNs are considered a type of cache.\nWeb server caching\nReverse proxies and caches such as Varnish can serve static and dynamic content directly.  Web servers can also cache requests, returning responses without having to contact application servers.\nDatabase caching\nYour database usually includes some level of caching in a default configuration, optimized for a generic use case.  Tweaking these settings for specific usage patterns can further boost performance.\nApplication caching\nIn-memory caches such as Memcached and Redis are key-value stores between your application and your data storage.  Since the data is held in RAM, it is much faster than typical databases where data is stored on disk.  RAM is more limited than disk, so cache invalidation algorithms such as least recently used (LRU) can help invalidate 'cold' entries and keep 'hot' data in RAM.\nRedis has the following additional features:\n\nPersistence option\nBuilt-in data structures such as sorted sets and lists\n\nThere are multiple levels you can cache that fall into two general categories: database queries and objects:\n\nRow level\nQuery-level\nFully-formed serializable objects\nFully-rendered HTML\n\nGenerally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.\nCaching at the database query level\nWhenever you query the database, hash the query as a key and store the result to the cache.  This approach suffers from expiration issues:\n\nHard to delete a cached result with complex queries\nIf one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell\n\nCaching at the object level\nSee your data as an object, similar to what you do with your application code.  Have your application assemble the dataset from the database into a class instance or a data structure(s):\n\nRemove the object from cache if its underlying data has changed\nAllows for asynchronous processing: workers assemble objects by consuming the latest cached object\n\nSuggestions of what to cache:\n\nUser sessions\nFully rendered web pages\nActivity streams\nUser graph data\n\nWhen to update the cache\nSince you can only store a limited amount of data in cache, you'll need to determine which cache update strategy works best for your use case.\nCache-aside\n\n\n\nSource: From cache to in-memory data grid\n\nThe application is responsible for reading and writing from storage.  The cache does not interact with storage directly.  The application does the following:\n\nLook for entry in cache, resulting in a cache miss\nLoad entry from the database\nAdd entry to cache\nReturn entry\n\ndef get_user(self, user_id):\n    user = cache.get(\"user.{0}\", user_id)\n    if user is None:\n        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)\n        if user is not None:\n            key = \"user.{0}\".format(user_id)\n            cache.set(key, json.dumps(user))\n    return user\nMemcached is generally used in this manner.\nSubsequent reads of data added to cache are fast.  Cache-aside is also referred to as lazy loading.  Only requested data is cached, which avoids filling up the cache with data that isn't requested.\nDisadvantage(s): cache-aside\n\nEach cache miss results in three trips, which can cause a noticeable delay.\nData can become stale if it is updated in the database.  This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.\nWhen a node fails, it is replaced by a new, empty node, increasing latency.\n\nWrite-through\n\n\n\nSource: Scalability, availability, stability, patterns\n\nThe application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:\n\nApplication adds/updates entry in cache\nCache synchronously writes entry to data store\nReturn\n\nApplication code:\nset_user(12345, {\"foo\":\"bar\"})\nCache code:\ndef set_user(user_id, values):\n    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)\n    cache.set(user_id, user)\nWrite-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast.  Users are generally more tolerant of latency when updating data than reading data.  Data in the cache is not stale.\nDisadvantage(s): write through\n\nWhen a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database.  Cache-aside in conjunction with write through can mitigate this issue.\nMost data written might never be read, which can be minimized with a TTL.\n\nWrite-behind (write-back)\n\n\n\nSource: Scalability, availability, stability, patterns\n\nIn write-behind, the application does the following:\n\nAdd/update entry in cache\nAsynchronously write entry to the data store, improving write performance\n\nDisadvantage(s): write-behind\n\nThere could be data loss if the cache goes down prior to its contents hitting the data store.\nIt is more complex to implement write-behind than it is to implement cache-aside or write-through.\n\nRefresh-ahead\n\n\n\nSource: From cache to in-memory data grid\n\nYou can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.\nRefresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.\nDisadvantage(s): refresh-ahead\n\nNot accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.\n\nDisadvantage(s): cache\n\nNeed to maintain consistency between caches and the source of truth such as the database through cache invalidation.\nCache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.\nNeed to make application changes such as adding Redis or memcached.\n\nSource(s) and further reading\n\nFrom cache to in-memory data grid\nScalable system design patterns\nIntroduction to architecting systems for scale\nScalability, availability, stability, patterns\nScalability\nAWS ElastiCache strategies\nWikipedia\n\nAsynchronism\n\n\n\nSource: Intro to architecting systems for scale\n\nAsynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line.  They can also help by doing time-consuming work in advance, such as periodic aggregation of data.\nMessage queues\nMessage queues receive, hold, and deliver messages.  If an operation is too slow to perform inline, you can use a message queue with the following workflow:\n\nAn application publishes a job to the queue, then notifies the user of job status\nA worker picks up the job from the queue, processes it, then signals the job is complete\n\nThe user is not blocked and the job is processed in the background.  During this time, the client might optionally do a small amount of processing to make it seem like the task has completed.  For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.\nRedis is useful as a simple message broker but messages can be lost.\nRabbitMQ is popular but requires you to adapt to the 'AMQP' protocol and manage your own nodes.\nAmazon SQS is hosted but can have high latency and has the possibility of messages being delivered twice.\nTask queues\nTasks queues receive tasks and their related data, runs them, then delivers their results.  They can support scheduling and can be used to run computationally-intensive jobs in the background.\nCelery has support for scheduling and primarily has python support.\nBack pressure\nIf queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance.  Back pressure can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue.  Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later.  Clients can retry the request at a later time, perhaps with exponential backoff.\nDisadvantage(s): asynchronism\n\nUse cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.\n\nSource(s) and further reading\n\nIt's all a numbers game\nApplying back pressure when overloaded\nLittle's law\nWhat is the difference between a message queue and a task queue?\n\nCommunication\n\n\n\nSource: OSI 7 layer model\n\nHypertext transfer protocol (HTTP)\nHTTP is a method for encoding and transporting data between a client and a server.  It is a request/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request.  HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.\nA basic HTTP request consists of a verb (method) and a resource (endpoint).  Below are common HTTP verbs:\n\n\n\nVerb\nDescription\nIdempotent*\nSafe\nCacheable\n\n\n\n\nGET\nReads a resource\nYes\nYes\nYes\n\n\nPOST\nCreates a resource or trigger a process that handles data\nNo\nNo\nYes if response contains freshness info\n\n\nPUT\nCreates or replace a resource\nYes\nNo\nNo\n\n\nPATCH\nPartially updates a resource\nNo\nNo\nYes if response contains freshness info\n\n\nDELETE\nDeletes a resource\nYes\nNo\nNo\n\n\n\n*Can be called many times without different outcomes.\nHTTP is an application layer protocol relying on lower-level protocols such as TCP and UDP.\nSource(s) and further reading: HTTP\n\nWhat is HTTP?\nDifference between HTTP and TCP\nDifference between PUT and PATCH\n\nTransmission control protocol (TCP)\n\n\n\nSource: How to make a multiplayer game\n\nTCP is a connection-oriented protocol over an IP network.  Connection is established and terminated using a handshake.  All packets sent are guaranteed to reach the destination in the original order and without corruption through:\n\nSequence numbers and checksum fields for each packet\nAcknowledgement packets and automatic retransmission\n\nIf the sender does not receive a correct response, it will resend the packets.  If there are multiple timeouts, the connection is dropped.  TCP also implements flow control and congestion control.  These guarantees cause delays and generally result in less efficient transmission than UDP.\nTo ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage.  It can be expensive to have a large number of open connections between web server threads and say, a memcached server.  Connection pooling can help in addition to switching to UDP where applicable.\nTCP is useful for applications that require high reliability but are less time critical.  Some examples include web servers, database info, SMTP, FTP, and SSH.\nUse TCP over UDP when:\n\nYou need all of the data to arrive intact\nYou want to automatically make a best estimate use of the network throughput\n\nUser datagram protocol (UDP)\n\n\n\nSource: How to make a multiplayer game\n\nUDP is connectionless.  Datagrams (analogous to packets) are guaranteed only at the datagram level.  Datagrams might reach their destination out of order or not at all.  UDP does not support congestion control.  Without the guarantees that TCP support, UDP is generally more efficient.\nUDP can broadcast, sending datagrams to all devices on the subnet.  This is useful with DHCP because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.\nUDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.\nUse UDP over TCP when:\n\nYou need the lowest latency\nLate data is worse than loss of data\nYou want to implement your own error correction\n\nSource(s) and further reading: TCP and UDP\n\nNetworking for game programming\nKey differences between TCP and UDP protocols\nDifference between TCP and UDP\nTransmission control protocol\nUser datagram protocol\nScaling memcache at Facebook\n\nRemote procedure call (RPC)\n\n\n\nSource: Crack the system design interview\n\nIn an RPC, a client causes a procedure to execute on a different address space, usually a remote server.  The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program.  Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls.  Popular RPC frameworks include Protobuf, Thrift, and Avro.\nRPC is a request-response protocol:\n\nClient program - Calls the client stub procedure.  The parameters are pushed onto the stack like a local procedure call.\nClient stub procedure - Marshals (packs) procedure id and arguments into a request message.\nClient communication module - OS sends the message from the client to the server.\nServer communication module - OS passes the incoming packets to the server stub procedure.\nServer stub procedure -  Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.\nThe server response repeats the steps above in reverse order.\n\nSample RPC calls:\nGET /someoperation?data=anId\n\nPOST /anotheroperation\n{\n  \"data\":\"anId\";\n  \"anotherdata\": \"another value\"\n}\n\nRPC is focused on exposing behaviors.  RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.\nChoose a native library (aka SDK) when:\n\nYou know your target platform.\nYou want to control how your \"logic\" is accessed.\nYou want to control how error control happens off your library.\nPerformance and end user experience is your primary concern.\n\nHTTP APIs following REST tend to be used more often for public APIs.\nDisadvantage(s): RPC\n\nRPC clients become tightly coupled to the service implementation.\nA new API must be defined for every new operation or use case.\nIt can be difficult to debug RPC.\nYou might not be able to leverage existing technologies out of the box.  For example, it might require additional effort to ensure RPC calls are properly cached on caching servers such as Squid.\n\nRepresentational state transfer (REST)\nREST is an architectural style enforcing a client/server model where the client acts on a set of resources managed by the server.  The server provides a representation of resources and actions that can either manipulate or get a new representation of resources.  All communication must be stateless and cacheable.\nThere are four qualities of a RESTful interface:\n\nIdentify resources (URI in HTTP) - use the same URI regardless of any operation.\nChange with representations (Verbs in HTTP) - use verbs, headers, and body.\nSelf-descriptive error message (status response in HTTP) - Use status codes, don't reinvent the wheel.\nHATEOAS (HTML interface for HTTP) - your web service should be fully accessible in a browser.\n\nSample REST calls:\nGET /someresources/anId\n\nPUT /someresources/anId\n{\"anotherdata\": \"another value\"}\n\nREST is focused on exposing data.  It minimizes the coupling between client/server and is often used for public HTTP APIs.  REST uses a more generic and uniform method of exposing resources through URIs, representation through headers, and actions through verbs such as GET, POST, PUT, DELETE, and PATCH.  Being stateless, REST is great for horizontal scaling and partitioning.\nDisadvantage(s): REST\n\nWith REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy.  For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path.  With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.\nREST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn't fit your use case.  For example, moving expired documents to the archive folder might not cleanly fit within these verbs.\nFetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.\nOver time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.\n\nRPC and REST calls comparison\n\n\n\nOperation\nRPC\nREST\n\n\n\n\nSignup\nPOST /signup\nPOST /persons\n\n\nResign\nPOST /resign{\"personid\": \"1234\"}\nDELETE /persons/1234\n\n\nRead a person\nGET /readPerson?personid=1234\nGET /persons/1234\n\n\nRead a person\u2019s items list\nGET /readUsersItemsList?personid=1234\nGET /persons/1234/items\n\n\nAdd an item to a person\u2019s items\nPOST /addItemToUsersItemsList{\"personid\": \"1234\";\"itemid\": \"456\"}\nPOST /persons/1234/items{\"itemid\": \"456\"}\n\n\nUpdate an item\nPOST /modifyItem{\"itemid\": \"456\";\"key\": \"value\"}\nPUT /items/456{\"key\": \"value\"}\n\n\nDelete an item\nPOST /removeItem{\"itemid\": \"456\"}\nDELETE /items/456\n\n\n\n\nSource: Do you really know why you prefer REST over RPC\n\nSource(s) and further reading: REST and RPC\n\nDo you really know why you prefer REST over RPC\nWhen are RPC-ish approaches more appropriate than REST?\nREST vs JSON-RPC\nDebunking the myths of RPC and REST\nWhat are the drawbacks of using REST\nCrack the system design interview\nThrift\nWhy REST for internal use and not RPC\n\nSecurity\nThis section could use some updates.  Consider contributing!\nSecurity is a broad topic.  Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won't need to know more than the basics:\n\nEncrypt in transit and at rest.\nSanitize all user inputs or any input parameters exposed to user to prevent XSS and SQL injection.\nUse parameterized queries to prevent SQL injection.\nUse the principle of least privilege.\n\nSource(s) and further reading\n\nAPI security checklist\nSecurity guide for developers\nOWASP top ten\n\nAppendix\nYou'll sometimes be asked to do 'back-of-the-envelope' estimates.  For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take.  The Powers of two table and Latency numbers every programmer should know are handy references.\nPowers of two table\nPower           Exact Value         Approx Value        Bytes\n---------------------------------------------------------------\n7                             128\n8                             256\n10                           1024   1 thousand           1 KB\n16                         65,536                       64 KB\n20                      1,048,576   1 million            1 MB\n30                  1,073,741,824   1 billion            1 GB\n32                  4,294,967,296                        4 GB\n40              1,099,511,627,776   1 trillion           1 TB\n\nSource(s) and further reading\n\nPowers of two\n\nLatency numbers every programmer should know\nLatency Comparison Numbers\n--------------------------\nL1 cache reference                           0.5 ns\nBranch mispredict                            5   ns\nL2 cache reference                           7   ns                      14x L1 cache\nMutex lock/unlock                           25   ns\nMain memory reference                      100   ns                      20x L2 cache, 200x L1 cache\nCompress 1K bytes with Zippy            10,000   ns       10 us\nSend 1 KB bytes over 1 Gbps network     10,000   ns       10 us\nRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD\nRead 1 MB sequentially from memory     250,000   ns      250 us\nRound trip within same datacenter      500,000   ns      500 us\nRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory\nDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\nRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD\nRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD\nSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms\n\nNotes\n-----\n1 ns = 10^-9 seconds\n1 us = 10^-6 seconds = 1,000 ns\n1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns\n\nHandy metrics based on numbers above:\n\nRead sequentially from disk at 30 MB/s\nRead sequentially from 1 Gbps Ethernet at 100 MB/s\nRead sequentially from SSD at 1 GB/s\nRead sequentially from main memory at 4 GB/s\n6-7 world-wide round trips per second\n2,000 round trips per second within a data center\n\nLatency numbers visualized\n\nSource(s) and further reading\n\nLatency numbers every programmer should know - 1\nLatency numbers every programmer should know - 2\nDesigns, lessons, and advice from building large distributed systems\nSoftware Engineering Advice from Building Large-Scale Distributed Systems\n\nAdditional system design interview questions\n\nCommon system design interview questions, with links to resources on how to solve each.\n\n\n\n\nQuestion\nReference(s)\n\n\n\n\nDesign a file sync service like Dropbox\nyoutube.com\n\n\nDesign a search engine like Google\nqueue.acm.orgstackexchange.comardendertat.comstanford.edu\n\n\nDesign a scalable web crawler like Google\nquora.com\n\n\nDesign Google docs\ncode.google.comneil.fraser.name\n\n\nDesign a key-value store like Redis\nslideshare.net\n\n\nDesign a cache system like Memcached\nslideshare.net\n\n\nDesign a recommendation system like Amazon's\nhulu.comijcai13.org\n\n\nDesign a tinyurl system like Bitly\nn00tc0d3r.blogspot.com\n\n\nDesign a chat app like WhatsApp\nhighscalability.com\n\n\nDesign a picture sharing system like Instagram\nhighscalability.comhighscalability.com\n\n\nDesign the Facebook news feed function\nquora.comquora.comslideshare.net\n\n\nDesign the Facebook timeline function\nfacebook.comhighscalability.com\n\n\nDesign the Facebook chat function\nerlang-factory.comfacebook.com\n\n\nDesign a graph search function like Facebook's\nfacebook.comfacebook.comfacebook.com\n\n\nDesign a content delivery network like CloudFlare\nfigshare.com\n\n\nDesign a trending topic system like Twitter's\nmichael-noll.comsnikolov .wordpress.com\n\n\nDesign a random ID generation system\nblog.twitter.comgithub.com\n\n\nReturn the top k requests during a time interval\ncs.ucsb.eduwpi.edu\n\n\nDesign a system that serves data from multiple data centers\nhighscalability.com\n\n\nDesign an online multiplayer card game\nindieflashblog.combuildnewgames.com\n\n\nDesign a garbage collection system\nstuffwithstuff.comwashington.edu\n\n\nDesign an API rate limiter\nhttps://stripe.com/blog/\n\n\nAdd a system design question\nContribute\n\n\n\nReal world architectures\n\nArticles on how real world systems are designed.\n\n\n\n\nSource: Twitter timelines at scale\n\nDon't focus on nitty gritty details for the following articles, instead:\n\nIdentify shared principles, common technologies, and patterns within these articles\nStudy what problems are solved by each component, where it works, where it doesn't\nReview the lessons learned\n\n\n\n\nType\nSystem\nReference(s)\n\n\n\n\nData processing\nMapReduce - Distributed data processing from Google\nresearch.google.com\n\n\nData processing\nSpark - Distributed data processing from Databricks\nslideshare.net\n\n\nData processing\nStorm - Distributed data processing from Twitter\nslideshare.net\n\n\n\n\n\n\n\nData store\nBigtable - Distributed column-oriented database from Google\nharvard.edu\n\n\nData store\nHBase - Open source implementation of Bigtable\nslideshare.net\n\n\nData store\nCassandra - Distributed column-oriented database from Facebook\nslideshare.net\n\n\nData store\nDynamoDB - Document-oriented database from Amazon\nharvard.edu\n\n\nData store\nMongoDB - Document-oriented database\nslideshare.net\n\n\nData store\nSpanner - Globally-distributed database from Google\nresearch.google.com\n\n\nData store\nMemcached - Distributed memory caching system\nslideshare.net\n\n\nData store\nRedis - Distributed memory caching system with persistence and value types\nslideshare.net\n\n\n\n\n\n\n\nFile system\nGoogle File System (GFS) - Distributed file system\nresearch.google.com\n\n\nFile system\nHadoop File System (HDFS) - Open source implementation of GFS\napache.org\n\n\n\n\n\n\n\nMisc\nChubby - Lock service for loosely-coupled distributed systems from Google\nresearch.google.com\n\n\nMisc\nDapper - Distributed systems tracing infrastructure\nresearch.google.com\n\n\nMisc\nKafka - Pub/sub message queue from LinkedIn\nslideshare.net\n\n\nMisc\nZookeeper - Centralized infrastructure and services enabling synchronization\nslideshare.net\n\n\n\nAdd an architecture\nContribute\n\n\n\nCompany architectures\n\n\n\nCompany\nReference(s)\n\n\n\n\nAmazon\nAmazon architecture\n\n\nCinchcast\nProducing 1,500 hours of audio every day\n\n\nDataSift\nRealtime datamining At 120,000 tweets per second\n\n\nDropBox\nHow we've scaled Dropbox\n\n\nESPN\nOperating At 100,000 duh nuh nuhs per second\n\n\nGoogle\nGoogle architecture\n\n\nInstagram\n14 million users, terabytes of photosWhat powers Instagram\n\n\nJustin.tv\nJustin.Tv's live video broadcasting architecture\n\n\nFacebook\nScaling memcached at FacebookTAO: Facebook\u2019s distributed data store for the social graphFacebook\u2019s photo storageHow Facebook Live Streams To 800,000 Simultaneous Viewers\n\n\nFlickr\nFlickr architecture\n\n\nMailbox\nFrom 0 to one million users in 6 weeks\n\n\nNetflix\nA 360 Degree View Of The Entire Netflix StackNetflix: What Happens When You Press Play?\n\n\nPinterest\nFrom 0 To 10s of billions of page views a month18 million visitors, 10x growth, 12 employees\n\n\nPlayfish\n50 million monthly users and growing\n\n\nPlentyOfFish\nPlentyOfFish architecture\n\n\nSalesforce\nHow they handle 1.3 billion transactions a day\n\n\nStack Overflow\nStack Overflow architecture\n\n\nTripAdvisor\n40M visitors, 200M dynamic page views, 30TB data\n\n\nTumblr\n15 billion page views a month\n\n\nTwitter\nMaking Twitter 10000 percent fasterStoring 250 million tweets a day using MySQL150M active users, 300K QPS, a 22 MB/S firehoseTimelines at scaleBig and small data at TwitterOperations at Twitter: scaling beyond 100 million usersHow Twitter Handles 3,000 Images Per Second\n\n\nUber\nHow Uber scales their real-time market platformLessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories\n\n\nWhatsApp\nThe WhatsApp architecture Facebook bought for $19 billion\n\n\nYouTube\nYouTube scalabilityYouTube architecture\n\n\n\nCompany engineering blogs\n\nArchitectures for companies you are interviewing with.\nQuestions you encounter might be from the same domain.\n\n\nAirbnb Engineering\nAtlassian Developers\nAWS Blog\nBitly Engineering Blog\nBox Blogs\nCloudera Developer Blog\nDropbox Tech Blog\nEngineering at Quora\nEbay Tech Blog\nEvernote Tech Blog\nEtsy Code as Craft\nFacebook Engineering\nFlickr Code\nFoursquare Engineering Blog\nGitHub Engineering Blog\nGoogle Research Blog\nGroupon Engineering Blog\nHeroku Engineering Blog\nHubspot Engineering Blog\nHigh Scalability\nInstagram Engineering\nIntel Software Blog\nJane Street Tech Blog\nLinkedIn Engineering\nMicrosoft Engineering\nMicrosoft Python Engineering\nNetflix Tech Blog\nPaypal Developer Blog\nPinterest Engineering Blog\nQuora Engineering\nReddit Blog\nSalesforce Engineering Blog\nSlack Engineering Blog\nSpotify Labs\nTwilio Engineering Blog\nTwitter Engineering\nUber Engineering Blog\nYahoo Engineering Blog\nYelp Engineering Blog\nZynga Engineering Blog\n\nSource(s) and further reading\nLooking to add a blog?  To avoid duplicating work, consider adding your company blog to the following repo:\n\nkilimchoi/engineering-blogs\n\nUnder development\nInterested in adding a section or helping complete one in-progress?  Contribute!\n\nDistributed computing with MapReduce\nConsistent hashing\nScatter gather\nContribute\n\nCredits\nCredits and sources are provided throughout this repo.\nSpecial thanks to:\n\nHired in tech\nCracking the coding interview\nHigh scalability\ncheckcheckzz/system-design-interview\nshashank88/system_design\nmmcgrana/services-engineering\nSystem design cheat sheet\nA distributed systems reading list\nCracking the system design interview\n\nContact info\nFeel free to contact me to discuss any issues, questions, or comments.\nMy contact info can be found on my GitHub page.\nLicense\nI am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).\nCopyright 2017 Donne Martin\n\nCreative Commons Attribution 4.0 International License (CC BY 4.0)\n\nhttp://creativecommons.org/licenses/by/4.0/\n\n\n"}, {"repo": "vinta/awesome-python", "language": "Python", "readme": "\nAwesome Python \nA curated list of awesome Python frameworks, libraries, software and resources.\nInspired by awesome-php.\n\nAwesome Python\n\nAdmin Panels\nAlgorithms and Design Patterns\nAsynchronous Programming\nAudio\nAuthentication\nBuild Tools\nBuilt-in Classes Enhancement\nCaching\nChatOps Tools\nCMS\nCode Analysis\nCommand-line Interface Development\nCommand-line Tools\nCompatibility\nComputer Vision\nConcurrency and Parallelism\nConfiguration\nCryptography\nData Analysis\nData Validation\nData Visualization\nDatabase Drivers\nDatabase\nDate and Time\nDebugging Tools\nDeep Learning\nDevOps Tools\nDistributed Computing\nDistribution\nDocumentation\nDownloader\nE-commerce\nEditor Plugins and IDEs\nEmail\nEnvironment Management\nFiles\nForeign Function Interface\nForms\nFunctional Programming\nGame Development\nGeolocation\nGUI Development\nHardware\nHTML Manipulation\nHTTP Clients\nImage Processing\nImplementations\nInteractive Interpreter\nInternationalization\nJob Scheduler\nLogging\nMachine Learning\nMiscellaneous\nNatural Language Processing\nNetwork Virtualization\nNews Feed\nORM\nPackage Management\nPackage Repositories\nPermissions\nProcesses\nRecommender Systems\nRESTful API\nRobotics\nRPC Servers\nScience\nSearch\nSerialization\nServerless Frameworks\nSpecific Formats Processing\nStatic Site Generator\nTagging\nTask Queues\nTemplate Engine\nTesting\nText Processing\nThird-party APIs\nURL Manipulation\nVideo\nWeb Asset Management\nWeb Content Extracting\nWeb Crawling\nWeb Frameworks\nWebSocket\nWSGI Servers\n\n\nResources\n\nPodcasts\nTwitter\nWebsites\nWeekly\n\n\nContributing\n\n\nAdmin Panels\nLibraries for administrative interfaces.\n\najenti - The admin panel your servers deserve.\ndjango-grappelli - A jazzy skin for the Django Admin-Interface.\ndjango-jet - Modern responsive template for the Django admin interface with improved functionality.\ndjango-suit - Alternative Django Admin-Interface (free only for Non-commercial use).\ndjango-xadmin - Drop-in replacement of Django admin comes with lots of goodies.\njet-bridge - Admin panel framework for any application with nice UI (ex Jet Django)\nflask-admin - Simple and extensible administrative interface framework for Flask.\nflower - Real-time monitor and web admin for Celery.\nwooey - A Django app which creates automatic web UIs for Python scripts.\n\nAlgorithms and Design Patterns\nPython implementation of algorithms and design patterns.\n\nalgorithms - Minimal examples of data structures and algorithms in Python.\nPyPattyrn - A simple yet effective library for implementing common design patterns.\npython-patterns - A collection of design patterns in Python.\nsortedcontainers - Fast, pure-Python implementation of SortedList, SortedDict, and SortedSet types.\n\nAsynchronous Programming\n\nasyncio - (Python standard library) Asynchronous I/O, event loop, coroutines and tasks.\n\nawesome-asyncio\n\n\nuvloop - Ultra fast asyncio event loop.\nTwisted - An event-driven networking engine.\n\nAudio\nLibraries for manipulating audio and its metadata.\n\nAudio\n\naudioread - Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.\ndejavu - Audio fingerprinting and recognition.\nmingus - An advanced music theory and notation package with MIDI file and playback support.\npyAudioAnalysis - Audio feature extraction, classification, segmentation and applications.\npydub - Manipulate audio with a simple and easy high level interface.\nTimeSide - Open web audio processing framework.\n\n\nMetadata\n\nbeets - A music library manager and MusicBrainz tagger.\neyeD3 - A tool for working with audio files, specifically MP3 files containing ID3 metadata.\nmutagen - A Python module to handle audio metadata.\ntinytag - A library for reading music meta data of MP3, OGG, FLAC and Wave files.\n\n\n\nAuthentication\nLibraries for implementing authentications schemes.\n\nOAuth\n\nauthlib - JavaScript Object Signing and Encryption draft implementation.\ndjango-allauth - Authentication app for Django that \"just works.\"\ndjango-oauth-toolkit - OAuth 2 goodies for Django.\noauthlib - A generic and thorough implementation of the OAuth request-signing logic.\npython-oauth2 - A fully tested, abstract interface to creating OAuth clients and servers.\npython-social-auth - An easy-to-setup social authentication mechanism.\n\n\nJWT\n\npyjwt - JSON Web Token implementation in Python.\npython-jose - A JOSE implementation in Python.\npython-jwt - A module for generating and verifying JSON Web Tokens.\n\n\n\nBuild Tools\nCompile software from source code.\n\nBitBake - A make-like build tool for embedded Linux.\nbuildout - A build system for creating, assembling and deploying applications from multiple parts.\nPlatformIO - A console tool to build code with different development platforms.\npybuilder - A continuous build tool written in pure Python.\nSCons - A software construction tool.\n\nBuilt-in Classes Enhancement\nLibraries for enhancing Python built-in classes.\n\ndataclasses - (Python standard library) Data classes.\nattrs - Replacement for __init__, __eq__, __repr__, etc. boilerplate in class definitions.\nbidict - Efficient, Pythonic bidirectional map data structures and related functionality..\nBox - Python dictionaries with advanced dot notation access.\nDottedDict - A library that provides a method of accessing lists and dicts with a dotted path notation.\n\nCMS\nContent Management Systems.\n\nwagtail - A Django content management system.\ndjango-cms - An Open source enterprise CMS based on the Django.\nfeincms - One of the most advanced Content Management Systems built on Django.\nKotti - A high-level, Pythonic web application framework built on Pyramid.\nmezzanine - A powerful, consistent, and flexible content management platform.\nplone - A CMS built on top of the open source application server Zope.\nquokka - Flexible, extensible, small CMS powered by Flask and MongoDB.\n\nCaching\nLibraries for caching data.\n\nbeaker - A WSGI middleware for sessions and caching.\ndjango-cache-machine - Automatic caching and invalidation for Django models.\ndjango-cacheops - A slick ORM cache with automatic granular event-driven invalidation.\ndogpile.cache - dogpile.cache is next generation replacement for Beaker made by same authors.\nHermesCache - Python caching library with tag-based invalidation and dogpile effect prevention.\npylibmc - A Python wrapper around the libmemcached interface.\npython-diskcache - SQLite and file backed cache backend with faster lookups than memcached and redis.\n\nChatOps Tools\nLibraries for chatbot development.\n\nerrbot - The easiest and most popular chatbot to implement ChatOps.\n\nCode Analysis\nTools of static analysis, linters and code quality checkers. Also see awesome-static-analysis.\n\nCode Analysis\n\ncoala - Language independent and easily extendable code analysis application.\ncode2flow - Turn your Python and JavaScript code into DOT flowcharts.\nprospector - A tool to analyse Python code.\npycallgraph - A library that visualises the flow (call graph) of your Python application.\n\n\nCode Linters\n\nflake8 - A wrapper around pycodestyle, pyflakes and McCabe.\n\nawesome-flake8-extensions\n\n\npylint - A fully customizable source code analyzer.\npylama - A code audit tool for Python and JavaScript.\nwemake-python-styleguide - The strictest and most opinionated python linter ever.\n\n\nCode Formatters\n\nblack - The uncompromising Python code formatter.\nyapf - Yet another Python code formatter from Google.\n\n\nStatic Type Checkers, also see awesome-python-typing\n\nmypy - Check variable types during compile time.\npyre-check - Performant type checking.\n\n\nStatic Type Annotations Generators\n\nMonkeyType - A system for Python that generates static type annotations by collecting runtime types\n\n\n\nCommand-line Interface Development\nLibraries for building command-line applications.\n\nCommand-line Application Development\n\ncement - CLI Application Framework for Python.\nclick - A package for creating beautiful command line interfaces in a composable way.\ncliff - A framework for creating command-line programs with multi-level commands.\nclint - Python Command-line Application Tools.\ndocopt - Pythonic command line arguments parser.\npython-fire - A library for creating command line interfaces from absolutely any Python object.\npython-prompt-toolkit - A library for building powerful interactive command lines.\n\n\nTerminal Rendering\n\nasciimatics - A package to create full-screen text UIs (from interactive forms to ASCII animations).\nbashplotlib - Making basic plots in the terminal.\ncolorama - Cross-platform colored terminal text.\ntqdm - Fast, extensible progress bar for loops and CLI.\n\n\n\nCommand-line Tools\nUseful CLI-based tools for productivity.\n\nProductivity Tools\n\ncookiecutter - A command-line utility that creates projects from cookiecutters (project templates).\ndoitlive - A tool for live presentations in the terminal.\nhowdoi - Instant coding answers via the command line.\nPathPicker - Select files out of bash output.\npercol - Adds flavor of interactive selection to the traditional pipe concept on UNIX.\nthefuck - Correcting your previous console command.\ntmuxp - A tmux session manager.\ntry - A dead simple CLI to try out python packages - it's never been easier.\n\n\nCLI Enhancements\n\nhttpie - A command line HTTP client, a user-friendly cURL replacement.\nkube-shell - An integrated shell for working with the Kubernetes CLI.\nmycli - A Terminal Client for MySQL with AutoCompletion and Syntax Highlighting.\npgcli - Postgres CLI with autocompletion and syntax highlighting.\nsaws - A Supercharged aws-cli.\n\n\n\nCompatibility\nLibraries for migrating from Python 2 to 3.\n\npython-future - The missing compatibility layer between Python 2 and Python 3.\npython-modernize - Modernizes Python code for eventual Python 3 migration.\nsix - Python 2 and 3 compatibility utilities.\n\nComputer Vision\nLibraries for computer vision.\n\nOpenCV - Open Source Computer Vision Library.\npytesseract - Another wrapper for Google Tesseract OCR.\nSimpleCV - An open source framework for building computer vision applications.\n\nConcurrency and Parallelism\nLibraries for concurrent and parallel execution. Also see awesome-asyncio.\n\nconcurrent.futures - (Python standard library) A high-level interface for asynchronously executing callables.\nmultiprocessing - (Python standard library) Process-based parallelism.\neventlet - Asynchronous framework with WSGI support.\ngevent - A coroutine-based Python networking library that uses greenlet.\nuvloop - Ultra fast implementation of asyncio event loop on top of libuv.\nscoop - Scalable Concurrent Operations in Python.\n\nConfiguration\nLibraries for storing and parsing configuration options.\n\nconfigobj - INI file parser with validation.\nconfigparser - (Python standard library) INI file parser.\nprofig - Config from multiple formats with value conversion.\npython-decouple - Strict separation of settings from code.\n\nCryptography\n\ncryptography - A package designed to expose cryptographic primitives and recipes to Python developers.\nparamiko - The leading native Python SSHv2 protocol library.\npasslib - Secure password storage/hashing library, very high level.\npynacl - Python binding to the Networking and Cryptography (NaCl) library.\n\nData Analysis\nLibraries for data analyzing.\n\nBlaze - NumPy and Pandas interface to Big Data.\nOpen Mining - Business Intelligence (BI) in Pandas interface.\nOrange - Data mining, data visualization, analysis and machine learning through visual programming or scripts.\nPandas - A library providing high-performance, easy-to-use data structures and data analysis tools.\nOptimus - Agile Data Science Workflows made easy with PySpark.\n\nData Validation\nLibraries for validating data. Used for forms in many cases.\n\nCerberus - A lightweight and extensible data validation library.\ncolander - Validating and deserializing data obtained via XML, JSON, an HTML form post.\njsonschema - An implementation of JSON Schema for Python.\nschema - A library for validating Python data structures.\nSchematics - Data Structure Validation.\nvalideer - Lightweight extensible data validation and adaptation library.\nvoluptuous - A Python data validation library.\n\nData Visualization\nLibraries for visualizing data. Also see awesome-javascript.\n\nAltair - Declarative statistical visualization library for Python.\nBokeh - Interactive Web Plotting for Python.\nbqplot - Interactive Plotting Library for the Jupyter Notebook\nDash - Built on top of Flask, React and Plotly aimed at analytical web applications.\n\nawesome-dash\n\n\nplotnine - A grammar of graphics for Python based on ggplot2.\nMatplotlib - A Python 2D plotting library.\nPygal - A Python SVG Charts Creator.\nPyGraphviz - Python interface to Graphviz.\nPyQtGraph - Interactive and realtime 2D/3D/Image plotting and science/engineering widgets.\nSeaborn - Statistical data visualization using Matplotlib.\nVisPy - High-performance scientific visualization based on OpenGL.\n\nDatabase\nDatabases implemented in Python.\n\npickleDB - A simple and lightweight key-value store for Python.\ntinydb - A tiny, document-oriented database.\nZODB - A native object database for Python. A key-value and object graph database.\n\nDatabase Drivers\nLibraries for connecting and operating databases.\n\nMySQL - awesome-mysql\n\nmysqlclient - MySQL connector with Python 3 support (mysql-python fork).\nPyMySQL - A pure Python MySQL driver compatible to mysql-python.\n\n\nPostgreSQL - awesome-postgres\n\npsycopg2 - The most popular PostgreSQL adapter for Python.\nqueries - A wrapper of the psycopg2 library for interacting with PostgreSQL.\n\n\nOther Relational Databases\n\npymssql - A simple database interface to Microsoft SQL Server.\nSuperSQLite - A supercharged SQLite library built on top of apsw.\n\n\nNoSQL Databases\n\ncassandra-driver - The Python Driver for Apache Cassandra.\nhappybase - A developer-friendly library for Apache HBase.\nkafka-python - The Python client for Apache Kafka.\npy2neo - A client library and toolkit for working with Neo4j.\npymongo - The official Python client for MongoDB.\nredis-py - The Python client for Redis.\n\n\nAsynchronous Clients\n\nmotor - The async Python driver for MongoDB.\n\n\n\nDate and Time\nLibraries for working with dates and times.\n\nChronyk - A Python 3 library for parsing human-written times and dates.\ndateutil - Extensions to the standard Python datetime module.\ndelorean - A library for clearing up the inconvenient truths that arise dealing with datetimes.\nmoment - A Python library for dealing with dates/times. Inspired by Moment.js.\nPendulum - Python datetimes made easy.\nPyTime - An easy-to-use Python module which aims to operate date/time/datetime by string.\npytz - World timezone definitions, modern and historical. Brings the tz database into Python.\nwhen.py - Providing user-friendly functions to help perform common date and time actions.\nmaya - Datetimes for Humans.\n\nDebugging Tools\nLibraries for debugging code.\n\npdb-like Debugger\n\nipdb - IPython-enabled pdb.\npdb++ - Another drop-in replacement for pdb.\npudb - A full-screen, console-based Python debugger.\nwdb - An improbable web debugger through WebSockets.\n\n\nTracing\n\nlptrace - strace for Python programs.\nmanhole - Debugging UNIX socket connections and present the stacktraces for all threads and an interactive prompt.\npyringe - Debugger capable of attaching to and injecting code into Python processes.\npython-hunter - A flexible code tracing toolkit.\n\n\nProfiler\n\nline_profiler - Line-by-line profiling.\nmemory_profiler - Monitor Memory usage of Python code.\nprofiling - An interactive Python profiler.\npy-spy - A sampling profiler for Python programs. Written in Rust.\npyflame - A ptracing profiler For Python.\nvprof - Visual Python profiler.\n\n\nOthers\n\nicecream - Inspect variables, expressions, and program execution with a single, simple function call.\ndjango-debug-toolbar - Display various debug information for Django.\ndjango-devserver - A drop-in replacement for Django's runserver.\nflask-debugtoolbar - A port of the django-debug-toolbar to flask.\npyelftools - Parsing and analyzing ELF files and DWARF debugging information.\n\n\n\nDeep Learning\nFrameworks for Neural Networks and Deep Learning. Also see awesome-deep-learning.\n\ncaffe - A fast open framework for deep learning..\nkeras - A high-level neural networks library and capable of running on top of either TensorFlow or Theano.\nmxnet - A deep learning framework designed for both efficiency and flexibility.\npytorch - Tensors and Dynamic neural networks in Python with strong GPU acceleration.\nSerpentAI - Game agent framework. Use any video game as a deep learning sandbox.\ntensorflow - The most popular Deep Learning framework created by Google.\nTheano - A library for fast numerical computation.\n\nDevOps Tools\nSoftware and libraries for DevOps.\n\nansible - A radically simple IT automation platform.\ncloudinit - A multi-distribution package that handles early initialization of a cloud instance.\ncuisine - Chef-like functionality for Fabric.\ndocker-compose - Fast, isolated development environments using Docker.\nfabric - A simple, Pythonic tool for remote execution and deployment.\nfabtools - Tools for writing awesome Fabric files.\nhoncho - A Python clone of Foreman, for managing Procfile-based applications.\nOpenStack - Open source software for building private and public clouds.\npexpect - Controlling interactive programs in a pseudo-terminal like GNU expect.\npsutil - A cross-platform process and system utilities module.\nsaltstack - Infrastructure automation and management system.\nsupervisor - Supervisor process control system for UNIX.\n\nDistributed Computing\nFrameworks and libraries for Distributed Computing.\n\nBatch Processing\n\nPySpark - Apache Spark Python API.\ndask - A flexible parallel computing library for analytic computing.\nluigi - A module that helps you build complex pipelines of batch jobs.\nmrjob - Run MapReduce jobs on Hadoop or Amazon Web Services.\nRay - A system for parallel and distributed Python that unifies the machine learning ecosystem.\n\n\nStream Processing\n\nfaust - A stream processing library, porting the ideas from Kafka Streams to Python.\nstreamparse - Run Python code against real-time streams of data via Apache Storm.\n\n\n\nDistribution\nLibraries to create packaged executables for release distribution.\n\ndh-virtualenv - Build and distribute a virtualenv as a Debian package.\nNuitka - Compile scripts, modules, packages to an executable or extension module.\npy2app - Freezes Python scripts (Mac OS X).\npy2exe - Freezes Python scripts (Windows).\nPyInstaller - Converts Python programs into stand-alone executables (cross-platform).\npynsist - A tool to build Windows installers, installers bundle Python itself.\n\nDocumentation\nLibraries for generating project documentation.\n\nsphinx - Python Documentation generator.\n\nawesome-sphinxdoc\n\n\npdoc - Epydoc replacement to auto generate API documentation for Python libraries.\npycco - The literate-programming-style documentation generator.\n\nDownloader\nLibraries for downloading.\n\ns3cmd - A command line tool for managing Amazon S3 and CloudFront.\ns4cmd - Super S3 command line tool, good for higher performance.\nyou-get - A YouTube/Youku/Niconico video downloader written in Python 3.\nyoutube-dl - A small command-line program to download videos from YouTube.\n\nE-commerce\nFrameworks and libraries for e-commerce and payments.\n\nalipay - Unofficial Alipay API for Python.\nCartridge - A shopping cart app built using the Mezzanine.\ndjango-oscar - An open-source e-commerce framework for Django.\ndjango-shop - A Django based shop system.\nmerchant - A Django app to accept payments from various payment processors.\nmoney - Money class with optional CLDR-backed locale-aware formatting and an extensible currency exchange.\npython-currencies - Display money format and its filthy currencies.\nforex-python - Foreign exchange rates, Bitcoin price index and currency conversion.\nsaleor - An e-commerce storefront for Django.\nshoop - An open source E-Commerce platform based on Django.\n\nEditor Plugins and IDEs\n\nEmacs\n\nelpy - Emacs Python Development Environment.\n\n\nSublime Text\n\nanaconda - Anaconda turns your Sublime Text 3 in a full featured Python development IDE.\nSublimeJEDI - A Sublime Text plugin to the awesome auto-complete library Jedi.\n\n\nVim\n\njedi-vim - Vim bindings for the Jedi auto-completion library for Python.\npython-mode - An all in one plugin for turning Vim into a Python IDE.\nYouCompleteMe - Includes Jedi-based completion engine for Python.\n\n\nVisual Studio\n\nPTVS - Python Tools for Visual Studio.\n\n\nVisual Studio Code\n\nPython - The official VSCode extension with rich support for Python.\n\n\nIDE\n\nPyCharm - Commercial Python IDE by JetBrains. Has free community edition available.\nspyder - Open Source Python IDE.\n\n\n\nEmail\nLibraries for sending and parsing email.\n\nenvelopes - Mailing for human beings.\nflanker - An email address and Mime parsing library.\nimbox - Python IMAP for Humans.\ninbox.py - Python SMTP Server for Humans.\nlamson - Pythonic SMTP Application Server.\nMarrow Mailer - High-performance extensible mail delivery framework.\nmodoboa - A mail hosting and management platform including a modern and simplified Web UI.\nNylas Sync Engine - Providing a RESTful API on top of a powerful email sync platform.\nyagmail - Yet another Gmail/SMTP client.\n\nEnvironment Management\nLibraries for Python version and virtual environment management.\n\npyenv - Simple Python version management.\npipenv - Python Development Workflow for Humans.\npoetry - Python dependency management and packaging made easy.\nvirtualenv - A tool to create isolated Python environments.\n\nFiles\nLibraries for file manipulation and MIME type detection.\n\nmimetypes - (Python standard library) Map filenames to MIME types.\npath.py - A module wrapper for os.path.\npathlib - (Python standard library) An cross-platform, object-oriented path library.\nPyFilesystem2 - Python's filesystem abstraction layer.\npython-magic - A Python interface to the libmagic file type identification library.\nUnipath - An object-oriented approach to file/directory operations.\nwatchdog - API and shell utilities to monitor file system events.\n\nForeign Function Interface\nLibraries for providing foreign function interface.\n\ncffi - Foreign Function Interface for Python calling C code.\nctypes - (Python standard library) Foreign Function Interface for Python calling C code.\nPyCUDA - A Python wrapper for Nvidia's CUDA API.\nSWIG - Simplified Wrapper and Interface Generator.\n\nForms\nLibraries for working with forms.\n\nDeform - Python HTML form generation library influenced by the formish form generation library.\ndjango-bootstrap3 - Bootstrap 3 integration with Django.\ndjango-bootstrap4 - Bootstrap 4 integration with Django.\ndjango-crispy-forms - A Django app which lets you create beautiful forms in a very elegant and DRY way.\ndjango-remote-forms - A platform independent Django form serializer.\nWTForms - A flexible forms validation and rendering library.\n\nFunctional Programming\nFunctional Programming with Python.\n\nCoconut - Coconut is a variant of Python built for simple, elegant, Pythonic functional programming.\nCyToolz - Cython implementation of Toolz: High performance functional utilities.\nfn.py - Functional programming in Python: implementation of missing features to enjoy FP.\nfuncy - A fancy and practical functional tools.\nToolz - A collection of functional utilities for iterators, functions, and dictionaries.\n\nGUI Development\nLibraries for working with graphical user interface applications.\n\ncurses - Built-in wrapper for ncurses used to create terminal GUI applications.\nEel - A library for making simple Electron-like offline HTML/JS GUI apps.\nenaml - Creating beautiful user-interfaces with Declarative Syntax like QML.\nFlexx - Flexx is a pure Python toolkit for creating GUI's, that uses web technology for its rendering.\nGooey - Turn command line programs into a full GUI application with one line.\nkivy - A library for creating NUI applications, running on Windows, Linux, Mac OS X, Android and iOS.\npyglet - A cross-platform windowing and multimedia library for Python.\nPyGObject - Python Bindings for GLib/GObject/GIO/GTK+ (GTK+3).\nPyQt - Python bindings for the Qt cross-platform application and UI framework.\nPySimpleGUI - Wrapper for tkinter, Qt, WxPython and Remi.\npywebview - A lightweight cross-platform native wrapper around a webview component.\nTkinter - Tkinter is Python's de-facto standard GUI package.\nToga - A Python native, OS native GUI toolkit.\nurwid - A library for creating terminal GUI applications with strong support for widgets, events, rich colors, etc.\nwxPython - A blending of the wxWidgets C++ class library with the Python.\n\nGame Development\nAwesome game development libraries.\n\nCocos2d - cocos2d is a framework for building 2D games, demos, and other graphical/interactive applications.\nHarfang3D - Python framework for 3D, VR and game development.\nPanda3D - 3D game engine developed by Disney.\nPygame - Pygame is a set of Python modules designed for writing games.\nPyOgre - Python bindings for the Ogre 3D render engine, can be used for games, simulations, anything 3D.\nPyOpenGL - Python ctypes bindings for OpenGL and it's related APIs.\nPySDL2 - A ctypes based wrapper for the SDL2 library.\nRenPy - A Visual Novel engine.\n\nGeolocation\nLibraries for geocoding addresses and working with latitudes and longitudes.\n\ndjango-countries - A Django app that provides a country field for models and forms.\nGeoDjango - A world-class geographic web framework.\nGeoIP - Python API for MaxMind GeoIP Legacy Database.\ngeojson - Python bindings and utilities for GeoJSON.\ngeopy - Python Geocoding Toolbox.\npygeoip - Pure Python GeoIP API.\n\nHTML Manipulation\nLibraries for working with HTML and XML.\n\nBeautifulSoup - Providing Pythonic idioms for iterating, searching, and modifying HTML or XML.\nbleach - A whitelist-based HTML sanitization and text linkification library.\ncssutils - A CSS library for Python.\nhtml5lib - A standards-compliant library for parsing and serializing HTML documents and fragments.\nlxml - A very fast, easy-to-use and versatile library for handling HTML and XML.\nMarkupSafe - Implements a XML/HTML/XHTML Markup safe string for Python.\npyquery - A jQuery-like library for parsing HTML.\nuntangle - Converts XML documents to Python objects for easy access.\nWeasyPrint - A visual rendering engine for HTML and CSS that can export to PDF.\nxmldataset - Simple XML Parsing.\nxmltodict - Working with XML feel like you are working with JSON.\n\nHTTP Clients\nLibraries for working with HTTP.\n\ngrequests - requests + gevent for asynchronous HTTP requests.\nhttplib2 - Comprehensive HTTP client library.\nrequests - HTTP Requests for Humans.\ntreq - Python requests like API built on top of Twisted's HTTP client.\nurllib3 - A HTTP library with thread-safe connection pooling, file post support, sanity friendly.\n\nHardware\nLibraries for programming with hardware.\n\nino - Command line toolkit for working with Arduino.\nkeyboard - Hook and simulate global keyboard events on Windows and Linux.\nmouse - Hook and simulate global mouse events on Windows and Linux.\nPingo - Pingo provides a uniform API to program devices like the Raspberry Pi, pcDuino, Intel Galileo, etc.\nPyUserInput - A module for cross-platform control of the mouse and keyboard.\nscapy - A brilliant packet manipulation library.\nwifi - A Python library and command line tool for working with WiFi on Linux.\n\nImage Processing\nLibraries for manipulating images.\n\nhmap - Image histogram remapping.\nimgSeek - A project for searching a collection of images using visual similarity.\nnude.py - Nudity detection.\npagan - Retro identicon (Avatar) generation based on input string and hash.\npillow - Pillow is the friendly PIL fork.\npyBarcode - Create barcodes in Python without needing PIL.\npygram - Instagram-like image filters.\npython-qrcode - A pure Python QR Code generator.\nQuads - Computer art based on quadtrees.\nscikit-image - A Python library for (scientific) image processing.\nthumbor - A smart imaging service. It enables on-demand crop, re-sizing and flipping of images.\nwand - Python bindings for MagickWand, C API for ImageMagick.\n\nImplementations\nImplementations of Python.\n\nCPython - Default, most widely used implementation of the Python programming language written in C.\nCython - Optimizing Static Compiler for Python.\nCLPython - Implementation of the Python programming language written in Common Lisp.\nGrumpy - More compiler than interpreter as more powerful CPython2.7 replacement (alpha).\nIronPython - Implementation of the Python programming language written in C#.\nJython - Implementation of Python programming language written in Java for the JVM.\nMicroPython - A lean and efficient Python programming language implementation.\nNumba - Python JIT compiler to LLVM aimed at scientific Python.\nPeachPy - x86-64 assembler embedded in Python.\nPyjion - A JIT for Python based upon CoreCLR.\nPyPy - A very fast and compliant implementation of the Python language.\nPyston - A Python implementation using JIT techniques.\nStackless Python - An enhanced version of the Python programming language.\n\nInteractive Interpreter\nInteractive Python interpreters (REPL).\n\nbpython - A fancy interface to the Python interpreter.\nJupyter Notebook (IPython) - A rich toolkit to help you make the most out of using Python interactively.\n\nawesome-jupyter\n\n\nptpython - Advanced Python REPL built on top of the python-prompt-toolkit.\n\nInternationalization\nLibraries for working with i18n.\n\nBabel - An internationalization library for Python.\nPyICU - A wrapper of International Components for Unicode C++ library (ICU).\n\nJob Scheduler\nLibraries for scheduling jobs.\n\nAPScheduler - A light but powerful in-process task scheduler that lets you schedule functions.\ndjango-schedule - A calendaring app for Django.\ndoit - A task runner and build tool.\ngunnery - Multipurpose task execution tool for distributed systems with web-based interface.\nJoblib - A set of tools to provide lightweight pipelining in Python.\nPlan - Writing crontab file in Python like a charm.\nschedule - Python job scheduling for humans.\nSpiff - A powerful workflow engine implemented in pure Python.\nTaskFlow - A Python library that helps to make task execution easy, consistent and reliable.\nAirflow - Airflow is a platform to programmatically author, schedule and monitor workflows.\n\nLogging\nLibraries for generating and working with logs.\n\nEliot - Logging for complex & distributed systems.\nlogbook - Logging replacement for Python.\nlogging - (Python standard library) Logging facility for Python.\nraven - Python client for Sentry, a log/error tracking, crash reporting and aggregation platform for web applications.\n\nMachine Learning\nLibraries for Machine Learning. Also see awesome-machine-learning.\n\nH2O - Open Source Fast Scalable Machine Learning Platform.\nMetrics - Machine learning evaluation metrics.\nNuPIC - Numenta Platform for Intelligent Computing.\nscikit-learn - The most popular Python library for Machine Learning.\nSpark ML - Apache Spark's scalable Machine Learning library.\nvowpal_porpoise - A lightweight Python wrapper for Vowpal Wabbit.\nxgboost - A scalable, portable, and distributed gradient boosting library.\n\nMicrosoft Windows\nPython programming on Microsoft Windows.\n\nPython(x,y) - Scientific-applications-oriented Python Distribution based on Qt and Spyder.\npythonlibs - Unofficial Windows binaries for Python extension packages.\nPythonNet - Python Integration with the .NET Common Language Runtime (CLR).\nPyWin32 - Python Extensions for Windows.\nWinPython - Portable development environment for Windows 7/8.\n\nMiscellaneous\nUseful libraries or tools that don't fit in the categories above.\n\nblinker - A fast Python in-process signal/event dispatching system.\nboltons - A set of pure-Python utilities.\nitsdangerous - Various helpers to pass trusted data to untrusted environments.\npluginbase - A simple but flexible plugin system for Python.\ntryton - A general purpose business framework.\n\nNatural Language Processing\nLibraries for working with human languages.\n\nGeneral\n\ngensim - Topic Modeling for Humans.\nlangid.py - Stand-alone language identification system.\nnltk - A leading platform for building Python programs to work with human language data.\npattern - A web mining module for the Python.\npolyglot - Natural language pipeline supporting hundreds of languages.\npytext - A natural language modeling framework based on PyTorch.\nPyTorch-NLP - A toolkit enabling rapid deep learning NLP prototyping for research.\nspacy - A library for industrial-strength natural language processing in Python and Cython.\nstanfordnlp - The Stanford NLP Group's official Python library, supporting 50+ languages.\n\n\nChinese\n\njieba - The most popular Chinese text segmentation library.\npkuseg-python - A toolkit for Chinese word segmentation in various domains.\nsnownlp - A library for processing Chinese text.\nfunNLP - A collection of tools and datasets for Chinese NLP.\n\n\n\nNetwork Virtualization\nTools and libraries for Virtual Networking and SDN (Software Defined Networking).\n\nmininet - A popular network emulator and API written in Python.\nnapalm - Cross-vendor API to manipulate network devices.\npox - A Python-based SDN control applications, such as OpenFlow SDN controllers.\n\nNews Feed\nLibraries for building user's activities.\n\ndjango-activity-stream - Generating generic activity streams from the actions on your site.\nStream Framework - Building news feed and notification systems using Cassandra and Redis.\n\nORM\nLibraries that implement Object-Relational Mapping or data mapping techniques.\n\nRelational Databases\n\nDjango Models - The Django ORM.\nSQLAlchemy - The Python SQL Toolkit and Object Relational Mapper.\n\nawesome-sqlalchemy\n\n\ndataset - Store Python dicts in a database - works with SQLite, MySQL, and PostgreSQL.\norator -  The Orator ORM provides a simple yet beautiful ActiveRecord implementation.\norm - An async ORM.\npeewee - A small, expressive ORM.\npony - ORM that provides a generator-oriented interface to SQL.\npydal - A pure Python Database Abstraction Layer.\n\n\nNoSQL Databases\n\nhot-redis - Rich Python data types for Redis.\nmongoengine - A Python Object-Document-Mapper for working with MongoDB.\nPynamoDB - A Pythonic interface for Amazon DynamoDB.\nredisco - A Python Library for Simple Models and Containers Persisted in Redis.\n\n\n\nPackage Management\nLibraries for package and dependency management.\n\npip - The Python package and dependency manager.\n\nPyPI\npip-tools - A set of tools to keep your pinned Python dependencies fresh.\n\n\nconda - Cross-platform, Python-agnostic binary package manager.\n\nPackage Repositories\nLocal PyPI repository server and proxies.\n\nwarehouse - Next generation Python Package Repository (PyPI).\nbandersnatch - PyPI mirroring tool provided by Python Packaging Authority (PyPA).\ndevpi - PyPI server and packaging/testing/release tool.\nlocalshop - Local PyPI server (custom packages and auto-mirroring of pypi).\n\nPermissions\nLibraries that allow or deny users access to data or functionality.\n\ndjango-guardian - Implementation of per object permissions for Django 1.2+\ndjango-rules - A tiny but powerful app providing object-level permissions to Django, without requiring a database.\n\nProcesses\nLibraries for starting and communicating with OS processes.\n\ndelegator.py - Subprocesses for Humans 2.0.\nsarge - Yet another wrapper for subprocess.\nsh - A full-fledged subprocess replacement for Python.\n\nRecommender Systems\nLibraries for building recommender systems.\n\nannoy - Approximate Nearest Neighbors in C++/Python optimized for memory usage.\nfastFM - A library for Factorization Machines.\nimplicit - A fast Python implementation of collaborative filtering for implicit datasets.\nlibffm - A library for Field-aware Factorization Machine (FFM).\nlightfm - A Python implementation of a number of popular recommendation algorithms.\nspotlight - Deep recommender models using PyTorch.\nSurprise - A scikit for building and analyzing recommender systems.\ntensorrec - A Recommendation Engine Framework in TensorFlow.\n\nRESTful API\nLibraries for building RESTful APIs.\n\nDjango\n\ndjango-rest-framework - A powerful and flexible toolkit to build web APIs.\ndjango-tastypie - Creating delicious APIs for Django apps.\n\n\nFlask\n\neve - REST API framework powered by Flask, MongoDB and good intentions.\nflask-api - Browsable Web APIs for Flask.\nflask-restful - Quickly building REST APIs for Flask.\n\n\nPyramid\n\ncornice - A RESTful framework for Pyramid.\n\n\nFramework agnostic\n\napistar - A smart Web API framework, designed for Python 3.\nfalcon - A high-performance framework for building cloud APIs and web app backends.\nfastapi - A modern, fast, web framework for building APIs with Python 3.6+ based on standard Python type hints.\nhug - A Python 3 framework for cleanly exposing APIs.\nsandman2 - Automated REST APIs for existing database-driven systems.\nsanic - A Python 3.6+ web server and web framework that's written to go fast.\nvibora - Fast, efficient and asynchronous Web framework inspired by Flask.\n\n\n\nRobotics\nLibraries for robotics.\n\nPythonRobotics - This is a compilation of various robotics algorithms with visualizations.\nrospy - This is a library for ROS (Robot Operating System).\n\nRPC Servers\nRPC-compatible servers.\n\nzeroRPC - zerorpc is a flexible RPC implementation based on ZeroMQ and MessagePack.\n\nScience\nLibraries for scientific computing. Also see Python-for-Scientists\n\nastropy - A community Python library for Astronomy.\nbcbio-nextgen - Providing best-practice pipelines for fully automated high throughput sequencing analysis.\nbccb - Collection of useful code related to biological analysis.\nBiopython - Biopython is a set of freely available tools for biological computation.\ncclib - A library for parsing and interpreting the results of computational chemistry packages.\nColour - Implementing a comprehensive number of colour theory transformations and algorithms.\nNetworkX - A high-productivity software for complex networks.\nNIPY - A collection of neuroimaging toolkits.\nNumPy - A fundamental package for scientific computing with Python.\nOpen Babel - A chemical toolbox designed to speak the many languages of chemical data.\nObsPy - A Python toolbox for seismology.\nPyDy - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion.\nPyMC - Markov Chain Monte Carlo sampling toolkit.\nQuTiP - Quantum Toolbox in Python.\nRDKit - Cheminformatics and Machine Learning Software.\nSciPy - A Python-based ecosystem of open-source software for mathematics, science, and engineering.\nstatsmodels - Statistical modeling and econometrics in Python.\nSymPy - A Python library for symbolic mathematics.\nZipline - A Pythonic algorithmic trading library.\nSimPy -  A process-based discrete-event simulation framework.\n\nSearch\nLibraries and software for indexing and performing search queries on data.\n\nelasticsearch-py - The official low-level Python client for Elasticsearch.\nelasticsearch-dsl-py - The official high-level Python client for Elasticsearch.\ndjango-haystack - Modular search for Django.\npysolr - A lightweight Python wrapper for Apache Solr.\nwhoosh - A fast, pure Python search engine library.\n\nSerialization\nLibraries for serializing complex data types\n\nmarshmallow - A lightweight library for converting complex objects to and from simple Python datatypes.\npysimdjson - A Python bindings for simdjson.\npython-rapidjson - A Python wrapper around RapidJSON.\nultrajson - A fast JSON decoder and encoder written in C with Python bindings.\n\nServerless Frameworks\nFrameworks for developing serverless Python code.\n\npython-lambda - A toolkit for developing and deploying Python code in AWS Lambda.\nZappa - A tool for deploying WSGI applications on AWS Lambda and API Gateway.\n\nSpecific Formats Processing\nLibraries for parsing and manipulating specific text formats.\n\nGeneral\n\ntablib - A module for Tabular Datasets in XLS, CSV, JSON, YAML.\n\n\nOffice\n\nopenpyxl - A library for reading and writing Excel 2010 xlsx/xlsm/xltx/xltm files.\npyexcel - Providing one API for reading, manipulating and writing csv, ods, xls, xlsx and xlsm files.\npython-docx - Reads, queries and modifies Microsoft Word 2007/2008 docx files.\npython-pptx - Python library for creating and updating PowerPoint (.pptx) files.\nunoconv - Convert between any document format supported by LibreOffice/OpenOffice.\nXlsxWriter - A Python module for creating Excel .xlsx files.\nxlwings - A BSD-licensed library that makes it easy to call Python from Excel and vice versa.\nxlwt / xlrd - Writing and reading data and formatting information from Excel files.\n\n\nPDF\n\nPDFMiner - A tool for extracting information from PDF documents.\nPyPDF2 - A library capable of splitting, merging and transforming PDF pages.\nReportLab - Allowing Rapid creation of rich PDF documents.\n\n\nMarkdown\n\nMistune - Fastest and full featured pure Python parsers of Markdown.\nPython-Markdown - A Python implementation of John Gruber\u2019s Markdown.\n\n\nYAML\n\nPyYAML - YAML implementations for Python.\n\n\nCSV\n\ncsvkit - Utilities for converting to and working with CSV.\n\n\nArchive\n\nunp - A command line tool that can unpack archives easily.\n\n\n\nStatic Site Generator\nStatic site generator is a software that takes some text + templates as input and produces HTML files on the output.\n\nmkdocs - Markdown friendly documentation generator.\npelican - Static site generator that supports Markdown and reST syntax.\nlektor - An easy to use static CMS and blog engine.\nnikola - A static website and blog generator.\n\nTagging\nLibraries for tagging items.\n\ndjango-taggit - Simple tagging for Django.\n\nTask Queues\nLibraries for working with task queues.\n\ncelery - An asynchronous task queue/job queue based on distributed message passing.\nhuey - Little multi-threaded task queue.\nmrq - A distributed worker task queue in Python using Redis & gevent.\nrq - Simple job queues for Python.\n\nTemplate Engine\nLibraries and tools for templating and lexing.\n\nJinja2 - A modern and designer friendly templating language.\nGenshi - Python templating toolkit for generation of web-aware output.\nMako - Hyperfast and lightweight templating for the Python platform.\n\nTesting\nLibraries for testing codebases and generating test data.\n\nTesting Frameworks\n\npytest - A mature full-featured Python testing tool.\nhypothesis - Hypothesis is an advanced Quickcheck style property based testing library.\nnose2 - The successor to nose, based on `unittest2.\nRobot Framework - A generic test automation framework.\nunittest - (Python standard library) Unit testing framework.\n\n\nTest Runners\n\ngreen - A clean, colorful test runner.\nmamba - The definitive testing tool for Python. Born under the banner of BDD.\ntox - Auto builds and tests distributions in multiple Python versions\n\n\nGUI / Web Testing\n\nlocust - Scalable user load testing tool written in Python.\nPyAutoGUI - PyAutoGUI is a cross-platform GUI automation Python module for human beings.\nSelenium - Python bindings for Selenium WebDriver.\nsixpack - A language-agnostic A/B Testing framework.\nsplinter - Open source tool for testing web applications.\n\n\nMock\n\nmock - (Python standard library) A mocking and patching library.\ndoublex - Powerful test doubles framework for Python.\nfreezegun - Travel through time by mocking the datetime module.\nhttmock - A mocking library for requests for Python 2.6+ and 3.2+.\nhttpretty - HTTP request mock tool for Python.\nmocket - A socket mock framework with gevent/asyncio/SSL support.\nresponses - A utility library for mocking out the requests Python library.\nVCR.py - Record and replay HTTP interactions on your tests.\n\n\nObject Factories\n\nfactory_boy - A test fixtures replacement for Python.\nmixer - Another fixtures replacement. Supported Django, Flask, SQLAlchemy, Peewee and etc.\nmodel_mommy - Creating random fixtures for testing in Django.\n\n\nCode Coverage\n\ncoverage - Code coverage measurement.\n\n\nFake Data\n\nmimesis - is a Python library that help you generate fake data.\nfake2db - Fake database generator.\nfaker - A Python package that generates fake data.\nradar - Generate random datetime / time.\n\n\n\nText Processing\nLibraries for parsing and manipulating plain texts.\n\nGeneral\n\nchardet - Python 2/3 compatible character encoding detector.\ndifflib - (Python standard library) Helpers for computing deltas.\nftfy - Makes Unicode text less broken and more consistent automagically.\nfuzzywuzzy - Fuzzy String Matching.\nLevenshtein - Fast computation of Levenshtein distance and string similarity.\npangu.py - Paranoid text spacing.\npyfiglet - An implementation of figlet written in Python.\npypinyin - Convert Chinese hanzi (\u6f22\u5b57) to pinyin (\u62fc\u97f3).\ntextdistance - Compute distance between sequences with 30+ algorithms.\nunidecode - ASCII transliterations of Unicode text.\n\n\nSlugify\n\nawesome-slugify - A Python slugify library that can preserve unicode.\npython-slugify - A Python slugify library that translates unicode to ASCII.\nunicode-slugify - A slugifier that generates unicode slugs with Django as a dependency.\n\n\nUnique identifiers\n\nhashids - Implementation of hashids in Python.\nshortuuid - A generator library for concise, unambiguous and URL-safe UUIDs.\n\n\nParser\n\nply - Implementation of lex and yacc parsing tools for Python.\npygments - A generic syntax highlighter.\npyparsing - A general purpose framework for generating parsers.\npython-nameparser - Parsing human names into their individual components.\npython-phonenumbers - Parsing, formatting, storing and validating international phone numbers.\npython-user-agents - Browser user agent parser.\nsqlparse - A non-validating SQL parser.\n\n\n\nThird-party APIs\nLibraries for accessing third party services APIs. Also see List of Python API Wrappers and Libraries.\n\napache-libcloud - One Python library for all clouds.\nboto3 - Python interface to Amazon Web Services.\ndjango-wordpress - WordPress models and views for Django.\nfacebook-sdk - Facebook Platform Python SDK.\ngoogle-api-python-client - Google APIs Client Library for Python.\ngspread - Google Spreadsheets Python API.\ntwython - A Python wrapper for the Twitter API.\n\nURL Manipulation\nLibraries for parsing URLs.\n\nfurl - A small Python library that makes parsing and manipulating URLs easy.\npurl - A simple, immutable URL class with a clean API for interrogation and manipulation.\npyshorteners - A pure Python URL shortening lib.\nwebargs - A friendly library for parsing HTTP request arguments with built-in support for popular web frameworks.\n\nVideo\nLibraries for manipulating video and GIFs.\n\nmoviepy - A module for script-based movie editing with many formats, including animated GIFs.\nscikit-video - Video processing routines for SciPy.\n\nWeb Asset Management\nTools for managing, compressing and minifying website assets.\n\ndjango-compressor - Compresses linked and inline JavaScript or CSS into a single cached file.\ndjango-pipeline - An asset packaging library for Django.\ndjango-storages - A collection of custom storage back ends for Django.\nfanstatic - Packages, optimizes, and serves static file dependencies as Python packages.\nfileconveyor - A daemon to detect and sync files to CDNs, S3 and FTP.\nflask-assets - Helps you integrate webassets into your Flask app.\nwebassets - Bundles, optimizes, and manages unique cache-busting URLs for static resources.\n\nWeb Content Extracting\nLibraries for extracting web contents.\n\nhtml2text - Convert HTML to Markdown-formatted text.\nlassie - Web Content Retrieval for Humans.\nmicawber - A small library for extracting rich content from URLs.\nnewspaper - News extraction, article extraction and content curation in Python.\npython-readability - Fast Python port of arc90's readability tool.\nrequests-html - Pythonic HTML Parsing for Humans.\nsumy - A module for automatic summarization of text documents and HTML pages.\ntextract - Extract text from any document, Word, PowerPoint, PDFs, etc.\ntoapi - Every web site provides APIs.\n\nWeb Crawling\nLibraries to automate web scraping.\n\ncola - A distributed crawling framework.\nfeedparser - Universal feed parser.\ngrab - Site scraping framework.\nMechanicalSoup - A Python library for automating interaction with websites.\npyspider - A powerful spider system.\nrobobrowser - A simple, Pythonic library for browsing the web without a standalone web browser.\nscrapy - A fast high-level screen scraping and web crawling framework.\nportia - Visual scraping for Scrapy.\n\nWeb Frameworks\nTraditional full stack web frameworks. Also see RESTful API\n\nSynchronous\n\nDjango - The most popular web framework in Python.\n\nawesome-django\n\n\nFlask - A microframework for Python.\n\nawesome-flask\n\n\nPyramid - A small, fast, down-to-earth, open source Python web framework.\n\nawesome-pyramid\n\n\nMasonite - The modern and developer centric Python web framework.\n\n\nAsynchronous\n\nTornado - A web framework and asynchronous networking library.\n\n\n\nWebSocket\nLibraries for working with WebSocket.\n\nautobahn-python - WebSocket & WAMP for Python on Twisted and asyncio.\nchannels - Developer-friendly asynchrony for Django.\nwebsockets - A library for building WebSocket servers and clients with a focus on correctness and simplicity.\n\nWSGI Servers\nWSGI-compatible web servers.\n\nbjoern - Asynchronous, very fast and written in C.\ngunicorn - Pre-forked, partly written in C.\nuWSGI - A project aims at developing a full stack for building hosting services, written in C.\nwaitress - Multi-threaded, powers Pyramid.\nwerkzeug - A WSGI utility library for Python that powers Flask and can easily be embedded into your own projects.\n\nResources\nWhere to discover new Python libraries.\nPodcasts\n\nFrom Python Import Podcast\nPodcast.init\nPython Bytes\nPython Testing\nRadio Free Python\nTalk Python To Me\nTest and Code\n\nTwitter\n\n@codetengu\n@getpy\n@importpython\n@planetpython\n@pycoders\n@pypi\n@pythontrending\n@PythonWeekly\n@TalkPython\n@realpython\n\nWebsites\n\n/r/CoolGithubProjects\n/r/Python\nAwesome Python @LibHunt\nDjango Packages\nFull Stack Python\nPython Cheatsheet\nPython ZEEF\nPython \u5f00\u53d1\u793e\u533a\nReal Python\nTrending Python repositories on GitHub today\n\u0421\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u043e Python \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u043e\u0432\n\nWeekly\n\nCodeTengu Weekly \u78bc\u5929\u72d7\u9031\u520a\nImport Python Newsletter\nPycoder's Weekly\nPython Weekly\nPython Tricks\n\nContributing\nYour contributions are always welcome! Please take a look at the contribution guidelines first.\nI will keep some pull requests open if I'm not sure whether those libraries are awesome, you could vote for them by adding \ud83d\udc4d to them. Pull requests will be merged when their votes reach 20.\n\nIf you have any question about this opinionated list, do not hesitate to contact me @vinta on Twitter or open an issue on GitHub.\n\n"}, {"repo": "facebook/create-react-app", "language": "JavaScript", "readme": "\nCreate React App  \nCreate React apps with no build configuration.\n\nCreating an App \u2013 How to create a new app.\nUser Guide \u2013 How to develop apps bootstrapped with Create React App.\n\nCreate React App works on macOS, Windows, and Linux.\nIf something doesn\u2019t work, please file an issue.\nIf you have questions or need help, please ask in our Spectrum community.\nQuick Overview\nnpx create-react-app my-app\ncd my-app\nnpm start\n(npx comes with npm 5.2+ and higher, see instructions for older npm versions)\nThen open http://localhost:3000/ to see your app.\nWhen you\u2019re ready to deploy to production, create a minified bundle with npm run build.\n\n\n\nGet Started Immediately\nYou don\u2019t need to install or configure tools like Webpack or Babel.\nThey are preconfigured and hidden so that you can focus on the code.\nCreate a project, and you\u2019re good to go.\nCreating an App\nYou\u2019ll need to have Node 8.16.0 or Node 10.16.0 or later version on your local development machine (but it\u2019s not required on the server). You can use nvm (macOS/Linux) or nvm-windows to switch Node versions between different projects.\nTo create a new app, you may choose one of the following methods:\nnpx\nnpx create-react-app my-app\n(npx is a package runner tool that comes with npm 5.2+ and higher, see instructions for older npm versions)\nnpm\nnpm init react-app my-app\nnpm init <initializer> is available in npm 6+\nYarn\nyarn create react-app my-app\nyarn create is available in Yarn 0.25+\nIt will create a directory called my-app inside the current folder.\nInside that directory, it will generate the initial project structure and install the transitive dependencies:\nmy-app\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 node_modules\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 public\n\u2502   \u251c\u2500\u2500 favicon.ico\n\u2502   \u251c\u2500\u2500 index.html\n\u2502   \u2514\u2500\u2500 manifest.json\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 App.css\n    \u251c\u2500\u2500 App.js\n    \u251c\u2500\u2500 App.test.js\n    \u251c\u2500\u2500 index.css\n    \u251c\u2500\u2500 index.js\n    \u251c\u2500\u2500 logo.svg\n    \u2514\u2500\u2500 serviceWorker.js\n\nNo configuration or complicated folder structures, only the files you need to build your app.\nOnce the installation is done, you can open your project folder:\ncd my-app\nInside the newly created project, you can run some built-in commands:\nnpm start or yarn start\nRuns the app in development mode.\nOpen http://localhost:3000 to view it in the browser.\nThe page will automatically reload if you make changes to the code.\nYou will see the build errors and lint warnings in the console.\n\n\n\nnpm test or yarn test\nRuns the test watcher in an interactive mode.\nBy default, runs tests related to files changed since the last commit.\nRead more about testing.\nnpm run build or yarn build\nBuilds the app for production to the build folder.\nIt correctly bundles React in production mode and optimizes the build for the best performance.\nThe build is minified and the filenames include the hashes.\nYour app is ready to be deployed.\nUser Guide\nYou can find detailed instructions on using Create React App and many tips in its documentation.\nHow to Update to New Versions?\nPlease refer to the User Guide for this and other information.\nPhilosophy\n\n\nOne Dependency: There is only one build dependency. It uses Webpack, Babel, ESLint, and other amazing projects, but provides a cohesive curated experience on top of them.\n\n\nNo Configuration Required: You don't need to configure anything. A reasonably good configuration of both development and production builds is handled for you so you can focus on writing code.\n\n\nNo Lock-In: You can \u201ceject\u201d to a custom setup at any time. Run a single command, and all the configuration and build dependencies will be moved directly into your project, so you can pick up right where you left off.\n\n\nWhat\u2019s Included?\nYour environment will have everything you need to build a modern single-page React app:\n\nReact, JSX, ES6, TypeScript and Flow syntax support.\nLanguage extras beyond ES6 like the object spread operator.\nAutoprefixed CSS, so you don\u2019t need -webkit- or other prefixes.\nA fast interactive unit test runner with built-in support for coverage reporting.\nA live development server that warns about common mistakes.\nA build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.\nAn offline-first service worker and a web app manifest, meeting all the Progressive Web App criteria. (Note: Using the service worker is opt-in as of react-scripts@2.0.0 and higher)\nHassle-free updates for the above tools with a single dependency.\n\nCheck out this guide for an overview of how these tools fit together.\nThe tradeoff is that these tools are preconfigured to work in a specific way. If your project needs more customization, you can \"eject\" and customize it, but then you will need to maintain this configuration.\nPopular Alternatives\nCreate React App is a great fit for:\n\nLearning React in a comfortable and feature-rich development environment.\nStarting new single-page React applications.\nCreating examples with React for your libraries and components.\n\nHere are a few common cases where you might want to try something else:\n\n\nIf you want to try React without hundreds of transitive build tool dependencies, consider using a single HTML file or an online sandbox instead.\n\n\nIf you need to integrate React code with a server-side template framework like Rails, Django or Symfony, or if you\u2019re not building a single-page app, consider using nwb, or Neutrino which are more flexible. For Rails specifically, you can use Rails Webpacker. For Symfony, try Symfony's Webpack Encore.\n\n\nIf you need to publish a React component, nwb can also do this, as well as Neutrino's react-components preset.\n\n\nIf you want to do server rendering with React and Node.js, check out Next.js or Razzle. Create React App is agnostic of the backend, and only produces static HTML/JS/CSS bundles.\n\n\nIf your website is mostly static (for example, a portfolio or a blog), consider using Gatsby instead. Unlike Create React App, it pre-renders the website into HTML at the build time.\n\n\nFinally, if you need more customization, check out Neutrino and its React preset.\n\n\nAll of the above tools can work with little to no configuration.\nIf you prefer configuring the build yourself, follow this guide.\nReact Native\nLooking for something similar, but for React Native?\nCheck out Expo CLI.\nContributing\nWe'd love to have your helping hand on create-react-app! See CONTRIBUTING.md for more information on what we're looking for and how to get started.\nCredits\nThis project exists thanks to all the people who contribute.\n\nAcknowledgements\nWe are grateful to the authors of existing related projects for their ideas and collaboration:\n\n@eanplatter\n@insin\n@mxstbr\n\nLicense\nCreate React App is open source software licensed as MIT.\n\n"}, {"repo": "jackfrued/Python-100-Days", "language": "Jupyter Notebook", "readme": "\nPython - 100\u5929\u4ece\u65b0\u624b\u5230\u5927\u5e08\n\n\u4f5c\u8005\uff1a\u9a86\u660a\n\u6700\u8fd1\u6709\u5f88\u591a\u60f3\u5b66\u4e60Python\u7684\u5c0f\u4f19\u4f34\u9646\u9646\u7eed\u7eed\u52a0\u5165\u6211\u4eec\u7684\u4ea4\u6d41\u7fa4\uff0c\u76ee\u524d\u6211\u4eec\u7684\u4ea4\u6d41\u7fa4\u4eba\u6570\u5df2\u7ecf\u8d85\u8fc7\u4e00\u4e07\u4eba\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u6253\u9020\u4e00\u4e2a\u4f18\u8d28\u7684Python\u4ea4\u6d41\u793e\u533a\uff0c\u4e00\u65b9\u9762\u4e3a\u60f3\u5b66\u4e60Python\u7684\u521d\u5b66\u8005\u626b\u5e73\u5165\u95e8\u8fc7\u7a0b\u4e2d\u7684\u91cd\u91cd\u969c\u788d\uff1b\u53e6\u4e00\u65b9\u4e3a\u65b0\u5165\u884c\u7684\u5f00\u53d1\u8005\u63d0\u4f9b\u95ee\u9053\u7684\u9014\u5f84\uff0c\u5e2e\u52a9\u4ed6\u4eec\u8fc5\u901f\u6210\u957f\u4e3a\u4f18\u79c0\u7684\u804c\u4e1a\u4eba\uff1b\u6b64\u5916\uff0c\u6709\u7ecf\u9a8c\u7684\u5f00\u53d1\u8005\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u5e73\u53f0\u628a\u81ea\u5df1\u7684\u5de5\u4f5c\u7ecf\u9a8c\u65e0\u507f\u5206\u4eab\u6216\u6709\u507f\u63d0\u4f9b\u51fa\u6765\uff0c\u8ba9\u5927\u5bb6\u90fd\u80fd\u591f\u5f97\u5230\u804c\u4e1a\u6280\u80fd\u4ee5\u53ca\u7efc\u5408\u7d20\u8d28\u7684\u5168\u9762\u63d0\u5347\u3002\u4e4b\u524d\u7684\u516c\u5f00\u8bfe\u548c\u7ebf\u4e0b\u6280\u672f\u4ea4\u6d41\u6d3b\u52a8\u56e0\u4e3a\u5de5\u4f5c\u7684\u5173\u7cfb\u8352\u5e9f\u4e86\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u4f46\u662f\u5404\u4f4d\u5c0f\u4f19\u4f34\u4ecd\u7136\u6d3b\u8dc3\u5728\u4ea4\u6d41\u7fa4\u5e76\u4e00\u5982\u65e2\u5f80\u7684\u652f\u6301\u6211\u4eec\uff0c\u5728\u6b64\u5411\u5927\u5bb6\u8868\u793a\u611f\u8c22\u3002\u8fd1\u671f\u5f00\u59cb\u6301\u7eed\u66f4\u65b0\u524d15\u5929\u548c\u6700\u540e10\u5929\u7684\u5185\u5bb9\uff0c\u524d15\u5929\u662f\u5199\u7ed9\u521d\u5b66\u8005\u7684\uff0c\u6211\u5e0c\u671b\u628a\u4e0a\u624b\u7684\u96be\u5ea6\u8fdb\u4e00\u6b65\u964d\u4f4e\uff0c\u4f8b\u5b50\u7a0b\u5e8f\u66f4\u52a0\u7b80\u5355\u6e05\u6670\uff1b\u6700\u540e10\u5929\u662fPython\u9879\u76ee\u5b9e\u6218\u548c\u9762\u8bd5\u76f8\u5173\u7684\u4e1c\u897f\uff0c\u6211\u5e0c\u671b\u5185\u5bb9\u66f4\u8be6\u5b9e\u548c\u5b8c\u6574\uff0c\u5c24\u5176\u662f\u7b2c100\u5929\u7684\u9762\u8bd5\u9898\u90e8\u5206\uff1b\u521b\u4f5c\u4e0d\u6613\uff0c\u611f\u8c22\u5927\u5bb6\u7684\u6253\u8d4f\u652f\u6301\uff0c\u8fd9\u4e9b\u94b1\u4e0d\u4f1a\u7528\u4e8e\u8d2d\u4e70\u5496\u5561\u800c\u662f\u901a\u8fc7\u817e\u8baf\u516c\u76ca\u5e73\u53f0\u6350\u8d60\u7ed9\u9700\u8981\u5e2e\u52a9\u7684\u4eba\uff08\u70b9\u51fb\u4e86\u89e3\u6350\u8d60\u60c5\u51b5\uff09\u3002\n\n\nPython\u5e94\u7528\u9886\u57df\u548c\u5c31\u4e1a\u5f62\u52bf\u5206\u6790\n\u7b80\u5355\u7684\u8bf4\uff0cPython\u662f\u4e00\u4e2a\u201c\u4f18\u96c5\u201d\u3001\u201c\u660e\u786e\u201d\u3001\u201c\u7b80\u5355\u201d\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\n\n\u5b66\u4e60\u66f2\u7ebf\u4f4e\uff0c\u975e\u4e13\u4e1a\u4eba\u58eb\u4e5f\u80fd\u4e0a\u624b\n\u5f00\u6e90\u7cfb\u7edf\uff0c\u62e5\u6709\u5f3a\u5927\u7684\u751f\u6001\u5708\n\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u5b8c\u7f8e\u7684\u5e73\u53f0\u53ef\u79fb\u690d\u6027\n\u652f\u6301\u9762\u5411\u5bf9\u8c61\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\n\u80fd\u591f\u901a\u8fc7\u8c03\u7528C/C++\u4ee3\u7801\u6269\u5c55\u529f\u80fd\n\u4ee3\u7801\u89c4\u8303\u7a0b\u5ea6\u9ad8\uff0c\u53ef\u8bfb\u6027\u5f3a\n\n\u76ee\u524d\u51e0\u4e2a\u6bd4\u8f83\u6d41\u884c\u7684\u9886\u57df\uff0cPython\u90fd\u6709\u7528\u6b66\u4e4b\u5730\u3002\n\n\u4e91\u57fa\u7840\u8bbe\u65bd - Python / Java / Go\nDevOps - Python / Shell / Ruby / Go\n\u7f51\u7edc\u722c\u866b - Python / PHP / C++\n\u6570\u636e\u5206\u6790\u6316\u6398 - Python / R / Scala / Matlab\n\u673a\u5668\u5b66\u4e60 - Python / R / Java / Lisp\n\n\u4f5c\u4e3a\u4e00\u540dPython\u5f00\u53d1\u8005\uff0c\u4e3b\u8981\u7684\u5c31\u4e1a\u9886\u57df\u5305\u62ec\uff1a\n\nPython\u670d\u52a1\u5668\u540e\u53f0\u5f00\u53d1 / \u6e38\u620f\u670d\u52a1\u5668\u5f00\u53d1 / \u6570\u636e\u63a5\u53e3\u5f00\u53d1\u5de5\u7a0b\u5e08\nPython\u81ea\u52a8\u5316\u8fd0\u7ef4\u5de5\u7a0b\u5e08\nPython\u6570\u636e\u5206\u6790 / \u6570\u636e\u53ef\u89c6\u5316 / \u5927\u6570\u636e\u5de5\u7a0b\u5e08\nPython\u722c\u866b\u5de5\u7a0b\u5e08\nPython\u804a\u5929\u673a\u5668\u4eba\u5f00\u53d1 / \u56fe\u50cf\u8bc6\u522b\u548c\u89c6\u89c9\u7b97\u6cd5 / \u6df1\u5ea6\u5b66\u4e60\u5de5\u7a0b\u5e08\n\n\u4e0b\u56fe\u663e\u793a\u4e86\u4e3b\u8981\u57ce\u5e02Python\u62db\u8058\u9700\u6c42\u91cf\u53ca\u85aa\u8d44\u5f85\u9047\u6392\u884c\u699c\uff08\u622a\u6b62\u52302018\u5e745\u6708\uff09\u3002\n\n\n\n\u7ed9\u521d\u5b66\u8005\u7684\u51e0\u4e2a\u5efa\u8bae\uff1a\n\nMake English as your working language.\nPractice makes perfect.\nAll experience comes from mistakes.\nDon't be one of the leeches.\nEither stand out or kicked out.\n\nDay01~15 - Python\u8bed\u8a00\u57fa\u7840\nDay01 - \u521d\u8bc6Python\n\nPython\u7b80\u4ecb - Python\u7684\u5386\u53f2 / Python\u7684\u4f18\u7f3a\u70b9 / Python\u7684\u5e94\u7528\u9886\u57df\n\u642d\u5efa\u7f16\u7a0b\u73af\u5883 - Windows\u73af\u5883 / Linux\u73af\u5883 / MacOS\u73af\u5883\n\u4ece\u7ec8\u7aef\u8fd0\u884cPython\u7a0b\u5e8f - Hello, world / print\u51fd\u6570 / \u8fd0\u884c\u7a0b\u5e8f\n\u4f7f\u7528IDLE - \u4ea4\u4e92\u5f0f\u73af\u5883(REPL) / \u7f16\u5199\u591a\u884c\u4ee3\u7801 / \u8fd0\u884c\u7a0b\u5e8f / \u9000\u51faIDLE\n\u6ce8\u91ca - \u6ce8\u91ca\u7684\u4f5c\u7528 / \u5355\u884c\u6ce8\u91ca / \u591a\u884c\u6ce8\u91ca\n\nDay02 - \u8bed\u8a00\u5143\u7d20\n\n\u7a0b\u5e8f\u548c\u8fdb\u5236 - \u6307\u4ee4\u548c\u7a0b\u5e8f / \u51af\u8bfa\u4f9d\u66fc\u673a / \u4e8c\u8fdb\u5236\u548c\u5341\u8fdb\u5236 / \u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\n\u53d8\u91cf\u548c\u7c7b\u578b - \u53d8\u91cf\u7684\u547d\u540d / \u53d8\u91cf\u7684\u4f7f\u7528 / input\u51fd\u6570 / \u68c0\u67e5\u53d8\u91cf\u7c7b\u578b / \u7c7b\u578b\u8f6c\u6362\n\u6570\u5b57\u548c\u5b57\u7b26\u4e32 - \u6574\u6570 / \u6d6e\u70b9\u6570 / \u590d\u6570 / \u5b57\u7b26\u4e32 / \u5b57\u7b26\u4e32\u57fa\u672c\u64cd\u4f5c / \u5b57\u7b26\u7f16\u7801\n\u8fd0\u7b97\u7b26 - \u6570\u5b66\u8fd0\u7b97\u7b26 / \u8d4b\u503c\u8fd0\u7b97\u7b26 / \u6bd4\u8f83\u8fd0\u7b97\u7b26 / \u903b\u8f91\u8fd0\u7b97\u7b26 / \u8eab\u4efd\u8fd0\u7b97\u7b26 / \u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\n\u5e94\u7528\u6848\u4f8b - \u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u6210\u6444\u6c0f\u6e29\u5ea6 / \u8f93\u5165\u5706\u7684\u534a\u5f84\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef / \u8f93\u5165\u5e74\u4efd\u5224\u65ad\u662f\u5426\u662f\u95f0\u5e74\n\nDay03 - \u5206\u652f\u7ed3\u6784\n\n\u5206\u652f\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f - \u6761\u4ef6 / \u7f29\u8fdb / \u4ee3\u7801\u5757 / \u6d41\u7a0b\u56fe\nif\u8bed\u53e5 - \u7b80\u5355\u7684if / if-else\u7ed3\u6784 / if-elif-else\u7ed3\u6784 / \u5d4c\u5957\u7684if\n\u5e94\u7528\u6848\u4f8b - \u7528\u6237\u8eab\u4efd\u9a8c\u8bc1 / \u82f1\u5236\u5355\u4f4d\u4e0e\u516c\u5236\u5355\u4f4d\u4e92\u6362 / \u63b7\u9ab0\u5b50\u51b3\u5b9a\u505a\u4ec0\u4e48 / \u767e\u5206\u5236\u6210\u7ee9\u8f6c\u7b49\u7ea7\u5236 / \u5206\u6bb5\u51fd\u6570\u6c42\u503c / \u8f93\u5165\u4e09\u6761\u8fb9\u7684\u957f\u5ea6\u5982\u679c\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u5c31\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\n\nDay04 - \u5faa\u73af\u7ed3\u6784\n\n\u5faa\u73af\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f - \u6761\u4ef6 / \u7f29\u8fdb / \u4ee3\u7801\u5757 / \u6d41\u7a0b\u56fe\nwhile\u5faa\u73af - \u57fa\u672c\u7ed3\u6784 / break\u8bed\u53e5 / continue\u8bed\u53e5\nfor\u5faa\u73af - \u57fa\u672c\u7ed3\u6784 / range\u7c7b\u578b / \u5faa\u73af\u4e2d\u7684\u5206\u652f\u7ed3\u6784 / \u5d4c\u5957\u7684\u5faa\u73af / \u63d0\u524d\u7ed3\u675f\u7a0b\u5e8f\n\u5e94\u7528\u6848\u4f8b - 1~100\u6c42\u548c / \u5224\u65ad\u7d20\u6570 / \u731c\u6570\u5b57\u6e38\u620f / \u6253\u5370\u4e5d\u4e5d\u8868 / \u6253\u5370\u4e09\u89d2\u5f62\u56fe\u6848 / \u7334\u5b50\u5403\u6843 / \u767e\u94b1\u767e\u9e21\n\nDay05 - \u6784\u9020\u7a0b\u5e8f\u903b\u8f91\n\n\u7ecf\u5178\u6848\u4f8b\uff1a\u6c34\u4ed9\u82b1\u6570 / \u767e\u94b1\u767e\u9e21 / Craps\u8d4c\u535a\u6e38\u620f\n\u7ec3\u4e60\u9898\u76ee\uff1a\u6590\u6ce2\u90a3\u5951\u6570\u5217 / \u5b8c\u7f8e\u6570 / \u7d20\u6570\n\nDay06 - \u51fd\u6570\u548c\u6a21\u5757\u7684\u4f7f\u7528\n\n\u51fd\u6570\u7684\u4f5c\u7528 - \u4ee3\u7801\u7684\u574f\u5473\u9053 / \u7528\u51fd\u6570\u5c01\u88c5\u529f\u80fd\u6a21\u5757\n\u5b9a\u4e49\u51fd\u6570 - def\u8bed\u53e5 / \u51fd\u6570\u540d / \u53c2\u6570\u5217\u8868 / return\u8bed\u53e5 / \u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\n\u8c03\u7528\u51fd\u6570 - Python\u5185\u7f6e\u51fd\u6570 /  \u5bfc\u5165\u6a21\u5757\u548c\u51fd\u6570\n\u51fd\u6570\u7684\u53c2\u6570 - \u9ed8\u8ba4\u53c2\u6570 / \u53ef\u53d8\u53c2\u6570 / \u5173\u952e\u5b57\u53c2\u6570 / \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\n\u51fd\u6570\u7684\u8fd4\u56de\u503c - \u6ca1\u6709\u8fd4\u56de\u503c  / \u8fd4\u56de\u5355\u4e2a\u503c / \u8fd4\u56de\u591a\u4e2a\u503c\n\u4f5c\u7528\u57df\u95ee\u9898 - \u5c40\u90e8\u4f5c\u7528\u57df / \u5d4c\u5957\u4f5c\u7528\u57df / \u5168\u5c40\u4f5c\u7528\u57df / \u5185\u7f6e\u4f5c\u7528\u57df / \u548c\u4f5c\u7528\u57df\u76f8\u5173\u7684\u5173\u952e\u5b57\n\u7528\u6a21\u5757\u7ba1\u7406\u51fd\u6570 - \u6a21\u5757\u7684\u6982\u5ff5 / \u7528\u81ea\u5b9a\u4e49\u6a21\u5757\u7ba1\u7406\u51fd\u6570 / \u547d\u540d\u51b2\u7a81\u7684\u65f6\u5019\u4f1a\u600e\u6837\uff08\u540c\u4e00\u4e2a\u6a21\u5757\u548c\u4e0d\u540c\u7684\u6a21\u5757\uff09\n\nDay07 - \u5b57\u7b26\u4e32\u548c\u5e38\u7528\u6570\u636e\u7ed3\u6784\n\n\u5b57\u7b26\u4e32\u7684\u4f7f\u7528 - \u8ba1\u7b97\u957f\u5ea6 / \u4e0b\u6807\u8fd0\u7b97 / \u5207\u7247 / \u5e38\u7528\u65b9\u6cd5\n\u5217\u8868\u57fa\u672c\u7528\u6cd5 - \u5b9a\u4e49\u5217\u8868 / \u7528\u4e0b\u8868\u8bbf\u95ee\u5143\u7d20 / \u4e0b\u6807\u8d8a\u754c / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 / \u4fee\u6539\u5143\u7d20 / \u5207\u7247 / \u5faa\u73af\u904d\u5386\n\u5217\u8868\u5e38\u7528\u64cd\u4f5c - \u8fde\u63a5 / \u590d\u5236(\u590d\u5236\u5143\u7d20\u548c\u590d\u5236\u6570\u7ec4) / \u957f\u5ea6 / \u6392\u5e8f / \u5012\u8f6c / \u67e5\u627e\n\u751f\u6210\u5217\u8868 - \u4f7f\u7528range\u521b\u5efa\u6570\u5b57\u5217\u8868 / \u751f\u6210\u8868\u8fbe\u5f0f / \u751f\u6210\u5668\n\u5143\u7ec4\u7684\u4f7f\u7528 - \u5b9a\u4e49\u5143\u7ec4 / \u4f7f\u7528\u5143\u7ec4\u4e2d\u7684\u503c / \u4fee\u6539\u5143\u7ec4\u53d8\u91cf / \u5143\u7ec4\u548c\u5217\u8868\u8f6c\u6362\n\u96c6\u5408\u57fa\u672c\u7528\u6cd5 - \u96c6\u5408\u548c\u5217\u8868\u7684\u533a\u522b /  \u521b\u5efa\u96c6\u5408 / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 /  \u6e05\u7a7a\n\u96c6\u5408\u5e38\u7528\u64cd\u4f5c - \u4ea4\u96c6 / \u5e76\u96c6 / \u5dee\u96c6 / \u5bf9\u79f0\u5dee / \u5b50\u96c6 / \u8d85\u96c6\n\u5b57\u5178\u7684\u57fa\u672c\u7528\u6cd5 - \u5b57\u5178\u7684\u7279\u70b9 / \u521b\u5efa\u5b57\u5178 / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 / \u53d6\u503c / \u6e05\u7a7a\n\u5b57\u5178\u5e38\u7528\u64cd\u4f5c - keys()\u65b9\u6cd5 / values()\u65b9\u6cd5 / items()\u65b9\u6cd5 / setdefault()\u65b9\u6cd5\n\u57fa\u7840\u7ec3\u4e60 - \u8dd1\u9a6c\u706f\u6548\u679c / \u5217\u8868\u627e\u6700\u5927\u5143\u7d20 / \u7edf\u8ba1\u8003\u8bd5\u6210\u7ee9\u7684\u5e73\u5747\u5206 / Fibonacci\u6570\u5217 / \u6768\u8f89\u4e09\u89d2\n\u7efc\u5408\u6848\u4f8b - \u53cc\u8272\u7403\u9009\u53f7 / \u4e95\u5b57\u68cb\n\nDay08 - \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u57fa\u7840\n\n\u7c7b\u548c\u5bf9\u8c61 - \u4ec0\u4e48\u662f\u7c7b / \u4ec0\u4e48\u662f\u5bf9\u8c61 / \u9762\u5411\u5bf9\u8c61\u5176\u4ed6\u76f8\u5173\u6982\u5ff5\n\u5b9a\u4e49\u7c7b - \u57fa\u672c\u7ed3\u6784 / \u5c5e\u6027\u548c\u65b9\u6cd5 / \u6784\u9020\u5668 / \u6790\u6784\u5668 / __str__\u65b9\u6cd5\n\u4f7f\u7528\u5bf9\u8c61 - \u521b\u5efa\u5bf9\u8c61 / \u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\n\u9762\u5411\u5bf9\u8c61\u7684\u56db\u5927\u652f\u67f1 - \u62bd\u8c61 / \u5c01\u88c5 / \u7ee7\u627f / \u591a\u6001\n\u57fa\u7840\u7ec3\u4e60 - \u5b9a\u4e49\u5b66\u751f\u7c7b / \u5b9a\u4e49\u65f6\u949f\u7c7b / \u5b9a\u4e49\u56fe\u5f62\u7c7b / \u5b9a\u4e49\u6c7d\u8f66\u7c7b\n\nDay09 - \u9762\u5411\u5bf9\u8c61\u8fdb\u9636\n\n\u5c5e\u6027 - \u7c7b\u5c5e\u6027 / \u5b9e\u4f8b\u5c5e\u6027 / \u5c5e\u6027\u8bbf\u95ee\u5668 / \u5c5e\u6027\u4fee\u6539\u5668 / \u5c5e\u6027\u5220\u9664\u5668 / \u4f7f\u7528__slots__\n\u7c7b\u4e2d\u7684\u65b9\u6cd5 - \u5b9e\u4f8b\u65b9\u6cd5 / \u7c7b\u65b9\u6cd5 / \u9759\u6001\u65b9\u6cd5\n\u8fd0\u7b97\u7b26\u91cd\u8f7d - __add__ / __sub__ / __or__ /__getitem__ / __setitem__ / __len__ / __repr__ / __gt__ / __lt__ / __le__ / __ge__ / __eq__ / __ne__ / __contains__\n\u7c7b(\u7684\u5bf9\u8c61)\u4e4b\u95f4\u7684\u5173\u7cfb - \u5173\u8054 / \u7ee7\u627f / \u4f9d\u8d56\n\u7ee7\u627f\u548c\u591a\u6001 - \u4ec0\u4e48\u662f\u7ee7\u627f / \u7ee7\u627f\u7684\u8bed\u6cd5 / \u8c03\u7528\u7236\u7c7b\u65b9\u6cd5 / \u65b9\u6cd5\u91cd\u5199 / \u7c7b\u578b\u5224\u5b9a / \u591a\u91cd\u7ee7\u627f / \u83f1\u5f62\u7ee7\u627f(\u94bb\u77f3\u7ee7\u627f)\u548cC3\u7b97\u6cd5\n\u7efc\u5408\u6848\u4f8b - \u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf / \u56fe\u4e66\u81ea\u52a8\u6298\u6263\u7cfb\u7edf / \u81ea\u5b9a\u4e49\u5206\u6570\u7c7b\n\nDay10 - \u56fe\u5f62\u7528\u6237\u754c\u9762\u548c\u6e38\u620f\u5f00\u53d1\n\n\u4f7f\u7528tkinter\u5f00\u53d1GUI\u7a0b\u5e8f\n\u4f7f\u7528pygame\u4e09\u65b9\u5e93\u5f00\u53d1\u6e38\u620f\u5e94\u7528\n\u201c\u5927\u7403\u5403\u5c0f\u7403\u201d\u6e38\u620f\n\nDay11 - \u6587\u4ef6\u548c\u5f02\u5e38\n\n\u8bfb\u6587\u4ef6 - \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6 / \u9010\u884c\u8bfb\u53d6 / \u6587\u4ef6\u8def\u5f84\n\u5199\u6587\u4ef6 - \u8986\u76d6\u5199\u5165 / \u8ffd\u52a0\u5199\u5165 / \u6587\u672c\u6587\u4ef6 / \u4e8c\u8fdb\u5236\u6587\u4ef6\n\u5f02\u5e38\u5904\u7406 - \u5f02\u5e38\u673a\u5236\u7684\u91cd\u8981\u6027 / try-except\u4ee3\u7801\u5757 / else\u4ee3\u7801\u5757 / finally\u4ee3\u7801\u5757 / \u5185\u7f6e\u5f02\u5e38\u7c7b\u578b / \u5f02\u5e38\u6808 / raise\u8bed\u53e5\n\u6570\u636e\u6301\u4e45\u5316 - CSV\u6587\u4ef6\u6982\u8ff0 / csv\u6a21\u5757\u7684\u5e94\u7528 / JSON\u6570\u636e\u683c\u5f0f / json\u6a21\u5757\u7684\u5e94\u7528\n\nDay12 - \u5b57\u7b26\u4e32\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\n\n\u5b57\u7b26\u4e32\u9ad8\u7ea7\u64cd\u4f5c - \u8f6c\u4e49\u5b57\u7b26 / \u539f\u59cb\u5b57\u7b26\u4e32 / \u591a\u884c\u5b57\u7b26\u4e32 / in\u548c not in\u8fd0\u7b97\u7b26 / is\u5f00\u5934\u7684\u65b9\u6cd5 / join\u548csplit\u65b9\u6cd5 / strip\u76f8\u5173\u65b9\u6cd5 / pyperclip\u6a21\u5757 / \u4e0d\u53d8\u5b57\u7b26\u4e32\u548c\u53ef\u53d8\u5b57\u7b26\u4e32 / StringIO\u7684\u4f7f\u7528\n\u6b63\u5219\u8868\u8fbe\u5f0f\u5165\u95e8 - \u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4f5c\u7528 / \u5143\u5b57\u7b26 / \u8f6c\u4e49 / \u91cf\u8bcd / \u5206\u7ec4 / \u96f6\u5bbd\u65ad\u8a00 /\u8d2a\u5a6a\u5339\u914d\u4e0e\u60f0\u6027\u5339\u914d\u61d2\u60f0 / \u4f7f\u7528re\u6a21\u5757\u5b9e\u73b0\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\uff08\u5339\u914d\u3001\u641c\u7d22\u3001\u66ff\u6362\u3001\u6355\u83b7\uff09\n\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f - re\u6a21\u5757 / compile\u51fd\u6570 / group\u548cgroups\u65b9\u6cd5 / match\u65b9\u6cd5 / search\u65b9\u6cd5 / findall\u548cfinditer\u65b9\u6cd5 / sub\u548csubn\u65b9\u6cd5 / split\u65b9\u6cd5\n\u5e94\u7528\u6848\u4f8b - \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u9a8c\u8bc1\u8f93\u5165\u7684\u5b57\u7b26\u4e32\n\nDay13 - \u8fdb\u7a0b\u548c\u7ebf\u7a0b\n\n\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u6982\u5ff5 - \u4ec0\u4e48\u662f\u8fdb\u7a0b / \u4ec0\u4e48\u662f\u7ebf\u7a0b / \u591a\u7ebf\u7a0b\u7684\u5e94\u7528\u573a\u666f\n\u4f7f\u7528\u8fdb\u7a0b - fork\u51fd\u6570 / multiprocessing\u6a21\u5757 / \u8fdb\u7a0b\u6c60 / \u8fdb\u7a0b\u95f4\u901a\u4fe1\n\u4f7f\u7528\u7ebf\u7a0b - thread\u6a21\u5757 / threading\u6a21\u5757 / Thread\u7c7b / Lock\u7c7b / Condition\u7c7b / \u7ebf\u7a0b\u6c60\n\nDay14 - \u7f51\u7edc\u7f16\u7a0b\u5165\u95e8\u548c\u7f51\u7edc\u5e94\u7528\u5f00\u53d1\n\n\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840 - \u8ba1\u7b97\u673a\u7f51\u7edc\u53d1\u5c55\u53f2 / \u201cTCP-IP\u201d\u6a21\u578b / IP\u5730\u5740 / \u7aef\u53e3 / \u534f\u8bae / \u5176\u4ed6\u76f8\u5173\u6982\u5ff5\n\u7f51\u7edc\u5e94\u7528\u6a21\u5f0f - \u201c\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u201d\u6a21\u5f0f / \u201c\u6d4f\u89c8\u5668-\u670d\u52a1\u5668\u201d\u6a21\u5f0f\n\u57fa\u4e8eHTTP\u534f\u8bae\u8bbf\u95ee\u7f51\u7edc\u8d44\u6e90 - \u7f51\u7edcAPI\u6982\u8ff0 / \u8bbf\u95eeURL / requests\u6a21\u5757 / \u89e3\u6790JSON\u683c\u5f0f\u6570\u636e\nPython\u7f51\u7edc\u7f16\u7a0b - \u5957\u63a5\u5b57\u7684\u6982\u5ff5 / socket\u6a21\u5757 /  socket\u51fd\u6570 / \u521b\u5efaTCP\u670d\u52a1\u5668 / \u521b\u5efaTCP\u5ba2\u6237\u7aef / \u521b\u5efaUDP\u670d\u52a1\u5668 / \u521b\u5efaUDP\u5ba2\u6237\u7aef / SocketServer\u6a21\u5757\n\u7535\u5b50\u90ae\u4ef6 - SMTP\u534f\u8bae / POP3\u534f\u8bae / IMAP\u534f\u8bae / smtplib\u6a21\u5757 / poplib\u6a21\u5757 / imaplib\u6a21\u5757\n\u77ed\u4fe1\u670d\u52a1 - \u8c03\u7528\u77ed\u4fe1\u670d\u52a1\u7f51\u5173\n\nDay15 - \u56fe\u50cf\u548c\u6587\u6863\u5904\u7406\n\n\u7528Pillow\u5904\u7406\u56fe\u7247 - \u56fe\u7247\u8bfb\u5199 / \u56fe\u7247\u5408\u6210 / \u51e0\u4f55\u53d8\u6362 / \u8272\u5f69\u8f6c\u6362 / \u6ee4\u955c\u6548\u679c\n\u8bfb\u5199Word\u6587\u6863 - \u6587\u672c\u5185\u5bb9\u7684\u5904\u7406 / \u6bb5\u843d / \u9875\u7709\u548c\u9875\u811a / \u6837\u5f0f\u7684\u5904\u7406\n\u8bfb\u5199Excel\u6587\u4ef6 - xlrd\u6a21\u5757 / xlwt\u6a21\u5757\n\u751f\u6210PDF\u6587\u4ef6 - pypdf2\u6a21\u5757 / reportlab\u6a21\u5757\n\nDay16~Day20 - Python\u8bed\u8a00\u8fdb\u9636 \n\n\u5e38\u7528\u6570\u636e\u7ed3\u6784\n\u51fd\u6570\u7684\u9ad8\u7ea7\u7528\u6cd5 - \u201c\u4e00\u7b49\u516c\u6c11\u201d / \u9ad8\u9636\u51fd\u6570 / Lambda\u51fd\u6570 / \u4f5c\u7528\u57df\u548c\u95ed\u5305 / \u88c5\u9970\u5668\n\u9762\u5411\u5bf9\u8c61\u9ad8\u7ea7\u77e5\u8bc6 - \u201c\u4e09\u5927\u652f\u67f1\u201d / \u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb / \u5783\u573e\u56de\u6536 / \u9b54\u672f\u5c5e\u6027\u548c\u65b9\u6cd5 / \u6df7\u5165 / \u5143\u7c7b / \u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u539f\u5219 / GoF\u8bbe\u8ba1\u6a21\u5f0f\n\u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668 - \u76f8\u5173\u9b54\u672f\u65b9\u6cd5 / \u521b\u5efa\u751f\u6210\u5668\u7684\u4e24\u79cd\u65b9\u5f0f /\n\u5e76\u53d1\u548c\u5f02\u6b65\u7f16\u7a0b - \u591a\u7ebf\u7a0b / \u591a\u8fdb\u7a0b / \u5f02\u6b65IO / async\u548cawait\n\nDay21~30 - Web\u524d\u7aef\u5165\u95e8\n\n\u7528HTML\u6807\u7b7e\u627f\u8f7d\u9875\u9762\u5185\u5bb9\n\u7528CSS\u6e32\u67d3\u9875\u9762\n\u7528JavaScript\u5904\u7406\u4ea4\u4e92\u5f0f\u884c\u4e3a\njQuery\u5165\u95e8\u548c\u63d0\u9ad8\nVue.js\u5165\u95e8\nElement\u7684\u4f7f\u7528\nBootstrap\u7684\u4f7f\u7528\n\nDay31~35 - \u73a9\u8f6cLinux\u64cd\u4f5c\u7cfb\u7edf\n\n\u64cd\u4f5c\u7cfb\u7edf\u53d1\u5c55\u53f2\u548cLinux\u6982\u8ff0\nLinux\u57fa\u7840\u547d\u4ee4\nLinux\u4e2d\u7684\u5b9e\u7528\u7a0b\u5e8f\nLinux\u7684\u6587\u4ef6\u7cfb\u7edf\nVim\u7f16\u8f91\u5668\u7684\u5e94\u7528\n\u73af\u5883\u53d8\u91cf\u548cShell\u7f16\u7a0b\n\u8f6f\u4ef6\u7684\u5b89\u88c5\u548c\u670d\u52a1\u7684\u914d\u7f6e\n\u7f51\u7edc\u8bbf\u95ee\u548c\u7ba1\u7406\n\u5176\u4ed6\u76f8\u5173\u5185\u5bb9\n\nDay36~40 - \u6570\u636e\u5e93\u57fa\u7840\u548c\u8fdb\u9636\n\n\u5173\u7cfb\u578b\u6570\u636e\u5e93MySQL\n\n\u5173\u7cfb\u578b\u6570\u636e\u5e93\u6982\u8ff0\nMySQL\u7684\u5b89\u88c5\u548c\u4f7f\u7528\nSQL\u7684\u4f7f\u7528\n\nDDL - \u6570\u636e\u5b9a\u4e49\u8bed\u8a00 - create / drop / alter\nDML - \u6570\u636e\u64cd\u4f5c\u8bed\u8a00 - insert / delete / update / select\nDCL - \u6570\u636e\u63a7\u5236\u8bed\u8a00 - grant / revoke\n\n\n\u76f8\u5173\u77e5\u8bc6\n\n\u8303\u5f0f\u7406\u8bba - \u8bbe\u8ba1\u4e8c\u7ef4\u8868\u7684\u6307\u5bfc\u601d\u60f3\n\u6570\u636e\u5b8c\u6574\u6027\n\u6570\u636e\u4e00\u81f4\u6027\n\n\n\u5728Python\u4e2d\u64cd\u4f5cMySQL\n\n\nNoSQL\u5165\u95e8\n\nNoSQL\u6982\u8ff0\nRedis\u6982\u8ff0\nMongo\u6982\u8ff0\n\n\n\nDay41~55 - \u5b9e\u6218Django\nDay41 - \u5feb\u901f\u4e0a\u624b\n\nWeb\u5e94\u7528\u5de5\u4f5c\u539f\u7406\u548cHTTP\u534f\u8bae\nDjango\u6846\u67b6\u6982\u8ff0\n5\u5206\u949f\u5feb\u901f\u4e0a\u624b\n\u4f7f\u7528\u89c6\u56fe\u6a21\u677f\n\nDay42 - \u6df1\u5165\u6a21\u578b\n\n\u5173\u7cfb\u578b\u6570\u636e\u5e93\u914d\u7f6e\n\u7ba1\u7406\u540e\u53f0\u7684\u4f7f\u7528\n\u4f7f\u7528ORM\u5b8c\u6210\u5bf9\u6a21\u578b\u7684CRUD\u64cd\u4f5c\nDjango\u6a21\u578b\u6700\u4f73\u5b9e\u8df5\n\u6a21\u578b\u5b9a\u4e49\u53c2\u8003\n\nDay43 - \u9759\u6001\u8d44\u6e90\u548cAjax\u8bf7\u6c42\n\n\u52a0\u8f7d\u9759\u6001\u8d44\u6e90\n\u7528Ajax\u8bf7\u6c42\u83b7\u53d6\u6570\u636e\n\nDay44 - \u8868\u5355\u7684\u5e94\u7528\n\n\u8868\u5355\u548c\u8868\u5355\u63a7\u4ef6\n\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u548cCSRF\u4ee4\u724c\nForm\u548cModelForm\n\u8868\u5355\u9a8c\u8bc1\n\nDay45 - Cookie\u548cSession\n\n\u5b9e\u73b0\u7528\u6237\u8ddf\u8e2a\ncookie\u548csession\u7684\u5173\u7cfb\nDjango\u6846\u67b6\u5bf9session\u7684\u652f\u6301\n\u89c6\u56fe\u51fd\u6570\u4e2d\u7684cookie\u8bfb\u5199\u64cd\u4f5c\n\nDay46 - \u62a5\u8868\u548c\u65e5\u5fd7\n\n\u901a\u8fc7HttpResponse\u4fee\u6539\u54cd\u5e94\u5934\n\u4f7f\u7528StreamingHttpResponse\u5904\u7406\u5927\u6587\u4ef6\n\u4f7f\u7528xlwt\u751f\u6210Excel\u62a5\u8868\n\u4f7f\u7528reportlab\u751f\u6210PDF\u62a5\u8868\n\u4f7f\u7528ECharts\u751f\u6210\u524d\u7aef\u56fe\u8868\n\u914d\u7f6e\u65e5\u5fd7\u548cDjango-Debug-Toolbar\n\nDay47 - \u4e2d\u95f4\u4ef6\u7684\u5e94\u7528\n\n\u4ec0\u4e48\u662f\u4e2d\u95f4\u4ef6\nDjango\u6846\u67b6\u5185\u7f6e\u7684\u4e2d\u95f4\u4ef6\n\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u53ca\u5176\u5e94\u7528\u573a\u666f\n\nDay48 - \u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1\u5165\u95e8\n\n\u8fd4\u56deJSON\u683c\u5f0f\u7684\u6570\u636e\n\u7528Vue.js\u6e32\u67d3\u9875\u9762\n\nDay49 - RESTful\u67b6\u6784\u548cDRF\u5165\u95e8\nDay50 - RESTful\u67b6\u6784\u548cDRF\u8fdb\u9636\nDay51 - \u4f7f\u7528\u7f13\u5b58\n\n\n\u7f51\u7ad9\u4f18\u5316\u7b2c\u4e00\u5b9a\u5f8b\n\n\n\u5728Django\u9879\u76ee\u4e2d\u4f7f\u7528Redis\u63d0\u4f9b\u7f13\u5b58\u670d\u52a1\n\n\n\u5728\u89c6\u56fe\u51fd\u6570\u4e2d\u8bfb\u5199\u7f13\u5b58\n\n\n\u4f7f\u7528\u88c5\u9970\u5668\u5b9e\u73b0\u9875\u9762\u7f13\u5b58\n\n\n\u4e3a\u6570\u636e\u63a5\u53e3\u63d0\u4f9b\u7f13\u5b58\u670d\u52a1\n\n\nDay52 - \u6587\u4ef6\u4e0a\u4f20\u548c\u5bcc\u6587\u672c\u7f16\u8f91\n\n\u6587\u4ef6\u4e0a\u4f20\u8868\u5355\u63a7\u4ef6\u548c\u56fe\u7247\u6587\u4ef6\u9884\u89c8\n\u670d\u52a1\u5668\u7aef\u5982\u4f55\u5904\u7406\u4e0a\u4f20\u7684\u6587\u4ef6\n\u5bcc\u6587\u672c\u7f16\u8f91\u5668\u6982\u8ff0\nwangEditor\u7684\u4f7f\u7528\n\nDay53 - \u77ed\u4fe1\u548c\u90ae\u4ef6\n\n\u5e38\u7528\u77ed\u4fe1\u7f51\u5173\u5e73\u53f0\u4ecb\u7ecd\n\u4f7f\u7528\u87ba\u4e1d\u5e3d\u53d1\u9001\u77ed\u4fe1\nDjango\u6846\u67b6\u5bf9\u90ae\u4ef6\u670d\u52a1\u7684\u652f\u6301\n\nDay54 - \u5f02\u6b65\u4efb\u52a1\u548c\u5b9a\u65f6\u4efb\u52a1\n\n\u7f51\u7ad9\u4f18\u5316\u7b2c\u4e8c\u5b9a\u5f8b\n\u914d\u7f6e\u6d88\u606f\u961f\u5217\u670d\u52a1\n\u5728\u9879\u76ee\u4e2d\u4f7f\u7528celery\u5b9e\u73b0\u4efb\u52a1\u5f02\u6b65\u5316\n\u5728\u9879\u76ee\u4e2d\u4f7f\u7528celery\u5b9e\u73b0\u5b9a\u65f6\u4efb\u52a1\n\nDay55 - \u5355\u5143\u6d4b\u8bd5\u548c\u9879\u76ee\u4e0a\u7ebf\n\nPython\u4e2d\u7684\u5355\u5143\u6d4b\u8bd5\nDjango\u6846\u67b6\u5bf9\u5355\u5143\u6d4b\u8bd5\u7684\u652f\u6301\n\u4f7f\u7528\u7248\u672c\u63a7\u5236\u7cfb\u7edf\n\u914d\u7f6e\u548c\u4f7f\u7528uWSGI\n\u52a8\u9759\u5206\u79bb\u548cNginx\u914d\u7f6e\n\u914d\u7f6eHTTPS\n\nDay56~60 - \u5b9e\u6218Flask\nDay56 - Flask\u5165\u95e8\nDay57 - \u6a21\u677f\u7684\u4f7f\u7528\nDay58 - \u8868\u5355\u7684\u5904\u7406\nDay59 - \u6570\u636e\u5e93\u64cd\u4f5c\nDay60 - \u9879\u76ee\u5b9e\u6218\nDay61~65 - \u5b9e\u6218Tornado\nDay61 - \u9884\u5907\u77e5\u8bc6\n\n\u5e76\u53d1\u7f16\u7a0b\nI/O\u6a21\u5f0f\u548c\u4e8b\u4ef6\u9a71\u52a8\n\nDay62 - Tornado\u5165\u95e8\n\nTornado\u6982\u8ff0\n5\u5206\u949f\u4e0a\u624bTornado\n\u8def\u7531\u89e3\u6790\n\u8bf7\u6c42\u5904\u7406\u5668\n\nDay63 - \u5f02\u6b65\u5316\n\naiomysql\u548caioredis\u7684\u4f7f\u7528\n\nDay64 - WebSocket\u7684\u5e94\u7528\n\nWebSocket\u7b80\u4ecb\nWebSocket\u670d\u52a1\u5668\u7aef\u7f16\u7a0b\nWebSocket\u5ba2\u6237\u7aef\u7f16\u7a0b\n\u9879\u76ee\uff1aWeb\u804a\u5929\u5ba4\n\nDay65 - \u9879\u76ee\u5b9e\u6218\n\n\u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1\u548c\u63a5\u53e3\u6587\u6863\u7684\u64b0\u5199\n\u4f7f\u7528Vue.js\u5b9e\u73b0\u524d\u7aef\u6e32\u67d3\n\u4f7f\u7528ECharts\u5b9e\u73b0\u62a5\u8868\u529f\u80fd\n\u4f7f\u7528WebSocket\u5b9e\u73b0\u63a8\u9001\u670d\u52a1\n\nDay66~75 - \u722c\u866b\u5f00\u53d1\nDay66 - \u7f51\u7edc\u722c\u866b\u548c\u76f8\u5173\u5de5\u5177\n\n\u7f51\u7edc\u722c\u866b\u7684\u6982\u5ff5\u53ca\u5176\u5e94\u7528\u9886\u57df\n\u7f51\u7edc\u722c\u866b\u7684\u5408\u6cd5\u6027\u63a2\u8ba8\n\u5f00\u53d1\u7f51\u7edc\u722c\u866b\u7684\u76f8\u5173\u5de5\u5177\n\u4e00\u4e2a\u722c\u866b\u7a0b\u5e8f\u7684\u6784\u6210\n\nDay67 - \u6570\u636e\u91c7\u96c6\u548c\u89e3\u6790\n\n\u6570\u636e\u91c7\u96c6\u7684\u6807\u51c6\u548c\u4e09\u65b9\u5e93\n\u9875\u9762\u89e3\u6790\u7684\u4e09\u79cd\u65b9\u5f0f\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\u89e3\u6790 / XPath\u89e3\u6790 / CSS\u9009\u62e9\u5668\u89e3\u6790\n\nDay68 - \u5b58\u50a8\u6570\u636e\n\n\u5982\u4f55\u5b58\u50a8\u6d77\u91cf\u6570\u636e\n\u5b9e\u73b0\u6570\u636e\u7684\u7f13\u5b58\n\nDay69 - \u5e76\u53d1\u4e0b\u8f7d\n\n\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\n\u5f02\u6b65I/O\u548c\u534f\u7a0b\nasync\u548cawait\u5173\u952e\u5b57\u7684\u4f7f\u7528\n\u4e09\u65b9\u5e93aiohttp\u7684\u5e94\u7528\n\nDay70 - \u89e3\u6790\u52a8\u6001\u5185\u5bb9\n\nJavaScript\u9006\u5411\u5de5\u7a0b\n\u4f7f\u7528Selenium\u83b7\u53d6\u52a8\u6001\u5185\u5bb9\n\nDay71 - \u8868\u5355\u4ea4\u4e92\u548c\u9a8c\u8bc1\u7801\u5904\u7406\n\n\u81ea\u52a8\u63d0\u4ea4\u8868\u5355\nCookie\u6c60\u7684\u5e94\u7528\n\u9a8c\u8bc1\u7801\u5904\u7406\n\nDay72 - Scrapy\u5165\u95e8\n\nScrapy\u722c\u866b\u6846\u67b6\u6982\u8ff0\n\u5b89\u88c5\u548c\u4f7f\u7528Scrapy\n\nDay73 - Scrapy\u9ad8\u7ea7\u5e94\u7528\n\nSpider\u7684\u7528\u6cd5\n\u4e2d\u95f4\u4ef6\u7684\u5e94\u7528\uff1a\u4e0b\u8f7d\u4e2d\u95f4\u4ef6 / \u8718\u86db\u4e2d\u95f4\u4ef6\nScrapy\u5bf9\u63a5Selenium\u6293\u53d6\u52a8\u6001\u5185\u5bb9\nScrapy\u90e8\u7f72\u5230Docker\n\nDay74 - Scrapy\u5206\u5e03\u5f0f\u5b9e\u73b0\n\n\u5206\u5e03\u5f0f\u722c\u866b\u7684\u539f\u7406\nScrapy\u5206\u5e03\u5f0f\u5b9e\u73b0\n\u4f7f\u7528Scrapyd\u5b9e\u73b0\u5206\u5e03\u5f0f\u90e8\u7f72\n\nDay75 - \u722c\u866b\u9879\u76ee\u5b9e\u6218\n\n\u722c\u53d6\u62db\u8058\u7f51\u7ad9\u6570\u636e\n\u722c\u53d6\u623f\u5730\u4ea7\u884c\u4e1a\u6570\u636e\n\u722c\u53d6\u4e8c\u624b\u8f66\u4ea4\u6613\u5e73\u53f0\u6570\u636e\n\nDay76~90 - \u6570\u636e\u5904\u7406\u548c\u673a\u5668\u5b66\u4e60\nDay76 - \u673a\u5668\u5b66\u4e60\u57fa\u7840\nDay77 - Pandas\u7684\u5e94\u7528\nDay78 - NumPy\u548cSciPy\u7684\u5e94\u7528\nDay79 - Matplotlib\u548c\u6570\u636e\u53ef\u89c6\u5316\nDay80 - k\u6700\u8fd1\u90bb(KNN)\u5206\u7c7b\nDay81 - \u51b3\u7b56\u6811\nDay82 - \u8d1d\u53f6\u65af\u5206\u7c7b\nDay83 - \u652f\u6301\u5411\u91cf\u673a(SVM)\nDay84 - K-\u5747\u503c\u805a\u7c7b\nDay85 - \u56de\u5f52\u5206\u6790\nDay86 - \u5927\u6570\u636e\u5206\u6790\u5165\u95e8\nDay87 - \u5927\u6570\u636e\u5206\u6790\u8fdb\u9636\nDay88 - Tensorflow\u5165\u95e8\nDay89 - Tensorflow\u5b9e\u6218\nDay90 - \u63a8\u8350\u7cfb\u7edf\nDay91~100 - \u56e2\u961f\u9879\u76ee\u5f00\u53d1\n\u7b2c91\u5929\uff1a\u56e2\u961f\u9879\u76ee\u5f00\u53d1\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\n\n\n\u8f6f\u4ef6\u8fc7\u7a0b\u6a21\u578b\n\n\n\u7ecf\u5178\u8fc7\u7a0b\u6a21\u578b\uff08\u7011\u5e03\u6a21\u578b\uff09\n\n\u53ef\u884c\u6027\u5206\u6790\uff08\u7814\u7a76\u505a\u8fd8\u662f\u4e0d\u505a\uff09\uff0c\u8f93\u51fa\u300a\u53ef\u884c\u6027\u5206\u6790\u62a5\u544a\u300b\u3002\n\u9700\u6c42\u5206\u6790\uff08\u7814\u7a76\u505a\u4ec0\u4e48\uff09\uff0c\u8f93\u51fa\u300a\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u300b\u548c\u4ea7\u54c1\u754c\u9762\u539f\u578b\u56fe\u3002\n\u6982\u8981\u8bbe\u8ba1\u548c\u8be6\u7ec6\u8bbe\u8ba1\uff0c\u8f93\u51fa\u6982\u5ff5\u6a21\u578b\u56fe\uff08ER\u56fe\uff09\u3001\u7269\u7406\u6a21\u578b\u56fe\u3001\u7c7b\u56fe\u3001\u65f6\u5e8f\u56fe\u7b49\u3002\n\u7f16\u7801 / \u6d4b\u8bd5\u3002\n\u4e0a\u7ebf / \u7ef4\u62a4\u3002\n\n\u7011\u5e03\u6a21\u578b\u6700\u5927\u7684\u7f3a\u70b9\u662f\u65e0\u6cd5\u62e5\u62b1\u9700\u6c42\u53d8\u5316\uff0c\u6574\u5957\u6d41\u7a0b\u7ed3\u675f\u540e\u624d\u80fd\u770b\u5230\u4ea7\u54c1\uff0c\u56e2\u961f\u58eb\u6c14\u4f4e\u843d\u3002\n\n\n\u654f\u6377\u5f00\u53d1\uff08Scrum\uff09- \u4ea7\u54c1\u6240\u6709\u8005\u3001Scrum Master\u3001\u7814\u53d1\u4eba\u5458 - Sprint\n\n\u4ea7\u54c1\u7684Backlog\uff08\u7528\u6237\u6545\u4e8b\u3001\u4ea7\u54c1\u539f\u578b\uff09\u3002\n\u8ba1\u5212\u4f1a\u8bae\uff08\u8bc4\u4f30\u548c\u9884\u7b97\uff09\u3002\n\u65e5\u5e38\u5f00\u53d1\uff08\u7ad9\u7acb\u4f1a\u8bae\u3001\u756a\u8304\u5de5\u4f5c\u6cd5\u3001\u7ed3\u5bf9\u7f16\u7a0b\u3001\u6d4b\u8bd5\u5148\u884c\u3001\u4ee3\u7801\u91cd\u6784\u2026\u2026\uff09\u3002\n\u4fee\u590dbug\uff08\u95ee\u9898\u63cf\u8ff0\u3001\u91cd\u73b0\u6b65\u9aa4\u3001\u6d4b\u8bd5\u4eba\u5458\u3001\u88ab\u6307\u6d3e\u4eba\uff09\u3002\n\u53d1\u5e03\u7248\u672c\u3002\n\u8bc4\u5ba1\u4f1a\u8bae\uff08Showcase\uff0c\u7528\u6237\u9700\u8981\u53c2\u4e0e\uff09\u3002\n\u56de\u987e\u4f1a\u8bae\uff08\u5bf9\u5f53\u524d\u8fed\u4ee3\u5468\u671f\u505a\u4e00\u4e2a\u603b\u7ed3\uff09\u3002\n\n\n\u8865\u5145\uff1a\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u5ba3\u8a00\n\n\u4e2a\u4f53\u548c\u4e92\u52a8 \u9ad8\u4e8e \u6d41\u7a0b\u548c\u5de5\u5177\n\u5de5\u4f5c\u7684\u8f6f\u4ef6 \u9ad8\u4e8e \u8be6\u5c3d\u7684\u6587\u6863\n\u5ba2\u6237\u5408\u4f5c \u9ad8\u4e8e \u5408\u540c\u8c08\u5224\n\u54cd\u5e94\u53d8\u5316 \u9ad8\u4e8e \u9075\u5faa\u8ba1\u5212\n\n\n\n\n\u89d2\u8272\uff1a\u4ea7\u54c1\u6240\u6709\u8005\uff08\u51b3\u5b9a\u505a\u4ec0\u4e48\uff0c\u80fd\u5bf9\u9700\u6c42\u62cd\u677f\u7684\u4eba\uff09\u3001\u56e2\u961f\u8d1f\u8d23\u4eba\uff08\u89e3\u51b3\u5404\u79cd\u95ee\u9898\uff0c\u4e13\u6ce8\u5982\u4f55\u66f4\u597d\u7684\u5de5\u4f5c\uff0c\u5c4f\u853d\u5916\u90e8\u5bf9\u5f00\u53d1\u56e2\u961f\u7684\u5f71\u54cd\uff09\u3001\u5f00\u53d1\u56e2\u961f\uff08\u9879\u76ee\u6267\u884c\u4eba\u5458\uff0c\u5177\u4f53\u6307\u5f00\u53d1\u4eba\u5458\u548c\u6d4b\u8bd5\u4eba\u5458\uff09\u3002\n\n\n\u51c6\u5907\u5de5\u4f5c\uff1a\u5546\u4e1a\u6848\u4f8b\u548c\u8d44\u91d1\u3001\u5408\u540c\u3001\u61a7\u61ac\u3001\u521d\u59cb\u4ea7\u54c1\u9700\u6c42\u3001\u521d\u59cb\u53d1\u5e03\u8ba1\u5212\u3001\u5165\u80a1\u3001\u7ec4\u5efa\u56e2\u961f\u3002\n\n\n\u654f\u6377\u56e2\u961f\u901a\u5e38\u4eba\u6570\u4e3a8-10\u4eba\u3002\n\n\n\u5de5\u4f5c\u91cf\u4f30\u7b97\uff1a\u5c06\u5f00\u53d1\u4efb\u52a1\u91cf\u5316\uff0c\u5305\u62ec\u539f\u578b\u3001Logo\u8bbe\u8ba1\u3001UI\u8bbe\u8ba1\u3001\u524d\u7aef\u5f00\u53d1\u7b49\uff0c\u5c3d\u91cf\u628a\u6bcf\u4e2a\u5de5\u4f5c\u5206\u89e3\u5230\u6700\u5c0f\u4efb\u52a1\u91cf\uff0c\u6700\u5c0f\u4efb\u52a1\u91cf\u6807\u51c6\u4e3a\u5de5\u4f5c\u65f6\u95f4\u4e0d\u80fd\u8d85\u8fc7\u4e24\u5929\uff0c\u7136\u540e\u4f30\u7b97\u603b\u4f53\u9879\u76ee\u65f6\u95f4\u3002\u628a\u6bcf\u4e2a\u4efb\u52a1\u90fd\u8d34\u5728\u770b\u677f\u4e0a\u9762\uff0c\u770b\u677f\u4e0a\u5206\u4e09\u90e8\u5206\uff1ato do\uff08\u5f85\u5b8c\u6210\uff09\u3001in progress\uff08\u8fdb\u884c\u4e2d\uff09\u548cdone\uff08\u5df2\u5b8c\u6210\uff09\u3002\n\n\n\n\n\n\u9879\u76ee\u56e2\u961f\u7ec4\u5efa\n\n\n\u56e2\u961f\u7684\u6784\u6210\u548c\u89d2\u8272\n\n\u8bf4\u660e\uff1a\u8c22\u8c22\u4ed8\u7965\u82f1\u5973\u58eb\u7ed8\u5236\u4e86\u4e0b\u9762\u8fd9\u5f20\u7cbe\u7f8e\u7684\u516c\u53f8\u7ec4\u7ec7\u67b6\u6784\u56fe\u3002\n\n\n\n\n\u7f16\u7a0b\u89c4\u8303\u548c\u4ee3\u7801\u5ba1\u67e5\uff08flake8\u3001pylint\uff09\n\n\n\nPython\u4e2d\u7684\u4e00\u4e9b\u201c\u60ef\u4f8b\u201d\uff08\u8bf7\u53c2\u8003\u300aPython\u60ef\u4f8b-\u5982\u4f55\u7f16\u5199Pythonic\u7684\u4ee3\u7801\u300b\uff09\n\n\n\u5f71\u54cd\u4ee3\u7801\u53ef\u8bfb\u6027\u7684\u539f\u56e0\uff1a\n\n\u4ee3\u7801\u6ce8\u91ca\u592a\u5c11\u6216\u8005\u6ca1\u6709\u6ce8\u91ca\n\u4ee3\u7801\u7834\u574f\u4e86\u8bed\u8a00\u7684\u6700\u4f73\u5b9e\u8df5\n\u53cd\u6a21\u5f0f\u7f16\u7a0b\uff08\u610f\u5927\u5229\u9762\u4ee3\u7801\u3001\u590d\u5236-\u9ecf\u8d34\u7f16\u7a0b\u3001\u81ea\u8d1f\u7f16\u7a0b\u3001\u2026\u2026\uff09\n\n\n\n\n\n\u56e2\u961f\u5f00\u53d1\u5de5\u5177\u4ecb\u7ecd\n\n\u7248\u672c\u63a7\u5236\uff1aGit\u3001Mercury\n\u7f3a\u9677\u7ba1\u7406\uff1aGitlab\u3001Redmine\n\u654f\u6377\u95ed\u73af\u5de5\u5177\uff1a\u7985\u9053\u3001JIRA\n\u6301\u7eed\u96c6\u6210\uff1aJenkins\u3001Travis-CI\n\n\u8bf7\u53c2\u8003\u300a\u56e2\u961f\u9879\u76ee\u5f00\u53d1\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\u300b\u3002\n\n\n\u9879\u76ee\u9009\u9898\u548c\u7406\u89e3\u4e1a\u52a1\n\n\n\u9009\u9898\u8303\u56f4\u8bbe\u5b9a\n\n\nCMS\uff08\u7528\u6237\u7aef\uff09\uff1a\u65b0\u95fb\u805a\u5408\u7f51\u7ad9\u3001\u95ee\u7b54/\u5206\u4eab\u793e\u533a\u3001\u5f71\u8bc4/\u4e66\u8bc4\u7f51\u7ad9\u7b49\u3002\n\n\nMIS\uff08\u7528\u6237\u7aef+\u7ba1\u7406\u7aef\uff09\uff1aKMS\u3001KPI\u8003\u6838\u7cfb\u7edf\u3001HRS\u3001CRM\u7cfb\u7edf\u3001\u4f9b\u5e94\u94fe\u7cfb\u7edf\u3001\u4ed3\u50a8\u7ba1\u7406\u7cfb\u7edf\u7b49\u3002\n\n\nApp\u540e\u53f0\uff08\u7ba1\u7406\u7aef+\u6570\u636e\u63a5\u53e3\uff09\uff1a\u4e8c\u624b\u4ea4\u6613\u7c7b\u3001\u62a5\u520a\u6742\u5fd7\u7c7b\u3001\u5c0f\u4f17\u7535\u5546\u7c7b\u3001\u65b0\u95fb\u8d44\u8baf\u7c7b\u3001\u65c5\u6e38\u7c7b\u3001\u793e\u4ea4\u7c7b\u3001\u9605\u8bfb\u7c7b\u7b49\u3002\n\n\n\u5176\u4ed6\u7c7b\u578b\uff1a\u81ea\u8eab\u884c\u4e1a\u80cc\u666f\u548c\u5de5\u4f5c\u7ecf\u9a8c\u3001\u4e1a\u52a1\u5bb9\u6613\u7406\u89e3\u548c\u628a\u63a7\u3002\n\n\n\n\n\u9700\u6c42\u7406\u89e3\u3001\u6a21\u5757\u5212\u5206\u548c\u4efb\u52a1\u5206\u914d\n\n\u9700\u6c42\u7406\u89e3\uff1a\u5934\u8111\u98ce\u66b4\u548c\u7ade\u54c1\u5206\u6790\u3002\n\u6a21\u5757\u5212\u5206\uff1a\u753b\u601d\u7ef4\u5bfc\u56fe\uff08XMind\uff09\uff0c\u6bcf\u4e2a\u6a21\u5757\u662f\u4e00\u4e2a\u679d\u8282\u70b9\uff0c\u6bcf\u4e2a\u5177\u4f53\u7684\u529f\u80fd\u662f\u4e00\u4e2a\u53f6\u8282\u70b9\uff08\u7528\u52a8\u8bcd\u8868\u8ff0\uff09\uff0c\u9700\u8981\u786e\u4fdd\u6bcf\u4e2a\u53f6\u8282\u70b9\u65e0\u6cd5\u518d\u751f\u51fa\u65b0\u8282\u70b9\uff0c\u786e\u5b9a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u91cd\u8981\u6027\u3001\u4f18\u5148\u7ea7\u548c\u5de5\u4f5c\u91cf\u3002\n\u4efb\u52a1\u5206\u914d\uff1a\u7531\u9879\u76ee\u8d1f\u8d23\u4eba\u6839\u636e\u4e0a\u9762\u7684\u6307\u6807\u4e3a\u6bcf\u4e2a\u56e2\u961f\u6210\u5458\u5206\u914d\u4efb\u52a1\u3002\n\n\n\n\n\u5236\u5b9a\u9879\u76ee\u8fdb\u5ea6\u8868\uff08\u6bcf\u65e5\u66f4\u65b0\uff09\n\n\n\n\u6a21\u5757\n\u529f\u80fd\n\u4eba\u5458\n\u72b6\u6001\n\u5b8c\u6210\n\u5de5\u65f6\n\u8ba1\u5212\u5f00\u59cb\n\u5b9e\u9645\u5f00\u59cb\n\u8ba1\u5212\u7ed3\u675f\n\u5b9e\u9645\u7ed3\u675f\n\u5907\u6ce8\n\n\n\n\n\u8bc4\u8bba\n\u6dfb\u52a0\u8bc4\u8bba\n\u738b\u5927\u9524\n\u6b63\u5728\u8fdb\u884c\n50%\n4\n2018/8/7\n\n2018/8/7\n\n\n\n\n\n\u5220\u9664\u8bc4\u8bba\n\u738b\u5927\u9524\n\u7b49\u5f85\n0%\n2\n2018/8/7\n\n2018/8/7\n\n\n\n\n\n\u67e5\u770b\u8bc4\u8bba\n\u767d\u5143\u82b3\n\u6b63\u5728\u8fdb\u884c\n20%\n4\n2018/8/7\n\n2018/8/7\n\n\u9700\u8981\u8fdb\u884c\u4ee3\u7801\u5ba1\u67e5\n\n\n\n\u8bc4\u8bba\u6295\u7968\n\u767d\u5143\u82b3\n\u7b49\u5f85\n0%\n4\n2018/8/8\n\n2018/8/8\n\n\n\n\n\n\n\nOOAD\u548c\u6570\u636e\u5e93\u8bbe\u8ba1\n\n\n\n\nUML\uff08\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff09\u7684\u7c7b\u56fe\n\n\n\n\u901a\u8fc7\u6a21\u578b\u521b\u5efa\u8868\uff08\u6b63\u5411\u5de5\u7a0b\uff09\npython manage.py makemigrations app\npython manage.py migrate\n\n\n\u4f7f\u7528PowerDesigner\u7ed8\u5236\u7269\u7406\u6a21\u578b\u56fe\u3002\n\n\n\n\u901a\u8fc7\u6570\u636e\u8868\u521b\u5efa\u6a21\u578b\uff08\u53cd\u5411\u5de5\u7a0b\uff09\npython manage.py inspectdb > app/models.py\n\n\n\u7b2c92\u5929\uff1a\u4f7f\u7528Docker\u90e8\u7f72\u5e94\u7528\n\nDocker\u7b80\u4ecb\n\u5b89\u88c5Docker\n\u4f7f\u7528Docker\u521b\u5efa\u5bb9\u5668\uff08Nginx\u3001MySQL\u3001Redis\u3001Gitlab\u3001Jenkins\uff09\n\u6784\u5efaDocker\u955c\u50cf\uff08Dockerfile\u7684\u7f16\u5199\u548c\u76f8\u5173\u6307\u4ee4\uff09\n\u5bb9\u5668\u7f16\u6392\uff08Docker-compose\uff09\n\u96c6\u7fa4\u7ba1\u7406\n\n\u7b2c93\u5929\uff1aMySQL\u6027\u80fd\u4f18\u5316\n\u7b2c94\u5929\uff1a\u7f51\u7edcAPI\u63a5\u53e3\u8bbe\u8ba1\n\u7b2c95\u5929\uff1a[\u4f7f\u7528Django\u5f00\u53d1\u5546\u4e1a\u9879\u76ee](./Day91-100/95.\u4f7f\u7528Django\u5f00\u53d1\u5546\u4e1a\u9879\t\u76ee.md)\n\u9879\u76ee\u5f00\u53d1\u4e2d\u7684\u516c\u5171\u95ee\u9898\n\n\u6570\u636e\u5e93\u7684\u914d\u7f6e\uff08\u591a\u6570\u636e\u5e93\u3001\u4e3b\u4ece\u590d\u5236\u3001\u6570\u636e\u5e93\u8def\u7531\uff09\n\u7f13\u5b58\u7684\u914d\u7f6e\uff08\u5206\u533a\u7f13\u5b58\u3001\u952e\u8bbe\u7f6e\u3001\u8d85\u65f6\u8bbe\u7f6e\u3001\u4e3b\u4ece\u590d\u5236\u3001\u6545\u969c\u6062\u590d\uff08\u54e8\u5175\uff09\uff09\n\u65e5\u5fd7\u7684\u914d\u7f6e\n\u5206\u6790\u548c\u8c03\u8bd5\uff08Django-Debug-ToolBar\uff09\n\u597d\u7528\u7684Python\u6a21\u5757\uff08\u65e5\u671f\u8ba1\u7b97\u3001\u56fe\u50cf\u5904\u7406\u3001\u6570\u636e\u52a0\u5bc6\u3001\u4e09\u65b9API\uff09\n\nREST API\u8bbe\u8ba1\n\nRESTful\u67b6\u6784\n\n\u7406\u89e3RESTful\u67b6\u6784\nRESTful API\u8bbe\u8ba1\u6307\u5357\nRESTful API\u6700\u4f73\u5b9e\u8df5\n\n\nAPI\u63a5\u53e3\u6587\u6863\u7684\u64b0\u5199\n\nRAP2\nYAPI\n\n\ndjango-REST-framework\u7684\u5e94\u7528\n\n\u9879\u76ee\u4e2d\u7684\u91cd\u70b9\u96be\u70b9\u5256\u6790\n\n\u4f7f\u7528\u7f13\u5b58\u7f13\u89e3\u6570\u636e\u5e93\u538b\u529b - Redis\n\u4f7f\u7528\u6d88\u606f\u961f\u5217\u505a\u89e3\u8026\u5408\u548c\u524a\u5cf0 - Celery + RabbitMQ\n\n\u7b2c96\u5929\uff1a\u8f6f\u4ef6\u6d4b\u8bd5\u548c\u81ea\u52a8\u5316\u6d4b\u8bd5\n\u5355\u5143\u6d4b\u8bd5\n\n\u6d4b\u8bd5\u7684\u79cd\u7c7b\n\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff08unittest\u3001pytest\u3001nose2\u3001tox\u3001ddt\u3001\u2026\u2026\uff09\n\u6d4b\u8bd5\u8986\u76d6\u7387\uff08coverage\uff09\n\n\u9879\u76ee\u90e8\u7f72\n\n\u90e8\u7f72\u524d\u7684\u51c6\u5907\u5de5\u4f5c\n\n\u5173\u952e\u8bbe\u7f6e\uff08SECRET_KEY / DEBUG / ALLOWED_HOSTS / \u7f13\u5b58 / \u6570\u636e\u5e93\uff09\nHTTPS / CSRF_COOKIE_SECUR  / SESSION_COOKIE_SECURE\n\u65e5\u5fd7\u76f8\u5173\u914d\u7f6e\n\n\nLinux\u5e38\u7528\u547d\u4ee4\u56de\u987e\nLinux\u5e38\u7528\u670d\u52a1\u7684\u5b89\u88c5\u548c\u914d\u7f6e\nuWSGI/Gunicorn\u548cNginx\u7684\u4f7f\u7528\n\nGunicorn\u548cuWSGI\u7684\u6bd4\u8f83\n\n\u5bf9\u4e8e\u4e0d\u9700\u8981\u5927\u91cf\u5b9a\u5236\u5316\u7684\u7b80\u5355\u5e94\u7528\u7a0b\u5e8f\uff0cGunicorn\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0cuWSGI\u7684\u5b66\u4e60\u66f2\u7ebf\u6bd4Gunicorn\u8981\u9661\u5ced\u5f97\u591a\uff0cGunicorn\u7684\u9ed8\u8ba4\u53c2\u6570\u5c31\u5df2\u7ecf\u80fd\u591f\u9002\u5e94\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u3002\nuWSGI\u652f\u6301\u5f02\u6784\u90e8\u7f72\u3002\n\u7531\u4e8eNginx\u672c\u8eab\u652f\u6301uWSGI\uff0c\u5728\u7ebf\u4e0a\u4e00\u822c\u90fd\u5c06Nginx\u548cuWSGI\u6346\u7ed1\u5728\u4e00\u8d77\u90e8\u7f72\uff0c\u800c\u4e14uWSGI\u5c5e\u4e8e\u529f\u80fd\u9f50\u5168\u4e14\u9ad8\u5ea6\u5b9a\u5236\u7684WSGI\u4e2d\u95f4\u4ef6\u3002\n\u5728\u6027\u80fd\u4e0a\uff0cGunicorn\u548cuWSGI\u5176\u5b9e\u8868\u73b0\u76f8\u5f53\u3002\n\n\n\n\n\u4f7f\u7528\u865a\u62df\u5316\u6280\u672f\uff08Docker\uff09\u90e8\u7f72\u6d4b\u8bd5\u73af\u5883\u548c\u751f\u4ea7\u73af\u5883\n\n\u6027\u80fd\u6d4b\u8bd5\n\nAB\u7684\u4f7f\u7528\nSQLslap\u7684\u4f7f\u7528\nsysbench\u7684\u4f7f\u7528\n\n\u81ea\u52a8\u5316\u6d4b\u8bd5\n\n\u4f7f\u7528Shell\u548cPython\u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\n\u4f7f\u7528Selenium\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\n\nSelenium IDE\nSelenium WebDriver\nSelenium Remote Control\n\n\n\u6d4b\u8bd5\u5de5\u5177Robot Framework\u4ecb\u7ecd\n\n\u7b2c97\u5929\uff1a\u7535\u5546\u7f51\u7ad9\u6280\u672f\u8981\u70b9\u5256\u6790\n\u7b2c98\u5929\uff1a\u9879\u76ee\u90e8\u7f72\u4e0a\u7ebf\u548c\u6027\u80fd\u8c03\u4f18\n\nMySQL\u6570\u636e\u5e93\u8c03\u4f18\nWeb\u670d\u52a1\u5668\u6027\u80fd\u4f18\u5316\n\nNginx\u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\nKeepalived\u5b9e\u73b0\u9ad8\u53ef\u7528\n\n\n\u4ee3\u7801\u6027\u80fd\u8c03\u4f18\n\n\u591a\u7ebf\u7a0b\n\u5f02\u6b65\u5316\n\n\n\u9759\u6001\u8d44\u6e90\u8bbf\u95ee\u4f18\u5316\n\n\u4e91\u5b58\u50a8\nCDN\n\n\n\n\u7b2c99\u5929\uff1a\u9762\u8bd5\u4e2d\u7684\u516c\u5171\u95ee\u9898\n\u7b2c100\u5929\uff1aPython\u9762\u8bd5\u9898\u96c6\n\n"}, {"repo": "axios/axios", "language": "JavaScript", "readme": "\naxios\n\n\n\n\n\n\n\nPromise based HTTP client for the browser and node.js\nFeatures\n\nMake XMLHttpRequests from the browser\nMake http requests from node.js\nSupports the Promise API\nIntercept request and response\nTransform request and response data\nCancel requests\nAutomatic transforms for JSON data\nClient side support for protecting against XSRF\n\nBrowser Support\n\n\n\n\n\n\n\n\n\n\n\n\n\nLatest \u2714\nLatest \u2714\nLatest \u2714\nLatest \u2714\nLatest \u2714\n11 \u2714\n\n\n\n\nInstalling\nUsing npm:\n$ npm install axios\nUsing bower:\n$ bower install axios\nUsing yarn:\n$ yarn add axios\nUsing cdn:\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\nExample\nnote: CommonJS usage\nIn order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with require() use the following approach:\nconst axios = require('axios').default;\n\n// axios.<method> will now provide autocomplete and parameter typings\nPerforming a GET request\nconst axios = require('axios');\n\n// Make a request for a user with a given ID\naxios.get('/user?ID=12345')\n  .then(function (response) {\n    // handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  })\n  .finally(function () {\n    // always executed\n  });\n\n// Optionally the request above could also be done as\naxios.get('/user', {\n    params: {\n      ID: 12345\n    }\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  })\n  .finally(function () {\n    // always executed\n  });  \n\n// Want to use async/await? Add the `async` keyword to your outer function/method.\nasync function getUser() {\n  try {\n    const response = await axios.get('/user?ID=12345');\n    console.log(response);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nNOTE: async/await is part of ECMAScript 2017 and is not supported in Internet\nExplorer and older browsers, so use with caution.\n\nPerforming a POST request\naxios.post('/user', {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\nPerforming multiple concurrent requests\nfunction getUserAccount() {\n  return axios.get('/user/12345');\n}\n\nfunction getUserPermissions() {\n  return axios.get('/user/12345/permissions');\n}\n\naxios.all([getUserAccount(), getUserPermissions()])\n  .then(axios.spread(function (acct, perms) {\n    // Both requests are now complete\n  }));\naxios API\nRequests can be made by passing the relevant config to axios.\naxios(config)\n// Send a POST request\naxios({\n  method: 'post',\n  url: '/user/12345',\n  data: {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  }\n});\n// GET request for remote image\naxios({\n  method: 'get',\n  url: 'http://bit.ly/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\naxios(url[, config])\n// Send a GET request (default method)\naxios('/user/12345');\nRequest method aliases\nFor convenience aliases have been provided for all supported request methods.\naxios.request(config)\naxios.get(url[, config])\naxios.delete(url[, config])\naxios.head(url[, config])\naxios.options(url[, config])\naxios.post(url[, data[, config]])\naxios.put(url[, data[, config]])\naxios.patch(url[, data[, config]])\nNOTE\nWhen using the alias methods url, method, and data properties don't need to be specified in config.\nConcurrency\nHelper functions for dealing with concurrent requests.\naxios.all(iterable)\naxios.spread(callback)\nCreating an instance\nYou can create a new instance of axios with a custom config.\naxios.create([config])\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\nInstance methods\nThe available instance methods are listed below. The specified config will be merged with the instance config.\naxios#request(config)\naxios#get(url[, config])\naxios#delete(url[, config])\naxios#head(url[, config])\naxios#options(url[, config])\naxios#post(url[, data[, config]])\naxios#put(url[, data[, config]])\naxios#patch(url[, data[, config]])\naxios#getUri([config])\nRequest Config\nThese are the available config options for making requests. Only the url is required. Requests will default to GET if method is not specified.\n{\n  // `url` is the server URL that will be used for the request\n  url: '/user',\n\n  // `method` is the request method to be used when making the request\n  method: 'get', // default\n\n  // `baseURL` will be prepended to `url` unless `url` is absolute.\n  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n  // to methods of that instance.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `transformRequest` allows changes to the request data before it is sent to the server\n  // This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE'\n  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\n  // FormData or Stream\n  // You may modify the headers object.\n  transformRequest: [function (data, headers) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `transformResponse` allows changes to the response data to be made before\n  // it is passed to then/catch\n  transformResponse: [function (data) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `headers` are custom headers to be sent\n  headers: {'X-Requested-With': 'XMLHttpRequest'},\n\n  // `params` are the URL parameters to be sent with the request\n  // Must be a plain object or a URLSearchParams object\n  params: {\n    ID: 12345\n  },\n\n  // `paramsSerializer` is an optional function in charge of serializing `params`\n  // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)\n  paramsSerializer: function (params) {\n    return Qs.stringify(params, {arrayFormat: 'brackets'})\n  },\n\n  // `data` is the data to be sent as the request body\n  // Only applicable for request methods 'PUT', 'POST', and 'PATCH'\n  // When no `transformRequest` is set, must be of one of the following types:\n  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n  // - Browser only: FormData, File, Blob\n  // - Node only: Stream, Buffer\n  data: {\n    firstName: 'Fred'\n  },\n  \n  // syntax alternative to send data into the body\n  // method post\n  // only the value is sent, not the key\n  data: 'Country=Brasil&City=Belo Horizonte',\n\n  // `timeout` specifies the number of milliseconds before the request times out.\n  // If the request takes longer than `timeout`, the request will be aborted.\n  timeout: 1000, // default is `0` (no timeout)\n\n  // `withCredentials` indicates whether or not cross-site Access-Control requests\n  // should be made using credentials\n  withCredentials: false, // default\n\n  // `adapter` allows custom handling of requests which makes testing easier.\n  // Return a promise and supply a valid response (see lib/adapters/README.md).\n  adapter: function (config) {\n    /* ... */\n  },\n\n  // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.\n  // This will set an `Authorization` header, overwriting any existing\n  // `Authorization` custom headers you have set using `headers`.\n  // Please note that only HTTP Basic auth is configurable through this parameter.\n  // For Bearer tokens and such, use `Authorization` custom headers instead.\n  auth: {\n    username: 'janedoe',\n    password: 's00pers3cret'\n  },\n\n  // `responseType` indicates the type of data that the server will respond with\n  // options are: 'arraybuffer', 'document', 'json', 'text', 'stream'\n  //   browser only: 'blob'\n  responseType: 'json', // default\n\n  // `responseEncoding` indicates encoding to use for decoding responses\n  // Note: Ignored for `responseType` of 'stream' or client-side requests\n  responseEncoding: 'utf8', // default\n\n  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token\n  xsrfCookieName: 'XSRF-TOKEN', // default\n\n  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value\n  xsrfHeaderName: 'X-XSRF-TOKEN', // default\n\n  // `onUploadProgress` allows handling of progress events for uploads\n  onUploadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `onDownloadProgress` allows handling of progress events for downloads\n  onDownloadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `maxContentLength` defines the max size of the http response content in bytes allowed\n  maxContentLength: 2000,\n\n  // `validateStatus` defines whether to resolve or reject the promise for a given\n  // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`\n  // or `undefined`), the promise will be resolved; otherwise, the promise will be\n  // rejected.\n  validateStatus: function (status) {\n    return status >= 200 && status < 300; // default\n  },\n\n  // `maxRedirects` defines the maximum number of redirects to follow in node.js.\n  // If set to 0, no redirects will be followed.\n  maxRedirects: 5, // default\n\n  // `socketPath` defines a UNIX Socket to be used in node.js.\n  // e.g. '/var/run/docker.sock' to send requests to the docker daemon.\n  // Only either `socketPath` or `proxy` can be specified.\n  // If both are specified, `socketPath` is used.\n  socketPath: null, // default\n\n  // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http\n  // and https requests, respectively, in node.js. This allows options to be added like\n  // `keepAlive` that are not enabled by default.\n  httpAgent: new http.Agent({ keepAlive: true }),\n  httpsAgent: new https.Agent({ keepAlive: true }),\n\n  // 'proxy' defines the hostname and port of the proxy server.\n  // You can also define your proxy using the conventional `http_proxy` and\n  // `https_proxy` environment variables. If you are using environment variables\n  // for your proxy configuration, you can also define a `no_proxy` environment\n  // variable as a comma-separated list of domains that should not be proxied.\n  // Use `false` to disable proxies, ignoring environment variables.\n  // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and\n  // supplies credentials.\n  // This will set an `Proxy-Authorization` header, overwriting any existing\n  // `Proxy-Authorization` custom headers you have set using `headers`.\n  proxy: {\n    host: '127.0.0.1',\n    port: 9000,\n    auth: {\n      username: 'mikeymike',\n      password: 'rapunz3l'\n    }\n  },\n\n  // `cancelToken` specifies a cancel token that can be used to cancel the request\n  // (see Cancellation section below for details)\n  cancelToken: new CancelToken(function (cancel) {\n  })\n}\nResponse Schema\nThe response for a request contains the following information.\n{\n  // `data` is the response that was provided by the server\n  data: {},\n\n  // `status` is the HTTP status code from the server response\n  status: 200,\n\n  // `statusText` is the HTTP status message from the server response\n  statusText: 'OK',\n\n  // `headers` the headers that the server responded with\n  // All header names are lower cased\n  headers: {},\n\n  // `config` is the config that was provided to `axios` for the request\n  config: {},\n\n  // `request` is the request that generated this response\n  // It is the last ClientRequest instance in node.js (in redirects)\n  // and an XMLHttpRequest instance in the browser\n  request: {}\n}\nWhen using then, you will receive the response as follows:\naxios.get('/user/12345')\n  .then(function (response) {\n    console.log(response.data);\n    console.log(response.status);\n    console.log(response.statusText);\n    console.log(response.headers);\n    console.log(response.config);\n  });\nWhen using catch, or passing a rejection callback as second parameter of then, the response will be available through the error object as explained in the Handling Errors section.\nConfig Defaults\nYou can specify config defaults that will be applied to every request.\nGlobal axios defaults\naxios.defaults.baseURL = 'https://api.example.com';\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\nCustom instance defaults\n// Set config defaults when creating the instance\nconst instance = axios.create({\n  baseURL: 'https://api.example.com'\n});\n\n// Alter defaults after instance has been created\ninstance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\nConfig order of precedence\nConfig will be merged with an order of precedence. The order is library defaults found in lib/defaults.js, then defaults property of the instance, and finally config argument for the request. The latter will take precedence over the former. Here's an example.\n// Create an instance using the config defaults provided by the library\n// At this point the timeout config value is `0` as is the default for the library\nconst instance = axios.create();\n\n// Override timeout default for the library\n// Now all requests using this instance will wait 2.5 seconds before timing out\ninstance.defaults.timeout = 2500;\n\n// Override timeout for this request as it's known to take a long time\ninstance.get('/longRequest', {\n  timeout: 5000\n});\nInterceptors\nYou can intercept requests or responses before they are handled by then or catch.\n// Add a request interceptor\naxios.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n\n// Add a response interceptor\naxios.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  }, function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  });\nIf you need to remove an interceptor later you can.\nconst myInterceptor = axios.interceptors.request.use(function () {/*...*/});\naxios.interceptors.request.eject(myInterceptor);\nYou can add interceptors to a custom instance of axios.\nconst instance = axios.create();\ninstance.interceptors.request.use(function () {/*...*/});\nHandling Errors\naxios.get('/user/12345')\n  .catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\nUsing the validateStatus config option, you can define HTTP code(s) that should throw an error.\naxios.get('/user/12345', {\n  validateStatus: function (status) {\n    return status < 500; // Reject only if the status code is greater than or equal to 500\n  }\n})\nUsing toJSON you get an object with more information about the HTTP error.\naxios.get('/user/12345')\n  .catch(function (error) {\n    console.log(error.toJSON());\n  });\nCancellation\nYou can cancel a request using a cancel token.\n\nThe axios cancel token API is based on the withdrawn cancelable promises proposal.\n\nYou can create a cancel token using the CancelToken.source factory as shown below:\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\naxios.get('/user/12345', {\n  cancelToken: source.token\n}).catch(function (thrown) {\n  if (axios.isCancel(thrown)) {\n    console.log('Request canceled', thrown.message);\n  } else {\n    // handle error\n  }\n});\n\naxios.post('/user/12345', {\n  name: 'new name'\n}, {\n  cancelToken: source.token\n})\n\n// cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user.');\nYou can also create a cancel token by passing an executor function to the CancelToken constructor:\nconst CancelToken = axios.CancelToken;\nlet cancel;\n\naxios.get('/user/12345', {\n  cancelToken: new CancelToken(function executor(c) {\n    // An executor function receives a cancel function as a parameter\n    cancel = c;\n  })\n});\n\n// cancel the request\ncancel();\n\nNote: you can cancel several requests with the same cancel token.\n\nUsing application/x-www-form-urlencoded format\nBy default, axios serializes JavaScript objects to JSON. To send data in the application/x-www-form-urlencoded format instead, you can use one of the following options.\nBrowser\nIn a browser, you can use the URLSearchParams API as follows:\nconst params = new URLSearchParams();\nparams.append('param1', 'value1');\nparams.append('param2', 'value2');\naxios.post('/foo', params);\n\nNote that URLSearchParams is not supported by all browsers (see caniuse.com), but there is a polyfill available (make sure to polyfill the global environment).\n\nAlternatively, you can encode data using the qs library:\nconst qs = require('qs');\naxios.post('/foo', qs.stringify({ 'bar': 123 }));\nOr in another way (ES6),\nimport qs from 'qs';\nconst data = { 'bar': 123 };\nconst options = {\n  method: 'POST',\n  headers: { 'content-type': 'application/x-www-form-urlencoded' },\n  data: qs.stringify(data),\n  url,\n};\naxios(options);\nNode.js\nIn node.js, you can use the querystring module as follows:\nconst querystring = require('querystring');\naxios.post('http://something.com/', querystring.stringify({ foo: 'bar' }));\nYou can also use the qs library.\nNOTE\nThe qs library is preferable if you need to stringify nested objects, as the querystring method has known issues with that use case (https://github.com/nodejs/node-v0.x-archive/issues/1665).\nSemver\nUntil axios reaches a 1.0 release, breaking changes will be released with a new minor version. For example 0.5.1, and 0.5.4 will have the same API, but 0.6.0 will have breaking changes.\nPromises\naxios depends on a native ES6 Promise implementation to be supported.\nIf your environment doesn't support ES6 Promises, you can polyfill.\nTypeScript\naxios includes TypeScript definitions.\nimport axios from 'axios';\naxios.get('/user?ID=12345');\nResources\n\nChangelog\nUpgrade Guide\nEcosystem\nContributing Guide\nCode of Conduct\n\nCredits\naxios is heavily inspired by the $http service provided in Angular. Ultimately axios is an effort to provide a standalone $http-like service for use outside of Angular.\nLicense\nMIT\n\n"}, {"repo": "public-apis/public-apis", "language": "Python", "readme": "\nPublic APIs \nA collective list of free APIs for use in software and web development.\nSponsor:\n\nA public API for this project can be found here - thanks to DigitalOcean for helping us provide this service!\nFor information on contributing to this project, please see the contributing guide.\nPlease note a passing build status indicates all listed APIs are available since the last update. A failing build status indicates that 1 or more services may be unavailable at the moment.\nIndex\n\nAnimals\nAnime\nAnti-Malware\nArt & Design\nBooks\nBusiness\nCalendar\nCloud Storage & File Sharing\nContinuous Integration\nCryptocurrency\nCurrency Exchange\nData Validation\nDevelopment\nDictionaries\nDocuments & Productivity\nEnvironment\nEvents\nFinance\nFood & Drink\nFraud Prevention\nGames & Comics\nGeocoding\nGovernment\nHealth\nJobs\nMachine Learning\nMusic\nNews\nOpen Data\nOpen Source Projects\nPatent\nPersonality\nPhotography\nScience & Math\nSecurity\nShopping\nSocial\nSports & Fitness\nTest Data\nText Analysis\nTracking\nTransportation\nURL Shorteners\nVehicle\nVideo\nWeather\n\nAnimals\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCat Facts\nDaily cat facts\nNo\nYes\nNo\n\n\nCats\nPictures of cats from Tumblr\napiKey\nYes\nUnknown\n\n\nDogs\nBased on the Stanford Dogs Dataset\nNo\nYes\nYes\n\n\nHTTPCat\nCat for every HTTP Status\nNo\nYes\nUnknown\n\n\nIUCN\nIUCN Red List of Threatened Species\napiKey\nNo\nUnknown\n\n\nMovebank\nMovement and Migration data of animals\nNo\nYes\nUnknown\n\n\nPetfinder\nAdoption\nOAuth\nYes\nYes\n\n\nPlaceGOAT\nPlaceholder goat images\nNo\nYes\nUnknown\n\n\nRandomCat\nRandom pictures of cats\nNo\nYes\nYes\n\n\nRandomDog\nRandom pictures of dogs\nNo\nYes\nYes\n\n\nRandomFox\nRandom pictures of foxes\nNo\nYes\nNo\n\n\nRescueGroups\nAdoption\nNo\nYes\nUnknown\n\n\nShibe.Online\nRandom pictures of Shibu Inu, cats or birds\nNo\nNo\nNo\n\n\n\n\u2b06 Back to Index\nAnime\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAniList\nAnime discovery & tracking\nOAuth\nYes\nUnknown\n\n\nAnimeNewsNetwork\nAnime industry news\nNo\nYes\nYes\n\n\nJikan\nUnofficial MyAnimeList API\nNo\nYes\nYes\n\n\nKitsu\nAnime discovery platform\nOAuth\nYes\nUnknown\n\n\nStudio Ghibli\nResources from Studio Ghibli films\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nAnti-Malware\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAbuseIPDB\nIP/domain/URL reputation\napiKey\nYes\nUnknown\n\n\nAlienVault Open Threat Exchange (OTX)\nIP/domain/URL reputation\napiKey\nYes\nUnknown\n\n\nGoogle Safe Browsing\nGoogle Link/Domain Flagging\napiKey\nYes\nUnknown\n\n\nMetacert\nMetacert Link Flagging\napiKey\nYes\nUnknown\n\n\nVirusTotal\nVirusTotal File/URL Analysis\napiKey\nYes\nUnknown\n\n\nWeb Of Trust (WOT)\nWebsite reputation\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nArt & Design\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBehance\nDesign\napiKey\nYes\nUnknown\n\n\nCooper Hewitt\nSmithsonian Design Museum\napiKey\nYes\nUnknown\n\n\nDribbble\nDesign\nOAuth\nNo\nUnknown\n\n\nHarvard Art Museums\nArt\napiKey\nNo\nUnknown\n\n\nIconfinder\nIcons\napiKey\nYes\nUnknown\n\n\nIcons8\nIcons\nOAuth\nYes\nUnknown\n\n\nNoun Project\nIcons\nOAuth\nNo\nUnknown\n\n\nRijksmuseum\nArt\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nBooks\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBhagavad Gita\nBhagavad Gita text\nOAuth\nYes\nYes\n\n\nBookNomads\nBooks published in the Netherlands and Flanders (about 2.5 million), book covers and related data\nNo\nYes\nUnknown\n\n\nBritish National Bibliography\nBooks\nNo\nNo\nUnknown\n\n\nGoodreads\nBooks\napiKey\nYes\nUnknown\n\n\nGoogle Books\nBooks\nOAuth\nYes\nUnknown\n\n\nLibGen\nLibrary Genesis search engine\nNo\nNo\nUnknown\n\n\nOpen Library\nBooks, book covers and related data\nNo\nYes\nUnknown\n\n\nPenguin Publishing\nBooks, book covers and related data\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nBusiness\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCharity Search\nNon-profit charity data\napiKey\nNo\nUnknown\n\n\nClearbit Logo\nSearch for company logos and embed them in your projects\napiKey\nYes\nUnknown\n\n\nDomainsdb.info\nRegistered Domain Names Search\nNo\nYes\nUnknown\n\n\nFreelancer\nHire freelancers to get work done\nOAuth\nYes\nUnknown\n\n\nGmail\nFlexible, RESTful access to the user's inbox\nOAuth\nYes\nUnknown\n\n\nGoogle Analytics\nCollect, configure and analyze your data to reach the right audience\nOAuth\nYes\nUnknown\n\n\nMailboxValidator\nValidate email address to improve deliverability\napiKey\nYes\nUnknown\n\n\nmailgun\nEmail Service\napiKey\nYes\nUnknown\n\n\nmarkerapi\nTrademark Search\nNo\nNo\nUnknown\n\n\nTicksel\nFriendly website analytics made for humans\nNo\nYes\nUnknown\n\n\nTrello\nBoards, lists and cards to help you organize and prioritize your projects\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nCalendar\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCalendar Index\nWorldwide Holidays and Working Days\napiKey\nYes\nYes\n\n\nChurch Calendar\nCatholic liturgical calendar\nNo\nNo\nUnknown\n\n\nCzech Namedays Calendar\nLookup for a name and returns nameday date\nNo\nNo\nUnknown\n\n\nGoogle Calendar\nDisplay, create and modify Google calendar events\nOAuth\nYes\nUnknown\n\n\nHebrew Calendar\nConvert between Gregorian and Hebrew, fetch Shabbat and Holiday times, etc\nNo\nNo\nUnknown\n\n\nHolidays\nHistorical data regarding holidays\napiKey\nYes\nUnknown\n\n\nLectServe\nProtestant liturgical calendar\nNo\nNo\nUnknown\n\n\nNager.Date\nPublic holidays for more than 90 countries\nNo\nYes\nNo\n\n\nNamedays Calendar\nProvides namedays for multiple countries\nNo\nYes\nYes\n\n\nNon-Working Days\nDatabase of ICS files for non working days\nNo\nYes\nUnknown\n\n\nRussian Calendar\nCheck if a date is a Russian holiday or not\nNo\nYes\nNo\n\n\n\n\u2b06 Back to Index\nCloud Storage & File Sharing\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBox\nFile Sharing and Storage\nOAuth\nYes\nUnknown\n\n\nDropbox\nFile Sharing and Storage\nOAuth\nYes\nUnknown\n\n\nGoogle Drive\nFile Sharing and Storage\nOAuth\nYes\nUnknown\n\n\nOneDrive\nFile Sharing and Storage\nOAuth\nYes\nUnknown\n\n\nPastebin\nPlain Text Storage\napiKey\nYes\nUnknown\n\n\nTemporal\nIPFS based file storage and sharing with optional IPNS naming\napiKey\nYes\nNo\n\n\nWeTransfer\nFile Sharing\napiKey\nYes\nYes\n\n\n\n\u2b06 Back to Index\nContinuous Integration\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCircleCI\nAutomate the software development process using continuous integration and continuous delivery\napiKey\nYes\nUnknown\n\n\nCodeship\nCodeship is a Continuous Integration Platform in the cloud\napiKey\nYes\nUnknown\n\n\nTravis CI\nSync your GitHub projects with Travis CI to test your code in minutes\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nCryptocurrency\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBinance\nExchange for Trading Cryptocurrencies based in China\napiKey\nYes\nUnknown\n\n\nBitcoinAverage\nDigital Asset Price Data for the blockchain industry\napiKey\nYes\nUnknown\n\n\nBitcoinCharts\nFinancial and Technical Data related to the Bitcoin Network\nNo\nYes\nUnknown\n\n\nBitfinex\nCryptocurrency Trading Platform\napiKey\nYes\nUnknown\n\n\nBitmex\nReal-Time Cryptocurrency derivatives trading platform based in Hong Kong\napiKey\nYes\nUnknown\n\n\nBittrex\nNext Generation Crypto Trading Platform\napiKey\nYes\nUnknown\n\n\nBlock\nBitcoin Payment, Wallet & Transaction Data\napiKey\nYes\nUnknown\n\n\nBlockchain\nBitcoin Payment, Wallet & Transaction Data\nNo\nYes\nUnknown\n\n\nCoinAPI\nAll Currency Exchanges integrate under a single api\napiKey\nYes\nNo\n\n\nCoinbase\nBitcoin, Bitcoin Cash, Litecoin and Ethereum Prices\napiKey\nYes\nUnknown\n\n\nCoinbase Pro\nCryptocurrency Trading Platform\napiKey\nYes\nUnknown\n\n\nCoinDesk\nBitcoin Price Index\nNo\nNo\nUnknown\n\n\nCoinGecko\nCryptocurrency Price, Market, and Developer/Social Data\nNo\nYes\nYes\n\n\nCoinigy\nInteracting with Coinigy Accounts and Exchange Directly\napiKey\nYes\nUnknown\n\n\nCoinLayer\nReal-time Crypto Currency Exchange Rates\napiKey\nYes\nUnknown\n\n\nCoinlib\nCrypto Currency Prices\napiKey\nYes\nUnknown\n\n\nCoinlore\nCryptocurrencies prices, volume and more\nNo\nYes\nUnknown\n\n\nCoinMarketCap\nCryptocurrencies Prices\napiKey\nYes\nUnknown\n\n\nCoinpaprika\nCryptocurrencies prices, volume and more\nNo\nYes\nYes\n\n\nCoinRanking\nLive Cryptocurrency data\nNo\nYes\nUnknown\n\n\nCryptoCompare\nCryptocurrencies Comparison\nNo\nYes\nUnknown\n\n\nCryptonator\nCryptocurrencies Exchange Rates\nNo\nYes\nUnknown\n\n\nGemini\nCryptocurrencies Exchange\nNo\nYes\nUnknown\n\n\nICObench\nVarious information on listing, ratings, stats, and more\napiKey\nYes\nUnknown\n\n\nLivecoin\nCryptocurrency Exchange\nNo\nYes\nUnknown\n\n\nMercadoBitcoin\nBrazilian Cryptocurrency Information\nNo\nYes\nUnknown\n\n\nNexchange\nAutomated cryptocurrency exchange service\nNo\nNo\nYes\n\n\nNiceHash\nLargest Crypto Mining Marketplace\napiKey\nYes\nUnknown\n\n\nPoloniex\nUS based digital asset exchange\napiKey\nYes\nUnknown\n\n\nWorldCoinIndex\nCryptocurrencies Prices\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nCurrency Exchange\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\n1Forge\nForex currency market data\napiKey\nYes\nUnknown\n\n\nCurrencylayer\nExchange rates and currency conversion\napiKey\nYes\nUnknown\n\n\nCzech National Bank\nA collection of exchange rates\nNo\nYes\nUnknown\n\n\nExchangeRate-API\nFree currency conversion\nNo\nYes\nYes\n\n\nExchangeratesapi.io\nExchange rates with currency conversion\nNo\nYes\nYes\n\n\nFixer.io\nExchange rates and currency conversion\napiKey\nYes\nUnknown\n\n\nFrankfurter\nExchange rates, currency conversion and time series\nNo\nYes\nYes\n\n\nratesapi\nFree exchange rates and historical rates\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nData Validation\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCloudmersive Validate\nValidate email addresses, phone numbers, VAT numbers and domain names\napiKey\nYes\nYes\n\n\nlanguagelayer\nLanguage detection\nNo\nYes\nUnknown\n\n\nLob.com\nUS Address Verification\napiKey\nYes\nUnknown\n\n\nmailboxlayer\nEmail address validation\nNo\nYes\nUnknown\n\n\nNumValidate\nOpen Source phone number validation\nNo\nYes\nUnknown\n\n\nnumverify\nPhone number validation\nNo\nYes\nUnknown\n\n\nPurgoMalum\nContent validator against profanity & obscenity\nNo\nNo\nUnknown\n\n\nUS Autocomplete\nEnter address data quickly with real-time address suggestions\napiKey\nYes\nYes\n\n\nUS Extract\nExtract postal addresses from any text including emails\napiKey\nYes\nYes\n\n\nUS Street Address\nValidate and append data for any US postal address\napiKey\nYes\nYes\n\n\nvatlayer\nVAT number validation\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nDevelopment\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\n24 Pull Requests\nProject to promote open source collaboration during December\nNo\nYes\nYes\n\n\nAgify.io\nEstimates the age from a first name\nNo\nYes\nYes\n\n\nApiFlash\nChrome based screenshot API for developers\napiKey\nYes\nUnknown\n\n\nApility.io\nIP, Domains and Emails anti-abuse API blocklist\nNo\nYes\nYes\n\n\nAPIs.guru\nWikipedia for Web APIs, OpenAPI/Swagger specs for public APIs\nNo\nYes\nUnknown\n\n\nBetterMeta\nReturn a site's meta tags in JSON format\nX-Mashape-Key\nYes\nUnknown\n\n\nBitbucket\nPull public information for a Bitbucket account\nNo\nYes\nUnknown\n\n\nBored\nFind random activities to fight boredom\nNo\nYes\nUnknown\n\n\nBrowshot\nEasily make screenshots of web pages in any screen size, as any device\napiKey\nYes\nUnknown\n\n\nCDNJS\nLibrary info on CDNJS\nNo\nYes\nUnknown\n\n\nChangelogs.md\nStructured changelog metadata from open source projects\nNo\nYes\nUnknown\n\n\nCountAPI\nFree and simple counting service. You can use it to track page hits and specific events\nNo\nYes\nYes\n\n\nDigitalOcean Status\nStatus of all DigitalOcean services\nNo\nYes\nUnknown\n\n\nDomainDb Info\nDomain name search to find all domains containing particular words/phrases/etc\nNo\nYes\nUnknown\n\n\nFaceplusplus\nA tool to detect face\nOAuth\nYes\nUnknown\n\n\nGenderize.io\nEstimates a gender from a first name\nNo\nYes\nYes\n\n\nGitHub\nMake use of GitHub repositories, code and user info programmatically\nOAuth\nYes\nYes\n\n\nGitlab\nAutomate GitLab interaction programmatically\nOAuth\nYes\nUnknown\n\n\nGitter\nChat for GitHub\nOAuth\nYes\nUnknown\n\n\nHTTP2.Pro\nTest endpoints for client and server HTTP/2 protocol support\nNo\nYes\nUnknown\n\n\nIBM Text to Speech\nConvert text to speech\napiKey\nYes\nYes\n\n\nimport.io\nRetrieve structured data from a website or RSS feed\napiKey\nYes\nUnknown\n\n\nIPify\nA simple IP Address API\nNo\nYes\nUnknown\n\n\nIPinfo\nAnother simple IP Address API\nNo\nYes\nUnknown\n\n\nJSON 2 JSONP\nConvert JSON to JSONP (on-the-fly) for easy cross-domain data requests using client-side JavaScript\nNo\nYes\nUnknown\n\n\nJSONbin.io\nFree JSON storage service. Ideal for small scale Web apps, Websites and Mobile apps\napiKey\nYes\nYes\n\n\nJudge0\nCompile and run source code\nNo\nYes\nUnknown\n\n\nLet's Validate\nUncovers the technologies used on websites and URL to thumbnail\nNo\nYes\nUnknown\n\n\nLicense-API\nUnofficial REST API for choosealicense.com\nNo\nYes\nNo\n\n\nLiveEdu\nLive Coding Streaming\nOAuth\nYes\nUnknown\n\n\nMAC address vendor lookup\nRetrieve vendor details and other information regarding a given MAC address or an OUI\napiKey\nYes\nYes\n\n\nMyjson\nA simple JSON store for your web or mobile app\nNo\nNo\nUnknown\n\n\nNationalize.io\nEstimate the nationality of a first name\nNo\nYes\nYes\n\n\nOOPSpam\nMultiple spam filtering service\nNo\nYes\nYes\n\n\nPlino\nSpam filtering system\nNo\nYes\nUnknown\n\n\nPostman\nTool for testing APIs\napiKey\nYes\nUnknown\n\n\nProxyCrawl\nScraping and crawling anticaptcha service\napiKey\nYes\nUnknown\n\n\nPublic APIs\nA collective list of free JSON APIs for use in web development\nNo\nYes\nUnknown\n\n\nPusher Beams\nPush notifications for Android & iOS\napiKey\nYes\nUnknown\n\n\nQR code\nCreate an easy to read QR code and URL shortener\nNo\nYes\nYes\n\n\nQR code\nGenerate and decode / read QR code graphics\nNo\nYes\nUnknown\n\n\nQuickChart\nGenerate chart and graph images\nNo\nYes\nYes\n\n\nReqRes\nA hosted REST-API ready to respond to your AJAX requests\nNo\nYes\nUnknown\n\n\nScrape Website Email\nGrabs email addresses from a URL\nX-Mashape-Key\nYes\nUnknown\n\n\nScraperApi\nEasily build scalable web scrapers\napiKey\nYes\nUnknown\n\n\nScreenshotAPI.net\nCreate pixel-perfect website screenshots\napiKey\nYes\nYes\n\n\nSHOUTCLOUD\nALL-CAPS AS A SERVICE\nNo\nNo\nUnknown\n\n\nStackExchange\nQ&A forum for developers\nOAuth\nYes\nUnknown\n\n\nVerse\nCheck what's the latest version of your favorite open-source project\nNo\nYes\nUnknown\n\n\nXML to JSON\nIntegration developer utility APIs\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nDictionaries\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nLingua Robot\nWord definitions, pronunciations, synonyms, antonyms and others\napiKey\nYes\nYes\n\n\nMerriam-Webster\nDictionary and Thesaurus Data\napiKey\nYes\nUnknown\n\n\nOwlBot\nDefinitions with example sentence and photo if available\napiKey\nYes\nYes\n\n\nOxford\nDictionary Data\napiKey\nYes\nNo\n\n\nWordnik\nDictionary Data\napiKey\nNo\nUnknown\n\n\nWords\nDefinitions and synonyms for more than 150,000 words\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nDocuments & Productivity\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCloudmersive Document and Data Conversion\nHTML/URL to PDF/PNG, Office documents to PDF, image conversion\napiKey\nYes\nYes\n\n\nFile.io\nFile Sharing\nNo\nYes\nUnknown\n\n\nMercury\nWeb parser\napiKey\nYes\nUnknown\n\n\npdflayer\nHTML/URL to PDF\napiKey\nYes\nUnknown\n\n\nPocket\nBookmarking service\nOAuth\nYes\nUnknown\n\n\nPrexView\nData from XML or JSON to PDF, HTML or Image\napiKey\nYes\nUnknown\n\n\nRestpack\nProvides screenshot, HTML to PDF and content extraction APIs\napiKey\nYes\nUnknown\n\n\nTodoist\nTodo Lists\nOAuth\nYes\nUnknown\n\n\nVector Express\nFree vector file converting API\nNo\nNo\nYes\n\n\nWakaTime\nAutomated time tracking leaderboards for programmers\nNo\nYes\nUnknown\n\n\nWunderlist\nTodo Lists\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nEnvironment\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAirVisual\nAir quality and weather data\napiKey\nYes\nUnknown\n\n\nGr\u00fcnstromIndex\nGreen Power Index for Germany (Gr\u00fcnstromindex/GSI)\nNo\nNo\nYes\n\n\nOpenAQ\nOpen air quality data\napiKey\nYes\nUnknown\n\n\nPM25.in\nAir quality of China\napiKey\nNo\nUnknown\n\n\nPVWatts\nEnergy production photovoltaic (PV) energy systems\napiKey\nYes\nUnknown\n\n\nUK Carbon Intensity\nThe Official Carbon Intensity API for Great Britain developed by National Grid\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nEvents\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nEventbrite\nFind events\nOAuth\nYes\nUnknown\n\n\nPicatic\nSell tickets anywhere\napiKey\nYes\nUnknown\n\n\nTicketmaster\nSearch events, attractions, or venues\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nFinance\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAlpha Vantage\nRealtime and historical stock data\napiKey\nYes\nUnknown\n\n\nBarchart OnDemand\nStock, Futures and Forex Market Data\napiKey\nYes\nUnknown\n\n\nConsumer Financial Protection Bureau\nFinancial services consumer complaint data\napiKey\nYes\nUnknown\n\n\nFinancial Modeling Prep\nStock information and data\nNo\nYes\nUnknown\n\n\nIEX\nRealtime stock data\nNo\nYes\nYes\n\n\nIEX Cloud\nRealtime & Historical Stock and Market Data\napiKey\nYes\nYes\n\n\nIG\nSpreadbetting and CFD Market Data\napiKey\nYes\nUnknown\n\n\nPlaid\nConnect with users\u2019 bank accounts and access transaction data\napiKey\nYes\nUnknown\n\n\nRazorpay IFSC\nIndian Financial Systems Code (Bank Branch Codes)\nNo\nYes\nUnknown\n\n\nRoutingNumbers.info\nACH/NACHA Bank Routing Numbers\nNo\nYes\nUnknown\n\n\nTradier\nUS equity/option market data (delayed, intraday, historical)\nOAuth\nYes\nYes\n\n\nVAT Rates\nA collection of all VAT rates for EU countries\nNo\nYes\nUnknown\n\n\nYNAB\nBudgeting & Planning\nOAuth\nYes\nYes\n\n\n\n\u2b06 Back to Index\nFood & Drink\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nEdamam\nRecipe Search\napiKey\nYes\nUnknown\n\n\nLCBO\nAlcohol\napiKey\nYes\nUnknown\n\n\nOpen Brewery DB\nBreweries, Cideries and Craft Beer Bottle Shops\nNo\nYes\nYes\n\n\nOpen Food Facts\nFood Products Database\nNo\nYes\nUnknown\n\n\nPunkAPI\nBrewdog Beer Recipes\nNo\nYes\nUnknown\n\n\nRecipe Puppy\nFood\nNo\nNo\nUnknown\n\n\nTacoFancy\nCommunity-driven taco database\nNo\nNo\nUnknown\n\n\nThe Report of the Week\nFood & Drink Reviews\nNo\nYes\nUnknown\n\n\nTheCocktailDB\nCocktail Recipes\napiKey\nYes\nYes\n\n\nTheMealDB\nMeal Recipes\napiKey\nYes\nYes\n\n\nWhat's on the menu?\nNYPL human-transcribed historical menu collection\napiKey\nNo\nUnknown\n\n\nZomato\nDiscover restaurants\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nFraud Prevention\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nFraudLabs Pro\nScreen order information using AI to detect frauds\napiKey\nYes\nUnknown\n\n\nWhitepages Pro\nGlobal identity verification with phone, address, email and IP\napiKey\nYes\nUnknown\n\n\nWhitepages Pro\nPhone reputation to detect spammy phones\napiKey\nYes\nUnknown\n\n\nWhitepages Pro\nGet an owner\u2019s name, address, demographics based on the phone number\napiKey\nYes\nUnknown\n\n\nWhitepages Pro\nPhone number validation, line_type, carrier append\napiKey\nYes\nUnknown\n\n\nWhitepages Pro\nGet normalized physical address, residents, address type and validity\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nGames & Comics\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAge of Empires II\nGet information about Age of Empires II resources\nNo\nYes\nUnknown\n\n\nAmiiboAPI\nAmiibo Information\nNo\nNo\nYes\n\n\nBattle.net\nBlizzard Entertainment\napiKey\nYes\nUnknown\n\n\nChuck Norris Database\nJokes\nNo\nNo\nUnknown\n\n\nClash of Clans\nClash of Clans Game Information\napiKey\nYes\nUnknown\n\n\nClash Royale\nClash Royale Game Information\napiKey\nYes\nUnknown\n\n\nComic Vine\nComics\nNo\nYes\nUnknown\n\n\nDeck of Cards\nDeck of Cards\nNo\nNo\nUnknown\n\n\nDestiny The Game\nBungie Platform API\napiKey\nYes\nUnknown\n\n\nDota 2\nProvides information about Player stats , Match stats, Rankings for Dota 2\nNo\nYes\nUnknown\n\n\nDungeons and Dragons\nReference for 5th edition spells, classes, monsters, and more\nNo\nNo\nNo\n\n\nEve Online\nThird-Party Developer Documentation\nOAuth\nYes\nUnknown\n\n\nFinal Fantasy XIV\nFinal Fantasy XIV Game data API\nNo\nYes\nYes\n\n\nFortnite\nFortnite Stats & Cosmetics\napiKey\nYes\nYes\n\n\nFortnite\nFortnite Stats\napiKey\nYes\nUnknown\n\n\nGiant Bomb\nVideo Games\nNo\nYes\nUnknown\n\n\nGuild Wars 2\nGuild Wars 2 Game Information\napiKey\nYes\nUnknown\n\n\nHalo\nHalo 5 and Halo Wars 2 Information\napiKey\nYes\nUnknown\n\n\nHearthstone\nHearthstone Cards Information\nX-Mashape-Key\nYes\nUnknown\n\n\nHypixel\nHypixel player stats\napiKey\nYes\nUnknown\n\n\nIGDB.com\nVideo Game Database\napiKey\nYes\nUnknown\n\n\nJokeAPI\nProgramming, Miscellaneous and Dark Jokes\nNo\nYes\nYes\n\n\nJokes\nProgramming and general jokes\nNo\nYes\nUnknown\n\n\nJservice\nJeopardy Question Database\nNo\nNo\nUnknown\n\n\nMagic The Gathering\nMagic The Gathering Game Information\nNo\nNo\nUnknown\n\n\nMarvel\nMarvel Comics\napiKey\nNo\nUnknown\n\n\nmod.io\nCross Platform Mod API\napiKey\nYes\nUnknown\n\n\nOpen Trivia\nTrivia Questions\nNo\nYes\nUnknown\n\n\nPandaScore\nE-sports games and results\napiKey\nYes\nUnknown\n\n\nPlayerUnknown's Battlegrounds\nPUBG Stats\napiKey\nYes\nUnknown\n\n\nPok\u00e9api\nPok\u00e9mon Information\nNo\nYes\nUnknown\n\n\nPok\u00e9mon TCG\nPok\u00e9mon TCG Information\nNo\nYes\nUnknown\n\n\nRick and Morty\nAll the Rick and Morty information, including images\nNo\nYes\nYes\n\n\nRiot Games\nLeague of Legends Game Information\napiKey\nYes\nUnknown\n\n\nScryfall\nMagic: The Gathering database\nNo\nYes\nYes\n\n\nSteam\nSteam Client Interaction\nOAuth\nYes\nUnknown\n\n\nSuperHeroes\nAll SuperHeroes and Villains data from all universes under a single API\napiKey\nYes\nUnknown\n\n\nTronald Dump\nThe dumbest things Donald Trump has ever said\nNo\nYes\nUnknown\n\n\nVainglory\nVainglory Players, Matches and Telemetry\napiKey\nYes\nYes\n\n\nWargaming.net\nWargaming.net info and stats\napiKey\nYes\nNo\n\n\nxkcd\nRetrieve xkcd comics as JSON\nNo\nYes\nNo\n\n\n\n\u2b06 Back to Index\nGeocoding\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nadresse.data.gouv.fr\nAddress database of France, geocoding and reverse\nNo\nYes\nUnknown\n\n\nBattuta\nA (country/region/city) in-cascade location API\napiKey\nNo\nUnknown\n\n\nBing Maps\nCreate/customize digital maps based on Bing Maps data\napiKey\nYes\nUnknown\n\n\nbng2latlong\nConvert British OSGB36 easting and northing (British National Grid) to WGS84 latitude and longitude\nNo\nYes\nYes\n\n\nCitySDK\nOpen APIs for select European cities\nNo\nYes\nUnknown\n\n\nDaum Maps\nDaum Maps provide multiple APIs for Korean maps\napiKey\nNo\nUnknown\n\n\nFreeGeoIP\nFree geo ip information, no registration required. 15k/hour rate limit\nNo\nYes\nYes\n\n\nGeoApi\nFrench geographical data\nNo\nYes\nUnknown\n\n\nGeocod.io\nAddress geocoding / reverse geocoding in bulk\napiKey\nYes\nUnknown\n\n\nGeocode.xyz\nProvides worldwide forward/reverse geocoding, batch geocoding and geoparsing\nNo\nYes\nUnknown\n\n\nGeoDataSource\nGeocoding of city name by using latitude and longitude coordinates\napiKey\nYes\nUnknown\n\n\nGeoJS\nIP geolocation with ChatOps integration\nNo\nYes\nYes\n\n\nGeoNames\nPlace names and other geographical data\nNo\nNo\nUnknown\n\n\ngeoPlugin\nIP geolocation and currency conversion\nNo\nYes\nYes\n\n\nGoogle Earth Engine\nA cloud-based platform for planetary-scale environmental data analysis\napiKey\nYes\nUnknown\n\n\nGoogle Maps\nCreate/customize digital maps based on Google Maps data\napiKey\nYes\nUnknown\n\n\nHelloSalut\nGet hello translation following user language\nNo\nYes\nUnknown\n\n\nHERE Maps\nCreate/customize digital maps based on HERE Maps data\napiKey\nYes\nUnknown\n\n\nIndian Cities\nGet all Indian cities in a clean JSON Format\nNo\nYes\nYes\n\n\nIP 2 Country\nMap an IP to a country\nNo\nYes\nUnknown\n\n\nIP Address Details\nFind geolocation with ip address\nNo\nYes\nUnknown\n\n\nIP Location\nFind location with ip address\nNo\nNo\nUnknown\n\n\nIP Location\nFind IP address location information\nNo\nYes\nUnknown\n\n\nIP Sidekick\nGeolocation API that returns extra information about an IP address\napiKey\nYes\nUnknown\n\n\nIP Vigilante\nFree IP Geolocation API\nNo\nYes\nUnknown\n\n\nIP2Location\nIP geolocation web service to get more than 55 parameters\napiKey\nYes\nUnknown\n\n\nIP2Proxy\nDetect proxy and VPN using IP address\napiKey\nYes\nUnknown\n\n\nIPGeolocationAPI.com\nLocate your visitors by IP with country details\nNo\nYes\nYes\n\n\nIPInfoDB\nFree Geolocation tools and APIs for country, region, city and time zone lookup by IP address\napiKey\nYes\nUnknown\n\n\nipstack\nLocate and identify website visitors by IP address\napiKey\nYes\nUnknown\n\n\nKwelo Network\nLocate and get detailed information on IP address\nNo\nYes\nYes\n\n\nLocationIQ\nProvides forward/reverse geocoding and batch geocoding\napiKey\nYes\nYes\n\n\nMapbox\nCreate/customize beautiful digital maps\napiKey\nYes\nUnknown\n\n\nMexico\nMexico RESTful zip codes API\nNo\nYes\nUnknown\n\n\nOne Map, Singapore\nSingapore Land Authority REST API services for Singapore addresses\napiKey\nYes\nUnknown\n\n\nOnWater\nDetermine if a lat/lon is on water or land\nNo\nYes\nUnknown\n\n\nOpenCage\nForward and reverse geocoding using open data\napiKey\nYes\nYes\n\n\nOpenStreetMap\nNavigation, geolocation and geographical data\nOAuth\nNo\nUnknown\n\n\nPostcodeData.nl\nProvide geolocation data based on postcode for Dutch addresses\nNo\nNo\nUnknown\n\n\nPostcodes.io\nPostcode lookup & Geolocation for the UK\nNo\nYes\nYes\n\n\nREST Countries\nGet information about countries via a RESTful API\nNo\nYes\nUnknown\n\n\nSmartIP.io\nIP Geolocation and Threat Intelligence API\napiKey\nYes\nYes\n\n\nUebermaps\nDiscover and share maps with friends\napiKey\nYes\nUnknown\n\n\nUS ZipCode\nValidate and append data for any US ZipCode\napiKey\nYes\nYes\n\n\nUtah AGRC\nUtah Web API for geocoding Utah addresses\napiKey\nYes\nUnknown\n\n\nViaCep\nBrazil RESTful zip codes API\nNo\nYes\nUnknown\n\n\nZipCodeAPI\nUS zip code distance, radius and location API\napiKey\nYes\nUnknown\n\n\nZippopotam\nGet information about place such as country, city, state, etc\nNo\nNo\nUnknown\n\n\n\n\u2b06 Back to Index\nGovernment\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBCLaws\nAccess to the laws of British Columbia\nNo\nNo\nUnknown\n\n\nBusinessUSA\nAuthoritative information on U.S. programs, events, services and more\napiKey\nYes\nUnknown\n\n\nCensus.gov\nThe US Census Bureau provides various APIs and data sets on demographics and businesses\nNo\nYes\nUnknown\n\n\nCity, Lyon Opendata\nLyon(FR) City Open Data\napiKey\nYes\nUnknown\n\n\nCity, Nantes Opendata\nNantes(FR) City Open Data\napiKey\nYes\nUnknown\n\n\nCity, Prague Opendata\nPrague(CZ) City Open Data\nNo\nNo\nUnknown\n\n\nCode.gov\nThe primary platform for Open Source and code sharing for the U.S. Federal Government\napiKey\nYes\nUnknown\n\n\nColorado Data Engine\nFormatted and geolocated Colorado public data\nNo\nYes\nUnknown\n\n\nColorado Information Marketplace\nColorado State Government Open Data\nNo\nYes\nUnknown\n\n\nData USA\nUS Public Data\nNo\nYes\nUnknown\n\n\nData.gov\nUS Government Data\napiKey\nYes\nUnknown\n\n\nData.parliament.uk\nContains live datasets including information about petitions, bills, MP votes, attendance and more\nNo\nNo\nUnknown\n\n\nDistrict of Columbia Open Data\nContains D.C. government public datasets, including crime, GIS, financial data, and so on\nNo\nYes\nUnknown\n\n\nEPA\nWeb services and data sets from the US Environmental Protection Agency\nNo\nYes\nUnknown\n\n\nFEC\nInformation on campaign donations in federal elections\napiKey\nYes\nUnknown\n\n\nFederal Register\nThe Daily Journal of the United States Government\nNo\nYes\nUnknown\n\n\nFood Standards Agency\nUK food hygiene rating data API\nNo\nNo\nUnknown\n\n\nOpen Government, Australia\nAustralian Government Open Data\nNo\nYes\nUnknown\n\n\nOpen Government, Belgium\nBelgium Government Open Data\nNo\nYes\nUnknown\n\n\nOpen Government, Canada\nCanadian Government Open Data\nNo\nNo\nUnknown\n\n\nOpen Government, France\nFrench Government Open Data\napiKey\nYes\nUnknown\n\n\nOpen Government, India\nIndian Government Open Data\napiKey\nYes\nUnknown\n\n\nOpen Government, Italy\nItaly Government Open Data\nNo\nYes\nUnknown\n\n\nOpen Government, New Zealand\nNew Zealand Government Open Data\nNo\nYes\nUnknown\n\n\nOpen Government, Romania\nRomania Government Open Data\nNo\nNo\nUnknown\n\n\nOpen Government, Taiwan\nTaiwan Government Open Data\nNo\nYes\nUnknown\n\n\nOpen Government, USA\nUnited States Government Open Data\nNo\nYes\nUnknown\n\n\nRegulations.gov\nFederal regulatory materials to increase understanding of the Federal rule making process\napiKey\nYes\nUnknown\n\n\nRepresent by Open North\nFind Canadian Government Representatives\nNo\nYes\nUnknown\n\n\nUSAspending.gov\nUS federal spending data\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nHealth\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBetterDoctor\nDetailed information about doctors in your area\napiKey\nYes\nUnknown\n\n\nDiabetes\nLogging and retrieving diabetes information\nNo\nNo\nUnknown\n\n\nFlutrack\nInfluenza-like symptoms with geotracking\nNo\nNo\nUnknown\n\n\nHealthcare.gov\nEducational content about the US Health Insurance Marketplace\nNo\nYes\nUnknown\n\n\nLexigram\nNLP that extracts mentions of clinical concepts from text, gives access to clinical ontology\napiKey\nYes\nUnknown\n\n\nMakeup\nMakeup Information\nNo\nNo\nUnknown\n\n\nMedicare\nAccess to the data from the CMS - medicare.gov\nNo\nYes\nUnknown\n\n\nNPPES\nNational Plan & Provider Enumeration System, info on healthcare providers registered in US\nNo\nYes\nUnknown\n\n\nNutritionix\nWorlds largest verified nutrition database\napiKey\nYes\nUnknown\n\n\nopenFDA\nPublic FDA data about drugs, devices and foods\nNo\nYes\nUnknown\n\n\nUSDA Nutrients\nNational Nutrient Database for Standard Reference\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nJobs\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAdzuna\nJob board aggregator\napiKey\nYes\nUnknown\n\n\nAuthentic Jobs\nJob board for designers, hackers and creative pros\napiKey\nYes\nUnknown\n\n\nCareerjet\nJob search engine\napiKey\nNo\nUnknown\n\n\nGithub Jobs\nJobs for software developers\nNo\nYes\nYes\n\n\nGraphQL Jobs\nJobs with GraphQL\nNo\nYes\nYes\n\n\nIndeed\nJob board aggregator\napiKey\nYes\nUnknown\n\n\nJobs2Careers\nJob aggregator\napiKey\nYes\nUnknown\n\n\nJooble\nJob search engine\napiKey\nYes\nUnknown\n\n\nJuju\nJob search engine\napiKey\nNo\nUnknown\n\n\nOpen Skills\nJob titles, skills and related jobs data\nNo\nNo\nUnknown\n\n\nReed\nJob board aggregator\napiKey\nYes\nUnknown\n\n\nSearch.gov Jobs\nTap into a list of current jobs openings with the United States government\nNo\nYes\nUnknown\n\n\nThe Muse\nJob board and company profiles\napiKey\nYes\nUnknown\n\n\nUpwork\nFreelance job board and management system\nOAuth\nYes\nUnknown\n\n\nUSAJOBS\nUS government job board\napiKey\nYes\nUnknown\n\n\nZipRecruiter\nJob search app and website\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nMachine Learning\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nClarifai\nComputer Vision\nOAuth\nYes\nUnknown\n\n\nCloudmersive\nImage captioning, face recognition, NSFW classification\napiKey\nYes\nYes\n\n\nDeepcode\nAI for code review\nNo\nYes\nUnknown\n\n\nDialogflow\nNatural Language Processing\napiKey\nYes\nUnknown\n\n\nKeen IO\nData Analytics\napiKey\nYes\nUnknown\n\n\nTime Door\nA time series analysis API\napiKey\nYes\nYes\n\n\nUnplugg\nForecasting API for timeseries data\napiKey\nYes\nUnknown\n\n\nWit.ai\nNatural Language Processing\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nMusic\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAI Mastering\nAutomated Music Mastering\napiKey\nYes\nYes\n\n\nBandsintown\nMusic Events\nNo\nYes\nUnknown\n\n\nDeezer\nMusic\nOAuth\nYes\nUnknown\n\n\nDiscogs\nMusic\nOAuth\nYes\nUnknown\n\n\nGenius\nCrowdsourced lyrics and music knowledge\nOAuth\nYes\nUnknown\n\n\nGenrenator\nMusic genre generator\nNo\nYes\nUnknown\n\n\niTunes Search\nSoftware products\nNo\nYes\nUnknown\n\n\nJamendo\nMusic\nOAuth\nYes\nUnknown\n\n\nKKBOX\nGet music libraries, playlists, charts, and perform out of KKBOX's platform\nOAuth\nYes\nUnknown\n\n\nLastFm\nMusic\napiKey\nYes\nUnknown\n\n\nLyrics.ovh\nSimple API to retrieve the lyrics of a song\nNo\nYes\nUnknown\n\n\nMixcloud\nMusic\nOAuth\nYes\nYes\n\n\nMusicBrainz\nMusic\nNo\nYes\nUnknown\n\n\nMusikki\nMusic\napiKey\nYes\nUnknown\n\n\nMusixmatch\nMusic\napiKey\nYes\nUnknown\n\n\nOpenwhyd\nDownload curated playlists of streaming tracks (YouTube, SoundCloud, etc...)\nNo\nYes\nNo\n\n\nSongkick\nMusic Events\nOAuth\nYes\nUnknown\n\n\nSongsterr\nProvides guitar, bass and drums tabs and chords\nNo\nYes\nUnknown\n\n\nSoundCloud\nAllow users to upload and share sounds\nOAuth\nYes\nUnknown\n\n\nSpotify\nView Spotify music catalog, manage users' libraries, get recommendations and more\nOAuth\nYes\nUnknown\n\n\nTasteDive\nSimilar artist API (also works for movies and TV shows)\napiKey\nYes\nUnknown\n\n\nTheAudioDB\nMusic\napiKey\nYes\nUnknown\n\n\nVagalume\nCrowdsourced lyrics and music knowledge\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nNews\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAssociated Press\nSearch for news and metadata from Associated Press\napiKey\nYes\nUnknown\n\n\nChronicling America\nProvides access to millions of pages of historic US newspapers from the Library of Congress\nNo\nNo\nUnknown\n\n\nCurrents\nLatest news published in various news sources, blogs and forums\napiKey\nYes\nYes\n\n\nFeedbin\nRSS reader\nOAuth\nYes\nUnknown\n\n\nFeedster\nSearchable and categorized collections of RSS feeds\napiKey\nYes\nUnknown\n\n\nNew York Times\nProvides news\napiKey\nYes\nUnknown\n\n\nNews\nHeadlines currently published on a range of news sources and blogs\napiKey\nYes\nUnknown\n\n\nNPR One\nPersonalized news listening experience from NPR\nOAuth\nYes\nUnknown\n\n\nThe Guardian\nAccess all the content the Guardian creates, categorised by tags and section\napiKey\nYes\nUnknown\n\n\nThe Old Reader\nRSS reader\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nOpen Data\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\n18F\nUnofficial US Federal Government API Development\nNo\nNo\nUnknown\n\n\nAbbreviation\nGet abbreviations and meanings\nX-Mashape-Key\nYes\nUnknown\n\n\nArchive.org\nThe Internet Archive\nNo\nYes\nUnknown\n\n\nARSAT\nARSAT public data\napiKey\nYes\nUnknown\n\n\nCallook.info\nUnited States ham radio callsigns\nNo\nYes\nUnknown\n\n\nCARTO\nLocation Information Prediction\napiKey\nYes\nUnknown\n\n\nCelebinfo\nCelebrity information\nX-Mashape-Key\nYes\nUnknown\n\n\nCivicFeed\nNews articles and public datasets\napiKey\nYes\nUnknown\n\n\nDatakick\nThe open product database\napiKey\nYes\nUnknown\n\n\nEnigma Public\nBroadest collection of public data\napiKey\nYes\nYes\n\n\nfonoApi\nMobile Device Description\nNo\nYes\nUnknown\n\n\nFrench Address Search\nAddress search via the French Government\nNo\nYes\nUnknown\n\n\nLinkPreview\nGet JSON formatted summary with title, description and preview image for any requested URL\napiKey\nYes\nYes\n\n\nMarijuana Strains\nMarijuana strains, races, flavors and effects\napiKey\nNo\nUnknown\n\n\nMicrolink.io\nExtract structured data from any website\nNo\nYes\nYes\n\n\nOpenCorporates\nData on corporate entities and directors in many countries\napiKey\nYes\nUnknown\n\n\nQmeta\nGlobal Search Engine\napiKey\nYes\nUnknown\n\n\nQuandl\nStock Market Data\nNo\nYes\nUnknown\n\n\nRecreation Information Database\nRecreational areas, federal lands, historic sites, museums, and other attractions/resources(US)\napiKey\nYes\nUnknown\n\n\nScoop.it\nContent Curation Service\napiKey\nNo\nUnknown\n\n\nTeleport\nQuality of Life Data\nNo\nYes\nUnknown\n\n\nUniversities List\nUniversity names, countries and domains\nNo\nYes\nUnknown\n\n\nUniversity of Oslo\nCourses, lecture videos, detailed information for courses etc. for the University of Oslo (Norway)\nNo\nYes\nUnknown\n\n\nUPC database\nMore than 1.5 million barcode numbers from all around the world\napiKey\nYes\nUnknown\n\n\nWikidata\nCollaboratively edited knowledge base operated by the Wikimedia Foundation\nOAuth\nYes\nUnknown\n\n\nWikipedia\nMediawiki Encyclopedia\nNo\nYes\nUnknown\n\n\nYelp\nFind Local Business\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nOpen Source Projects\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCountly\nCountly web analytics\nNo\nNo\nUnknown\n\n\nDrupal.org\nDrupal.org\nNo\nYes\nUnknown\n\n\nEvil Insult Generator\nEvil Insults\nNo\nYes\nYes\n\n\nLibraries.io\nOpen source software libraries\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nPatent\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nEPO\nEuropean patent search system api\nOAuth\nYes\nUnknown\n\n\nTIPO\nTaiwan patent search system api\napiKey\nYes\nUnknown\n\n\nUSPTO\nUSA patent api services\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nPersonality\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAdvice Slip\nGenerate random advice slips\nNo\nYes\nUnknown\n\n\nchucknorris.io\nJSON API for hand curated Chuck Norris jokes\nNo\nYes\nUnknown\n\n\nFavQs.com\nFavQs allows you to collect, discover and share your favorite quotes\napiKey\nYes\nUnknown\n\n\nFOAAS\nFuck Off As A Service\nNo\nNo\nUnknown\n\n\nForismatic\nInspirational Quotes\nNo\nNo\nUnknown\n\n\nicanhazdadjoke\nThe largest selection of dad jokes on the internet\nNo\nYes\nUnknown\n\n\nkanye.rest\nREST API for random Kanye West quotes\nNo\nYes\nYes\n\n\nMedium\nCommunity of readers and writers offering unique perspectives on ideas\nOAuth\nYes\nUnknown\n\n\nNaMoMemes\nMemes on Narendra Modi\nNo\nYes\nUnknown\n\n\nProgramming Quotes\nProgramming Quotes API for open source projects\nNo\nYes\nUnknown\n\n\nQuote Garden\nREST API for more than 5000 famous quotes\nNo\nYes\nUnknown\n\n\nQuotes on Design\nInspirational Quotes\nNo\nYes\nUnknown\n\n\nTraitify\nAssess, collect and analyze Personality\nNo\nYes\nUnknown\n\n\ntronalddump.io\nApi & web archive for the things Donald Trump has said\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nPhotography\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nFlickr\nFlickr Services\nOAuth\nYes\nUnknown\n\n\nGetty Images\nBuild applications using the world's most powerful imagery\nOAuth\nYes\nUnknown\n\n\nGfycat\nJiffier GIFs\nOAuth\nYes\nUnknown\n\n\nGiphy\nGet all your gifs\napiKey\nYes\nUnknown\n\n\nGyazo\nUpload images\napiKey\nYes\nUnknown\n\n\nImgur\nImages\nOAuth\nYes\nUnknown\n\n\nLorem Picsum\nImages from Unsplash\nNo\nYes\nUnknown\n\n\nPexels\nFree Stock Photos and Videos\napiKey\nYes\nYes\n\n\nPixabay\nPhotography\napiKey\nYes\nUnknown\n\n\nPixhost\nUpload images, photos, galleries\nNo\nYes\nUnknown\n\n\nPlaceKitten\nResizable kitten placeholder images\nNo\nYes\nUnknown\n\n\nScreenShotLayer\nURL 2 Image\nNo\nYes\nUnknown\n\n\nUnsplash\nPhotography\nOAuth\nYes\nUnknown\n\n\nWallhaven\nWallpapers\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nScience & Math\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\narcsecond.io\nMultiple astronomy data sources\nNo\nYes\nUnknown\n\n\nCORE\nAccess the world's Open Access research papers\napiKey\nYes\nUnknown\n\n\nGBIF\nGlobal Biodiversity Information Facility\nNo\nYes\nYes\n\n\niDigBio\nAccess millions of museum specimens from organizations around the world\nNo\nYes\nUnknown\n\n\ninspirehep.net\nHigh Energy Physics info. system\nNo\nYes\nUnknown\n\n\nITIS\nIntegrated Taxonomic Information System\nNo\nYes\nUnknown\n\n\nLaunch Library\nUpcoming Space Launches\nNo\nYes\nUnknown\n\n\nMinor Planet Center\nAsterank.com Information\nNo\nNo\nUnknown\n\n\nNASA\nNASA data, including imagery\nNo\nYes\nUnknown\n\n\nNASA APOD (unofficial API)\nAPI for getting APOD (Astronomy Image of the Day) images along with metadata\nNo\nYes\nYes\n\n\nNewton\nSymbolic and Arithmetic Math Calculator\nNo\nYes\nUnknown\n\n\nNumbers\nFacts about numbers\nNo\nNo\nUnknown\n\n\nOpen Notify\nISS astronauts, current location, etc\nNo\nNo\nUnknown\n\n\nOpen Science Framework\nRepository and archive for study designs, research materials, data, manuscripts, etc\nNo\nYes\nUnknown\n\n\nSHARE\nA free, open, dataset about research and scholarly activities\nNo\nYes\nUnknown\n\n\nSpaceX\nCompany, vehicle, launchpad and launch data\nNo\nYes\nUnknown\n\n\nSunrise and Sunset\nSunset and sunrise times for a given latitude and longitude\nNo\nYes\nUnknown\n\n\nTrefle\nBotanical data for plant species\napiKey\nYes\nUnknown\n\n\nUSGS Earthquake Hazards Program\nEarthquakes data real-time\nNo\nYes\nUnknown\n\n\nUSGS Water Services\nWater quality and level info for rivers and lakes\nNo\nYes\nUnknown\n\n\nWorld Bank\nWorld Data\nNo\nNo\nUnknown\n\n\n\n\u2b06 Back to Index\nSecurity\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nCensys.io\nSearch engine for Internet connected host and devices\napiKey\nYes\nNo\n\n\nCRXcavator\nChrome extension risk scoring\napiKey\nYes\nUnknown\n\n\nFilterLists\nLists of filters for adblockers and firewalls\nNo\nYes\nUnknown\n\n\nHaveIBeenPwned\nPasswords which have previously been exposed in data breaches\napiKey\nYes\nUnknown\n\n\nNational Vulnerability Database\nU.S. National Vulnerability Database\nNo\nYes\nUnknown\n\n\nSecurityTrails\nDomain and IP related information such as current and historical WHOIS and DNS records\napiKey\nYes\nUnknown\n\n\nShodan\nSearch engine for Internet connected devices\napiKey\nYes\nUnknown\n\n\nUK Police\nUK Police data\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nShopping\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBest Buy\nProducts, Buying Options, Categories, Recommendations, Stores and Commerce\napiKey\nYes\nUnknown\n\n\nBratabase\nDatabase of different types of Bra Sizes\nOAuth\nYes\nUnknown\n\n\neBay\nSell and Buy on eBay\nOAuth\nYes\nUnknown\n\n\nWal-Mart\nItem price and availability\napiKey\nYes\nUnknown\n\n\nWegmans\nWegmans Food Markets\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nSocial\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBuffer\nAccess to pending and sent updates in Buffer\nOAuth\nYes\nUnknown\n\n\nCisco Spark\nTeam Collaboration Software\nOAuth\nYes\nUnknown\n\n\nDiscord\nMake bots for Discord, integrate Discord onto an external platform\nOAuth\nYes\nUnknown\n\n\nDisqus\nCommunicate with Disqus data\nOAuth\nYes\nUnknown\n\n\nFacebook\nFacebook Login, Share on FB, Social Plugins, Analytics and more\nOAuth\nYes\nUnknown\n\n\nFoursquare\nInteract with Foursquare users and places (geolocation-based checkins, photos, tips, events, etc)\nOAuth\nYes\nUnknown\n\n\nFuck Off as a Service\nAsks someone to fuck off\nNo\nYes\nUnknown\n\n\nFull Contact\nGet Social Media profiles and contact Information\nOAuth\nYes\nUnknown\n\n\nHackerNews\nSocial news for CS and entrepreneurship\nNo\nYes\nUnknown\n\n\nInstagram\nInstagram Login, Share on Instagram, Social Plugins and more\nOAuth\nYes\nUnknown\n\n\nLinkedIn\nThe foundation of all digital integrations with LinkedIn\nOAuth\nYes\nUnknown\n\n\nMeetup.com\nData about Meetups from Meetup.com\napiKey\nYes\nUnknown\n\n\nMixer\nGame Streaming API\nOAuth\nYes\nUnknown\n\n\nMySocialApp\nSeamless Social Networking features, API, SDK to any app\napiKey\nYes\nUnknown\n\n\nOpen Collective\nGet Open Collective data\nNo\nYes\nUnknown\n\n\nPinterest\nThe world's catalog of ideas\nOAuth\nYes\nUnknown\n\n\nPWRTelegram bot\nBoosted version of the Telegram bot API\nOAuth\nYes\nUnknown\n\n\nReddit\nHomepage of the internet\nOAuth\nYes\nUnknown\n\n\nSharedCount\nSocial media like and share data for any URL\napiKey\nYes\nUnknown\n\n\nSlack\nTeam Instant Messaging\nOAuth\nYes\nUnknown\n\n\nTelegram Bot\nSimplified HTTP version of the MTProto API for bots\nOAuth\nYes\nUnknown\n\n\nTelegram MTProto\nRead and write Telegram data\nOAuth\nYes\nUnknown\n\n\nTrash Nothing\nA freecycling community with thousands of free items posted every day\nOAuth\nYes\nYes\n\n\nTumblr\nRead and write Tumblr Data\nOAuth\nYes\nUnknown\n\n\nTwitch\nGame Streaming API\nOAuth\nYes\nUnknown\n\n\nTwitter\nRead and write Twitter data\nOAuth\nYes\nNo\n\n\nvk\nRead and write vk data\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nSports & Fitness\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nballdontlie\nBallldontlie provides access to stats data from the NBA\nNo\nYes\nYes\n\n\nBikeWise\nBikewise is a place to learn about and report bike crashes, hazards and thefts\nNo\nYes\nUnknown\n\n\nCanadian Football League (CFL)\nOfficial JSON API providing real-time league, team and player statistics about the CFL\napiKey\nYes\nNo\n\n\nCartola FC\nThe Cartola FC API serves to check the partial points of your team\nNo\nYes\nUnknown\n\n\nCity Bikes\nCity Bikes around the world\nNo\nNo\nUnknown\n\n\nCricket Live Scores\nLive cricket scores\nX-Mashape-Key\nYes\nUnknown\n\n\nErgast F1\nF1 data from the beginning of the world championships in 1950\nNo\nYes\nUnknown\n\n\nFitbit\nFitbit Information\nOAuth\nYes\nUnknown\n\n\nFootball (Soccer) Videos\nEmbed codes for goals and highlights from Premier League, Bundesliga, Serie A and many more\nNo\nYes\nYes\n\n\nFootball Prediction\nPredictions for upcoming football matches, odds, results and stats\nX-Mashape-Key\nYes\nUnknown\n\n\nFootball-Data.org\nFootball Data\nNo\nNo\nUnknown\n\n\nJCDecaux Bike\nJCDecaux's self-service bicycles\napiKey\nYes\nUnknown\n\n\nNBA Stats\nCurrent and historical NBA Statistics\nNo\nYes\nUnknown\n\n\nNFL Arrests\nNFL Arrest Data\nNo\nNo\nUnknown\n\n\nNHL Records and Stats\nNHL historical data and statistics\nNo\nYes\nUnknown\n\n\nPro Motocross\nThe RESTful AMA Pro Motocross lap times for every racer on the start gate\nNo\nNo\nUnknown\n\n\nStrava\nConnect with athletes, activities and more\nOAuth\nYes\nUnknown\n\n\nSuredBits\nQuery sports data, including teams, players, games, scores and statistics\nNo\nNo\nNo\n\n\nTheSportsDB\nCrowd-Sourced Sports Data and Artwork\napiKey\nYes\nYes\n\n\nWger\nWorkout manager data as exercises, muscles or equipment\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nTest Data\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAdorable Avatars\nGenerate random cartoon avatars\nNo\nYes\nUnknown\n\n\nBacon Ipsum\nA Meatier Lorem Ipsum Generator\nNo\nYes\nUnknown\n\n\nDicebear Avatars\nGenerate random pixel-art avatars\nNo\nYes\nNo\n\n\nFakeJSON\nService to generate test and fake data\napiKey\nYes\nYes\n\n\nFHIR\nFast Healthcare Interoperability Resources test data\nNo\nYes\nUnknown\n\n\nHipster Ipsum\nGenerates Hipster Ipsum text\nNo\nNo\nUnknown\n\n\nIdenticon\nGenerates abstract avatar image\nNo\nYes\nYes\n\n\nJSONPlaceholder\nFake data for testing and prototyping\nNo\nNo\nUnknown\n\n\nLorem Text\nGenerates Lorem Ipsum text\nX-Mashape-Key\nYes\nUnknown\n\n\nLoremPicsum\nGenerate placeholder pictures\nNo\nNo\nUnknown\n\n\nLoripsum\nThe \"lorem ipsum\" generator that doesn't suck\nNo\nNo\nUnknown\n\n\nRandomUser\nGenerates random user data\nNo\nYes\nUnknown\n\n\nRoboHash\nGenerate random robot/alien avatars\nNo\nYes\nUnknown\n\n\nThis Person Does not Exist\nGenerates real-life faces of people who do not exist\nNo\nYes\nUnknown\n\n\nUI Names\nGenerate random fake names\nNo\nYes\nUnknown\n\n\nYes No\nGenerate yes or no randomly\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nText Analysis\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAylien Text Analysis\nA collection of information retrieval and natural language APIs\napiKey\nYes\nUnknown\n\n\nCloudmersive Natural Language Processing\nNatural language processing and text analysis\napiKey\nYes\nYes\n\n\nDetect Language\nDetects text language\napiKey\nYes\nUnknown\n\n\nGoogle Cloud Natural\nNatural language understanding technology, including sentiment, entity and syntax analysis\napiKey\nYes\nUnknown\n\n\nLanguage Identification\nAutomatic language detection for any texts, supports over 175 languages\nX-Mashape-Key\nYes\nUnknown\n\n\nSemantira\nText Analytics with sentiment analysis, categorization & named entity extraction\nOAuth\nYes\nUnknown\n\n\nWatson Natural Language Understanding\nNatural language processing for advanced text analysis\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nTracking\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nPostmon\nAn API to query Brazilian ZIP codes and orders easily, quickly and free\nNo\nNo\nUnknown\n\n\nSweden\nProvides information about parcels in transport\napiKey\nNo\nUnknown\n\n\nUPS\nShipment and Address information\napiKey\nYes\nUnknown\n\n\nWhatPulse\nSmall application that measures your keyboard/mouse usage\nNo\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nTransportation\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nADS-B Exchange\nAccess real-time and historical data of any and all airborne aircraft\nNo\nYes\nUnknown\n\n\nAIS Hub\nReal-time data of any marine and inland vessel equipped with AIS tracking system\napiKey\nNo\nUnknown\n\n\nAIS Web\nAeronautical information in digital media produced by the Department of Airspace Control (DECEA)\napiKey\nNo\nUnknown\n\n\nAmadeus Travel Innovation Sandbox\nTravel Search - Limited usage\napiKey\nYes\nUnknown\n\n\nBay Area Rapid Transit\nStations and predicted arrivals for BART\napiKey\nNo\nUnknown\n\n\nBlaBlaCar\nSearch car sharing trips\napiKey\nYes\nUnknown\n\n\nCommunity Transit\nTransitland API\nNo\nYes\nUnknown\n\n\nGoibibo\nAPI for travel search\napiKey\nYes\nUnknown\n\n\nGraphHopper\nA-to-B routing with turn-by-turn instructions\napiKey\nYes\nUnknown\n\n\nIcelandic APIs\nOpen APIs that deliver services in or regarding Iceland\nNo\nYes\nUnknown\n\n\nIndian Railways\nIndian Railways Information\napiKey\nNo\nUnknown\n\n\nIzi\nAudio guide for travellers\napiKey\nYes\nUnknown\n\n\nMetro Lisboa\nDelays in subway lines\nNo\nNo\nNo\n\n\nNavitia\nThe open API for building cool stuff with transport data\napiKey\nYes\nUnknown\n\n\nREFUGE Restrooms\nProvides safe restroom access for transgender, intersex and gender nonconforming individuals\nNo\nYes\nUnknown\n\n\nSchiphol Airport\nSchiphol\napiKey\nYes\nUnknown\n\n\nTransitLand\nTransit Aggregation\nNo\nYes\nUnknown\n\n\nTransport for Atlanta, US\nMarta\nNo\nNo\nUnknown\n\n\nTransport for Auckland, New Zealand\nAuckland Transport\nNo\nYes\nUnknown\n\n\nTransport for Belgium\nBelgian transport API\nNo\nYes\nUnknown\n\n\nTransport for Berlin, Germany\nThird-party VBB API\nNo\nYes\nUnknown\n\n\nTransport for Bordeaux, France\nBordeaux M\u00e9tropole public transport and more (France)\napiKey\nYes\nUnknown\n\n\nTransport for Boston, US\nMBTA API\nNo\nNo\nUnknown\n\n\nTransport for Budapest, Hungary\nBudapest public transport API\nNo\nYes\nUnknown\n\n\nTransport for Chicago, US\nCTA\nNo\nNo\nUnknown\n\n\nTransport for Czech Republic\nCzech transport API\nNo\nYes\nUnknown\n\n\nTransport for Denver, US\nRTD\nNo\nNo\nUnknown\n\n\nTransport for Finland\nFinnish transport API\nNo\nYes\nUnknown\n\n\nTransport for Germany\nDeutsche Bahn (DB) API\napiKey\nNo\nUnknown\n\n\nTransport for Grenoble, France\nGrenoble public transport\nNo\nNo\nNo\n\n\nTransport for Honolulu, US\nHonolulu Transportation Information\napiKey\nNo\nUnknown\n\n\nTransport for India\nIndia Public Transport API\napiKey\nYes\nUnknown\n\n\nTransport for Lisbon, Portugal\nData about buses routes, parking and traffic\napiKey\nYes\nUnknown\n\n\nTransport for London, England\nTfL API\nNo\nYes\nUnknown\n\n\nTransport for Madrid, Spain\nMadrid BUS transport API\napiKey\nNo\nUnknown\n\n\nTransport for Manchester, England\nTfGM transport network data\napiKey\nYes\nNo\n\n\nTransport for Minneapolis, US\nNexTrip API\nOAuth\nNo\nUnknown\n\n\nTransport for New York City, US\nMTA\napiKey\nNo\nUnknown\n\n\nTransport for Norway\nNorwegian transport API\nNo\nNo\nUnknown\n\n\nTransport for Ottawa, Canada\nOC Transpo next bus arrival API\nNo\nNo\nUnknown\n\n\nTransport for Paris, France\nLive schedules made simple\nNo\nNo\nUnknown\n\n\nTransport for Paris, France\nRATP Open Data API\nNo\nNo\nUnknown\n\n\nTransport for Philadelphia, US\nSEPTA APIs\nNo\nNo\nUnknown\n\n\nTransport for Sao Paulo, Brazil\nSPTrans\nOAuth\nNo\nUnknown\n\n\nTransport for Sweden\nPublic Transport consumer\nOAuth\nYes\nUnknown\n\n\nTransport for Switzerland\nOfficial Swiss Public Transport Open Data\napiKey\nYes\nUnknown\n\n\nTransport for Switzerland\nSwiss public transport API\nNo\nYes\nUnknown\n\n\nTransport for The Netherlands\nNS, only trains\napiKey\nNo\nUnknown\n\n\nTransport for The Netherlands\nOVAPI, country-wide public transport\nNo\nYes\nUnknown\n\n\nTransport for Toronto, Canada\nTTC\nNo\nYes\nUnknown\n\n\nTransport for United States\nNextBus API\nNo\nNo\nUnknown\n\n\nTransport for Vancouver, Canada\nTransLink\nOAuth\nYes\nUnknown\n\n\nTransport for Victoria, AU\nPTV API\napiKey\nYes\nUnknown\n\n\nTransport for Washington, US\nWashington Metro transport API\nOAuth\nYes\nUnknown\n\n\nUber\nUber ride requests and price estimation\nOAuth\nYes\nYes\n\n\nWhereIsMyTransport\nPlatform for public transport data in emerging cities\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nURL Shorteners\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBitly\nURL shortener and link management\nOAuth\nYes\nUnknown\n\n\nCleanURI\nURL shortener service\nNo\nYes\nYes\n\n\nClickMeter\nMonitor, compare and optimize your marketing links\napiKey\nYes\nUnknown\n\n\nRebrandly\nCustom URL shortener for sharing branded links\napiKey\nYes\nUnknown\n\n\nRelink\nFree and secure URL shortener\nNo\nYes\nYes\n\n\n\n\u2b06 Back to Index\nVehicle\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nBrazilian Vehicles and Prices\nVehicles information from Funda\u00e7\u00e3o Instituto de Pesquisas Econ\u00f4micas - Fipe\nNo\nYes\nUnknown\n\n\nKelley Blue Book\nVehicle info, pricing, configuration, plus much more\napiKey\nYes\nNo\n\n\nMercedes-Benz\nTelematics data, remotely access vehicle functions, car configurator, locate service dealers\napiKey\nYes\nNo\n\n\nNHTSA\nNHTSA Product Information Catalog and Vehicle Listing\nNo\nYes\nUnknown\n\n\nSmartcar\nLock and unlock vehicles and get data like odometer reading and location. Works on most new cars\nOAuth\nYes\nYes\n\n\n\n\u2b06 Back to Index\nVideo\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\nAn API of Ice And Fire\nGame Of Thrones API\nNo\nYes\nUnknown\n\n\nBreaking Bad\nBreaking Bad API\nNo\nYes\nUnknown\n\n\nBreaking Bad Quotes\nSome Breaking Bad quotes\nNo\nYes\nUnknown\n\n\nCzech Television\nTV programme of Czech TV\nNo\nNo\nUnknown\n\n\nDailymotion\nDailymotion Developer API\nOAuth\nYes\nUnknown\n\n\nHarry Potter\nHarry Potter API\napiKey\nYes\nYes\n\n\nOpen Movie Database\nMovie information\napiKey\nYes\nUnknown\n\n\nRon Swanson Quotes\nTelevision\nNo\nYes\nUnknown\n\n\nSTAPI\nInformation on all things Star Trek\nNo\nNo\nNo\n\n\nSWAPI\nStar Wars Information\nNo\nYes\nUnknown\n\n\nThe Lord of the Rings\nThe Lord of the Rings API\napiKey\nYes\nUnknown\n\n\nTMDb\nCommunity-based movie data\napiKey\nYes\nUnknown\n\n\nTrakt\nMovie and TV Data\napiKey\nYes\nYes\n\n\nTVDB\nTelevision data\napiKey\nYes\nUnknown\n\n\nTVMaze\nTV Show Data\nNo\nNo\nUnknown\n\n\nUtelly\nCheck where a tv show or movie is available\nX-Mashape-Key\nYes\nUnknown\n\n\nVimeo\nVimeo Developer API\nOAuth\nYes\nUnknown\n\n\nYouTube\nAdd YouTube functionality to your sites and apps\nOAuth\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\nWeather\n\n\n\nAPI\nDescription\nAuth\nHTTPS\nCORS\n\n\n\n\n7Timer!\nWeather, especially for Astroweather\nNo\nNo\nUnknown\n\n\nAPIXU\nWeather\napiKey\nYes\nUnknown\n\n\nDark Sky\nWeather\napiKey\nYes\nNo\n\n\nMetaWeather\nWeather\nNo\nYes\nNo\n\n\nMeteorologisk Institutt\nWeather and climate data\nNo\nYes\nUnknown\n\n\nNOAA Climate Data\nWeather and climate data\napiKey\nYes\nUnknown\n\n\nODWeather\nWeather and weather webcams\nNo\nNo\nUnknown\n\n\nOpenUV\nReal-time UV Index Forecast\napiKey\nYes\nUnknown\n\n\nOpenWeatherMap\nWeather\napiKey\nNo\nUnknown\n\n\nStorm Glass\nGlobal marine weather from multiple sources\napiKey\nYes\nYes\n\n\nWeatherbit\nWeather\napiKey\nYes\nUnknown\n\n\nYahoo! Weather\nWeather\napiKey\nYes\nUnknown\n\n\n\n\u2b06 Back to Index\n\n"}, {"repo": "golang/go", "language": "Go", "readme": "\nThe Go Programming Language\nGo is an open source programming language that makes it easy to build simple,\nreliable, and efficient software.\n\nGopher image by Renee French, licensed under Creative Commons 3.0 Attributions license.\nOur canonical Git repository is located at https://go.googlesource.com/go.\nThere is a mirror of the repository at https://github.com/golang/go.\nUnless otherwise noted, the Go source files are distributed under the\nBSD-style license found in the LICENSE file.\nDownload and Install\nBinary Distributions\nOfficial binary distributions are available at https://golang.org/dl/.\nAfter downloading a binary release, visit https://golang.org/doc/install\nor load doc/install.html in your web browser for installation\ninstructions.\nInstall From Source\nIf a binary distribution is not available for your combination of\noperating system and architecture, visit\nhttps://golang.org/doc/install/source or load doc/install-source.html\nin your web browser for source installation instructions.\nContributing\nGo is the work of thousands of contributors. We appreciate your help!\nTo contribute, please read the contribution guidelines:\nhttps://golang.org/doc/contribute.html\nNote that the Go project uses the issue tracker for bug reports and\nproposals only. See https://golang.org/wiki/Questions for a list of\nplaces to ask questions about the Go language.\n\n"}, {"repo": "jlevy/the-art-of-command-line", "language": "None", "readme": "\n\ud83c\udf0d\n\u010ce\u0161tina \u2219 Deutsch \u2219 \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac \u2219 English \u2219 Espa\u00f1ol \u2219 Fran\u00e7ais \u2219 Indonesia \u2219 Italiano \u2219 \u65e5\u672c\u8a9e \u2219 \ud55c\uad6d\uc5b4 \u2219 Portugu\u00eas \u2219 Rom\u00e2n\u0103 \u2219 \u0420\u0443\u0441\u0441\u043a\u0438\u0439 \u2219 Sloven\u0161\u010dina \u2219 \u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430 \u2219 \u7b80\u4f53\u4e2d\u6587 \u2219 \u7e41\u9ad4\u4e2d\u6587\nThe Art of Command Line\nNote: I'm looking for a new (and potentially paid) lead author to help expand this to a more comprehensive Guide. While it's very popoular, it could be both deeper and more helpful. If you like to write and are close to being an expert on this material and willing to consider helping, please drop me a note at josh (0x40) holloway.com. \u2013jlevy, Holloway\n\nMeta\nBasics\nEveryday use\nProcessing files and data\nSystem debugging\nOne-liners\nObscure but useful\nmacOS only\nWindows only\nMore resources\nDisclaimer\n\n\nFluency on the command line is a skill often neglected or considered arcane, but it improves your flexibility and productivity as an engineer in both obvious and subtle ways. This is a selection of notes and tips on using the command-line that we've found useful when working on Linux. Some tips are elementary, and some are fairly specific, sophisticated, or obscure. This page is not long, but if you can use and recall all the items here, you know a lot.\nThis work is the result of many authors and translators.\nSome of this\noriginally\nappeared\non Quora,\nbut it has since moved to GitHub, where people more talented than the original author have made numerous improvements.\nPlease submit a question if you have a question related to the command line. Please contribute if you see an error or something that could be better!\nMeta\nScope:\n\nThis guide is both for beginners and the experienced. The goals are breadth (everything important), specificity (give concrete examples of the most common case), and brevity (avoid things that aren't essential or digressions you can easily look up elsewhere). Every tip is essential in some situation or significantly saves time over alternatives.\nThis is written for Linux, with the exception of the \"macOS only\" and \"Windows only\" sections. Many of the other items apply or can be installed on other Unices or macOS (or even Cygwin).\nThe focus is on interactive Bash, though many tips apply to other shells and to general Bash scripting.\nIt includes both \"standard\" Unix commands as well as ones that require special package installs -- so long as they are important enough to merit inclusion.\n\nNotes:\n\nTo keep this to one page, content is implicitly included by reference. You're smart enough to look up more detail elsewhere once you know the idea or command to Google. Use apt, yum, dnf, pacman, pip or brew (as appropriate) to install new programs.\nUse Explainshell to get a helpful breakdown of what commands, options, pipes etc. do.\n\nBasics\n\n\nLearn basic Bash. Actually, type man bash and at least skim the whole thing; it's pretty easy to follow and not that long. Alternate shells can be nice, but Bash is powerful and always available (learning only zsh, fish, etc., while tempting on your own laptop, restricts you in many situations, such as using existing servers).\n\n\nLearn at least one text-based editor well. The nano editor is one of the simplest for basic editing (opening, editing, saving, searching). However, for the power user in a text terminal, there is no substitute for Vim (vi), the hard-to-learn but venerable, fast, and full-featured editor. Many people also use the classic Emacs, particularly for larger editing tasks. (Of course, any modern software developer working on an extensive project is unlikely to use only a pure text-based editor and should also be familiar with modern graphical IDEs and tools.)\n\n\nFinding documentation:\n\nKnow how to read official documentation with man (for the inquisitive, man man lists the section numbers, e.g. 1 is \"regular\" commands, 5 is files/conventions, and 8 are for administration). Find man pages with apropos.\nKnow that some commands are not executables, but Bash builtins, and that you can get help on them with help and help -d. You can find out whether a command is an executable, shell builtin or an alias by using type command.\ncurl cheat.sh/command will give a brief \"cheat sheet\" with common examples of how to use a shell command.\n\n\n\nLearn about redirection of output and input using > and < and pipes using |. Know > overwrites the output file and >> appends. Learn about stdout and stderr.\n\n\nLearn about file glob expansion with * (and perhaps ? and [...]) and quoting and the difference between double \" and single ' quotes. (See more on variable expansion below.)\n\n\nBe familiar with Bash job management: &, ctrl-z, ctrl-c, jobs, fg, bg, kill, etc.\n\n\nKnow ssh, and the basics of passwordless authentication, via ssh-agent, ssh-add, etc.\n\n\nBasic file management: ls and ls -l (in particular, learn what every column in ls -l means), less, head, tail and tail -f (or even better, less +F), ln and ln -s (learn the differences and advantages of hard versus soft links), chown, chmod, du (for a quick summary of disk usage: du -hs *). For filesystem management, df, mount, fdisk, mkfs, lsblk. Learn what an inode is (ls -i or df -i).\n\n\nBasic network management: ip or ifconfig, dig, traceroute, route.\n\n\nLearn and use a version control management system, such as git.\n\n\nKnow regular expressions well, and the various flags to grep/egrep. The -i, -o, -v, -A, -B, and -C options are worth knowing.\n\n\nLearn to use apt-get, yum, dnf or pacman (depending on distro) to find and install packages. And make sure you have pip to install Python-based command-line tools (a few below are easiest to install via pip).\n\n\nEveryday use\n\n\nIn Bash, use Tab to complete arguments or list all available commands and ctrl-r to search through command history (after pressing, type to search, press ctrl-r repeatedly to cycle through more matches, press Enter to execute the found command, or hit the right arrow to put the result in the current line to allow editing).\n\n\nIn Bash, use ctrl-w to delete the last word, and ctrl-u to delete the content from current cursor back to the start of the line. Use alt-b and alt-f to move by word, ctrl-a to move cursor to beginning of line,  ctrl-e to move cursor to end of line, ctrl-k to kill to the end of the line, ctrl-l to clear the screen. See man readline for all the default keybindings in Bash. There are a lot. For example alt-. cycles through previous arguments, and alt-* expands a glob.\n\n\nAlternatively, if you love vi-style key-bindings, use set -o vi (and set -o emacs to put it back).\n\n\nFor editing long commands, after setting your editor (for example export EDITOR=vim), ctrl-x ctrl-e will open the current command in an editor for multi-line editing. Or in vi style, escape-v.\n\n\nTo see recent commands, use history. Follow with !n (where n is the command number) to execute again. There are also many abbreviations you can use, the most useful probably being !$ for last argument and !! for last command (see \"HISTORY EXPANSION\" in the man page). However, these are often easily replaced with ctrl-r and alt-..\n\n\nGo to your home directory with cd. Access files relative to your home directory with the ~ prefix (e.g. ~/.bashrc). In sh scripts refer to the home directory as $HOME.\n\n\nTo go back to the previous working directory: cd -.\n\n\nIf you are halfway through typing a command but change your mind, hit alt-# to add a # at the beginning and enter it as a comment (or use ctrl-a, #, enter). You can then return to it later via command history.\n\n\nUse xargs (or parallel). It's very powerful. Note you can control how many items execute per line (-L) as well as parallelism (-P). If you're not sure if it'll do the right thing, use xargs echo first. Also, -I{} is handy. Examples:\n\n\n      find . -name '*.py' | xargs grep some_function\n      cat hosts | xargs -I{} ssh root@{} hostname\n\n\npstree -p is a helpful display of the process tree.\n\n\nUse pgrep and pkill to find or signal processes by name (-f is helpful).\n\n\nKnow the various signals you can send processes. For example, to suspend a process, use kill -STOP [pid]. For the full list, see man 7 signal\n\n\nUse nohup or disown if you want a background process to keep running forever.\n\n\nCheck what processes are listening via netstat -lntp or ss -plat (for TCP; add -u for UDP) or lsof -iTCP -sTCP:LISTEN -P -n (which also works on macOS).\n\n\nSee also lsof and fuser for open sockets and files.\n\n\nSee uptime or w to know how long the system has been running.\n\n\nUse alias to create shortcuts for commonly used commands. For example, alias ll='ls -latr' creates a new alias ll.\n\n\nSave aliases, shell settings, and functions you commonly use in ~/.bashrc, and arrange for login shells to source it. This will make your setup available in all your shell sessions.\n\n\nPut the settings of environment variables as well as commands that should be executed when you login in ~/.bash_profile. Separate configuration will be needed for shells you launch from graphical environment logins and cron jobs.\n\n\nSynchronize your configuration files (e.g. .bashrc and .bash_profile) among various computers with Git.\n\n\nUnderstand that care is needed when variables and filenames include whitespace. Surround your Bash variables with quotes, e.g. \"$FOO\". Prefer the -0 or -print0 options to enable null characters to delimit filenames, e.g. locate -0 pattern | xargs -0 ls -al or find / -print0 -type d | xargs -0 ls -al. To iterate on filenames containing whitespace in a for loop, set your IFS to be a newline only using IFS=$'\\n'.\n\n\nIn Bash scripts, use set -x (or the variant set -v, which logs raw input, including unexpanded variables and comments) for debugging output. Use strict modes unless you have a good reason not to: Use set -e to abort on errors (nonzero exit code). Use set -u to detect unset variable usages. Consider set -o pipefail too, to abort on errors within pipes (though read up on it more if you do, as this topic is a bit subtle). For more involved scripts, also use trap on EXIT or ERR. A useful habit is to start a script like this, which will make it detect and abort on common errors and print a message:\n\n\n      set -euo pipefail\n      trap \"echo 'error: Script failed: see failed command above'\" ERR\n\nIn Bash scripts, subshells (written with parentheses) are convenient ways to group commands. A common example is to temporarily move to a different working directory, e.g.\n\n      # do something in current dir\n      (cd /some/other/dir && other-command)\n      # continue in original dir\n\n\nIn Bash, note there are lots of kinds of variable expansion. Checking a variable exists: ${name:?error message}. For example, if a Bash script requires a single argument, just write input_file=${1:?usage: $0 input_file}. Using a default value if a variable is empty: ${name:-default}. If you want to have an additional (optional) parameter added to the previous example, you can use something like output_file=${2:-logfile}. If $2 is omitted and thus empty, output_file will be set to logfile. Arithmetic expansion: i=$(( (i + 1) % 5 )). Sequences: {1..10}. Trimming of strings: ${var%suffix} and ${var#prefix}. For example if var=foo.pdf, then echo ${var%.pdf}.txt prints foo.txt.\n\n\nBrace expansion using {...} can reduce having to re-type similar text and automate combinations of items.  This is helpful in examples like mv foo.{txt,pdf} some-dir (which moves both files), cp somefile{,.bak} (which expands to cp somefile somefile.bak) or mkdir -p test-{a,b,c}/subtest-{1,2,3} (which expands all possible combinations and creates a directory tree). Brace expansion is performed before any other expansion.\n\n\nThe order of expansions is: brace expansion; tilde expansion, parameter and variable expansion, arithmetic expansion, and command substitution (done in a left-to-right fashion); word splitting; and filename expansion. (For example, a range like {1..20} cannot be expressed with variables using {$a..$b}. Use seq or a for loop instead, e.g., seq $a $b or for((i=a; i<=b; i++)); do ... ; done.)\n\n\nThe output of a command can be treated like a file via <(some command) (known as process substitution). For example, compare local /etc/hosts with a remote one:\n\n\n      diff /etc/hosts <(ssh somehost cat /etc/hosts)\n\nWhen writing scripts you may want to put all of your code in curly braces. If the closing brace is missing, your script will be prevented from executing due to a syntax error. This makes sense when your script is going to be downloaded from the web, since it prevents partially downloaded scripts from executing:\n\n{\n      # Your code here\n}\n\nA \"here document\" allows redirection of multiple lines of input as if from a file:\n\ncat <<EOF\ninput\non multiple lines\nEOF\n\n\n\nIn Bash, redirect both standard output and standard error via: some-command >logfile 2>&1 or some-command &>logfile. Often, to ensure a command does not leave an open file handle to standard input, tying it to the terminal you are in, it is also good practice to add </dev/null.\n\n\nUse man ascii for a good ASCII table, with hex and decimal values. For general encoding info, man unicode, man utf-8, and man latin1 are helpful.\n\n\nUse screen or tmux to multiplex the screen, especially useful on remote ssh sessions and to detach and re-attach to a session. byobu can enhance screen or tmux by providing more information and easier management. A more minimal alternative for session persistence only is dtach.\n\n\nIn ssh, knowing how to port tunnel with -L or -D (and occasionally -R) is useful, e.g. to access web sites from a remote server.\n\n\nIt can be useful to make a few optimizations to your ssh configuration; for example, this ~/.ssh/config contains settings to avoid dropped connections in certain network environments, uses compression (which is helpful with scp over low-bandwidth connections), and multiplex channels to the same server with a local control file:\n\n\n      TCPKeepAlive=yes\n      ServerAliveInterval=15\n      ServerAliveCountMax=6\n      Compression=yes\n      ControlMaster auto\n      ControlPath /tmp/%r@%h:%p\n      ControlPersist yes\n\n\n\nA few other options relevant to ssh are security sensitive and should be enabled with care, e.g. per subnet or host or in trusted networks: StrictHostKeyChecking=no, ForwardAgent=yes\n\n\nConsider mosh an alternative to ssh that uses UDP, avoiding dropped connections and adding convenience on the road (requires server-side setup).\n\n\nTo get the permissions on a file in octal form, which is useful for system configuration but not available in ls and easy to bungle, use something like\n\n\n      stat -c '%A %a %n' /etc/timezone\n\n\nFor interactive selection of values from the output of another command, use percol or fzf.\n\n\nFor interaction with files based on the output of another command (like git), use fpp (PathPicker).\n\n\nFor a simple web server for all files in the current directory (and subdirs), available to anyone on your network, use:\npython -m SimpleHTTPServer 7777 (for port 7777 and Python 2) and python -m http.server 7777 (for port 7777 and Python 3).\n\n\nFor running a command as another user, use sudo. Defaults to running as root; use -u to specify another user. Use -i to login as that user (you will be asked for your password).\n\n\nFor switching the shell to another user, use su username or su - username. The latter with \"-\" gets an environment as if another user just logged in. Omitting the username defaults to root. You will be asked for the password of the user you are switching to.\n\n\nKnow about the 128K limit on command lines. This \"Argument list too long\" error is common when wildcard matching large numbers of files. (When this happens alternatives like find and xargs may help.)\n\n\nFor a basic calculator (and of course access to Python in general), use the python interpreter. For example,\n\n\n>>> 2+3\n5\n\nProcessing files and data\n\n\nTo locate a file by name in the current directory, find . -iname '*something*' (or similar). To find a file anywhere by name, use locate something (but bear in mind updatedb may not have indexed recently created files).\n\n\nFor general searching through source or data files, there are several options more advanced or faster than grep -r, including (in rough order from older to newer) ack, ag (\"the silver searcher\"), and rg (ripgrep).\n\n\nTo convert HTML to text: lynx -dump -stdin\n\n\nFor Markdown, HTML, and all kinds of document conversion, try pandoc. For example, to convert a Markdown document to Word format: pandoc README.md --from markdown --to docx -o temp.docx\n\n\nIf you must handle XML, xmlstarlet is old but good.\n\n\nFor JSON, use jq. For interactive use, also see jid and jiq.\n\n\nFor YAML, use shyaml.\n\n\nFor Excel or CSV files, csvkit provides in2csv, csvcut, csvjoin, csvgrep, etc.\n\n\nFor Amazon S3, s3cmd is convenient and s4cmd is faster. Amazon's aws and the improved saws are essential for other AWS-related tasks.\n\n\nKnow about sort and uniq, including uniq's -u and -d options -- see one-liners below. See also comm.\n\n\nKnow about cut, paste, and join to manipulate text files. Many people use cut but forget about join.\n\n\nKnow about wc to count newlines (-l), characters (-m), words (-w) and bytes (-c).\n\n\nKnow about tee to copy from stdin to a file and also to stdout, as in ls -al | tee file.txt.\n\n\nFor more complex calculations, including grouping, reversing fields, and statistical calculations, consider datamash.\n\n\nKnow that locale affects a lot of command line tools in subtle ways, including sorting order (collation) and performance. Most Linux installations will set LANG or other locale variables to a local setting like US English. But be aware sorting will change if you change locale. And know i18n routines can make sort or other commands run many times slower. In some situations (such as the set operations or uniqueness operations below) you can safely ignore slow i18n routines entirely and use traditional byte-based sort order, using export LC_ALL=C.\n\n\nYou can set a specific command's environment by prefixing its invocation with the environment variable settings, as in TZ=Pacific/Fiji date.\n\n\nKnow basic awk and sed for simple data munging. See One-liners for examples.\n\n\nTo replace all occurrences of a string in place, in one or more files:\n\n\n      perl -pi.bak -e 's/old-string/new-string/g' my-files-*.txt\n\nTo rename multiple files and/or search and replace within files, try repren. (In some cases the rename command also allows multiple renames, but be careful as its functionality is not the same on all Linux distributions.)\n\n      # Full rename of filenames, directories, and contents foo -> bar:\n      repren --full --preserve-case --from foo --to bar .\n      # Recover backup files whatever.bak -> whatever:\n      repren --renames --from '(.*)\\.bak' --to '\\1' *.bak\n      # Same as above, using rename, if available:\n      rename 's/\\.bak$//' *.bak\n\nAs the man page says, rsync really is a fast and extraordinarily versatile file copying tool. It's known for synchronizing between machines but is equally useful locally. When security restrictions allow, using rsync instead of scp allows recovery of a transfer without restarting from scratch. It also is among the fastest ways to delete large numbers of files:\n\nmkdir empty && rsync -r --delete empty/ some-dir && rmdir some-dir\n\n\nFor monitoring progress when processing files, use pv, pycp, pmonitor, progress, rsync --progress, or, for block-level copying, dd status=progress.\n\n\nUse shuf to shuffle or select random lines from a file.\n\n\nKnow sort's options. For numbers, use -n, or -h for handling human-readable numbers (e.g. from du -h). Know how keys work (-t and -k). In particular, watch out that you need to write -k1,1 to sort by only the first field; -k1 means sort according to the whole line. Stable sort (sort -s) can be useful. For example, to sort first by field 2, then secondarily by field 1, you can use sort -k1,1 | sort -s -k2,2.\n\n\nIf you ever need to write a tab literal in a command line in Bash (e.g. for the -t argument to sort), press ctrl-v [Tab] or write $'\\t' (the latter is better as you can copy/paste it).\n\n\nThe standard tools for patching source code are diff and patch. See also diffstat for summary statistics of a diff and sdiff for a side-by-side diff. Note diff -r works for entire directories. Use diff -r tree1 tree2 | diffstat for a summary of changes. Use vimdiff to compare and edit files.\n\n\nFor binary files, use hd, hexdump or xxd for simple hex dumps and bvi, hexedit or biew for binary editing.\n\n\nAlso for binary files, strings (plus grep, etc.) lets you find bits of text.\n\n\nFor binary diffs (delta compression), use xdelta3.\n\n\nTo convert text encodings, try iconv. Or uconv for more advanced use; it supports some advanced Unicode things. For example:\n\n\n      # Displays hex codes or actual names of characters (useful for debugging):\n      uconv -f utf-8 -t utf-8 -x '::Any-Hex;' < input.txt\n      uconv -f utf-8 -t utf-8 -x '::Any-Name;' < input.txt\n      # Lowercase and removes all accents (by expanding and dropping them):\n      uconv -f utf-8 -t utf-8 -x '::Any-Lower; ::Any-NFD; [:Nonspacing Mark:] >; ::Any-NFC;' < input.txt > output.txt\n\n\nTo split files into pieces, see split (to split by size) and csplit (to split by a pattern).\n\n\nDate and time: To get the current date and time in the helpful ISO 8601 format, use date -u +\"%Y-%m-%dT%H:%M:%SZ\" (other options are problematic). To manipulate date and time expressions, use dateadd, datediff, strptime etc. from dateutils.\n\n\nUse zless, zmore, zcat, and zgrep to operate on compressed files.\n\n\nFile attributes are settable via chattr and offer a lower-level alternative to file permissions. For example, to protect against accidental file deletion the immutable flag:  sudo chattr +i /critical/directory/or/file\n\n\nUse getfacl and setfacl to save and restore file permissions. For example:\n\n\n   getfacl -R /some/path > permissions.txt\n   setfacl --restore=permissions.txt\n\nTo create empty files quickly, use truncate (creates sparse file), fallocate (ext4, xfs, btrfs and ocfs2 filesystems), xfs_mkfile (almost any filesystems, comes in xfsprogs package), mkfile (for Unix-like systems like Solaris, Mac OS).\n\nSystem debugging\n\n\nFor web debugging, curl and curl -I are handy, or their wget equivalents, or the more modern httpie.\n\n\nTo know current cpu/disk status, the classic tools are top (or the better htop), iostat, and iotop. Use iostat -mxz 15 for basic CPU and detailed per-partition disk stats and performance insight.\n\n\nFor network connection details, use netstat and ss.\n\n\nFor a quick overview of what's happening on a system, dstat is especially useful. For broadest overview with details, use glances.\n\n\nTo know memory status, run and understand the output of free and vmstat. In particular, be aware the \"cached\" value is memory held by the Linux kernel as file cache, so effectively counts toward the \"free\" value.\n\n\nJava system debugging is a different kettle of fish, but a simple trick on Oracle's and some other JVMs is that you can run kill -3 <pid> and a full stack trace and heap summary (including generational garbage collection details, which can be highly informative) will be dumped to stderr/logs. The JDK's jps, jstat, jstack, jmap are useful. SJK tools are more advanced.\n\n\nUse mtr as a better traceroute, to identify network issues.\n\n\nFor looking at why a disk is full, ncdu saves time over the usual commands like du -sh *.\n\n\nTo find which socket or process is using bandwidth, try iftop or nethogs.\n\n\nThe ab tool (comes with Apache) is helpful for quick-and-dirty checking of web server performance. For more complex load testing, try siege.\n\n\nFor more serious network debugging, wireshark, tshark, or ngrep.\n\n\nKnow about strace and ltrace. These can be helpful if a program is failing, hanging, or crashing, and you don't know why, or if you want to get a general idea of performance. Note the profiling option (-c), and the ability to attach to a running process (-p). Use trace child option (-f) to avoid missing important calls.\n\n\nKnow about ldd to check shared libraries etc \u2014 but never run it on untrusted files.\n\n\nKnow how to connect to a running process with gdb and get its stack traces.\n\n\nUse /proc. It's amazingly helpful sometimes when debugging live problems. Examples: /proc/cpuinfo, /proc/meminfo, /proc/cmdline, /proc/xxx/cwd, /proc/xxx/exe, /proc/xxx/fd/, /proc/xxx/smaps (where xxx is the process id or pid).\n\n\nWhen debugging why something went wrong in the past, sar can be very helpful. It shows historic statistics on CPU, memory, network, etc.\n\n\nFor deeper systems and performance analyses, look at stap (SystemTap), perf, and sysdig.\n\n\nCheck what OS you're on with uname or uname -a (general Unix/kernel info) or lsb_release -a (Linux distro info).\n\n\nUse dmesg whenever something's acting really funny (it could be hardware or driver issues).\n\n\nIf you delete a file and it doesn't free up expected disk space as reported by du, check whether the file is in use by a process:\nlsof | grep deleted | grep \"filename-of-my-big-file\"\n\n\nOne-liners\nA few examples of piecing together commands:\n\nIt is remarkably helpful sometimes that you can do set intersection, union, and difference of text files via sort/uniq. Suppose a and b are text files that are already uniqued. This is fast, and works on files of arbitrary size, up to many gigabytes. (Sort is not limited by memory, though you may need to use the -T option if /tmp is on a small root partition.) See also the note about LC_ALL above and sort's -u option (left out for clarity below).\n\n      sort a b | uniq > c   # c is a union b\n      sort a b | uniq -d > c   # c is a intersect b\n      sort a b b | uniq -u > c   # c is set difference a - b\n\nPretty-print two JSON files, normalizing their syntax, then coloring and paginating the result:\n\n      diff <(jq --sort-keys . < file1.json) <(jq --sort-keys . < file2.json) | colordiff | less -R\n\n\n\nUse grep . * to quickly examine the contents of all files in a directory (so each line is paired with the filename), or head -100 * (so each file has a heading). This can be useful for directories filled with config settings like those in /sys, /proc, /etc.\n\n\nSumming all numbers in the third column of a text file (this is probably 3X faster and 3X less code than equivalent Python):\n\n\n      awk '{ x += $3 } END { print x }' myfile\n\nTo see sizes/dates on a tree of files, this is like a recursive ls -l but is easier to read than ls -lR:\n\n      find . -type f -ls\n\nSay you have a text file, like a web server log, and a certain value that appears on some lines, such as an acct_id parameter that is present in the URL. If you want a tally of how many requests for each acct_id:\n\n      egrep -o 'acct_id=[0-9]+' access.log | cut -d= -f2 | sort | uniq -c | sort -rn\n\n\nTo continuously monitor changes, use watch, e.g. check changes to files in a directory with watch -d -n 2 'ls -rtlh | tail' or to network settings while troubleshooting your wifi settings with watch -d -n 2 ifconfig.\n\n\nRun this function to get a random tip from this document (parses Markdown and extracts an item):\n\n\n      function taocl() {\n        curl -s https://raw.githubusercontent.com/jlevy/the-art-of-command-line/master/README.md |\n          sed '/cowsay[.]png/d' |\n          pandoc -f markdown -t html |\n          xmlstarlet fo --html --dropdtd |\n          xmlstarlet sel -t -v \"(html/body/ul/li[count(p)>0])[$RANDOM mod last()+1]\" |\n          xmlstarlet unesc | fmt -80 | iconv -t US\n      }\nObscure but useful\n\n\nexpr: perform arithmetic or boolean operations or evaluate regular expressions\n\n\nm4: simple macro processor\n\n\nyes: print a string a lot\n\n\ncal: nice calendar\n\n\nenv: run a command (useful in scripts)\n\n\nprintenv: print out environment variables (useful in debugging and scripts)\n\n\nlook: find English words (or lines in a file) beginning with a string\n\n\ncut, paste and join: data manipulation\n\n\nfmt: format text paragraphs\n\n\npr: format text into pages/columns\n\n\nfold: wrap lines of text\n\n\ncolumn: format text fields into aligned, fixed-width columns or tables\n\n\nexpand and unexpand: convert between tabs and spaces\n\n\nnl: add line numbers\n\n\nseq: print numbers\n\n\nbc: calculator\n\n\nfactor: factor integers\n\n\ngpg: encrypt and sign files\n\n\ntoe: table of terminfo entries\n\n\nnc: network debugging and data transfer\n\n\nsocat: socket relay and tcp port forwarder (similar to netcat)\n\n\nslurm: network traffic visualization\n\n\ndd: moving data between files or devices\n\n\nfile: identify type of a file\n\n\ntree: display directories and subdirectories as a nesting tree; like ls but recursive\n\n\nstat: file info\n\n\ntime: execute and time a command\n\n\ntimeout: execute a command for specified amount of time and stop the process when the specified amount of time completes.\n\n\nlockfile: create semaphore file that can only be removed by rm -f\n\n\nlogrotate: rotate, compress and mail logs.\n\n\nwatch: run a command repeatedly, showing results and/or highlighting changes\n\n\nwhen-changed: runs any command you specify whenever it sees file changed. See inotifywait and entr as well.\n\n\ntac: print files in reverse\n\n\ncomm: compare sorted files line by line\n\n\nstrings: extract text from binary files\n\n\ntr: character translation or manipulation\n\n\niconv or uconv: conversion for text encodings\n\n\nsplit and csplit: splitting files\n\n\nsponge: read all input before writing it, useful for reading from then writing to the same file, e.g., grep -v something some-file | sponge some-file\n\n\nunits: unit conversions and calculations; converts furlongs per fortnight to twips per blink (see also /usr/share/units/definitions.units)\n\n\napg: generates random passwords\n\n\nxz: high-ratio file compression\n\n\nldd: dynamic library info\n\n\nnm: symbols from object files\n\n\nab or wrk: benchmarking web servers\n\n\nstrace: system call debugging\n\n\nmtr: better traceroute for network debugging\n\n\ncssh: visual concurrent shell\n\n\nrsync: sync files and folders over SSH or in local file system\n\n\nwireshark and tshark: packet capture and network debugging\n\n\nngrep: grep for the network layer\n\n\nhost and dig: DNS lookups\n\n\nlsof: process file descriptor and socket info\n\n\ndstat: useful system stats\n\n\nglances: high level, multi-subsystem overview\n\n\niostat: Disk usage stats\n\n\nmpstat: CPU usage stats\n\n\nvmstat: Memory usage stats\n\n\nhtop: improved version of top\n\n\nlast: login history\n\n\nw: who's logged on\n\n\nid: user/group identity info\n\n\nsar: historic system stats\n\n\niftop or nethogs: network utilization by socket or process\n\n\nss: socket statistics\n\n\ndmesg: boot and system error messages\n\n\nsysctl: view and configure Linux kernel parameters at run time\n\n\nhdparm: SATA/ATA disk manipulation/performance\n\n\nlsblk: list block devices: a tree view of your disks and disk partitions\n\n\nlshw, lscpu, lspci, lsusb, dmidecode: hardware information, including CPU, BIOS, RAID, graphics, devices, etc.\n\n\nlsmod and modinfo: List and show details of kernel modules.\n\n\nfortune, ddate, and sl: um, well, it depends on whether you consider steam locomotives and Zippy quotations \"useful\"\n\n\nmacOS only\nThese are items relevant only on macOS.\n\n\nPackage management with brew (Homebrew) and/or port (MacPorts). These can be used to install on macOS many of the above commands.\n\n\nCopy output of any command to a desktop app with pbcopy and paste input from one with pbpaste.\n\n\nTo enable the Option key in macOS Terminal as an alt key (such as used in the commands above like alt-b, alt-f, etc.), open Preferences -> Profiles -> Keyboard and select \"Use Option as Meta key\".\n\n\nTo open a file with a desktop app, use open or open -a /Applications/Whatever.app.\n\n\nSpotlight: Search files with mdfind and list metadata (such as photo EXIF info) with mdls.\n\n\nBe aware macOS is based on BSD Unix, and many commands (for example ps, ls, tail, awk, sed) have many subtle variations from Linux, which is largely influenced by System V-style Unix and GNU tools. You can often tell the difference by noting a man page has the heading \"BSD General Commands Manual.\" In some cases GNU versions can be installed, too (such as gawk and gsed for GNU awk and sed). If writing cross-platform Bash scripts, avoid such commands (for example, consider Python or perl) or test carefully.\n\n\nTo get macOS release information, use sw_vers.\n\n\nWindows only\nThese items are relevant only on Windows.\nWays to obtain Unix tools under Windows\n\n\nAccess the power of the Unix shell under Microsoft Windows by installing Cygwin. Most of the things described in this document will work out of the box.\n\n\nOn Windows 10, you can use Windows Subsystem for Linux (WSL), which provides a familiar Bash environment with Unix command line utilities.\n\n\nIf you mainly want to use GNU developer tools (such as GCC) on Windows, consider MinGW and its MSYS package, which provides utilities such as bash, gawk, make and grep. MSYS doesn't have all the features compared to Cygwin. MinGW is particularly useful for creating native Windows ports of Unix tools.\n\n\nAnother option to get Unix look and feel under Windows is Cash. Note that only very few Unix commands and command-line options are available in this environment.\n\n\nUseful Windows command-line tools\n\n\nYou can perform and script most Windows system administration tasks from the command line by learning and using wmic.\n\n\nNative command-line Windows networking tools you may find useful include ping, ipconfig, tracert, and netstat.\n\n\nYou can perform many useful Windows tasks by invoking the Rundll32 command.\n\n\nCygwin tips and tricks\n\n\nInstall additional Unix programs with the Cygwin's package manager.\n\n\nUse mintty as your command-line window.\n\n\nAccess the Windows clipboard through /dev/clipboard.\n\n\nRun cygstart to open an arbitrary file through its registered application.\n\n\nAccess the Windows registry with regtool.\n\n\nNote that a C:\\ Windows drive path becomes /cygdrive/c under Cygwin, and that Cygwin's / appears under C:\\cygwin on Windows. Convert between Cygwin and Windows-style file paths with cygpath. This is most useful in scripts that invoke Windows programs.\n\n\nMore resources\n\nawesome-shell: A curated list of shell tools and resources.\nawesome-osx-command-line: A more in-depth guide for the macOS command line.\nStrict mode for writing better shell scripts.\nshellcheck: A shell script static analysis tool. Essentially, lint for bash/sh/zsh.\nFilenames and Pathnames in Shell: The sadly complex minutiae on how to handle filenames correctly in shell scripts.\nData Science at the Command Line: More commands and tools helpful for doing data science, from the book of the same name\n\nDisclaimer\nWith the exception of very small tasks, code is written so others can read it. With power comes responsibility. The fact you can do something in Bash doesn't necessarily mean you should! ;)\nLicense\n\nThis work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n\n"}, {"repo": "nodejs/node", "language": "JavaScript", "readme": "\n\n\n\n\n\nNode.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. For\nmore information on using Node.js, see the Node.js Website.\nThe Node.js project uses an open governance model. The\nOpenJS Foundation provides support for the project.\nThis project is bound by a Code of Conduct.\nTable of Contents\n\nSupport\nRelease Types\n\nDownload\n\nCurrent and LTS Releases\nNightly Releases\nAPI Documentation\n\n\nVerifying Binaries\n\n\nBuilding Node.js\nSecurity\nContributing to Node.js\nCurrent Project Team Members\n\nTSC (Technical Steering Committee)\nCollaborators\nRelease Keys\n\n\n\nSupport\nLooking for help? Check out the\ninstructions for getting support.\nRelease Types\n\nCurrent: Under active development. Code for the Current release is in the\nbranch for its major version number (for example,\nv10.x). Node.js releases a new\nmajor version every 6 months, allowing for breaking changes. This happens in\nApril and October every year. Releases appearing each October have a support\nlife of 8 months. Releases appearing each April convert to LTS (see below)\neach October.\nLTS: Releases that receive Long-term Support, with a focus on stability\nand security. Every even-numbered major version will become an LTS release.\nLTS releases receive 12 months of Active LTS support and a further 18 months\nof Maintenance. LTS release lines have alphabetically-ordered codenames,\nbeginning with v4 Argon. There are no breaking changes or feature additions,\nexcept in some special circumstances.\nNightly: Code from the Current branch built every 24-hours when there are\nchanges. Use with caution.\n\nCurrent and LTS releases follow Semantic Versioning. A\nmember of the Release Team signs each Current and LTS release.\nFor more information, see the\nRelease README.\nDownload\nBinaries, installers, and source tarballs are available at\nhttps://nodejs.org/en/download/.\nCurrent and LTS Releases\nhttps://nodejs.org/download/release/\nThe latest directory is an\nalias for the latest Current release. The latest-codename directory is an\nalias for the latest release from an LTS line. For example, the\nlatest-carbon directory\ncontains the latest Carbon (Node.js 8) release.\nNightly Releases\nhttps://nodejs.org/download/nightly/\nEach directory name and filename contains a date (in UTC time) and the commit\nSHA at the HEAD of the release.\nAPI Documentation\nDocumentation for the latest Current release is at https://nodejs.org/api/.\nVersion-specific documentation is available in each release directory in the\ndocs subdirectory. Version-specific documentation is also at\nhttps://nodejs.org/download/docs/.\nVerifying Binaries\nDownload directories contain a SHASUMS256.txt file with SHA checksums for the\nfiles.\nTo download SHASUMS256.txt using curl:\n$ curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt\nTo check that a downloaded file matches the checksum, run\nit through sha256sum with a command such as:\n$ grep node-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -\nFor Current and LTS, the GPG detached signature of SHASUMS256.txt is in\nSHASUMS256.txt.sig. You can use it with gpg to verify the integrity of\nSHASUM256.txt. You will first need to import\nthe GPG keys of individuals authorized to create releases. To\nimport the keys:\n$ gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D\nSee the bottom of this README for a full script to import active release keys.\nNext, download the SHASUMS256.txt.sig for the release:\n$ curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt.sig\nThen use gpg --verify SHASUMS256.txt.sig SHASUMS256.txt to verify\nthe file's signature.\nBuilding Node.js\nSee BUILDING.md for instructions on how to build Node.js from\nsource and a list of supported platforms.\nSecurity\nFor information on reporting security vulnerabilities in Node.js, see\nSECURITY.md.\nContributing to Node.js\n\nContributing to the project\nWorking Groups\nStrategic Initiatives\n\nCurrent Project Team Members\nFor information about the governance of the Node.js project, see\nGOVERNANCE.md.\nTSC (Technical Steering Committee)\n\naddaleax -\nAnna Henningsen <anna@addaleax.net> (she/her)\napapirovski -\nAnatoli Papirovski <apapirovski@mac.com> (he/him)\nBethGriggs -\nBeth Griggs <Bethany.Griggs@uk.ibm.com> (she/her)\nChALkeR -\n\u0421\u043a\u043e\u0432\u043e\u0440\u043e\u0434\u0430 \u041d\u0438\u043a\u0438\u0442\u0430 \u0410\u043d\u0434\u0440\u0435\u0435\u0432\u0438\u0447 <chalkerx@gmail.com> (he/him)\ncjihrig -\nColin Ihrig <cjihrig@gmail.com> (he/him)\ndanbev -\nDaniel Bevenius <daniel.bevenius@gmail.com> (he/him)\nfhinkel -\nFranziska Hinkelmann <franziska.hinkelmann@gmail.com> (she/her)\nFishrock123 -\nJeremiah Senkpiel <fishrock123@rocketmail.com>\ngabrielschulhof -\nGabriel Schulhof <gabriel.schulhof@intel.com>\ngireeshpunathil -\nGireesh Punathil <gpunathi@in.ibm.com> (he/him)\njasnell -\nJames M Snell <jasnell@gmail.com> (he/him)\njoyeecheung -\nJoyee Cheung <joyeec9h3@gmail.com> (she/her)\nmcollina -\nMatteo Collina <matteo.collina@gmail.com> (he/him)\nmhdawson -\nMichael Dawson <michael_dawson@ca.ibm.com> (he/him)\nMylesBorins -\nMyles Borins <myles.borins@gmail.com> (he/him)\nsam-github -\nSam Roberts <vieuxtech@gmail.com>\ntargos -\nMicha\u00ebl Zasso <targos@protonmail.com> (he/him)\nthefourtheye -\nSakthipriyan Vairamani <thechargingvolcano@gmail.com> (he/him)\ntniessen -\nTobias Nie\u00dfen <tniessen@tnie.de>\nTrott -\nRich Trott <rtrott@gmail.com> (he/him)\n\nTSC Emeriti\n\nbnoordhuis -\nBen Noordhuis <info@bnoordhuis.nl>\nchrisdickinson -\nChris Dickinson <christopher.s.dickinson@gmail.com>\nevanlucas -\nEvan Lucas <evanlucas@me.com> (he/him)\ngibfahn -\nGibson Fahnestock <gibfahn@gmail.com> (he/him)\nindutny -\nFedor Indutny <fedor.indutny@gmail.com>\nisaacs -\nIsaac Z. Schlueter <i@izs.me>\njoshgav -\nJosh Gavant <josh.gavant@outlook.com>\nmscdex -\nBrian White <mscdex@mscdex.net>\nnebrius -\nBryan Hughes <bryan@nebri.us>\nofrobots -\nAli Ijaz Sheikh <ofrobots@google.com> (he/him)\norangemocha -\nAlexis Campailla <orangemocha@nodejs.org>\npiscisaureus -\nBert Belder <bertbelder@gmail.com>\nrvagg -\nRod Vagg <r@va.gg>\nshigeki -\nShigeki Ohtsu <ohtsu@ohtsu.org> (he/him)\nTimothyGu -\nTiancheng \"Timothy\" Gu <timothygu99@gmail.com> (he/him)\ntrevnorris -\nTrevor Norris <trev.norris@gmail.com>\n\nCollaborators\n\naddaleax -\nAnna Henningsen <anna@addaleax.net> (she/her)\nak239 -\nAleksei Koziatinskii <ak239spb@gmail.com>\nAndreasMadsen -\nAndreas Madsen <amwebdk@gmail.com> (he/him)\nantsmartian -\nAnto Aravinth <anto.aravinth.cse@gmail.com> (he/him)\napapirovski -\nAnatoli Papirovski <apapirovski@mac.com> (he/him)\naqrln -\nAlexey Orlenko <eaglexrlnk@gmail.com> (he/him)\nbcoe -\nBen Coe <bencoe@gmail.com> (he/him)\nbengl -\nBryan English <bryan@bryanenglish.com> (he/him)\nbenjamingr -\nBenjamin Gruenbaum <benjamingr@gmail.com>\nBethGriggs -\nBeth Griggs <Bethany.Griggs@uk.ibm.com> (she/her)\nbmeck -\nBradley Farias <bradley.meck@gmail.com>\nbmeurer -\nBenedikt Meurer <benedikt.meurer@gmail.com>\nbnoordhuis -\nBen Noordhuis <info@bnoordhuis.nl>\nboneskull -\nChristopher Hiller <boneskull@boneskull.com> (he/him)\nBridgeAR -\nRuben Bridgewater <ruben@bridgewater.de> (he/him)\nbzoz -\nBartosz Sosnowski <bartosz@janeasystems.com>\ncalvinmetcalf -\nCalvin Metcalf <calvin.metcalf@gmail.com>\ncclauss -\nChristian Clauss <cclauss@me.com> (he/him)\nChALkeR -\n\u0421\u043a\u043e\u0432\u043e\u0440\u043e\u0434\u0430 \u041d\u0438\u043a\u0438\u0442\u0430 \u0410\u043d\u0434\u0440\u0435\u0435\u0432\u0438\u0447 <chalkerx@gmail.com> (he/him)\ncjihrig -\nColin Ihrig <cjihrig@gmail.com> (he/him)\nclaudiorodriguez -\nClaudio Rodriguez <cjrodr@yahoo.com>\ncodebytere -\nShelley Vohr <codebytere@gmail.com> (she/her)\ndanbev -\nDaniel Bevenius <daniel.bevenius@gmail.com> (he/him)\ndavisjam -\nJamie Davis <davisjam@vt.edu> (he/him)\ndevnexen -\nDavid Carlier <devnexen@gmail.com>\ndevsnek -\nGus Caplan <me@gus.host> (he/him)\ndigitalinfinity -\nHitesh Kanwathirtha <digitalinfinity@gmail.com> (he/him)\nedsadr -\nAdrian Estrada <edsadr@gmail.com> (he/him)\neljefedelrodeodeljefe -\nRobert Jefe Lindstaedt <robert.lindstaedt@gmail.com>\neugeneo -\nEugene Ostroukhov <eostroukhov@google.com>\nevanlucas -\nEvan Lucas <evanlucas@me.com> (he/him)\nfhinkel -\nFranziska Hinkelmann <franziska.hinkelmann@gmail.com> (she/her)\nFishrock123 -\nJeremiah Senkpiel <fishrock123@rocketmail.com>\ngabrielschulhof -\nGabriel Schulhof <gabriel.schulhof@intel.com>\ngdams -\nGeorge Adams <george.adams@uk.ibm.com> (he/him)\ngeek -\nWyatt Preul <wpreul@gmail.com>\ngengjiawen -\nJiawen Geng <technicalcute@gmail.com>\ngibfahn -\nGibson Fahnestock <gibfahn@gmail.com> (he/him)\ngireeshpunathil -\nGireesh Punathil <gpunathi@in.ibm.com> (he/him)\nguybedford -\nGuy Bedford <guybedford@gmail.com> (he/him)\nhashseed -\nYang Guo <yangguo@chromium.org> (he/him)\nhiroppy -\nYuta Hiroto <hello@hiroppy.me> (he/him)\niarna -\nRebecca Turner <me@re-becca.org>\nindutny -\nFedor Indutny <fedor.indutny@gmail.com>\nitaloacasas -\nItalo A. Casas <me@italoacasas.com> (he/him)\nJacksonTian -\nJackson Tian <shyvo1987@gmail.com>\njasnell -\nJames M Snell <jasnell@gmail.com> (he/him)\njbergstroem -\nJohan Bergstr\u00f6m <bugs@bergstroem.nu>\njdalton -\nJohn-David Dalton <john.david.dalton@gmail.com>\njkrems -\nJan Krems <jan.krems@gmail.com> (he/him)\njoaocgreis -\nJo\u00e3o Reis <reis@janeasystems.com>\njoyeecheung -\nJoyee Cheung <joyeec9h3@gmail.com> (she/her)\njulianduque -\nJulian Duque <julianduquej@gmail.com> (he/him)\nJungMinu -\nMinwoo Jung <nodecorelab@gmail.com> (he/him)\nkfarnung -\nKyle Farnung <kfarnung@microsoft.com> (he/him)\nlance -\nLance Ball <lball@redhat.com> (he/him)\nlegendecas -\nChengzhong Wu <legendecas@gmail.com> (he/him)\nLeko -\nShingo Inoue <leko.noor@gmail.com> (he/him)\nlpinca -\nLuigi Pinca <luigipinca@gmail.com> (he/him)\nlundibundi -\nDenys Otrishko <shishugi@gmail.com> (he/him)\nmaclover7 -\nJon Moss <me@jonathanmoss.me> (he/him)\nmafintosh\nMathias Buus <mathiasbuus@gmail.com> (he/him)\nmcollina -\nMatteo Collina <matteo.collina@gmail.com> (he/him)\nmhdawson -\nMichael Dawson <michael_dawson@ca.ibm.com> (he/him)\nmisterdjules -\nJulien Gilli <jgilli@nodejs.org>\nmmarchini -\nMatheus Marchini <mat@mmarchini.me>\nMoonBall -\nChen Gang <gangc.cxy@foxmail.com>\nmscdex -\nBrian White <mscdex@mscdex.net>\nMylesBorins -\nMyles Borins <myles.borins@gmail.com> (he/him)\nnot-an-aardvark -\nTeddy Katz <teddy.katz@gmail.com> (he/him)\nofrobots -\nAli Ijaz Sheikh <ofrobots@google.com> (he/him)\noyyd -\nOuyang Yadong <oyydoibh@gmail.com> (he/him)\nprincejwesley -\nPrince John Wesley <princejohnwesley@gmail.com>\npsmarshall -\nPeter Marshall <petermarshall@chromium.org> (he/him)\nQard -\nStephen Belanger <admin@stephenbelanger.com> (he/him)\nrefack -\nRefael Ackermann (\u05e8\u05e4\u05d0\u05dc \u05e4\u05dc\u05d7\u05d9) <refack@gmail.com> (he/him/\u05d4\u05d5\u05d0/\u05d0\u05ea\u05d4)\nrichardlau -\nRichard Lau <riclau@uk.ibm.com>\nronkorving -\nRon Korving <ron@ronkorving.nl>\nrubys -\nSam Ruby <rubys@intertwingly.net>\nrvagg -\nRod Vagg <rod@vagg.org>\nryzokuken -\nUjjwal Sharma <usharma1998@gmail.com> (he/him)\nsaghul -\nSa\u00fal Ibarra Corretg\u00e9 <saghul@gmail.com>\nsam-github -\nSam Roberts <vieuxtech@gmail.com>\nsantigimeno -\nSantiago Gimeno <santiago.gimeno@gmail.com>\nsebdeckers -\nSebastiaan Deckers <sebdeckers83@gmail.com>\nseishun -\nNikolai Vavilov <vvnicholas@gmail.com>\nshigeki -\nShigeki Ohtsu <ohtsu@ohtsu.org> (he/him)\nshisama -\nMasashi Hirano <shisama07@gmail.com> (he/him)\nsilverwind -\nRoman Reiss <me@silverwind.io>\nsrl295 -\nSteven R Loomis <srloomis@us.ibm.com>\nstarkwang -\nWeijia Wang <starkwang@126.com>\ntargos -\nMicha\u00ebl Zasso <targos@protonmail.com> (he/him)\nthefourtheye -\nSakthipriyan Vairamani <thechargingvolcano@gmail.com> (he/him)\nthekemkid -\nGlen Keane <glenkeane.94@gmail.com> (he/him)\nTimothyGu -\nTiancheng \"Timothy\" Gu <timothygu99@gmail.com> (he/him)\ntniessen -\nTobias Nie\u00dfen <tniessen@tnie.de>\ntrevnorris -\nTrevor Norris <trev.norris@gmail.com>\ntrivikr -\nTrivikram Kamat <trivikr.dev@gmail.com>\nTrott -\nRich Trott <rtrott@gmail.com> (he/him)\nvdeturckheim -\nVladimir de Turckheim <vlad2t@hotmail.com> (he/him)\nvkurchatkin -\nVladimir Kurchatkin <vladimir.kurchatkin@gmail.com>\nwatilde -\nDaijiro Wachi <daijiro.wachi@gmail.com> (he/him)\nwatson -\nThomas Watson <w@tson.dk>\nXadillaX -\nKhaidi Chu <i@2333.moe> (he/him)\nyhwang -\nYihong Wang <yh.wang@ibm.com>\nyorkie -\nYorkie Liu <yorkiefixer@gmail.com>\nyosuke-furukawa -\nYosuke Furukawa <yosuke.furukawa@gmail.com>\nZYSzys -\nYongsheng Zhang <zyszys98@gmail.com> (he/him)\n\nCollaborator Emeriti\n\nandrasq -\nAndras <andras@kinvey.com>\nAnnaMag -\nAnna M. Kedzierska <anna.m.kedzierska@gmail.com>\nbrendanashworth -\nBrendan Ashworth <brendan.ashworth@me.com>\nestliberitas -\nAlexander Makarenko <estliberitas@gmail.com>\nchrisdickinson -\nChris Dickinson <christopher.s.dickinson@gmail.com>\nDavidCai1993 -\nDavid Cai <davidcai1993@yahoo.com> (he/him)\nfiredfox -\nDaniel Wang <wangyang0123@gmail.com>\nimran-iq -\nImran Iqbal <imran@imraniqbal.org>\nimyller -\nIlkka Myller <ilkka.myller@nodefield.com>\nisaacs -\nIsaac Z. Schlueter <i@izs.me>\njasongin -\nJason Ginchereau <jasongin@microsoft.com>\njhamhader -\nYuval Brik <yuval@brik.org.il>\njoshgav -\nJosh Gavant <josh.gavant@outlook.com>\nkunalspathak -\nKunal Pathak <kunal.pathak@microsoft.com>\nlucamaraschi -\nLuca Maraschi <luca.maraschi@gmail.com> (he/him)\nlxe -\nAleksey Smolenchuk <lxe@lxe.co>\nmatthewloring -\nMatthew Loring <mattloring@google.com>\nmicnic -\nNicu Micleu\u0219anu <micnic90@gmail.com> (he/him)\nmikeal -\nMikeal Rogers <mikeal.rogers@gmail.com>\nmonsanto -\nChristopher Monsanto <chris@monsan.to>\nOlegas -\nOleg Elifantiev <oleg@elifantiev.ru>\norangemocha -\nAlexis Campailla <orangemocha@nodejs.org>\nothiym23 -\nForrest L Norvell <ogd@aoaioxxysz.net> (he/him)\npetkaantonov -\nPetka Antonov <petka_antonov@hotmail.com>\nphillipj -\nPhillip Johnsen <johphi@gmail.com>\npiscisaureus -\nBert Belder <bertbelder@gmail.com>\npmq20 -\nMinqi Pan <pmq2001@gmail.com>\nrlidwka -\nAlex Kocharin <alex@kocharin.ru>\nrmg -\nRyan Graham <r.m.graham@gmail.com>\nrobertkowalski -\nRobert Kowalski <rok@kowalski.gd>\nromankl -\nRoman Klauke <romaaan.git@gmail.com>\nRReverser -\nIngvar Stepanyan <me@rreverser.com>\nstefanmb -\nStefan Budeanu <stefan@budeanu.com>\ntellnes -\nChristian Tellnes <christian@tellnes.no>\nthlorenz -\nThorsten Lorenz <thlorenz@gmx.de>\ntunniclm -\nMike Tunnicliffe <m.j.tunnicliffe@gmail.com>\nvsemozhetbyt -\nVse Mozhet Byt <vsemozhetbyt@gmail.com> (he/him)\nwhitlockjc -\nJeremy Whitlock <jwhitlock@apache.org>\n\nCollaborators follow the COLLABORATOR_GUIDE.md in\nmaintaining the Node.js project.\nRelease Keys\nGPG keys used to sign Node.js releases:\n\nBeth Griggs <bethany.griggs@uk.ibm.com>\n4ED778F539E3634C779C87C6D7062848A1AB005C\nColin Ihrig <cjihrig@gmail.com>\n94AE36675C464D64BAFA68DD7434390BDBE9B9C5\nEvan Lucas <evanlucas@me.com>\nB9AE9905FFD7803F25714661B63B535A4C206CA9\nGibson Fahnestock <gibfahn@gmail.com>\n77984A986EBC2AA786BC0F66B01FBB92821C587A\nJames M Snell <jasnell@keybase.io>\n71DCFD284A79C3B38668286BC97EC7A07EDE3FC1\nJeremiah Senkpiel <fishrock@keybase.io>\nFD3A5288F042B6850C66B31F09FE44734EB7990E\nMicha\u00ebl Zasso <targos@protonmail.com>\n8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600\nMyles Borins <myles.borins@gmail.com>\nC4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8\nRod Vagg <rod@vagg.org>\nDD8F2338BAE7501E3DD5AC78C273792F7D83545D\nRuben Bridgewater <ruben@bridgewater.de>\nA48C2BEE680E841632CD4E44F07496B3EB3C1762\nShelley Vohr <shelley.vohr@gmail.com>\nB9E2F5981AA6E0CD28160D9FF13993A75599653C\n\nTo import the full set of trusted release keys:\ngpg --keyserver pool.sks-keyservers.net --recv-keys 4ED778F539E3634C779C87C6D7062848A1AB005C\ngpg --keyserver pool.sks-keyservers.net --recv-keys B9E2F5981AA6E0CD28160D9FF13993A75599653C\ngpg --keyserver pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5\ngpg --keyserver pool.sks-keyservers.net --recv-keys B9AE9905FFD7803F25714661B63B535A4C206CA9\ngpg --keyserver pool.sks-keyservers.net --recv-keys 77984A986EBC2AA786BC0F66B01FBB92821C587A\ngpg --keyserver pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1\ngpg --keyserver pool.sks-keyservers.net --recv-keys FD3A5288F042B6850C66B31F09FE44734EB7990E\ngpg --keyserver pool.sks-keyservers.net --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600\ngpg --keyserver pool.sks-keyservers.net --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8\ngpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D\ngpg --keyserver pool.sks-keyservers.net --recv-keys A48C2BEE680E841632CD4E44F07496B3EB3C1762\nSee the section above on Verifying Binaries for how to\nuse these keys to verify a downloaded file.\nOther keys used to sign some previous releases:\n\nChris Dickinson <christopher.s.dickinson@gmail.com>\n9554F04D7259F04124DE6B476D5A82AC7E37093B\nIsaac Z. Schlueter <i@izs.me>\n93C7E9E91B49E432C2F75674B0A78B0A6C481CF6\nItalo A. Casas <me@italoacasas.com>\n56730D5401028683275BD23C23EFEFE93C4CFFFE\nJulien Gilli <jgilli@fastmail.fm>\n114F43EE0176B71C7BC219DD50A3051F888C628D\nTimothy J Fontaine <tjfontaine@gmail.com>\n7937DFD2AB06298B2293C3187D33FF9D0246406D\n\n\n"}, {"repo": "Snailclimb/JavaGuide", "language": "Java", "readme": "\n\u70b9\u51fb\u5173\u6ce8\u516c\u4f17\u53f7\u53ca\u65f6\u83b7\u53d6\u7b14\u4e3b\u6700\u65b0\u66f4\u65b0\u6587\u7ae0\uff0c\u5e76\u53ef\u514d\u8d39\u9886\u53d6\u672c\u6587\u6863\u914d\u5957\u7684\u300aJava\u9762\u8bd5\u7a81\u51fb\u300b\u4ee5\u53caJava\u5de5\u7a0b\u5e08\u5fc5\u5907\u5b66\u4e60\u8d44\u6e90\u3002\n\u63a8\u8350\u4e00\u4e0b\u963f\u91cc\u4e91\u53cc12\u7684\u6d3b\u52a8\uff0c\u4f18\u60e0\u798f\u5229\u6bd4\u53cc11\u8fd8\u5927\u7cfb\u5217\uff0c\u65b0\u8001\u7528\u6237\u540c\u4eab\uff01\uff08\u65b0\u7528\u6237 ECS 1 \u6838 2g \u4e00\u5e74\u53ea\u8981 89!\uff09\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsor\n\n\n\n\n\n\u63a8\u8350\u4f7f\u7528  https://snailclimb.gitee.io/javaguide \u5728\u7ebf\u9605\u8bfb\uff0c\u5728\u7ebf\u9605\u8bfb\u5185\u5bb9\u672c\u4ed3\u5e93\u540c\u6b65\u4e00\u81f4\u3002\u8fd9\u79cd\u65b9\u5f0f\u9605\u8bfb\u7684\u4f18\u52bf\u5728\u4e8e\uff1a\u9605\u8bfb\u4f53\u9a8c\u4f1a\u66f4\u597d\u3002\n\u76ee\u5f55\n\nJava\n\n\u57fa\u7840\n\u5bb9\u5668\n\u5e76\u53d1\nJVM\nI/O\nJava 8\n\u4f18\u96c5 Java \u4ee3\u7801\u5fc5\u5907\u5b9e\u8df5(Java\u7f16\u7a0b\u89c4\u8303)\n\n\n\u7f51\u7edc\n\u64cd\u4f5c\u7cfb\u7edf\n\nLinux\u76f8\u5173\n\n\n\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\n\n\u6570\u636e\u7ed3\u6784\n\u7b97\u6cd5\n\n\n\u6570\u636e\u5e93\n\nMySQL\nRedis\n\u6570\u636e\u5e93\u6269\u5c55\n\n\n\u7cfb\u7edf\u8bbe\u8ba1\n\n\u5e38\u7528\u6846\u67b6(Spring/SpringBoot\u3001Zookeeper ... )\n\u6570\u636e\u901a\u4fe1/\u4e2d\u95f4\u4ef6(\u6d88\u606f\u961f\u5217\u3001RPC ... )\n\u6743\u9650\u8ba4\u8bc1\n\u5206\u5e03\u5f0f & \u5fae\u670d\u52a1\n\nAPI \u7f51\u5173\n\u914d\u7f6e\u4e2d\u5fc3\n\u552f\u4e00 id \u751f\u6210\n\u670d\u52a1\u6cbb\u7406\uff1a\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\u3001\u670d\u52a1\u8def\u7531\u63a7\u5236\n\n\n\u67b6\u6784\n\u8bbe\u8ba1\u6a21\u5f0f(\u5de5\u5382\u6a21\u5f0f\u3001\u5355\u4f8b\u6a21\u5f0f ... )\n\n\n\u9762\u8bd5\u6307\u5357\n\n\u5907\u6218\u9762\u8bd5\n\u9762\u7ecf\n\n\nJava\u5b66\u4e60\u5e38\u89c1\u95ee\u9898\u6c47\u603b\n\u5de5\u5177\n\nGit\nDocker\n\n\n\u8d44\u6e90\n\n\u4e66\u5355\nGithub\u699c\u5355\n\n\n\u5f85\u529e\n\u8bf4\u660e\n\nJava\n\u57fa\u7840\n\nJava \u57fa\u7840\u77e5\u8bc6\u56de\u987e\nJava \u57fa\u7840\u77e5\u8bc6\u7591\u96be\u70b9/\u6613\u9519\u70b9\n\u4e00\u4e9b\u91cd\u8981\u7684Java\u7a0b\u5e8f\u8bbe\u8ba1\u9898\nJ2EE \u57fa\u7840\u77e5\u8bc6\u56de\u987e\n\n\u5bb9\u5668\n\nJava\u5bb9\u5668\u5e38\u89c1\u9762\u8bd5\u9898/\u77e5\u8bc6\u70b9\u603b\u7ed3\nArrayList \u6e90\u7801\u5b66\u4e60\nLinkedList \u6e90\u7801\u5b66\u4e60\nHashMap(JDK1.8)\u6e90\u7801\u5b66\u4e60\n\n\u5e76\u53d1\n\nJava \u5e76\u53d1\u57fa\u7840\u5e38\u89c1\u9762\u8bd5\u9898\u603b\u7ed3\nJava \u5e76\u53d1\u8fdb\u9636\u5e38\u89c1\u9762\u8bd5\u9898\u603b\u7ed3\n\u5e76\u53d1\u5bb9\u5668\u603b\u7ed3\nJava\u7ebf\u7a0b\u6c60\u5b66\u4e60\u603b\u7ed3\n\u4e50\u89c2\u9501\u4e0e\u60b2\u89c2\u9501\nJUC \u4e2d\u7684 Atomic \u539f\u5b50\u7c7b\u603b\u7ed3\nAQS \u539f\u7406\u4ee5\u53ca AQS \u540c\u6b65\u7ec4\u4ef6\u603b\u7ed3\n\nJVM\n\n\u4e00 Java\u5185\u5b58\u533a\u57df\n\u4e8c JVM\u5783\u573e\u56de\u6536\n\u4e09 JDK \u76d1\u63a7\u548c\u6545\u969c\u5904\u7406\u5de5\u5177\n\u56db \u7c7b\u6587\u4ef6\u7ed3\u6784\n\u4e94 \u7c7b\u52a0\u8f7d\u8fc7\u7a0b\n\u516d \u7c7b\u52a0\u8f7d\u5668\n\u3010\u5f85\u5b8c\u6210\u3011\u516b \u6700\u91cd\u8981\u7684 JVM \u53c2\u6570\u6307\u5357\uff08\u7ffb\u8bd1\u5b8c\u5584\u4e86\u4e00\u534a\uff09\n\u4e5d JVM \u914d\u7f6e\u5e38\u7528\u53c2\u6570\u548c\u5e38\u7528 GC \u8c03\u4f18\u7b56\u7565\n\nI/O\n\nBIO,NIO,AIO \u603b\u7ed3 \nJava IO \u4e0e NIO\u7cfb\u5217\u6587\u7ae0\n\nJava 8\n\nJava 8 \u65b0\u7279\u6027\u603b\u7ed3\nJava 8 \u5b66\u4e60\u8d44\u6e90\u63a8\u8350\nJava8 forEach \u6307\u5357\n\n\u4f18\u96c5 Java \u4ee3\u7801\u5fc5\u5907\u5b9e\u8df5(Java\u7f16\u7a0b\u89c4\u8303)\n\nJava \u7f16\u7a0b\u89c4\u8303\u4ee5\u53ca\u4f18\u96c5 Java \u4ee3\u7801\u5b9e\u8df5\u603b\u7ed3\n\n\u7f51\u7edc\n\n\u8ba1\u7b97\u673a\u7f51\u7edc\u5e38\u89c1\u9762\u8bd5\u9898\n\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3\nHTTPS\u4e2d\u7684TLS\n\n\u64cd\u4f5c\u7cfb\u7edf\nLinux\u76f8\u5173\n\n\u540e\u7aef\u7a0b\u5e8f\u5458\u5fc5\u5907\u7684 Linux \u57fa\u7840\u77e5\u8bc6\nShell \u7f16\u7a0b\u5165\u95e8\n\n\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\n\u6570\u636e\u7ed3\u6784\n\n\u4e0d\u4e86\u89e3\u5e03\u9686\u8fc7\u6ee4\u5668\uff1f\u4e00\u6587\u7ed9\u4f60\u6574\u7684\u660e\u660e\u767d\u767d\uff01\n\u6570\u636e\u7ed3\u6784\u77e5\u8bc6\u5b66\u4e60\u4e0e\u9762\u8bd5\n\n\u7b97\u6cd5\n\n\u7b97\u6cd5\u5b66\u4e60\u8d44\u6e90\u63a8\u8350\n\u51e0\u9053\u5e38\u89c1\u7684\u5b57\u7b26\u4e32\u7b97\u6cd5\u9898\u603b\u7ed3 \n\u51e0\u9053\u5e38\u89c1\u7684\u94fe\u8868\u7b97\u6cd5\u9898\u603b\u7ed3 \n\u5251\u6307offer\u90e8\u5206\u7f16\u7a0b\u9898\n\u516c\u53f8\u771f\u9898\n\u56de\u6eaf\u7b97\u6cd5\u7ecf\u5178\u6848\u4f8b\u4e4bN\u7687\u540e\u95ee\u9898\n\n\u6570\u636e\u5e93\nMySQL\n\n\u3010\u63a8\u8350\u3011MySQL/\u6570\u636e\u5e93 \u77e5\u8bc6\u70b9\u603b\u7ed3\n\u963f\u91cc\u5df4\u5df4\u5f00\u53d1\u624b\u518c\u6570\u636e\u5e93\u90e8\u5206\u7684\u4e00\u4e9b\u6700\u4f73\u5b9e\u8df5\n\u4e00\u5343\u884cMySQL\u5b66\u4e60\u7b14\u8bb0\nMySQL\u9ad8\u6027\u80fd\u4f18\u5316\u89c4\u8303\u5efa\u8bae\n\u6570\u636e\u5e93\u7d22\u5f15\u603b\u7ed3\n\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b(\u56fe\u6587\u8be6\u89e3)\n\u4e00\u6761SQL\u8bed\u53e5\u5728MySQL\u4e2d\u5982\u4f55\u6267\u884c\u7684\n\nRedis\n\nRedis \u603b\u7ed3\nRedlock\u5206\u5e03\u5f0f\u9501\n\u5982\u4f55\u505a\u53ef\u9760\u7684\u5206\u5e03\u5f0f\u9501\uff0cRedlock\u771f\u7684\u53ef\u884c\u4e48\n\u51e0\u79cd\u5e38\u89c1\u7684 Redis \u96c6\u7fa4\u4ee5\u53ca\u4f7f\u7528\u573a\u666f\n\n\u6570\u636e\u5e93\u6269\u5c55\n\u4ee3\u529e......\n\u7cfb\u7edf\u8bbe\u8ba1\n\u5e38\u7528\u6846\u67b6\nSpring/SpringBoot\n\nSpring \u5b66\u4e60\u4e0e\u9762\u8bd5\nSpring \u5e38\u89c1\u95ee\u9898\u603b\u7ed3\nSpringBoot \u6307\u5357/\u5e38\u89c1\u9762\u8bd5\u9898\u603b\u7ed3\nSpring\u4e2dbean\u7684\u4f5c\u7528\u57df\u4e0e\u751f\u547d\u5468\u671f\nSpringMVC \u5de5\u4f5c\u539f\u7406\u8be6\u89e3\nSpring\u4e2d\u90fd\u7528\u5230\u4e86\u90a3\u4e9b\u8bbe\u8ba1\u6a21\u5f0f?\n\nZooKeeper\n\nZooKeeper \u76f8\u5173\u6982\u5ff5\u603b\u7ed3\nZooKeeper \u6570\u636e\u6a21\u578b\u548c\u5e38\u89c1\u547d\u4ee4\n\n\u6570\u636e\u901a\u4fe1/\u4e2d\u95f4\u4ef6\n\n\u6570\u636e\u901a\u4fe1(RESTful\u3001RPC\u3001\u6d88\u606f\u961f\u5217)\u76f8\u5173\u77e5\u8bc6\u70b9\u603b\u7ed3\n\nRPC\n\nDubbo \u603b\u7ed3\uff1a\u5173\u4e8e Dubbo \u7684\u91cd\u8981\u77e5\u8bc6\u70b9\n\u670d\u52a1\u4e4b\u95f4\u7684\u8c03\u7528\u4e3a\u5565\u4e0d\u76f4\u63a5\u7528 HTTP \u800c\u7528 RPC\uff1f\n\n\u6d88\u606f\u961f\u5217\n\n\u6d88\u606f\u961f\u5217\u603b\u7ed3\nRabbitMQ \u5165\u95e8\nRocketMQ\u7684\u51e0\u4e2a\u7b80\u5355\u95ee\u9898\u4e0e\u7b54\u6848\nKafka\u5165\u95e8\u770b\u8fd9\u4e00\u7bc7\u5c31\u591f\u4e86\nKafka\u7cfb\u7edf\u8bbe\u8ba1\u5f00\u7bc7-\u9762\u8bd5\u770b\u8fd9\u7bc7\u5c31\u591f\u4e86\n\n\u6743\u9650\u8ba4\u8bc1\n\n\u6743\u9650\u8ba4\u8bc1\u57fa\u7840:\u533a\u5206Authentication,Authorization\u4ee5\u53caCookie\u3001Session\u3001Token\nJWT \u4f18\u7f3a\u70b9\u5206\u6790\u4ee5\u53ca\u5e38\u89c1\u95ee\u9898\u89e3\u51b3\u65b9\u6848\n\u9002\u5408\u521d\u5b66\u8005\u5165\u95e8 Spring Security With JWT \u7684 Demo\n\n\u5206\u5e03\u5f0f & \u5fae\u670d\u52a1\n\n\u5206\u5e03\u5f0f\u5e94\u8be5\u5b66\u4ec0\u4e48\n\nAPI \u7f51\u5173\n\u7f51\u5173\u4e3b\u8981\u7528\u4e8e\u8bf7\u6c42\u8f6c\u53d1\u3001\u5b89\u5168\u8ba4\u8bc1\u3001\u534f\u8bae\u8f6c\u6362\u3001\u5bb9\u707e\u3002\n\n\u6d45\u6790\u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u4ebf\u7ea7\u7f51\u5173(API Gateway)\n\n\u914d\u7f6e\u4e2d\u5fc3\n\u4ee3\u529e......\n\u552f\u4e00 id \u751f\u6210\n\u5206\u5e03\u5f0fid\u751f\u6210\u65b9\u6848\u603b\u7ed3\n\u670d\u52a1\u6cbb\u7406\uff1a\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\u3001\u670d\u52a1\u8def\u7531\u63a7\u5236\n\u4ee3\u529e......\n\u67b6\u6784\n\n8 \u5f20\u56fe\u8bfb\u61c2\u5927\u578b\u7f51\u7ad9\u6280\u672f\u67b6\u6784\n\u3010\u9762\u8bd5\u7cbe\u9009\u3011\u5173\u4e8e\u5927\u578b\u7f51\u7ad9\u7cfb\u7edf\u67b6\u6784\u4f60\u4e0d\u5f97\u4e0d\u61c2\u768410\u4e2a\u95ee\u9898\n\n\u8bbe\u8ba1\u6a21\u5f0f\n\n\u8bbe\u8ba1\u6a21\u5f0f\u7cfb\u5217\u6587\u7ae0\n\n\u9762\u8bd5\u6307\u5357\n\u5907\u6218\u9762\u8bd5\n\n\u3010\u5907\u6218\u9762\u8bd51\u3011\u7a0b\u5e8f\u5458\u7684\u7b80\u5386\u5c31\u8be5\u8fd9\u6837\u5199\n\u3010\u5907\u6218\u9762\u8bd52\u3011\u521d\u51fa\u8305\u5e90\u7684\u7a0b\u5e8f\u5458\u8be5\u5982\u4f55\u51c6\u5907\u9762\u8bd5\uff1f\n\u3010\u5907\u6218\u9762\u8bd53\u30117\u4e2a\u5927\u90e8\u5206\u7a0b\u5e8f\u5458\u5728\u9762\u8bd5\u524d\u5f88\u5173\u5fc3\u7684\u95ee\u9898\n\u3010\u5907\u6218\u9762\u8bd54\u3011Github\u4e0a\u5f00\u6e90\u7684Java\u9762\u8bd5/\u5b66\u4e60\u76f8\u5173\u7684\u4ed3\u5e93\u63a8\u8350\n\u3010\u5907\u6218\u9762\u8bd55\u3011\u5982\u679c\u9762\u8bd5\u5b98\u95ee\u4f60\u201c\u4f60\u6709\u4ec0\u4e48\u95ee\u9898\u95ee\u6211\u5417\uff1f\u201d\u65f6\uff0c\u4f60\u8be5\u5982\u4f55\u56de\u7b54\n\u3010\u5907\u6218\u9762\u8bd56\u3011\u5e94\u5c4a\u751f\u9762\u8bd5\u6700\u7231\u95ee\u7684\u51e0\u9053 Java \u57fa\u7840\u95ee\u9898\n\u3010\u5907\u6218\u9762\u8bd56\u3011\u7f8e\u56e2\u9762\u8bd5\u5e38\u89c1\u95ee\u9898\u603b\u7ed3(\u9644\u8be6\u89e3\u7b54\u6848)\n\u3010\u5907\u6218\u9762\u8bd57\u3011\u4e00\u4e9b\u5201\u96be\u7684\u9762\u8bd5\u95ee\u9898\u603b\u7ed3\n\n\u771f\u5b9e\u9762\u8bd5\u7ecf\u5386\u5206\u6790\n\n\u6211\u548c\u963f\u91cc\u9762\u8bd5\u5b98\u7684\u4e00\u6b21\u201c\u9082\u9005\u201d(\u9644\u95ee\u9898\u8be6\u89e3)\n\n\u9762\u7ecf\n\n5\u9762\u963f\u91cc,\u7ec8\u83b7offer(2018\u5e74\u79cb\u62db)\n\u8682\u8681\u91d1\u670d2019\u5b9e\u4e60\u751f\u9762\u7ecf\u603b\u7ed3(\u5df2\u62ff\u53e3\u5934offer)\n2019\u5e74\u8682\u8681\u91d1\u670d\u3001\u5934\u6761\u3001\u62fc\u591a\u591a\u7684\u9762\u8bd5\u603b\u7ed3\n\nJava\u5b66\u4e60\u5e38\u89c1\u95ee\u9898\u6c47\u603b\n\nJava\u5b66\u4e60\u8def\u7ebf\u548c\u65b9\u6cd5\u63a8\u8350\nJava\u57f9\u8bad\u56db\u4e2a\u6708\u80fd\u5b66\u4f1a\u5417\uff1f\n\u65b0\u624b\u5b66\u4e60Java\uff0c\u6709\u54ea\u4e9bJava\u76f8\u5173\u7684\u535a\u5ba2\uff0c\u4e13\u680f\uff0c\u548c\u6280\u672f\u5b66\u4e60\u7f51\u7ad9\u63a8\u8350\uff1f\n\n\u5de5\u5177\nGit\n\nGit\u5165\u95e8\n\nDocker\n\nDocker \u57fa\u672c\u6982\u5ff5\u89e3\u8bfb\n\u4e00\u6587\u641e\u61c2 Docker \u955c\u50cf\u7684\u5e38\u7528\u64cd\u4f5c\uff01\n\n\u5176\u4ed6\n\n\u963f\u91cc\u4e91\u670d\u52a1\u5668\u4f7f\u7528\u7ecf\u9a8c\n\n\u8d44\u6e90\n\u4e66\u5355\n\nJava\u7a0b\u5e8f\u5458\u5fc5\u5907\u4e66\u5355\n\n\u5b9e\u6218\u9879\u76ee\u63a8\u8350\n\nGithub \u4e0a\u70ed\u95e8\u7684 Spring Boot \u9879\u76ee\u5b9e\u6218\u63a8\u8350\n\nGithub\n\nGithub \u4e0a Star \u6570\u6700\u591a\u7684 10 \u4e2a\u9879\u76ee\uff0c\u770b\u5b8c\u4e4b\u540e\u5f88\u610f\u5916!\nJava \u9879\u76ee\u6708\u699c\u5355\n\n\n\u5f85\u529e\n\n Java \u591a\u7ebf\u7a0b\u7c7b\u522b\u77e5\u8bc6\u91cd\u6784\n Netty \u603b\u7ed3(---\u6b63\u5728\u8fdb\u884c\u4e2d---)\n \u6570\u636e\u7ed3\u6784\u603b\u7ed3\u91cd\u6784(---\u6b63\u5728\u8fdb\u884c\u4e2d---)\n\n\u8bf4\u660e\nJavaGuide\u4ecb\u7ecd\n\n\u5bf9\u4e8e Java \u521d\u5b66\u8005\u6765\u8bf4\uff1a \u672c\u6587\u6863\u503e\u5411\u4e8e\u7ed9\u4f60\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u8f83\u8be6\u7ec6\u7684\u5b66\u4e60\u8def\u5f84\uff0c\u8ba9\u4f60\u5bf9\u4e8eJava\u6574\u4f53\u7684\u77e5\u8bc6\u4f53\u7cfb\u6709\u4e00\u4e2a\u521d\u6b65\u8ba4\u8bc6\u3002\u53e6\u5916\uff0c\u672c\u6587\u7684\u4e00\u4e9b\u6587\u7ae0\n\u4e5f\u662f\u4f60\u5b66\u4e60\u548c\u590d\u4e60 Java \u77e5\u8bc6\u4e0d\u9519\u7684\u5b9e\u8df5\uff1b\n\u5bf9\u4e8e\u975e Java \u521d\u5b66\u8005\u6765\u8bf4\uff1a \u672c\u6587\u6863\u66f4\u9002\u5408\u56de\u987e\u77e5\u8bc6\uff0c\u51c6\u5907\u9762\u8bd5\uff0c\u641e\u6e05\u9762\u8bd5\u5e94\u8be5\u628a\u91cd\u5fc3\u653e\u5728\u90a3\u4e9b\u95ee\u9898\u4e0a\u3002\u8981\u641e\u6e05\u695a\u8fd9\u4e2a\u9053\u7406\uff1a\u63d0\u524d\u77e5\u9053\u90a3\u4e9b\u9762\u8bd5\u5e38\u89c1\uff0c\u4e0d\u662f\u4e3a\u4e86\u80cc\u4e0b\u6765\u5e94\u4ed8\u9762\u8bd5\uff0c\u800c\u662f\u4e3a\u4e86\u8ba9\u4f60\u53ef\u4ee5\u66f4\u6709\u9488\u5bf9\u7684\u5b66\u4e60\u91cd\u70b9\u3002\n\nMarkdown \u683c\u5f0f\u53c2\u8003\uff1aGithub Markdown\u683c\u5f0f\uff0c\u8868\u60c5\u7d20\u6750\u6765\u81ea\uff1aEMOJI CHEAT SHEET\u3002\n\u5229\u7528 docsify \u751f\u6210\u6587\u6863\u90e8\u7f72\u5728 Github pages: docsify \u5b98\u7f51\u4ecb\u7ecd\n\u4f5c\u8005\u7684\u5176\u4ed6\u5f00\u6e90\u9879\u76ee\u63a8\u8350\n\nspringboot-guide : \u9002\u5408\u65b0\u624b\u5165\u95e8\u4ee5\u53ca\u6709\u7ecf\u9a8c\u7684\u5f00\u53d1\u4eba\u5458\u67e5\u9605\u7684 Spring Boot \u6559\u7a0b\uff08\u4e1a\u4f59\u65f6\u95f4\u7ef4\u62a4\u4e2d\uff0c\u6b22\u8fce\u4e00\u8d77\u7ef4\u62a4\uff09\u3002\nprogrammer-advancement : \u6211\u89c9\u5f97\u6280\u672f\u4eba\u5458\u5e94\u8be5\u6709\u7684\u4e00\u4e9b\u597d\u4e60\u60ef\uff01\nspring-security-jwt-guide :\u4ece\u96f6\u5165\u95e8 \uff01Spring Security With JWT\uff08\u542b\u6743\u9650\u9a8c\u8bc1\uff09\u540e\u7aef\u90e8\u5206\u4ee3\u7801\u3002\n\n\u5173\u4e8e\u8f6c\u8f7d\n\u5982\u679c\u4f60\u9700\u8981\u8f6c\u8f7d\u672c\u4ed3\u5e93\u7684\u4e00\u4e9b\u6587\u7ae0\u5230\u81ea\u5df1\u7684\u535a\u5ba2\u7684\u8bdd\uff0c\u8bb0\u5f97\u6ce8\u660e\u539f\u6587\u5730\u5740\u5c31\u53ef\u4ee5\u4e86\u3002\n\u5982\u4f55\u5bf9\u8be5\u5f00\u6e90\u6587\u6863\u8fdb\u884c\u8d21\u732e\n\n\u7b14\u8bb0\u5185\u5bb9\u5927\u591a\u662f\u624b\u6572\uff0c\u6240\u4ee5\u96be\u514d\u4f1a\u6709\u7b14\u8bef\uff0c\u4f60\u53ef\u4ee5\u5e2e\u6211\u627e\u9519\u522b\u5b57\u3002\n\u5f88\u591a\u77e5\u8bc6\u70b9\u6211\u53ef\u80fd\u6ca1\u6709\u6d89\u53ca\u5230\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5bf9\u5176\u4ed6\u77e5\u8bc6\u70b9\u8fdb\u884c\u8865\u5145\u3002\n\u73b0\u6709\u7684\u77e5\u8bc6\u70b9\u96be\u514d\u5b58\u5728\u4e0d\u5b8c\u5584\u6216\u8005\u9519\u8bef\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5bf9\u5df2\u6709\u77e5\u8bc6\u70b9\u8fdb\u884c\u4fee\u6539/\u8865\u5145\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u505a\u8fd9\u4e2a\u5f00\u6e90\u6587\u6863\uff1f\n\u521d\u59cb\u60f3\u6cd5\u6e90\u4e8e\u81ea\u5df1\u7684\u4e2a\u4eba\u90a3\u4e00\u6bb5\u6bd4\u8f83\u8ff7\u832b\u7684\u5b66\u4e60\u7ecf\u5386\u3002\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u901a\u8fc7\u8fd9\u4e2a\u5f00\u6e90\u5e73\u53f0\u6765\u5e2e\u52a9\u4e00\u4e9b\u5728\u5b66\u4e60 Java \u6216\u8005\u9762\u8bd5\u8fc7\u7a0b\u4e2d\u9047\u5230\u95ee\u9898\u7684\u5c0f\u4f19\u4f34\u3002\n\u6295\u7a3f\n\u7531\u4e8e\u6211\u4e2a\u4eba\u80fd\u529b\u6709\u9650\uff0c\u5f88\u591a\u77e5\u8bc6\u70b9\u6211\u53ef\u80fd\u6ca1\u6709\u6d89\u53ca\u5230\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5bf9\u5176\u4ed6\u77e5\u8bc6\u70b9\u8fdb\u884c\u8865\u5145\u3002\u5927\u5bb6\u4e5f\u53ef\u4ee5\u5bf9\u81ea\u5df1\u7684\u6587\u7ae0\u8fdb\u884c\u81ea\u8350\uff0c\u5bf9\u4e8e\u4e0d\u9519\u7684\u6587\u7ae0\u4e0d\u4ec5\u53ef\u4ee5\u6210\u529f\u5728\u672c\u4ed3\u5e93\u5c55\u793a\u51fa\u6765\u66f4\u53ef\u4ee5\u83b7\u5f97\u4f5c\u8005\u9001\u51fa\u7684 50 \u5143\u5de6\u53f3\u7684\u4efb\u610f\u4e66\u7c4d\u8fdb\u884c\u5956\u52b1(\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6298\u73b050\u5143)\u3002\n\u8054\u7cfb\u6211\n\u6dfb\u52a0\u6211\u7684\u5fae\u4fe1\u5907\u6ce8\u201cGithub\u201d,\u56de\u590d\u5173\u952e\u5b57 \u201c\u52a0\u7fa4\u201d \u5373\u53ef\u5165\u7fa4\u3002\n\nContributor\n\u4e0b\u9762\u662f\u7b14\u4e3b\u6536\u96c6\u7684\u4e00\u4e9b\u5bf9\u672c\u4ed3\u5e93\u63d0\u8fc7\u6709\u4ef7\u503c\u7684pr\u6216\u8005issue\u7684\u670b\u53cb\uff0c\u4eba\u6570\u8f83\u591a\uff0c\u5982\u679c\u4f60\u4e5f\u5bf9\u672c\u4ed3\u5e93\u63d0\u8fc7\u4e0d\u9519\u7684pr\u6216\u8005issue\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u52a0\u6211\u7684\u5fae\u4fe1\u4e0e\u6211\u8054\u7cfb\u3002\u4e0b\u9762\u7684\u6392\u540d\u4e0d\u5206\u5148\u540e\uff01\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u516c\u4f17\u53f7\n\u5982\u679c\u5927\u5bb6\u60f3\u8981\u5b9e\u65f6\u5173\u6ce8\u6211\u66f4\u65b0\u7684\u6587\u7ae0\u4ee5\u53ca\u5206\u4eab\u7684\u5e72\u8d27\u7684\u8bdd\uff0c\u53ef\u4ee5\u5173\u6ce8\u6211\u7684\u516c\u4f17\u53f7\u3002\n\u300aJava\u9762\u8bd5\u7a81\u51fb\u300b: \u7531\u672c\u6587\u6863\u884d\u751f\u7684\u4e13\u4e3a\u9762\u8bd5\u800c\u751f\u7684\u300aJava\u9762\u8bd5\u7a81\u51fb\u300bV2.0 PDF \u7248\u672c\u516c\u4f17\u53f7\u540e\u53f0\u56de\u590d \"Java\u9762\u8bd5\u7a81\u51fb\" \u5373\u53ef\u514d\u8d39\u9886\u53d6\uff01\nJava\u5de5\u7a0b\u5e08\u5fc5\u5907\u5b66\u4e60\u8d44\u6e90: \u4e00\u4e9bJava\u5de5\u7a0b\u5e08\u5e38\u7528\u5b66\u4e60\u8d44\u6e90\u516c\u4f17\u53f7\u540e\u53f0\u56de\u590d\u5173\u952e\u5b57 \u201c1\u201d \u5373\u53ef\u514d\u8d39\u65e0\u5957\u8def\u83b7\u53d6\u3002\n\n\n"}, {"repo": "TheAlgorithms/Python", "language": "Python", "readme": "\nThe Algorithms - Python\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\nAll algorithms implemented in Python (for education)\nThese implementations are for learning purposes. They may be less efficient than the implementations in the Python standard library.\nContribution Guidelines\nRead our Contribution Guidelines before you contribute.\nCommunity Channel\nWe're on Gitter! Please join us.\nList of Algorithms\nSee our directory.\n\n\n"}, {"repo": "daneden/animate.css", "language": "CSS", "readme": "\nAnimate.css      \n\nWe need your help! animate.css v4 is in the work with lots of improvements and some breaking changes, including CSS custom properties support (aka CSS variables) and classes prefix for a safer use. We need your feedback! You can follow the development on the dev branch and give your feedback on the issue tracker.\nEvery feedback is welcome!\n\nJust-add-water CSS animation\nanimate.css is a bunch of cool, fun, and cross-browser animations for you to use in your projects. Great for emphasis, home pages, sliders, and general just-add-water-awesomeness.\nInstallation\nInstall via npm:\n$ npm install animate.css --save\nor yarn:\n$ yarn add animate.css\nUsage\nTo use animate.css in your website, simply drop the stylesheet into your document's <head>, and add the class animated to an element, along with any of the animation names. That's it! You've got a CSS animated element. Super!\n<head>\n  <link rel=\"stylesheet\" href=\"animate.min.css\">\n</head>\nor use a CDN hosted version by CDNJS\n<head>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.2/animate.min.css\">\n</head>\nAnimations\nTo animate an element, add the class animated to an element. You can include the class infinite for an infinite loop. Finally you need to add one of the following classes to the element:\n\n\n\nClass Name\n\n\n\n\n\n\n\nbounce\nflash\npulse\nrubberBand\n\n\nshake\nheadShake\nswing\ntada\n\n\nwobble\njello\nbounceIn\nbounceInDown\n\n\nbounceInLeft\nbounceInRight\nbounceInUp\nbounceOut\n\n\nbounceOutDown\nbounceOutLeft\nbounceOutRight\nbounceOutUp\n\n\nfadeIn\nfadeInDown\nfadeInDownBig\nfadeInLeft\n\n\nfadeInLeftBig\nfadeInRight\nfadeInRightBig\nfadeInUp\n\n\nfadeInUpBig\nfadeOut\nfadeOutDown\nfadeOutDownBig\n\n\nfadeOutLeft\nfadeOutLeftBig\nfadeOutRight\nfadeOutRightBig\n\n\nfadeOutUp\nfadeOutUpBig\nflipInX\nflipInY\n\n\nflipOutX\nflipOutY\nlightSpeedIn\nlightSpeedOut\n\n\nrotateIn\nrotateInDownLeft\nrotateInDownRight\nrotateInUpLeft\n\n\nrotateInUpRight\nrotateOut\nrotateOutDownLeft\nrotateOutDownRight\n\n\nrotateOutUpLeft\nrotateOutUpRight\nhinge\njackInTheBox\n\n\nrollIn\nrollOut\nzoomIn\nzoomInDown\n\n\nzoomInLeft\nzoomInRight\nzoomInUp\nzoomOut\n\n\nzoomOutDown\nzoomOutLeft\nzoomOutRight\nzoomOutUp\n\n\nslideInDown\nslideInLeft\nslideInRight\nslideInUp\n\n\nslideOutDown\nslideOutLeft\nslideOutRight\nslideOutUp\n\n\nheartBeat\n\n\n\n\n\n\nFull example:\n<h1 class=\"animated infinite bounce delay-2s\">Example</h1>\nCheck out all the animations here!\nIt's possible to change the duration of your animations, add a delay or change the number of times that it plays:\n.yourElement {\n  animation-duration: 3s;\n  animation-delay: 2s;\n  animation-iteration-count: infinite;\n}\nUsage with Javascript\nYou can do a whole bunch of other stuff with animate.css when you combine it with Javascript. A simple example:\nconst element =  document.querySelector('.my-element')\nelement.classList.add('animated', 'bounceOutLeft')\nYou can also detect when an animation ends:\nconst element =  document.querySelector('.my-element')\nelement.classList.add('animated', 'bounceOutLeft')\n\nelement.addEventListener('animationend', function() { doSomething() })\nYou can use this simple function to add and remove the animations:\nfunction animateCSS(element, animationName, callback) {\n    const node = document.querySelector(element)\n    node.classList.add('animated', animationName)\n\n    function handleAnimationEnd() {\n        node.classList.remove('animated', animationName)\n        node.removeEventListener('animationend', handleAnimationEnd)\n\n        if (typeof callback === 'function') callback()\n    }\n\n    node.addEventListener('animationend', handleAnimationEnd)\n}\nAnd use it like this:\nanimateCSS('.my-element', 'bounce')\n\n// or\nanimateCSS('.my-element', 'bounce', function() {\n  // Do something after animation\n})\nNotice that the examples are using ES6's const declaration, dropping support for IE10 and some aging browsers. If you prefer, switch the const to var declarations and IE10 and some old browsers will get support (they still have to provide classList support, so do your research).\nSetting Delay and Speed\nDelay Class\nIt's possible to add delays directly on the element's class attribute, just like this:\n<div class=\"animated bounce delay-2s\">Example</div>\n\n\n\nClass Name\nDelay Time\n\n\n\n\ndelay-1s\n1s\n\n\ndelay-2s\n2s\n\n\ndelay-3s\n3s\n\n\ndelay-4s\n4s\n\n\ndelay-5s\n5s\n\n\n\n\nNote: The default delays are from 1 second to 5 seconds only. If you need custom delays, add it directly to your own CSS code.\n\nSlow, Slower, Fast, and Faster Class\nIt's possible to control the speed of the animation by adding these classes, as a sample below:\n<div class=\"animated bounce faster\">Example</div>\n\n\n\nClass Name\nSpeed Time\n\n\n\n\nslow\n2s\n\n\nslower\n3s\n\n\nfast\n800ms\n\n\nfaster\n500ms\n\n\n\n\nNote: The animated class has a default speed of 1s. If you need custom duration, add it directly to your own CSS code.\n\nCustom Builds\nAnimate.css is powered by gulp.js, which means you can create custom builds pretty easily. First of all, you\u2019ll need Gulp and all other dependencies:\n$ cd path/to/animate.css/\n$ npm install\nNext, run npx gulp to compile your custom builds. For example, if you want only some of the \u201cattention seekers\u201d, simply edit the animate-config.json file to select only the animations you want to use.\n\"attention_seekers\": {\n  \"bounce\": true,\n  \"flash\": false,\n  \"pulse\": false,\n  \"shake\": true,\n  \"headShake\": true,\n  \"swing\": true,\n  \"tada\": true,\n  \"wobble\": true,\n  \"jello\":true\n}\nAccessibility\nAnimate.css supports the prefers-reduced-motion media query so that users with motion sensitivity can opt out of animations. On supported platforms (currently all the majors browsers and OS), users can select \"reduce motion\" on their operating system preferences and it will turn off CSS transitions for them without any further work required.\nLicense\nAnimate.css is licensed under the MIT license. (https://opensource.org/licenses/MIT)\nCode of Conduct\nThis project and everyone participating in it is governed by the Contributor Covenant Code of Conduct. By participating, you are expected to uphold this code. Please report unacceptable behavior to callmeelton@gmail.com.\nContributing\nPull requests are the way to go here. We only have two rules for submitting a pull request: match the naming convention (camelCase, categorised [fades, bounces, etc]) and let us see a demo of submitted animations in a pen. That last one is important.\n\n"}, {"repo": "FortAwesome/Font-Awesome", "language": "JavaScript", "readme": "\n\n\nVersion 5 \u2013 the iconic SVG, font, and CSS framework\n\nThe internet's most popular icon toolkit has been redesigned and built from\nscratch. On top of this, features like icon font ligatures, an SVG framework,\nofficial NPM packages for popular frontend libraries like React, and access to\na new CDN.\nNot familiar with Font Awesome 5? Learn\nmore about our\nsuccessful Kickstarter and plan. You can also order Font Awesome\nPro which includes tons more icons directly\nfrom fontawesome.com.\nDocumentation\nLearn how to get started with Font Awesome and then dive deeper into other and advanced topics:\nUsing Font Awesome on the Web\n\nWith SVG with JavaScript\nWith web fonts with CSS\nUpgrading from version 4\nInstalling Font Awesome with a package manager\nDownloading + hosting Font Awesome yourself\nPerformance and security\nAccessibility\nTroubleshooting\n\nAdvanced Options & Techniques\n\nUsing CSS pseudo-elements\nSVG sprites\nThe Font Awesome API\nSVG symbols\nSVG JavaScript Core\nServer side rendering\n\nUsing Font Awesome on the Desktop\n\nGetting started\nUpgrading from version 4\nUsing ligatures\nUsing glyphs\nTroubleshooting\n\nWhere did Font Awesome 4 (or 3) go?\nNow that Font Awesome 5 has been released we are marking version 4 as\nend-of-life. We don't plan on releasing any further versions of the 4.x or 3.x.\nDocumentation is still available but it's moved to\nhttps://fontawesome.com/v4.7.0 and\nhttps://fontawesome.com/v3.2.1.\nThe Git repository for\nv4.7.0 and\nv3.2.1 can\nbe found in our GitHub releases.\nChange log\nWe'll keep track of each release in the CHANGELOG.md\nLooking for older versions of Font Awesome? Check the releases.\nUpgrading\nFrom time-to-time we'll have special upgrading instructions from one version to the next.\nCheck out the UPGRADING.md guide when you upgrade your dependencies.\nCode of conduct\nWe will behave ourselves if you behave yourselves. For more details see our\nCODE_OF_CONDUCT.md.\nContributing\nPlease read through our contributing guidelines.  Included\nare directions for opening issues.\nVersioning\nFont Awesome will be maintained under the Semantic Versioning guidelines as much as possible. Releases will be numbered\nwith the following format:\n<major>.<minor>.<patch>\nFor more information on SemVer, please visit http://semver.org.\nThe major version \"5\" is part of an umbrella release.  It includes many different types of files and technologies. Therefore\nwe deviate from normal SemVer in the following ways:\n\nAny release may update the design, look-and-feel, or branding of an existing\nicon\nWe will never intentionally release a patch version update that breaks\nbackward compatibility\nA minor release may include backward-incompatible changes but we will\nwrite clear upgrading instructions in UPGRADING.md\nA minor or patch release will never remove icons\nBug fixes will be addressed as patch releases unless they include backward\nincompatibility then they will be minor releases\n\nLicense\nFont Awesome Free is free, open source, and GPL friendly. You can use it for\ncommercial projects, open source projects, or really almost whatever you want.\n\nIcons \u2014 CC BY 4.0 License\n\nIn the Font Awesome Free download, the CC BY 4.0 license applies to all icons packaged as .svg and .js files types.\n\n\nFonts \u2014 SIL OFL 1.1 License\n\nIn the Font Awesome Free download, the SIL OLF license applies to all icons packaged as web and desktop font files.\n\n\nCode \u2014 MIT License\n\nIn the Font Awesome Free download, the MIT license applies to all non-font and non-icon files.\n\n\n\nAttribution is required by MIT, SIL OLF, and CC BY licenses. Downloaded Font\nAwesome Free files already contain embedded comments with sufficient\nattribution, so you shouldn't need to do anything additional when using these\nfiles normally.\nWe've kept attribution comments terse, so we ask that you do not actively work\nto remove them from files, especially code. They're a great way for folks to\nlearn about Font Awesome.\nTeam\n\nDave Gandy\nTravis Chase\nRob Madole\nBrian Talbot\nJory Raphael\nMike Wilkerson\nTrevor Chase\nJason Lundien\nJason Otero\nEdward Emanuel\nGeremia Taglialatela\n\n\n"}, {"repo": "kubernetes/kubernetes", "language": "Go", "readme": "\nKubernetes\n \n\n\nKubernetes is an open source system for managing containerized applications\nacross multiple hosts. It provides basic mechanisms for deployment, maintenance,\nand scaling of applications.\nKubernetes builds upon a decade and a half of experience at Google running\nproduction workloads at scale using a system called Borg,\ncombined with best-of-breed ideas and practices from the community.\nKubernetes is hosted by the Cloud Native Computing Foundation (CNCF).\nIf your company wants to help shape the evolution of\ntechnologies that are container-packaged, dynamically scheduled,\nand microservices-oriented, consider joining the CNCF.\nFor details about who's involved and how Kubernetes plays a role,\nread the CNCF announcement.\n\nTo start using Kubernetes\nSee our documentation on kubernetes.io.\nTry our interactive tutorial.\nTake a free course on Scalable Microservices with Kubernetes.\nTo use Kubernetes code as a library in other applications, see the list of published components.\nUse of the k8s.io/kubernetes module or k8s.io/kubernetes/... packages as libraries is not supported.\nTo start developing Kubernetes\nThe community repository hosts all information about\nbuilding Kubernetes from source, how to contribute code\nand documentation, who to contact about what, etc.\nIf you want to build Kubernetes right away there are two options:\nYou have a working Go environment.\nmkdir -p $GOPATH/src/k8s.io\ncd $GOPATH/src/k8s.io\ngit clone https://github.com/kubernetes/kubernetes\ncd kubernetes\nmake\n\nYou have a working Docker environment.\ngit clone https://github.com/kubernetes/kubernetes\ncd kubernetes\nmake quick-release\n\nFor the full story, head over to the developer's documentation.\nSupport\nIf you need support, start with the troubleshooting guide,\nand work your way through the process that we've outlined.\nThat said, if you have questions, reach out to us\none way or another.\n\n\n"}, {"repo": "justjavac/free-programming-books-zh_CN", "language": "None", "readme": "\n\u514d\u8d39\u7684\u7f16\u7a0b\u4e2d\u6587\u4e66\u7c4d\u7d22\u5f15\n    \n\u514d\u8d39\u7684\u7f16\u7a0b\u4e2d\u6587\u4e66\u7c4d\u7d22\u5f15\uff0c\u6b22\u8fce\u6295\u7a3f\u3002\n\n\u56fd\u5916\u7a0b\u5e8f\u5458\u5728 stackoverflow \u63a8\u8350\u7684\u7a0b\u5e8f\u5458\u5fc5\u8bfb\u4e66\u7c4d\uff0c\u4e2d\u6587\u7248\u3002\nstackoverflow \u4e0a\u7684\u7a0b\u5e8f\u5458\u5e94\u8be5\u9605\u8bfb\u7684\u975e\u7f16\u7a0b\u7c7b\u4e66\u7c4d\u6709\u54ea\u4e9b\uff1f \u4e2d\u6587\u7248\ngithub \u4e0a\u7684\u4e00\u4e2a\u6d41\u884c\u7684\u7f16\u7a0b\u4e66\u7c4d\u7d22\u5f15  \u4e2d\u6587\u7248\n\n\u6b22\u8fce\u8ba2\u9605\u6211\u7684\u5fae\u4fe1\u516c\u4f17\u5e10\u53f7\uff0c\u53ea\u63a8\u9001\u539f\u521b\u6587\u5b57\u3002\u6b22\u8fce\u626b\u63cf\u4e8c\u7ef4\u7801\u8ba2\u9605\uff1a\n\n\u53c2\u4e0e\u4ea4\u6d41\n\u6b22\u8fce\u5927\u5bb6\u5c06\u73cd\u85cf\u5df2\u4e45\u7684\u7ecf\u5178\u514d\u8d39\u4e66\u7c4d\u5171\u4eab\u51fa\u6765\uff0c\u60a8\u53ef\u4ee5\uff1a\n\n\u4f7f\u7528 Issues \u4ee5\u53ca Pull Request\n\n\u8d21\u732e\u8005\u540d\u5355: https://github.com/justjavac/free-programming-books-zh_CN/graphs/contributors\n\u76ee\u5f55\n\n\n\u8bed\u8a00\u65e0\u5173\u7c7b\n\n\u64cd\u4f5c\u7cfb\u7edf\n\u667a\u80fd\u7cfb\u7edf\n\u5206\u5e03\u5f0f\u7cfb\u7edf\n\u7f16\u8bd1\u539f\u7406\n\u51fd\u6570\u5f0f\u6982\u5ff5\n\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\nWEB\u670d\u52a1\u5668\n\u7248\u672c\u63a7\u5236\n\u7f16\u8f91\u5668\nNoSQL\nPostgreSQL\nMySQL\n\u7ba1\u7406\u548c\u76d1\u63a7\n\u9879\u76ee\u76f8\u5173\n\u8bbe\u8ba1\u6a21\u5f0f\nWeb\n\u5927\u6570\u636e\n\u7f16\u7a0b\u827a\u672f\n\u5176\u5b83\n\n\n\n\u8bed\u8a00\u76f8\u5173\u7c7b\n\nAndroid\nAPP\nAWK\nC/C++\nC#\nClojure\nCSS/HTML\nDart\nElixir\nErlang\nFortran\nGo\nGroovy\nHaskell\niOS\nJava\nJavaScript\nKotlin\nLaTeX\nLISP\nLua\nOCaml\nPerl\nPHP\nProlog\nPython\nR\nRuby\nRust\nScala\nShell\nSwift\n\n\n\n\u8bfb\u4e66\u7b14\u8bb0\u53ca\u5176\u5b83\n\n\n\u6d4b\u8bd5\u76f8\u5173\n\n\n\u7f6e\u9876\n\n[\u7b14\u8bb0]\u524d\u7aef\u5de5\u7a0b\u5e08\u7684\u5165\u95e8\u4e0e\u8fdb\u9636 \ud83d\udcaf\n[\u5168\u6587]\u5982\u4f55\u6b63\u786e\u7684\u5b66\u4e60 Node.js \ud83d\udcaf\n\n\u64cd\u4f5c\u7cfb\u7edf\n\n\u5f00\u6e90\u4e16\u754c\u65c5\u884c\u624b\u518c\n\u9e1f\u54e5\u7684Linux\u79c1\u623f\u83dc\nThe Linux Command Line (\u4e2d\u82f1\u6587\u7248)\nLinux \u8bbe\u5907\u9a71\u52a8 (\u7b2c\u4e09\u7248)\n\u6df1\u5165\u5206\u6790Linux\u5185\u6838\u6e90\u7801\nUNIX TOOLBOX\nDocker\u4e2d\u6587\u6307\u5357\nDocker \u2014\u2014 \u4ece\u5165\u95e8\u5230\u5b9e\u8df5\nDocker\u5165\u95e8\u5b9e\u6218\nDocker Cheat Sheet\nFreeRADIUS\u65b0\u624b\u5165\u95e8\nMac \u5f00\u53d1\u914d\u7f6e\u624b\u518c\nFreeBSD \u4f7f\u7528\u624b\u518c\nLinux \u547d\u4ee4\u884c(\u4e2d\u6587\u7248)\nLinux \u6784\u5efa\u6307\u5357\nLinux\u5de5\u5177\u5feb\u901f\u6559\u7a0b\nLinux Documentation (\u4e2d\u6587\u7248)\n\u5d4c\u5165\u5f0f Linux \u77e5\u8bc6\u5e93 (eLinux.org \u4e2d\u6587\u7248)\n\u7406\u89e3Linux\u8fdb\u7a0b\n\u547d\u4ee4\u884c\u7684\u827a\u672f\nSystemTap\u65b0\u624b\u6307\u5357\n\u64cd\u4f5c\u7cfb\u7edf\u601d\u8003\n\n\u8fd4\u56de\u76ee\u5f55\n\u667a\u80fd\u7cfb\u7edf\n\n\u4e00\u6b65\u6b65\u642d\u5efa\u7269\u8054\u7f51\u7cfb\u7edf\n\n\u8fd4\u56de\u76ee\u5f55\n\u5206\u5e03\u5f0f\u7cfb\u7edf\n\n\u8d70\u5411\u5206\u5e03\u5f0f\n\n\u8fd4\u56de\u76ee\u5f55\n\u7f16\u8bd1\u539f\u7406\n\n\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u7ed3\u6784\u548c\u89e3\u91ca\u300b\u516c\u5f00\u8bfe \u7ffb\u8bd1\u9879\u76ee\n\n\u8fd4\u56de\u76ee\u5f55\n\u51fd\u6570\u5f0f\u6982\u5ff5\n\n\u50bb\u74dc\u51fd\u6570\u7f16\u7a0b\n\n\u8fd4\u56de\u76ee\u5f55\n\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\n\nOpenGL \u6559\u7a0b\nWebGL\u81ea\u5b66\u7f51\n\u300aReal-Time Rendering 3rd\u300b\u63d0\u70bc\u603b\u7ed3\n\n\u8fd4\u56de\u76ee\u5f55\nWEB\u670d\u52a1\u5668\n\nNginx\u5f00\u53d1\u4ece\u5165\u95e8\u5230\u7cbe\u901a (\u6dd8\u5b9d\u56e2\u961f\u51fa\u54c1)\nNginx\u6559\u7a0b\u4ece\u5165\u95e8\u5230\u7cbe\u901a(PDF\u7248\u672c\uff0c\u8fd0\u7ef4\u751f\u5b58\u65f6\u95f4\u51fa\u54c1)\nOpenResty\u6700\u4f73\u5b9e\u8df5\nApache \u4e2d\u6587\u624b\u518c\n\n\u8fd4\u56de\u76ee\u5f55\n\u7248\u672c\u63a7\u5236\n\nGit\u6559\u7a0b \uff08\u672c\u6587\u7531 \u5ed6\u96ea\u5cf0 \u521b\u4f5c\uff0c\u5982\u679c\u89c9\u5f97\u672c\u6559\u7a0b\u5bf9\u60a8\u6709\u5e2e\u52a9\uff0c\u53ef\u4ee5\u53bb iTunes \u8d2d\u4e70\uff09\ngit - \u7b80\u6613\u6307\u5357\n\u7334\u5b50\u90fd\u80fd\u61c2\u7684GIT\u5165\u95e8\nGit \u53c2\u8003\u624b\u518c\nPro Git\nPro Git \u4e2d\u6587\u7248 (\u6574\u7406\u5728gitbook\u4e0a)\nGit Magic\nGotGitHub\nGit\u6743\u5a01\u6307\u5357\nGit Community Book \u4e2d\u6587\u7248\nMercurial \u4f7f\u7528\u6559\u7a0b\nHgInit (\u4e2d\u6587\u7248)\n\u6c89\u6d78\u5f0f\u5b66 Git\nGit-Cheat-Sheet \uff08\u611f\u8c22 @flyhigher139 \u7ffb\u8bd1\u4e86\u4e2d\u6587\u7248\uff09\nGitHub\u79d8\u7c4d\nGitHub\u5e2e\u52a9\u6587\u6863\ngit-flow \u5907\u5fd8\u6e05\u5355\nsvn \u624b\u518c\nGitHub\u6f2b\u6e38\u6307\u5357\n\n\u8fd4\u56de\u76ee\u5f55\n\u7f16\u8f91\u5668\n\nexvim--vim \u6539\u826f\u6210IDE\u9879\u76ee\n\u7b28\u65b9\u6cd5\u5b66Vimscript \u4e2d\u8bd1\u672c\nVim\u4e2d\u6587\u6587\u6863\n\u6240\u9700\u5373\u6240\u83b7\uff1a\u50cf IDE \u4e00\u6837\u4f7f\u7528 vim\nvim \u5b9e\u64cd\u6559\u7a0b\nAtom\u98de\u884c\u624b\u518c\u4e2d\u6587\u7248\nMarkdown\u00b7\u7b80\u5355\u7684\u4e16\u754c\n\u4e00\u5e74\u6210\u4e3a Emacs \u9ad8\u624b\nEmacs \u751f\u5b58\u6307\u5357\nAtom\u5b98\u65b9\u624b\u518c\n\n\u8fd4\u56de\u76ee\u5f55\nNoSQL\n\nNoSQL\u6570\u636e\u5e93\u7b14\u8c08\nRedis \u8bbe\u8ba1\u4e0e\u5b9e\u73b0\nRedis \u547d\u4ee4\u53c2\u8003\n\u5e26\u6709\u8be6\u7ec6\u6ce8\u91ca\u7684 Redis 3.0 \u4ee3\u7801\n\u5e26\u6709\u8be6\u7ec6\u6ce8\u91ca\u7684 Redis 2.6 \u4ee3\u7801\nThe Little MongoDB Book\nThe Little Redis Book\nNeo4j \u7b80\u4f53\u4e2d\u6587\u624b\u518c v1.8\nNeo4j .rb \u4e2d\u6587\u8cc7\u6e90\nDisque \u4f7f\u7528\u6559\u7a0b\nApache Spark \u8bbe\u8ba1\u4e0e\u5b9e\u73b0\n\n\u8fd4\u56de\u76ee\u5f55\nPostgreSQL\n\nPostgreSQL 8.2.3 \u4e2d\u6587\u6587\u6863\nPostgreSQL 9.3.1 \u4e2d\u6587\u6587\u6863\nPostgreSQL 9.5.3 \u4e2d\u6587\u6587\u6863\n\n\u8fd4\u56de\u76ee\u5f55\nMySQL\n\nMySQL\u7d22\u5f15\u80cc\u540e\u7684\u6570\u636e\u7ed3\u6784\u53ca\u7b97\u6cd5\u539f\u7406\n21\u5206\u949fMySQL\u5165\u95e8\u6559\u7a0b\n\n\u8fd4\u56de\u76ee\u5f55\n\u7ba1\u7406\u548c\u76d1\u63a7\n\nELKstack \u4e2d\u6587\u6307\u5357\nMastering Elasticsearch(\u4e2d\u6587\u7248)\nElasticSearch \u6743\u5a01\u6307\u5357\nElasticsearch \u6743\u5a01\u6307\u5357\uff08\u4e2d\u6587\u7248\uff09\nLogstash \u6700\u4f73\u5b9e\u8df5\nPuppet 2.7 Cookbook \u4e2d\u6587\u7248\n\n\u8fd4\u56de\u76ee\u5f55\n\u9879\u76ee\u76f8\u5173\n\n\u6301\u7eed\u96c6\u6210\uff08\u7b2c\u4e8c\u7248\uff09 (\u8bd1\u8a00\u7f51)\n\u8ba9\u5f00\u53d1\u81ea\u52a8\u5316\u7cfb\u5217\u4e13\u680f\n\u8ffd\u6c42\u4ee3\u7801\u8d28\u91cf\nselenium \u4e2d\u6587\u6587\u6863\nSelenium Webdriver \u7b80\u6613\u6559\u7a0b\nJoel\u8c08\u8f6f\u4ef6\n\u7d04\u8033\u8ac7\u8edf\u9ad4(Joel on Software)\nGradle 2 \u7528\u6237\u6307\u5357\nGradle \u4e2d\u6587\u4f7f\u7528\u6587\u6863\n\u7f16\u7801\u89c4\u8303\n\u5f00\u6e90\u8f6f\u4ef6\u67b6\u6784\nGNU make \u6307\u5357\nGNU make \u4e2d\u6587\u624b\u518c\nThe Twelve-Factor App\n\n\u8fd4\u56de\u76ee\u5f55\n\u8bbe\u8ba1\u6a21\u5f0f\n\n\u56fe\u8bf4\u8bbe\u8ba1\u6a21\u5f0f\n\u53f2\u4e0a\u6700\u5168\u8bbe\u8ba1\u6a21\u5f0f\u5bfc\u5b66\u76ee\u5f55\ndesign pattern \u5305\u6559\u4e0d\u5305\u4f1a\n\u8bbe\u8ba1\u6a21\u5f0f Java \u7248\n\n\u8fd4\u56de\u76ee\u5f55\nWeb\n\n\u5173\u4e8e\u6d4f\u89c8\u5668\u548c\u7f51\u7edc\u7684 20 \u9879\u987b\u77e5\n\u6d4f\u89c8\u5668\u5f00\u53d1\u5de5\u5177\u7684\u79d8\u5bc6\nChrome \u5f00\u53d1\u8005\u5de5\u5177\u4e2d\u6587\u624b\u518c\nChrome\u6269\u5c55\u5f00\u53d1\u6587\u6863\nGrunt\u4e2d\u6587\u6587\u6863\ngulp\u4e2d\u6587\u6587\u6863\nGulp \u5165\u95e8\u6307\u5357\n\u79fb\u52a8Web\u524d\u7aef\u77e5\u8bc6\u5e93\n\u6b63\u5219\u8868\u8fbe\u5f0f30\u5206\u949f\u5165\u95e8\u6559\u7a0b\n\u524d\u7aef\u5f00\u53d1\u4f53\u7cfb\u5efa\u8bbe\u65e5\u8bb0\n\u79fb\u52a8\u524d\u7aef\u5f00\u53d1\u6536\u85cf\u5939\nJSON\u98ce\u683c\u6307\u5357\nHTTP \u63a5\u53e3\u8bbe\u8ba1\u6307\u5317\n\u524d\u7aef\u8d44\u6e90\u5206\u4eab\uff08\u4e00\uff09\n\u524d\u7aef\u8d44\u6e90\u5206\u4eab\uff08\u4e8c\uff09\n\u524d\u7aef\u4ee3\u7801\u89c4\u8303 \u53ca \u6700\u4f73\u5b9e\u8df5\n\u524d\u7aef\u5f00\u53d1\u8005\u624b\u518c\n\u524d\u7aef\u5de5\u7a0b\u5e08\u624b\u518c\nw3school\u6559\u7a0b\u6574\u7406\nWireshark\u7528\u6237\u624b\u518c\n\u4e00\u7ad9\u5f0f\u5b66\u4e60Wireshark\nHTTP \u4e0b\u5348\u8336\nHTTP/2.0 \u4e2d\u6587\u7ffb\u8bd1\nRFC 7540 - HTTP/2 \u4e2d\u6587\u7ffb\u8bd1\u7248\nhttp2\u8bb2\u89e3\n3 Web Designs in 3 Weeks\n\u7ad9\u70b9\u53ef\u9760\u6027\u5de5\u7a0b\n\n\u8fd4\u56de\u76ee\u5f55\n\u5927\u6570\u636e\n\n\u5927\u6570\u636e/\u6570\u636e\u6316\u6398/\u63a8\u8350\u7cfb\u7edf/\u673a\u5668\u5b66\u4e60\u76f8\u5173\u8d44\u6e90\n\u9762\u5411\u7a0b\u5e8f\u5458\u7684\u6570\u636e\u6316\u6398\u6307\u5357\n\u5927\u578b\u96c6\u7fa4\u4e0a\u7684\u5feb\u901f\u548c\u901a\u7528\u6570\u636e\u5904\u7406\u67b6\u6784\n\u6570\u636e\u6316\u6398\u4e2d\u7ecf\u5178\u7684\u7b97\u6cd5\u5b9e\u73b0\u548c\u8be6\u7ec6\u7684\u6ce8\u91ca\nSpark \u7f16\u7a0b\u6307\u5357\u7b80\u4f53\u4e2d\u6587\u7248\n\n\u8fd4\u56de\u76ee\u5f55\n\u7f16\u7a0b\u827a\u672f\n\n\u7a0b\u5e8f\u5458\u7f16\u7a0b\u827a\u672f\n\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u4e86\u89e3\u7684\u5185\u5b58\u77e5\u8bc6(\u8bd1)\u3010\u7b2c\u4e00\u90e8\u5206\u3011\n\u53d6\u60a6\u7684\u5de5\u5e8f\uff1a\u5982\u4f55\u7406\u89e3\u6e38\u620f (\u8c46\u74e3\u9605\u8bfb\uff0c\u514d\u8d39\u4e66\u7c4d)\n\n\u8fd4\u56de\u76ee\u5f55\n\u5176\u5b83\n\nOpenWrt\u667a\u80fd\u3001\u81ea\u52a8\u3001\u900f\u660e\u7ffb\u5899\u8def\u7531\u5668\u6559\u7a0b\nSAN \u7ba1\u7406\u5165\u95e8\u7cfb\u5217\nSketch \u4e2d\u6587\u624b\u518c\n\u6df1\u5165\u7406\u89e3\u5e76\u884c\u7f16\u7a0b\n\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b\nGrowth: \u5168\u6808\u589e\u957f\u5de5\u7a0b\u5e08\u6307\u5357\n\n\u8fd4\u56de\u76ee\u5f55\nAndroid\n\nAndroid Design(\u4e2d\u6587\u7248)\nGoogle Material Design \u6b63\u9ad4\u4e2d\u6587\u7248 (\u8bd1\u672c\u4e00 \u8bd1\u672c\u4e8c)\nMaterial Design \u4e2d\u6587\u7248\nGoogle Android\u5b98\u65b9\u57f9\u8bad\u8bfe\u7a0b\u4e2d\u6587\u7248\nAndroid\u5b66\u4e60\u4e4b\u8def\nAndroid\u5f00\u53d1\u6280\u672f\u524d\u7ebf(android-tech-frontier)\nPoint-of-Android Android \u4e00\u4e9b\u91cd\u8981\u77e5\u8bc6\u70b9\u89e3\u6790\u6574\u7406\nAndroid6.0\u65b0\u7279\u6027\u8be6\u89e3\n\n\u8fd4\u56de\u76ee\u5f55\nAPP\n\nApache Cordova \u5f00\u53d1\u6307\u5357\n\n\u8fd4\u56de\u76ee\u5f55\nAWK\n\nawk\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\nawk\u4e2d\u6587\u6307\u5357\n\n\u8fd4\u56de\u76ee\u5f55\nC/C++\n\nC/C++ \u4e2d\u6587\u53c2\u8003\u624b\u518c (\u6b22\u8fce\u5927\u5bb6\u53c2\u4e0e\u5728\u7ebf\u7ffb\u8bd1\u548c\u6821\u5bf9)\nC \u8bed\u8a00\u7f16\u7a0b\u900f\u89c6\nC++ \u5e76\u53d1\u7f16\u7a0b\u6307\u5357\nLinux C\u7f16\u7a0b\u4e00\u7ad9\u5f0f\u5b66\u4e60 (\u5b8b\u52b2\u6749, \u5317\u4eac\u4e9a\u5d4c\u6559\u80b2\u7814\u7a76\u4e2d\u5fc3)\nCGDB\u4e2d\u6587\u624b\u518c\n100\u4e2agdb\u5c0f\u6280\u5de7\n100\u4e2agcc\u5c0f\u6280\u5de7\nZMQ \u6307\u5357\nHow to Think Like a Computer Scientist (\u4e2d\u82f1\u6587\u7248)\n\u8ddf\u6211\u4e00\u8d77\u5199Makefile(PDF)\nGNU make\u4e2d\u6587\u624b\u518c\nGNU make \u6307\u5357\nGoogle C++ \u98ce\u683c\u6307\u5357\nC/C++ Primer (by @andycai)\n\u7b80\u5355\u6613\u61c2\u7684C\u9b54\u6cd5\nC++ FAQ LITE(\u4e2d\u6587\u7248)\nC++ Primer 5th Answers\nC++ \u5e76\u53d1\u7f16\u7a0b(\u57fa\u4e8eC++11)\nQT \u6559\u7a0b\nDevBean\u7684\u300aQt\u5b66\u4e60\u4e4b\u8def2\u300b(Qt5)\nC++ Template \u8fdb\u9636\u6307\u5357\nlibuv\u4e2d\u6587\u6559\u7a0b\nBoost \u5e93\u4e2d\u6587\u6559\u7a0b\n\u7b28\u529e\u6cd5\u5b66C\n\u9ad8\u901f\u4e0a\u624b C++11/14/17\n\n\u8fd4\u56de\u76ee\u5f55\nC#\n\nMSDN C# \u4e2d\u6587\u6587\u6863\n.NET \u7c7b\u5e93\u53c2\u8003\nASP.NET MVC 5 \u5165\u95e8\u6307\u5357\n\u8d85\u5168\u9762\u7684 .NET GDI+ \u56fe\u5f62\u56fe\u50cf\u7f16\u7a0b\u6559\u7a0b\n.NET\u63a7\u4ef6\u5f00\u53d1\u57fa\u7840\n.NET\u5f00\u53d1\u8981\u70b9\u7cbe\u8bb2\uff08\u521d\u7a3f\uff09\n\n\u8fd4\u56de\u76ee\u5f55\nClojure\n\nClojure\u5165\u95e8\u6559\u7a0b\n\n\u8fd4\u56de\u76ee\u5f55\nCSS/HTML\n\n\u5b66\u4e60CSS\u5e03\u5c40\n\u901a\u7528 CSS \u7b14\u8bb0\u3001\u5efa\u8bae\u4e0e\u6307\u5bfc\nCSS\u53c2\u8003\u624b\u518c\nEmmet \u6587\u6863\n\u524d\u7aef\u4ee3\u7801\u89c4\u8303 (\u817e\u8baf AlloyTeam \u56e2\u961f)\nHTML\u548cCSS\u7f16\u7801\u89c4\u8303\nSass Guidelines \u4e2d\u6587\nCSS3 Tutorial \u300aCSS3 \u6559\u7a0b\u300b\nMDN HTML \u4e2d\u6587\u6587\u6863\nMDN CSS \u4e2d\u6587\u6587\u6863\n\n\u8fd4\u56de\u76ee\u5f55\nDart\n\nDart \u8bed\u8a00\u5bfc\u89c8\n\n\u8fd4\u56de\u76ee\u5f55\nElixir\n\nElixir\u7f16\u7a0b\u5165\u95e8\n\n\u8fd4\u56de\u76ee\u5f55\nErlang\n\n21\u5929\u5b66\u901aErlang\n\n\u8fd4\u56de\u76ee\u5f55\nFortran\n\nFortran77\u548c90/95\u7f16\u7a0b\u5165\u95e8\n\n\u8fd4\u56de\u76ee\u5f55\nGo\n\nGo\u7f16\u7a0b\u57fa\u7840\nGo\u5165\u95e8\u6307\u5357\n\u5b66\u4e60Go\u8bed\u8a00\nGo Web \u7f16\u7a0b (\u6b64\u4e66\u5df2\u7ecf\u51fa\u7248\uff0c\u5e0c\u671b\u5f00\u53d1\u8005\u4eec\u53bb\u8d2d\u4e70\uff0c\u652f\u6301\u4f5c\u8005\u7684\u521b\u4f5c)\nGo\u5b9e\u6218\u5f00\u53d1 (\u5f53\u6211\u6536\u5f55\u6b64\u9879\u76ee\u65f6\uff0c\u4f5c\u8005\u5df2\u7ecf\u5199\u5b8c\u7b2c\u4e09\u7ae0\uff0c\u5982\u679c\u8bfb\u5b8c\u524d\u9762\u7ae0\u8282\u89c9\u5f97\u6709\u5e2e\u52a9\uff0c\u53ef\u4ee5\u7ed9\u4f5c\u8005\u6350\u8d60\uff0c\u4ee5\u9f13\u52b1\u4f5c\u8005\u7684\u7ee7\u7eed\u521b\u4f5c)\nNetwork programming with Go \u4e2d\u6587\u7ffb\u8bd1\u7248\u672c\nEffective Go\nGo \u8bed\u8a00\u6807\u51c6\u5e93\nGolang\u6807\u51c6\u5e93\u6587\u6863\nRevel \u6846\u67b6\u624b\u518c\nJava\u7a0b\u5e8f\u5458\u7684Golang\u5165\u95e8\u6307\u5357\nGo\u547d\u4ee4\u6559\u7a0b\nGo\u8bed\u8a00\u535a\u5ba2\u5b9e\u8df5\nGo \u5b98\u65b9\u6587\u6863\u7ffb\u8bd1\n\u6df1\u5165\u89e3\u6790Go\nGo\u8bed\u8a00\u5723\u7ecf(\u4e2d\u6587\u7248) (GitBook)\n\n\u8fd4\u56de\u76ee\u5f55\nGroovy\n\n\u5b9e\u6218 Groovy \u7cfb\u5217\n\n\u8fd4\u56de\u76ee\u5f55\nHaskell\n\nReal World Haskell \u4e2d\u6587\u7248\nHaskell\u8da3\u5b66\u6307\u5357\n\n\u8fd4\u56de\u76ee\u5f55\niOS\n\niOS\u5f00\u53d160\u5206\u949f\u5165\u95e8\niOS7\u4eba\u673a\u754c\u9762\u6307\u5357\nGoogle Objective-C Style Guide \u4e2d\u6587\u7248\niPhone 6 \u5c4f\u5e55\u63ed\u79d8\nApple Watch\u5f00\u53d1\u521d\u63a2\n\u9a6c\u4e0a\u7740\u624b\u5f00\u53d1 iOS \u5e94\u7528\u7a0b\u5e8f\n\u7f51\u6613\u65af\u5766\u798f\u5927\u5b66\u516c\u5f00\u8bfe\uff1aiOS 7\u5e94\u7528\u5f00\u53d1\u5b57\u5e55\u6587\u4ef6\n\n\u8fd4\u56de\u76ee\u5f55\nJava\n\nApache Shiro \u7528\u6237\u6307\u5357\nJersey 2.x \u7528\u6237\u6307\u5357\nSpring Framework 4.x\u53c2\u8003\u6587\u6863\nSpring Boot\u53c2\u8003\u6307\u5357 (\u7ffb\u8bd1\u4e2d)\nMyBatis\u4e2d\u6587\u6587\u6863\nMyBatis Generator \u4e2d\u6587\u6587\u6863\n\u7528jersey\u6784\u5efaREST\u670d\u52a1\nActiviti 5.x \u7528\u6237\u6307\u5357\nGoogle Java\u7f16\u7a0b\u98ce\u683c\u6307\u5357\nNetty 4.x \u7528\u6237\u6307\u5357\nNetty \u5b9e\u6218(\u7cbe\u9ad3)\nREST \u5b9e\u6218\nJava \u7f16\u7801\u89c4\u8303\nApache MINA 2 \u7528\u6237\u6307\u5357\nH2 Database \u6559\u7a0b\nJava Servlet 3.1 \u89c4\u8303\nJSSE \u53c2\u8003\u6307\u5357\nJava\u5f00\u6e90\u5b9e\u73b0\u53ca\u6700\u4f73\u5b9e\u8df5\nJava \u7f16\u7a0b\u8981\u70b9\nThink Java\nJava 8 \u7b80\u660e\u6559\u7a0b\nOn Java 8 \u4e2d\u6587\u7248 (\u7ffb\u8bd1\u4e2d)\n\n\u8fd4\u56de\u76ee\u5f55\nJavaScript\n\n\u73b0\u4ee3 Javascript \u6559\u7a0b\nGoogle JavaScript \u4ee3\u7801\u98ce\u683c\u6307\u5357\nGoogle JSON \u98ce\u683c\u6307\u5357\nAirbnb JavaScript \u89c4\u8303\nJavaScript \u6807\u51c6\u53c2\u8003\u6559\u7a0b\uff08alpha\uff09\nJavascript\u7f16\u7a0b\u6307\u5357 (\u6e90\u7801)\njavascript \u7684 12 \u4e2a\u602a\u7656\nJavaScript \u79d8\u5bc6\u82b1\u56ed\nJavaScript\u6838\u5fc3\u6982\u5ff5\u53ca\u5b9e\u8df5 (PDF) (\u6b64\u4e66\u5df2\u7531\u4eba\u6c11\u90ae\u7535\u51fa\u7248\u793e\u51fa\u7248\u53d1\u884c\uff0c\u4f46\u4f5c\u8005\u4f9d\u7136\u514d\u8d39\u63d0\u4f9bPDF\u7248\u672c\uff0c\u5e0c\u671b\u5f00\u53d1\u8005\u4eec\u53bb\u8d2d\u4e70\uff0c\u652f\u6301\u4f5c\u8005)\n\u300aJavaScript \u6a21\u5f0f\u300b \u201cJavaScript patterns\u201d\u4e2d\u8bd1\u672c\n\u547d\u540d\u51fd\u6570\u8868\u8fbe\u5f0f\u63a2\u79d8  (\u6ce8:\u539f\u6587\u7531\u4e3a\u4e4b\u6f2b\u7b14\u7ffb\u8bd1\uff0c\u539f\u59cb\u5730\u5740\u65e0\u6cd5\u6253\u5f00\uff0c\u6240\u4ee5\u6b64\u5904\u5730\u5740\u4e3a\u6211\u535a\u5ba2\u4e0a\u7684\u5907\u4efd)\n\u5b66\u7528 JavaScript \u8bbe\u8ba1\u6a21\u5f0f (\u5f00\u6e90\u4e2d\u56fd)\n\u6df1\u5165\u7406\u89e3JavaScript\u7cfb\u5217\nECMAScript 5.1 \u4e2d\u6587\u7248\nECMAScript 6 \u5165\u95e8 (\u4f5c\u8005\uff1a\u962e\u4e00\u5cf0)\nJavaScript Promise\u8ff7\u4f60\u4e66\nYou-Dont-Know-JS (\u6df1\u5165JavaScript\u8bed\u8a00\u6838\u5fc3\u673a\u5236\u7684\u7cfb\u5217\u56fe\u4e66)\nJavaScript \u6559\u7a0b \u5ed6\u96ea\u5cf0\nMDN JavaScript \u4e2d\u6587\u6587\u6863\njQuery\n\njQuery \u89e3\u6784\n\u7b80\u5355\u6613\u61c2\u7684JQuery\u9b54\u6cd5\nHow to write jQuery plugin\nYou Don't Need jQuery\n\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u7c7bjQuery\uff1f\n\n\nNode.js\n\nNode\u5165\u95e8\n\u4e03\u5929\u5b66\u4f1aNodeJS\nNodejs Wiki Book (\u7e41\u4f53\u4e2d\u6587)\nexpress.js \u4e2d\u6587\u6587\u6863\nkoa \u4e2d\u6587\u6587\u6863\n\u4e00\u8d77\u5b66koa\n\u4f7f\u7528 Express + MongoDB \u642d\u5efa\u591a\u4eba\u535a\u5ba2\nExpress\u6846\u67b6\nNode.js \u5305\u6559\u4e0d\u5305\u4f1a\nLearn You The Node.js For Much Win! (\u4e2d\u6587\u7248)\nNode debug \u4e09\u6cd5\u4e09\u4f8b\nnodejs\u4e2d\u6587\u6587\u6863\norm2 \u4e2d\u6587\u6587\u6863\n\u4e00\u8d77\u5b66 Node.js\n\n\nunderscore.js\n\nUnderscore.js\u4e2d\u6587\u6587\u6863\n\n\nbackbone.js\n\nbackbone.js\u4e2d\u6587\u6587\u6863\nbackbone.js\u5165\u95e8\u6559\u7a0b (PDF)\nBackbone.js\u5165\u95e8\u6559\u7a0b\u7b2c\u4e8c\u7248\nDeveloping Backbone.js Applications(\u4e2d\u6587\u7248)\n\n\nAngularJS\n\nAngularJS\u6700\u4f73\u5b9e\u8df5\u548c\u98ce\u683c\u6307\u5357\nAngularJS\u4e2d\u8bd1\u672c\nAngularJS\u5165\u95e8\u6559\u7a0b\n\u6784\u5efa\u81ea\u5df1\u7684AngularJS\n\u5728Windows\u73af\u5883\u4e0b\u7528Yeoman\u6784\u5efaAngularJS\u9879\u76ee\n\n\nZepto.js\n\nZepto.js \u4e2d\u6587\u6587\u6863\n\n\nSea.js\n\nHello Sea.js\n\n\nReact.js\n\nReact \u5b66\u4e60\u4e4b\u9053\nReact.js \u5c0f\u4e66\nReact.js \u4e2d\u6587\u6587\u6863\nReact webpack-cookbook\nReact \u5165\u95e8\u6559\u7a0b\nReact Native \u4e2d\u6587\u6587\u6863(\u542b\u6700\u65b0Android\u5185\u5bb9)\nLearn React & Webpack by building the Hacker News front page\n\n\nimpress.js\n\nimpress.js\u7684\u4e2d\u6587\u6559\u7a0b\n\n\nCoffeeScript\n\nCoffeeScript Cookbook\nThe Little Book on CoffeeScript\u4e2d\u6587\u7248\nCoffeeScript \u7f16\u7801\u98ce\u683c\u6307\u5357\n\n\nTypeScipt\n\nTypeScript Handbook\n\n\nExtJS\n\nExt4.1.0 \u4e2d\u6587\u6587\u6863\n\n\nMeteor\n\nDiscover Meteor\nMeteor \u4e2d\u6587\u6587\u6863\nAngular-Meteor \u4e2d\u6587\u6559\u7a0b\n\n\nChrome\u6269\u5c55\u53ca\u5e94\u7528\u5f00\u53d1\n\n\u8fd4\u56de\u76ee\u5f55\nKotlin\n\ndeveloping-android-apps-with-kotlin\n\n\u8fd4\u56de\u76ee\u5f55\nLaTeX\n\n\u4e00\u4efd\u5176\u5b9e\u5f88\u77ed\u7684 LaTeX \u5165\u95e8\u6587\u6863\n\u4e00\u4efd\u4e0d\u592a\u7b80\u77ed\u7684 LATEX 2\u03b5 \u4ecb\u7ecd \uff08PDF\u7248\uff09\n\n\u8fd4\u56de\u76ee\u5f55\nLISP\n\nCommon Lisp\n\nANSI Common Lisp \u4e2d\u6587\u7ffb\u8b6f\u7248\nOn Lisp \u4e2d\u6587\u7ffb\u8bd1\u7248\u672c\n\n\nScheme\n\nYet Another Scheme Tutorial Scheme\u5165\u95e8\u6559\u7a0b\nScheme\u8bed\u8a00\u7b80\u660e\u6559\u7a0b\nRacket\n\nRacket book\n\n\n\n\n\n\u8fd4\u56de\u76ee\u5f55\nLua\n\nLua\u7f16\u7a0b\u5165\u95e8\nLua 5.1 \u53c2\u8003\u624b\u518c \u4e2d\u6587\u7ffb\u8bd1\nLua 5.3 \u53c2\u8003\u624b\u518c \u4e2d\u6587\u7ffb\u8bd1\nLua\u6e90\u7801\u6b23\u8d4f\n\n\u8fd4\u56de\u76ee\u5f55\nOCaml\n\nReal World OCaml\n\n\u8fd4\u56de\u76ee\u5f55\nPerl\n\nModern Perl \u4e2d\u6587\u7248\nPerl \u7a0b\u5e8f\u5458\u5e94\u8be5\u77e5\u9053\u7684\u4e8b\n\n\u8fd4\u56de\u76ee\u5f55\nPHP\n\nPHP \u5b98\u65b9\u624b\u518c\nPHP\u8c03\u8bd5\u6280\u672f\u624b\u518c(PDF)\nPHP\u4e4b\u9053\uff1aphp-the-right-way (@wulijun\u7248 PHPHub\u7248)\nPHP \u6700\u4f73\u5b9e\u8df5\nPHP \u5f00\u53d1\u8005\u5b9e\u8df5\n\u6df1\u5165\u7406\u89e3PHP\u5185\u6838\nPHP\u6269\u5c55\u5f00\u53d1\u53ca\u5185\u6838\u5e94\u7528\nLaravel5.1 \u4e2d\u6587\u6587\u6863\nLaravel 5.1 LTS \u901f\u67e5\u8868\nSymfony2 Cookbook \u4e2d\u6587\u7248(\u7248\u672c 2.7.0 LTS)\nSymfony2\u4e2d\u6587\u6587\u6863 (\u672a\u8bd1\u5b8c)\nYiiBook\u51e0\u672cYii\u6846\u67b6\u7684\u5728\u7ebf\u6559\u7a0b\n\u6df1\u5165\u7406\u89e3 Yii 2.0\nYii \u6846\u67b6\u4e2d\u6587\u6587\u6a94\n\u7b80\u5355\u6613\u61c2\u7684PHP\u9b54\u6cd5\nswoole\u6587\u6863\u53ca\u5165\u95e8\u6559\u7a0b\nComposer \u4e2d\u6587\u7f51\nSlim \u4e2d\u6587\u6587\u6863\nLumen \u4e2d\u6587\u6587\u6863\nPHPUnit \u4e2d\u6587\u6587\u6863\n\n\u8fd4\u56de\u76ee\u5f55\nProlog\n\n\u7b28\u529e\u6cd5\u5b66Prolog\n\n\u8fd4\u56de\u76ee\u5f55\nPython\n\n\u5ed6\u96ea\u5cf0 Python 2.7 \u4e2d\u6587\u6559\u7a0b\n\u5ed6\u96ea\u5cf0 Python 3 \u4e2d\u6587\u6559\u7a0b\n\u7b80\u660ePython\u6559\u7a0b\n\u7b80\u660e Python \u6559\u7a0b(Python 3)\n\u96f6\u57fa\u7840\u5b66 Python \u7b2c\u4e00\u7248\n\u96f6\u57fa\u7840\u5b66 Python \u7b2c\u4e8c\u7248\n\u53ef\u7231\u7684 Python\nPython 2.7 \u5b98\u65b9\u6559\u7a0b\u4e2d\u6587\u7248\nPython 3.3 \u5b98\u65b9\u6559\u7a0b\u4e2d\u6587\u7248\nPython Cookbook \u4e2d\u6587\u7248\nPython3 Cookbook \u4e2d\u6587\u7248\n\u6df1\u5165 Python\n\u6df1\u5165 Python 3\nPEP8 Python\u4ee3\u7801\u98ce\u683c\u89c4\u8303\nGoogle Python \u98ce\u683c\u6307\u5357 \u4e2d\u6587\u7248\nPython\u5165\u95e8\u6559\u7a0b (PDF)\n\u7b28\u529e\u6cd5\u5b66 Python (PDF EPUB)\nPython\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u6587\u7248 \uff08\u611f\u8c22\u9648\u6d9b\u540c\u5b66\u7684\u7ffb\u8bd1\uff0c\u4e5f\u8c22\u8c22 @shwley \u8054\u7cfb\u4e86\u4f5c\u8005\uff09\nPython \u7ed8\u56fe\u5e93 matplotlib \u5b98\u65b9\u6307\u5357\u4e2d\u6587\u7ffb\u8bd1\nScrapy 0.25 \u6587\u6863\nThinkPython\nThinkPython 2ed\nPython\u5feb\u901f\u6559\u7a0b\nPython \u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u6307\u5357\npython\u521d\u7ea7\u6559\u7a0b\uff1a\u5165\u95e8\u8be6\u89e3\nTwisted \u4e0e\u5f02\u6b65\u7f16\u7a0b\u5165\u95e8\nTextGrocery \u4e2d\u6587 API ( \u57fa\u4e8esvm\u7b97\u6cd5\u7684\u4e00\u4e2a\u77ed\u6587\u672c\u5206\u7c7b Python \u5e93 )\nRequests: HTTP for Humans\nPillow \u4e2d\u6587\u6587\u6863\nPyMOTW \u4e2d\u6587\u7248\nPython \u5b98\u65b9\u6587\u6863\u4e2d\u6587\u7248\nFabric \u4e2d\u6587\u6587\u6863\nBeautiful Soup 4.2.0 \u4e2d\u6587\u6587\u6863\nPython \u4e2d\u7684 Socket \u7f16\u7a0b\n\u7528Python\u505a\u79d1\u5b66\u8ba1\u7b97\nSphinx \u4e2d\u6587\u6587\u6863\n\u7cbe\u901a Python \u8bbe\u8ba1\u6a21\u5f0f\npython \u5b89\u5168\u7f16\u7a0b\u6559\u7a0b\n\u7a0b\u5e8f\u8bbe\u8ba1\u601d\u60f3\u4e0e\u65b9\u6cd5\n\u77e5\u4e4e\u5468\u520a\u00b7\u7f16\u7a0b\u5c0f\u767d\u5b66Python\nScipy \u8bb2\u4e49\nPython \u5b66\u4e60\u7b14\u8bb0 \u57fa\u7840\u7bc7\nPython \u5b66\u4e60\u7b14\u8bb0 \u6a21\u5757\u7bc7\nPython \u6807\u51c6\u5e93 \u4e2d\u6587\u7248\nPython\u8fdb\u9636\nPython \u6838\u5fc3\u7f16\u7a0b \u7b2c\u4e8c\u7248 CPyUG\u8bd1\nPython\u6700\u4f73\u5b9e\u8df5\u6307\u5357\nPython \u7cbe\u8981\u6559\u7a0b\nPython \u91cf\u5316\u4ea4\u6613\u6559\u7a0b\nDjango\n\nDjango 1.5 \u6587\u6863\u4e2d\u6587\u7248 \u6b63\u5728\u7ffb\u8bd1\u4e2d\nDjango 2.0 \u6587\u6863\u4e2d\u6587\u7248\nDjango \u6700\u4f73\u5b9e\u8df5\nDjango 2.1 \u642d\u5efa\u4e2a\u4eba\u535a\u5ba2\u6559\u7a0b ( \u7f16\u5199\u4e2d )\nDjango\u642d\u5efa\u7b80\u6613\u535a\u5ba2\u6559\u7a0b\nThe Django Book \u4e2d\u6587\u7248\nDjango \u8bbe\u8ba1\u6a21\u5f0f\u4e0e\u6700\u4f73\u5b9e\u8df5\nDjango \u7f51\u7ad9\u5f00\u53d1 Cookbook\nDjango Girls \u5b78\u7fd2\u6307\u5357\n\n\nFlask\n\nFlask \u6587\u6863\u4e2d\u6587\u7248\nJinja2 \u6587\u6863\u4e2d\u6587\u7248\nWerkzeug \u6587\u6863\u4e2d\u6587\u7248\nFlask\u4e4b\u65c5\nFlask \u6269\u5c55\u6587\u6863\u6c47\u603b\nFlask \u5927\u578b\u6559\u7a0b\nSQLAlchemy \u4e2d\u6587\u6587\u6863\n\n\nweb.py\n\nweb.py 0.3 \u65b0\u624b\u6307\u5357\nWeb.py Cookbook \u7b80\u4f53\u4e2d\u6587\u7248\n\n\nTornado\n\nIntroduction to Tornado \u4e2d\u6587\u7ffb\u8bd1\nTornado\u6e90\u7801\u89e3\u6790\nTornado 4.3 \u6587\u6863\u4e2d\u6587\u7248\n\n\n\n\u8fd4\u56de\u76ee\u5f55\nR\n\nR\u8bed\u8a00\u5fcd\u8005\u79d8\u7b08\n\n\u8fd4\u56de\u76ee\u5f55\nRuby\n\nRuby \u98ce\u683c\u6307\u5357\nRails \u98ce\u683c\u6307\u5357\n\u7b28\u65b9\u6cd5\u5b78 Ruby\nRuby on Rails \u6307\u5357\nRuby on Rails \u5be6\u6230\u8056\u7d93\nRuby on Rails Tutorial \u539f\u4e66\u7b2c 3 \u7248 (\u672c\u4e66\u7f51\u9875\u7248\u514d\u8d39\u63d0\u4f9b\uff0c\u7535\u5b50\u7248\u4ee5 PDF\u3001EPub \u548c Mobi \u683c\u5f0f\u63d0\u4f9b\u8d2d\u4e70\uff0c\u4ec5\u552e 9.9 \u7f8e\u5143)\nRails \u5b9e\u8df5\nRails 5 \u5f00\u53d1\u8fdb\u9636(Beta)\nRails 102\n\u7f16\u5199Ruby\u7684C\u62d3\u5c55\nRuby \u6e90\u7801\u89e3\u8bfb\nRuby\u4e2d\u7684\u5143\u7f16\u7a0b\n\n\u8fd4\u56de\u76ee\u5f55\nRust\n\nRust\u7f16\u7a0b\u8bed\u8a00 \u4e2d\u6587\u7ffb\u8bd1\nRust Primer\n\n\u8fd4\u56de\u76ee\u5f55\nScala\n\nScala\u8bfe\u5802 (Twitter\u7684Scala\u4e2d\u6587\u6559\u7a0b)\nEffective Scala(Twitter\u7684Scala\u6700\u4f73\u5b9e\u8df5\u7684\u4e2d\u6587\u7ffb\u8bd1)\nScala\u6307\u5357\n\n\u8fd4\u56de\u76ee\u5f55\nShell\n\nShell\u811a\u672c\u7f16\u7a0b30\u5206\u949f\u5165\u95e8\nBash\u811a\u672c15\u5206\u949f\u8fdb\u9636\u6559\u7a0b\nLinux\u5de5\u5177\u5feb\u901f\u6559\u7a0b\nshell\u5341\u4e09\u95ee\nShell\u7f16\u7a0b\u8303\u4f8b\n\n\u8fd4\u56de\u76ee\u5f55\nSwift\n\nThe Swift Programming Language \u4e2d\u6587\u7248\nSwift \u8bed\u8a00\u6307\u5357\nStanford \u516c\u5f00\u8bfe\uff0cDeveloping iOS 8 Apps with Swift \u5b57\u5e55\u7ffb\u8bd1\u6587\u4ef6\nC4iOS - COSMOS\n\n\u8fd4\u56de\u76ee\u5f55\n\u8bfb\u4e66\u7b14\u8bb0\u53ca\u5176\u5b83\n\n\u7f16\u8bd1\u539f\u7406\uff08\u7d2b\u9f99\u4e66\uff09\u4e2d\u6587\u7b2c2\u7248\u4e60\u9898\u7b54\u6848\n\u628a\u300a\u7f16\u7a0b\u73e0\u7391\u300b\u8bfb\u8584\nEffective C++\u8bfb\u4e66\u7b14\u8bb0\nGolang \u5b66\u4e60\u7b14\u8bb0\u3001Python \u5b66\u4e60\u7b14\u8bb0\u3001C \u5b66\u4e60\u7b14\u8bb0 (PDF)\nJsoup \u5b66\u4e60\u7b14\u8bb0\n\u5b66\u4e60\u7b14\u8bb0: Vim\u3001Python\u3001memcached\n\u56fe\u7075\u5f00\u653e\u4e66\u7ffb\u8bd1\u8ba1\u5212--C++\u3001Python\u3001Java\u7b49\n\u8482\u59c6\u00b7\u5965\u83b1\u5229\u968f\u7b14 \uff08\u7531\u8bd1\u8a00\u7f51\u7ffb\u8bd1\uff0c\u7535\u5b50\u7248\u514d\u8d39\uff09\nSICP \u89e3\u9898\u96c6\n\u7cbe\u5f69\u535a\u5ba2\u96c6\u5408\n\u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317\nStandard C \u8bed\u8a00\u6807\u51c6\u51fd\u6570\u5e93\u901f\u67e5 (Cheat Sheet)\nGit Cheatsheet Chs\nGitBook\u7b80\u660e\u6559\u7a0b\nJavaScript\u8bed\u8a00\u7cbe\u7cb9\n\u5236\u9020\u5f00\u6e90\u8f6f\u4ef6\n\u63d0\u95ee\u7684\u667a\u6167\nMarkdown \u5165\u95e8\u53c2\u8003\nAsciiDoc\u7b80\u660e\u6307\u5357\n\u80cc\u5305\u95ee\u9898\u4e5d\u8bb2\n\u8001\u9f50\u7684\u6280\u672f\u8d44\u6599\n\u524d\u7aef\u6280\u80fd\u6c47\u603b\n\u501f\u52a9\u5f00\u6e90\u9879\u76ee\uff0c\u5b66\u4e60\u8f6f\u4ef6\u5f00\u53d1\n\u524d\u7aef\u5de5\u4f5c\u9762\u8bd5\u95ee\u9898\nleetcode/lintcode\u9898\u89e3/\u7b97\u6cd5\u5b66\u4e60\u7b14\u8bb0\n\u524d\u7aef\u5f00\u53d1\u7b14\u8bb0\u672c\nLeetCode\u9898\u89e3\n\u300a\u4e0d\u53ef\u66ff\u4ee3\u7684\u56e2\u961f\u9886\u8896\u57f9\u517b\u8ba1\u5212\u300b\n\n\u8fd4\u56de\u76ee\u5f55\n\u6d4b\u8bd5\u76f8\u5173\n\n"}, {"repo": "tensorflow/models", "language": "Python", "readme": "\nTensorFlow Models\nThis repository contains a number of different models implemented in TensorFlow:\nThe official models are a collection of example models that use TensorFlow's high-level APIs. They are intended to be well-maintained, tested, and kept up to date with the latest stable TensorFlow API. They should also be reasonably optimized for fast performance while still being easy to read. We especially recommend newer TensorFlow users to start here.\nThe research models are a large collection of models implemented in TensorFlow by researchers. They are not officially supported or available in release branches; it is up to the individual researchers to maintain the models and/or provide support on issues and pull requests.\nThe samples folder contains code snippets and smaller models that demonstrate features of TensorFlow, including code presented in various blog posts.\nThe tutorials folder is a collection of models described in the TensorFlow tutorials.\nContribution guidelines\nIf you want to contribute to models, be sure to review the contribution guidelines.\nLicense\nApache License 2.0\n\n"}, {"repo": "angular/angular.js", "language": "JavaScript", "readme": "\nAngularJS \nAngularJS lets you write client-side web applications as if you had a smarter browser.  It lets you\nuse good old HTML (or HAML, Jade/Pug and friends!) as your template language and lets you extend HTML\u2019s\nsyntax to express your application\u2019s components clearly and succinctly.  It automatically\nsynchronizes data from your UI (view) with your JavaScript objects (model) through 2-way data\nbinding. To help you structure your application better and make it easy to test, AngularJS teaches\nthe browser how to do dependency injection and inversion of control.\nIt also helps with server-side communication, taming async callbacks with promises and deferred objects,\nand it makes client-side navigation and deep linking with hashbang urls or HTML5 pushState a\npiece of cake. Best of all? It makes development fun!\n\nOn July 1, 2018 AngularJS entered a 3 year Long Term Support period: Find out more\nLooking for the new Angular? Go here: https://github.com/angular/angular\n\n\nWeb site: https://angularjs.org\nTutorial: https://docs.angularjs.org/tutorial\nAPI Docs: https://docs.angularjs.org/api\nDeveloper Guide: https://docs.angularjs.org/guide\nContribution guidelines: CONTRIBUTING.md\nCore Development: DEVELOPERS.md\nDashboard: https://dashboard.angularjs.org\n\nDocumentation\nGo to https://docs.angularjs.org\nContribute\nWe've set up a separate document for our\ncontribution guidelines.\nDevelop\nWe've set up a separate document for\ndevelopers.\n\nWhat to use AngularJS for and when to use it\nAngularJS is the next generation framework where each component is designed to work with every other\ncomponent in an interconnected way like a well-oiled machine. AngularJS is JavaScript MVC made easy\nand done right. (Well it is not really MVC, read on, to understand what this means.)\nMVC, no, MV* done the right way!\nMVC, short for Model-View-Controller, is a design pattern, i.e. how the code should be organized and\nhow the different parts of an application separated for proper readability and debugging. Model is\nthe data and the database. View is the user interface and what the user sees. Controller is the main\nlink between Model and View. These are the three pillars of major programming frameworks present on\nthe market today. On the other hand AngularJS works on MV*, short for Model-View-Whatever. The\nWhatever is AngularJS's way of telling that you may create any kind of linking between the Model\nand the View here.\nUnlike other frameworks in any programming language, where MVC, the three separate components, each\none has to be written and then connected by the programmer, AngularJS helps the programmer by asking\nhim/her to just create these and everything else will be taken care of by AngularJS.\nInterconnection with HTML at the root level\nAngularJS uses HTML to define the user's interface. AngularJS also enables the programmer to write\nnew HTML tags (AngularJS Directives) and increase the readability and understandability of the HTML\ncode. Directives are AngularJS\u2019s way of bringing additional functionality to HTML. Directives\nachieve this by enabling us to invent our own HTML elements. This also helps in making the code DRY\n(Don't Repeat Yourself), which means once created, a new directive can be used anywhere within the\napplication.\nHTML is also used to determine the wiring of the app. Special attributes in the HTML determine where\nto load the app, which components or controllers to use for each element, etc. We specify \"what\"\ngets loaded, but not \"how\". This declarative approach greatly simplifies app development in a sort\nof WYSIWYG way. Rather than spending time on how the program flows and orchestrating the various\nmoving parts, we simply define what we want and AngularJS will take care of the dependencies.\nData Handling made simple\nData and Data Models in AngularJS are plain JavaScript objects and one can add and change properties\ndirectly on it and loop over objects and arrays at will.\nTwo-way Data Binding\nOne of AngularJS's strongest features. Two-way Data Binding means that if something changes in the\nModel, the change gets reflected in the View instantaneously, and the same happens the other way\naround. This is also referred to as Reactive Programming, i.e. suppose a = b + c is being\nprogrammed and after this, if the value of b and/or c is changed then the value of a will be\nautomatically updated to reflect the change. AngularJS uses its \"scopes\" as a glue between the Model\nand View and makes these updates in one available for the other.\nLess Written Code and Easily Maintainable Code\nEverything in AngularJS is created to enable the programmer to end up writing less code that is\neasily maintainable and readable by any other new person on the team. Believe it or not, one can\nwrite a complete working two-way data binded application in less than 10 lines of code. Try and see\nfor yourself!\nTesting Ready\nAngularJS has Dependency Injection, i.e. it takes care of providing all the necessary dependencies\nto its controllers and services whenever required. This helps in making the AngularJS code ready for\nunit testing by making use of mock dependencies created and injected. This makes AngularJS more\nmodular and easily testable thus in turn helping a team create more robust applications.\n\n"}, {"repo": "ytdl-org/youtube-dl", "language": "Python", "readme": "\n\nyoutube-dl - download videos from youtube.com or other video platforms\n\nINSTALLATION\nDESCRIPTION\nOPTIONS\nCONFIGURATION\nOUTPUT TEMPLATE\nFORMAT SELECTION\nVIDEO SELECTION\nFAQ\nDEVELOPER INSTRUCTIONS\nEMBEDDING YOUTUBE-DL\nBUGS\nCOPYRIGHT\n\nINSTALLATION\nTo install it right away for all UNIX users (Linux, macOS, etc.), type:\nsudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl\nsudo chmod a+rx /usr/local/bin/youtube-dl\n\nIf you do not have curl, you can alternatively use a recent wget:\nsudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl\nsudo chmod a+rx /usr/local/bin/youtube-dl\n\nWindows users can download an .exe file and place it in any location on their PATH except for %SYSTEMROOT%\\System32 (e.g. do not put in C:\\Windows\\System32).\nYou can also use pip:\nsudo -H pip install --upgrade youtube-dl\n\nThis command will update youtube-dl if you have already installed it. See the pypi page for more information.\nmacOS users can install youtube-dl with Homebrew:\nbrew install youtube-dl\n\nOr with MacPorts:\nsudo port install youtube-dl\n\nAlternatively, refer to the developer instructions for how to check out and work with the git repository. For further options, including PGP signatures, see the youtube-dl Download Page.\nDESCRIPTION\nyoutube-dl is a command-line program to download videos from YouTube.com and a few more sites. It requires the Python interpreter, version 2.6, 2.7, or 3.2+, and it is not platform specific. It should work on your Unix box, on Windows or on macOS. It is released to the public domain, which means you can modify it, redistribute it or use it however you like.\nyoutube-dl [OPTIONS] URL [URL...]\n\nOPTIONS\n-h, --help                       Print this help text and exit\n--version                        Print program version and exit\n-U, --update                     Update this program to latest version. Make\n                                 sure that you have sufficient permissions\n                                 (run with sudo if needed)\n-i, --ignore-errors              Continue on download errors, for example to\n                                 skip unavailable videos in a playlist\n--abort-on-error                 Abort downloading of further videos (in the\n                                 playlist or the command line) if an error\n                                 occurs\n--dump-user-agent                Display the current browser identification\n--list-extractors                List all supported extractors\n--extractor-descriptions         Output descriptions of all supported\n                                 extractors\n--force-generic-extractor        Force extraction to use the generic\n                                 extractor\n--default-search PREFIX          Use this prefix for unqualified URLs. For\n                                 example \"gvsearch2:\" downloads two videos\n                                 from google videos for youtube-dl \"large\n                                 apple\". Use the value \"auto\" to let\n                                 youtube-dl guess (\"auto_warning\" to emit a\n                                 warning when guessing). \"error\" just throws\n                                 an error. The default value \"fixup_error\"\n                                 repairs broken URLs, but emits an error if\n                                 this is not possible instead of searching.\n--ignore-config                  Do not read configuration files. When given\n                                 in the global configuration file\n                                 /etc/youtube-dl.conf: Do not read the user\n                                 configuration in ~/.config/youtube-\n                                 dl/config (%APPDATA%/youtube-dl/config.txt\n                                 on Windows)\n--config-location PATH           Location of the configuration file; either\n                                 the path to the config or its containing\n                                 directory.\n--flat-playlist                  Do not extract the videos of a playlist,\n                                 only list them.\n--mark-watched                   Mark videos watched (YouTube only)\n--no-mark-watched                Do not mark videos watched (YouTube only)\n--no-color                       Do not emit color codes in output\n\nNetwork Options:\n--proxy URL                      Use the specified HTTP/HTTPS/SOCKS proxy.\n                                 To enable SOCKS proxy, specify a proper\n                                 scheme. For example\n                                 socks5://127.0.0.1:1080/. Pass in an empty\n                                 string (--proxy \"\") for direct connection\n--socket-timeout SECONDS         Time to wait before giving up, in seconds\n--source-address IP              Client-side IP address to bind to\n-4, --force-ipv4                 Make all connections via IPv4\n-6, --force-ipv6                 Make all connections via IPv6\n\nGeo Restriction:\n--geo-verification-proxy URL     Use this proxy to verify the IP address for\n                                 some geo-restricted sites. The default\n                                 proxy specified by --proxy (or none, if the\n                                 option is not present) is used for the\n                                 actual downloading.\n--geo-bypass                     Bypass geographic restriction via faking\n                                 X-Forwarded-For HTTP header\n--no-geo-bypass                  Do not bypass geographic restriction via\n                                 faking X-Forwarded-For HTTP header\n--geo-bypass-country CODE        Force bypass geographic restriction with\n                                 explicitly provided two-letter ISO 3166-2\n                                 country code\n--geo-bypass-ip-block IP_BLOCK   Force bypass geographic restriction with\n                                 explicitly provided IP block in CIDR\n                                 notation\n\nVideo Selection:\n--playlist-start NUMBER          Playlist video to start at (default is 1)\n--playlist-end NUMBER            Playlist video to end at (default is last)\n--playlist-items ITEM_SPEC       Playlist video items to download. Specify\n                                 indices of the videos in the playlist\n                                 separated by commas like: \"--playlist-items\n                                 1,2,5,8\" if you want to download videos\n                                 indexed 1, 2, 5, 8 in the playlist. You can\n                                 specify range: \"--playlist-items\n                                 1-3,7,10-13\", it will download the videos\n                                 at index 1, 2, 3, 7, 10, 11, 12 and 13.\n--match-title REGEX              Download only matching titles (regex or\n                                 caseless sub-string)\n--reject-title REGEX             Skip download for matching titles (regex or\n                                 caseless sub-string)\n--max-downloads NUMBER           Abort after downloading NUMBER files\n--min-filesize SIZE              Do not download any videos smaller than\n                                 SIZE (e.g. 50k or 44.6m)\n--max-filesize SIZE              Do not download any videos larger than SIZE\n                                 (e.g. 50k or 44.6m)\n--date DATE                      Download only videos uploaded in this date\n--datebefore DATE                Download only videos uploaded on or before\n                                 this date (i.e. inclusive)\n--dateafter DATE                 Download only videos uploaded on or after\n                                 this date (i.e. inclusive)\n--min-views COUNT                Do not download any videos with less than\n                                 COUNT views\n--max-views COUNT                Do not download any videos with more than\n                                 COUNT views\n--match-filter FILTER            Generic video filter. Specify any key (see\n                                 the \"OUTPUT TEMPLATE\" for a list of\n                                 available keys) to match if the key is\n                                 present, !key to check if the key is not\n                                 present, key > NUMBER (like \"comment_count\n                                 > 12\", also works with >=, <, <=, !=, =) to\n                                 compare against a number, key = 'LITERAL'\n                                 (like \"uploader = 'Mike Smith'\", also works\n                                 with !=) to match against a string literal\n                                 and & to require multiple matches. Values\n                                 which are not known are excluded unless you\n                                 put a question mark (?) after the operator.\n                                 For example, to only match videos that have\n                                 been liked more than 100 times and disliked\n                                 less than 50 times (or the dislike\n                                 functionality is not available at the given\n                                 service), but who also have a description,\n                                 use --match-filter \"like_count > 100 &\n                                 dislike_count <? 50 & description\" .\n--no-playlist                    Download only the video, if the URL refers\n                                 to a video and a playlist.\n--yes-playlist                   Download the playlist, if the URL refers to\n                                 a video and a playlist.\n--age-limit YEARS                Download only videos suitable for the given\n                                 age\n--download-archive FILE          Download only videos not listed in the\n                                 archive file. Record the IDs of all\n                                 downloaded videos in it.\n--include-ads                    Download advertisements as well\n                                 (experimental)\n\nDownload Options:\n-r, --limit-rate RATE            Maximum download rate in bytes per second\n                                 (e.g. 50K or 4.2M)\n-R, --retries RETRIES            Number of retries (default is 10), or\n                                 \"infinite\".\n--fragment-retries RETRIES       Number of retries for a fragment (default\n                                 is 10), or \"infinite\" (DASH, hlsnative and\n                                 ISM)\n--skip-unavailable-fragments     Skip unavailable fragments (DASH, hlsnative\n                                 and ISM)\n--abort-on-unavailable-fragment  Abort downloading when some fragment is not\n                                 available\n--keep-fragments                 Keep downloaded fragments on disk after\n                                 downloading is finished; fragments are\n                                 erased by default\n--buffer-size SIZE               Size of download buffer (e.g. 1024 or 16K)\n                                 (default is 1024)\n--no-resize-buffer               Do not automatically adjust the buffer\n                                 size. By default, the buffer size is\n                                 automatically resized from an initial value\n                                 of SIZE.\n--http-chunk-size SIZE           Size of a chunk for chunk-based HTTP\n                                 downloading (e.g. 10485760 or 10M) (default\n                                 is disabled). May be useful for bypassing\n                                 bandwidth throttling imposed by a webserver\n                                 (experimental)\n--playlist-reverse               Download playlist videos in reverse order\n--playlist-random                Download playlist videos in random order\n--xattr-set-filesize             Set file xattribute ytdl.filesize with\n                                 expected file size\n--hls-prefer-native              Use the native HLS downloader instead of\n                                 ffmpeg\n--hls-prefer-ffmpeg              Use ffmpeg instead of the native HLS\n                                 downloader\n--hls-use-mpegts                 Use the mpegts container for HLS videos,\n                                 allowing to play the video while\n                                 downloading (some players may not be able\n                                 to play it)\n--external-downloader COMMAND    Use the specified external downloader.\n                                 Currently supports\n                                 aria2c,avconv,axel,curl,ffmpeg,httpie,wget\n--external-downloader-args ARGS  Give these arguments to the external\n                                 downloader\n\nFilesystem Options:\n-a, --batch-file FILE            File containing URLs to download ('-' for\n                                 stdin), one URL per line. Lines starting\n                                 with '#', ';' or ']' are considered as\n                                 comments and ignored.\n--id                             Use only video ID in file name\n-o, --output TEMPLATE            Output filename template, see the \"OUTPUT\n                                 TEMPLATE\" for all the info\n--autonumber-start NUMBER        Specify the start value for %(autonumber)s\n                                 (default is 1)\n--restrict-filenames             Restrict filenames to only ASCII\n                                 characters, and avoid \"&\" and spaces in\n                                 filenames\n-w, --no-overwrites              Do not overwrite files\n-c, --continue                   Force resume of partially downloaded files.\n                                 By default, youtube-dl will resume\n                                 downloads if possible.\n--no-continue                    Do not resume partially downloaded files\n                                 (restart from beginning)\n--no-part                        Do not use .part files - write directly\n                                 into output file\n--no-mtime                       Do not use the Last-modified header to set\n                                 the file modification time\n--write-description              Write video description to a .description\n                                 file\n--write-info-json                Write video metadata to a .info.json file\n--write-annotations              Write video annotations to a\n                                 .annotations.xml file\n--load-info-json FILE            JSON file containing the video information\n                                 (created with the \"--write-info-json\"\n                                 option)\n--cookies FILE                   File to read cookies from and dump cookie\n                                 jar in\n--cache-dir DIR                  Location in the filesystem where youtube-dl\n                                 can store some downloaded information\n                                 permanently. By default\n                                 $XDG_CACHE_HOME/youtube-dl or\n                                 ~/.cache/youtube-dl . At the moment, only\n                                 YouTube player files (for videos with\n                                 obfuscated signatures) are cached, but that\n                                 may change.\n--no-cache-dir                   Disable filesystem caching\n--rm-cache-dir                   Delete all filesystem cache files\n\nThumbnail images:\n--write-thumbnail                Write thumbnail image to disk\n--write-all-thumbnails           Write all thumbnail image formats to disk\n--list-thumbnails                Simulate and list all available thumbnail\n                                 formats\n\nVerbosity / Simulation Options:\n-q, --quiet                      Activate quiet mode\n--no-warnings                    Ignore warnings\n-s, --simulate                   Do not download the video and do not write\n                                 anything to disk\n--skip-download                  Do not download the video\n-g, --get-url                    Simulate, quiet but print URL\n-e, --get-title                  Simulate, quiet but print title\n--get-id                         Simulate, quiet but print id\n--get-thumbnail                  Simulate, quiet but print thumbnail URL\n--get-description                Simulate, quiet but print video description\n--get-duration                   Simulate, quiet but print video length\n--get-filename                   Simulate, quiet but print output filename\n--get-format                     Simulate, quiet but print output format\n-j, --dump-json                  Simulate, quiet but print JSON information.\n                                 See the \"OUTPUT TEMPLATE\" for a description\n                                 of available keys.\n-J, --dump-single-json           Simulate, quiet but print JSON information\n                                 for each command-line argument. If the URL\n                                 refers to a playlist, dump the whole\n                                 playlist information in a single line.\n--print-json                     Be quiet and print the video information as\n                                 JSON (video is still being downloaded).\n--newline                        Output progress bar as new lines\n--no-progress                    Do not print progress bar\n--console-title                  Display progress in console titlebar\n-v, --verbose                    Print various debugging information\n--dump-pages                     Print downloaded pages encoded using base64\n                                 to debug problems (very verbose)\n--write-pages                    Write downloaded intermediary pages to\n                                 files in the current directory to debug\n                                 problems\n--print-traffic                  Display sent and read HTTP traffic\n-C, --call-home                  Contact the youtube-dl server for debugging\n--no-call-home                   Do NOT contact the youtube-dl server for\n                                 debugging\n\nWorkarounds:\n--encoding ENCODING              Force the specified encoding (experimental)\n--no-check-certificate           Suppress HTTPS certificate validation\n--prefer-insecure                Use an unencrypted connection to retrieve\n                                 information about the video. (Currently\n                                 supported only for YouTube)\n--user-agent UA                  Specify a custom user agent\n--referer URL                    Specify a custom referer, use if the video\n                                 access is restricted to one domain\n--add-header FIELD:VALUE         Specify a custom HTTP header and its value,\n                                 separated by a colon ':'. You can use this\n                                 option multiple times\n--bidi-workaround                Work around terminals that lack\n                                 bidirectional text support. Requires bidiv\n                                 or fribidi executable in PATH\n--sleep-interval SECONDS         Number of seconds to sleep before each\n                                 download when used alone or a lower bound\n                                 of a range for randomized sleep before each\n                                 download (minimum possible number of\n                                 seconds to sleep) when used along with\n                                 --max-sleep-interval.\n--max-sleep-interval SECONDS     Upper bound of a range for randomized sleep\n                                 before each download (maximum possible\n                                 number of seconds to sleep). Must only be\n                                 used along with --min-sleep-interval.\n\nVideo Format Options:\n-f, --format FORMAT              Video format code, see the \"FORMAT\n                                 SELECTION\" for all the info\n--all-formats                    Download all available video formats\n--prefer-free-formats            Prefer free video formats unless a specific\n                                 one is requested\n-F, --list-formats               List all available formats of requested\n                                 videos\n--youtube-skip-dash-manifest     Do not download the DASH manifests and\n                                 related data on YouTube videos\n--merge-output-format FORMAT     If a merge is required (e.g.\n                                 bestvideo+bestaudio), output to given\n                                 container format. One of mkv, mp4, ogg,\n                                 webm, flv. Ignored if no merge is required\n\nSubtitle Options:\n--write-sub                      Write subtitle file\n--write-auto-sub                 Write automatically generated subtitle file\n                                 (YouTube only)\n--all-subs                       Download all the available subtitles of the\n                                 video\n--list-subs                      List all available subtitles for the video\n--sub-format FORMAT              Subtitle format, accepts formats\n                                 preference, for example: \"srt\" or\n                                 \"ass/srt/best\"\n--sub-lang LANGS                 Languages of the subtitles to download\n                                 (optional) separated by commas, use --list-\n                                 subs for available language tags\n\nAuthentication Options:\n-u, --username USERNAME          Login with this account ID\n-p, --password PASSWORD          Account password. If this option is left\n                                 out, youtube-dl will ask interactively.\n-2, --twofactor TWOFACTOR        Two-factor authentication code\n-n, --netrc                      Use .netrc authentication data\n--video-password PASSWORD        Video password (vimeo, smotri, youku)\n\nAdobe Pass Options:\n--ap-mso MSO                     Adobe Pass multiple-system operator (TV\n                                 provider) identifier, use --ap-list-mso for\n                                 a list of available MSOs\n--ap-username USERNAME           Multiple-system operator account login\n--ap-password PASSWORD           Multiple-system operator account password.\n                                 If this option is left out, youtube-dl will\n                                 ask interactively.\n--ap-list-mso                    List all supported multiple-system\n                                 operators\n\nPost-processing Options:\n-x, --extract-audio              Convert video files to audio-only files\n                                 (requires ffmpeg or avconv and ffprobe or\n                                 avprobe)\n--audio-format FORMAT            Specify audio format: \"best\", \"aac\",\n                                 \"flac\", \"mp3\", \"m4a\", \"opus\", \"vorbis\", or\n                                 \"wav\"; \"best\" by default; No effect without\n                                 -x\n--audio-quality QUALITY          Specify ffmpeg/avconv audio quality, insert\n                                 a value between 0 (better) and 9 (worse)\n                                 for VBR or a specific bitrate like 128K\n                                 (default 5)\n--recode-video FORMAT            Encode the video to another format if\n                                 necessary (currently supported:\n                                 mp4|flv|ogg|webm|mkv|avi)\n--postprocessor-args ARGS        Give these arguments to the postprocessor\n-k, --keep-video                 Keep the video file on disk after the post-\n                                 processing; the video is erased by default\n--no-post-overwrites             Do not overwrite post-processed files; the\n                                 post-processed files are overwritten by\n                                 default\n--embed-subs                     Embed subtitles in the video (only for mp4,\n                                 webm and mkv videos)\n--embed-thumbnail                Embed thumbnail in the audio as cover art\n--add-metadata                   Write metadata to the video file\n--metadata-from-title FORMAT     Parse additional metadata like song title /\n                                 artist from the video title. The format\n                                 syntax is the same as --output. Regular\n                                 expression with named capture groups may\n                                 also be used. The parsed parameters replace\n                                 existing values. Example: --metadata-from-\n                                 title \"%(artist)s - %(title)s\" matches a\n                                 title like \"Coldplay - Paradise\". Example\n                                 (regex): --metadata-from-title\n                                 \"(?P<artist>.+?) - (?P<title>.+)\"\n--xattrs                         Write metadata to the video file's xattrs\n                                 (using dublin core and xdg standards)\n--fixup POLICY                   Automatically correct known faults of the\n                                 file. One of never (do nothing), warn (only\n                                 emit a warning), detect_or_warn (the\n                                 default; fix file if we can, warn\n                                 otherwise)\n--prefer-avconv                  Prefer avconv over ffmpeg for running the\n                                 postprocessors\n--prefer-ffmpeg                  Prefer ffmpeg over avconv for running the\n                                 postprocessors (default)\n--ffmpeg-location PATH           Location of the ffmpeg/avconv binary;\n                                 either the path to the binary or its\n                                 containing directory.\n--exec CMD                       Execute a command on the file after\n                                 downloading, similar to find's -exec\n                                 syntax. Example: --exec 'adb push {}\n                                 /sdcard/Music/ && rm {}'\n--convert-subs FORMAT            Convert the subtitles to other format\n                                 (currently supported: srt|ass|vtt|lrc)\n\nCONFIGURATION\nYou can configure youtube-dl by placing any supported command line option to a configuration file. On Linux and macOS, the system wide configuration file is located at /etc/youtube-dl.conf and the user wide configuration file at ~/.config/youtube-dl/config. On Windows, the user wide configuration file locations are %APPDATA%\\youtube-dl\\config.txt or C:\\Users\\<user name>\\youtube-dl.conf. Note that by default configuration file may not exist so you may need to create it yourself.\nFor example, with the following configuration file youtube-dl will always extract the audio, not copy the mtime, use a proxy and save all videos under Movies directory in your home directory:\n# Lines starting with # are comments\n\n# Always extract audio\n-x\n\n# Do not copy the mtime\n--no-mtime\n\n# Use this proxy\n--proxy 127.0.0.1:3128\n\n# Save all videos under Movies directory in your home directory\n-o ~/Movies/%(title)s.%(ext)s\n\nNote that options in configuration file are just the same options aka switches used in regular command line calls thus there must be no whitespace after - or --, e.g. -o or --proxy but not - o or -- proxy.\nYou can use --ignore-config if you want to disable the configuration file for a particular youtube-dl run.\nYou can also use --config-location if you want to use custom configuration file for a particular youtube-dl run.\nAuthentication with .netrc file\nYou may also want to configure automatic credentials storage for extractors that support authentication (by providing login and password with --username and --password) in order not to pass credentials as command line arguments on every youtube-dl execution and prevent tracking plain text passwords in the shell command history. You can achieve this using a .netrc file on a per extractor basis. For that you will need to create a .netrc file in your $HOME and restrict permissions to read/write by only you:\ntouch $HOME/.netrc\nchmod a-rwx,u+rw $HOME/.netrc\n\nAfter that you can add credentials for an extractor in the following format, where extractor is the name of the extractor in lowercase:\nmachine <extractor> login <login> password <password>\n\nFor example:\nmachine youtube login myaccount@gmail.com password my_youtube_password\nmachine twitch login my_twitch_account_name password my_twitch_password\n\nTo activate authentication with the .netrc file you should pass --netrc to youtube-dl or place it in the configuration file.\nOn Windows you may also need to setup the %HOME% environment variable manually. For example:\nset HOME=%USERPROFILE%\n\nOUTPUT TEMPLATE\nThe -o option allows users to indicate a template for the output file names.\ntl;dr: navigate me to examples.\nThe basic usage is not to set any template arguments when downloading a single file, like in youtube-dl -o funny_video.flv \"https://some/video\". However, it may contain special sequences that will be replaced when downloading each video. The special sequences may be formatted according to python string formatting operations. For example, %(NAME)s or %(NAME)05d. To clarify, that is a percent symbol followed by a name in parentheses, followed by formatting operations. Allowed names along with sequence type are:\n\nid (string): Video identifier\ntitle (string): Video title\nurl (string): Video URL\next (string): Video filename extension\nalt_title (string): A secondary title of the video\ndisplay_id (string): An alternative identifier for the video\nuploader (string): Full name of the video uploader\nlicense (string): License name the video is licensed under\ncreator (string): The creator of the video\nrelease_date (string): The date (YYYYMMDD) when the video was released\ntimestamp (numeric): UNIX timestamp of the moment the video became available\nupload_date (string): Video upload date (YYYYMMDD)\nuploader_id (string): Nickname or id of the video uploader\nchannel (string): Full name of the channel the video is uploaded on\nchannel_id (string): Id of the channel\nlocation (string): Physical location where the video was filmed\nduration (numeric): Length of the video in seconds\nview_count (numeric): How many users have watched the video on the platform\nlike_count (numeric): Number of positive ratings of the video\ndislike_count (numeric): Number of negative ratings of the video\nrepost_count (numeric): Number of reposts of the video\naverage_rating (numeric): Average rating give by users, the scale used depends on the webpage\ncomment_count (numeric): Number of comments on the video\nage_limit (numeric): Age restriction for the video (years)\nis_live (boolean): Whether this video is a live stream or a fixed-length video\nstart_time (numeric): Time in seconds where the reproduction should start, as specified in the URL\nend_time (numeric): Time in seconds where the reproduction should end, as specified in the URL\nformat (string): A human-readable description of the format\nformat_id (string): Format code specified by --format\nformat_note (string): Additional info about the format\nwidth (numeric): Width of the video\nheight (numeric): Height of the video\nresolution (string): Textual description of width and height\ntbr (numeric): Average bitrate of audio and video in KBit/s\nabr (numeric): Average audio bitrate in KBit/s\nacodec (string): Name of the audio codec in use\nasr (numeric): Audio sampling rate in Hertz\nvbr (numeric): Average video bitrate in KBit/s\nfps (numeric): Frame rate\nvcodec (string): Name of the video codec in use\ncontainer (string): Name of the container format\nfilesize (numeric): The number of bytes, if known in advance\nfilesize_approx (numeric): An estimate for the number of bytes\nprotocol (string): The protocol that will be used for the actual download\nextractor (string): Name of the extractor\nextractor_key (string): Key name of the extractor\nepoch (numeric): Unix epoch when creating the file\nautonumber (numeric): Five-digit number that will be increased with each download, starting at zero\nplaylist (string): Name or id of the playlist that contains the video\nplaylist_index (numeric): Index of the video in the playlist padded with leading zeros according to the total length of the playlist\nplaylist_id (string): Playlist identifier\nplaylist_title (string): Playlist title\nplaylist_uploader (string): Full name of the playlist uploader\nplaylist_uploader_id (string): Nickname or id of the playlist uploader\n\nAvailable for the video that belongs to some logical chapter or section:\n\nchapter (string): Name or title of the chapter the video belongs to\nchapter_number (numeric): Number of the chapter the video belongs to\nchapter_id (string): Id of the chapter the video belongs to\n\nAvailable for the video that is an episode of some series or programme:\n\nseries (string): Title of the series or programme the video episode belongs to\nseason (string): Title of the season the video episode belongs to\nseason_number (numeric): Number of the season the video episode belongs to\nseason_id (string): Id of the season the video episode belongs to\nepisode (string): Title of the video episode\nepisode_number (numeric): Number of the video episode within a season\nepisode_id (string): Id of the video episode\n\nAvailable for the media that is a track or a part of a music album:\n\ntrack (string): Title of the track\ntrack_number (numeric): Number of the track within an album or a disc\ntrack_id (string): Id of the track\nartist (string): Artist(s) of the track\ngenre (string): Genre(s) of the track\nalbum (string): Title of the album the track belongs to\nalbum_type (string): Type of the album\nalbum_artist (string): List of all artists appeared on the album\ndisc_number (numeric): Number of the disc or other physical medium the track belongs to\nrelease_year (numeric): Year (YYYY) when the album was released\n\nEach aforementioned sequence when referenced in an output template will be replaced by the actual value corresponding to the sequence name. Note that some of the sequences are not guaranteed to be present since they depend on the metadata obtained by a particular extractor. Such sequences will be replaced with NA.\nFor example for -o %(title)s-%(id)s.%(ext)s and an mp4 video with title youtube-dl test video and id BaW_jenozKcj, this will result in a youtube-dl test video-BaW_jenozKcj.mp4 file created in the current directory.\nFor numeric sequences you can use numeric related formatting, for example, %(view_count)05d will result in a string with view count padded with zeros up to 5 characters, like in 00042.\nOutput templates can also contain arbitrary hierarchical path, e.g. -o '%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s' which will result in downloading each video in a directory corresponding to this path template. Any missing directory will be automatically created for you.\nTo use percent literals in an output template use %%. To output to stdout use -o -.\nThe current default template is %(title)s-%(id)s.%(ext)s.\nIn some cases, you don't want special characters such as \u4e2d, spaces, or &, such as when transferring the downloaded filename to a Windows system or the filename through an 8bit-unsafe channel. In these cases, add the --restrict-filenames flag to get a shorter title:\nOutput template and Windows batch files\nIf you are using an output template inside a Windows batch file then you must escape plain percent characters (%) by doubling, so that -o \"%(title)s-%(id)s.%(ext)s\" should become -o \"%%(title)s-%%(id)s.%%(ext)s\". However you should not touch %'s that are not plain characters, e.g. environment variables for expansion should stay intact: -o \"C:\\%HOMEPATH%\\Desktop\\%%(title)s.%%(ext)s\".\nOutput template examples\nNote that on Windows you may need to use double quotes instead of single.\n$ youtube-dl --get-filename -o '%(title)s.%(ext)s' BaW_jenozKc\nyoutube-dl test video ''_\u00e4\u21ad\ud835\udd50.mp4    # All kinds of weird characters\n\n$ youtube-dl --get-filename -o '%(title)s.%(ext)s' BaW_jenozKc --restrict-filenames\nyoutube-dl_test_video_.mp4          # A simple file name\n\n# Download YouTube playlist videos in separate directory indexed by video order in a playlist\n$ youtube-dl -o '%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s' https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re\n\n# Download all playlists of YouTube channel/user keeping each playlist in separate directory:\n$ youtube-dl -o '%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s' https://www.youtube.com/user/TheLinuxFoundation/playlists\n\n# Download Udemy course keeping each chapter in separate directory under MyVideos directory in your home\n$ youtube-dl -u user -p password -o '~/MyVideos/%(playlist)s/%(chapter_number)s - %(chapter)s/%(title)s.%(ext)s' https://www.udemy.com/java-tutorial/\n\n# Download entire series season keeping each series and each season in separate directory under C:/MyVideos\n$ youtube-dl -o \"C:/MyVideos/%(series)s/%(season_number)s - %(season)s/%(episode_number)s - %(episode)s.%(ext)s\" https://videomore.ru/kino_v_detalayah/5_sezon/367617\n\n# Stream the video being downloaded to stdout\n$ youtube-dl -o - BaW_jenozKc\nFORMAT SELECTION\nBy default youtube-dl tries to download the best available quality, i.e. if you want the best quality you don't need to pass any special options, youtube-dl will guess it for you by default.\nBut sometimes you may want to download in a different format, for example when you are on a slow or intermittent connection. The key mechanism for achieving this is so-called format selection based on which you can explicitly specify desired format, select formats based on some criterion or criteria, setup precedence and much more.\nThe general syntax for format selection is --format FORMAT or shorter -f FORMAT where FORMAT is a selector expression, i.e. an expression that describes format or formats you would like to download.\ntl;dr: navigate me to examples.\nThe simplest case is requesting a specific format, for example with -f 22 you can download the format with format code equal to 22. You can get the list of available format codes for particular video using --list-formats or -F. Note that these format codes are extractor specific.\nYou can also use a file extension (currently 3gp, aac, flv, m4a, mp3, mp4, ogg, wav, webm are supported) to download the best quality format of a particular file extension served as a single file, e.g. -f webm will download the best quality format with the webm extension served as a single file.\nYou can also use special names to select particular edge case formats:\n\nbest: Select the best quality format represented by a single file with video and audio.\nworst: Select the worst quality format represented by a single file with video and audio.\nbestvideo: Select the best quality video-only format (e.g. DASH video). May not be available.\nworstvideo: Select the worst quality video-only format. May not be available.\nbestaudio: Select the best quality audio only-format. May not be available.\nworstaudio: Select the worst quality audio only-format. May not be available.\n\nFor example, to download the worst quality video-only format you can use -f worstvideo.\nIf you want to download multiple videos and they don't have the same formats available, you can specify the order of preference using slashes. Note that slash is left-associative, i.e. formats on the left hand side are preferred, for example -f 22/17/18 will download format 22 if it's available, otherwise it will download format 17 if it's available, otherwise it will download format 18 if it's available, otherwise it will complain that no suitable formats are available for download.\nIf you want to download several formats of the same video use a comma as a separator, e.g. -f 22,17,18 will download all these three formats, of course if they are available. Or a more sophisticated example combined with the precedence feature: -f 136/137/mp4/bestvideo,140/m4a/bestaudio.\nYou can also filter the video formats by putting a condition in brackets, as in -f \"best[height=720]\" (or -f \"[filesize>10M]\").\nThe following numeric meta fields can be used with comparisons <, <=, >, >=, = (equals), != (not equals):\n\nfilesize: The number of bytes, if known in advance\nwidth: Width of the video, if known\nheight: Height of the video, if known\ntbr: Average bitrate of audio and video in KBit/s\nabr: Average audio bitrate in KBit/s\nvbr: Average video bitrate in KBit/s\nasr: Audio sampling rate in Hertz\nfps: Frame rate\n\nAlso filtering work for comparisons = (equals), ^= (starts with), $= (ends with), *= (contains) and following string meta fields:\n\next: File extension\nacodec: Name of the audio codec in use\nvcodec: Name of the video codec in use\ncontainer: Name of the container format\nprotocol: The protocol that will be used for the actual download, lower-case (http, https, rtsp, rtmp, rtmpe, mms, f4m, ism, http_dash_segments, m3u8, or m3u8_native)\nformat_id: A short description of the format\n\nAny string comparison may be prefixed with negation ! in order to produce an opposite comparison, e.g. !*= (does not contain).\nNote that none of the aforementioned meta fields are guaranteed to be present since this solely depends on the metadata obtained by particular extractor, i.e. the metadata offered by the video hoster.\nFormats for which the value is not known are excluded unless you put a question mark (?) after the operator. You can combine format filters, so -f \"[height <=? 720][tbr>500]\" selects up to 720p videos (or videos where the height is not known) with a bitrate of at least 500 KBit/s.\nYou can merge the video and audio of two formats into a single file using -f <video-format>+<audio-format> (requires ffmpeg or avconv installed), for example -f bestvideo+bestaudio will download the best video-only format, the best audio-only format and mux them together with ffmpeg/avconv.\nFormat selectors can also be grouped using parentheses, for example if you want to download the best mp4 and webm formats with a height lower than 480 you can use -f '(mp4,webm)[height<480]'.\nSince the end of April 2015 and version 2015.04.26, youtube-dl uses -f bestvideo+bestaudio/best as the default format selection (see #5447, #5456). If ffmpeg or avconv are installed this results in downloading bestvideo and bestaudio separately and muxing them together into a single file giving the best overall quality available. Otherwise it falls back to best and results in downloading the best available quality served as a single file. best is also needed for videos that don't come from YouTube because they don't provide the audio and video in two different files. If you want to only download some DASH formats (for example if you are not interested in getting videos with a resolution higher than 1080p), you can add -f bestvideo[height<=?1080]+bestaudio/best to your configuration file. Note that if you use youtube-dl to stream to stdout (and most likely to pipe it to your media player then), i.e. you explicitly specify output template as -o -, youtube-dl still uses -f best format selection in order to start content delivery immediately to your player and not to wait until bestvideo and bestaudio are downloaded and muxed.\nIf you want to preserve the old format selection behavior (prior to youtube-dl 2015.04.26), i.e. you want to download the best available quality media served as a single file, you should explicitly specify your choice with -f best. You may want to add it to the configuration file in order not to type it every time you run youtube-dl.\nFormat selection examples\nNote that on Windows you may need to use double quotes instead of single.\n# Download best mp4 format available or any other best if no mp4 available\n$ youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best'\n\n# Download best format available but no better than 480p\n$ youtube-dl -f 'bestvideo[height<=480]+bestaudio/best[height<=480]'\n\n# Download best video only format but no bigger than 50 MB\n$ youtube-dl -f 'best[filesize<50M]'\n\n# Download best format available via direct link over HTTP/HTTPS protocol\n$ youtube-dl -f '(bestvideo+bestaudio/best)[protocol^=http]'\n\n# Download the best video format and the best audio format without merging them\n$ youtube-dl -f 'bestvideo,bestaudio' -o '%(title)s.f%(format_id)s.%(ext)s'\nNote that in the last example, an output template is recommended as bestvideo and bestaudio may have the same file name.\nVIDEO SELECTION\nVideos can be filtered by their upload date using the options --date, --datebefore or --dateafter. They accept dates in two formats:\n\nAbsolute dates: Dates in the format YYYYMMDD.\nRelative dates: Dates in the format (now|today)[+-][0-9](day|week|month|year)(s)?\n\nExamples:\n# Download only the videos uploaded in the last 6 months\n$ youtube-dl --dateafter now-6months\n\n# Download only the videos uploaded on January 1, 1970\n$ youtube-dl --date 19700101\n\n$ # Download only the videos uploaded in the 200x decade\n$ youtube-dl --dateafter 20000101 --datebefore 20091231\nFAQ\nHow do I update youtube-dl?\nIf you've followed our manual installation instructions, you can simply run youtube-dl -U (or, on Linux, sudo youtube-dl -U).\nIf you have used pip, a simple sudo pip install -U youtube-dl is sufficient to update.\nIf you have installed youtube-dl using a package manager like apt-get or yum, use the standard system update mechanism to update. Note that distribution packages are often outdated. As a rule of thumb, youtube-dl releases at least once a month, and often weekly or even daily. Simply go to https://yt-dl.org to find out the current version. Unfortunately, there is nothing we youtube-dl developers can do if your distribution serves a really outdated version. You can (and should) complain to your distribution in their bugtracker or support forum.\nAs a last resort, you can also uninstall the version installed by your package manager and follow our manual installation instructions. For that, remove the distribution's package, with a line like\nsudo apt-get remove -y youtube-dl\n\nAfterwards, simply follow our manual installation instructions:\nsudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl\nsudo chmod a+rx /usr/local/bin/youtube-dl\nhash -r\n\nAgain, from then on you'll be able to update with sudo youtube-dl -U.\nyoutube-dl is extremely slow to start on Windows\nAdd a file exclusion for youtube-dl.exe in Windows Defender settings.\nI'm getting an error Unable to extract OpenGraph title on YouTube playlists\nYouTube changed their playlist format in March 2014 and later on, so you'll need at least youtube-dl 2014.07.25 to download all YouTube videos.\nIf you have installed youtube-dl with a package manager, pip, setup.py or a tarball, please use that to update. Note that Ubuntu packages do not seem to get updated anymore. Since we are not affiliated with Ubuntu, there is little we can do. Feel free to report bugs to the Ubuntu packaging people - all they have to do is update the package to a somewhat recent version. See above for a way to update.\nI'm getting an error when trying to use output template: error: using output template conflicts with using title, video ID or auto number\nMake sure you are not using -o with any of these options -t, --title, --id, -A or --auto-number set in command line or in a configuration file. Remove the latter if any.\nDo I always have to pass -citw?\nBy default, youtube-dl intends to have the best options (incidentally, if you have a convincing case that these should be different, please file an issue where you explain that). Therefore, it is unnecessary and sometimes harmful to copy long option strings from webpages. In particular, the only option out of -citw that is regularly useful is -i.\nCan you please put the -b option back?\nMost people asking this question are not aware that youtube-dl now defaults to downloading the highest available quality as reported by YouTube, which will be 1080p or 720p in some cases, so you no longer need the -b option. For some specific videos, maybe YouTube does not report them to be available in a specific high quality format you're interested in. In that case, simply request it with the -f option and youtube-dl will try to download it.\nI get HTTP error 402 when trying to download a video. What's this?\nApparently YouTube requires you to pass a CAPTCHA test if you download too much. We're considering to provide a way to let you solve the CAPTCHA, but at the moment, your best course of action is pointing a web browser to the youtube URL, solving the CAPTCHA, and restart youtube-dl.\nDo I need any other programs?\nyoutube-dl works fine on its own on most sites. However, if you want to convert video/audio, you'll need avconv or ffmpeg. On some sites - most notably YouTube - videos can be retrieved in a higher quality format without sound. youtube-dl will detect whether avconv/ffmpeg is present and automatically pick the best option.\nVideos or video formats streamed via RTMP protocol can only be downloaded when rtmpdump is installed. Downloading MMS and RTSP videos requires either mplayer or mpv to be installed.\nI have downloaded a video but how can I play it?\nOnce the video is fully downloaded, use any video player, such as mpv, vlc or mplayer.\nI extracted a video URL with -g, but it does not play on another machine / in my web browser.\nIt depends a lot on the service. In many cases, requests for the video (to download/play it) must come from the same IP address and with the same cookies and/or HTTP headers. Use the --cookies option to write the required cookies into a file, and advise your downloader to read cookies from that file. Some sites also require a common user agent to be used, use --dump-user-agent to see the one in use by youtube-dl. You can also get necessary cookies and HTTP headers from JSON output obtained with --dump-json.\nIt may be beneficial to use IPv6; in some cases, the restrictions are only applied to IPv4. Some services (sometimes only for a subset of videos) do not restrict the video URL by IP address, cookie, or user-agent, but these are the exception rather than the rule.\nPlease bear in mind that some URL protocols are not supported by browsers out of the box, including RTMP. If you are using -g, your own downloader must support these as well.\nIf you want to play the video on a machine that is not running youtube-dl, you can relay the video content from the machine that runs youtube-dl. You can use -o - to let youtube-dl stream a video to stdout, or simply allow the player to download the files written by youtube-dl in turn.\nERROR: no fmt_url_map or conn information found in video info\nYouTube has switched to a new video info format in July 2011 which is not supported by old versions of youtube-dl. See above for how to update youtube-dl.\nERROR: unable to download video\nYouTube requires an additional signature since September 2012 which is not supported by old versions of youtube-dl. See above for how to update youtube-dl.\nVideo URL contains an ampersand and I'm getting some strange output [1] 2839 or 'v' is not recognized as an internal or external command\nThat's actually the output from your shell. Since ampersand is one of the special shell characters it's interpreted by the shell preventing you from passing the whole URL to youtube-dl. To disable your shell from interpreting the ampersands (or any other special characters) you have to either put the whole URL in quotes or escape them with a backslash (which approach will work depends on your shell).\nFor example if your URL is https://www.youtube.com/watch?t=4&v=BaW_jenozKc you should end up with following command:\nyoutube-dl 'https://www.youtube.com/watch?t=4&v=BaW_jenozKc'\nor\nyoutube-dl https://www.youtube.com/watch?t=4\\&v=BaW_jenozKc\nFor Windows you have to use the double quotes:\nyoutube-dl \"https://www.youtube.com/watch?t=4&v=BaW_jenozKc\"\nExtractorError: Could not find JS function u'OF'\nIn February 2015, the new YouTube player contained a character sequence in a string that was misinterpreted by old versions of youtube-dl. See above for how to update youtube-dl.\nHTTP Error 429: Too Many Requests or 402: Payment Required\nThese two error codes indicate that the service is blocking your IP address because of overuse. Contact the service and ask them to unblock your IP address, or - if you have acquired a whitelisted IP address already - use the --proxy or --source-address options to select another IP address.\nSyntaxError: Non-ASCII character\nThe error\nFile \"youtube-dl\", line 2\nSyntaxError: Non-ASCII character '\\x93' ...\n\nmeans you're using an outdated version of Python. Please update to Python 2.6 or 2.7.\nWhat is this binary file? Where has the code gone?\nSince June 2012 (#342) youtube-dl is packed as an executable zipfile, simply unzip it (might need renaming to youtube-dl.zip first on some systems) or clone the git repository, as laid out above. If you modify the code, you can run it by executing the __main__.py file. To recompile the executable, run make youtube-dl.\nThe exe throws an error due to missing MSVCR100.dll\nTo run the exe you need to install first the Microsoft Visual C++ 2010 Redistributable Package (x86).\nOn Windows, how should I set up ffmpeg and youtube-dl? Where should I put the exe files?\nIf you put youtube-dl and ffmpeg in the same directory that you're running the command from, it will work, but that's rather cumbersome.\nTo make a different directory work - either for ffmpeg, or for youtube-dl, or for both - simply create the directory (say, C:\\bin, or C:\\Users\\<User name>\\bin), put all the executables directly in there, and then set your PATH environment variable to include that directory.\nFrom then on, after restarting your shell, you will be able to access both youtube-dl and ffmpeg (and youtube-dl will be able to find ffmpeg) by simply typing youtube-dl or ffmpeg, no matter what directory you're in.\nHow do I put downloads into a specific folder?\nUse the -o to specify an output template, for example -o \"/home/user/videos/%(title)s-%(id)s.%(ext)s\". If you want this for all of your downloads, put the option into your configuration file.\nHow do I download a video starting with a -?\nEither prepend https://www.youtube.com/watch?v= or separate the ID from the options with --:\nyoutube-dl -- -wNyEUrxzFU\nyoutube-dl \"https://www.youtube.com/watch?v=-wNyEUrxzFU\"\n\nHow do I pass cookies to youtube-dl?\nUse the --cookies option, for example --cookies /path/to/cookies/file.txt.\nIn order to extract cookies from browser use any conforming browser extension for exporting cookies. For example, cookies.txt (for Chrome) or cookies.txt (for Firefox).\nNote that the cookies file must be in Mozilla/Netscape format and the first line of the cookies file must be either # HTTP Cookie File or # Netscape HTTP Cookie File. Make sure you have correct newline format in the cookies file and convert newlines if necessary to correspond with your OS, namely CRLF (\\r\\n) for Windows and LF (\\n) for Unix and Unix-like systems (Linux, macOS, etc.). HTTP Error 400: Bad Request when using --cookies is a good sign of invalid newline format.\nPassing cookies to youtube-dl is a good way to workaround login when a particular extractor does not implement it explicitly. Another use case is working around CAPTCHA some websites require you to solve in particular cases in order to get access (e.g. YouTube, CloudFlare).\nHow do I stream directly to media player?\nYou will first need to tell youtube-dl to stream media to stdout with -o -, and also tell your media player to read from stdin (it must be capable of this for streaming) and then pipe former to latter. For example, streaming to vlc can be achieved with:\nyoutube-dl -o - \"https://www.youtube.com/watch?v=BaW_jenozKcj\" | vlc -\n\nHow do I download only new videos from a playlist?\nUse download-archive feature. With this feature you should initially download the complete playlist with --download-archive /path/to/download/archive/file.txt that will record identifiers of all the videos in a special file. Each subsequent run with the same --download-archive will download only new videos and skip all videos that have been downloaded before. Note that only successful downloads are recorded in the file.\nFor example, at first,\nyoutube-dl --download-archive archive.txt \"https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re\"\n\nwill download the complete PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re playlist and create a file archive.txt. Each subsequent run will only download new videos if any:\nyoutube-dl --download-archive archive.txt \"https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re\"\n\nShould I add --hls-prefer-native into my config?\nWhen youtube-dl detects an HLS video, it can download it either with the built-in downloader or ffmpeg. Since many HLS streams are slightly invalid and ffmpeg/youtube-dl each handle some invalid cases better than the other, there is an option to switch the downloader if needed.\nWhen youtube-dl knows that one particular downloader works better for a given website, that downloader will be picked. Otherwise, youtube-dl will pick the best downloader for general compatibility, which at the moment happens to be ffmpeg. This choice may change in future versions of youtube-dl, with improvements of the built-in downloader and/or ffmpeg.\nIn particular, the generic extractor (used when your website is not in the list of supported sites by youtube-dl cannot mandate one specific downloader.\nIf you put either --hls-prefer-native or --hls-prefer-ffmpeg into your configuration, a different subset of videos will fail to download correctly. Instead, it is much better to file an issue or a pull request which details why the native or the ffmpeg HLS downloader is a better choice for your use case.\nCan you add support for this anime video site, or site which shows current movies for free?\nAs a matter of policy (as well as legality), youtube-dl does not include support for services that specialize in infringing copyright. As a rule of thumb, if you cannot easily find a video that the service is quite obviously allowed to distribute (i.e. that has been uploaded by the creator, the creator's distributor, or is published under a free license), the service is probably unfit for inclusion to youtube-dl.\nA note on the service that they don't host the infringing content, but just link to those who do, is evidence that the service should not be included into youtube-dl. The same goes for any DMCA note when the whole front page of the service is filled with videos they are not allowed to distribute. A \"fair use\" note is equally unconvincing if the service shows copyright-protected videos in full without authorization.\nSupport requests for services that do purchase the rights to distribute their content are perfectly fine though. If in doubt, you can simply include a source that mentions the legitimate purchase of content.\nHow can I speed up work on my issue?\n(Also known as: Help, my important issue not being solved!) The youtube-dl core developer team is quite small. While we do our best to solve as many issues as possible, sometimes that can take quite a while. To speed up your issue, here's what you can do:\nFirst of all, please do report the issue at our issue tracker. That allows us to coordinate all efforts by users and developers, and serves as a unified point. Unfortunately, the youtube-dl project has grown too large to use personal email as an effective communication channel.\nPlease read the bug reporting instructions below. A lot of bugs lack all the necessary information. If you can, offer proxy, VPN, or shell access to the youtube-dl developers. If you are able to, test the issue from multiple computers in multiple countries to exclude local censorship or misconfiguration issues.\nIf nobody is interested in solving your issue, you are welcome to take matters into your own hands and submit a pull request (or coerce/pay somebody else to do so).\nFeel free to bump the issue from time to time by writing a small comment (\"Issue is still present in youtube-dl version ...from France, but fixed from Belgium\"), but please not more than once a month. Please do not declare your issue as important or urgent.\nHow can I detect whether a given URL is supported by youtube-dl?\nFor one, have a look at the list of supported sites. Note that it can sometimes happen that the site changes its URL scheme (say, from https://example.com/video/1234567 to https://example.com/v/1234567 ) and youtube-dl reports an URL of a service in that list as unsupported. In that case, simply report a bug.\nIt is not possible to detect whether a URL is supported or not. That's because youtube-dl contains a generic extractor which matches all URLs. You may be tempted to disable, exclude, or remove the generic extractor, but the generic extractor not only allows users to extract videos from lots of websites that embed a video from another service, but may also be used to extract video from a service that it's hosting itself. Therefore, we neither recommend nor support disabling, excluding, or removing the generic extractor.\nIf you want to find out whether a given URL is supported, simply call youtube-dl with it. If you get no videos back, chances are the URL is either not referring to a video or unsupported. You can find out which by examining the output (if you run youtube-dl on the console) or catching an UnsupportedError exception if you run it from a Python program.\nWhy do I need to go through that much red tape when filing bugs?\nBefore we had the issue template, despite our extensive bug reporting instructions, about 80% of the issue reports we got were useless, for instance because people used ancient versions hundreds of releases old, because of simple syntactic errors (not in youtube-dl but in general shell usage), because the problem was already reported multiple times before, because people did not actually read an error message, even if it said \"please install ffmpeg\", because people did not mention the URL they were trying to download and many more simple, easy-to-avoid problems, many of whom were totally unrelated to youtube-dl.\nyoutube-dl is an open-source project manned by too few volunteers, so we'd rather spend time fixing bugs where we are certain none of those simple problems apply, and where we can be reasonably confident to be able to reproduce the issue without asking the reporter repeatedly. As such, the output of youtube-dl -v YOUR_URL_HERE is really all that's required to file an issue. The issue template also guides you through some basic steps you can do, such as checking that your version of youtube-dl is current.\nDEVELOPER INSTRUCTIONS\nMost users do not need to build youtube-dl and can download the builds or get them from their distribution.\nTo run youtube-dl as a developer, you don't need to build anything either. Simply execute\npython -m youtube_dl\n\nTo run the test, simply invoke your favorite test runner, or execute a test file directly; any of the following work:\npython -m unittest discover\npython test/test_download.py\nnosetests\n\nSee item 6 of new extractor tutorial for how to run extractor specific test cases.\nIf you want to create a build of youtube-dl yourself, you'll need\n\npython\nmake (only GNU make is supported)\npandoc\nzip\nnosetests\n\nAdding support for a new site\nIf you want to add support for a new site, first of all make sure this site is not dedicated to copyright infringement. youtube-dl does not support such sites thus pull requests adding support for them will be rejected.\nAfter you have ensured this site is distributing its content legally, you can follow this quick list (assuming your service is called yourextractor):\n\n\nFork this repository\n\n\nCheck out the source code with:\n git clone git@github.com:YOUR_GITHUB_USERNAME/youtube-dl.git\n\n\n\nStart a new git branch with\n cd youtube-dl\n git checkout -b yourextractor\n\n\n\nStart with this simple template and save it to youtube_dl/extractor/yourextractor.py:\n# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass YourExtractorIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?yourextractor\\.com/watch/(?P<id>[0-9]+)'\n    _TEST = {\n        'url': 'https://yourextractor.com/watch/42',\n        'md5': 'TODO: md5 sum of the first 10241 bytes of the video file (use --test)',\n        'info_dict': {\n            'id': '42',\n            'ext': 'mp4',\n            'title': 'Video title goes here',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            # TODO more properties, either as:\n            # * A value\n            # * MD5 checksum; start the string with md5:\n            # * A regular expression; start the string with re:\n            # * Any Python type (for example int or float)\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        # TODO more code goes here, for example ...\n        title = self._html_search_regex(r'<h1>(.+?)</h1>', webpage, 'title')\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': self._og_search_description(webpage),\n            'uploader': self._search_regex(r'<div[^>]+id=\"uploader\"[^>]*>([^<]+)<', webpage, 'uploader', fatal=False),\n            # TODO more properties (see youtube_dl/extractor/common.py)\n        }\n\n\nAdd an import in youtube_dl/extractor/extractors.py.\n\n\nRun python test/test_download.py TestDownload.test_YourExtractor. This should fail at first, but you can continually re-run it until you're done. If you decide to add more than one test, then rename _TEST to _TESTS and make it into a list of dictionaries. The tests will then be named TestDownload.test_YourExtractor, TestDownload.test_YourExtractor_1, TestDownload.test_YourExtractor_2, etc. Note that tests with only_matching key in test's dict are not counted in.\n\n\nHave a look at youtube_dl/extractor/common.py for possible helper methods and a detailed description of what your extractor should and may return. Add tests and code for as many as you want.\n\n\nMake sure your code follows youtube-dl coding conventions and check the code with flake8:\n $ flake8 youtube_dl/extractor/yourextractor.py\n\n\n\nMake sure your code works under all Python versions claimed supported by youtube-dl, namely 2.6, 2.7, and 3.2+.\n\n\nWhen the tests pass, add the new files and commit them and push the result, like this:\n$ git add youtube_dl/extractor/extractors.py\n$ git add youtube_dl/extractor/yourextractor.py\n$ git commit -m '[yourextractor] Add new extractor'\n$ git push origin yourextractor\n\n\n\nFinally, create a pull request. We'll then review and merge it.\n\n\nIn any case, thank you very much for your contributions!\nyoutube-dl coding conventions\nThis section introduces a guide lines for writing idiomatic, robust and future-proof extractor code.\nExtractors are very fragile by nature since they depend on the layout of the source data provided by 3rd party media hosters out of your control and this layout tends to change. As an extractor implementer your task is not only to write code that will extract media links and metadata correctly but also to minimize dependency on the source's layout and even to make the code foresee potential future changes and be ready for that. This is important because it will allow the extractor not to break on minor layout changes thus keeping old youtube-dl versions working. Even though this breakage issue is easily fixed by emitting a new version of youtube-dl with a fix incorporated, all the previous versions become broken in all repositories and distros' packages that may not be so prompt in fetching the update from us. Needless to say, some non rolling release distros may never receive an update at all.\nMandatory and optional metafields\nFor extraction to work youtube-dl relies on metadata your extractor extracts and provides to youtube-dl expressed by an information dictionary or simply info dict. Only the following meta fields in the info dict are considered mandatory for a successful extraction process by youtube-dl:\n\nid (media identifier)\ntitle (media title)\nurl (media download URL) or formats\n\nIn fact only the last option is technically mandatory (i.e. if you can't figure out the download location of the media the extraction does not make any sense). But by convention youtube-dl also treats id and title as mandatory. Thus the aforementioned metafields are the critical data that the extraction does not make any sense without and if any of them fail to be extracted then the extractor is considered completely broken.\nAny field apart from the aforementioned ones are considered optional. That means that extraction should be tolerant to situations when sources for these fields can potentially be unavailable (even if they are always available at the moment) and future-proof in order not to break the extraction of general purpose mandatory fields.\nExample\nSay you have some source dictionary meta that you've fetched as JSON with HTTP request and it has a key summary:\nmeta = self._download_json(url, video_id)\nAssume at this point meta's layout is:\n{\n    ...\n    \"summary\": \"some fancy summary text\",\n    ...\n}\nAssume you want to extract summary and put it into the resulting info dict as description. Since description is an optional meta field you should be ready that this key may be missing from the meta dict, so that you should extract it like:\ndescription = meta.get('summary')  # correct\nand not like:\ndescription = meta['summary']  # incorrect\nThe latter will break extraction process with KeyError if summary disappears from meta at some later time but with the former approach extraction will just go ahead with description set to None which is perfectly fine (remember None is equivalent to the absence of data).\nSimilarly, you should pass fatal=False when extracting optional data from a webpage with _search_regex, _html_search_regex or similar methods, for instance:\ndescription = self._search_regex(\n    r'<span[^>]+id=\"title\"[^>]*>([^<]+)<',\n    webpage, 'description', fatal=False)\nWith fatal set to False if _search_regex fails to extract description it will emit a warning and continue extraction.\nYou can also pass default=<some fallback value>, for example:\ndescription = self._search_regex(\n    r'<span[^>]+id=\"title\"[^>]*>([^<]+)<',\n    webpage, 'description', default=None)\nOn failure this code will silently continue the extraction with description set to None. That is useful for metafields that may or may not be present.\nProvide fallbacks\nWhen extracting metadata try to do so from multiple sources. For example if title is present in several places, try extracting from at least some of them. This makes it more future-proof in case some of the sources become unavailable.\nExample\nSay meta from the previous example has a title and you are about to extract it. Since title is a mandatory meta field you should end up with something like:\ntitle = meta['title']\nIf title disappears from meta in future due to some changes on the hoster's side the extraction would fail since title is mandatory. That's expected.\nAssume that you have some another source you can extract title from, for example og:title HTML meta of a webpage. In this case you can provide a fallback scenario:\ntitle = meta.get('title') or self._og_search_title(webpage)\nThis code will try to extract from meta first and if it fails it will try extracting og:title from a webpage.\nRegular expressions\nDon't capture groups you don't use\nCapturing group must be an indication that it's used somewhere in the code. Any group that is not used must be non capturing.\nExample\nDon't capture id attribute name here since you can't use it for anything anyway.\nCorrect:\nr'(?:id|ID)=(?P<id>\\d+)'\nIncorrect:\nr'(id|ID)=(?P<id>\\d+)'\nMake regular expressions relaxed and flexible\nWhen using regular expressions try to write them fuzzy, relaxed and flexible, skipping insignificant parts that are more likely to change, allowing both single and double quotes for quoted values and so on.\nExample\nSay you need to extract title from the following HTML code:\n<span style=\"position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;\" class=\"title\">some fancy title</span>\nThe code for that task should look similar to:\ntitle = self._search_regex(\n    r'<span[^>]+class=\"title\"[^>]*>([^<]+)', webpage, 'title')\nOr even better:\ntitle = self._search_regex(\n    r'<span[^>]+class=([\"\\'])title\\1[^>]*>(?P<title>[^<]+)',\n    webpage, 'title', group='title')\nNote how you tolerate potential changes in the style attribute's value or switch from using double quotes to single for class attribute:\nThe code definitely should not look like:\ntitle = self._search_regex(\n    r'<span style=\"position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;\" class=\"title\">(.*?)</span>',\n    webpage, 'title', group='title')\nLong lines policy\nThere is a soft limit to keep lines of code under 80 characters long. This means it should be respected if possible and if it does not make readability and code maintenance worse.\nFor example, you should never split long string literals like URLs or some other often copied entities over multiple lines to fit this limit:\nCorrect:\n'https://www.youtube.com/watch?v=FqZTN594JQw&list=PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4'\nIncorrect:\n'https://www.youtube.com/watch?v=FqZTN594JQw&list='\n'PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4'\nInline values\nExtracting variables is acceptable for reducing code duplication and improving readability of complex expressions. However, you should avoid extracting variables used only once and moving them to opposite parts of the extractor file, which makes reading the linear flow difficult.\nExample\nCorrect:\ntitle = self._html_search_regex(r'<title>([^<]+)</title>', webpage, 'title')\nIncorrect:\nTITLE_RE = r'<title>([^<]+)</title>'\n# ...some lines of code...\ntitle = self._html_search_regex(TITLE_RE, webpage, 'title')\nCollapse fallbacks\nMultiple fallback values can quickly become unwieldy. Collapse multiple fallback values into a single expression via a list of patterns.\nExample\nGood:\ndescription = self._html_search_meta(\n    ['og:description', 'description', 'twitter:description'],\n    webpage, 'description', default=None)\nUnwieldy:\ndescription = (\n    self._og_search_description(webpage, default=None)\n    or self._html_search_meta('description', webpage, default=None)\n    or self._html_search_meta('twitter:description', webpage, default=None))\nMethods supporting list of patterns are: _search_regex, _html_search_regex, _og_search_property, _html_search_meta.\nTrailing parentheses\nAlways move trailing parentheses after the last argument.\nExample\nCorrect:\n    lambda x: x['ResultSet']['Result'][0]['VideoUrlSet']['VideoUrl'],\n    list)\nIncorrect:\n    lambda x: x['ResultSet']['Result'][0]['VideoUrlSet']['VideoUrl'],\n    list,\n)\nUse convenience conversion and parsing functions\nWrap all extracted numeric data into safe functions from youtube_dl/utils.py: int_or_none, float_or_none. Use them for string to number conversions as well.\nUse url_or_none for safe URL processing.\nUse try_get for safe metadata extraction from parsed JSON.\nUse unified_strdate for uniform upload_date or any YYYYMMDD meta field extraction, unified_timestamp for uniform timestamp extraction, parse_filesize for filesize extraction, parse_count for count meta fields extraction, parse_resolution, parse_duration for duration extraction, parse_age_limit for age_limit extraction.\nExplore youtube_dl/utils.py for more useful convenience functions.\nMore examples\nSafely extract optional description from parsed JSON\ndescription = try_get(response, lambda x: x['result']['video'][0]['summary'], compat_str)\nSafely extract more optional metadata\nvideo = try_get(response, lambda x: x['result']['video'][0], dict) or {}\ndescription = video.get('summary')\nduration = float_or_none(video.get('durationMs'), scale=1000)\nview_count = int_or_none(video.get('views'))\nEMBEDDING YOUTUBE-DL\nyoutube-dl makes the best effort to be a good command-line program, and thus should be callable from any programming language. If you encounter any problems parsing its output, feel free to create a report.\nFrom a Python program, you can embed youtube-dl in a more powerful fashion, like this:\nfrom __future__ import unicode_literals\nimport youtube_dl\n\nydl_opts = {}\nwith youtube_dl.YoutubeDL(ydl_opts) as ydl:\n    ydl.download(['https://www.youtube.com/watch?v=BaW_jenozKc'])\nMost likely, you'll want to use various options. For a list of options available, have a look at youtube_dl/YoutubeDL.py. For a start, if you want to intercept youtube-dl's output, set a logger object.\nHere's a more complete example of a program that outputs only errors (and a short message after the download is finished), and downloads/converts the video to an mp3 file:\nfrom __future__ import unicode_literals\nimport youtube_dl\n\n\nclass MyLogger(object):\n    def debug(self, msg):\n        pass\n\n    def warning(self, msg):\n        pass\n\n    def error(self, msg):\n        print(msg)\n\n\ndef my_hook(d):\n    if d['status'] == 'finished':\n        print('Done downloading, now converting ...')\n\n\nydl_opts = {\n    'format': 'bestaudio/best',\n    'postprocessors': [{\n        'key': 'FFmpegExtractAudio',\n        'preferredcodec': 'mp3',\n        'preferredquality': '192',\n    }],\n    'logger': MyLogger(),\n    'progress_hooks': [my_hook],\n}\nwith youtube_dl.YoutubeDL(ydl_opts) as ydl:\n    ydl.download(['https://www.youtube.com/watch?v=BaW_jenozKc'])\nBUGS\nBugs and suggestions should be reported at: https://github.com/ytdl-org/youtube-dl/issues. Unless you were prompted to or there is another pertinent reason (e.g. GitHub fails to accept the bug report), please do not send bug reports via personal email. For discussions, join us in the IRC channel #youtube-dl on freenode (webchat).\nPlease include the full output of youtube-dl when run with -v, i.e. add -v flag to your command line, copy the whole output and post it in the issue body wrapped in ``` for better formatting. It should look similar to this:\n$ youtube-dl -v <your command line>\n[debug] System config: []\n[debug] User config: []\n[debug] Command-line args: [u'-v', u'https://www.youtube.com/watch?v=BaW_jenozKcj']\n[debug] Encodings: locale cp1251, fs mbcs, out cp866, pref cp1251\n[debug] youtube-dl version 2015.12.06\n[debug] Git HEAD: 135392e\n[debug] Python version 2.6.6 - Windows-2003Server-5.2.3790-SP2\n[debug] exe versions: ffmpeg N-75573-g1d0487f, ffprobe N-75573-g1d0487f, rtmpdump 2.4\n[debug] Proxy map: {}\n...\n\nDo not post screenshots of verbose logs; only plain text is acceptable.\nThe output (including the first lines) contains important debugging information. Issues without the full output are often not reproducible and therefore do not get solved in short order, if ever.\nPlease re-read your issue once again to avoid a couple of common mistakes (you can and should use this as a checklist):\nIs the description of the issue itself sufficient?\nWe often get issue reports that we cannot really decipher. While in most cases we eventually get the required information after asking back multiple times, this poses an unnecessary drain on our resources. Many contributors, including myself, are also not native speakers, so we may misread some parts.\nSo please elaborate on what feature you are requesting, or what bug you want to be fixed. Make sure that it's obvious\n\nWhat the problem is\nHow it could be fixed\nHow your proposed solution would look like\n\nIf your report is shorter than two lines, it is almost certainly missing some of these, which makes it hard for us to respond to it. We're often too polite to close the issue outright, but the missing info makes misinterpretation likely. As a committer myself, I often get frustrated by these issues, since the only possible way for me to move forward on them is to ask for clarification over and over.\nFor bug reports, this means that your report should contain the complete output of youtube-dl when called with the -v flag. The error message you get for (most) bugs even says so, but you would not believe how many of our bug reports do not contain this information.\nIf your server has multiple IPs or you suspect censorship, adding --call-home may be a good idea to get more diagnostics. If the error is ERROR: Unable to extract ... and you cannot reproduce it from multiple countries, add --dump-pages (warning: this will yield a rather large output, redirect it to the file log.txt by adding >log.txt 2>&1 to your command-line) or upload the .dump files you get when you add --write-pages somewhere.\nSite support requests must contain an example URL. An example URL is a URL you might want to download, like https://www.youtube.com/watch?v=BaW_jenozKc. There should be an obvious video present. Except under very special circumstances, the main page of a video service (e.g. https://www.youtube.com/) is not an example URL.\nAre you using the latest version?\nBefore reporting any issue, type youtube-dl -U. This should report that you're up-to-date. About 20% of the reports we receive are already fixed, but people are using outdated versions. This goes for feature requests as well.\nIs the issue already documented?\nMake sure that someone has not already opened the issue you're trying to open. Search at the top of the window or browse the GitHub Issues of this repository. If there is an issue, feel free to write something along the lines of \"This affects me as well, with version 2015.01.01. Here is some more information on the issue: ...\". While some issues may be old, a new post into them often spurs rapid activity.\nWhy are existing options not enough?\nBefore requesting a new feature, please have a quick peek at the list of supported options. Many feature requests are for features that actually exist already! Please, absolutely do show off your work in the issue report and detail how the existing similar options do not solve your problem.\nIs there enough context in your bug report?\nPeople want to solve problems, and often think they do us a favor by breaking down their larger problems (e.g. wanting to skip already downloaded files) to a specific request (e.g. requesting us to look whether the file exists before downloading the info page). However, what often happens is that they break down the problem into two steps: One simple, and one impossible (or extremely complicated one).\nWe are then presented with a very complicated request when the original problem could be solved far easier, e.g. by recording the downloaded video IDs in a separate file. To avoid this, you must include the greater context where it is non-obvious. In particular, every feature request that does not consist of adding support for a new site should contain a use case scenario that explains in what situation the missing feature would be useful.\nDoes the issue involve one problem, and one problem only?\nSome of our users seem to think there is a limit of issues they can or should open. There is no limit of issues they can or should open. While it may seem appealing to be able to dump all your issues into one ticket, that means that someone who solves one of your issues cannot mark the issue as closed. Typically, reporting a bunch of issues leads to the ticket lingering since nobody wants to attack that behemoth, until someone mercifully splits the issue into multiple ones.\nIn particular, every site support request issue should only pertain to services at one site (generally under a common domain, but always using the same backend technology). Do not request support for vimeo user videos, White house podcasts, and Google Plus pages in the same issue. Also, make sure that you don't post bug reports alongside feature requests. As a rule of thumb, a feature request does not include outputs of youtube-dl that are not immediately related to the feature at hand. Do not post reports of a network error alongside the request for a new video service.\nIs anyone going to need the feature?\nOnly post features that you (or an incapacitated friend you can personally talk to) require. Do not post features because they seem like a good idea. If they are really useful, they will be requested by someone who requires them.\nIs your question about youtube-dl?\nIt may sound strange, but some bug reports we receive are completely unrelated to youtube-dl and relate to a different, or even the reporter's own, application. Please make sure that you are actually using youtube-dl. If you are using a UI for youtube-dl, report the bug to the maintainer of the actual application providing the UI. On the other hand, if your UI for youtube-dl fails in some way you believe is related to youtube-dl, by all means, go ahead and report the bug.\nCOPYRIGHT\nyoutube-dl is released into the public domain by the copyright holders.\nThis README file was originally written by Daniel Bolton and is likewise released into the public domain.\n\n"}, {"repo": "trekhleb/javascript-algorithms", "language": "JavaScript", "readme": "\nJavaScript Algorithms and Data Structures\n\n\nThis repository contains JavaScript based examples of many\npopular algorithms and data structures.\nEach algorithm and data structure has its own separate README\nwith related explanations and links for further reading (including ones\nto YouTube videos).\nRead this in other languages:\n\u7b80\u4f53\u4e2d\u6587,\n\u7e41\u9ad4\u4e2d\u6587,\n\ud55c\uad6d\uc5b4,\n\u65e5\u672c\u8a9e,\nPolski,\nFran\u00e7ais,\nEspa\u00f1ol,\nPortugu\u00eas\n\u261d Note that this project is meant to be used for learning and researching purposes\nonly and it is not meant to be used for production.\nData Structures\nA data structure is a particular way of organizing and storing data in a computer so that it can\nbe accessed and modified efficiently. More precisely, a data structure is a collection of data\nvalues, the relationships among them, and the functions or operations that can be applied to\nthe data.\nB - Beginner, A - Advanced\n\nB Linked List\nB Doubly Linked List\nB Queue\nB Stack\nB Hash Table\nB Heap - max and min heap versions\nB Priority Queue\nA Trie\nA Tree\n\nA Binary Search Tree\nA AVL Tree\nA Red-Black Tree\nA Segment Tree - with min/max/sum range queries examples\nA Fenwick Tree (Binary Indexed Tree)\n\n\nA Graph (both directed and undirected)\nA Disjoint Set\nA Bloom Filter\n\nAlgorithms\nAn algorithm is an unambiguous specification of how to solve a class of problems. It is\na set of rules that precisely define a sequence of operations.\nB - Beginner, A - Advanced\nAlgorithms by Topic\n\nMath\n\nB Bit Manipulation - set/get/update/clear bits, multiplication/division by two, make negative etc.\nB Factorial\nB Fibonacci Number - classic and closed-form versions\nB Primality Test (trial division method)\nB Euclidean Algorithm - calculate the Greatest Common Divisor (GCD)\nB Least Common Multiple (LCM)\nB Sieve of Eratosthenes - finding all prime numbers up to any given limit\nB Is Power of Two - check if the number is power of two (naive and bitwise algorithms)\nB Pascal's Triangle\nB Complex Number - complex numbers and basic operations with them\nB Radian & Degree - radians to degree and backwards conversion\nB Fast Powering\nA Integer Partition\nA Square Root - Newton's method\nA Liu Hui \u03c0 Algorithm - approximate \u03c0 calculations based on N-gons\nA Discrete Fourier Transform - decompose a function of time (a signal) into the frequencies that make it up\n\n\nSets\n\nB Cartesian Product - product of multiple sets\nB Fisher\u2013Yates Shuffle - random permutation of a finite sequence\nA Power Set - all subsets of a set (bitwise and backtracking solutions)\nA Permutations (with and without repetitions)\nA Combinations (with and without repetitions)\nA Longest Common Subsequence (LCS)\nA Longest Increasing Subsequence\nA Shortest Common Supersequence (SCS)\nA Knapsack Problem - \"0/1\" and \"Unbound\" ones\nA Maximum Subarray - \"Brute Force\" and \"Dynamic Programming\" (Kadane's) versions\nA Combination Sum - find all combinations that form specific sum\n\n\nStrings\n\nB Hamming Distance - number of positions at which the symbols are different\nA Levenshtein Distance - minimum edit distance between two sequences\nA Knuth\u2013Morris\u2013Pratt Algorithm (KMP Algorithm) - substring search (pattern matching)\nA Z Algorithm - substring search (pattern matching)\nA Rabin Karp Algorithm - substring search\nA Longest Common Substring\nA Regular Expression Matching\n\n\nSearches\n\nB Linear Search\nB Jump Search (or Block Search) - search in sorted array\nB Binary Search - search in sorted array\nB Interpolation Search - search in uniformly distributed sorted array\n\n\nSorting\n\nB Bubble Sort\nB Selection Sort\nB Insertion Sort\nB Heap Sort\nB Merge Sort\nB Quicksort - in-place and non-in-place implementations\nB Shellsort\nB Counting Sort\nB Radix Sort\n\n\nLinked Lists\n\nB Straight Traversal\nB Reverse Traversal\n\n\nTrees\n\nB Depth-First Search (DFS)\nB Breadth-First Search (BFS)\n\n\nGraphs\n\nB Depth-First Search (DFS)\nB Breadth-First Search (BFS)\nB Kruskal\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\nA Dijkstra Algorithm - finding shortest paths to all graph vertices from single vertex\nA Bellman-Ford Algorithm - finding shortest paths to all graph vertices from single vertex\nA Floyd-Warshall Algorithm - find shortest paths between all pairs of vertices\nA Detect Cycle - for both directed and undirected graphs (DFS and Disjoint Set based versions)\nA Prim\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\nA Topological Sorting - DFS method\nA Articulation Points - Tarjan's algorithm (DFS based)\nA Bridges - DFS based algorithm\nA Eulerian Path and Eulerian Circuit - Fleury's algorithm - Visit every edge exactly once\nA Hamiltonian Cycle - Visit every vertex exactly once\nA Strongly Connected Components - Kosaraju's algorithm\nA Travelling Salesman Problem - shortest possible route that visits each city and returns to the origin city\n\n\nCryptography\n\nB Polynomial Hash - rolling hash function based on polynomial\n\n\nMachine Learning\n\nB NanoNeuron - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)\n\n\nUncategorized\n\nB Tower of Hanoi\nB Square Matrix Rotation - in-place algorithm\nB Jump Game - backtracking, dynamic programming (top-down + bottom-up) and greedy examples\nB Unique Paths - backtracking, dynamic programming and Pascal's Triangle based examples\nB Rain Terraces - trapping rain water problem (dynamic programming and brute force versions)\nB Recursive Staircase - count the number of ways to reach to the top (4 solutions)\nA N-Queens Problem\nA Knight's Tour\n\n\n\nAlgorithms by Paradigm\nAn algorithmic paradigm is a generic method or approach which underlies the design of a class\nof algorithms. It is an abstraction higher than the notion of an algorithm, just as an\nalgorithm is an abstraction higher than a computer program.\n\nBrute Force - look at all the possibilities and selects the best solution\n\nB Linear Search\nB Rain Terraces - trapping rain water problem\nB Recursive Staircase - count the number of ways to reach to the top\nA Maximum Subarray\nA Travelling Salesman Problem - shortest possible route that visits each city and returns to the origin city\nA Discrete Fourier Transform - decompose a function of time (a signal) into the frequencies that make it up\n\n\nGreedy - choose the best option at the current time, without any consideration for the future\n\nB Jump Game\nA Unbound Knapsack Problem\nA Dijkstra Algorithm - finding shortest path to all graph vertices\nA Prim\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\nA Kruskal\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\n\n\nDivide and Conquer - divide the problem into smaller parts and then solve those parts\n\nB Binary Search\nB Tower of Hanoi\nB Pascal's Triangle\nB Euclidean Algorithm - calculate the Greatest Common Divisor (GCD)\nB Merge Sort\nB Quicksort\nB Tree Depth-First Search (DFS)\nB Graph Depth-First Search (DFS)\nB Jump Game\nB Fast Powering\nA Permutations (with and without repetitions)\nA Combinations (with and without repetitions)\n\n\nDynamic Programming - build up a solution using previously found sub-solutions\n\nB Fibonacci Number\nB Jump Game\nB Unique Paths\nB Rain Terraces - trapping rain water problem\nB Recursive Staircase - count the number of ways to reach to the top\nA Levenshtein Distance - minimum edit distance between two sequences\nA Longest Common Subsequence (LCS)\nA Longest Common Substring\nA Longest Increasing Subsequence\nA Shortest Common Supersequence\nA 0/1 Knapsack Problem\nA Integer Partition\nA Maximum Subarray\nA Bellman-Ford Algorithm - finding shortest path to all graph vertices\nA Floyd-Warshall Algorithm - find shortest paths between all pairs of vertices\nA Regular Expression Matching\n\n\nBacktracking - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test\nif it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a\ndifferent path of finding a solution. Normally the DFS traversal of state-space is being used.\n\nB Jump Game\nB Unique Paths\nB Power Set - all subsets of a set\nA Hamiltonian Cycle - Visit every vertex exactly once\nA N-Queens Problem\nA Knight's Tour\nA Combination Sum - find all combinations that form specific sum\n\n\nBranch & Bound - remember the lowest-cost solution found at each stage of the backtracking\nsearch, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of\na least-cost solution to the problem, in order to discard partial solutions with costs larger than the\nlowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space\ntree is being used.\n\nHow to use this repository\nInstall all dependencies\nnpm install\n\nRun ESLint\nYou may want to run it to check code quality.\nnpm run lint\n\nRun all tests\nnpm test\n\nRun tests by name\nnpm test -- 'LinkedList'\n\nPlayground\nYou may play with data-structures and algorithms in ./src/playground/playground.js file and write\ntests for it in ./src/playground/__test__/playground.test.js.\nThen just simply run the following command to test if your playground code works as expected:\nnpm test -- 'playground'\n\nUseful Information\nReferences\n\u25b6 Data Structures and Algorithms on YouTube\nBig O Notation\nBig O notation is used to classify algorithms according to how their running time or space requirements grow as the input size grows.\nOn the chart below you may find most common orders of growth of algorithms specified in Big O notation.\n\nSource: Big O Cheat Sheet.\nBelow is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.\n\n\n\nBig O Notation\nComputations for 10 elements\nComputations for 100 elements\nComputations for 1000 elements\n\n\n\n\nO(1)\n1\n1\n1\n\n\nO(log N)\n3\n6\n9\n\n\nO(N)\n10\n100\n1000\n\n\nO(N log N)\n30\n600\n9000\n\n\nO(N^2)\n100\n10000\n1000000\n\n\nO(2^N)\n1024\n1.26e+29\n1.07e+301\n\n\nO(N!)\n3628800\n9.3e+157\n4.02e+2567\n\n\n\nData Structure Operations Complexity\n\n\n\nData Structure\nAccess\nSearch\nInsertion\nDeletion\nComments\n\n\n\n\nArray\n1\nn\nn\nn\n\n\n\nStack\nn\nn\n1\n1\n\n\n\nQueue\nn\nn\n1\n1\n\n\n\nLinked List\nn\nn\n1\nn\n\n\n\nHash Table\n-\nn\nn\nn\nIn case of perfect hash function costs would be O(1)\n\n\nBinary Search Tree\nn\nn\nn\nn\nIn case of balanced tree costs would be O(log(n))\n\n\nB-Tree\nlog(n)\nlog(n)\nlog(n)\nlog(n)\n\n\n\nRed-Black Tree\nlog(n)\nlog(n)\nlog(n)\nlog(n)\n\n\n\nAVL Tree\nlog(n)\nlog(n)\nlog(n)\nlog(n)\n\n\n\nBloom Filter\n-\n1\n1\n-\nFalse positives are possible while searching\n\n\n\nArray Sorting Algorithms Complexity\n\n\n\nName\nBest\nAverage\nWorst\nMemory\nStable\nComments\n\n\n\n\nBubble sort\nn\nn2\nn2\n1\nYes\n\n\n\nInsertion sort\nn\nn2\nn2\n1\nYes\n\n\n\nSelection sort\nn2\nn2\nn2\n1\nNo\n\n\n\nHeap sort\nn\u00a0log(n)\nn\u00a0log(n)\nn\u00a0log(n)\n1\nNo\n\n\n\nMerge sort\nn\u00a0log(n)\nn\u00a0log(n)\nn\u00a0log(n)\nn\nYes\n\n\n\nQuick sort\nn\u00a0log(n)\nn\u00a0log(n)\nn2\nlog(n)\nNo\nQuicksort is usually done in-place with O(log(n)) stack space\n\n\nShell sort\nn\u00a0log(n)\ndepends on gap sequence\nn\u00a0(log(n))2\n1\nNo\n\n\n\nCounting sort\nn + r\nn + r\nn + r\nn + r\nYes\nr - biggest number in array\n\n\nRadix sort\nn * k\nn * k\nn * k\nn + k\nYes\nk - length of longest key\n\n\n\n\n"}, {"repo": "mrdoob/three.js", "language": "JavaScript", "readme": "\nthree.js\n\n\n\n\n\n\nJavaScript 3D library\nThe aim of the project is to create an easy to use, lightweight, 3D library with a default WebGL renderer. The library also provides Canvas 2D, SVG and CSS3D renderers in the examples.\nExamples \u2014\nDocumentation \u2014\nWiki \u2014\nMigrating \u2014\nQuestions \u2014\nForum \u2014\nGitter \u2014\nSlack\nUsage\nDownload the minified library and include it in your HTML, or install and import it as a module,\nAlternatively, see how to build the library yourself.\n<script src=\"js/three.min.js\"></script>\nThis code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a WebGL renderer for the scene and camera, and it adds that viewport to the document.body element. Finally, it animates the cube within the scene for the camera.\nvar camera, scene, renderer;\nvar geometry, material, mesh;\n\ninit();\nanimate();\n\nfunction init() {\n\n\tcamera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );\n\tcamera.position.z = 1;\n\n\tscene = new THREE.Scene();\n\n\tgeometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );\n\tmaterial = new THREE.MeshNormalMaterial();\n\n\tmesh = new THREE.Mesh( geometry, material );\n\tscene.add( mesh );\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\tdocument.body.appendChild( renderer.domElement );\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tmesh.rotation.x += 0.01;\n\tmesh.rotation.y += 0.02;\n\n\trenderer.render( scene, camera );\n\n}\nIf everything went well you should see this.\nChange log\nReleases\n\n"}, {"repo": "danistefanovic/build-your-own-x", "language": "None", "readme": "\n[Submit tutorial]\n\nTable of contents\n\n3D Renderer\nAugmented Reality\nBitTorrent Client\nBlockchain / Cryptocurrency\nBot\nCommand-Line Tool\nDatabase\nDocker\nEmulator / Virtual Machine\nFront-end Framework / Library\nGame\nGit\nNetwork Stack\nNeural Network\nOperating System\nPhysics Engine\nProgramming Language\nRegex Engine\nSearch Engine\nShell\nTemplate Engine\nText Editor\nVisual Recognition System\nVoxel Engine\nWeb Search Engine\nWeb Server\nUncategorized\n\nTutorials\nBuild your own 3D Renderer\n\nC++: Introduction to Ray Tracing: a Simple Method for Creating 3D Images\nC++: How OpenGL works: software rendering in 500 lines of code\nC++: Raycasting engine of Wolfenstein 3D\nC++: Physically Based Rendering:From Theory To Implementation\nC++: Rasterization: a Practical Implementation\nC# / TypeScript / JavaScript: Learning how to write a 3D soft engine from scratch in C#, TypeScript or JavaScript\nJava / JavaScript: Build your own 3D renderer\nJava: How to create your own simple 3D render engine in pure Java\nJavaScript / Pseudocode: Computer Graphics from scratch\nPython: A 3D Modeller\n\nBuild your own Augmented Reality\n\nC#: How To: Augmented Reality App Tutorial for Beginners with Vuforia and Unity 3D [video]\nC#: How To Unity ARCore [video]\nC#: AR Portal Tutorial with Unity [video]\nC#: How to create a Dragon in Augmented Reality in Unity ARCore [video]\nC#: How to Augmented Reality AR Tutorial: ARKit Portal to the Upside Down [video]\nPython: Augmented Reality with Python and OpenCV\n\nBuild your own BitTorrent Client\n\nC#: Building a BitTorrent client from scratch in C#\nNim: Writing a Bencode Parser\nNode.js: Write your own bittorrent client\nPython: A BitTorrent client in Python 3.5\n\nBuild your own Blockchain / Cryptocurrency\n\nATS: Functional Blockchain\nC#: Programming The Blockchain in C#\nCrystal: Write your own blockchain and PoW algorithm using Crystal\nGo: Building Blockchain in Go\nGo: Code your own blockchain in less than 200 lines of Go\nGo: Building A Simple Blockchain with Go\nJava: Creating Your First Blockchain with Java\nJavaScript: A cryptocurrency implementation in less than 1500 lines of code\nJavaScript: Build your own Blockchain in JavaScript\nJavaScript: Learn & Build a JavaScript Blockchain\nJavaScript: Creating a blockchain with JavaScript\nJavaScript: How To Launch Your Own Production-Ready Cryptocurrency\nJavaScript: Writing a Blockchain in Node.js\nKotlin: Let\u2019s implement a cryptocurrency in Kotlin\nPython: Learn Blockchains by Building One\nPython: Build your own blockchain: a Python tutorial\nPython: A Practical Introduction to Blockchain with Python\nPython: Let\u2019s Build the Tiniest Blockchain\nRuby: Programming Blockchains Step-by-Step (Manuscripts Book Edition)\nScala: How to build a simple actor-based blockchain\nTypeScript: Naivecoin: a tutorial for building a cryptocurrency\nTypeScript: NaivecoinStake: a tutorial for building a cryptocurrency with the Proof of Stake consensus\n\nBuild your own Bot\n\nHaskell: Roll your own IRC bot\nJava: How To Make a Scary Russian Twitter Bot With Java\nNode.js: Creating a Simple Facebook Messenger AI Bot with API.ai in Node.js\nNode.js: How to make a responsive telegram bot\nNode.js: Create a Discord bot\nNode.js: gifbot - Building a GitHub App\nNode.js: Building A Simple AI Chatbot With Web Speech API And Node.js\nPython: Chatbot Fundamentals: An interactive guide to writing bots in Python\nPython: How to Build Your First Slack Bot with Python\nPython: How to build a Slack Bot with Python using Slack Events API & Django under 20 minute\nPython: Build a Reddit Bot\nPython: How To Make A Reddit Bot [video]\nPython: How To Create a Telegram Bot Using Python\nPython: Create a Twitter Bot in Python Using Tweepy\nPython: Creating Reddit Bot with Python & PRAW [video]\nR: Build A Cryptocurrency Trading Bot with R\nRust: A bot for Starcraft in Rust, C or any other language\n\nBuild your own Command-Line Tool\n\nC: Rewriting the cat command from scratch [video]\nGo: Visualize your local git contributions with Go\nGo: Build a command line app with Go: lolcat\nGo: Building a cli command with Go: cowsay\nGo: Go CLI tutorial: fortune clone\nNim: Writing a stow alternative to manage dotfiles\n\nBuild your own Database\n\nC: Let's Build a Simple Database\nC++: Implementing a Key-Value Store\nC#: Build Your Own Database\nClojure: An Archaeology-Inspired Database\nCrystal: Why you should build your own NoSQL Database\nJavaScript: Dagoba: an in-memory graph database\nPython: DBDB: Dog Bed Database\nPython: Write your own miniature Redis with Python\n\nBuild your own Docker\n\nC: Linux containers in 500 lines of code\nGo: Build Your Own Container Using Less than 100 Lines of Go\nGo: Building a container from scratch in Go [video]\nPython: A workshop on Linux containers: Rebuild Docker from Scratch\nPython: A proof-of-concept imitation of Docker, written in 100% Python\nShell: Docker implemented in around 100 lines of bash\n\nBuild your own Emulator / Virtual Machine\n\nC: Virtual machine in C\nC: Write your Own Virtual Machine\nC: Writing a Game Boy emulator, Cinoop\nC++: How to write an emulator (CHIP-8 interpreter)\nC++: Emulation tutorial (CHIP-8 interpreter)\nC++: Emulation tutorial (GameBoy emulator)\nC++: Emulation tutorial (Master System emulator)\nCommon Lisp: CHIP-8 in Common Lisp\nJavaScript: GameBoy Emulation in JavaScript\nPython: Emulation Basics: Write your own Chip 8 Emulator/Interpreter\n\nBuild your own Front-end Framework / Library\n\nJavaScript: WTF is JSX (Let's Build a JSX Renderer)\nJavaScript: A DIY guide to build your own React\nJavaScript: Reverse Engineering React [video]\nJavaScript: Building React From Scratch [video]\nJavaScript: Building Your Own React Clone in Five Easy Steps\nJavaScript: Gooact: React in 160 lines of JavaScript\nJavaScript: React Internals\nJavaScript: Learn how React Reconciler package works by building your own lightweight React DOM\nJavaScript: Build Yourself a Redux\nJavaScript: Let\u2019s Write Redux!\nJavaScript: Redux: Implementing Store from Scratch [video]\nJavaScript: Build Your own Simplified AngularJS in 200 Lines of JavaScript\nJavaScript: Make Your Own AngularJS\nJavaScript: How to write your own Virtual DOM\nJavaScript: Building a frontend framework, from scratch, with components (templating, state, VDOM)\nJavaScript: Build your own React\n\nBuild your own Game\n\nC: Handmade Hero\nC: How to Program an NES game in C\nC: Chess Engine In C [video]\nC: Let's Make: Dangerous Dave [video]\nC: Learn Video Game Programming in C\n[video]\nC: Coding A Sudoku Solver in C [video]\nC: Coding a Rogue/Nethack RPG in C [video]\nC: On Tetris and Reimplementation\nC++: Breakout\nC++: Beginning Game Programming v2.0\nC++: Tetris tutorial in C++ platform independent focused in game logic for beginners\nC++: Remaking Cavestory in C++ [video]\nC++: Reconstructing Cave Story [video]\nC++: Space Invaders from Scratch\nC#: Learn C# by Building a Simple RPG\nC#: Creating a Roguelike Game in C#\nC#: Build a C#/WPF RPG\nGo: Games With Go [video]\nJava: 3D Game Development with LWJGL 3\nJavaScript: 2D breakout game using Phaser\nJavaScript: How to Make Flappy Bird in HTML5 With Phaser\nJavaScript: Developing Games with React, Redux, and SVG\nJavaScript: Build your own 8-Ball Pool game from scratch [video]\nJavaScript: How to Make Your First Roguelike\nJavaScript: Think like a programmer: How to build Snake using only JavaScript, HTML & CSS\nLua: BYTEPATH\nPython: Developing Games With PyGame\nPython: Making Games with Python & Pygame [pdf]\nPython: The Complete Roguelike Tutorial [video]\nPython: Roguelike Tutorial Revised\nRuby: Developing Games With Ruby\nRuby: Ruby Snake\nRust: Adventures in Rust: A Basic 2D Game\nRust: Roguelike Tutorial in Rust + tcod\n\nBuild your own Git\n\nHaskell: Reimplementing \u201cgit clone\u201d in Haskell from the bottom up\nJavaScript: Gitlet\nJavaScript: Build GIT - Learn GIT\nPython: Just enough of a Git client to create a repo, commit, and push itself to GitHub\nPython: Write yourself a Git!\nRuby: Rebuilding Git in Ruby\n\nBuild your own Network Stack\n\nC: Beej's Guide to Network Programming\nC: Let's code a TCP/IP stack\nRuby: How to build a network stack in Ruby\n\nBuild your own Neural Network\n\nC#: Neural Network OCR\nF#: Building Neural Networks in F#\nGo: Build a multilayer perceptron with Golang\nGo: How to build a simple artificial neural network with Go\nGo: Building a Neural Net from Scratch in Go\nJavaScript / Java: Neural Networks - The Nature of Code [video]\nJavaScript: Neural Network implementation in JavaScript, by an example\nJavaScript: Neural networks from scratch for JavaScript linguists (Part1\u200a\u2014\u200aThe Perceptron)\nPython: A Neural Network in 11 lines of Python\nPython: Implement a Neural Network from Scratch\nPython: Optical Character Recognition (OCR)\nPython: Traffic signs classification with a convolutional network\nPython: Generate Music using LSTM Neural Network in Keras\nPython: An Introduction to Convolutional Neural Networks\n\nBuild your own Operating System\n\nAssembly: Writing a Tiny x86 Bootloader\nAssembly: Baking Pi \u2013 Operating Systems Development\nC: Building a software and hardware stack for a simple computer from scratch [video]\nC: Operating Systems: From 0 to 1\nC: The little book about OS development\nC: Roll your own toy UNIX-clone OS\nC: Kernel 101 \u2013 Let\u2019s write a Kernel\nC: Kernel 201 \u2013 Let\u2019s write a Kernel with keyboard and screen support\nC: Build a minimal multi-tasking kernel for ARM from scratch\nC: How to create an OS from scratch\nC: Malloc tutorial\nC: Hack the virtual memory\nC: Learning operating system development using Linux kernel and Raspberry Pi\nC: Operating systems development for Dummies\nC++: Write your own Operating System [video]\nC++: Writing a Bootloader\nRust: Writing an OS in Rust\n\nBuild your own Physics Engine\n\nC: Video Game Physics Tutorial\nC++: Game physics series by Allen Chou\nC++: How to Create a Custom Physics Engine\nC++: 3D Physics Engine Tutorial [video]\nC#: TowerFall Physics\nJavaScript: Build your own basic physics engine in JavaScript\nJavaScript: How Physics Engines Work\nJavaScript: Broad Phase Collision Detection Using Spatial Partitioning\nJavaScript: Build a simple 2D physics engine for JavaScript games\n\nBuild your own Programming Language\n\n(any): mal - Make a Lisp\nAssembly: Jonesforth\nC: Baby's First Garbage Collector\nC: Build Your Own Lisp: Learn C and build your own programming language in 1000 lines of code\nC: Writing a Simple Garbage Collector in C\nC: C interpreter that interprets itself.\nC: A C & x86 version of the \"Let's Build a Compiler\" by Jack Crenshaw\nC++: Writing Your Own Toy Compiler Using Flex\nC++: How to Create a Compiler [video]\nC++: Kaleidoscope: Implementing a Language with LLVM\nF#: Understanding Parser Combinators\nElixir: Demystifying compilers by writing your own [video]\nGo: The Super Tiny Compiler\nGo: Lexical Scanning in Go [video]\nHaskell: Let's Build a Compiler\nHaskell: Write You a Haskell\nHaskell: Write Yourself a Scheme in 48 Hours\nHaskell: Write You A Scheme\nJava: Crafting interpreters: A handbook for making programming languages\nJava: Creating JVM Language\nJavaScript: The Super Tiny Compiler\nJavaScript: The Super Tiny Interpreter\nJavaScript: Little Lisp interpreter\nJavaScript: How to implement a programming language in JavaScript\nOCaml: Writing a C Compiler\nOCaml: Writing a Lisp, the series\nPascal: Let's Build a Compiler\nPython: A Python Interpreter Written in Python\nPython: lisp.py: Make your own Lisp interpreter\nPython: Simple Iterator-based Parsing\nPython: Simple Top-Down Parsing in Python\nPython: How to Write a Lisp Interpreter in Python\nPython: Let\u2019s Build A Simple Interpreter\nPython: Make Your Own Simple Interpreted Programming Language [video]\nRacket: Beautiful Racket: How to make your own programming languages with Racket\nRuby: A Compiler From Scratch\nRuby: Markdown compiler from scratch in Ruby\nRust: So You Want to Build a Language VM\nRust: Learning Parser Combinators With Rust\nSwift: Building a LISP from scratch with Swift\nTypeScript: Build your own WebAssembly Compiler\n\nBuild your own Regex Engine\n\nC: A Regular Expression Matcher\nC: Regular Expression Matching Can Be Simple And Fast\nJavaScript: Build a Regex Engine in Less than 40 Lines of Code\nJavaScript: How to implement regular expressions in functional javascript using derivatives\nPerl: How Regexes Work\nScala: No Magic: Regular Expressions\n\nBuild your own Search Engine\n\nCSS: A search engine in CSS\nPython: Building a search engine using Redis and redis-py\nPython: Building a Vector Space Indexing Engine in Python\nPython: Building A Python-Based Search Engine [video]\nPython: Making text search learn from feedback\nPython: Finding Important Words in Text Using TF-IDF\n\nBuild your own Shell\n\nC: Tutorial - Write a Shell in C\nC: Let's build a shell!\nC: Writing a UNIX Shell\nC: Build Your Own Shell\nGo: Writing a simple shell in Go\nRuby: A Unix Shell in Ruby\nRust: Build Your Own Shell using Rust\n\nBuild your own Template Engine\n\nJavaScript: JavaScript template engine in just 20 lines\nJavaScript: Understanding JavaScript Micro-Templating\nPython: Approach: Building a toy template engine in Python\nPython: A Template Engine\nRuby: How to write a template engine in less than 30 lines of code\n\nBuild your own Text Editor\n\nC: Build Your Own Text Editor\nC++: Designing a Simple Text Editor\nPython: Python Tutorial: Make Your Own Text Editor [video]\nPython: Create a Simple Python Text Editor!\nRuby: Build a Collaborative Text Editor Using Rails\n\nBuild your own Visual Recognition System\n\nPython: Developing a License Plate Recognition System with Machine Learning in Python\nPython: Building a Facial Recognition Pipeline with Deep Learning in Tensorflow\n\nBuild your own Voxel Engine\n\nC++: Let's Make a Voxel Engine\nJava: Let's make a voxel engine [video]\nJava: Java Voxel Engine Tutorial [video]\n\nBuild your own Web Search Engine\n\nPHP: Code a Search Engine in PHP\nRuby: Write an Internet search engine with 200 lines of Ruby code\n\nBuild your own Web Server\n\nC#: Writing a Web Server from Scratch\nNode.js: Let's code a web server from scratch with NodeJS Streams\nNode.js: lets-build-express\nPHP: Writing a webserver in pure PHP\nPython: A Simple Web Server\nPython: Let\u2019s Build A Web Server.\nPython: Web application from scratch\nPython: Building a basic HTTP Server from scratch in Python\nPython: Implementing a RESTful Web API with Python & Flask\nRuby: Building a simple websockets server from scratch in Ruby\n\nUncategorized\n\n(any): From NAND to Tetris: Building a Modern Computer From First Principles\nAlloy: The Same-Origin Policy\nC: How to Write a Video Player in Less Than 1000 Lines\nC: Learn how to write a hash table in C\nC: The very basics of a terminal emulator\nC: Write a System Call\nC: Sol - An MQTT broker from scratch\nC++: Build your own VR headset for $100\nC++: How X Window Managers work and how to write one\nC++: Writing a Linux Debugger\nC++: How a 64k intro is made\nC#: C# Networking: Create a TCP chater server, TCP games, UDP Pong and more\nC#: Loading and rendering 3D skeletal animations from scratch in C# and GLSL\nClojure: Building a spell-checker\nGo, Let's Create a Simple Load Balancer\nJava: How to Build an Android Reddit App [video]\nJavaScript: Build Your Own Module Bundler - Minipack\nJavaScript: Learn JavaScript Promises by Building a Promise from Scratch\nJavaScript: Implementing promises from scratch (TDD way)\nJavaScript: Implement your own\u200a\u2014\u200acall(), apply() and bind() method in JavaScript\nJavaScript: JavaScript Algorithms and Data Structures\nJavaScript: How to Make an Evolutionary Tetris AI [video]\nJavaScript: Build a ride hailing app with React Native\nKotlin: Build Your Own Cache\nNim: Writing a Redis Protocol Parser\nNim: Writing a Build system\nNim: Writing a MiniTest Framework\nNim: Writing a DMIDecode Parser\nNim: Writing a INI Parser\nNim: Writing a Link Checker\nNim: Writing a URL Shortening Service\nNode.js: Build a static site generator in 40 lines with Node.js\nNode.js: Building A Simple Single Sign On(SSO) Server And Solution From Scratch In Node.js.\nNode.js: How to create a real-world Node CLI app with Node\nPHP: Write your own MVC from scratch in PHP \nPHP: Make your own blog\nPHP: Modern PHP Without a Framework\nPython: Build a Deep Learning Library [video]\nPython: How to Build a Kick-Ass Mobile Document Scanner in Just 5 Minutes\nPython: Continuous Integration System\nPython: Recommender Systems in Python: Beginner Tutorial\nPython: Write SMS-spam detector with Scikit-learn\nPython: A Simple Content-Based Recommendation Engine in Python\nPython: Stock Market Predictions with LSTM in Python\nPython: Build your own error-correction fountain code with Luby Transform Codes\nPython: Building a simple Generative Adversial Network (GAN) using Tensorflow\nPython: Learn ML Algorithms by coding: Decision Trees\nPython: JSON Decoding Algorithm\nRuby: A Pedometer in the Real World\nRuby: Creating a Linux Desktop application with Ruby\nRust: Let's build a browser engine\nRust: Building a DNS server in Rust\nRust: Writing Scalable Chat Service from Scratch\nTypeScript: Tiny Package Manager: Learns how npm or Yarn works\n\nHow to contribute\n\nContributions are very welcome: Submit tutorial\nHelp me to review pending submissions by leaving comments and \"reactions\"\n\nLicense\n\nTo the extent possible under law, Daniel Stefanovic has waived all copyright and related or neighboring rights to this work.\n\n"}, {"repo": "puppeteer/puppeteer", "language": "JavaScript", "readme": "\nPuppeteer\n    \n\nAPI | FAQ | Contributing | Troubleshooting\n\nPuppeteer is a Node library which provides a high-level API to control Chrome or Chromium over the DevTools Protocol. Puppeteer runs headless by default, but can be configured to run full (non-headless) Chrome or Chromium.\n\nWhat can I do?\nMost things that you can do manually in the browser can be done using Puppeteer! Here are a few examples to get you started:\n\nGenerate screenshots and PDFs of pages.\nCrawl a SPA (Single-Page Application) and generate pre-rendered content (i.e. \"SSR\" (Server-Side Rendering)).\nAutomate form submission, UI testing, keyboard input, etc.\nCreate an up-to-date, automated testing environment. Run your tests directly in the latest version of Chrome using the latest JavaScript and browser features.\nCapture a timeline trace of your site to help diagnose performance issues.\nTest Chrome Extensions.\n\nGive it a spin: https://try-puppeteer.appspot.com/\nGetting Started\nInstallation\nTo use Puppeteer in your project, run:\nnpm i puppeteer\n# or \"yarn add puppeteer\"\nNote: When you install Puppeteer, it downloads a recent version of Chromium (~170MB Mac, ~282MB Linux, ~280MB Win) that is guaranteed to work with the API. To skip the download, see Environment variables.\npuppeteer-core\nSince version 1.7.0 we publish the puppeteer-core package,\na version of Puppeteer that doesn't download Chromium by default.\nnpm i puppeteer-core\n# or \"yarn add puppeteer-core\"\npuppeteer-core is intended to be a lightweight version of Puppeteer for launching an existing browser installation or for connecting to a remote one. Be sure that the version of puppeteer-core you install is compatible with the\nbrowser you intend to connect to.\nSee puppeteer vs puppeteer-core.\nUsage\nPuppeteer follows the latest maintenance LTS version of Node.\nNote: Prior to v1.18.1, Puppeteer required at least Node v6.4.0. All subsequent versions rely on\nNode 8.9.0+. All examples below use async/await which is only supported in Node v7.6.0 or greater.\nPuppeteer will be familiar to people using other browser testing frameworks. You create an instance\nof Browser, open pages, and then manipulate them with Puppeteer's API.\nExample - navigating to https://example.com and saving a screenshot as example.png:\nSave file as example.js\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto('https://example.com');\n  await page.screenshot({path: 'example.png'});\n\n  await browser.close();\n})();\nExecute script on the command line\nnode example.js\nPuppeteer sets an initial page size to 800\u00d7600px, which defines the screenshot size. The page size can be customized  with Page.setViewport().\nExample - create a PDF.\nSave file as hn.js\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto('https://news.ycombinator.com', {waitUntil: 'networkidle2'});\n  await page.pdf({path: 'hn.pdf', format: 'A4'});\n\n  await browser.close();\n})();\nExecute script on the command line\nnode hn.js\nSee Page.pdf() for more information about creating pdfs.\nExample - evaluate script in the context of the page\nSave file as get-dimensions.js\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto('https://example.com');\n\n  // Get the \"viewport\" of the page, as reported by the page.\n  const dimensions = await page.evaluate(() => {\n    return {\n      width: document.documentElement.clientWidth,\n      height: document.documentElement.clientHeight,\n      deviceScaleFactor: window.devicePixelRatio\n    };\n  });\n\n  console.log('Dimensions:', dimensions);\n\n  await browser.close();\n})();\nExecute script on the command line\nnode get-dimensions.js\nSee Page.evaluate() for more information on evaluate and related methods like evaluateOnNewDocument and exposeFunction.\nDefault runtime settings\n1. Uses Headless mode\nPuppeteer launches Chromium in headless mode. To launch a full version of Chromium, set the headless option when launching a browser:\nconst browser = await puppeteer.launch({headless: false}); // default is true\n2. Runs a bundled version of Chromium\nBy default, Puppeteer downloads and uses a specific version of Chromium so its API\nis guaranteed to work out of the box. To use Puppeteer with a different version of Chrome or Chromium,\npass in the executable's path when creating a Browser instance:\nconst browser = await puppeteer.launch({executablePath: '/path/to/Chrome'});\nSee Puppeteer.launch() for more information.\nSee this article for a description of the differences between Chromium and Chrome. This article describes some differences for Linux users.\n3. Creates a fresh user profile\nPuppeteer creates its own Chromium user profile which it cleans up on every run.\nResources\n\nAPI Documentation\nExamples\nCommunity list of Puppeteer resources\n\nDebugging tips\n\n\nTurn off headless mode - sometimes it's useful to see what the browser is\ndisplaying. Instead of launching in headless mode, launch a full version of\nthe browser using  headless: false:\n const browser = await puppeteer.launch({headless: false});\n\n\n\nSlow it down - the slowMo option slows down Puppeteer operations by the\nspecified amount of milliseconds. It's another way to help see what's going on.\n const browser = await puppeteer.launch({\n   headless: false,\n   slowMo: 250 // slow down by 250ms\n });\n\n\n\nCapture console output - You can listen for the console event.\nThis is also handy when debugging code in page.evaluate():\n page.on('console', msg => console.log('PAGE LOG:', msg.text()));\n\n await page.evaluate(() => console.log(`url is ${location.href}`));\n\n\n\nUse debugger in application code browser\nThere are two execution context: node.js that is running test code, and the browser\nrunning application code being tested. This lets you debug code in the\napplication code browser; ie code inside evaluate().\n\n\nUse {devtools: true} when launching Puppeteer:\nconst browser = await puppeteer.launch({devtools: true});\n\n\nChange default test timeout:\njest: jest.setTimeout(100000);\njasmine: jasmine.DEFAULT_TIMEOUT_INTERVAL = 100000;\nmocha: this.timeout(100000); (don't forget to change test to use function and not '=>')\n\n\nAdd an evaluate statement with debugger inside / add  debugger to an existing evaluate statement:\nawait page.evaluate(() => {debugger;});\nThe test will now stop executing in the above evaluate statement, and chromium will stop in debug mode.\n\n\n\n\nUse debugger in node.js\nThis will let you debug test code. For example, you can step over await page.click() in the node.js script and see the click happen in the application code browser.\nNote that you won't be able to run await page.click() in\nDevTools console due to this Chromium bug. So if\nyou want to try something out, you have to add it to your test file.\n\nAdd debugger; to your test, eg:\ndebugger;\nawait page.click('a[target=_blank]');\n\n\nSet headless to false\nRun node --inspect-brk, eg node --inspect-brk node_modules/.bin/jest tests\nIn Chrome open chrome://inspect/#devices and click inspect\nIn the newly opened test browser, type F8 to resume test execution\nNow your debugger will be hit and you can debug in the test browser\n\n\n\nEnable verbose logging - internal DevTools protocol traffic\nwill be logged via the debug module under the puppeteer namespace.\n # Basic verbose logging\n env DEBUG=\"puppeteer:*\" node script.js\n\n # Protocol traffic can be rather noisy. This example filters out all Network domain messages\n env DEBUG=\"puppeteer:*\" env DEBUG_COLORS=true node script.js 2>&1 | grep -v '\"Network'\n\n\n\nDebug your Puppeteer (node) code easily, using ndb\n\n\n\n\nnpm install -g ndb (or even better, use npx!)\n\n\nadd a debugger to your Puppeteer (node) code\n\n\nadd ndb (or npx ndb) before your test command. For example:\nndb jest or ndb mocha (or npx ndb jest / npx ndb mocha)\n\n\ndebug your test inside chromium like a boss!\n\n\nContributing to Puppeteer\nCheck out contributing guide to get an overview of Puppeteer development.\nFAQ\nQ: Who maintains Puppeteer?\nThe Chrome DevTools team maintains the library, but we'd love your help and expertise on the project!\nSee Contributing.\nQ: What are Puppeteer\u2019s goals and principles?\nThe goals of the project are:\n\nProvide a slim, canonical library that highlights the capabilities of the DevTools Protocol.\nProvide a reference implementation for similar testing libraries. Eventually, these other frameworks could adopt Puppeteer as their foundational layer.\nGrow the adoption of headless/automated browser testing.\nHelp dogfood new DevTools Protocol features...and catch bugs!\nLearn more about the pain points of automated browser testing and help fill those gaps.\n\nWe adapt Chromium principles to help us drive product decisions:\n\nSpeed: Puppeteer has almost zero performance overhead over an automated page.\nSecurity: Puppeteer operates off-process with respect to Chromium, making it safe to automate potentially malicious pages.\nStability: Puppeteer should not be flaky and should not leak memory.\nSimplicity: Puppeteer provides a high-level API that\u2019s easy to use, understand, and debug.\n\nQ: Is Puppeteer replacing Selenium/WebDriver?\nNo. Both projects are valuable for very different reasons:\n\nSelenium/WebDriver focuses on cross-browser automation; its value proposition is a single standard API that works across all major browsers.\nPuppeteer focuses on Chromium; its value proposition is richer functionality and higher reliability.\n\nThat said, you can use Puppeteer to run tests against Chromium, e.g. using the community-driven jest-puppeteer. While this probably shouldn\u2019t be your only testing solution, it does have a few good points compared to WebDriver:\n\nPuppeteer requires zero setup and comes bundled with the Chromium version it works best with, making it very easy to start with. At the end of the day, it\u2019s better to have a few tests running chromium-only, than no tests at all.\nPuppeteer has event-driven architecture, which removes a lot of potential flakiness. There\u2019s no need for evil \u201csleep(1000)\u201d calls in puppeteer scripts.\nPuppeteer runs headless by default, which makes it fast to run. Puppeteer v1.5.0 also exposes browser contexts, making it possible to efficiently parallelize test execution.\nPuppeteer shines when it comes to debugging: flip the \u201cheadless\u201d bit to false, add \u201cslowMo\u201d, and you\u2019ll see what the browser is doing. You can even open Chrome DevTools to inspect the test environment.\n\nQ: Why doesn\u2019t Puppeteer v.XXX work with Chromium v.YYY?\nWe see Puppeteer as an indivisible entity with Chromium. Each version of Puppeteer bundles a specific version of Chromium \u2013 the only version it is guaranteed to work with.\nThis is not an artificial constraint: A lot of work on Puppeteer is actually taking place in the Chromium repository. Here\u2019s a typical story:\n\nA Puppeteer bug is reported: https://github.com/puppeteer/puppeteer/issues/2709\nIt turned out this is an issue with the DevTools protocol, so we\u2019re fixing it in Chromium: https://chromium-review.googlesource.com/c/chromium/src/+/1102154\nOnce the upstream fix is landed, we roll updated Chromium into Puppeteer: https://github.com/puppeteer/puppeteer/pull/2769\n\nHowever, oftentimes it is desirable to use Puppeteer with the official Google Chrome rather than Chromium. For this to work, you should install a puppeteer-core version that corresponds to the Chrome version.\nFor example, in order to drive Chrome 71 with puppeteer-core, use chrome-71 npm tag:\nnpm install puppeteer-core@chrome-71\nQ: Which Chromium version does Puppeteer use?\nLook for chromium_revision in package.json. To find the corresponding Chromium commit and version number, search for the revision prefixed by an r in OmahaProxy's \"Find Releases\" section.\nQ: What\u2019s considered a \u201cNavigation\u201d?\nFrom Puppeteer\u2019s standpoint, \u201cnavigation\u201d is anything that changes a page\u2019s URL.\nAside from regular navigation where the browser hits the network to fetch a new document from the web server, this includes anchor navigations and History API usage.\nWith this definition of \u201cnavigation,\u201d Puppeteer works seamlessly with single-page applications.\nQ: What\u2019s the difference between a \u201ctrusted\" and \"untrusted\" input event?\nIn browsers, input events could be divided into two big groups: trusted vs. untrusted.\n\nTrusted events: events generated by users interacting with the page, e.g. using a mouse or keyboard.\nUntrusted event: events generated by Web APIs, e.g. document.createEvent or element.click() methods.\n\nWebsites can distinguish between these two groups:\n\nusing an Event.isTrusted event flag\nsniffing for accompanying events. For example, every trusted 'click' event is preceded by 'mousedown' and 'mouseup' events.\n\nFor automation purposes it\u2019s important to generate trusted events. All input events generated with Puppeteer are trusted and fire proper accompanying events. If, for some reason, one needs an untrusted event, it\u2019s always possible to hop into a page context with page.evaluate and generate a fake event:\nawait page.evaluate(() => {\n  document.querySelector('button[type=submit]').click();\n});\nQ: What features does Puppeteer not support?\nYou may find that Puppeteer does not behave as expected when controlling pages that incorporate audio and video. (For example, video playback/screenshots is likely to fail.) There are two reasons for this:\n\nPuppeteer is bundled with Chromium \u2014 not Chrome \u2014 and so by default, it inherits all of Chromium's media-related limitations. This means that Puppeteer does not support licensed formats such as AAC or H.264. (However, it is possible to force Puppeteer to use a separately-installed version Chrome instead of Chromium via the executablePath option to puppeteer.launch. You should only use this configuration if you need an official release of Chrome that supports these media formats.)\nSince Puppeteer (in all configurations) controls a desktop version of Chromium/Chrome, features that are only supported by the mobile version of Chrome are not supported. This means that Puppeteer does not support HTTP Live Streaming (HLS).\n\nQ: I am having trouble installing / running Puppeteer in my test environment. Where should I look for help?\nWe have a troubleshooting guide for various operating systems that lists the required dependencies.\nQ: How do I try/test a prerelease version of Puppeteer?\nYou can check out this repo or install the latest prerelease from npm:\nnpm i --save puppeteer@next\nPlease note that prerelease may be unstable and contain bugs.\nQ: I have more questions! Where do I ask?\nThere are many ways to get help on Puppeteer:\n\nbugtracker\nStack Overflow\nslack channel\n\nMake sure to search these channels before posting your question.\n\n"}, {"repo": "laravel/laravel", "language": "PHP", "readme": "\n\n\n\n\n\n\n\nAbout Laravel\nLaravel is a web application framework with expressive, elegant syntax. We believe development must be an enjoyable and creative experience to be truly fulfilling. Laravel takes the pain out of development by easing common tasks used in many web projects, such as:\n\nSimple, fast routing engine.\nPowerful dependency injection container.\nMultiple back-ends for session and cache storage.\nExpressive, intuitive database ORM.\nDatabase agnostic schema migrations.\nRobust background job processing.\nReal-time event broadcasting.\n\nLaravel is accessible, powerful, and provides tools required for large, robust applications.\nLearning Laravel\nLaravel has the most extensive and thorough documentation and video tutorial library of all modern web application frameworks, making it a breeze to get started with the framework.\nIf you don't feel like reading, Laracasts can help. Laracasts contains over 1500 video tutorials on a range of topics including Laravel, modern PHP, unit testing, and JavaScript. Boost your skills by digging into our comprehensive video library.\nLaravel Sponsors\nWe would like to extend our thanks to the following sponsors for funding Laravel development. If you are interested in becoming a sponsor, please visit the Laravel Patreon page.\n\nVehikl\nTighten Co.\nKirschbaum Development Group\n64 Robots\nCubet Techno Labs\nCyber-Duck\nBritish Software Development\nWebdock, Fast VPS Hosting\nDevSquad\nUserInsights\nFragrantica\nSOFTonSOFA\nUser10\nSoumettre.fr\nCodeBrisk\n1Forge\nTECPRESSO\nRuntime Converter\nWebL'Agence\nInvoice Ninja\niMi digital\nEarthlink\nSteadfast Collective\nWe Are The Robots Inc.\nUnderstand.io\nAbdel Elrafa\nHyper Host\nAppoly\nOP.GG\n\nContributing\nThank you for considering contributing to the Laravel framework! The contribution guide can be found in the Laravel documentation.\nCode of Conduct\nIn order to ensure that the Laravel community is welcoming to all, please review and abide by the Code of Conduct.\nSecurity Vulnerabilities\nIf you discover a security vulnerability within Laravel, please send an e-mail to Taylor Otwell via taylor@laravel.com. All security vulnerabilities will be promptly addressed.\nLicense\nThe Laravel framework is open-sourced software licensed under the MIT license.\n\n"}, {"repo": "microsoft/TypeScript", "language": "TypeScript", "readme": "\nTypeScript\n\n\n\n\nTypeScript is a language for application-scale JavaScript. TypeScript adds optional types to JavaScript that support tools for large-scale JavaScript applications for any browser, for any host, on any OS. TypeScript compiles to readable, standards-based JavaScript. Try it out at the playground, and stay up to date via our blog and Twitter account.\nFind others who are using TypeScript at our community page.\nInstalling\nFor the latest stable version:\nnpm install -g typescript\nFor our nightly builds:\nnpm install -g typescript@next\nContribute\nThere are many ways to contribute to TypeScript.\n\nSubmit bugs and help us verify fixes as they are checked in.\nReview the source code changes.\nEngage with other TypeScript users and developers on StackOverflow.\nHelp each other in the TypeScript Community Discord.\nJoin the #typescript discussion on Twitter.\nContribute bug fixes.\nRead the language specification (docx,\npdf, md).\n\nThis project has adopted the Microsoft Open Source Code of Conduct. For more information see\nthe Code of Conduct FAQ or contact opencode@microsoft.com\nwith any additional questions or comments.\nDocumentation\n\nTypeScript in 5 minutes\nProgramming handbook\nLanguage specification\nHomepage\n\nBuilding\nIn order to build the TypeScript compiler, ensure that you have Git and Node.js installed.\nClone a copy of the repo:\ngit clone https://github.com/microsoft/TypeScript.git\nChange to the TypeScript directory:\ncd TypeScript\nInstall Gulp tools and dev dependencies:\nnpm install -g gulp\nnpm install\nUse one of the following to build and test:\ngulp local             # Build the compiler into built/local.\ngulp clean             # Delete the built compiler.\ngulp LKG               # Replace the last known good with the built one.\n                       # Bootstrapping step to be executed when the built compiler reaches a stable state.\ngulp tests             # Build the test infrastructure using the built compiler.\ngulp runtests          # Run tests using the built compiler and test infrastructure.\n                       # Some low-value tests are skipped when not on a CI machine - you can use the\n                       # --skipPercent=0 command to override this behavior and run all tests locally.\n                       # You can override the specific suite runner used or specify a test for this command.\n                       # Use --tests=<testPath> for a specific test and/or --runner=<runnerName> for a specific suite.\n                       # Valid runners include conformance, compiler, fourslash, project, user, and docker\n                       # The user and docker runners are extended test suite runners - the user runner\n                       # works on disk in the tests/cases/user directory, while the docker runner works in containers.\n                       # You'll need to have the docker executable in your system path for the docker runner to work.\ngulp runtests-parallel # Like runtests, but split across multiple threads. Uses a number of threads equal to the system\n                       # core count by default. Use --workers=<number> to adjust this.\ngulp baseline-accept   # This replaces the baseline test results with the results obtained from gulp runtests.\ngulp lint              # Runs eslint on the TypeScript source.\ngulp help              # List the above commands.\n\nUsage\nnode built/local/tsc.js hello.ts\nRoadmap\nFor details on our planned features and future direction please refer to our roadmap.\n\n"}, {"repo": "moby/moby", "language": "Go", "readme": "\nThe Moby Project\n\nMoby is an open-source project created by Docker to enable and accelerate software containerization.\nIt provides a \"Lego set\" of toolkit components, the framework for assembling them into custom container-based systems, and a place for all container enthusiasts and professionals to experiment and exchange ideas.\nComponents include container build tools, a container registry, orchestration tools, a runtime and more, and these can be used as building blocks in conjunction with other tools and projects.\nPrinciples\nMoby is an open project guided by strong principles, aiming to be modular, flexible and without too strong an opinion on user experience.\nIt is open to the community to help set its direction.\n\nModular: the project includes lots of components that have well-defined functions and APIs that work together.\nBatteries included but swappable: Moby includes enough components to build fully featured container system, but its modular architecture ensures that most of the components can be swapped by different implementations.\nUsable security: Moby provides secure defaults without compromising usability.\nDeveloper focused: The APIs are intended to be functional and useful to build powerful tools.\nThey are not necessarily intended as end user tools but as components aimed at developers.\nDocumentation and UX is aimed at developers not end users.\n\nAudience\nThe Moby Project is intended for engineers, integrators and enthusiasts looking to modify, hack, fix, experiment, invent and build systems based on containers.\nIt is not for people looking for a commercially supported system, but for people who want to work and learn with open source code.\nRelationship with Docker\nThe components and tools in the Moby Project are initially the open source components that Docker and the community have built for the Docker Project.\nNew projects can be added if they fit with the community goals. Docker is committed to using Moby as the upstream for the Docker Product.\nHowever, other projects are also encouraged to use Moby as an upstream, and to reuse the components in diverse ways, and all these uses will be treated in the same way. External maintainers and contributors are welcomed.\nThe Moby project is not intended as a location for support or feature requests for Docker products, but as a place for contributors to work on open source code, fix bugs, and make the code more useful.\nThe releases are supported by the maintainers, community and users, on a best efforts basis only, and are not intended for customers who want enterprise or commercial support; Docker EE is the appropriate product for these use cases.\n\nLegal\nBrought to you courtesy of our legal counsel. For more context,\nplease see the NOTICE document in this repo.\nUse and transfer of Moby may be subject to certain restrictions by the\nUnited States and other governments.\nIt is your responsibility to ensure that your use and/or transfer does not\nviolate applicable laws.\nFor more information, please see https://www.bis.doc.gov\nLicensing\nMoby is licensed under the Apache License, Version 2.0. See\nLICENSE for the full\nlicense text.\n\n"}, {"repo": "microsoft/terminal", "language": "C++", "readme": "\nWelcome to the Windows Terminal, Console and Command-Line repo\nThis repository contains the source code for:\n\nWindows Terminal\nThe Windows console host (conhost.exe)\nComponents shared between the two projects\nColorTool\nSample projects that show how to consume the Windows Console APIs\n\nRelated repositories include:\n\nConsole API Documentation\nCascadia Code Font\n\nInstalling and running Windows Terminal\n\n\ud83d\udc49 Note: Windows Terminal requires Windows 10 1903 (build 18362) or later\n\nManually installing builds from this repository\nFor users who are unable to install Terminal from the Microsoft Store, Terminal builds can be manually downloaded from this repository's Releases page.\n\n\u26a0 Note: If you install Terminal manually:\n\nBe sure to install the Desktop Bridge VC++ v14 Redistributable Package otherwise Terminal may not install and/or run and may crash at startup\nTerminal will not auto-update when new builds are released so you will need to regularly install the latest Terminal release to receive all the latest fixes and improvements!\n\n\nInstall via Chocolatey (unofficial)\nChocolatey users can download and install the latest Terminal release by installing the microsoft-windows-terminal package:\nchoco install microsoft-windows-terminal\nTo upgrade Windows Terminal using Chocolatey, run the following:\nchoco upgrade microsoft-windows-terminal\nIf you have any issues when installing/upgrading the package please go to the Windows Terminal package page and follow the Chocolatey triage process\n\nProject Build Status\n\n\n\nProject\nBuild Status\n\n\n\n\nTerminal\n\n\n\nColorTool\n\n\n\n\n\nWindows Terminal v1.0 Roadmap\nThe plan for delivering Windows Terminal v1.0 is described here, and will be updated as the project proceeds.\n\nTerminal & Console Overview\nPlease take a few minutes to review the overview below before diving into the code:\nWindows Terminal\nWindows Terminal is a new, modern, feature-rich, productive terminal application for command-line users. It includes many of the features most frequently requested by the Windows command-line community including support for tabs, rich text, globalization, configurability, theming & styling, and more.\nThe Terminal will also need to meet our goals and measures to ensure it remains fast and efficient, and doesn't consume vast amounts of memory or power.\nThe Windows Console Host\nThe Windows Console host, conhost.exe, is Windows' original command-line user experience. It also hosts Windows' command-line infrastructure and the Windows Console API server, input engine, rendering engine, user preferences, etc. The console host code in this repository is the actual source from which the conhost.exe in Windows itself is built.\nSince taking ownership of the Windows command-line in 2014, the team added several new features to the Console, including background transparency, line-based selection, support for ANSI / Virtual Terminal sequences, 24-bit color, a Pseudoconsole (\"ConPTY\"), and more.\nHowever, because Windows Console's primary goal is to maintain backward compatibility, we have been unable to add many of the features the community (and the team) have been wanting for the last several years including tabs, unicode text, and emoji.\nThese limitations led us to create the new Windows Terminal.\n\nYou can read more about the evolution of the command-line in general, and the Windows command-line specifically in this accompanying series of blog posts on the Command-Line team's blog.\n\nShared Components\nWhile overhauling Windows Console, we modernized its codebase considerably, cleanly separating logical entities into modules and classes, introduced some key extensibility points, replaced several old, home-grown collections and containers with safer, more efficient STL containers, and made the code simpler and safer by using Microsoft's Windows Implementation Libraries - WIL.\nThis overhaul resulted in several of Console's key components being available for re-use in any terminal implementation on Windows. These components include a new DirectWrite-based text layout and rendering engine, a text buffer capable of storing both UTF-16 and UTF-8, a VT parser/emitter, and more.\nCreating the new Windows Terminal\nWhen we started planning the new Windows Terminal application, we explored and evaluated several approaches and technology stacks. We ultimately decided that our goals would be best met by continuing our investment in our C++ codebase, which would allow us to reuse several of the aforementioned modernized components in both the existing Console and the new Terminal. Further, we realized that this would allow us to build much of the Terminal's core itself as a reusable UI control that others can incorporate into their own applications.\nThe result of this work is contained within this repo and delivered as the Windows Terminal application you can download from the Microsoft Store, or directly from this repo's releases.\n\nResources\nFor more information about Windows Terminal, you may find some of these resources useful and interesting:\n\nCommand-Line Blog\nCommand-Line Backgrounder Blog Series\nWindows Terminal Launch: Terminal \"Sizzle Video\"\nWindows Terminal Launch: Build 2019 Session\nRun As Radio: Show 645 - Windows Terminal with Richard Turner\nAzure Devops Podcast: Episode 54 - Kayla Cinnamon and Rich Turner on DevOps on the Windows Terminal\nMicrosoft Ignite 2019 Session: The Modern Windows Command Line: Windows Terminal - BRK3321\n\n\nFAQ\nI built and ran the new Terminal, but it looks just like the old console\nCause: You're launching the incorrect solution in Visual Studio.\nSolution: Make sure you're building & deploying the CascadiaPackage project in Visual Studio.\n\n\u26a0 Note: OpenConsole.exe is just a locally-built conhost.exe, the classic Windows Console that hosts Windows' command-line infrastructure. OpenConsole is used by Windows Terminal to connect to and communicate with command-line applications (via ConPty).\n\n\nDocumentation\nAll project documentation is located in the ./doc folder. If you would like to contribute to the documentation, please submit a pull request.\n\nContributing\nWe are excited to work alongside you, our amazing community, to build and enhance Windows Terminal!\nBEFORE you start work on a feature/fix, please read & follow our Contributor's Guide to help avoid any wasted or duplicate effort.\nCommunicating with the Team\nThe easiest way to communicate with the team is via GitHub issues.\nPlease file new issues, feature requests and suggestions, but DO search for similar open/closed pre-existing issues before creating a new issue.\nIf you would like to ask a question that you feel doesn't warrant an issue (yet), please reach out to us via Twitter:\n\nKayla Cinnamon, Program Manager: @cinnamon_msft\nRich Turner, Program Manager: @richturn_ms\nDustin Howett, Engineering Lead: @dhowett\nMichael Niksa, Senior Developer: @michaelniksa\nMike Griese, Developer: @zadjii\nCarlos Zamora, Developer: @cazamor_msft\n\nDeveloper Guidance\nPrerequisites\n\nYou must be running Windows 1903 (build >= 10.0.18362.0) or later to run Windows Terminal\nYou must enable Developer Mode in the Windows Settings app to locally install and run Windows Terminal\nYou must have the Windows 10 1903 SDK installed\nYou must have at least VS 2019 installed\nYou must install the following Workloads via the VS Installer. Note: Opening the solution in VS 2019 will prompt you to install missing components automatically:\n\nDesktop Development with C++\nUniversal Windows Platform Development\nThe following Individual Components\n\nC++ (v142) Universal Windows Platform Tools\n\n\n\n\n\nBuilding the Code\nThis repository uses git submodules for some of its dependencies. To make sure submodules are restored or updated, be sure to run the following prior to building:\ngit submodule update --init --recursive\nOpenConsole.sln may be built from within Visual Studio or from the command-line using a set of convenience scripts & tools in the /tools directory:\nBuilding in PowerShell\nImport-Module .\\tools\\OpenConsole.psm1\nSet-MsBuildDevEnvironment\nInvoke-OpenConsoleBuild\nBuilding in Cmd\n.\\tools\\razzle.cmd\nbcz\nDebugging Terminal\nTo debug Terminal in VS, right click on CascadiaPackage (in the Solution Explorer) and go to properties. In the Debug menu, change \"Application process\" and \"Background task process\" to \"Native Only\".\nYou should then be able to build & debug the Terminal project by hitting F5.\nDebugging\n\nTo debug in VS, right click on CascadiaPackage (from VS Solution Explorer) and go to properties, in the Debug menu, change \"Application process\" and \"Background task process\" to \"Native Only\".\n\nCoding Guidance\nPlease review these brief docs below about our coding practices.\n\n\ud83d\udc49 If you find something missing from these docs, feel free to contribute to any of our documentation files anywhere in the repository (or write some new ones!)\n\nThis is a work in progress as we learn what we'll need to provide people in order to be effective contributors to our project.\n\nCoding Style\nCode Organization\nExceptions in our legacy codebase\nHelpful smart pointers and macros for interfacing with Windows in WIL\n\n\nCode of Conduct\nThis project has adopted the Microsoft Open Source Code of Conduct.\nFor more information see the Code of Conduct FAQ or contact opencode@microsoft.com with any additional questions or comments.\n\n"}, {"repo": "angular/angular", "language": "TypeScript", "readme": "\n\n\n\n\nAngular\nAngular is a development platform for building mobile and desktop web applications using TypeScript/JavaScript and other languages.\nQuickstart\nGet started in 5 minutes.\nChangelog\nLearn about the latest improvements.\nWant to help?\nWant to file a bug, contribute some code, or improve documentation? Excellent! Read up on our\nguidelines for contributing and then check out one of our issues in the hotlist: community-help.\n\n"}, {"repo": "ant-design/ant-design", "language": "TypeScript", "readme": "\n\n\n\n\n\nAnt Design\n\nAn enterprise-class UI design language and React UI library.\n     \n    \n  \n\n\nEnglish | \u7b80\u4f53\u4e2d\u6587\n\u2728 Features\n\nAn enterprise-class UI design system for web applications.\nA set of high-quality React components out of the box.\nWritten in TypeScript with predictable static types.\nThe whole package of development and design resources and tools.\n\n\ud83d\udda5 Environment Support\n\nModern browsers and Internet Explorer 9+ (with polyfills)\nServer-side Rendering\nElectron\n\n\n\n\nIE / Edge\nFirefox\nChrome\nSafari\nOpera\nElectron\n\n\n\n\nIE9, IE10, IE11, Edge\nlast 2 versions\nlast 2 versions\nlast 2 versions\nlast 2 versions\nlast 2 versions\n\n\n\n\ud83d\udce6 Install\nnpm install antd\nyarn add antd\n\ud83d\udd28 Usage\nimport { DatePicker } from \"antd\";\nReactDOM.render(<DatePicker />, mountNode);\nAnd import style manually:\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\nOr import components on demand.\nTypeScript\nSee Use in TypeScript.\n\ud83c\udf0d Internationalization\nSee i18n.\n\ud83d\udd17 Links\n\nHome page\nComponents\nAnt Design Pro\nChange Log\nrc-components\nMobile UI\nAnt Design Icons\nAnt Design Colors\nAnt Design Pro Layout\nAnt Design Pro Blocks\nDark Theme\nLanding Pages\nMotion\nScaffold Market\nDeveloper Instruction\nVersioning Release Note\nFAQ\nCodeSandbox Template for bug reports\nAwesome Ant Design\nCustomize Theme\n\n\u2328\ufe0f Development\nUse Gitpod, a free online dev environment for GitHub.\n\nOr clone locally:\n$ git clone git@github.com:ant-design/ant-design.git\n$ cd ant-design\n$ npm install\n$ npm start\nOpen your browser and visit http://127.0.0.1:8001 , see more at Development.\n\ud83e\udd1d Contributing \nRead our contributing guide and let's build a better antd together.\nWe welcome all contributions. Please read our CONTRIBUTING.md first. You can submit any ideas as pull requests or as GitHub issues. If you'd like to improve code, check out the Development Instructions and have a good time! :)\nIf you are a collaborator, please follow our Pull Request principle to create a Pull Request by collaborator template.\n\n\u2764\ufe0f Sponsors and Backers  \n\n\n\n"}, {"repo": "iluwatar/java-design-patterns", "language": "Java", "readme": "\n\nDesign patterns implemented in Java\n\n\n\n\nIntroduction\nDesign patterns are the best formalized practices a programmer can use to\nsolve common problems when designing an application or system.\nDesign patterns can speed up the development process by providing tested, proven\ndevelopment paradigms.\nReusing design patterns help prevent subtle issues that cause major\nproblems, and it also improves code readability for coders and architects who\nare familiar with the patterns.\nGetting started\nThis site showcases Java Design Patterns. The solutions have been developed by\nexperienced programmers and architects from the open source community. The\npatterns can be browsed by their high level descriptions or by looking at their\nsource code. The source code examples are well commented and can be thought as\nprogramming tutorials how to implement a specific pattern. We use the most\npopular battle-proven open source Java technologies.\nBefore you dive into the material, you should be familiar with various\nsoftware design principles.\nAll designs should be as simple as possible. You should start with KISS, YAGNI,\nand Do The Simplest Thing That Could Possibly Work principles. Complexity and\npatterns should only be introduced when they are needed for practical\nextensibility.\nOnce you are familiar with these concepts you can start drilling down into\npatterns by any of the following approaches\n\nUsing difficulty tags, Difficulty-Beginner, Difficulty-Intermediate & Difficulty-Expert.\nUsing pattern categories, Creational, Behavioral, and others.\nSearch for a specific pattern. Can't find one? Please report a new pattern here.\n\nHopefully you find the object oriented solutions presented on this site useful\nin your architectures and have as much fun learning them as we had developing them.\nHow to contribute\nIf you are willing to contribute to the project you will find the relevant information in\nour developer wiki. We will help\nyou and answer your questions in the Gitter chatroom.\nLicense\nThis project is licensed under the terms of the MIT license.\n\n"}, {"repo": "30-seconds/30-seconds-of-code", "language": "JavaScript", "readme": "\n\n30 seconds of code\n\nShort JavaScript code snippets for all your development needs\n\n\nVisit our website to view our snippet collection.\nUse the Search page to find snippets that suit your needs. You can search by name, tag, language or using a snippet's description. Just start typing a term and see what comes up.\nBrowse the JavaScript Snippet List to see all the snippets in this project or click individual tags at the top of the same page to narrow down your search to a specific tag.\nClick on each snippet card to view the whole snippet, including code, explanation and examples.\nYou can use the button on the right side of a snippet card to copy the code to clipboard.\nIf you like the project, give it a star. It means a lot to the people maintaining it.\n\nWant to contribute?\n\nIf you want to help us improve, take a minute to read the Contribution Guidelines first.\nUse the Snippet Template to add new snippets to the collection.\nIf you find a problem with a specific snippet, please open an issue.\nIf you find a problem with the website, please report it in the web repository.\n\nCredits & Sponsors\n\nThis repository is maintained by the 30-seconds organization on GitHub.\nAll snippets are licensed under the CC0-1.0 License, unless explicitly stated otherwise.\nLogos, names and trademarks are not to be used without the explicit consent of the maintainers or owners of the 30 seconds GitHub organization.\nOur website is powered by Netlify, Gatsby, Travis CI & GitHub.\n\n\n"}, {"repo": "mui-org/material-ui", "language": "JavaScript", "readme": "\n\n\n\nMaterial-UI\n\nReact components that implement Google's Material Design.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstallation\nMaterial-UI is available as an npm package.\nStable channel v4\n// with npm\nnpm install @material-ui/core\n\n// with yarn\nyarn add @material-ui/core\nv3.x (Migration from v3 to v4)\nv0.x (Migration to v1)\nPlease note that @next will only point to pre-releases; to get the latest stable release use @latest instead.\nWho sponsors Material-UI?\nDiamond \ud83d\udc8e\n3/3 slots available\nDiamond Sponsors are those who have pledged $2,000/month and more to Material-UI.\nPlease contact us at diamond@material-ui.com to subscribe to this tier.\nGold \ud83c\udfc6\nvia Patreon\n\n\n\n\nvia OpenCollective\n\n\n\nGold Sponsors are those who have pledged $500/month and more to Material-UI.\nThere is more!\nSee the full list of our backers.\nUsage\nHere is a quick example to get you started, it's all you need:\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@material-ui/core/Button';\n\nfunction App() {\n  return (\n    <Button variant=\"contained\" color=\"primary\">\n      Hello World\n    </Button>\n  );\n}\n\nReactDOM.render(<App />, document.querySelector('#app'));\nYes, it's really all you need to get started as you can see in this live and interactive demo:\n\nQuestions\nFor how-to questions and other non-issues,\nplease use StackOverflow instead of Github issues.\nThere is a StackOverflow tag called \"material-ui\" that you can use to tag your questions.\nExamples\nAre you looking for an example project to get started?\nWe host some.\nDocumentation\nCheck out our documentation website.\nPremium Themes\nYou can find complete templates & themes in our premium themes section.\nContributing\nRead our contributing guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to Material-UI.\nNotice that contributions go far beyond pull requests and commits.\nAlthough we love giving you the opportunity to put your stamp on Material-UI, we also are thrilled to receive a variety of other contributions.\nChangelog\nRecently Updated?\nPlease read the changelog.\nRoadmap\nThe future plans and high priority features and enhancements can be found in the roadmap file.\nLicense\nThis project is licensed under the terms of the\nMIT license.\n\n"}, {"repo": "jquery/jquery", "language": "JavaScript", "readme": "\njQuery \u2014 New Wave JavaScript\n\n\nContribution Guides\nIn the spirit of open source software development, jQuery always encourages community code contribution. To help you get started and before you jump into writing code, be sure to read these important contribution guidelines thoroughly:\n\nGetting Involved\nCore Style Guide\nWriting Code for jQuery Foundation Projects\n\nEnvironments in which to use jQuery\n\nBrowser support\njQuery also supports Node, browser extensions, and other non-browser environments.\n\nWhat you need to build your own jQuery\nTo build jQuery, you need to have the latest Node.js/npm and git 1.7 or later. Earlier versions might work, but are not supported.\nFor Windows, you have to download and install git and Node.js.\nmacOS users should install Homebrew. Once Homebrew is installed, run brew install git to install git,\nand brew install node to install Node.js.\nLinux/BSD users should use their appropriate package managers to install git and Node.js, or build from source\nif you swing that way. Easy-peasy.\nHow to build your own jQuery\nClone a copy of the main jQuery git repo by running:\ngit clone git://github.com/jquery/jquery.git\nEnter the jquery directory and run the build script:\ncd jquery && npm run build\nThe built version of jQuery will be put in the dist/ subdirectory, along with the minified copy and associated map file.\nIf you want to create custom build or help with jQuery development, it would be better to install grunt command line interface as a global package:\nnpm install -g grunt-cli\n\nMake sure you have grunt installed by testing:\ngrunt -V\n\nNow by running the grunt command, in the jquery directory, you can build a full version of jQuery, just like with an npm run build command:\ngrunt\n\nThere are many other tasks available for jQuery Core:\ngrunt -help\n\nModules\nSpecial builds can be created that exclude subsets of jQuery functionality.\nThis allows for smaller custom builds when the builder is certain that those parts of jQuery are not being used.\nFor example, an app that only used JSONP for $.ajax() and did not need to calculate offsets or positions of elements could exclude the offset and ajax/xhr modules.\nAny module may be excluded except for core, and selector. To exclude a module, pass its path relative to the src folder (without the .js extension).\nSome example modules that can be excluded are:\n\najax: All AJAX functionality: $.ajax(), $.get(), $.post(), $.ajaxSetup(), .load(), transports, and ajax event shorthands such as .ajaxStart().\najax/xhr: The XMLHTTPRequest AJAX transport only.\najax/script: The <script> AJAX transport only; used to retrieve scripts.\najax/jsonp: The JSONP AJAX transport only; depends on the ajax/script transport.\ncss: The .css() method. Also removes all modules depending on css (including effects, dimensions, and offset).\ncss/showHide:  Non-animated .show(), .hide() and .toggle(); can be excluded if you use classes or explicit .css() calls to set the display property. Also removes the effects module.\ndeprecated: Methods documented as deprecated but not yet removed.\ndimensions: The .width() and .height() methods, including inner- and outer- variations.\neffects: The .animate() method and its shorthands such as .slideUp() or .hide(\"slow\").\nevent: The .on() and .off() methods and all event functionality. Also removes event/alias.\nevent/alias: All event attaching/triggering shorthands like .click() or .mouseover().\nevent/trigger: The .trigger() and .triggerHandler() methods. Used by the alias module.\noffset: The .offset(), .position(), .offsetParent(), .scrollLeft(), and .scrollTop() methods.\nwrap: The .wrap(), .wrapAll(), .wrapInner(), and .unwrap() methods.\ncore/ready: Exclude the ready module if you place your scripts at the end of the body. Any ready callbacks bound with jQuery() will simply be called immediately. However, jQuery(document).ready() will not be a function and .on(\"ready\", ...) or similar will not be triggered.\ndeferred: Exclude jQuery.Deferred. This also removes jQuery.Callbacks. Note that modules that depend on jQuery.Deferred(AJAX, effects, core/ready) will not be removed and will still expect jQuery.Deferred to be there. Include your own jQuery.Deferred implementation or exclude those modules as well (grunt custom:-deferred,-ajax,-effects,-core/ready).\nexports/global: Exclude the attachment of global jQuery variables ($ and jQuery) to the window.\nexports/amd: Exclude the AMD definition.\n\nThe build process shows a message for each dependent module it excludes or includes.\nAMD name\nAs an option, you can set the module name for jQuery's AMD definition. By default, it is set to \"jquery\", which plays nicely with plugins and third-party libraries, but there may be cases where you'd like to change this. Simply set the \"amd\" option:\ngrunt custom --amd=\"custom-name\"\nOr, to define anonymously, set the name to an empty string.\ngrunt custom --amd=\"\"\nCustom Build Examples\nTo create a custom build, first check out the version:\ngit pull; git checkout VERSION\nWhere VERSION is the version you want to customize. Then, make sure all Node dependencies are installed:\nnpm install\nCreate the custom build using the grunt custom option, listing the modules to be excluded.\nExclude all ajax functionality:\ngrunt custom:-ajax\nExcluding css removes modules depending on CSS: effects, offset, dimensions.\ngrunt custom:-css\nExclude a bunch of modules:\ngrunt custom:-ajax,-css,-deprecated,-dimensions,-effects,-event/alias,-offset,-wrap\nFor questions or requests regarding custom builds, please start a thread on the Developing jQuery Core section of the forum. Due to the combinatorics and custom nature of these builds, they are not regularly tested in jQuery's unit test process.\nRunning the Unit Tests\nMake sure you have the necessary dependencies:\nnpm install\nStart grunt watch or npm start to auto-build jQuery as you work:\ngrunt watch\nRun the unit tests with a local server that supports PHP. Ensure that you run the site from the root directory, not the \"test\" directory. No database is required. Pre-configured php local servers are available for Windows and Mac. Here are some options:\n\nWindows: WAMP download\nMac: MAMP download\nLinux: Setting up LAMP\nMongoose (most platforms)\n\nBuilding to a different directory\nTo copy the built jQuery files from /dist to another directory:\ngrunt && grunt dist:/path/to/special/location/\nWith this example, the output files would be:\n/path/to/special/location/jquery.js\n/path/to/special/location/jquery.min.js\nTo add a permanent copy destination, create a file in dist/ called \".destination.json\". Inside the file, paste and customize the following:\n{\n  \"/Absolute/path/to/other/destination\": true\n}\nAdditionally, both methods can be combined.\nEssential Git\nAs the source code is handled by the Git version control system, it's useful to know some features used.\nCleaning\nIf you want to purge your working directory back to the status of upstream, the following commands can be used (remember everything you've worked on is gone after these):\ngit reset --hard upstream/master\ngit clean -fdx\nRebasing\nFor feature/topic branches, you should always use the --rebase flag to git pull, or if you are usually handling many temporary \"to be in a github pull request\" branches, run the following to automate this:\ngit config branch.autosetuprebase local\n(see man git-config for more information)\nHandling merge conflicts\nIf you're getting merge conflicts when merging, instead of editing the conflicted files manually, you can use the feature\ngit mergetool. Even though the default tool xxdiff looks awful/old, it's rather useful.\nThe following are some commands that can be used there:\n\nCtrl + Alt + M - automerge as much as possible\nb - jump to next merge conflict\ns - change the order of the conflicted lines\nu - undo a merge\nleft mouse button - mark a block to be the winner\nmiddle mouse button - mark a line to be the winner\nCtrl + S - save\nCtrl + Q - quit\n\nQUnit Reference\nTest methods\nexpect( numAssertions );\nstop();\nstart();\nNote: QUnit's eventual addition of an argument to stop/start is ignored in this test suite so that start and stop can be passed as callbacks without worrying about their parameters.\nTest assertions\nok( value, [message] );\nequal( actual, expected, [message] );\nnotEqual( actual, expected, [message] );\ndeepEqual( actual, expected, [message] );\nnotDeepEqual( actual, expected, [message] );\nstrictEqual( actual, expected, [message] );\nnotStrictEqual( actual, expected, [message] );\nthrows( block, [expected], [message] );\nTest Suite Convenience Methods Reference (See test/data/testinit.js)\nReturns an array of elements with the given IDs\nq( ... );\nExample:\nq(\"main\", \"foo\", \"bar\");\n\n=> [ div#main, span#foo, input#bar ]\nAsserts that a selection matches the given IDs\nt( testName, selector, [ \"array\", \"of\", \"ids\" ] );\nExample:\nt(\"Check for something\", \"//[a]\", [\"foo\", \"bar\"]);\nFires a native DOM event without going through jQuery\nfireNative( node, eventType )\nExample:\nfireNative( jQuery(\"#elem\")[0], \"click\" );\nAdd random number to url to stop caching\nurl( \"some/url\" );\nExample:\nurl(\"index.html\");\n\n=> \"data/index.html?10538358428943\"\n\n\nurl(\"mock.php?foo=bar\");\n\n=> \"data/mock.php?foo=bar&10538358345554\"\nRun tests in an iframe\nSome tests may require a document other than the standard test fixture, and\nthese can be run in a separate iframe. The actual test code and assertions\nremain in jQuery's main test files; only the minimal test fixture markup\nand setup code should be placed in the iframe file.\ntestIframe( testName, fileName,\n  function testCallback(\n      assert, jQuery, window, document,\n\t  [ additional args ] ) {\n\t...\n  } );\nThis loads a page, constructing a url with fileName \"./data/\" + fileName.\nThe iframed page determines when the callback occurs in the test by\nincluding the \"/test/data/iframeTest.js\" script and calling\nstartIframeTest( [ additional args ] ) when appropriate. Often this\nwill be after either document ready or window.onload fires.\nThe testCallback receives the QUnit assert object created by testIframe\nfor this test, followed by the global jQuery, window, and document from\nthe iframe. If the iframe code passes any arguments to startIframeTest,\nthey follow the document argument.\nQuestions?\nIf you have any questions, please feel free to ask on the\nDeveloping jQuery Core forum or in #jquery on irc.freenode.net.\n\n"}, {"repo": "ossu/computer-science", "language": "None", "readme": "\n\nOpen Source Society University\n\n  Path to a free self-taught education in Computer Science!\n\n\n\n\n\n\n\n\n\n\n\n\nContents\n\nSummary\nCurriculum\n\nPrerequisites\nIntro CS\nCore CS\nAdvanced CS\nFinal project\nPro CS\n\n\nCode of conduct\nCommunity\n\nHow to show your progress\nTeam\n\n\nReferences\n\nSummary\nThe OSSU curriculum is a complete education in computer science using online materials.\nIt's not merely for career training or professional development.\nIt's for those who want a proper, well-rounded grounding in concepts fundamental to all computing disciplines,\nand for those who have the discipline, will, and (most importantly!) good habits to obtain this education largely on their own,\nbut with support from a worldwide community of fellow learners.\nIt is designed according to the degree requirements of undergraduate computer science majors, minus general education (non-CS) requirements,\nas it is assumed most of the people following this curriculum are already educated outside the field of CS.\nThe courses themselves are among the very best in the world, often coming from Harvard, Princeton, MIT, etc.,\nbut specifically chosen to meet the following criteria.\nCourses must:\n\nBe open for enrollment\nRun regularly (ideally in self-paced format, otherwise running at least once a month or so)\nFulfill the academic requirements of OSSU\nFit neatly into the progression of the curriculum with respect to topics and difficulty level\nBe of generally high quality in teaching materials and pedagogical principles\n\nWhen no course meets the above criteria, the coursework is supplemented with a book.\nWhen there are courses or books that don't fit into the curriculum but are otherwise of high quality,\nthey belong in extras/courses or extras/readings.\nOrganization. The curriculum is designed as follows:\n\nIntro CS: for students to try out CS and see if it's right for them\nCore CS: corresponds roughly to the first three years of a computer science curriculum, taking classes that all majors would be required to take\nAdvanced CS: corresponds roughly to the final year of a computer science curriculum, taking electives according to the student's interests\nFinal Project: a project for students to validate, consolidate, and display their knowledge, to be evaluated by their peers worldwide\nPro CS: graduate-level specializations students can elect to take after completing the above curriculum if they want to maximize their chances of getting a good job\n\nDuration. It is possible to finish Core CS within about 2 years if you plan carefully and devote roughly 18-22 hours/week to your studies.\nCourses in Core CS should be taken linearly if possible, but since a perfectly linear progression is rarely possible,\neach class's prerequisites are specified so that you can design a logical but non-linear progression\nbased on the class schedules and your own life plans.\nCost. All or nearly all course material prior to Pro CS is available for free.\nHowever, some courses may charge money for assignments/tests/projects to be graded.\nNote that Coursera offers financial aid.\nDecide how much or how little to spend based on your own time and budget;\njust remember that you can't purchase success!\nProcess. Students can work through the curriculum alone or in groups, in order or out of order.\n\nFor grouping up, please use the cohorts repository to find or create a cohort suited to you.\nWe recommend doing all courses in Core CS, only skipping a course when you are certain that you've already learned the material previously.\nFor simplicity, we recommend working through courses (especially Core CS) in order from top to bottom, as they have already been topologically sorted by their prerequisites.\nCourses in Advanced CS are electives. Choose one subject (e.g. Advanced programming) you want to become an expert in and take all the courses under that heading. You can also create your own custom subject, but we recommend getting validation from the community on the subject you choose.\n\nContent policy. If you plan on showing off some of your coursework publicly, you must share only files that you are allowed to.\nDo NOT disrespect the code of conduct that you signed in the beginning of each course!\nHow to contribute. Please see CONTRIBUTING.\nGetting help. Please check our Frequently Asked Questions, and if you cannot find the answer, file an issue or talk to our friendly community!\nCurriculum\nCurriculum version: 8.0.0 (see CHANGELOG)\n\nPrerequisites\nIntro CS\n\nIntroduction to Programming\nIntroduction to Computer Science\n\n\nCore CS\n\nCore programming\nCore math\nCore systems\nCore theory\nCore applications\n\n\nAdvanced CS\n\nAdvanced programming\nAdvanced math\nAdvanced systems\nAdvanced theory\nAdvanced applications\n\n\nFinal project\nPro CS\n\n\nPrerequisites\n\nCore CS assumes the student has already taken high school math and physics, including algebra, geometry, and pre-calculus.\nSome high school graduates will have already taken AP Calculus, but this is usually only about 3/4 of a college calculus class, so the calculus courses in the curriculum are still recommended.\nAdvanced CS assumes the student has already taken the entirety of Core CS\nand is knowledgeable enough now to decide which electives to take.\nNote that Advanced systems assumes the student has taken a basic physics course (e.g. AP Physics in high school).\n\nIntro CS\nIntroduction to Programming\nIf you've never written a for-loop, or don't know what a string is in programming, start here. Choose one of the two course series below. Either one will give you an introduction to programming that assumes no prior knowledge.\nTrying to decide between them?\nPython for Everyone will introduce you to a popular language and will quickly move to practical programming tasks - using web APIs and databases. This will give you a taste of what many professional developers do.\nFundamentals of Computing will also start by introducing you to Python. It then moves on to give an introduction to academic Computer Science topics, like sorting and recursion. This will give you a taste of what the following courses will be like. (Students who complete Fundamentals of Computing can skip Intro to Computer Science and begin Core CS.)\nTopics covered:\nsimple programs\nsimple data structures\n\n\n\nCourses\nEffort\nPrerequisites\n\n\n\n\nPython for Everyone\n58 hours\nnone\n\n\nFundamentals of Computing\n138 hours\nhigh school mathematics\n\n\n\nIntroduction to Computer Science\nThis course will introduce you to the world of computer science. Students who have been introduced to programming, either from the courses above or through study elsewhere, should take this course for a flavor of the material to come. If you finish the course wanting more, Computer Science is likely for you!\nTopics covered:\ncomputation\nimperative programming\nbasic data structures and algorithms\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nIntroduction to Computer Science and Programming using Python (alt)\n9 weeks\n15 hours/week\nhigh school algebra\n\n\n\nCore CS\nAll coursework under Core CS is required, unless otherwise indicated.\nCore programming\nTopics covered:\nfunctional programming\ndesign for testing\nprogram requirements\ncommon design patterns\nunit testing\nobject-oriented design\nJava\nstatic typing\ndynamic typing\nML-family languages (via Standard ML)\nLisp-family languages (via Racket)\nRuby\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nHow to Code - Simple Data\n7 weeks\n8-10 hours/week\nnone\n\n\nHow to Code - Complex Data\n6 weeks\n8-10 hours/week\nHow to Code: Simple Data\n\n\nSoftware Construction - Data Abstraction\n6 weeks\n8-10 hours/week\nHow to Code - Complex Data\n\n\nSoftware Construction - Object-Oriented Design\n6 weeks\n8-10 hours/week\nSoftware Construction - Data Abstraction\n\n\nProgramming Languages, Part A\n4 weeks\n8-16 hours/week\nrecommended: Java, C\n\n\nProgramming Languages, Part B\n3 weeks\n8-16 hours/week\nProgramming Languages, Part A\n\n\nProgramming Languages, Part C\n3 weeks\n8-16 hours/week\nProgramming Languages, Part B\n\n\n\nReadings\n\nRequired to learn about monads, laziness, purity: Learn You a Haskell for a Great Good!\n\nNote: probably the best resource to learn Haskell: Haskell Programming from First Principles paid\n\n\nRequired, to learn about logic programming, backtracking, unification: Learn Prolog Now!\n\nCore math\nTopics covered:\nlinear transformations\nmatrices\nvectors\nmathematical proofs\nnumber theory\ndifferential calculus\nintegral calculus\nsequences and series\ndiscrete mathematics\nbasic statistics\nO-notation\ngraph theory\nvector calculus\ndiscrete probability\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nEssence of Linear Algebra\n-\n-\npre-calculus\n\n\nLinear Algebra - Foundations to Frontiers (alt)\n15 weeks\n8 hours/week\nEssence of Linear Algebra\n\n\nCalculus 1A: Differentiation\n13 weeks\n6-10 hours/week\npre-calculus\n\n\nCalculus 1B: Integration\n13 weeks\n5-10 hours/week\nCalculus 1A\n\n\nCalculus 1C: Coordinate Systems & Infinite Series\n13 weeks\n5-10 hours/week\nCalculus 1B\n\n\nMathematics for Computer Science1\n13 weeks\n5 hours/week\nCalculus 1C\n\n\n\n1: Students struggling with MIT Math for CS can consider taking the Discrete Mathematics Specialization first.\nIt is more interactive but less comprehensive, and it costs money to unlock full interactivity.\nCore systems\nTopics covered:\nprocedural programming\nmanual memory management\nboolean algebra\ngate logic\nmemory\ncomputer architecture\nassembly\nmachine language\nvirtual machines\nhigh-level languages\ncompilers\noperating systems\nnetwork protocols\nand more\n\n\n\nCourses\nDuration\nEffort\nAdditional Text / Assignments\nPrerequisites\n\n\n\n\nIntroduction to Computer Science - CS50 (alt)\n12 weeks\n10-20 hours/week\nAfter the sections on C, skip to the next course. Why?\nintroductory programming\n\n\nBuild a Modern Computer from First Principles: From Nand to Tetris (alt)\n6 weeks\n7-13 hours/week\n-\nC-like programming language\n\n\nBuild a Modern Computer from First Principles: Nand to Tetris Part II \n6 weeks\n12-18 hours/week\n-\none of these programming languages, From Nand to Tetris Part I\n\n\nIntroduction to Computer Networking\n8 weeks\n4\u201312 hours/week\nAssignment 1Assignment 2Assignment 3Assignment 4\nalgebra, probability, basic CS\n\n\nops-class.org - Hack the Kernel\n15 weeks\n6 hours/week\nReplace course textbook with Operating Systems: Three Easy Pieces\nalgorithms\n\n\n\nCore theory\nTopics covered:\ndivide and conquer\nsorting and searching\nrandomized algorithms\ngraph search\nshortest paths\ndata structures\ngreedy algorithms\nminimum spanning trees\ndynamic programming\nNP-completeness\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nAlgorithms: Design and Analysis, Part I\n8 weeks\n4-8 hours/week\nany programming language, Mathematics for Computer Science\n\n\nAlgorithms: Design and Analysis, Part II\n8 weeks\n4-8 hours/week\nPart I\n\n\n\nCore applications\nTopics covered:\nAgile methodology\nREST\nsoftware specifications\nrefactoring\nrelational databases\ntransaction processing\ndata modeling\nneural networks\nsupervised learning\nunsupervised learning\nOpenGL\nraytracing\nblock ciphers\nauthentication\npublic key encryption\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nDatabases\n12 weeks\n8-12 hours/week\nsome programming, basic CS\n\n\nMachine Learning\n11 weeks\n4-6 hours/week\nlinear algebra\n\n\nComputer Graphics\n6 weeks\n12 hours/week\nC++ or Java, linear algebra\n\n\nCryptography I\n6 weeks\n5-7 hours/week\nlinear algebra, probability\n\n\nSoftware Engineering: Introduction\n6 weeks\n8-10 hours/week\nSoftware Construction - Object-Oriented Design\n\n\nSoftware Development Capstone Project\n6-7 weeks\n8-10 hours/week\nSoftware Engineering: Introduction\n\n\n\nAdvanced CS\nAfter completing every required course in Core CS, students should choose a subset of courses from Advanced CS based on interest.\nNot every course from a subcategory needs to be taken.\nBut students should take every course that is relevant to the field they intend to go into.\nThe Advanced CS study should then end with one of the Specializations under Advanced applications.\nA Specialization's Capstone, if taken, may act as the Final project, if permitted by the Honor Code of the course.\nIf not, or if a student chooses not to take the Capstone, then a separate Final project will need to be done to complete this curriculum.\nAdvanced programming\nTopics covered:\ndebugging theory and practice\ngoal-oriented programming\nGPU programming\nCUDA\nparallel computing\nobject-oriented analysis and design\nUML\nlarge-scale software architecture and design\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nCompilers\n9 weeks\n6-8 hours/week\nnone\n\n\nSoftware Debugging\n8 weeks\n6 hours/week\nPython, object-oriented programming\n\n\nSoftware Testing\n4 weeks\n6 hours/week\nPython, programming experience\n\n\nLAFF - On Programming for Correctness\n7 weeks\n6 hours/week\nlinear algebra\n\n\nIntroduction to Parallel Programming (alt)\n12 weeks\n-\nC, algorithms\n\n\nSoftware Architecture & Design\n8 weeks\n6 hours/week\nsoftware engineering in Java\n\n\n\nAdvanced math\nTopics covered:\nparametric equations\npolar coordinate systems\nmultivariable integrals\nmultivariable differentials\nprobability theory\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nMultivariable Calculus\n13 weeks\n12 hours/week\nMIT Calculus 1C\n\n\nIntroduction to Probability - The Science of Uncertainty\n18 weeks\n12 hours/week\nMultivariable Calculus\n\n\n\nAdvanced systems\nTopics covered:\ndigital signaling\ncombinational logic\nCMOS technologies\nsequential logic\nfinite state machines\nprocessor instruction sets\ncaches\npipelining\nvirtualization\nparallel processing\nvirtual memory\nsynchronization primitives\nsystem call interface\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nReliable Distributed Systems, Part 1\n5 weeks\n5 hours/week\nScala, intermediate CS\n\n\nReliable Distributed Systems, Part 2\n5 weeks\n5 hours/week\nPart 1\n\n\nElectricity and Magnetism, Part 11\n7 weeks\n8-10 hours/week\ncalculus, basic mechanics\n\n\nElectricity and Magnetism, Part 2\n7 weeks\n8-10 hours/week\nElectricity and Magnetism, Part 1\n\n\nComputation Structures 1: Digital Circuits\n10 weeks\n6 hours/week\nelectricity, magnetism\n\n\nComputation Structures 2: Computer Architecture\n10 weeks\n6 hours/week\nComputation Structures 1\n\n\nComputation Structures 3: Computer Organization\n10 weeks\n6 hours/week\nComputation Structures 2\n\n\n\n1 Note:\nThese courses assume knowledge of basic physics.\n(Why?)\nIf you are struggling, you can find a physics MOOC or utilize the materials from Khan Academy:\nKhan Academy - Physics\nAdvanced theory\nTopics covered:\nformal languages\nTuring machines\ncomputability\nevent-driven concurrency\nautomata\ndistributed shared memory\nconsensus algorithms\nstate machine replication\ncomputational geometry theory\npropositional logic\nrelational logic\nHerbrand logic\nconcept lattices\ngame trees\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nIntroduction to Logic\n10 weeks\n4-8 hours/week\nset theory\n\n\nAutomata Theory\n7 weeks\n10 hours/week\ndiscrete mathematics, logic, algorithms\n\n\nComputational Geometry\n16 weeks\n8 hours/week\nalgorithms, C++\n\n\nIntroduction to Formal Concept Analysis\n6 weeks\n4-6 hours/week\nlogic, probability\n\n\nGame Theory\n8 weeks\nx hours/week\nmathematical thinking, probability, calculus\n\n\n\nAdvanced applications\nThese Coursera Specializations all end with a Capstone project.\nDepending on the course, you may be able to utilize the Capstone as your Final Project for this Computer Science curriculum.\nNote that doing a Specialization with the Capstone at the end always costs money.\nSo if you don't wish to spend money or use the Capstone as your Final, it may be possible to take the courses in the Specialization for free by manually searching for them, but not all allow this.\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nRobotics (Specialization)\n26 weeks\n2-5 hours/week\nlinear algebra, calculus, programming, probability\n\n\nData Mining (Specialization)\n30 weeks\n2-5 hours/week\nmachine learning\n\n\nBig Data (Specialization)\n30 weeks\n3-5 hours/week\nnone\n\n\nInternet of Things (Specialization)\n30 weeks\n1-5 hours/week\nstrong programming\n\n\nCloud Computing (Specialization)\n30 weeks\n2-6 hours/week\nC++ programming\n\n\nFull Stack Web Development (Specialization)\n27 weeks\n2-6 hours/week\nprogramming, databases\n\n\nData Science (Specialization)\n43 weeks\n1-6 hours/week\nnone\n\n\nFunctional Programming in Scala (Specialization)\n29 weeks\n4-5 hours/week\nOne year programming experience\n\n\n\nFinal project\nOSS University is project-focused.\nYou are encouraged to do the assignments and exams for each course, but what really matters is whether you can use your knowledge to solve a real-world problem.\nAfter you've gotten through all of Core CS and the parts of Advanced CS relevant to you, you should think about a problem that you can solve using the knowledge you've acquired.\nNot only does real project work look great on a resume, but the project will also validate and consolidate your knowledge.\nYou can create something entirely new, or you can find an existing project that needs help via websites like\nCodeTriage\nor\nFirst Timers Only.\nAnother option is using the Capstone project from taking one of the Specializations in Advanced applications;\nwhether or not this makes sense depends on the course, the project, and whether or not the course's Honor Code permits you to display your work publicly.\nIn some cases, it may not be permitted;\ndo not violate your course's Honor Code!\nPut the OSSU-CS badge in the README of your repository!\n\n\nMarkdown: [![Open Source Society University - Computer Science](https://img.shields.io/badge/OSSU-computer--science-blue.svg)](https://github.com/ossu/computer-science)\nHTML: <a href=\"https://github.com/ossu/computer-science\"><img alt=\"Open Source Society University - Computer Science\" src=\"https://img.shields.io/badge/OSSU-computer--science-blue.svg\"></a>\n\nEvaluation\nUpon completing your final project, submit your project's information to PROJECTS\nvia a pull request and use our community channels to announce it to your fellow students.\nYour peers and mentors from OSSU will then informally evaluate your project.\nYou will not be \"graded\" in the traditional sense \u2014 everyone has their own measurements for what they consider a success.\nThe purpose of the evaluation is to act as your first announcement to the world that you are a computer scientist\nand to get experience listening to feedback \u2014 both positive and negative \u2014 and taking it in stride.\nThe final project evaluation has a second purpose: to evaluate whether OSSU,\nthrough its community and curriculum, is successful in its mission to guide independent learners in obtaining a world-class computer science education.\nCooperative work\nYou can create this project alone or with other students!\nWe love cooperative work!\nUse our channels to communicate with other fellows to combine and create new projects!\nWhich programming languages should I use?\nMy friend, here is the best part of liberty!\nYou can use any language that you want to complete the final project.\nThe important thing is to internalize the core concepts and to be able to use them with whatever tool (programming language) that you wish.\nPro CS\nAfter completing the requirements of the curriculum above, you will have completed the equivalent of a full bachelor's degree in Computer Science, or quite close to one.\nYou can stop in the Advanced CS section, but the next step to completing your studies is to develop skills and knowledge in a specific domain.\nMany of these courses are graduate-level.\nChoose one or more of the following specializations:\n\nMastering Software Development in R Specialization by Johns Hopkins University\nArtificial Intelligence Engineer Nanodegree by IBM, Amazon, and Didi\nMachine Learning Engineer Nanodegree by Kaggle\nCybersecurity MicroMasters by the Rochester Institute of Technology\nAndroid Developer Nanodegree by Google\n\nThese aren't the only specializations you can choose. Check the following websites for more options:\n\nedX: xSeries\nCoursera: Specializations\nUdacity: Nanodegree\n\nWhere to go next?\n\nLook for a job as a developer!\nCheck out the readings for classic books you can read that will sharpen your skills and expand your knowledge.\nJoin a local developer meetup (e.g. via meetup.com).\nPay attention to emerging technologies in the world of software development:\n\nExplore the actor model through Elixir, a new functional programming language for the web based on the battle-tested Erlang Virtual Machine!\nExplore borrowing and lifetimes through Rust, a systems language which achieves memory- and thread-safety without a garbage collector!\nExplore dependent type systems through Idris, a new Haskell-inspired language with unprecedented support for type-driven development.\n\n\n\n\nCode of conduct\nOSSU's code of conduct.\nCommunity\n\nSubscribe to our newsletter.\nUse our forum if you need some help.\nYou can also interact through GitHub issues.\nWe also have a chat room! \nAdd Open Source Society University to your Linkedin profile!\n\n\nPS: A forum is an ideal way to interact with other students as we do not lose important discussions, which usually occur in communication via chat apps.\nPlease use our forum for important discussions.\n\nHow to show your progress\n\nCreate an account in Trello.\nCopy this board to your personal account.\nSee how to copy a board here.\n\nNow that you have a copy of our official board, you just need to pass the cards to the Doing column or Done column as you progress in your study.\nWe also have labels to help you have more control through the process.\nThe meaning of each of these labels is:\n\nMain Curriculum: cards with that label represent courses that are listed in our curriculum.\nExtra Resources: cards with that label represent courses that were added by the student.\nDoing: cards with that label represent courses the student is current doing.\nDone: cards with that label represent courses finished by the student.\nThose cards should also have the link for at least one project/article built with the knowledge acquired in such course.\nSection: cards with that label represent the section that we have in our curriculum.\nThose cards with the Section label are only to help the organization of the Done column.\nYou should put the Course's cards below its respective Section's card.\n\nThe intention of this board is to provide our students a way to track their progress, and also the ability to show their progress through a public page for friends, family, employers, etc.\nYou can change the status of your board to be public or private.\nTeam\n\nEric Douglas: founder of OSSU and co-maintainer of all its curricula\nhanjiexi: lead technical maintainer\nwaciumawanjohi: lead academic maintainer\nContributors\n\nReferences\n\nGoogle - Guide for Technical Development\nCoursera\nedX\nUdacity\nStanford University\nCarnegie Mellon University: Computer Science Major Requirements\nMIT Open Courseware\nTeach Yourself Computer Science\nObtaining a Thorough CS Background Online\n\n\n"}, {"repo": "webpack/webpack", "language": "JavaScript", "readme": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nwebpack\n\n    webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.\n  \n\nTable of Contents\n\nInstall\nIntroduction\nConcepts\nContributing\nSupport\nCore Team\nSponsoring\nPremium Partners\nOther Backers and Sponsors\nGold Sponsors\nSilver Sponsors\nBronze Sponsors\nBackers\nSpecial Thanks\n\nInstall\nInstall with npm:\nnpm install --save-dev webpack\nInstall with yarn:\nyarn add webpack --dev\nIntroduction\nwebpack is a bundler for modules. The main purpose is to bundle JavaScript\nfiles for usage in a browser, yet it is also capable of transforming, bundling,\nor packaging just about any resource or asset.\nTL;DR\n\nBundles ES Modules, CommonJS, and AMD modules (even combined).\nCan create a single bundle or multiple chunks that are asynchronously loaded at runtime (to reduce initial loading time).\nDependencies are resolved during compilation, reducing the runtime size.\nLoaders can preprocess files while compiling, e.g. TypeScript to JavaScript, Handlebars strings to compiled functions, images to Base64, etc.\nHighly modular plugin system to do whatever else your application requires.\n\nGet Started\nCheck out webpack's quick Get Started guide and the other guides.\nBrowser Compatibility\nwebpack supports all browsers that are ES5-compliant (IE8 and below are not supported).\nwebpack also needs Promise for import() and require.ensure(). If you want to support older browsers, you will need to load a polyfill before using these expressions.\nConcepts\nPlugins\nwebpack has a rich plugin\ninterface. Most of the features\nwithin webpack itself use this plugin interface. This makes webpack very\nflexible.\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\nmini-css-extract-plugin\n\n\nExtracts CSS into separate files. It creates a CSS file per JS file which contains CSS.\n\n\ncompression-webpack-plugin\n\n\nPrepares compressed versions of assets to serve them with Content-Encoding\n\n\ni18n-webpack-plugin\n\n\nAdds i18n support to your bundles\n\n\nhtml-webpack-plugin\n\n\nSimplifies creation of HTML files (index.html) to serve your bundles\n\n\nextract-text-webpack-plugin\n\n\nExtract text from a bundle, or bundles, into a separate file\n\n\n\nLoaders\nwebpack enables the use of loaders to preprocess files. This allows you to bundle\nany static resource way beyond JavaScript. You can easily write your own\nloaders using Node.js.\nLoaders are activated by using loadername! prefixes in require() statements,\nor are automatically applied via regex from your webpack configuration.\nFiles\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\nraw-loader\n\n\nLoads raw content of a file (utf-8)\n\n\nval-loader\n\n\nExecutes code as module and considers exports as JS code\n\n\nurl-loader\n\n\nWorks like the file loader, but can return a Data Url if the file is smaller than a limit\n\n\nfile-loader\n\n\nEmits the file into the output folder and returns the (relative) url\n\n\n\nJSON\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nLoads a JSON file (included by default)\n\n\n\n\n\nLoads and transpiles a JSON 5 file\n\n\n\n\n\nLoads and transpiles a CSON file\n\n\n\nTranspiling\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n<script>\n\n\nExecutes a JavaScript file once in global context (like in script tag), require()s are not parsed\n\n\n\n\n\nLoads ES2015+ code and transpiles to ES5 using Babel\n\n\n\n\n\nLoads ES2015+ code and transpiles to ES5 using Traceur\n\n\n\n\n\nLoads TypeScript like JavaScript\n\n\nawesome-typescript-loader\n\n\nAwesome TypeScript loader for webpack\n\n\n\n\n\nLoads CoffeeScript like JavaScript\n\n\n\nTemplating\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nExports HTML as string, requires references to static resources\n\n\n\n\n\nLoads Pug templates and returns a function\n\n\n\n\n\nCompiles Markdown to HTML\n\n\n\n\n\nLoads and transforms a HTML file using PostHTML\n\n\n\n\n\nCompiles Handlebars to HTML\n\n\n\nStyling\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n<style>\n\n\nAdd exports of a module as style to DOM\n\n\n\n\n\nLoads CSS file with resolved imports and returns CSS code\n\n\n\n\n\nLoads and compiles a LESS file\n\n\n\n\n\nLoads and compiles a Sass/SCSS file\n\n\n\n\n\nLoads and compiles a Stylus file\n\n\n\n\n\nLoads and transforms a CSS/SSS file using PostCSS\n\n\n\nLinting & Testing\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nTests with mocha (Browser/NodeJS)\n\n\n\n\n\nPreLoader for linting code using ESLint\n\n\n\n\n\nPreLoader for linting code using JSHint\n\n\n\nFrameworks\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nLoads and compiles Vue Components\n\n\n\n\n\nProcess HTML & CSS with preprocessor of choice and require() Web Components like first-class modules\n\n\n\n\n\nLoads and compiles Angular 2 Components\n\n\n\n\n\nRiot official webpack loader\n\n\n\nPerformance\nwebpack uses async I/O and has multiple caching levels. This makes webpack fast\nand incredibly fast on incremental compilations.\nModule Formats\nwebpack supports ES2015+, CommonJS and AMD modules out of the box. It performs clever static\nanalysis on the AST of your code. It even has an evaluation engine to evaluate\nsimple expressions. This allows you to support most existing libraries out of the box.\nCode Splitting\nwebpack allows you to split your codebase into multiple chunks. Chunks are\nloaded asynchronously at runtime. This reduces the initial loading time.\nOptimizations\nwebpack can do many optimizations to reduce the output size of your\nJavaScript by deduplicating frequently used modules, minifying, and giving\nyou full control of what is loaded initially and what is loaded at runtime\nthrough code splitting. It can also make your code chunks cache\nfriendly by using hashes.\nContributing\nWe want contributing to webpack to be fun, enjoyable, and educational for anyone, and everyone. We have a vibrant ecosystem that spans beyond this single repo. We welcome you to check out any of the repositories in our organization or webpack-contrib organization which houses all of our loaders and plugins.\nContributions go far beyond pull requests and commits. Although we love giving you the opportunity to put your stamp on webpack, we also are thrilled to receive a variety of other contributions including:\n\nDocumentation updates, enhancements, designs, or bugfixes\nSpelling or grammar fixes\nREADME.md corrections or redesigns\nAdding unit, or functional tests\nTriaging GitHub issues -- especially determining whether an issue still persists or is reproducible.\nSearching #webpack on twitter and helping someone else who needs help\nTeaching others how to contribute to one of the many webpack's repos!\nBlogging, speaking about, or creating tutorials about one of webpack's many features.\nHelping others in our webpack gitter channel.\n\nIf you are worried or don't know where to start, you can always reach out to Sean Larkin (@TheLarkInn) on Twitter or simply submit an issue and a maintainer can help give you guidance!\nWe have also started a series on our Medium Publication called The Contributor's Guide to webpack. We welcome you to read it and post any questions or responses if you still need help.\nLooking to speak about webpack? We'd love to review your talk abstract/CFP! You can email it to webpack [at] opencollective [dot] com and we can give pointers or tips!!!\nCreating your own plugins and loaders\nIf you create a loader or plugin, we would <3 for you to open source it, and put it on npm. We follow the x-loader, x-webpack-plugin naming convention.\nSupport\nWe consider webpack to be a low-level tool used not only individually but also layered beneath other awesome tools. Because of its flexibility, webpack isn't always the easiest entry-level solution, however we do believe it is the most powerful. That said, we're always looking for ways to improve and simplify the tool without compromising functionality. If you have any ideas on ways to accomplish this, we're all ears!\nIf you're just getting started, take a look at our new docs and concepts page. This has a high level overview that is great for beginners!!\nLooking for webpack 1 docs? Please check out the old wiki, but note that this deprecated version is no longer supported.\nIf you want to discuss something or just need help, here is our Gitter room where there are always individuals looking to help out!\nIf you are still having difficulty, we would love for you to post\na question to StackOverflow with the webpack tag. It is much easier to answer questions that include your webpack.config.js and relevant files! So if you can provide them, we'd be extremely grateful (and more likely to help you find the answer!)\nIf you are twitter savvy you can tweet #webpack with your question and someone should be able to reach out and help also.\nIf you have discovered a \ud83d\udc1c or have a feature suggestion, feel free to create an issue on Github.\nLicense\n\nCore Team\n\n\n\n\n\n\nTobias Koppers\nCore\n\nFounder of webpack\n\n\n\n\nJohannes Ewald\nLoaders & Plugins\n\nEarly adopter of webpack\n\n\n\n\nSean T. Larkin\nPublic Relations\n\nFounder of the core team\n\n\n\n\nKees Kluskens\nDevelopment\n\nSponsor\n\n\n\n\n\n\n\n\nSponsoring\nMost of the core team members, webpack contributors and contributors in the ecosystem do this open source work in their free time. If you use webpack for a serious task, and you'd like us to invest more time on it, please donate. This project increases your income/productivity too. It makes development and applications faster and it reduces the required bandwidth.\nThis is how we use the donations:\n\nAllow the core team to work on webpack\nThank contributors if they invested a large amount of time in contributing\nSupport projects in the ecosystem that are of great value for users\nSupport projects that are voted most (work in progress)\nInfrastructure cost\nFees for money handling\n\nPremium Partners\n\n\n\n\nOther Backers and Sponsors\nBefore we started using OpenCollective, donations were made anonymously. Now that we have made the switch, we would like to acknowledge these sponsors (and the ones who continue to donate using OpenCollective). If we've missed someone, please send us a PR, and we'll add you to this list.\n\nGoogle Angular Team, Architects.io,\n\n\n\nGold Sponsors\nBecome a gold sponsor and get your logo on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSilver Sponsors\nBecome a silver sponsor and get your logo on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBronze Sponsors\nBecome a bronze sponsor and get your logo on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBackers\nBecome a backer and get your image on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSpecial Thanks to\n(In chronological order)\n\n@google for Google Web Toolkit (GWT), which aims to compile Java to JavaScript. It features a similar Code Splitting as webpack.\n@medikoo for modules-webmake, which is a similar project. webpack was born because I wanted Code Splitting for modules-webmake. Interestingly the Code Splitting issue is still open (thanks also to @Phoscur for the discussion).\n@substack for browserify, which is a similar project and source for many ideas.\n@jrburke for require.js, which is a similar project and source for many ideas.\n@defunctzombie for the browser-field spec, which makes modules available for node.js, browserify and webpack.\nEvery early webpack user, which contributed to webpack by writing issues or PRs. You influenced the direction...\n@shama, @jhnns and @sokra for maintaining this project\nEveryone who has written a loader for webpack. You are the ecosystem...\nEveryone I forgot to mention here, but also influenced webpack.\n\n\n"}, {"repo": "reduxjs/redux", "language": "TypeScript", "readme": "\n\nRedux is a predictable state container for JavaScript apps.\n(Not to be confused with a WordPress framework \u2013\u00a0Redux Framework.)\nIt helps you write applications that behave consistently, run in different environments (client, server, and native), and are easy to test. On top of that, it provides a great developer experience, such as live code editing combined with a time traveling debugger.\nYou can use Redux together with React, or with any other view library.\nIt is tiny (2kB, including dependencies).\n\nNote: We are currently planning a rewrite of the Redux docs. Please take some time to fill out this survey on what content is most important in a docs site. Thanks!\n\n\n\n\n\n\nLearn Redux\nWe have a variety of resources available to help you learn Redux, no matter what your background or learning style is.\nJust the Basics\nIf you're brand new to Redux and want to understand the basic concepts, see:\n\nThe Motivation behind building Redux, the Core Concepts, and the Three Principles.\nThe basic tutorial in the Redux docs\nRedux creator Dan Abramov's free \"Getting Started with Redux\" video series on Egghead.io\nRedux co-maintainer Mark Erikson's \"Redux Fundamentals\" slideshow and list of suggested resources for learning Redux\nIf you learn best by looking at code and playing with it, check out our list of Redux example applications, available as separate projects in the Redux repo, and also as interactive online examples on CodeSandbox.\nThe Redux Tutorials section of the React/Redux links list. Here's a top list of our recommended tutorials:\n\nDave Ceddia's posts What Does Redux Do? (and when should you use it?) and How Redux Works: A Counter-Example are a great intro to the basics of Redux and how to use it with React, as is this post on React and Redux: An Introduction.\nValentino Gagliardi's post React Redux Tutorial for Beginners: Learning Redux in 2018 is an excellent extended introduction to many aspects of using Redux.\nThe CSS Tricks article Leveling Up with React: Redux covers the Redux basics well.\nThis DevGuides: Introduction to Redux tutorial covers several aspects of Redux, including actions, reducers, usage with React, and middleware.\n\n\n\nIntermediate Concepts\nOnce you've picked up the basics of working with actions, reducers, and the store, you may have questions about topics like working with asynchronous logic and AJAX requests, connecting a UI framework like React to your Redux store, and setting up an application to use Redux:\n\nThe \"Advanced\" docs section covers working with async logic, middleware, routing.\nThe Redux docs \"Learning Resources\" page points to recommended articles on a variety of Redux-related topics.\nSophie DeBenedetto's 8-part Building a Simple CRUD App with React + Redux series shows how to put together a basic CRUD app from scratch.\n\nReal-World Usage\nGoing from a TodoMVC app to a real production application can be a big jump, but we've got plenty of resources to help:\n\nRedux creator Dan Abramov's free \"Building React Applications with Idiomatic Redux\" video series builds on his first video series and covers topics like middleware, routing, and persistence.\nThe Redux FAQ answers many common questions about how to use Redux, and the \"Recipes\" docs section has information on handling derived data, testing, structuring reducer logic, and reducing boilerplate.\nRedux co-maintainer Mark Erikson's \"Practical Redux\" tutorial series demonstrates real-world intermediate and advanced techniques for working with React and Redux (also available as an interactive course on Educative.io).\nThe React/Redux links list has categorized articles on working with reducers and selectors, managing side effects, Redux architecture and best practices, and more.\nOur community has created thousands of Redux-related libraries, addons, and tools. The \"Ecosystem\" docs page lists our recommendations, and there's a complete listing available in the Redux addons catalog.\nIf you're looking to learn from actual application codebases, the addons catalog also has a list of purpose-built examples and real-world applications.\n\nFinally, Mark Erikson is teaching a series of Redux workshops through Workshop.me. Check the workshop schedule for upcoming dates and locations.\nHelp and Discussion\nThe #redux channel of the Reactiflux Discord community is our official resource for all questions related to learning and using Redux. Reactiflux is a great place to hang out, ask questions, and learn - come join us!\nBefore Proceeding Further\nRedux is a valuable tool for organizing your state, but you should also consider whether it's appropriate for your situation. Don't use Redux just because someone said you should - take some time to understand the potential benefits and tradeoffs of using it.\nHere are some suggestions on when it makes sense to use Redux:\n\nYou have reasonable amounts of data changing over time\nYou need a single source of truth for your state\nYou find that keeping all your state in a top-level component is no longer sufficient\n\nYes, these guidelines are subjective and vague, but this is for good reason. The point at which you should integrate Redux into your application is different for every user and different for every application.\n\nFor more thoughts on how Redux is meant to be used, see:\n\nYou Might Not Need Redux\nThe Tao of Redux, Part 1 - Implementation and Intent\nThe Tao of Redux, Part 2 - Practice and Philosophy\nRedux FAQ\n\n\nDeveloper Experience\nDan Abramov (author of Redux) wrote Redux while working on his React Europe talk called \u201cHot Reloading with Time Travel\u201d. His goal was to create a state management library with a minimal API but completely predictable behavior. Redux makes it possible to implement logging, hot reloading, time travel, universal apps, record and replay, without any buy-in from the developer.\nInfluences\nRedux evolves the ideas of Flux, but avoids its complexity by taking cues from Elm.\nEven if you haven't used Flux or Elm, Redux only takes a few minutes to get started with.\nInstallation\nTo install the stable version:\nnpm install --save redux\nThis assumes you are using npm as your package manager.\nIf you're not, you can access these files on unpkg, download them, or point your package manager to them.\nMost commonly, people consume Redux as a collection of CommonJS modules. These modules are what you get when you import redux in a Webpack, Browserify, or a Node environment. If you like to live on the edge and use Rollup, we support that as well.\nIf you don't use a module bundler, it's also fine. The redux npm package includes precompiled production and development UMD builds in the dist folder. They can be used directly without a bundler and are thus compatible with many popular JavaScript module loaders and environments. For example, you can drop a UMD build as a <script> tag on the page, or tell Bower to install it. The UMD builds make Redux available as a window.Redux global variable.\nThe Redux source code is written in ES2015 but we precompile both CommonJS and UMD builds to ES5 so they work in any modern browser. You don't need to use Babel or a module bundler to get started with Redux. You can even use the ES module build that's available at es/redux.mjs which can be referenced using type=\"module\" in your script tag or as a standard import.\nComplementary Packages\nMost likely, you'll also need the React bindings and the developer tools.\nnpm install --save react-redux\nnpm install --save-dev redux-devtools\nNote that unlike Redux itself, many packages in the Redux ecosystem don't provide UMD builds, so we recommend using CommonJS module bundlers like Webpack and Browserify for the most comfortable development experience.\nThe Gist\nThe whole state of your app is stored in an object tree inside a single store.\nThe only way to change the state tree is to emit an action, an object describing what happened.\nTo specify how the actions transform the state tree, you write pure reducers.\nThat's it!\nimport { createStore } from 'redux'\n\n/**\n * This is a reducer, a pure function with (state, action) => state signature.\n * It describes how an action transforms the state into the next state.\n *\n * The shape of the state is up to you: it can be a primitive, an array, an object,\n * or even an Immutable.js data structure. The only important part is that you should\n * not mutate the state object, but return a new object if the state changes.\n *\n * In this example, we use a `switch` statement and strings, but you can use a helper that\n * follows a different convention (such as function maps) if it makes sense for your\n * project.\n */\nfunction counter(state = 0, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1\n    case 'DECREMENT':\n      return state - 1\n    default:\n      return state\n  }\n}\n\n// Create a Redux store holding the state of your app.\n// Its API is { subscribe, dispatch, getState }.\nlet store = createStore(counter)\n\n// You can use subscribe() to update the UI in response to state changes.\n// Normally you'd use a view binding library (e.g. React Redux) rather than subscribe() directly.\n// However it can also be handy to persist the current state in the localStorage.\n\nstore.subscribe(() => console.log(store.getState()))\n\n// The only way to mutate the internal state is to dispatch an action.\n// The actions can be serialized, logged or stored and later replayed.\nstore.dispatch({ type: 'INCREMENT' })\n// 1\nstore.dispatch({ type: 'INCREMENT' })\n// 2\nstore.dispatch({ type: 'DECREMENT' })\n// 1\nInstead of mutating the state directly, you specify the mutations you want to happen with plain objects called actions. Then you write a special function called a reducer to decide how every action transforms the entire application's state.\nIf you're coming from Flux, there is a single important difference you need to understand. Redux doesn't have a Dispatcher or support many stores. Instead, there is just a single store with a single root reducing function. As your app grows, instead of adding stores, you split the root reducer into smaller reducers independently operating on the different parts of the state tree. This is exactly like how there is just one root component in a React app, but it is composed out of many small components.\nThis architecture might seem like an overkill for a counter app, but the beauty of this pattern is how well it scales to large and complex apps. It also enables very powerful developer tools, because it is possible to trace every mutation to the action that caused it. You can record user sessions and reproduce them just by replaying every action.\nLearn Redux from Its Authors\nRedux Video Tutorials by Dan Abramov\nGetting Started with Redux\nGetting Started with Redux is a video course consisting of 30 videos narrated by Dan Abramov, author of Redux. It is designed to complement the \u201cBasics\u201d part of the docs while bringing additional insights about immutability, testing, Redux best practices, and using Redux with React. This course is free and will always be.\n\n\u201cGreat course on egghead.io by @dan_abramov - instead of just showing you how to use #redux, it also shows how and why redux was built!\u201d\nSandrino Di Mattia\n\n\n\u201cPlowing through @dan_abramov 'Getting Started with Redux' - its amazing how much simpler concepts get with video.\u201d\nChris Dhanaraj\n\n\n\u201cThis video series on Redux by @dan_abramov on @eggheadio is spectacular!\u201d\nEddie Zaneski\n\n\n\u201cCome for the name hype. Stay for the rock solid fundamentals. (Thanks, and great job @dan_abramov and @eggheadio!)\u201d\nDan\n\n\n\u201cThis series of videos on Redux by @dan_abramov is repeatedly blowing my mind - gunna do some serious refactoring\u201d\nLaurence Roberts\n\nSo, what are you waiting for?\nWatch the free \"Getting Started with Redux\" video series\n\nNote: If you enjoyed Dan's course, consider supporting Egghead by buying a subscription. Subscribers have access to the source code of every example in my videos and tons of advanced lessons on other topics, including JavaScript in depth, React, Angular, and more. Many Egghead instructors are also open source library authors, so buying a subscription is a nice way to thank them for the work that they've done.\n\nBuilding React Applications with Idiomatic Redux\nThe Building React Applications with Idiomatic Redux course is a second free video series by Dan Abramov. It picks up where the first series left off, and covers practical production ready techniques for building your React and Redux applications: advanced state management, middleware, React Router integration, and other common problems you are likely to encounter while building applications for your clients and customers. As with the first series, this course will always be free.\nWatch the free \"Idiomatic Redux\" video series\nPractical Redux course\nPractical Redux is a paid interactive course by Redux co-maintainer Mark Erikson. The course is designed to show how to apply the basic concepts of Redux to building something larger than a TodoMVC application. It includes real-world topics like:\n\nAdding Redux to a new Create-React-App project and configuring Hot Module Replacement for faster development\nControlling your UI behavior with Redux\nUsing the Redux-ORM library to manage relational data in your Redux store\nBuilding a master/detail view to display and edit data\nWriting custom advanced Redux reducer logic to solve specific problems\nOptimizing performance of Redux-connected form inputs\n\nAnd much more!\nThe course is based on Mark's original free \"Practical Redux\" blog tutorial series, but with updated and improved content.\nRedux Fundamentals Workshop\nRedux co-maintainer Mark Erikson has put together a Redux Fundamentals workshop, and slides are available here. They cover:\n\nThe history and purpose of Redux\nReducers and actions, and working with a Redux store\nUsing Redux with React\nUsing and writing Redux middleware\nWorking with AJAX calls and other side effects\nUnit testing Redux apps\nReal-world Redux app structure and development\n\nDocumentation\n\nIntroduction\nBasics\nAdvanced\nRecipes\nFAQ\nTroubleshooting\nGlossary\nAPI Reference\n\nFor PDF, ePub, and MOBI exports for offline reading, and instructions on how to create them, please see: paulkogel/redux-offline-docs.\nFor Offline docs, please see: devdocs\nExamples\nAlmost all examples have a corresponding CodeSandbox sandbox. This is an interactive version of the code that you can play with online.\n\nCounter Vanilla: Source\nCounter: Source | Sandbox\nTodos: Source | Sandbox\nTodos with Undo: Source | Sandbox\nTodos w/ Flow: Source\nTodoMVC: Source | Sandbox\nShopping Cart: Source | Sandbox\nTree View: Source | Sandbox\nAsync: Source | Sandbox\nUniversal: Source\nReal World: Source | Sandbox\n\nIf you're new to the NPM ecosystem and have troubles getting a project up and running, or aren't sure where to paste the gist above, check out simplest-redux-example that uses Redux together with React and Browserify.\nTestimonials\n\n\u201cLove what you're doing with Redux\u201d\nJing Chen, creator of Flux\n\n\n\u201cI asked for comments on Redux in FB's internal JS discussion group, and it was universally praised. Really awesome work.\u201d\nBill Fisher, author of Flux documentation\n\n\n\u201cIt's cool that you are inventing a better Flux by not doing Flux at all.\u201d\nAndr\u00e9 Staltz, creator of Cycle\n\nThanks\n\nThe Elm Architecture for a great intro to modeling state updates with reducers;\nTurning the database inside-out for blowing my mind;\nDeveloping ClojureScript with Figwheel for convincing me that re-evaluation should \u201cjust work\u201d;\nWebpack for Hot Module Replacement;\nFlummox for teaching me to approach Flux without boilerplate or singletons;\ndisto for a proof of concept of hot reloadable Stores;\nNuclearJS for proving this architecture can be performant;\nOm for popularizing the idea of a single state atom;\nCycle for showing how often a function is the best tool;\nReact for the pragmatic innovation.\n\nSpecial thanks to Jamie Paton for handing over the redux NPM package name.\nLogo\nYou can find the official logo on GitHub.\nChange Log\nThis project adheres to Semantic Versioning.\nEvery release, along with the migration instructions, is documented on the GitHub Releases page.\nPatrons\nThe work on Redux was funded by the community.\nMeet some of the outstanding companies that made it possible:\n\nWebflow\nXimedes\n\nSee the full list of Redux patrons, as well as the always-growing list of people and companies that use Redux.\nLicense\nMIT\n\n"}, {"repo": "nvbn/thefuck", "language": "Python", "readme": "\nThe Fuck     \nThe Fuck is a magnificent app, inspired by a @liamosaur\ntweet,\nthat corrects errors in previous console commands.\nIs The Fuck too slow? Try the experimental instant mode!\n\nMore examples:\n\u279c apt-get install vim\nE: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (/var/lib/dpkg/), are you root?\n\n\u279c fuck\nsudo apt-get install vim [enter/\u2191/\u2193/ctrl+c]\n[sudo] password for nvbn:\nReading package lists... Done\n...\n\u279c git push\nfatal: The current branch master has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin master\n\n\n\u279c fuck\ngit push --set-upstream origin master [enter/\u2191/\u2193/ctrl+c]\nCounting objects: 9, done.\n...\n\u279c puthon\nNo command 'puthon' found, did you mean:\n Command 'python' from package 'python-minimal' (main)\n Command 'python' from package 'python3' (main)\nzsh: command not found: puthon\n\n\u279c fuck\npython [enter/\u2191/\u2193/ctrl+c]\nPython 3.4.2 (default, Oct  8 2014, 13:08:17)\n...\n\u279c git brnch\ngit: 'brnch' is not a git command. See 'git --help'.\n\nDid you mean this?\n    branch\n\n\u279c fuck\ngit branch [enter/\u2191/\u2193/ctrl+c]\n* master\n\u279c lein rpl\n'rpl' is not a task. See 'lein help'.\n\nDid you mean this?\n         repl\n\n\u279c fuck\nlein repl [enter/\u2191/\u2193/ctrl+c]\nnREPL server started on port 54848 on host 127.0.0.1 - nrepl://127.0.0.1:54848\nREPL-y 0.3.1\n...\nIf you're not afraid of blindly running corrected commands, the\nrequire_confirmation settings option can be disabled:\n\u279c apt-get install vim\nE: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (/var/lib/dpkg/), are you root?\n\n\u279c fuck\nsudo apt-get install vim\n[sudo] password for nvbn:\nReading package lists... Done\n...\nRequirements\n\npython (3.4+)\npip\npython-dev\n\nInstallation\nOn OS X, you can install The Fuck via Homebrew (or via Linuxbrew on Linux):\nbrew install thefuck\nOn Ubuntu / Mint, install The Fuck with the following commands:\nsudo apt update\nsudo apt install python3-dev python3-pip python3-setuptools\nsudo pip3 install thefuck\nOn FreeBSD, install The Fuck with the following commands:\npkg install thefuck\nOn ChromeOS, install The Fuck using chromebrew with the following command:\ncrew install thefuck\nOn other systems, install The Fuck  by using pip:\npip install thefuck\nAlternatively, you may use an OS package manager (OS X, Ubuntu, Arch).\n#\nIt is recommended that you place this command in your .bash_profile,\n.bashrc, .zshrc or other startup script:\neval $(thefuck --alias)\n# You can use whatever you want as an alias, like for Mondays:\neval $(thefuck --alias FUCK)\nOr in your shell config (Bash, Zsh, Fish, Powershell, tcsh).\nChanges are only available in a new shell session. To make changes immediately\navailable, run source ~/.bashrc (or your shell config file like .zshrc).\nTo run fixed commands without confirmation, use the --yeah option (or just -y for short, or --hard if you're especially frustrated):\nfuck --yeah\nTo fix commands recursively until succeeding, use the -r option:\nfuck -r\nUpdating\npip3 install thefuck --upgrade\nNote: Alias functionality was changed in v1.34 of The Fuck\nHow it works\nThe Fuck attempts to match the previous command with a rule. If a match is\nfound, a new command is created using the matched rule and executed. The\nfollowing rules are enabled by default:\n\nadb_unknown_command \u2013 fixes misspelled commands like adb logcta;\nag_literal \u2013 adds -Q to ag when suggested;\naws_cli \u2013 fixes misspelled commands like aws dynamdb scan;\naz_cli \u2013 fixes misspelled commands like az providers;\ncargo \u2013 runs cargo build instead of cargo;\ncargo_no_command \u2013 fixes wrongs commands like cargo buid;\ncat_dir \u2013 replaces cat with ls when you try to cat a directory;\ncd_correction \u2013 spellchecks and correct failed cd commands;\ncd_mkdir \u2013 creates directories before cd'ing into them;\ncd_parent \u2013 changes cd.. to cd ..;\nchmod_x \u2013 add execution bit;\nchoco_install \u2013 append common suffixes for chocolatey packages;\ncomposer_not_command \u2013 fixes composer command name;\ncp_omitting_directory \u2013 adds -a when you cp directory;\ncpp11 \u2013 adds missing -std=c++11 to g++ or clang++;\ndirty_untar \u2013 fixes tar x command that untarred in the current directory;\ndirty_unzip \u2013 fixes unzip command that unzipped in the current directory;\ndjango_south_ghost \u2013 adds --delete-ghost-migrations to failed because ghosts django south migration;\ndjango_south_merge \u2013 adds --merge to inconsistent django south migration;\ndocker_login \u2013 executes a docker login and repeats the previous command;\ndocker_not_command \u2013 fixes wrong docker commands like docker tags;\ndocker_image_being_used_by_container \u2010 removes the container that is using the image before removing the image;\ndry \u2013 fixes repetitions like git git push;\nfab_command_not_found \u2013 fix misspelled fabric commands;\nfix_alt_space \u2013 replaces Alt+Space with Space character;\nfix_file \u2013 opens a file with an error in your $EDITOR;\ngem_unknown_command \u2013 fixes wrong gem commands;\ngit_add \u2013 fixes \"pathspec 'foo' did not match any file(s) known to git.\";\ngit_add_force \u2013 adds --force to git add <pathspec>... when paths are .gitignore'd;\ngit_bisect_usage \u2013 fixes git bisect strt, git bisect goood, git bisect rset, etc. when bisecting;\ngit_branch_delete \u2013 changes git branch -d to git branch -D;\ngit_branch_delete_checked_out \u2013 changes git branch -d to git checkout master && git branch -D when trying to delete a checked out branch;\ngit_branch_exists \u2013 offers git branch -d foo, git branch -D foo or git checkout foo when creating a branch that already exists;\ngit_branch_list \u2013 catches git branch list in place of git branch and removes created branch;\ngit_checkout \u2013 fixes branch name or creates new branch;\ngit_commit_amend \u2013 offers git commit --amend after previous commit;\ngit_commit_reset \u2013 offers git reset HEAD~ after previous commit;\ngit_diff_no_index \u2013 adds --no-index to previous git diff on untracked files;\ngit_diff_staged \u2013 adds --staged to previous git diff with unexpected output;\ngit_fix_stash \u2013 fixes git stash commands (misspelled subcommand and missing save);\ngit_flag_after_filename \u2013 fixes fatal: bad flag '...' after filename\ngit_help_aliased \u2013 fixes git help <alias> commands replacing  with the aliased command;\ngit_merge \u2013 adds remote to branch names;\ngit_merge_unrelated \u2013 adds --allow-unrelated-histories when required\ngit_not_command \u2013 fixes wrong git commands like git brnch;\ngit_pull \u2013 sets upstream before executing previous git pull;\ngit_pull_clone \u2013 clones instead of pulling when the repo does not exist;\ngit_pull_uncommitted_changes \u2013 stashes changes before pulling and pops them afterwards;\ngit_push \u2013 adds --set-upstream origin $branch to previous failed git push;\ngit_push_different_branch_names \u2013 fixes pushes when local brach name does not match remote branch name;\ngit_push_pull \u2013 runs git pull when push was rejected;\ngit_push_without_commits \u2013 Creates an initial commit if you forget and only git add ., when setting up a new project;\ngit_rebase_no_changes \u2013 runs git rebase --skip instead of git rebase --continue when there are no changes;\ngit_remote_delete \u2013 replaces git remote delete remote_name with git remote remove remote_name;\ngit_rm_local_modifications \u2013  adds -f or --cached when you try to rm a locally modified file;\ngit_rm_recursive \u2013 adds -r when you try to rm a directory;\ngit_rm_staged \u2013  adds -f or --cached when you try to rm a file with staged changes\ngit_rebase_merge_dir \u2013 offers git rebase (--continue | --abort | --skip) or removing the .git/rebase-merge dir when a rebase is in progress;\ngit_remote_seturl_add \u2013 runs git remote add when git remote set_url on nonexistent remote;\ngit_stash \u2013 stashes your local modifications before rebasing or switching branch;\ngit_stash_pop \u2013 adds your local modifications before popping stash, then resets;\ngit_tag_force \u2013 adds --force to git tag <tagname> when the tag already exists;\ngit_two_dashes \u2013 adds a missing dash to commands like git commit -amend or git rebase -continue;\ngo_run \u2013 appends .go extension when compiling/running Go programs;\ngo_unknown_command \u2013 fixes wrong go commands, for example go bulid;\ngradle_no_task \u2013 fixes not found or ambiguous gradle task;\ngradle_wrapper \u2013 replaces gradle with ./gradlew;\ngrep_arguments_order \u2013 fixes grep arguments order for situations like grep -lir . test;\ngrep_recursive \u2013 adds -r when you try to grep directory;\ngrunt_task_not_found \u2013 fixes misspelled grunt commands;\ngulp_not_task \u2013 fixes misspelled gulp tasks;\nhas_exists_script \u2013 prepends ./ when script/binary exists;\nheroku_multiple_apps \u2013 add --app <app> to heroku commands like heroku pg;\nheroku_not_command \u2013 fixes wrong heroku commands like heroku log;\nhistory \u2013 tries to replace command with most similar command from history;\nhostscli \u2013 tries to fix hostscli usage;\nifconfig_device_not_found \u2013 fixes wrong device names like wlan0 to wlp2s0;\njava \u2013 removes .java extension when running Java programs;\njavac \u2013 appends missing .java when compiling Java files;\nlein_not_task \u2013 fixes wrong lein tasks like lein rpl;\nlong_form_help \u2013 changes -h to --help when the short form version is not supported\nln_no_hard_link \u2013 catches hard link creation on directories, suggest symbolic link;\nln_s_order \u2013 fixes ln -s arguments order;\nls_all \u2013 adds -A to ls when output is empty;\nls_lah \u2013 adds -lah to ls;\nman \u2013 changes manual section;\nman_no_space \u2013 fixes man commands without spaces, for example mandiff;\nmercurial \u2013 fixes wrong hg commands;\nmissing_space_before_subcommand \u2013 fixes command with missing space like npminstall;\nmkdir_p \u2013 adds -p when you try to create a directory without parent;\nmvn_no_command \u2013 adds clean package to mvn;\nmvn_unknown_lifecycle_phase \u2013 fixes misspelled life cycle phases with mvn;\nnpm_missing_script \u2013 fixes npm custom script name in npm run-script <script>;\nnpm_run_script \u2013 adds missing run-script for custom npm scripts;\nnpm_wrong_command \u2013 fixes wrong npm commands like npm urgrade;\nno_command \u2013 fixes wrong console commands, for example vom/vim;\nno_such_file \u2013 creates missing directories with mv and cp commands;\nopen \u2013 either prepends http:// to address passed to open or create a new file or directory and passes it to open;\npip_install \u2013 fixes permission issues with pip install commands by adding --user or prepending sudo if necessary;\npip_unknown_command \u2013 fixes wrong pip commands, for example pip instatl/pip install;\nphp_s \u2013 replaces -s by -S when trying to run a local php server;\nport_already_in_use \u2013 kills process that bound port;\nprove_recursively \u2013 adds -r when called with directory;\npyenv_no_such_command \u2013 fixes wrong pyenv commands like pyenv isntall or pyenv list;\npython_command \u2013 prepends python when you try to run non-executable/without ./ python script;\npython_execute \u2013 appends missing .py when executing Python files;\nquotation_marks \u2013 fixes uneven usage of ' and \" when containing args';\npath_from_history \u2013 replaces not found path with similar absolute path from history;\nreact_native_command_unrecognized \u2013 fixes unrecognized react-native commands;\nremove_shell_prompt_literal \u2013 remove leading shell prompt symbol $, common when copying commands from documentations;\nremove_trailing_cedilla \u2013 remove trailing cedillas \u00e7, a common typo for european keyboard layouts;\nrm_dir \u2013 adds -rf when you try to remove a directory;\nscm_correction \u2013 corrects wrong scm like hg log to git log;\nsed_unterminated_s \u2013 adds missing '/' to sed's s commands;\nsl_ls \u2013 changes sl to ls;\nssh_known_hosts \u2013 removes host from known_hosts on warning;\nsudo \u2013 prepends sudo to previous command if it failed because of permissions;\nsudo_command_from_user_path \u2013 runs commands from users $PATH with sudo;\nswitch_lang \u2013 switches command from your local layout to en;\nsystemctl \u2013 correctly orders parameters of confusing systemctl;\nterraform_init.py \u2013 run terraform init before plan or apply;\ntest.py \u2013 runs py.test instead of test.py;\ntouch \u2013 creates missing directories before \"touching\";\ntsuru_login \u2013 runs tsuru login if not authenticated or session expired;\ntsuru_not_command \u2013 fixes wrong tsuru commands like tsuru shell;\ntmux \u2013 fixes tmux commands;\nunknown_command \u2013 fixes hadoop hdfs-style \"unknown command\", for example adds missing '-' to the command on hdfs dfs ls;\nunsudo \u2013 removes sudo from previous command if a process refuses to run on super user privilege.\nvagrant_up \u2013 starts up the vagrant instance;\nwhois \u2013 fixes whois command;\nworkon_doesnt_exists \u2013 fixes virtualenvwrapper env name os suggests to create new.\nyarn_alias \u2013 fixes aliased yarn commands like yarn ls;\nyarn_command_not_found \u2013 fixes misspelled yarn commands;\nyarn_command_replaced \u2013 fixes replaced yarn commands;\nyarn_help \u2013 makes it easier to open yarn documentation;\n\nThe following rules are enabled by default on specific platforms only:\n\napt_get \u2013 installs app from apt if it not installed (requires python-commandnotfound / python3-commandnotfound);\napt_get_search \u2013 changes trying to search using apt-get with searching using apt-cache;\napt_invalid_operation \u2013 fixes invalid apt and apt-get calls, like apt-get isntall vim;\napt_list_upgradable \u2013 helps you run apt list --upgradable after apt update;\napt_upgrade \u2013 helps you run apt upgrade after apt list --upgradable;\nbrew_cask_dependency \u2013 installs cask dependencies;\nbrew_install \u2013 fixes formula name for brew install;\nbrew_reinstall \u2013 turns brew install <formula> into brew reinstall <formula>;\nbrew_link \u2013 adds --overwrite --dry-run if linking fails;\nbrew_uninstall \u2013 adds --force to brew uninstall if multiple versions were installed;\nbrew_unknown_command \u2013 fixes wrong brew commands, for example brew docto/brew doctor;\nbrew_update_formula \u2013 turns brew update <formula> into brew upgrade <formula>;\ndnf_no_such_command \u2013 fixes mistyped DNF commands;\nnixos_cmd_not_found \u2013 installs apps on NixOS;\npacman \u2013 installs app with pacman if it is not installed (uses yay or yaourt if available);\npacman_not_found \u2013 fixes package name with pacman, yay or yaourt.\nyum_invalid_operation \u2013 fixes invalid yum calls, like yum isntall vim;\n\nThe following commands are bundled with The Fuck, but are not enabled by\ndefault:\n\ngit_push_force \u2013 adds --force-with-lease to a git push (may conflict with git_push_pull);\nrm_root \u2013 adds --no-preserve-root to rm -rf / command.\n\nCreating your own rules\nTo add your own rule, create a file named your-rule-name.py\nin ~/.config/thefuck/rules. The rule file must contain two functions:\nmatch(command: Command) -> bool\nget_new_command(command: Command) -> str | list[str]\nAdditionally, rules can contain optional functions:\nside_effect(old_command: Command, fixed_command: str) -> None\nRules can also contain the optional variables enabled_by_default, requires_output and priority.\nCommand has three attributes: script, output and script_parts.\nYour rule should not change Command.\nRules api changed in 3.0: To access a rule's settings, import it with\nfrom thefuck.conf import settings\nsettings is a special object assembled from ~/.config/thefuck/settings.py,\nand values from env (see more below).\nA simple example rule for running a script with sudo:\ndef match(command):\n    return ('permission denied' in command.output.lower()\n            or 'EACCES' in command.output)\n\n\ndef get_new_command(command):\n    return 'sudo {}'.format(command.script)\n\n# Optional:\nenabled_by_default = True\n\ndef side_effect(command, fixed_command):\n    subprocess.call('chmod 777 .', shell=True)\n\npriority = 1000  # Lower first, default is 1000\n\nrequires_output = True\nMore examples of rules,\nutility functions for rules,\napp/os-specific helpers.\nSettings\nSeveral The Fuck parameters can be changed in the file $XDG_CONFIG_HOME/thefuck/settings.py\n($XDG_CONFIG_HOME defaults to ~/.config):\n\nrules \u2013 list of enabled rules, by default thefuck.const.DEFAULT_RULES;\nexclude_rules \u2013 list of disabled rules, by default [];\nrequire_confirmation \u2013 requires confirmation before running new command, by default True;\nwait_command \u2013 max amount of time in seconds for getting previous command output;\nno_colors \u2013 disable colored output;\npriority \u2013 dict with rules priorities, rule with lower priority will be matched first;\ndebug \u2013 enables debug output, by default False;\nhistory_limit \u2013 numeric value of how many history commands will be scanned, like 2000;\nalter_history \u2013 push fixed command to history, by default True;\nwait_slow_command \u2013 max amount of time in seconds for getting previous command output if it in slow_commands list;\nslow_commands \u2013 list of slow commands;\nnum_close_matches \u2013 maximum number of close matches to suggest, by default 3.\n\nAn example of settings.py:\nrules = ['sudo', 'no_command']\nexclude_rules = ['git_push']\nrequire_confirmation = True\nwait_command = 10\nno_colors = False\npriority = {'sudo': 100, 'no_command': 9999}\ndebug = False\nhistory_limit = 9999\nwait_slow_command = 20\nslow_commands = ['react-native', 'gradle']\nnum_close_matches = 5\nOr via environment variables:\n\nTHEFUCK_RULES \u2013 list of enabled rules, like DEFAULT_RULES:rm_root or sudo:no_command;\nTHEFUCK_EXCLUDE_RULES \u2013 list of disabled rules, like git_pull:git_push;\nTHEFUCK_REQUIRE_CONFIRMATION \u2013 require confirmation before running new command, true/false;\nTHEFUCK_WAIT_COMMAND \u2013 max amount of time in seconds for getting previous command output;\nTHEFUCK_NO_COLORS \u2013 disable colored output, true/false;\nTHEFUCK_PRIORITY \u2013 priority of the rules, like no_command=9999:apt_get=100,\nrule with lower priority will be matched first;\nTHEFUCK_DEBUG \u2013 enables debug output, true/false;\nTHEFUCK_HISTORY_LIMIT \u2013 how many history commands will be scanned, like 2000;\nTHEFUCK_ALTER_HISTORY \u2013 push fixed command to history true/false;\nTHEFUCK_WAIT_SLOW_COMMAND \u2013 max amount of time in seconds for getting previous command output if it in slow_commands list;\nTHEFUCK_SLOW_COMMANDS \u2013 list of slow commands, like lein:gradle;\nTHEFUCK_NUM_CLOSE_MATCHES \u2013 maximum number of close matches to suggest, like 5.\n\nFor example:\nexport THEFUCK_RULES='sudo:no_command'\nexport THEFUCK_EXCLUDE_RULES='git_pull:git_push'\nexport THEFUCK_REQUIRE_CONFIRMATION='true'\nexport THEFUCK_WAIT_COMMAND=10\nexport THEFUCK_NO_COLORS='false'\nexport THEFUCK_PRIORITY='no_command=9999:apt_get=100'\nexport THEFUCK_HISTORY_LIMIT='2000'\nexport THEFUCK_NUM_CLOSE_MATCHES='5'\nThird-party packages with rules\nIf you'd like to make a specific set of non-public rules, but would still like\nto share them with others, create a package named thefuck_contrib_* with\nthe following structure:\nthefuck_contrib_foo\n  thefuck_contrib_foo\n    rules\n      __init__.py\n      *third-party rules*\n    __init__.py\n    *third-party-utils*\n  setup.py\n\nThe Fuck will find rules located in the rules module.\nExperimental instant mode\nThe default behavior of The Fuck requires time to re-run previous commands.\nWhen in instant mode, The Fuck saves time by logging output with script,\nthen reading the log.\n\nCurrently, instant mode only supports Python 3 with bash or zsh. zsh's autocorrect function also needs to be disabled in order for thefuck to work properly.\nTo enable instant mode, add --enable-experimental-instant-mode\nto the alias initialization in .bashrc, .bash_profile or .zshrc.\nFor example:\neval $(thefuck --alias --enable-experimental-instant-mode)\nDeveloping\nSee CONTRIBUTING.md\nLicense MIT\nProject License can be found here.\n\n"}, {"repo": "vuejs/awesome-vue", "language": "None", "readme": "\n\n\n\n\n\n\nAwesome Vue.js \n\nA curated list of awesome things related to Vue.js\n\n\nResources\n\nOfficial Resources\nExternal Resources\nJob Portal\nCommunity\nConferences\nPodcasts\nYoutube Channels\nOfficial Examples\nTutorials\nExamples\nBooks\nBlog Posts\n\n\nProjects Using Vue.js\n\nOpen Source\nCommercial Products\nApps/Websites\nInteractive Experiences\nEnterprise Usage\nA11y\n\n\nComponents & Libraries\n\nUI Components\n\n\nTable\n\n\nNotification\n\n\nLoader\n\nProgress Bar\n\n\n\nTooltip\n\n\nOverlay\n\n\nParallax\n\n\nIcons\n\n\nMenu\n\n\nMinus Plus Input\n\n\nCarousel\n\n\nCharts\n\n\nTime\n\n\nCalendar\n\n\nMap\n\n\nAudio / Video\n\n\nInfinite Scroll\n\n\nPull-to-refresh\n\n\nMarkdown\n\n\nPDF\n\n\nTree\n\n\nSocial Sharing\n\n\nQR Code\n\n\nSearch\n\n\nMiscellaneous\n\n\nTabs\n\n\nForm\n\nPhone Number Input\nPicker\nGenerator\n\nDate Picker\n\n\nSelect\nSlider\nDrag and Drop\nAutocomplete\nType Select\nColor Picker\nSwitch\nMasked Input\nRich Text Editing\nImage Manipulation\nVideo Manipulation\nFile Upload\nContext Menu\nMiscellaneous\nWizard\nCSV\nComment System\n\n\n\nCanvas\n\n\nLink Preview\n\n\nTour\n\n\n\nUI Layout\nFrameworks\n\nResponsive\nMobile\nComponent Collections\nAdmin Template\nServer-side rendering\nStatic website generator\nOther\n\n\nUI Utilities\n\nEvent Handling\nResponsive Design\nForm\n\nValidation\n\n\nResize\nScroll\nRouting\nLazy Load\nPagination\nAnimation\nMeta Tags\nPortal\nFilters\nSVG\nMiscellaneous\nWebGL\nFullscreen\nPage visibility\nPrinting\n\n\nUtilities\n\nTypescript\nHTTP Requests\ni18n\nCustom Events\nPersistence\nState Management\n\nRedux\nMobx\nAuthentication/Authorization\nVuex Utilities\n\nSync Between Tabs\n\n\n\n\nGraphQL\nConcurrency Management\nCode Style\nCSS\nAsset Management\nPage Navigation\nMiscellaneous\nWeb Workers\nJSX\nMigration\nWeb Sockets\nPayment\n- Stripe\n- Paypal\n- Plaid\n\n\nIntegrations\n\nVue CLI 3 Plugins\n- Google Analytics\n- Yandex Metrika\n\n\nDev Tools\n\nInspect\nDocs\nTest\n- Browser-less require\nSource Code Editing\n\nAtom\nSublime Text\nVim\nVisual Studio Code\nVisual Studio\nBrackets\nIntellij\nEmacs\nKate\n\n\n\n\nScaffold\n\nClient\nUniversal\nServer\nElectron\nParts\n\n\nRuntime\n\nCommand Line / Terminal\n\n\nPrerendering\n\n\n\nResources\nOfficial Resources\n\nOfficial Guide\nAPI Reference\nGitHub Repo\nRelease Notes\nStyle Guide\nVue.js News\n\nExternal Resources\n\nVue.js\u8cc7\u6599\u307e\u3068\u3081(for japanese) by @hashrock\nVue.js Newsletter - Weekly dose of handpicked Vue.js news\nVue.js Tips - Tips to become a better Vue.js developer\nVue.js Wikipedia\nVue.js Radar - Curated newsletter + site covering new Vue.js releases/contributions.\nVue News - Social website focusing on the latest Vue.js news and information.\nVue Curated Resources - Recommended Vue.js courses and tutorials.\nBuiltForVue - NPM Mirror of all Vue.js components and packages.\nVue School - Learn Vue.js from video courses by core members and industry experts\nVueDose. Tips & tricks about the Vue ecosystem, for busy devs.\nVuelibs. A minimalistic list of Vue.js libraries and components based on the awesome-vue repo.\n\nJob Portal\n\nVue.js Jobs - VueJobs - A Vue.js job portal to hire or get hired for all your Vue.js jobs.\nVue.js Interview Questions - A List of 300 VueJS Interview Questions and Answers\n\nCommunity\n\nTwitter\nOfficial Forum\nvue-requests - Request a Vue.js module you wish existed or get ideas for modules\nVueJS Iran - Telegram Channel & group (group link available in channel bio)\nvueslack - 2300+ registered users worldwide\nVue Land - Discord chat server\nVueJS Russia - Telegram Group [Russian]\nVueJS Viet Nam - Facebook group\nVueJS Spanish - Slack Group\nVueJS Korean - Slack Group\nVueJS Thailand - Facebook Group\nVueJS Brasil - Telegram Group [Portuguese]\nVueJS Brasil - Facebook Page [Portuguese]\nVueJS Brasil - Facebook Group [Portuguese]\nVueJS en espa\u00f1ol - Facebook Group [Spanish]\nVueJS India \ud83c\uddee\ud83c\uddf3  - Discord chat server\nVueJS Indonesia - Telegram Group [Indonesian]\nVueJS Hong Kong - Facebook group\nVueJS Arab - Telegram Group\nVueJS Vix - Telegram Group [Portuguese]\nVueJS Vix - Meetup Page [Portuguese]\nVueJS Norway - Meetup\nVueJS Israel \ud83c\uddee\ud83c\uddf1 - Facebook Page\nVueJS Finland - Meetup\nVueJS Finland - Facebook Page\nHablemos de Vue.js - Telegram Group [Castellano]\n\nConferences\n\nVueConf\nVue.js London\nVueConf US\nVueConf Toronto\n\nPodcasts\n\nFull Stack Radio #30 (11-23-2015)\nJavaScript Jabber #187 (11-25-2015)\nChangelog #184 (11-27-2015)\nSoftware Engineering Daily (12-29-2015)\nJavaScript Air 016 (03-30-2016)\nCodecasts #2 - Falando Sobre Vuejs e Web Components (2016-08-19) [pt-BR]\nFull Stack Radio #50 (09-21-2016)\n\u548c Vue.js \u6846\u67b6\u7684\u4f5c\u8005\u804a\u804a\u524d\u7aef\u6846\u67b6\u5f00\u53d1\u80cc\u540e\u7684\u6545\u4e8b [zh-CN]\nMW S04E08 - Vue.js with Evan You and Sarah Drasner (04-27-2017)\nRequest For Commits #12 - Crowdfunding Open Source (Vue.js) (06-15-2017)\nThe Web Platform Podcast 132: Vue.js (07-27-2017)\nJavaScript Jabber #276 with Maximilian Schwarzm\u00fcller (08-29-2017)\nAnimating VueJS with Sarah Drasner(Software Engineering Daily 01-12-2017)\nViews on Vue (weekly podcast on Vue started 03-06-2018)\nThe Official Vue.js News Podcast\nVue podcast list via The QIT Tech Podcast Indexer\nDNE 138 - Vale a pena VueJS? (01-05-2018)\nCynical Developer #99 (10-15-2018)\nSyntax #130 (03-27-2019)\n\nYoutube Channels\n\nVueNYC\nVueConf EU\n\nOfficial Examples\n\nBasic Examples\nVue.js TodoMVC\nCoffeeScript Version\nVue.js HackerNews Clone\nVue.js 2.0 HackerNews Clone\n\nTutorials\n\nVue.js screencasts on Laracasts\nVuejs 2 Authentication Tutorial on Auth0 blog\nCreate a GitHub File Explorer Using Vue.js on Scotch.io\nVue.js Tutorial on Vegibit\nVue.js build set-up from scratch with webpack, vue-loader and hot reload\nVuex basics: Tutorial and explanation\nVuex introduction video - James Browne from London Vue.js Meetup #1\nVue.js \u4e2d\u6587\u7cfb\u5217\u89c6\u9891\u6559\u7a0b on Laravist\nDevelop a Reactive Invoice App using Vue.js on craigmckenna.com\nHybrid App Example with Laravel and Vue.js in Portuguese by @vedovelli\nVue.js Introduction Turkish Language on oguzhan.in\nVue.js VideoTutoral Series in Spanish (3-8-2016) on YouTube by Juan Andr\u00e9s N\u00fa\u00f1ez\nVue.js Screencast Series in Spanish on Styde.net\n\u8bb2\u89e3Vue.js \u5b98\u7f51 \u4e2d\u6587-\u542b\u4ee3\u7801\u3001\u767e\u5ea6\u4e91\u3001youtube on bhnddowinf\nExploring Real Time Apps with VueJS, ES2015 and Webpack on Pusher\nVue.js in Bahasa Indonesia on sekolahkoding.com\nVue.js from Scratch Series in Russian on YouTube by .dev\n\u0421\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u0441\u0435\u0440\u0432\u0456\u0441\u0443 \u0434\u043b\u044f \u0437\u0431\u0435\u0440\u0456\u0433\u0430\u043d\u043d\u044f \u0444\u0430\u0439\u043b\u0456\u0432 \u0437 Flask, RethinkDB \u0442\u0430 Vue.js, \u0447. 1 Ukraine\nVueJS 2 French tutorial Fran\u00e7ais par Grafikart\nJayway Vue.js 2 workshop. Build an e-commerce site with vue-router, vuex and vue-resource\nHow to Create Great VueJS Applications Using Wijmo Controls\n\u8bb2\u89e3Vue.js 2 \u5b98\u7f51 \u4e2d\u6587-\u542b\u4ee3\u7801\u3001\u767e\u5ea6\u4e91\u3001youtube on bhnddowinf\nVue.js Cheatsheet: Server-side Applications, Router, Vuex Store, GraphQL and more by @xpepermint\nMedium like Image Loading with Vue.js\nHow to Use Vuex in a Laravel Spark Project on Metric Loop\nHow To Set Up Modules in Vuex on Metric Loop\nLearn Vue 2: Step By Step on Laracasts\nVue.js \u4e2d\u6587\u6559\u7a0b\nUp and Running with the Vue.js 2.0 Framework on SitePoint\nHow to make API Calls with Vuex on Metric Loop\nHow to Use Vuex to Build a Feature on Metric Loop\nVue.js 2.0 Fundamentals on YouTube by DevMarketer\nVuex For The Clueless\u200a\u2014\u200aThe Missing Primer On Vue\u2019s Application Data Store\nReal-time Grid Component Laravel, Vue.js, Vuex & Socket.io\nVueJS 2 - The Complete Guide (incl. Vuex) - Udemy Tutorial\nDevelop Web Apps with Vue.js on egghead.io\nVue.js 2 - Getting Started\nVue.js 2 & Vuex (Basics)\nT\u00fcrk\u00e7e VueJS E\u011fitim Videolar\u0131 on YouTube by Fatih Acet\nBuilding a JSON Tree View Component in Vue.js from Scratch in Six Steps on digimondo devblog by Arvid Kahl\nLet's Vue! - OpenLecture 2017.01 in Russian on YouTube by Illya Klymov (@xanf)\nBootstrapping your first Vue.js application using vue-cli by @afropolymath\nBuild vue-hackernews-2.0 from Scratch by @ Detachment\nRole Based Authorization for your Vue.js and Nuxt.js Applications Using vue-kindergarten\nComplete Vue.js Application Tutorial - Creating a Simple Budgeting App with Vue by @matthiaswh\nVue.js Tutorial: A Prerendered, SEO-Friendly Example\nVue.js Introduction For People Who Know Just Enough jQuery To Get By\nFetching Data from a Third-Party API with Vue.js and Axios\nFun Projects with Vue 2 (Video) by Peter van Meijgaard, Packt. (April 2017)\nVue JS: Simultaneously Running Express and Webpack Dev Server on Medium by Henrik Fogelberg\nVue JS 2 Tutorials on Youtube by The Net Ninja\nAdd a headless CMS to VueJs in 5 Minutes\nvue \u67b6\u6784\u4e2d\u7684 Watcher\nBuilding Your First App With Vue.js\n5 Practical Examples For Learning Vue.js\nMigrating from KnockoutJS to VueJS by @jesalg\nCreate a quiz with Vue.js by @rap2h\nVue.js: Getting Started by @chadcampbell\nVue.js 2 & Firebase - Building Real Time Single Page Web Applications\nVue.js 2 & Vue-Resource - Real-World Application With External API Access\nInteractive Vue.js Screencasts For Beginners\nVue.JS ile NASA API'\u0131n\u0131 Kullanarak Veri \u00c7ekme on YouTube by Ali G\u00d6REN\nWeb development with Vue.js 2 (Video) by Olga Filipova, Packt. (June 2017)\nBuild a realtime chart with VueJS and Pusher\nIntro to Vue, repo for Frontend Masters Course\nVue Guide on CSS-Tricks\nUsing Typescript in your VueJS app\nVue.js\u89c6\u9891\u7cfb\u5217\uff0c\u514d\u8d39\u3001\u5165\u95e8\u3001\u5b9e\u6218 on nodelover\nVue.js \u9884\u89c8 on ninghao.net\nVue.js: Development Machine Setup by @chadcampbell\nBuilding a Vue v2 JS app using Vue-router by @mikestreety\nBuild your own carousel with Vue by @Atom_Hernandez\nUnit Testing Vue.js Components with the Official Vue Testing Tools and Jest by @alexjoverm\nCreating Vue.js Transitions & Animation: Live Examples by @udyuxdev\nCreating Custom Vue.js Plugins\nAsync in VueJS part 1\nAsync in VueJS part 2\nUsing localStorage with Vuex store without a plugin by @mikestreety\nUsing props for accessing URL parameters within components with Vue Router by @mikestreety\nDeploy Vue.js\u200a\u2014\u200aSSR(Vuetify) on Production with Pm2 and Nginx\nTesting Vue Components on laracast\nBuilding a Full Stack Web App with Vue.js and Express.js by @CodyLSeibert\nVue.js 2 Recipes (Video) by Peter van Meijgaard, Packt. (September 2017)\nGetting Started with Vue.js on Sabe.io\nBuilding Your First Advanced CRUD Application with Vue 2 (Video) by Peter van Meijgaard, Packt. (July 2017)\n\ud504\ub860\ud2b8\uc5d4\ub4dc \uac1c\ubc1c\uc790\ub97c \uc704\ud55c Vue.js \uc785\ubb38\uc11c\n\ub204\uad6c\ub098 \ub2e4\ub8e8\uae30 \uc26c\uc6b4 Vue.js (Video) on Inflearn by Captain Pangyo\nBuild a Vue.js Blog in 2 hours tops on Snipcart\nGetting Started with VueJS 2 by Sachin Bhatnagar @sachinbee on Udemy\nGetting Started with Vuex: Managing State in Vue.js on Sabe.io\nVue2 ACL using CASL by Sergii Stotskyi\nJavaScript Choice Made Easy - Angular v. React v. Vue (Video) by Daniel Kmak, Packt. (November 2017)\nVuejs 2.5+ Authentication Tutorial using Auth0 on Storyblok blog\nGraphCMS beginners guide with Vue on GraphCMS\nVue.js debugging in Chrome and VS Code This recipe shows how to use the Debugger for Chrome extension with VS Code to debug Vue.js applications generated by the Vue CLI.\nGetting Started with Vue JS 2 (Video) by Sachin Bhatnagar, Packt. (January 2018)\nBuilding a movie app interface with Vue.js by Hassan Djirdeh, @djirdehh\nLet\u2019s Build a Custom Vue.js Router by Hassan Djirdeh, @djirdehh\nGetting started with Vue, Webpack 4 & Babel by Bjorn Krols, @KrolsBjorn\nHow to add Bootstrap 4 to your Vue project by Bjorn Krols, @KrolsBjorn\nHow to add Semantic UI to your Vue project by Bjorn Krols, @KrolsBjorn\nHow to add ESLint to your Vue project by Bjorn Krols, @KrolsBjorn\nHow to make content dynamic via URL query parameters in Vue by Bjorn Krols, @KrolsBjorn\nHow to enable history mode for AWS S3 hosted Vue applications by Bjorn Krols, @KrolsBjorn\nA basic introduction to debugging Vue applications using breakpoints by Bjorn Krols, @KrolsBjorn\nBuild a Vue.Js E-Commerce App with ButterCMS Headless Backend\nMASTER VUE.JS\nBuild a voting application with Go and Vue.js\nBuild a collaborative painting app using Vue.js\nBuild a realtime payment dashboard with Stripe\nBuild a cryptocurrency tracker using Vue.js\nBuild a design feedback app using Vue.js\nDeveloping a Single Page App with Flask and Vue.js\nAccepting Payments with Stripe, Vue.js, and Flask\nAPI Driven Development With Laravel and VueJS (Free Course) on serversideup.net\nManaging State in Vue.js by Hassan Djirdeh, @djirdehh\nReal World Projects with Vue.js by Daniel Khalil, Packt. (August 2018)\nHeartbeat (Vue + NW.js Video series) by @ackzell (2017 - 2018)\nFirebase Server-Side Render Vue Apps with Nuxt.js (Server-side Rendering with JavaScript Frameworks)\nFirebase Measuring Vue SSR Performance with Nuxt.js (Server-side Rendering with JavaScript Frameworks)\nCreating an interactive map with D3 and Vue (October 2018)\nThe guide to write universal, SSR-ready Vue components\nVue.js Fundamentals by Vue School\nVuex for Everyone by Vue School\nVue.js Form Validation by Vue School\nThe Vue.js Master Class by Vue School\nVue.js Firebase Realtime Database by Vue School\nVue.js Firebase Authentication by Vue School\nDynamic Forms with Vue.js by Vue School\nCustom Vue.js Directives by Vue School\nVue.js Application Development Essentials by Bart\u0142omiej Potaczek, Packt. (October 2018)\nTroubleshooting Vue.js by Christian Hur, Packt. (October 2018)\nNuxt.js - Vue.js on Steroids by Maximilian Schwarzm\u00fcller, Packt. (October 2018)\nBuilding an Electron File Explorer with Quasar (and Vue) by @hawkeye64. (November 2018)\nBuild Web Apps with Vue JS 2 & Firebase on Udemy by the Net Ninja\nVue JS 2 - The Complete Guide (incl. Vue Router & Vuex) on Udemy by Maximilian Schwarzm\u00fcller\nSPA Application using Vue.js, Vuex, Vuetify, and Firebase (Part 1) by Jennifer Bland @ratracegrad. (November 2018)\nSPA Application using Vue.js, Vuex, Vuetify, and Firebase (Part 2) by Jennifer Bland @ratracegrad. (November 2018)\nSPA Application using Vue.js, Vuex, Vuetify, and Firebase (Part 3) by Jennifer Bland @ratracegrad. (November 2018)\nSPA Application using Vue.js, Vuex, Vuetify, and Firebase (Part 4) by Jennifer Bland @ratracegrad. (November 2018)\nAdding Internationalization to a Vue Application by Jennifer Bland @ratracegrad. (November 2018)\nPractical Projects with Vue JS 2 by Jack Herrington, Packt. (December 2018)\nVue.js \uae30\ucd08 \ub2e4\uc9c0\uae30 (Video) on Lessipe by Lessipe\nFull Stack Web Development with Vue.js and Node.js by Haider Rehman, Packt. (January 2019)\nVue for Designers by Design+Code (February 2019)\nVue Introduction in Turkish by Talat Tufekci\nData pulling using Vue-Resource in Turkish by Talat Tufekci\nSpa Application using Vue-router in Turkish by Talat Tufekci\nCreate Vue Projects using Vue-cli in Turkish by Talat Tufekci\nMessaging between Vue components and Vuex in Turkish by Talat Tufekci\nHow to Dynamically Add a Class Name in Vue by Michael Thiessen\nBuild a Library web application with Vue JS, Node JS, and SQL or MongoDB using ScaffoldHub By Felipe Lima @scaffoldhub_io\nBuilding a Realtime Location tracking app with NativeScript + Vue by Saibbyweb\n\nExamples\n\nStarter Application with JWT Auth + sample backend API in Laravel\nNode Webkit + Vue example by @brandonjpierce\nVue Samples by @superlloyd\nHackerNews clone with vue.js + vue-router by @kazupon\nElectron + Vue example by @bradstewart\nSingle page application example (Vue + Voie) by Boris Okunskiy\nBegin - Task Manager SPA written in Vue + Lumen by Raj Abishek\nVue Mini Shop by BosNaufal\nVue SoundCloud by mul14\nFeature Requests (Laravel + Vue Combo) by haydenbbickerton\nVue Cookbook (Vue1.0 + express) by @yjj5855: A demo first screen rendering of a service\nStrong Together - A starter project to build single page Vue.js apps as stand-alone or for Laravel / Laravel Spark projects, based on Browserify and Semantic-ui) by WebSemantics\nvuetest: an ad admin web with user auth, bootstrap ui, uploader, WYSIWYG editor in iframe\nvue-shopping by andylei18\nVue-cnodejs,060 by @shinygang\nvue-zhihu-daily by hilongjw\nVueChess -Multiplayer online chess game  by gustaYo\nNgexplorer-vuejs-client -Vue client for Ngexplorer   by gustaYo\nVue 2048 (Vue + Webpack) by @pengfu: Popular 2048-Game implemented using Vue,Webpack,Sass,ES6\nVue Simple PWA by BosNaufal\nTour of Heroes (Vue 2.0): A Vue 2.0 port of the Angular 2.0 Tour of Heroes demo app. Highlights: ES6/7, render functions, JSX, revue (redux bindings for Vue), vue-router, Airbnb eslint, webpack. by @aweber1\nvue-table-pagination A table with pagination by echovic\nFeathers and Vue 2.0 Blog Admin Demo Demo for using Feathers with Vue 2.0. It includes authentication, vue-router, vue-infinite-loading and roles by delay\nvue-zhihudaily-2.0 Zhihudaily demo built with Vue 2.0, vue-router & vuex, with server-side rendering. by cs1707\nvue-demo-todolist a simply vue2.0 demo built with Vue 2.0, vue-cli. by fishenal\nvue-AdminLte by liujians\nVue(2.0) + Node.js: A blog content manage system (CMS) by @ycwalker\nngexplorer-quasar -Implementation of Ngexplorer with quasar framework by gustaYo\nzhihu-daily-vue a zhihu daily base on vue2.0 by moonou\nloopback-vue loopback+vue+vue-resource,ionic-app,vue page\u5206\u9875\u529f\u80fd,authenticate \u6743\u9650\u63a7\u5236,accesstoken\u673a\u5236,credentials,CI,docker  qxl1231\nvue-s3-dropzone A Vue.js drag-and-drop component uploads files to AWS S3 serverlessly\neasy-vue a easy example using the vue to implement easy web with vue 2.0, vuex 2.0, vue-router 2.0, vue-infinite-scroll 2.0, vue-progressbar 2.0 by TIGERB\nVuex Events Messaging Demo by Metric Loop\nvue-memo a simple demo build with Vue.js(>2.x.), vue-router(>2.x.), vuex(>2.x.), vuex-router-sync@next(>3.x.) and Firebase(>3.6.x) by akifo\nResume Vue JSON based Resume based on Vue 2.0 by ChangJoo Park\nApp example with JWT Authentication developed with Phoenix Framework, Vue and Vue Router (demo) by @Angarsk8\nSample CRUD app with router in Vue 2.0 by @shershen08\nASP.NET Core Vue.js server-side rendering sample by @mgyongyosi\nvuefire-quickstart - Documented Firebase integration w/ webpack and eslint, by @sejr.\nhello-vue-django Vue.js and Django integration starter project with hot code reload\nReal Time Social News App developed with Phoenix, Vue, Vue Router and Vuex (demo) by @Angarsk8\nvue-calculator a simply calculator built with Vue 2.0, vue-cli(webpack-simple). by CaiYiLiang\nWikipedia-viewer A simple wikipedia-viewer page built with vue2.x ,vue-router,vue-cli(webpack-simple) and ajax(jsonp). by CaiYiLiang\nvue2.x-douban A simple of douban movie build with vue2.x,vue-router and axios(\u8c46\u74e3\u7535\u5f71). by Superman\nvue-laravel-example Vue - Laravel - Example is a simple example to set Vue with Laravel. by Jiajian Chan\nvue-foundation A demo app integrating VueJS with Zurb Foundation, built using the webpack vue-cli f\naspnetcore-Vue-starter A VueJS 2 starter template as part of an asp.net MVC dotnetcore project. This template includes the VueJS client app and a backend API controller.\nvue-reddit-app A Reddit SPA demo built with Vue 2.X , Vue Router 2 , Vuex and axios. Using Muse-UI and vue-cli webpack template by @yujiahaol68\nvue-music-qq A qq-music project is based on vue-cli. The pages are simple and smooth\nNavigationTab with Vue-Redux and Plain VueJSX  Navigation Tab with both plain Vue JSX and Vue + Redux Binding\nVeggie Map An interactive demo using Vuejs + Vue router + Leaflet and Firebase\nvuejs-d3 examples how to use d3 for visualisations.\nvue-twitter-client A Twitter Client App build with Vue 2.X, Vuex, electron-vue and Electron\nDouban Awesome douban Example created with Vue2.x + Vuex + Vue-router + vue-resource. by jeneser\nStoryblok vuejs-boilerplate - Integrates Storyblok's Component System, allows to create editable Websites.\nVuexpresso - A boilerplate using VueX, Vue-Router, Vue-Apollo, webpack, GraphQL, Apollo-client, express and mongo\nVue.js with Sails.js example project - This project is for those who are new to single-page applications and want to learn through a real example.\nVue.js & Pyramid web framework app - A boilerplate using Pylons Pyramid webframework backend Vuejs webpack2, vue-router, yarn(packet manager)\nvue-feathers-chat A sample realtime chat made with Vue in frontend and Feathers in backend, but using just Socket.IO-Client for the communication\nvue-xplan A rotating earth demo page created with Vue and three.js\nvueSocketChatRoom A socket chat room using vue2.x,vuex2.x,vue-router2.x,vux2.x,socket.io\nvue-tetris (Use Vue, Vuex, Immutable to code Tetris) by @Binaryify: Use Vue, Vuex, Immutable to code Tetris.\nroute-planner-vue by @Kasheftin: The tool for planning routes with multiple sortable layers, draggable directions, markers and shapes on google map.\nMyDiary-Vue A diary application build with Vue 2.X which is also have contact and todolist function\nVueJS Example Projects on Github by Ali G\u00d6REN\ntodo-mvc-webpack by voluntapear TodoMVC implementation on Vue 2 using the webpack-basic template with examples showing vuex, vue-router, central event bus and VueFire.\nChess Storybook Example with Vue 2.0 by gustaYo\nVue Weather Notifier A small sample animation app with SVG and Vuex\nNuxt Type An example Vue project with Nuxt for routing/SSR to demo page transitions\nVueBlog A blog system supporting service side rendering by wmui\nCinemateka - An example of SPA made with Vue v1 & Laravel 5. Film & events schedule. Russian comments.\nvue-2.x-boilerplate - A simple and small starter kit for a Vue project Vuex + vue-router\nvue-minesweeper - A deadly simple minesweeper game with vuejs by rhapsodyn\nX-Flowchart-Vue - A flowchart editor with SVG and Vue by OXOYO\nkoa-vue-notes-web - A fleshed-out SPA using Koa 2.3 on the backend and Vue 2.4 on the frontend. Includes fully featured user-authentication components, CRUD actions for the user's notes, and Vuex store modules.\nVuejs Shopping Cart - Shopping cart example using Vuejs and Firebase\nPokedexVueJs by @rchung95\nvuefire-auth A Vuefire Vue2-Auth-Email Verification with Firebase\nvuefire-realtimedatabase A Vuefire Vue2-RealtimeDatabaseCRUD with Firebase\nvuefire-storage A Vuefire Vue2-Storage with Firebase\nVue2-PWA-Blog by @deepak-singh\nvue-firebase-auth-vuex A Vue2 Firebase Authentication with Vuex and support Progressive Web Apps\nvue-chart-stater-kit Quick starter using Vue Router, Vue Chart, Element-UI\nvue2.0-demos using mint-ui, Element-UI,And have Some demos\uff08select city and so on\uff09\nconway Conway's Game of Life in Vue.\nvuex-feature-scoped-structure An example application of the feature scoped vuex application structure\nvuex-examples - Simple Examples on using Vuex to build Real World Apps\nvue-vuex-todomvc - Example TodoMVC Vue.js app with Vuex store and server backend via REST and full set of E2E tests using Cypress.io test runner.\nvuejs-sqljs-boilerplate - This is a boilerplate to use both Vue.js and sql.js together\nX-WebDesktop-Vue - The WebDesktop system based on Vue by OXOYO\nvuejs-music-player - A Vue.js lite music player\nVue.js Best Practices Example Project - A best practices example project using Vue.js + Vue Router + Vuex + Vuelidate\nVue.js [ONE] client - [ONE] client written with Vue2.5\nVue.js 2.5 with vue-cli v3 including authentication with auth0 by Dominik Angerer, Storyblok\nSkeleton Vue+TypeScript - TypeScript, VueJS, ElementUI, Vue Router, Vuex, Material Icons, BrowserSync, Dockerfile\nPENV Starter by @jesalg - A basic example of how to use VueJS, Express and PostgreSQL in conjunction.\nvue-relay-examples - A collection of example applications using vue-relay.\nlaravel-vue-boilerplate - A Laravel 5.5 SPA boilerplate with a users CRUD using Vue.js 2.5, Bootstrap 4, TypeScript, Sass, Pug and Jest.\nVue Design System - An open source boilerplate for building UI Design Systems with Vue.js.\nVue Bulma Demo - A simple demo website to check out Bulma / Vue JS & express in conjunction.\nStarter application ready for production with TypeScript, vuex, vue-router, HMR and more\nvue.js\u4e0elaravel\u7ed3\u5408\u7684\u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1\u6a21\u677f- A template website to laravel passport / Vue.JS & Element UI.\nHands-On Web Development with Vue.js by Roman Kuba, Packt. (May 2018)\nVue Online Shopping Mall - A online shopping mall SPA demo, \u57fa\u4e8eVUE\u5f00\u53d1\u7684\u524d\u540e\u7aef\u5206\u79bb\u7535\u5b50\u5546\u57ce\u524d\u7aef\u9879\u76ee\nFUE - Admin SPA client and server side boilerplate with Vue.js + Vue Router + Vuex + Vuetify + FeathersJS\nVue + TypeScript Cookbook - A small cookbook covering some less-than-obvious solutions for people getting started with Vue + TypeScript\nVuejs Examples\nASP.NET Core Vue Starter CLI 3.0 A Vue starter template using Vue CLI 3.0 with custom configuration (default TypeScript, Vue, Router, Vuex, Vuetify) integrated with ASP.\u200bNET Core by @SoftwareAteliers (September 2018)\nvue-soundcloud A Soundcloud client built with Vue.js 2, by Soroush Chehresa\nvue-cart  A simple shop cart made with vue, vuex and vue router. by crisgon\nNuxt + Apollo + Element A Vue.js SSR boilerplate with Nuxt, Element (custom theme) and Vue Apollo.\nvue-daily-zhihu a simple demo build with Vue 2.0 & vue-router & vuex by walleeeee\ncharcoal A starter template using the Vue CLI 3.0 and styled with Bulma by Seth Davis\nMulti-page ASP.NET Core Vue with TypeScript - Multi-page ASP.NET Core Vue, Typescript, Vuex, Vue router, Bulma, Sass and Jest application. Template/starting point on how to use Vue.js as a multi page(multiple mini spa's) application in .NET Core MVC.\nCION - Design system boilerplate for Vue.js - A design system build primarily for Vue.js applications. It utilizes design tokens, a living styleguide with integrated code playgrounds and reusable components for common UI tasks.\nVue websockets example - A basic example of Websockets usage with Vue.js 2 + Node project for full working example.\nVue(2.0) + Node.js: A blog by @FatDong1\nvue-todo-list ToDo List sample app based on Vue + Vuex + Vuetify + Vee-Validate\nVue.js and Ionic v4 examples - A set of examples of how to use Ionic v4 with Vue.js\n Personal Website that use Vue, Vuex and Vue-Router  - A simple website example that made with vue, vuex and vue-router by Muratcan \u015eent\u00fcrk\nClient-Side Vue.js - Demo - Vue.js client-side for tiny, quick-loading, node.js-less Single Page Apps by Justin Wash\nLarge scale Vue.js application boilerplate + Vuex\nSnake game on Vue.js without Canvas\nBuild a Vue chat app with CometChat\n\nBooks\n\nThe Majesty Of Vue.js by Alex Kyriakidis & Kostas Maniatis, Packt. (Nov 2016)\nLearning Vue.js 2 by Olga Filipova, Packt. (Dec 2016)\nThe Majesty Of Vue.js 2 by Alex Kyriakidis and Kostas Maniatis, Leanpub. (Mar 2017)\nVue.js 2 Cookbook by Andrea Passaglia, Packt. (May 2017)\nVue.js in Action by Erik Hanchett and Benjamin Listwon (Spring 2018)\nTesting Vue.js Applications by Edd Yerburgh (Summer 2018)\nVue.js 2 and Bootstrap 4 Web Development by Olga Filipova, Packt. (September 2017)\nFront-end com Vue.js by Leonardo Vilarinho, Casa do C\u00f3digo. (November 2017)\nVue.js 2 Web Development Projects by Guillaume Chau, Packt. (November 2017)\nFull-Stack Vue.js 2 and Laravel 5 by Anthony Gore, Packt. (December 2017)\nVue.js 2.x by Example by Mike Street, Packt. (December 2017)\nMastering Vue.js by Oleksandr Kocherhin. (January 2018)\nFullstack Vue: The Complete Guide to Vue.js by Hassan Djirdeh, Nate Murray, & Ari Lerner. (March 2018)\nVue.js 2 Design Patterns and Best Practices by Paul Halliday, Packt. (March 2018)\nVuex Quick Start Guide by Andrea Koutifaris, Packt. (April 2018)\nFull-Stack Web Development with Vue.js and Node by Aneeta Sharma, Packt. (May 2018)\nThe Vue Handbook by Flavio Copes. (July 2018)\nASP.NET Core 2 and Vue.js by Stuart Ratcliffe, Packt. (July 2018)\nVue.js: Construa aplica\u00e7\u00f5es incr\u00edveis by Caio Incau, Casa do C\u00f3digo. (September 2017)\nGetting to Know Vue.js by Brett Nelson, Apress. (August 2018)\nVue: Build & Deploy by Daniel Schmitz, Leanpub. (September 2018)\nBuilding Applications with Spring 5 and Vue.js 2 by James J. Ye, Packt. (October 2018)\nVue.js Quick Start Guide by Ajdin Imsirovic, Packt. (October 2018)\nVue.js Component Patterns Course by Frederik Dietz (April 2019)\n\nBlog Posts\n\nVue x Hasura GraphQL\nUsing GraphQL Mutations in Vue.js\nLearn How To Build A Data-Driven Search UI with Vue.JS\nUsing GitLab CI/CD to auto-deploy your Vue.js application to AWS S3\nDockerizing a Vue App\nDeploying a Flask and Vue App to Heroku with Docker and Gitlab CI\nLarge-scale Vuex application structures by Kevin Peters\nComposing computed properties in Vue.js by Kevin Peters\nLearn how to refactor Vue.js Single File Components with a real-world example by Kevin Peters\n\nProjects Using Vue.js\nOpen Source\n\nPageKit - Modular and lightweight CMS built with Symfony components and Vue.js.\nnpmcharts.com - Compare npm packages and spot download trends.\nKoel - A personal music streaming server that works.\nRaven Reader - Simple RSS Reader made using atom electron and vue.js.\nGokotta - A simple music player built by electron and vue.\nCoPilot - An admin portal based on AdminLTE with vue.js integration.\nRetrospectify - A simple tool for doing collaborative retrospectives in agile teams.\njade-press - Cms based on mongodb, nodejs, koa, vue and more.\nastralapp - Organize Your GitHub Stars With Ease.\nEME - An Elegant Markdown Editor.\nGithub-explorer - A spa which can help you check your github in a better way.\nHotel - Start your dev servers from your browser and get local domains in seconds.\nSurfbird - A Twitter client written with modern web technologies.\nApproach0 - A math-aware search engine.\nFlox - Self Hosted Movie, Series and Anime Watch List.\nJavaScript Guessing Game - A game for identifying JavaScript tools and libraries.\nvue-ghpages-blog - A blog based on GitHub pages by Vue.js 2 + Webpack 2.\nVuedo - Blog platform, built with Laravel and Vue.js.\nvue-music163 - A Vue.js project for music.\nTomato5 - Real-time collaboration tool, it combines Pomodoro Technique with a team status share board.\nWeb Learn - A service which provides simple access to thousands of video tutorials on web developing and programming.\nExcelJSON - A tool to convert CSV, TSV to/from JSON.\nMaterialize-blog - A material blog built with Laravel5.3 and Vue2.x.\nVueCompomnentGenerator - Generate vue single file component on browser.\nSDR News - News for web designers and developers aggregated from multiple sources (Reddit, Hacker News and Prominent Blogs).\nPJ Blog - Open source blog built with Laravel and Vue.js.\nLulumi-browser - Lulumi-browser is a light weight browser coded with Vue.js 2 and Electron.\nvue-wordpress-pwa\nOpenAPI 3 viewer - Browse and test a REST API described with the OpenAPI 3.0 Specification\nStacer - Linux System Optimizer and Monitoring\nDistrochooser.de - An orientation guide for Linux beginners\nBuka - EBook Management\nDocute - A framework for writing documentation without build process\npm86 - Production process manager for Node.js apps Websites\nvms - A Vue.js 2.0 Management System\nnativescript-vue - A Vue.js implementation of the NativeScript renderer.\npiper - A drag-and-drop mobile website builder base on Vue.\nmmf-blog-vue2 - A blog based on Vue2(Vue-router, Vuex) and Webpack2.\nMedia Manager - Web File Manager.\ndyu/bookmarks - A self-contained, self-hosted bookmarking app powered by leveldb, built with Vue2.1.x.\nJSON Schema Editor - An intuitive editor for JSON schema. Develop with Vue.js 2 and Firebase.\nnpm-stats - npm package download statistics dashboard\nvue2-admin-lte - a project that converts AdminLTE to work with Vuejs (v2.x).\nDockeron - A project built on Electron + Vue.js for Docker on desktop.\nFlamme - An open source Tinder desktop client built with electron and Vue.js for educational purposes\nGoldfish - A HashiCorp Vault UI built with VueJS, Golang, and Bulma CSS\nAdminify - An Admin dashboard based on Vuetify, check the Online Demo\npromptie - A framework written in Vue.js for creating command-line like interfaces in web browsers.\nHare - \ud83d\udc07 Application boilerplate based on Vue.js 2.x, Koa 2.x, Element-UI and Nuxt.js\nPaper-Dashboard -Creative Tim Paper Dashboard made for Vue\nAdminLTE-VueJS2 - An open source project that implements  VueJS (v2.x) on AdminLTE.\nMaterial Dashboard - Creative Tim Material Dashboard made for Vue\nExplore-Github - VueJS 2 Github Explorer Using API v3\nCoreUI - Open Source Admin Template powered by Vue.js\nChuckNorris - Chuck Norris Jokes Generator built with VueJS + api.chucknorris.io\nLeafPlayer - A simple and fast, privately hosted music streaming server.\nJSON Editor - A schema-aware JSON editor. Develop with Vue2.\nVoten - A Reddit-like platform built with Vue2 and Laravel.\nNews Weaver - A web based RSS Reader/Aggregator made using VueJS and VuetifyJS\nWake Up Billie Joe! - A web site countdown to October, based on Green Day's song Wake me up when September Ends. Created using Vue and Firebase.\nAstrum - A lightweight pattern library designed to be included with any web project.\nvue2-pwa-vision - A Face Detection Google Cloud Vision with Vue2 + Vuetify + Progressive Web App\nvue2-pwa-rekognition - A Face Detection Amazon Rekognition with Vue2 + Vuetify + Progressive Web App\nAmmoBin.ca - meta search site for online ammo prices across Canada\nSPA-asp.net-api-vuejs- - A Vue.js single page application for basic task Management & messaging using ASP .NET Webapi 2 and SQL server\nBook-Trading-Club - Trade or loan books with other book readers in your area. Built using nodejs and vuejs2\nvuejs-extension-pack vscode - An extension packf or vscode with popular VS Code extensions for Vue.js development.\nWiki.js - A modern, lightweight and powerful wiki app built on NodeJS, Git and Markdown\nvue-pwa-speech - A Speech to text With Google Cloud Speech on Vue2 + Vuetify + Progressive Web App\nvue-speech-streaming - A Performing Streaming Speech Recognition results in real time Speech To Text with Google Cloud Speech + socket.io on Progressive Web App\nMy Animation List - A tool to easy get css animation code\nvue-input-streaming - A TextInput Streaming RealTime And Two Way Data Binding Broadcasting with Pusher\nTidyTab - A Chrome extension for tidying up those tabs.\nperegrine-cms - A Vue.js and Apache Sling based head-optional CMS\nconcept-to-clinic - Lung cancer prediction project with Vue.js interface\ngrid-awesome - Generate boilerplate css for grid layouts using the css display: grid; property.\nLight Bootstrap Dashboard - Creative Tim Light Bootstrap Dashboard made for Vue\nHubaga - A free and lightweight WordPress eCommerce plugin for developers and other digital shops.\nvue-webpack-buefy - Vue.js starter with full-featured Webpack and Buefy\nCoypu - Text-editor-like weekly planner\ncore-server - Highly scalable VueJs framework with an integrated API system, and multiple advanced features.\ndiscord-logo - A Vue.js animated discord logo generator based on SVGs. (Github Page)\nnode-vue-template - A starter template for building complete application using Node.js (API) and Vue.js (SPA) with some included packages and configurations to help start the development quickly.\nvue-storefront - Vue.js Storefront - PWA for eCommerce. 100% offline, platform agnostic, headless, Magento2 supported.\nfd-vue - Vue.js client for an IoT framework\nwildfire - A drop-in replacement for other comment plug-ins.\nRide Receipts - Simple automation desktop app to download and organize your tax invoices from Uber and Lyft.\nvue-chrome-extension-boilerplate - Boilerplate for Chrome extension using Vue.js and Webpack\nTimeMark - A Time manager which will can record your time and some more function will be developed.\nLaravel Enso - SPA Admin Panel built with Bulma, VueJS and Laravel, packing lots of features out of the box.\nCode Notes - A simple code snippet manager for developers built with Electron & Vue.js.\nPomotroid - Simple, visually-pleasing and customizable Pomodoro timer.\nXMR Miner - Cryptocurrency (XMR) mining app, built with Vue.js and visualized with D3\nXMR Paper - Monero wallet generator, built with Vue.js\nJoyProxy - Chrome extension for handling proxy settings\nactivity-automation - Manage daily activities and get reports on timely basis.\njsettlers-web Popular German board game to build hexes, settlements, cities, roads with earned resources\nTamiat CMS - Tamiat is a front-end focused CMS, uses Vue.JS as the frontend and integrates with Firebase for the backend functionality.\nvuegg - vue GUI generator: Create mockups and code in one go! It leverages the creation of pages, components and styles with its visual editor. Generate all scaffolding code for your next vuejs project.\nPodlove Web Player - Podcast-optimized, HTML5-based audio player featuring chapters, transcripts and embedding.\nLeo Vue - Use the open source Leo outlining editor/IDE to create webapps with nested menus, with support for Vue components in content.\nJustine - A configurable HTML documentation generator (currently supports JSDoc) using Vue components for the documentation template\nDeezer-Vue - Deezer client built with Vue\\Vuex\nVuep.run - Online SFC editor for Vue\nV\u00b7oogle - Google.com, reVued\nPomidorus - Pomodoro time tracker build using Vue and D3 \ud83c\udf45\nHubble - \ud83d\udd2d Travel through GitHub Stars' history.\nVuepress - Minimalistic Vue-powered static site generator\nSocialhome - A federated rich profile builder with social networking features\nGenVue - a hostable, web application that lets confidential users upload and share private files build on Vue.js, Vuetifyjs and NetCore WebAPI stack\nvue-array - Array object operation under Vue, Array object operation under Vue Use this package to manipulate the array. Vue can monitor the changes in the array\nLaqu-l - A complete App starter kit with Quasar Framework, GraphQL API backend with OAUTH 2.0 authentication, Firebase ready, multilanguage capability and more.\nProtovue - A prototyping component library that helps designers and developers quicky scaffold an abstracted app layout.\nChattier - SPA social network built with Laravel 5.6, Vue.js 2, and Bulma (Buefy components + Bulmaswatch themes). Also uses JWT authentication.\nchrome-ribbon-reminder - A Chrome extension written using Vue and Async/Await. Uses a popup display and changes badge counts.\nFaviator - A simple easy favicon generator.\nModular Genealogy - Genealogy / family tree management system using Laravel 5.7, Vue.js 2.5 and various components. Work in progress.\nMinimal Notes - Web app build with Vue.js\nRoast an app built to help coffee enthusiasts find their next cup of coffee while learning about Laravel + Vue.js.\nStack Edit - In-browser Markdown editor\nBael Blog Template -  A static generated blog template that uses Netlify CMS for the backend and Netlify for hosting. Features a brutalist aesthetic, fuzzy search, serverless email signup, and more.\nBuefy Shop Sample shop, open source, built with Nuxt, Stripe, Firebase, Bulma and Serverless Functions.\nsysmon A B/S mode system monitor for Linux. You can remotely watch the usage of your system resources via web browser everywhere.\neth-vue A Truffle Box that provides everything you need to quickly build Ethereum dApps that have authentication features with Vue.js, including configuration for easy deployment to the Ropsten Network. It's also Gravatar-enabled.\nNippon-color Inspired by nipponcolors dot com. This is a nippon-color PWA build with vue-cli 3.\nSaleina CMS A static site content management system built with vue using git as a backend.\nVuido A framework for creating native desktop applications. It can run on Windows, OS X and Linux, using native GUI components.\nYouGet YouTube Video/Audio/Subtitle Downloader + Cutter\nVue Pug Stylus Vue + Pug + Stylus boilerplate \ud83d\udc9a \ud83d\udc36 \ud83d\udd8c\nCrypto News allows you to convert cryptocurrencies, view latest news and exchange rates for each ICO \u2013 all the data from the world of cryptocurrencies in one place.\nEpiboard A new tab page extension with material design and useful features \ud83c\udd95 \ud83c\udf89\nzhudyos/duic Distributed configuration center \ud83c\udd95\nVuemmerce Free ecommerce template built with Vue.js and Bulma framework \ud83c\udd95\nNucleus Layered architecture ASP.NET Core API and Vuejs client application startup template\nCarpoolear The open source Vue.js frontend (mobile and cordova app) for the argentinian carpooling application: Carpoolear\nStatusfy: Statusfy is a Status Page System, easy to use and completely Open Source.\nDynamoDb-GUI-Client: Cross-platform GUI client for DynamoDb\nRosterWebApp Open source rostering web application which allows the rostering of employees/teams to work sessions and other features.\nVue E-Store Templet - An e-commerce templet build with vue/vuex/vue-router and bootstrap4.\nKitty Ipsum - Generate lorem ipsum composed of \"meow\" in different languages.\nGit Superstar - Count your git stars and top repositories.\nTwill - An open source CMS toolkit for Laravel that helps developers rapidly create a custom admin console that is intuitive, powerful and flexible.\nMATH_BOT - Learn math by programming a robot.\nVue Crossword - A Vue.js based crossword puzzle builder and filler front-end application. Built with CodeSandbox.\nVue Org Chart - Manage and publish your interactive organization chart (orgchart), free and no webserver required.\nBeep - Account Security Scanner built with Vue.js and Ionic 4\nVue CRUD - Vue.js based REST-ful CRUD system. Vue CRUD allows you to easily create fast applications such as CMS or CRM.\nVue HQ Admin Dashboard \u2013 A modern admin dashboard powered by Vue, Sass, Firestore, and Netlify.\nMToDo - Mini To Do Lists with simple auth built with Vue.js and JSON Server as data mock. Great as reference for anyone that finding reference about real world Vue.js\nFireX Proxy - FireX Proxy is the user's trusted Chrome and Firefox browser extension that allows you to unblock any website and browse the web privately and securely. \ud83d\udee1\nVueSolitaire - Solitaire (spider,klondike) imlemented in Vue.js.\nThermal - One stop to all Git repository.\nQMK Configurator - QMK Firmware Keyboard Configuration UI in Vue.js.\nEplee Sweet, simple epub reader made with Vue.js and Electron.js.\nvue-realworld-example-app - Exemplary fullstack Medium.com clone\nDaily - Curated dev news delivered to your new tab \ud83d\udc69\ud83c\udffd\u200d\ud83d\udcbb\nLaravel File Manager - Powerful file manager for Laravel\nVue Crypto Dashboard - Cryptocurrency Dashboard made with Vue.js\n\nCommercial Products\n\nWijmo - A collection of UI controls with VueJS support.\nCollate Notes\nFormester - Form, email marketing automation made easy\nChatWoot - Livechat and agent collaboration over Facebook messenger.\nVueA - VueJS Admin template with multiple layouts and laravel version.\nTeleo - Team collab-app moving effortlessly between talking, planning & doing\nCover - A high quality Component Library built on Vue.js\nEducationLink - CRM and sales automation for education agents and colleges.\nPragmatic v2.0 - Responsive and configurable admin template built with Vue.js and Element.\nSeat - Simple and modern team communication and collaboration solution.\nMoonitor - Cryptocurrency tracker for Desktop.\nDeskree - Online collaboration platform that combines Ideas, Tasks, and Issues in one place.\nOSHCExpress - A comparison and ecommerce for OSHC (Overseas Student Health Cover) insurance (Australia's insurance for international students).\nAgiloo - Project Management app for Scrum and Kanban\nScaffoldHub - Online Web App Generator for VueJS with NodeJS, and MongoDB or SQL.\nCommandeer - Could Management Reimagined. A Desktop cloud management app built with Vue.js and Electron.\nSA Email Builder - Email template builder responsive made with VueJS and Quasar Framework\n\nApps/Websites\n\nLaravel Spark\nVice Video\nFormlets\nLaracasts\nesa.io\n\u7a00\u571f\u6398\u91d1\nPrague Airport\nPortfolio Site\nLaravist\nAtiiv - An app aimed for personal trainers and their clients.\nStatamic\nEmbalses! - A tool to report water dam level using the U.S. Geological Survey database.\nTravelMap - A simple way for travelers to create a blog based on a Map.\nProper Cloth Shirt Builder - Custom shirt builder.\nCheckIt\nReddit News - A browser extension which show notifications and news from reddit.\nPowerpuff Yourself by Cartoon Networks\n\u5c0f\u6843\u9171\ncloudradioo - Web app that plays randomly all top 50 songs from the soundcloud charts\nvNotes - Simple and beautiful notepad to Markdown with Vue.js and Local Storage API.\nOpen Function Computers\nDermail - A webmail client written in Vue.js for Dermail, a mail system written in node.js.\noctimine - A patent search engine.\nDraxed - A web based MySQL and PostgreSQL data browser and dashboard manager.\nLeapspotleap - A simple way to look up wikipedia articles near you. Or simply navigate to a place and find interesting wikipedia information. Responsive web app.\nX-SONGTAO - A Personal blog. FE and CMS are in same vue SPA.\nJobinja - A Job Board and career platform operating in Iran.\n\u6eda\u86cb\u5427\uff01\u8386\u7530\u7cfb - Show all Putian hospital information\nJobi : Recruiting Platform \nThe Spice House - Ecommerce website for high quality spices. Checkout, cart, the product detail page, and search are built using Vue. Checkout is a single page app written with Vue & Vuex.\nLivestorm - Webinar / Live events app.\nMetric Loop - A technology services and solutions website.\nHolden\nGlobal-Exam - Online Training for Language Proficiency Tests\nSlugSurvival - A webapp that helps student better plan their courses (hobby project, not in affiliation with UCSC).\nFreePoll.Online - A group decision making tool built using Vue.js, vue-sortable, Semantic UI and Zappa.\nGitRelease - Track github project's new release on mac menubar using vue.js with electron.\n12BAY.VN - Applications online flight bookings.\nPLAYCODE.IO - Playground for Rapid Frontend Experiments.\nThe Void Radio - Underground House Music Online Radio.\nBitly Vue - Shorten URLs with VueJS & Bitly API.\nStoryblok - API Based/Decoupled CMS using VueJS for its frontend.\nWizzAir\nMoving to HTTPS - Guide to moving different platform/hosting sites to HTTPS\nBooknshelf - Discover great books and bookshelves on different topics.\nTop HN - A real time display of top news activity on Hacker News\nEuronews - Euronews is a multilingual news media service, headquartered in Lyon, France.\nRoozame \u0631\u0648\u0632\u0627\u0645\u0647\ufffd - Roozame is a Persian smart news media service.\nKoumoul\nNinjaCalc - A suite of embedded engineering related calculators, built as an open-source single-page app with vue.js.\nVue.js Feed - The latest Vue.js news, tutorials, plugins, and more. Made with Vue.js and Laravel, based on Vuedo.\n\u849c\u74e3 - A web app developed with Vue2.0 and Douban API\nGuess Right - A 'guess the word' game - Written with Vue/vuex/vue-router (front-end) and Laravel/MySQL (back-end). Code is Open Source on GitHub (although not the live files that run the game at kdcinfo).\nGRAP - Business communication service\nEasy Mock\nmmf-blog-vue2-ssr A blog built with Vue 2.0, vue-router & vuex, with server-side rendering\nJSON Schema Editor - An intuitive editor for JSON schema built with Vue.js and Firebase.\nWinsome Trivia - A single or multiplayer trivia game featuring over 2,000 unique questions built with Vue.js and powered by the Open Trivia Database.\nMoon Organizer - Lunar calendar app\nFlash-Vue - \u2018Flashcards of the Future\u2019 bring learning everywhere \ud83d\ude80\nKinderbesteck - A full Online Shop SPA with Vue2.0, Vuex, Vue Router\nn2ex - A vue ssr(nust) website, use v2ex API\nPower Thesaurus - A crowdsourced online thesaurus\nChattanosy - A community-powered database of new things and places in Chattanooga, TN.\nPAIXIN - A genuine picture sale website\nCodeBottle - Drag-and-drop snippets to your projects\n1XBET - A betting company operating since 2007\nMyOwnTV - A streaming website for creating internet television\nCrowdCircus - Europe\u2019s biggest crowdfunding- and crowdinvesting-aggregator\nTalk to Someone - Free, anonymous and confidential online text chat with strangers around the world.\n\u8f6e\u5b50\u5de5\u5382 - A ui components and libraries sharing website\n\u0627\u0628\u06cc\u0627\u062a \u0646\u0627\u0628 \u067e\u0627\u0631\u0633\u06cc - A collection of Persian poems\nRipplectron - Ripple(Blockchain coin) Wallet Desktop client for vue-electron\nPingBreak A free and simple website monitoring service using vuejs for real-time dashboard\nTodoist Tribute - Todoist clone, written in Rails + Vue\nJSON Editor - A schema-aware JSON editor built with Vue2 and firebase.\nDevelteam - A social network for indie game developers.\nMixsii - A free video chat room site for teens, adults, family, and friends.\nPipQuest - A retro-style puzzle game built in Vue\nMatryx - A decentralized collaboration platform.\niPrevYou - YouTube\u2122 Player - A chrome app for watching youtube videos on your desktop.\nItem Manager - An application to transfer items for Destiny 2 game.\nFrontend Masters Intro to Vue - Frontend Masters full day course\nTR-101 - A drum synth / sequencer.\nBazaar - Media sharing platform.\nWynnStats - A unofficial WynnCraft statistics.\nVectr - A free vector graphics software\nbrain bits - A P300 online spelling mechanism for Emotiv headsets\nCoin Dashboard - The fully client-side cryptocurrency asset dashboard.\nHabitica - online task management application in  the form of a role-playing game.\nMadeWithVueJs - A Gallery of Projects made with Vue.js (also the Site itself uses Vue.js)\nCodeDependencyScanner - A C# dektop application that display .Net assembly code dependencies build with Vue, Neutronium and D3.js.\nThousand Ether Homepage - The Million Dollar Homepage reimagined as an Ethereum DApp. Build on Vue.js and open source.\nLet's Enchance - free online image upscale and enhancement with neural networks.\nPi.TEAM - Online Invoicing and Accounting - Simple to use online accounting and invoicing, free for single users and freelancers.\nVuethwallet - A simple app generate ethereum wallet with vuejs.\nTipe - Next Generation API-first CMS. Create your content with powerful editing tools and access it from anywhere with a GraphQL or REST API. Stop letting your CMS decide how you build your apps.\nVuethexplore - A simple app explore ethereum blockchain with vuejs.\nFintechers - Fintech focused job board.\nDevjournal - Collaborative todo list for projects and ideas.\nBubbleflat - Online platform that helps students and young Professionals find their perfect roommates by searching for people with similar lifestyles, interests, or schools. Laravel & Vuejs\nTeaQuinox Tea Co -- ecommerce site that specializes in loose leaf tea.\nblip - Test websites for speed, mobile-friendliness, security and the HTML5 doctype. Find businesses around a location and test their websites en masse, or just test your own URL.\nsunpos - Sun position, elevation, azimuth, ecliptic/equatorial coordinates and sunrise/sunset time (Julian day) calculation and conversion utilities. Web site is programmed using pure JS, Vuejs and i18n Vuejs localization plugin. Visualization is created using D3.js.\nU3xyz - A personal blog base on vue ssr.\n27.ua - Ukraine-based internet hypermarket\nChess Guardian - Answer chess positional questions from your own games.\nBlackjack Break - A quick game of blackjack\nMECHANICAL - Reddit mod for Firefox that surfaces contextual data insights.\nGameVix - Swap your used video game discs with others, hassle free. PWA with Material Design.\nVivifyScrum - Agile project management app for teams that deliver. Customizable Scrum and Kanban boards.\n9GAG - Popular online platform and social media website\nCryptoVue - Real-time cryptocurrency dashboard\nKitchen Stories - Cooking platform\nMailRabbit - Create, A/B test, and monitor transactional emails without a developer.\nVue\u8d44\u6e90\u7cbe\u9009 - great Vue components list, category, inline demo show and brief\nCronhub - Painless Cron Monitoring Tool\nwrkprty - Pop-up coworking events for freelancers, remote workers, and professionals looking to get out of the office.\nMade with love - The Made with Love \u2764\ufe0f around the world, initiative is a movement to celebrate \ud83c\udf89, promote \ud83d\udce3 and build a brand \ud83d\udc51. It feed Tech news, design inspiration and trends from over \ud83d\udcaf sources including Dribbble, ProductHunt, Behance and Techcrunch. \ud83d\udc9d\nPath to Product - Discover over 1,000 product jobs at startups and tech companies.\nV\u00b7oogle - Google.com, reVued. A joke-project. :)\nBroker Notes - 'Study to become a Real Estate Agent' \ud83c\udfe0\nSyncLounge - SyncLounge is a tool to sync Plex content across multiple players in multiple locations.\nHCE.it - The website of an Italian agency, entirely made with Vue using a Laravel-based headless CMS.\nPages - Web design inspiration\nScrumpy - A Beautiful Project Management Tool for Agile Teams\nSpektrum - The website of Spektrum Media Agency\nSPK The website of SPK Ecosystem\nIDDEF \u262a\ufe0f The Federation of the Associations that Value Humanity's webpage, CMS, CRM and Donation and all e-commerce pages are designed with Vue.js, Vuex and pure JavaScript \ud83d\ude4f\nConfiguration File Management - A simple way to manage your configuration files\nRoast an app built to help coffee enthusiasts find their next cup of coffee while learning about Laravel + Vue.js.\nYBR - Centralized YBS Public eComplaint Management System. (Full SPA)\nRegex Fiddler\nMyanpwel - The website of event ticketing platform.\nCryptoArte - An Ethereum art collection, non-fungible token, and Dapp.\nMuuviez - A movie discovery and tracking website with stylish design\nNAGA VIRTUAL - NAGA VIRTUAL is the first independent virtual goods market.\nScroll.in - Scroll.in is an independent news, information, and entertainment venture.\nAkunyi - Charity Website\nWhat Would Mark Ruffalo Do? - Motivational website based on the story that Mark Ruffalo failed at several hundred auditions before finding success.\nBrandy - brand assets manager for your menu bar.\nRuster\u793e\u533a - Rust fullstack community forum for CN.\nNBC Sports - NBC Sports is a sports news website.\nWITHIN - Extraordinary stories in Virtual Reality.\nplottr.io - Plan your running and cycling routes\nbeCamp - A community-organized tech conference in Charlottesville, VA. Website code is open-source.\nTrustpilot - a free and open to all review platform.\nLagom - Simple, intuitive and fully responsive WHMCS theme\nScoutMyTrip - Roadtrip Planner - Road trip planning app for India which helps travelers to build their itinerary, discover points of interest, find hotels, gas stations, food joints etc along the route.\nPodflix - Podcast app.\nGamersClub - Biggest company of eSport community development in Brazil\nMIT - Official Website of Massachusetts Institute of Technology.\nElvenar - Elvenar is a browser based fantasy city builder game.\nBeacon - \ud83d\udc99 A service that allows you to share your content across multiple websites.\nArtfinder - Artfinder is a website for buying & selling art paintings.\nRolodromo - A spanish website dedicated to tabletop RPG.\nGitHubExplorer - Pure static page webapp for exploring GitHub. Using Vuejs and GitHub GraphQL API v4.\nKeynote - Present with Vue.\nHappyPlants - A progressive web app for organizing your plants \ud83c\udf31.\nPocket Lists - World's friendliest to-do list app.\nPadlet - Collaborative bulletin boards\nGlovo - On-demand delivery\nMySigMail - MySigMail is a free, in browser, email signature generator without creating account\nWordguru - A simple verbal game where you split into teams and try to guess as many keywords as you can.\nApiFlash - A Chrome based screenshot API built on top of AWS Lambda for Developers\nKitty Ipsum - Generate lorem ipsum composed of \"meow\" in different languages.\nGit Superstar - Count your git stars and top repositories.\nDECS - The decentralised all-in-one workspace to manage code snippets and to protect sensitive data.\nCareup - Business management tool for dentists \ud83e\uddb7.\nAsciiur - Internet's ascii art collection\nTapestri Designer - Free tool to design PCR primers for genome sequencing experiments (NGS)\nRemote-Access-SSH - Web based remote host access with node-ssh\nMap Marker Generator - A Free Online Tool To Generate Custom Map Icons On The Fly\nMonocle Reader - Follow feeds, Twitter, YouTube, Blogs and everything else, all in one place.\n\u524d\u7ad9\u5bfc\u822a - \u524d\u7aef\u793e\u533a\u3001\u6587\u6863\u6536\u5f55.\nGeenes - Generate and apply color palettes to your UI, then export it to sketch or code.\nBlurrish - Encrypted Morning Pages journal for Mac/Windows, built with Vue and Electron. Blurs as you write so you can journal in public workspaces.\nExifShot - What and how on photography, beautifully.\nStudolog - Online file sharing platform for students, including tester and reviews. Currently in Czech \ud83c\udde8\ud83c\uddff only.\nsum.cumo \u2013 Digital business models (with Vue as a tech stack centerpiece).\nGamebrary - Open source tool to organize video game collections.\nGuds - Compare prices across supermarkets. Only available in M\u00e9xico \ud83c\uddf2\ud83c\uddfd.\nPremium Poker Tools - What poker players use to study.\nQMK Configurator - Configure, Build, and Download Custom QMK Firmware from your browser.\nWorksome - Marketplace/platform for qualified it professionals and freelancers and companies looking to hire them.\nTranslator-vuejs - Translation App built with Vuejs, Yandex API & ResponsiveVoice.js API.\nBig Timer - Fullscreen countdown timer for workshops, meetings and presentations. Big Timer helps workshop facilitators, meeting chairs, design sprinters, presenters and aspiring game show hosts stick to their program.\nWirenook - Free online app for building responsive website wireframes. Hi- and Lo- Fidelity, project sharing and svg download.\nKvalitetskontroll - Norwegian management system tailored for the construction industry.\nPoolside FM - A retro-style music player\n\nInteractive Experiences\n\nJean-Pierre Morin | 1700 LAPOSTE\nFacebook NewsFeed\nYouTube AdBlitz 2016\nOmnisense Experience\nLouis Ansa Website (portfolio)\nDjeco.com\nTolks.io\nMeet Graham\nNOIZE original\nTR-101 Synth Drum Machine\nBootstrap 4 Editor\nSubtletab - Browser Extension\nweb-riimote - Turn your smartphone into a 3D controller (source code)\nCSS ColorVars - Interactive tool code generation (source code)\n\nEnterprise Usage\n\nAlibaba\nBaidu\nSina Weibo\nXiaomi\nEle.me\nOptimizely\nExpedia\nUCWeb\nLine\nNintendo\nCeltra\nSainsbury's\nAREX\nDJI\nOctimine GmbH\nHunliji\nGitLab\nClemenger BBDO Melbourne\nZenMate\nCodeship\nStoryblok\nMonito - Building the Booking.com for international money transfers\nHypefactors - Software for data-driven PR professionals\nAdobe\nIBM\nCotabox\nAromajoin - Develop the finest digital scent products based on the harmony of hardware, software and material technology.\nCarrefour\n\nA11y\n\nVue A11y project - Vue.js community project to improve web accessibility.\nvue-skip-to - It helps people who only use the keyboard to jump to what matters most.\nvue-axe - Accessibility auditing for Vue.js applications.\nvue-announcer - A simple way with Vue to announce any useful information for screen readers.\neslint-plugin-vue-a11y - Static AST checker for accessibility rules on elements in .vue\nvue-focus-lock - It is a trap! A lock for a Focus. A11y util for scoping a focus.\nvue-a11y-calendar - Accessible, internationalized Vue calendar.\n\nComponents & Libraries\nUI Components\nTable\nTables / data grids\n\nvuetable-2 - Data table simplify.\nvue-tables-2 - Vue.js 2 grid components.\nvue-datasource - A vue.js server side component to create dynamic tables.\nag-grid-vue - Vue adaptor for ag-Grid.\nvue-data-tables - Vue2.0 DataTables, based on element-ui.\nvue-floatThead - Vue 2.0 component for floatThead, a floating & sticky table header plugin.\nvuetiful-datatable - Datatable component with sorting, filtering, pagination, grouping and aggregation.\nvue-materialize-datatable - VueJS datatable for Materialize CSS\nvue-good-table - An easy to use, VueJS (2.x) table plugin with sorting, column filtering, pagination etc.\nvue-grid - A flexible grid component for Vue.js\nvue-easytable - A powerful table components based on Vue2.x\nvue2-datatable-component - The best Datatable for Vue.js 2.x which never sucks\nvue-js-grid - Vue.js 2.x responsive grid system with smooth sorting, drag-n-drop and reordering\nvue-handsontable-official A Vue.js wrapper for the Handsontable spreadsheet component\nvue-grid - A powerful flexbox grid system for Vue.js 2.x, built with inline-styles\nvue-data-tablee - Based on vue-good-table, a simple and pretty table component\nvue-scrolling-table - Simple table component with flexbox sizing, scrolled table body (horizontal and vertical), slots for all tr/th/td rendering.\nel-search-table-pagination - Combines Form, Table and Pagination components of Element UI together. Based on Vue 2.x.(Detail)\nvue-crud-x - Extensible crud component using Vuetify layout, other than the usual page, sort, filter, it is able to do nested CRUD, custom forms, filters, operations.\nVue Datatable - VueJS powered Datatable with Laravel server-side loading and JSON template setup\nv2-table - A simple table component based Vue 2.x.\nvue-cheetah-grid - A high-performance grid engine that work on a canvas for Vue.js.\nvue-table-component - A straight to the point Vue component to display tables.\n@lossendae/vue-table - Simple table component for Vue.js 2.x with pagination and sortable columns.\nel-data-table - base on element-ui, makes crud easily\nDevExtreme Vue Grid - High-performance plugin-based Vue data grid for Bootstrap.\nvue-ads-table-tree - A vue Table component, with filtering, sorting and pagination. Rows can have child rows, so a tree structure can be build. It also supports async calls to load rows from the backend. It's built with the css framework tailwindcss\nSyncfusion Data Grid for Vue - Displays and manipulates tabular data with features such as paging, sorting, filtering, editing, and grouping.\n@marketconnect/vue-pivot-table - A vue component for pivot table\nvue-teible - Lightweight and flexible table component for the web \u26a1\ufe0f\nvue-jqxgrid - Vue data grid with filtering, sorting, editing, grouping, data export and other features.\nvue-jqxpivotgrid - Vue pivot data grid with pivot designer, drill through cells, pivot functions.\ntoast-ui.vue-grid - Vue Wrapper for TOAST UI Grid.\nvueye-datatable - Vueye data table is a responsive data table component based on Vue.js 2, it organizes your data per pages in order to navigate easily.\nvue-sorted-table - A plugin to turn tables into sorted tables. Supports nested object keys, custom icons and reusable components.\nvue-bootstrap4-table - An advanced data table based on Vue 2 and Bootstrap 4, which includes Multi column filtering, Multi column sorting, Pagination & Info, Checkbox rows and Highly customizable slot options.\nvuejs-smart-table - Straight Forward Table Component using the vanilla HTML Table Structure with Sorting, Filtering, Pagination and Selection out of the box.\n@myena/vue-table - Table Components for Client/Server data handling. Filter, sort, paginate, group, expanding details row. Highly customizible via slots for filter, headers, column, pagination, details row.\nvue-jd-table - Advanced and flexible data table component for Vue 2. Feature Rich: search, filtering, exporting, pagination (traditional and virtual scroll) and so much more!\nvue-grd - Simple, Light-weight and Flexible Vue.js component for grid layout.\niview-table-page - Combines Table and Page components of iview UI together. Based on Vue 2.x. And Hear are some examples to use iview-table-page.\n\nNotification\nToaster / snackbar \u2014 Notify the user with a modeless temporary little popup\n\nvue-notifications - Vue.js agnostic non-blocking notifications library.\nvue-easy-toast - A toast plugin for vue/vue2.\nvue-toasted - Responsive Touch Compatible Toast plugin for VueJS.\nvue-notifikation - Vue.js notification plugin.\nvue-notification - Vue.js 2+ notification plugin using Velocity for animations.\nvs-notify - Tiny but powerful notification component with no dependencies.\nvue2-notify - Vue.js 2+ notification plugin.\nvue-notifyjs - Minimalist, 3kb themable notification plugin\nvueup - Simple, lightweight and elegant global notification popup for Vue.js\nvuex-flash - Flash message component for VueJS 2.x within Vuex 2.x.\nvue-snotify - Vue.js 2 Notification Center\nvue-notify-me - Stackable notification Alert for Vue\nvue-noty - A Vue.js 2 wrapper around Noty\nvue-notice - Vue.js 2 wrapper around Noty.js with native API\nvue-flash-message - Simple yet flexible notification plugin\n@voerro/vue-notifications - Simple Vue.js 2 notifications plugin with HTML and styling support.\nvue-awesome-notifications - Lightweight Vue.js notification library with advanced async support.\nvue-izitoast - A Vue.js 2 wrapper around IziToast.\nvue-toastr-2 - Simple toast notifications for Vue.js built on toastr\nvue-snack - A Vue.JS plugin for Snackbars based on Google Material.\nvue-m-message - A message plugin for vue.\nvue-notification-bell - A Vue UI component for showing notifications.\nv-tostini - Really plain toast notifications mechanism for Vue.js 2.x. No CSS included.\nvue-toast-notification - Yet another Vue.js Toast notification plugin.\n\nLoader\nLoaders / spinners / progress bars \u2014 Let the user know that something is loading\n\nvue-radial-progress - Radial progress bar component for Vue.js.\nvue-simple-spinner - A simple, flexible spinner for Vue.js\nvue-wait - Complex Loader Management for Vue/Vuex and Nuxt applications.\nvue-progress-path - Customizable progress indicators and spinners that support any custom SVG path.\nvue-blockui - BlockUI for vue 2, similar to jquery blockUI, can be used for loading screen.\nepic-spinners - Easy to use css spinners collection with vue.js integration.\nsvg-progress-bar - A simple progress bar for Vue.js.\nvue-loading-overlay - Tiny full screen loading indicator\nvue-loaders - vue wrappers for loaders.css\nvue-promise-btn - Tiny and powerful tool for asynchronous buttons(or any other tag) lock with fancy built-in spinner\nvue-spinkit - \ud83c\udf08 A collection of loading indicators animated with CSS for VueJS\nvue2-form-loading - A VueJS directive can be used with forms in order to disable submit button while the next page is loading\nvue-element-loading - \u23f3 Loading inside a container or full screen for Vue.js\ntb-skeleton - A skeleton screen loading for Vue.js\nvue-spinners - \ud83d\udcab A collection of loading spinner components for Vuejs\nvue-progress-bar - This is a cascading progress bar plugin based on vue\nvue-loading-button - \ud83d\udc47 Straightforward button with slideout loading indicator\n\nProgress Bar\nA slim progress bar at the top of the page\n\nvue-progressbar - A lightweight progress bar for vue.\nvue2-loading-bar - Simplest Youtube Like Loading Bar Component For Vue 2.\nvue-top-progress - Yet another top progress loading bar component for Vue.js.\nvue-nprogress - Progress bars is based on nprogress for Vue.\nvue-progress-button - Vue.js 2.x animated button component.\nvue-simple-progress - A simple, flexible progress bar for Vue.js\nvue-component-loading - Manage a loading state inside each component and display the global loading state with a progressbar.\nvue-scroll-progress - Simple Vue.js plugin for page scroll progress bar\nvue-read-progress - Customizable progress bar at the top of the page that shows the scroll progress\neasy-circular-progress - Easy circular progress component with counting effect\n\nTooltip\nTooltips / popovers\n\nv-tooltip - Easy tooltips with Vue 2.x.\nvue-popper-component - Popper.js directive for Vue.js.\nvue-directive-tooltip - Simple, flexible tooltip directive (based on Popper.js) \nvue-popperjs - VueJS 2.x popover component based popper.js\nvue-tooltipster - VueJS 2.x tooltip component based tooltipster.js. Support html content, hover and hover+click events.\nk-pop - Simple popover component based on popper.js. Highly customizable. Comes with themes. Supports custom triggers and can listen to any event.\n\nOverlay\nOverlay / modal / alert / dialog / lightbox / popup\n\nvuedals - A VueJS (2.x) Plugin for multiple modals windows with a single component instance.\nsweet-modal-vue - The sweetest library to happen to modals. Now available for Vue.js.\nvue-js-modal - Simple to use, highly customizable, mobile friendly Vue.js 2.0+ modal with 0 dependencies.\nvudal - Modal window for vue.js\nvodal - A vue modal with animations.\nvue-image-lightbox - A Vue image lightbox/gallery to display images nicely.\nvue2-simplert - Vue 2 Simple Alert Component (SweetAlert Inspired) By Irfan Maulana\nVue-Semantic-Modal - Vue 2 Semantic-UI modal component without jQuery dependency\nv-img - Easy to install image gallery.\nvue-dialog-drag - Draggable dialog\nvue-ya-semantic-modal - Yet another semantic-ui modal component for Vue2 without Jquery but with Vue transition\nvue-pure-lightbox - Very simple lightbox plugin without any dependencies - only Vue! \ud83d\uddbc\nv-viewer - Image viewer component for vue, supports rotation, scale, zoom and so on, based on viewer.js\nvue-messagebox - Easy and made-to-order messagebox component on Vue.\nvuejs-dialog - A lightweight, promise based alert, prompt and confirm dialog.\n@hscmap/vue-window - Window UI Component for vue2.\nvue-gallery - VueJS responsive and customizable image and video gallery, carousel and lightbox, optimized for both mobile and desktop web browsers. Based on blueimp-gallery\nvue-swal - A small wrapper for integrating SweetAlert to Vuejs. (Compatible with SSR)\nvue-modal-dialogs - \u2728 Promisify your own dialogs!\nvue-img-view - a plugin for Vue.js, you can drag / view / rotate pictures anywhere\nvue-modaltor - most advance configurable modal component for vuejs\nv-modal-backdrop - A simple generic backdrop component for vue\nvue-cute-modal - A simple and easy to use Modal component for Vue applications.\nv-dialogs - A simple and powerful dialog, including Modal, Alert, Mask and Toast modes, based on Vue2.x\nvue-gallery-slideshow - Responsive gallery component for VueJS\nvue-a11y-dialog - A Vue.js component wrapper for the accessible dialog a11y-dialog.\nvue-slideout-panel - Stackable panel component for VueJS\nv-gallery - A Vue2 plugin for images show in gallery or carousel\nvue2-image-loader - A image lazyLoad loader component for vue2\nvue-my-photos - A simple dependency-free image lightbox component with filtering capabilities\nvue-img-orientation-changer - A Vue.js directive that automatically adjust your img to correct orientation.\nvue-topmodal - A fully customisable, easy to use, Vue.js modal component. (Responsive, Stackable, Scrollable, Animated)\nvue-modal \ud83d\uddbc - Feed your objects array for multiple switchable modal content or quickly inline your content. A fully customisable vue modal component .\n@innologica/vue-stackable-modal - Library for modal dialogs which can be stacked. Fully customizable and very easy to use.\nvue-sweetalert2 - wrapper for sweatlaert2 with support for TypeScript, Nuxt and SSR\n\nParallax\n\nvue-parallax - Scrolls an image slower than the window to create a neat optical effect.\nvue-parallaxy - Vue.js component for parallax image scroll effects.\nvue-mouse-parallax - A simple to use Mouse Parallax Component - Made with Vue.js\nvue-parallax-js - Tiny vue component that adds a directive for parallax effect on elements.\n\nIcons\n\nvue-awesome - Font Awesome component for Vue.js, using inline SVG.\nvue-material-design-icons - A collection of SVG Material Design icons as single file components.\nvue-icon-font - A iconfont plugin for Vuejs (support Font-class and Symbol).\nvue-ionicons - Vue Icon Set Components from Ionic Team.\nvue-ico - Dead easy icons for Vue with drop-in browser support & selective bundling\nmdi-vue - Material Design Icon components for Vuejs\nvue-fontawesome - Font Awesome 5 Vue component\ng-icon - Simple icon component for your svg icons (compatible with Font Awesome-like font toolkits)\nvue-simple-line-icons - Simple Line Icons component for Vuejs\nvue-country-flag - Vue component for country flag icons - vicon - Vicon is an simple iconfont component for vue.\nmd-svg-vue - Material Design Icons by Google for Vue.js & Nuxt.js (server side support (with caching), inline svg rendering, official icon names)\nvue-lang-code-flags - Vue component which shows the flag of the country from which the language comes from\nvue-zondicons - Vue component for the beautiful Zondicon svg icons\nvue-eva-icons - Simply beautiful open source eva icons as Vue components.\nvue-unicons - 1000+ Pixel-perfect svg unicons for your next project as Vue components.\nvue-fa - Simple FontAwesome 5 Vue.js 2 component.\nvue-cryptoicon - Beautiful pixel perfect 400+ cryptocurrency and 10+ Fiat currency icon.\n\nMenu\n\nvue-accordion - Simple accordion nav menu component for Vue.js.\nvue-js-dropdown - Vue.js 2 dropdown menu component. Light, easy to use and extend, no external deps.\nvue-slideout - Vue implementation of the popular library slideout\nvue-quick-menu - This is web navigation component base on vue.js2.\n@hscmap/vue-menu - Menu / Context Menu component for vue2.\nvue-router-nav - Minimalistic responsive navigation bar that renders routes of vue-router.\nvue-drawer-layout - A simple DrawerLayout component like Android has for Vue.js.\nvue-simple-menu - Simple menu component with a set of basic functionality, which is enought in 80% of cases\nvue-tree-navigation - Vue.js 2 tree navigation with vue-router support\nbp-vuejs-dropdown - Vuejs => 2 dropdown. Easy to use, no external, optional.\nvue-bulma-accordion - Simple, easily configurable accordion or collapsible styled with Bulma custom or built in icons available\nv-selectmenu - A simple, easier and highly customized menu solution for Vue2.\nvue-burger-menu - An off-canvas sidebar Menu component with different CSS animations.\nvue-dynamic-dropdown - A Highly Customizable, easy-to-use elegant dropdown component\nvue-navigation-bar - A simple, pretty navbar for your Vue projects.\nvue-simple-search-dropdown - A simple searchable input dropdown component with no external dependency\n@innologica/vue-dropdown-menu - Dropdown menu component for Vue. Any element can be dropdown trigger and anything can be dropded down content.\nvue-menu-aim - Menu triangle select, aka Amazon\n\nMinus Plus Input\n\nminus-plus-input - A number input with plus minus; included for Vue.js v1 and v2.\nvue-integer-plusminus - Integer input with increment and decrement buttons for vue 2.\nvue-numeric-input - Number input component with controls.\nvue-number-smarty - Number input that can change value on scrolling when field is focused.\nvuetify-number-smarty - Number input that can change value on scrolling when field is focused (Vuetify.js implementation).\n\nCarousel\n\nvue-easy-slider - Slider Component of Vue.js.\nvue-l-carousel - A responsive carousel(namely slider or swiper) component for Vue.js v2.x+.\nvue-awesome-swiper - Swiper(slide) component for Vue.js(1.x ~ 2.x).\nvue-lory - Vue Slider Component based on lory.\nvue-slick - Vue component for Slick-carousel.\nvue-flickity - A Vue Component for Flickity.js.\nvue-carousel-3d - Vue Carousel 3D - Beautiful, flexible and touch supported 3D Carousel for Vue.js.\nvue-carousel - A flexible, responsive, touch-friendly carousel for Vue.js.\nvue-coverflow - A vue2.x coverflow component.\nvue-agile \u2013 A carousel component inspired by Slick, written in Vue.js and vanilla JS only.\nvue-tiny-slider \u2013 A carousel component created by ganlanyuan, written in Vue.js. No jQuery. Works in IE8+.\nvue2-text-swimlane - A Text Swimlane plugin for Vue.js\nvue-picture-swipe - Vue Picture Swipe Gallery (a gallery of image with thumbnails, lazy-load and swipe) backed by photoswipe.\nvue2-siema - Plugin wrapper for the very tiny Siema carousel/slider library.\nvue-flux - Image slider which comes with 20 cool transitions.\nvue-glide - Vue slider & carousel component on top of the Glide.js\nvue-owl-carousel - Vue component for Owl Carousel 2\nvueper-slides - A touch ready and responsive slideshow / carousel for Vue JS.\nvue-canvas-carousel - Vue canvas component for vuc-carousel\nHooper - Customizable accessible carousel slider optimized for Vue\nLingallery - Simple image gallery component for Vue which displays a large image with thumbnails below\nvue-piece-slider - Animated slides in a fragmented look\nvue2-photo-carousel - A photo carousel component for Vue2\n\nCharts\n\nvue-morris - VueJS component wrapping Morris.js.\nvue-charts - Google Charts plugin for Vue.js.\nvue-chartjs - Vue.js wrapper for Chart.js.\nhchs-vue-charts - Based on Vue2.0 wrapper for ChartJs.\nvue-echarts - ECharts component for Vue.js.\nvuetrend - Simple, elegant spark lines for Vue.js.\nvue-highcharts - Highcharts component for Vue.\nvue-echarts-v3 - Vue.js(v2.x+) component wrap for ECharts.js(v3.x+).\nvue-chartist - Vue.js 2.0 component wrap for Chartist.\ng2-vue - Factory wrapper for using G2 easily in a Vue Component.\nvuebars - Simple, elegant spark bars for Vue.js.\nvue-d3-network - Vue component to graph networks using d3-force\nvue2vis - Vue2 wrapper for Visjs.\nvue-c3 - A reusable vue component for c3 charts\nvue-d2b - Vue components for d2b charts. (Including axis, pie, sankey, and sunburst charts)\nVueChart - A very simple Vue wrapper for Chart.\nvue-chartkick - Create beautiful JavaScript charts with one line of Vue\nd3vue - A D3 Plugin for Creating Reactive Data Visualizations in VueJS\nvue2-frappe - A simple wrapper around Frappe Charts for VueJS\nvue-google-charts - Reactive Vue.js wrapper for Google Charts lib\nvue-graph - Data visualization library for dashboard implementation in Vue.js\nvue.d3.sunburst - Reactive sunburst component based on D3.js\nv-chart-plugin - A customizable component for adding D3 charts that binds to your components data.\nvue-jqxchart - Charting component with Pie, Bubble, Donut, Line, Bar, Column, Area, Waterfall, Polar & Spider series.\ntoast-ui.vue-chart - Vue Wrapper for TOAST UI Chart.\nvue-apexcharts - Vue.js component for ApexCharts.\nvue-doughnut-chart - Doughnut chart component for Vue.js.\nv-charts - Chart components based on Vue2.x and Echarts.\nvue-css-donut-chart - Lightweight Vue component for drawing pure CSS donut charts.\nvue-trend-chart - Simple trend charts for Vue.js\nvueplotlib - Declarative, interactive, linked plot components\nvgauge - A Vue Wrapper to GaugeJS - Create beautiful gauges\nvue-plotly - Wrapper for plotly.js declarative charting library that ships with 20 chart types, including 3D charts, statistical graphs, and SVG maps.\nvue-funnel-graph-js - Funnel graph drawing library for Vue.js. Create vertical and horizontal animated SVG funnel charts and add labels, values, legend and other info.\npure-vue-chart - Lightweight vue charts implemented without any chart library dependencies\n\nTime\nDisplay time / date / age\n\nvue-timeago - A tiny timeago component for Vue.\nvue-moment-jalaali - Jalaali Moment.js filters for your Vue.js project.\nvue-countdown-timer - Added timezone conversion support.\nvue-analog-clock-range - Analog clock range to show time difference.\nvue-moment-lib - A simple Vue.js 2.0 MomentJS library (filters & globals) using the same momentjs API.\nvuejs-countdown - A simple countdown timer component for vue js 2.0\nvue2-flip-countdown - A countdown timer with flip effect for Vue 2.x\ntimeline-vuejs - A minimalist timeline for Vue\nvue-awesome-countdown - Countdown plug-in with high performance and high accuracy for Vue 2.5.0+. Official site: https://vac.js.org\nvue-clock2 - Display clock component for Vue.\nvuemodoro - Pomodoro timer as single file Vue component.\n\nCalendar\nDisplay non-editable events in a Calendar\n\nvue-fullcalendar - Vue calendar fullCalendar. No jQuery required. Schedule events management.\nvue-event-calendar - A simple events calendar for Vue2, no dependencies except Vue2.\nvue-calendar-picker - Lightweight calendar component for events display, period selection and date picker.\nvue-lunar-calendar - A vue component for lunar calendar. Uses Moment.js for date operations.\nvue-simple-calendar - Flexbox-based Vue month calendar compenent; supports multi-day events, localization, holiday emoji, drag/drop. No dependencies.\nvue2-calendar - A simple full calendar component aimed at being flexibile and lightweight.\nvue-jlunar-datepicker - A Chinese lunar datepicker component with festivals and solar terms.\nvue-full-calendar - A complete fullcalendar.io wrapper for both Vue 1 and 2\nv-calendar - Animated calendar/datepicker that displays regions, indicators and day popovers for simple & recurring dates.\nvue-infinite-calendar - A simple infinite calendar implementation for Vue 2\nvue-calendar - A simple calendar components for Vue 2.1.5+, support custom content. No dependencies.\nvue2-event-calendar - An events calendar for Vue2, support customize event items and calendar header.\nvue2-datePicker-infinite - An infinite datePicker for Vue2, easy to use and no dependencies.\nvue2-slot-calendar - A vue 2 calendar, datepicker component which supported lunar or date event, bootstrap style.\nquasar-calendar - A vue.js calendar using the Quasar framework that implements monthly, multi-day and agenda views.\nvue2-datepicker - A beautiful datepicker / datetimepicker component for Vue2\nvue-pikaday - VueJS wrapper component for Pikaday datepicker\nvue-tuicalendar - VueJS wrapper component for tui.calendar calendar\nvue-jqxscheduler - VueJS Scheduler component.\ntoast-ui.vue-calendar - Vue Wrapper for TOAST UI Calendar.\nvue-functional-calendar - Lightweight, high performance calendar component(Date Picker, Date Range) based on Vue.\nvue-cal - A Vue JS full calendar, no dependency, no BS. \ud83e\udd18.\nvue-draggableCal - Not your ordinary datepicker. A Vuejs draggable date selector with a fresh responsive design, mobile ready and 0 dependencies, 17kb gzipped\nvue-material-year-calendar -  A full year (12 months on a page) calendar for Vue2. Uses dayjs.\nvuelendar - Simple and clean calendar written in VueJS\n\nMap\n\nvue2-google-maps - Google maps component for vue with 2-way data binding.\nvue2-leaflet - Vue 2 components for Leaflet maps.\nvue-mapbox-gl - Vue 2.x component for Mapbox GL JS\nvue-yandex-maps - Vue 2.x component for Yandex Maps\nvue-baidu-map - Vue 2.x component for Baidu Maps.\nvue-choropleth - Vue 2.x component to display a choropleth map.\nvuelayers - Vue 2 components to work with OpenLayers.\nvue-googlemaps - Vue 2.x components to integrate Google Maps.\nvue-static-map - Vue 2.x simple component to generate an static google map\nvue-mapbox - Vue 2.x wrapper around Mapbox GL JS library that provides vueish-way to interact with the map.\n\nAudio / Video\n\nVue-APlayer - \ud83c\udf70 Easy-to-config music player for Vue 2.x.\nvue-audio - audio-tag wrapper; sound player component for Vue 2.x\nvue-dplayer - A Vue 2.x video player component based on DPlayer.\nvue-canvasvideo - A Vue 2.x component for video backgrounds and autoplay video on iOS/Safari.\nvue-music - A Vue component base on html5 <audio>.\nvue-audio-visual - Vue HTML5 audio visualization components.\nvue-plyr - A set of Vue components for the plyr video & audio player.\nv-playback - A Vue2 plugin to make video play easier.\nvue-audio-recorder - Audio recorder for Vue.js. It allows to create, play, download and store records on a server\nvue-video-section - A simple video header/section component for Vue. Good for video backgrounds and overlaying content on them.\n\nInfinite Scroll\n\nvue-infinite-loading - An infinite scroll plugin for Vue.js 1.0 & Vue.js 2.0.\nvue-mugen-scroll - Infinite scroll component for Vue.js 2.\nvue-infinite-scroll - An infinite scroll directive for vue.js.\nvue-loop - An infinite content loop component for Vue.js 2.\nvue-scroller - An infinite content loop component for Vue.js 2, including functionalities such as 'pull-to-refresh', 'infinite-loading', 'snaping-scroll'.\nvue-infinite-list - An infinite list mixin can recycle dom for Vue.js 2\nvue-infinite-slide-bar - \u221e Infinite slide bar component.\nvue-virtual-infinite-scroll - A vue2 component based on Iscroll, supports big data list with high performance scroll, infinite load and pull refresh.\n\nPull-to-refresh\n\nvue-pull-refresh - A pull to refresh component for Vue.js 2.0.\nvue-pull-to - A pull-down refresh and pull-up load more and infinite scroll for Vue.js component.\nvue-data-loading - Another component for infinite scroll and pull down/up to load data.\nvue-quick-loadmore - A pull-down refresh and pull-up infinite scroll plugin for Vue.\n\nMarkdown\n\nvue-markdown - A Powerful and Highspeed Markdown Parser for Vue.\nvue-mavonEditor - A markdown editor based on Vue that supports a variety of personalized features.\nvue-simple-markdown - A Simple and Highspeed Markdown Parser for Vue.\nvue-simplemde - A wrapper around simplemde. Delightful editing for beginners and experts alike. Features built-in autosaving and spell checking.\ntoast-ui.vue-editor - Vue Wrapper for TOAST UI Editor.\n\nPDF\n\nvue-pdf - A pdf viewer based on mozilla's PDF.js\npdfvuer - A PDF viewer for Vue using Mozilla's PDF.js with text support. Demo\n\nTree\n\nVue.D3.tree - A Tree View based on D3.js\nvue-json-tree-view - A JSON Tree View Component for Vue.js.\nvue-tree - A Tree Component for Vue.js 2.X.\nliquor-tree - Amazing Vue Tree component\nvue-trees-ui - A Tree Ui Base On Vue.\nBosket - Collection of tree view components for front-end frameworks (Vue, React, Angular and Riot).\nplantain-00/tree-component - A reactjs, angular and vuejs tree component.\nsl-vue-tree - A simple customizable draggable tree component for Vue.js\nvue-draggable-nested-tree - A powerful customizable draggable tree view component for Vuejs2 @phphe\nvuejs-tree - A highly customizable VueJs tree viewer\nvue-jstree - A Tree Plugin For Vue2 with beautiful icons and drag&drop\nvue-vtree - Universal and flexible tree component for Vue.js\nvue-json-component - JSON tree view with no dependencies, TypeScript support, and easy customization.\nvue-tree-list - A vue component for tree structure\n\nSocial Sharing\n\nvue-social-sharing - A Vue.js component for sharing links to social networks, work with Vue.js 1.X or 2.X.\nvue-goodshare - Vue.js component for social share with beautiful button design. Simple install, extensive documentation, developer support, SEO friendly, clean code without scripts tracking user activity on the page, high speed. Work with Vue.js 2.x.\nvue-socialmedia-share - A Vue.js component for sharing links to social networks, with Vue 2.X\nvue-picture-sharesheet - A Vue Picture Sharesheet Component heavily inspired by the Image Sharesheet in Apple's Newsroom\nvue-twitter - A Vue.js component for embed twitter widgets (e.g timeline, buttons)\nvue-share-buttons - Vue.js component for placing buttons in your project using which you can share anything\n\nQR Code\n\nvue-qriously - A Vue.js 2 component to draw QR codes on an HTML Canvas using qrious.\nvue-qart - The directive of vue 2.x for qart.js.\nvue-qrcode-reader - A Vue.js 2 component which detects and decodes QR codes from a camera stream.\n\nSearch\n\nvue-fuse - A lightweight plugin for fuzzy search library, Fuse.js\nvue-instantsearch - The ultimate toolbox for creating instant-search experiences using Algolia.\nvue-innersearch - A Vue.js wrapper for Elasticsearch\nreactivesearch-vue - UI components for building data-driven apps with Elasticsearch\n\nMiscellaneous\n\nvue-avatar - An avatar component for vue.js.\nvue-touch-ripple - Touch ripple component for Vue.js(1.x ~ 2.x).\nvue-typer - Vue component that simulates a user typing, selecting, and erasing text.\nvue-keyboard - Vue 2 virtual keyboard component.\nvue-twentytwenty - Image comparison component, works with Vue.js 2.x\nvue-cookie-law - Cookie info plugin for Vue.js 2.x\nvue-gravatar - A dead-simple gravatar component for Vue.js 2.x\nvue-clipboard2 - An easy to use clipboard.js binding for Vue.js 2.x\nvue-flashcard - FLashcard component with animation for Vue.js 2.x \ud83d\udca1\nvue-truncate-collapsed - A simple component that truncates your text and adds a 'Read More/Show Less' clickable for Vue.js 2.x\nvue-kanban - A flexible drag and drop kanban board component\nvue-letter-avatar - A simple and elegant letter avatar component for vue.js\nvue-highlightjs - Syntax highlighting with highlight.js\nv-clipboard - Simple, tiny and easy to use directive to save your models to clipboard (less than 2kb minified, no dependencies)\nvue-invisible-recaptcha - Super easy integration for Google's Invisible reCAPTCHA\nvue-embed - Embed component is based on embed.js for Vue 2.x, a component that embeds emojis, media, maps, tweets, gists, code, services and markdown.\nvue-particles - Vue.js component for particles backgrounds\nvue-uniq-ids - Vue.js 2.x plugin that helps to use id-related attributes with no side-effect\nvue-multivue - Use multiple vue apps of the same class on the same page.\nvue-affix - A Vue.js 2.x plugin that affixes an element in the window while you scroll, similar to Bootstrap Affix but much simpler and smarter\nX-Browser-Update-Vue - A Vue.js browser-update plugin.\nvue-query-builder - A UI component for building complex queries with nested conditionals.\nvue-info-card - A simple and beautiful card component with an elegant spark line and CSS3 flip animation.\nv-offline - Simple, tiny and easy to use detection of offline & online events for your Vue app (less than 390b minified)\nvue-word-cloud - A word cloud generator.\nvue-flat-surface-shader - A Vue component for flat surface shader\nvue-easteregg - Easey add an easteregg to your vue app (default with konami code)\nvue-barcode-scanner\nvue-heatmapjs - A Vue directive for tracking and visualising mouse activity\nvue-maze - An itty-bitty maze game made as Vue.js component\nvue-drag-verify - This is a vue component, which is sliding to unlock for login or sign up.\nvue-balloon - Vue components for creating fixed, zoomable containers in the corner of a page. Similar to the mail composition wrapper used in gmail.\nvue-sticker - Sticker effect to any directions\nv-rating - \u2b50\ufe0f Rating component in Semantic-UI made with VueJS (< 500B gzipped, blazing fast)\nvue-content-placeholders -  Composable components for rendering fake (progressive) content like facebook in vue\nvue-page-designer - Vue component for drag-and-drop to design and build mobile website.\nvue-creativecommons - CreativeCommons.org Vue.js components library.\nvue-status-indicator - A Vue.js component to show status indicator as colored dots.\nvue-google-adsense - Vue.js Google Adsense Component with InFeed and InArticle Ads support\nemoji-vue - Emoji \ud83d\ude0e\ud83d\udc4c\ud83c\udffb dropdown for Vue.js project\nvue-chessboard -  Chessboard vue component to load positions, create positions and see threats.\nvue-mindmap - Vue component for mindnode maps.\nv-currency - Vue component for formatting currency.\nvue-emoji-picker - Highly customizable unicode emoji picker \ud83d\udd25\ud83d\ude80\nvue-8-puzzle - An itty-bitty slide puzzle game made as Vue.js component\nvue-e164 - Customizable phone formatter with E.164 standart support\nvue-pgn - Vue.js component for viewing chess games in pgn format\nvue-avatar-editor - Resize, rotate and crop your uploaded avatar using a clear user interface.\nvue-connection-listener - Vue event bus plugin listening for online/offline changes.\nvue-sauce - \"View source\" directive for Vue.\nvue-prom - Vue promise wrapper component.\nnumeric-keyboard - Numeric keyboard for mobile browsers.\nvue-zoom-on-hover - Image zoom on mouse hover\nvue-responsive-image - A Vue component that lets you quickly create responsive image tags with an optimal number of image sources for all devices.\nvue-highlight-text - Vue component for highlight multiple instances of a word\nvue-cast-props - Provides a convenient way of converting props to common data types.\nvue2-heropatterns - A Vue2 implementation allowing you to add the popular Hero Patterns onto any Div\nvue-link - One component to link them all \ud83d\udd17 (treat external and internal links same)\nvue-identify-network - \u26a1\ufe0fIdentify what kinda internet your users are using!\nvue-cloneya - A vue component to clone DOM elements\nvue-survey-builder - Survey builder for vue.js applications\nvue-if-bot - A lightweight component to hide/show content to clients based on the user agent\nvue-clampy - Vue.js (2+) directive that clamps the content of an element by adding an ellipsis to it if the content inside is too long.\nvue-cookie-accept-decline - Show a banner with text, a decline button, and an accept button on your page. Remembers selection using cookies. Emits an event with current selection on creation. Good for GDPR requirements.\n@lossendae/vue-avatar - An avatar component for VueJS 2.0.\nvue-text-highlight - Text highlighter library for Vue.js \ud83d\udc84\nvue2-hammer Hammer.js wrapper for Vue 2.x to support mobile touch..\nvue-countable - Vue binding for countable.js. Provides real-time paragraph, sentence, word, and character counting.\nv-show-slide - A Vue.js directive for animating an element to and from height: auto in a sliding motion.\nvue-swipe-actions - iOS style swipe actions for Vue.js\nvue-friendly-iframe - A Vue js component for creating super fast loading, non-blocking iframes.\nvue-beautiful-chat - A simple and beautiful Vue chat component backend agnostic, fully customizable and extendable.\nvue-magnifier - A simple image zooming / magnifying component for Vue.js 2.x.\nvue-highlight-words - Vue component to highlight words within a larger body of text. Ported from react-highlight-words\nvue-tags-ball - Create a beautiful and spherical tag with this plugin\nvue-rippler - Simple Vue.js plugin for custom ripple effect\nvue-contacts - Mobile contacts component for Vue\nbasic-vue-chat - Easy to use Vue.js chat\nvue-resize-text - A vue directive which automatically resize font size based on element width.\nvue-github-profile - A vue component to view the profile and repos of determined user\nvue-niege - \ud83c\udf84 \ud83c\udf85 Single File Vue component to add a snow storm through a canvas.\nvue-dynamic-star-rating - A highly dynamic vue stars rating component, like google play rating \u2b50\ufe0f \u2b50\ufe0f \u2b50\ufe0f \u2b50\ufe0f \u2b50\ufe0f\nvue-katex - Simple plugin for math typsetting using KaTeX in Vue.js\nvue-canvas-identify - Vue canvas component for vuc-identify\nvue-canvas-material - Vue canvas component for vuc-material\nvue-baberrage - A simple Barrage plugin Base on Vue.js\ud83d\ude0e\nvue-terminal-ui - \ud83d\udda5Terminal UI emulator Vue: custom and basic commands\nvue-command - A fully working Vue.js terminal emulator\nvue-ribbon - Vue component for GitHub ribbons\navatio-avatar - Vue component for illustrated avatars - used by Avatio\nvue-jazzicon - A dead-simple Jazzicon component for Vue.\nvue-star-rating - A simple, highly customisable star rating component \u2b50\ufe0f \u2b50\ufe0f \u2b50\ufe0f\nvue-fixed-header - Simple and cross-browser friendly fixed header component for Vue.js written by TypeScript.\nvue-particle-effect-buttonsA bursting particles effects buttons component.\nvue-insomnia - Prevent display screen from sleeping (wake lock).\nvue-car-plate-keyboard - A car license plate number keyboard for VueJS 2.x.(\u8f66\u724c\u53f7\u8f93\u5165\u952e\u76d8\uff0c\u652f\u6301\u65b0\u80fd\u6e90\u8f66\u724c\ud83d\ude97\ud83d\ude97\ud83d\ude97)\nvue-dataflow-editor - Vue2 dataflow graph editor\ncool-emoji-picker - A fast plug-n-play [Tw]emoji Picker (+textarea for Twemoji rendering) component for Vue.\n\nTabs\n\nvue-tabs - Simple tabs and pills.\nvue-swipe-tabs - A touch swipe tab component for vue.js(vue2).\nvue-tabs-component - An easy way to display tabs with Vue.\nvue-k-tabs - A simple tabs components with Gitlab design.\nvue-tabs-with-active-line - Simple Vue 2 component, that allows you to make tabs with moving bottom line\nvue-tabs-chrome - A Vue component for Chrome-like tabs.\n\nForm\nLet the user create & edit data\nPhone Number Input Formatter\n\nvue-phone-number-input - A beautiful input to format & valid phone number with country code \ud83d\udd25\n\nPicker\n\nvue-smooth-picker - A smooth picker component for Vue 2.x, like iOS native datetime picker.\n\nGenerator\n\nFormSchema Native - Generate a form using JSON Schema and Vue.js\nvue-awesome-form - A vue.js component just like json-editor\nvue-generator - Initial router and components for the Vue project.\nvue-form-json - Generate a vue form with validation and bulma style, from json\nform-create - Form builder with dynamic rendering, data collection, validation, and submission capabilities, supporting json data\nelement-form-builder - Build element-ui forms with JSON Schema.\nncform - a very nice configuration generation way to develop form\nLaraform - Advanced form builder for Vue.js with Laravel support\nvue-ele-form - Vue DataForm, based on element-ui\n\nDate Picker\nDate / datetime / time Picker\n\nvue-datepicker - [unmaintained] Calendar and datepicker component with material design for Vue.js.\nvue2-timepicker - [unmaintained] A dropdown time picker (hour|minute|second) for Vue 2.x, with flexible time format support.\nvuejs-datepicker - A simple Vue.js datepicker component. Supports disabling of dates, inline mode, translations.\nvuedt - [unmaintained] Crazy lightweight (5.5kb!) Vuejs Date and Time picker component with nice animations and not too much fuzz.\nvue-flatpickr-component Vue.js component for flatpickr datetime picker\nvue-bootstrap-datetimepicker Vue.js component for eonasdan-bootstrap-datetimepicker\nvue-jalaali-datepicker - Jalaali calendar and datepicker for vue.js 2.\nvue-date-picker - A vue date picker component inspired by material design\nvue-monthly-picker - Vue.js component for month and year picker only\nvue-hotel-datepicker - A responsive date range picker that displays the number of nights selected, allows custom check-in/check-out rules, blocking dates, localization support and more.\nvue2-persian-datepicker - An awesome Persian datepicker component for vue. \u06a9\u0627\u0645\u067e\u0648\u0646\u0646\u062a \u0627\u0646\u062a\u062e\u0627\u0628 \u062a\u0627\u0631\u06cc\u062e \u0628\u0631\u0627\u06cc \u0648\u06cc\u0648.\nvue-datetime - Mobile friendly datetime picker for Vue. Supports date, datetime and time modes, i18n and disabling dates.\nvue-rangedate-picker - Range date picker with simple usage\nv2-datepicker - A simple datepicker component based Vue 2.x.\nvue-datepicker-local - A Beautiful Datepicker Component For Vue2.\nvue-airbnb-style-datepicker - A Vue datepicker with a similar look and functionality as the popular AirBnb datepicker. Lightweight, configurable and good browser support!\nvue-persian-datetime-picker Persian material datepicker. Supports datetime, date, time, year, month.\nVCalendar Very customizable and powerful calendar/datepicker component with many features and good documentation.\n@owumaro/vue-date-range-picker - A vue component using Bootstrap 4 styles for date range selection\nvue-datepicker-mobile - A mobile friendly datepicker for vue2. \ud83c\udde8\ud83c\uddf3 select one day or range of date and custom it that you wish.\nvue-draggable-cal - Not your ordinary datepicker. A Vuejs draggable date selector with a fresh responsive design, mobile ready and 0 dependencies, 17kb gzipped.\nvue-vanilla-datetime-picker - Datetime picker for Vue.\nvue2-daterange-picker - Vue2 date range picker based on bootstrap-daterangepicker (no jQuery dependency)\nvue-timeselector - Fully and simply customizable powerful time picker component for Vue.js.\nvue-date-picker - Lightweight datepicker component for Vue 2.x.\nvue-ctk-date-time-picker - A beautiful VueJS component to pick date & time (with range mode) \ud83c\udd95\nsimple-vue2-datetimepicker - A simple, easy to use vue.js component for date and time picking. \ud83c\udd95\nvue-business-hours - Vue component for selecting business hours in an administration panel or dashboard.\nmaterial-vue-daterange-picker - a daterange picker of Material Design style for Vuejs 2.x, which is compatible with vuetify and friendly for mobile.\nvue-datepicker - A clean & responsive datepicker with Material Design style for Vuejs 2.x. (date/month/quarter && date range picker) \ud83c\udd95\n\nSelect\n\nvue-select - A native Vue.js component that provides similar functionality to Select2 without the overhead of jQuery.\nvue-multiselect - Universal select/multiselect/tagging component for Vue.js.\nstf-vue-select - most flexible and customized select Vue2\nvue-select-image - Vue 2 Component for selecting image from list\n@riophae/vue-treeselect - A multi-select component with nested options support for Vue.js.\n@k186/pd-select - A mobile UI component like IOS picker for Vue 2.x,can be wheel pick what ever you defined.\nvue-dropdowns - A minimalistic and adaptable way to display select boxes if using objects for vue2.x\nv-cascade - A lovely component of cascade selector with Vue 2.x (Support both of PC and Mobile)\nvue-multi-select - A custom component to make select/multiselect for Vue2.\nv-region - A simple region selector, provide Chinese administrative division data.\nv-selectpage - A powerful selector for Vue2, list or table view of pagination, use tags for multiple selection, i18n and server side resources supports.\nvue-cool-select - Bootstrap / Material Design theme, support slots, autocomplete, events, validation and more.\n@myena/advanced-select - Single/Multiple Select component with search, controls for (de)select all and a Bootstrap 3 theme\n@alfsnd/vue-bootstrap-select - Vue version of bootstrap-select.\n\nSlider\n\nvue-slider-component - Slider for vue1.x and vue2.x.\nvue-circle-slider - Circle slider component for vue2.x.\nvue-netflix-slider - A Netflix like slider.\nvue-slide-bar - Very simple vue slider bar component.\ntextra - Vue js add-on to slide text.\nvue-knob-control - A rotary knob control for Vue.js\n\nDrag and Drop\n\nvuedraggable - Vue component allowing drag-and-drop sorting in sync with View-Model. Based on Sortable.js.\nvue-dragula - Drag and drop so simple it hurts.\nvue2-dragula - A vue-dragula fork for Vue2, with a lot of improvements.\nawe-dnd - A sortable list directive with Vue.\nvue-draggable-resizable - Vue2 component for draggable and resizable elements.\nvddl - Vue components for modifying lists with the HTML5 drag & drop API, supports VueJs versions 1 and 2.\nvue-drag-drop - A minimal and lightweight wrapper for the HTML5 Drag and Drop API.\nvue-swing - A swipeable cards interface, as seen in apps like Jelly and Tinder.\nvue-slicksort - A dependency-free set of mixins for animated, touch-friendly, sortable lists\ndraggable-vue-directive - A simple directive to handle drag and drop of any Vue component.\nvue-smooth-dnd - Vue wrappers of smooth-dnd library. drag and drop, sortable library covering for many cases.\nvue-drag-resize - A dependency-free Vue component for draggable and resizable elements with aspect ratio, reactive props etc\nvue-drag-it-dude - Vue2 component, that allows you to drag object wherever you want.\nvue-draggable - Vue Drag and Drop library without any dependency. Simple and easy to use.\nvue-nestable - A simple drag & drop hierarchical list made as a vue component.\nvue-draggable-nested-tree - A powerful customizable draggable tree view component for Vuejs2 @phphe\n\nAutocomplete\nAutosuggest / autocomplete / typeahead\n\nvue-instant - Vue instant allows you to easily create custom search controls with auto suggestions for your vue 2 applications.\nv-autocomplete - Autocomplete component for Vue.js\nvue-awesomplete - Vue wrapper for Awesomplete\nvue-auto-complete - Autocomplete for Vue2. Works with objects or api calls.\nvue-autosuggest - WAI-ARIA complete Autosuggest component with full customization over rendering and styling.\nv-autosuggest - A simple modular Vuejs component that autosuggest input from a dynamic or static data querying.\nautocomplete - Simple Autocomplete component for Vue.js 2.*\nvue-infinite-autocomplete - Vue infinite-autocomplete wrapper for Vue.js 2.*\nvue-simple-suggest - Simple yet feature-rich autocomplete component for Vue.js\nv-suggest - A Vue2 plugin for input content suggestions, support keyboard to quick pick.\nvue-bootstrap-typeahead - An typeahead/autocomplete component for Vue2 using Bootstrap 4 CSS.\n\nType Select\nLet the user select a tag / something while typing\n\nvue-input-tag - Vue.js 2.0 Input Tag Component.\nv-distpicker A flexible, highly available district picker for picking provinces, cities and districts of China for Vue.js 2.x.\nvue-img-inputer A graceful, highly customizable img type input for Vue 2\nvue-img-preview An image input preview component in vue 2\nv-image \ud83d\udcf7 Tiny little component for input type=file (< 1kb, gzipped)\n@voerro/vue-tagsinput A simple tags input Vue.js 2 component with typeahead/autocomplete\nvue-tag-selector - Tag-like input. Light, customizable and handles REGEX validation!\n\nColor Picker\n\nvue-color - Vue Color Pickers for Sketch, Photoshop, Chrome & more.\nvue-swatches - Help the user picking beautiful colors!\nradial-color-picker - Minimalistic color picker with a focus on size, accessibility and performance.\nvue-color-picker-board - Vue Color Picker component designed for humans!\nverte - A Complete Vue.js Color Picker Component.\n\nSwitch\nSwitch / on/off toggle / checkbox\n\nvue-switches - An on/off switch component for Vue.js with theme support.\nvue-js-toggle-button - Vue.js 2.0+ toggle / switch button - simple, pretty, customizable.\nvue-checkbox-radio - A Vue component to easily styling checkbox and radio inputs.\nvue-enhanced-check - Vue component to redesign/labelize checkbox/radio, including toggle/switch button.\npretty-checkbox-vue - Implementation of pretty checkbox 3(A pure CSS library to beautify checkbox and radio buttons) components for Vue.js 2.2+.\nvue2-collapse - Vue Collapse is a flexible content toggling plugin for the accordion lists or any other conditional content rendering.\nvue-badger-accordion - A wrapping Component for Badger Accordion for Vue.js 2.0+\nvue-loading-checkbox - A highly customizable Vue.js checkbox UI component with loading state\nvue-rocker-switch - A customizable rocker switch component for Vue.js.\nvue-toggle-btn - A Highly Customizable, easy-to-use elegant toggle/switch button component\n\nMasked Input\n\nvue-masked-input - Masked input component for Vue.js.\nvue-text-mask - Input mask for React, Angular, Ember, Vue, & plain JavaScript.\nvue-ip-input - An ip input implemented by vuejs.\nvue-numeric - Input field component to display currency value based on Vue.\nawesome-mask - Mask directive based on a pure and simply VanillaJS implementation\nv-money - Tiny (<2k gzipped) input/directive mask for currency\nvue-autonumeric - A Vue.js component that wraps the awesome AutoNumeric input formatter library\nvue-inputmask - Vue.js directive to add Robin Herbots' inputmask library to your inputs (vanilla javascript).\nvue-input-number - A custom input number component for Vue.js 2.\nv-unicode - Vue directive to restrict an input by unicode values.\nvue-cleave-component - Vue.js component for cleave.js\nvue-ip - An ip address input with port and material design support\nvue-r-mask - Directive with template similar to javascript regular expression.\nvue-input-code - Base on Vue.js 2.0+ verification code input component.\nlabel-edit - Inspired by Trello. Click to show editable input and return the value changes. This is a Vue Component.\nvue-jquery-mask - Vue.js v2.x component for jQuery Mask Plugin\nvue-the-mask - Tiny (<2k gzipped) and dependency free mask input for Vue.js\nvue-canvas-input - Vue canvas component for vuc-input\nvue-currency-input - Easy input of currency formatted numbers for Vue.js.\nvue-restricted-input - Input mask library for vue.js based on restricted-input\n\nRich Text Editing\n\nvue-quill-editor - Quill editor component for Vue2.\nvue-mobiledoc-editor - A mobiledoc editor component toolkit for Vuejs.\nvue2-medium-editor - A MediumEditor component for Vue 2.\nvue-froala - VueJS wrapper for Froala Editor.\nvue-froala-wysiwyg - Official VueJS plugin for Froala WYSIWIG HTML Editor.\nvue-at - At.js for Vue.\nvue-wysiwyg Lightweight, fast & extensible WYSIWYG editor\nvue-trumbowyg Vue.js component for Trumbowyg WYSIWYG editor\nvue-pell-editor Vue.js component for Pell WYSIWYG editor\nvue-tinymce-editor Tinymce editor component for Vue2.\nvue-mce - tinymce editor component for VueJS.\nVue2-Editor - HTML Editor using Vue.js and Quilljs\nvue-codemirror - A Codemirror component for Vue2.\nvue-easy-tinymce - A simple and powerful package for easy usage of tinymce in Vue.js project.\nvue-highlightable-input - Highlight and style text as you're typing\nvue-trix - Simple and lightweight Trix rich-text editor for Vue.js\ntiptap - A renderless and extendable rich-text editor for Vue.js\ntoast-ui.vue-editor - Vue Wrapper for TOAST UI Editor.\nckeditor5-vue - An official CKEditor 5 rich text editor component for Vue.js.\nyimo-vue-editor - A wangEditor2 component for Vue2.\nvue-mathlive A MathLive math editor (mathfield) for Vue.hjs\n\nImage Manipulation\nEdit images\n\nvue-core-image-upload - A vue plugin for image to crop and upload.\nvue-croppa - A simple straightforward customizable lightweight mobile-friendly image cropper for Vue 2.0.\nvue-cropper - A picture clipping plugin for vue2.0\ntoast-ui.vue-image-editor - Vue Wrapper for TOAST UI Image Editor.\nvue-quick-cropper - Vue mobile avatar upload cropping plugin can choose cropping area and zoom.\nvue-canvas-image - Vue canvas component for vuc-image\nvue-croppie - Yet another image cropper\nvue-slim-cropper - \ud83d\udc87 A simple and elegant mobile image crop upload component for Vue 2.x.\nvue-advanced-cropper - An advanced cropper that gives you opportunity to create almost any cropper that you desire\n\nDisplay images\n\nvue-cloudinary - A vue (2.0) plugin that offers a reusable directive to get images from Cloudinary (https://cloudinary.com) with dynamic manipulation (resizing/cropping/effects/watermarking/scaling/formatting) and optimization (webp/png/auto quality/auto retina).\nimg-Vuer - An Mobile-First image viewer/gallery for Vue2\nvue-image-loader - A vue loader/progressive image plugin like Medium.\nvue-load-image - display loader during image loading, as well as by display alternate content when the image fails to load.\nvue-image-painter - \ud83d\ude4b Image magic animation drawing effect component for Vue 2.x.\n\nVideo Manipulation\n\nvue-playlist - A lightweight vue (2.0) component with no dependancies that offers truly seamless html5 video playback. The one and only working solution for seamless video play done with vanilla JS. It takes an array of videos and stitches them together into a single video.\n\nFile Upload\n\nvue-clip - Simple and hackable file uploader for VueJs. Supports Vue >= 2.1.\nvue-simple-upload - Simple File upload component for Vue.js.\nvue2-multi-uploader - A drag and drop multiple file uploader component that uses Vue.js v2 and Axios. Uploader shows file names, sizes and total size of files added. It also allows setting a minimum required number of files to upload.\nvue-dropzone - A Vue.js (vue2) component for Dropzone.js - a drag\u2019n\u2019drop file uploads utility with image previews.\nvue-transmit - A purely Vue.js drag & drop uploader component based on Dropzone.js for Vue 2.0\nvue-upload-component - Vue upload component, Multi-file upload, Upload directory, Drag upload, Drag the directory. Supports  Vue >= 2.0\nvue-uploader - A Vue.js upload component powered by simple-uploader.js\nic-firebase-uploader - A clean multi-file upload component for Firebase storage.\nvuejs-uploader - A resumable multipart file uploader for HUGE file uploads.\nvue-filepond - A Vue.js component for FilePond - a file upload library that can upload anything you throw at it.\nv-uploader - A Vue2 plugin to make files upload simple and easier, you can drag files or select file in dialog to upload\n\nContext Menu\n\nvue-context-menu - A context menu component for vue js.\nvue-lil-context-menu - A flexible lil context menu component for Vue.\nvue-mouse-menu - A mouse-menu component for vue 2+.\n@hscmap/vue-menu - Menu / Context Menu component for vue2.\nvue-context - A simple but flexible context menu for vue js.\nvue-simple-context-menu - Simple context-menu component built for Vue. Works well with both left and right clicks.\nvue-context-menu-popup - Context Menu popup for Vue 2. Works on right click or can be triggered programatically.\n@kiyoaki_w/vue-context - A customizable context menu component built for Vue2, supporting fontawesome icons.\n\nMiscellaneous\n\nvue-gmaps - Search places and address using Google Maps API.\nvuep - A component for rendering Vue components with live editor and preview.\nvue-places - Places component is based on places.js for Vue 2.x. Turn any input into an address autocomplete.\nvue-password-strength-meter - Password strength meter based on zxcvbn in vue.js.\nvue-float-label - Float label pattern for Vue.js.\nvue-longpress - A VueJS (2.x) button component that requires you to keep pressing to confirm a given action.\nvue-google-autocomplete - A Vue.js (2.x) autosuggest component for the Google Maps Places API.\nvue-ip-input - An ip input component for Vue.js 2.x\nvue-default-value - Vue.js 2.x directive to set a default value for editable elements with no affect to the model state\nvue-model-autoset - A Vue.js plugin to workaround Vue limitation in observing dynamically added properties with v-model directive\nvue-submit - Simple implementation of Ladda (1, 2) in less than 90 lines of code with no dependencies.\nvue-rate - Rate component for Vue\nvuetify-google-autocomplete - A Vuetify ready Vue.js (2.x) autosuggest component for the Google Maps Places API.\nvue-ripple-directive - Material Ripple Effect as Vue Directive.\nvue-fab - Vue Floating Action Button.\nvue-complexify - Vuejs porting library from jquery.complexify.js.\nvue-mc - Models and Collections for Vue.js\nvue-stars - Highly customizable rating control (using stars or other characters)\nvue-confirmation-button - Customizable confirmation button that requires users to read messages before performing an action\nvue-poll - A Vue.js component for voting\nvue-diagrams - Diagram component for vue.js, inspired by react-diagrams\nvue-easy-polls - A Vue.js component for creating polls, voting and showing results. It\u2019s easy to implement and easy to customize.\nvue-m-button - A beautiful button component for vue.\nvue-long-click - Long click (long press) directive library for vue, support mobile and desktop.\nvue-ui-predicate - A rules editor, generic filtering UI, predicates component for Vue JS.\nvue-mobile-detection - Vue.js prototype function this.$isMobile() that returns a Boolean value depending on whether or not the user is browsing with a mobile.\nvue-input-contenteditable - A Vue component wrapper for contenteditable with all the features you normally expect. Make beautiful inputs without the restrictions of input[type='text'].\n\nWizard\n\nvue-form-wizard - Tab based component which can replace classic bootstrap & jQuery form wizards\nvue-stepper - A simple stepper with simple actions such as next, back and end to perform simple forms.\nvue-stepper-component - A fully customizable Stepper component with Vuex support and Zero dependencies.\n\nCSV\n\nvuecsv - A Simple CSV Downloader from json with option modal panel component.\n\nComment System\n\nvue-comment-grid - \ud83d\udcac Responsive Vue.js comment system plugin that built with CSS Grid and Firebase REST API + Authentication.\n\nCanvas\n\nvue-easeljs - Data-driven control over an HTML5 canvas element.\nvue-canvas-effect - A simple, canvas effect collection for Vue.js.\nvue-konva - Vue & Canvas - JavaScript library for drawing complex canvas graphics using Vue.\nvue-html2canvas - Vue mixin to capture html and convert it to an image using Html2Canvas.\nvue-canvas-nest - A Vue.js component for canvas-nest.\nvue-signature-pad - \ud83d\udd8b A Vue Signature Pad Component\n\nLink Preview\n\nlink-prevue - Flexible component for generate a link preview.\n\nTour\n\nvue-tour - Lightweight and customizable tour plugin\nvue-page-guide - Page tour / guide plugin with directive\n\nUI Layout\nLayout for the overall / main view\n\nvue-waterfall - A waterfall layout component for Vue.js.\nvueisotope - Vue component for isotope filter & sort magical layouts.\nvue-grid-layout - A draggable and resizable grid layout, for Vue.js.\nvue-drag-zone - Drag Zone component for Vue.js(2.x).\nvue-masonry - Vue.js directive for masonry blocks layouting.\nvue-fraction-grid - Flexbox based responsive fraction grid system for Vue.js.\nvue-virtual-scroll-list - A vue (2.x) component support big data by using virtual scroll list.\nvue-virtual-scroller - Component to scroll a large amount of elements efficiently (Vue 2.x).\nvue-virtualscroll - [Vue 2.x] component to virtual scroll things.\nvue-inview - [Vue 2.x] Viewport, get notification when DOM element is entered or leave.\ndnd-grid - A vuejs grid with draggable and resizable boxes\nvue-extend-layout - Extend the default layout or create custom layouts for the pages of your Vue.js SPA\nvue-masonry-css - Vue.js Masonry layout component powered by CSS, dependency free\nvue-fullpage.js - Official fullPage.js component for Vue.js.\nvue-virtual-collection - Vue component for efficiently rendering large collection data.\nautoresponsive-vue - Auto responsive grid layout library for Vue.\nVueFlex - A flexbox grid system.\nv-chacheli - A Vue.js component to create and display custom dashboard-like grid layouts.\nvue-grid-styled - A lightweight set of functional grid components, ported from React's grid-styled\nsimple-grid - Vue component for grid layout,support flex.\nvue-container-component - Simple container component inspired on Bootstrap Container\nvue-colcade - A small wrapper for integrating Colcade grid layout to Vuejs.\nvue-ads-layout - A small library of Vue components to quickly generate a responsive web application layout with toolbar, left/right drawers and a footer. All components can be positioned fixed or relative.\nvue-magic-grid - A tiny port of Magic Grid for Vue.js 2.\nvue-splitter-pane - A Vuejs component which renders two slots in a adjustable split arrangement (vetical or horizontal).\nsplitpanes - A Vue JS reliable, simple and touch-ready panes splitter / resizer.\nvue-mock-layout - Easily mock the layout of your Vue apps.\nvue-simple-drawer - A tiny drawer panel with bounced animation, nest supported and theme customized. directions: left/right/up/down\nvue-grd - Simple, Light-weight and Flexible Vue.js component for grid layout.\n\nFrameworks\nResponsive\nSet of components + responsive layout system\n\nquasar-framework - Quasar Framework. Build responsive websites, hybrid mobile Apps (that look native on Android and iOS) and Electron apps using same code, with VueJs 2.\nvue-material - Material design for Vue.js.\nvuetify - Material Component Framework for Vue.js 2.\nmuse-ui - Material Component library for Vue.js 2.\nbuefy - Components based on Bulma framework.\nelement-ui - A Vue.js 2.0 UI Toolkit for Web.\nvue-bulma-components - Easily use bulma class syntax with vue components.\niview-ui - A Vue.js 2.0 UI Framework for web.\nAT-UI - A fresh and flat UI-Kit specially for desktop application, made with \u2665 by Vue.js 2.0\nv-semantic - Implementation of semantic-ui for Vue\nbootstrap-vue - Implementation of bootstrap-4 grid and components for Vue.js 2.\nfish-ui - A Vue.js 2.0 UI Toolkit for Web\nzircle-ui - A frontend library to develop zoomable user interfaces.\nvue-mdc-adapter - Material Components integration for Vue.js as per MDC Team's guidelines.\nMaterial Components Vue - wrapper around material-components-web for Vue.js\nVueFace - A Vue.js 2.0 UI Component library for Web\nvuesax - Frontend vue Components for Vue.js.\nvuecidity - UI component framework for Vue.js 2.0\nant-design-vue - An enterprise-class UI components based on Ant Design and Vue 2.5.0\nheyui - (https://www.heyui.top/en) - A Vue.js 2.0 UI Toolkit for Web.\nCarvue.js - IBM's Carbon Design System for Vue.js\nBalmUI - Next Generation Material UI for Vue.js\nOsiris UI - \ud83c\udfa8 A Vue.js 2.0 universal responsive UI component library\nN3-components - Beautiful Web Components built with Vue 2\nShards Vue - \u2728 Sleek & UI Components Library based on the Bootstrap 4 Framework.\nFundamental Vue - Components based on SAP Fiori Fundamentals.\nFramevuerk - \ud83d\ude80 Fast, Responsive, Without Dependencies, Both Direction Support and Configurable UI Framework based on Vue.js.\n@Carbon/vue - Carbon Design System components from the @carbon team.\nNutUI - A Vue.js 2.0 UI Toolkit for Mobile Web\nInkline - Inkline is a modern UI/UX Framework for Vue.js designed for creating flawless responsive web applications.\nvue-awesome-mui - A Vue.js 2.0 MUI Component for Web\nMDBootstrap - Powerful UI toolkit based on the latest Bootstrap 4 and Vue 2.6.10, providing a set of slick, responsive page templates, layouts, components and widgets to rapidly build responsive, mobile-first websites and apps.\n\nMobile\nUI frameworks for mobile\n\nFramework7-Vue - Build full featured iOS & Android apps using Framework7 & Vue.\nvux - [Chinese] Vue UI Components based on WeUI.\nvue-onsenui - Mobile app development framework and SDK using HTML5 and JavaScript. Create beautiful and performant cross-platform mobile apps. Based on Web Components, and provides bindings for Angular 1, 2, React and Vue.js.\nWeex - Weex provides the ability to publish cross platform, so web, Android, and IOS apps can use the same API development functions.\nweex-eros - [Chinese] Eros is a app solution based on Weex and Vue, which enables you to use API of Vue, simple and quick development of small and medium app.\n\nSet of components for mobile\n\nmint-ui - Mobile UI elements for Vue.js.\nvant - A Vue.js 2.0 Mobile UI From YouZan.\ncube-ui - A fantastic mobile ui lib implement by Vue.js 2.\nmand-mobile - A mobile UI toolkit, based on Vue.js 2, designed for financial scenes.\n\nComponent Collections\nSet of components without layout system\n\nvue-mdc - Material Components Web for Vue.js.\nkeen-ui - A lightweight collection of essential UI components written with Vue and inspired by Material Design.\nvue-admin - Vue Admin Panel Framework, Powered by Vue 2.0 and Bulma 0.3.\nvuikit - UIkit with all the power of Vue.\nuiv Bootstrap3 components implemented by Vue2.\nwffranco/vue-strap - Bootstrap 3 components built with Vue.js 2\njsmod-vue-pc - Highly scalable web components for vue 2.0\nguilhermewaess/SemVue - Semantic-ui Modules implemented with Vue 2\noffice-ui-fabric-vue - Office UI Fabric implementation for Vue.js\nvuestic-admin - Vue Admin Dashboard with collection of custom components. Built with Vue 2 and Bootstrap 4\nSemantic UI Vue - Semantic UI integration for Vue\nvuesax - Frontend vue Components for Vue.js.\nEssential JS 2 for Vue - Full featured 45+ Vue.js components which includes Data Grid, Chart, Scheduler and Diagram components etc.\nBanshee - A mostly renderless Vue UI component and utility framework that ships with no CSS.\nvue-atlas - A library of beautiful Vue components.\nDevExtreme Vue Components - 65+ responsive and feature-complete Vue UI components with customizable Material Design and Bootstrap compliant themes.\njqwidgets - 70+ Vue.js 2.0 UI Components with Material Design themes.\nvue-uix - UI collection for web page implementation in Vue.js\nvuedarkmode - A Minimalist Dark Design System for Vue.js \ud83c\udfa8\nKendo UI for Vue \u2013 Over 70 UI components, including a Grid, built for business applications. Fully responsive with support for several Design Languages including Material Design and Bootstrap.\nVuent - Vue.js components implementing Microsoft Fluent Design\nbpit/vue - Vue components lib which is focused on effects\nvue-tailwind - Vue components with customizable classes ready for TailwindCSS, but compatible with any framework.\n\nAdmin Template\nSet of admin template\n\niView Vue Admin - iView Vue Admin / An admin portal template based on iView 2.x\nelement Vue Admin - element Vue Admin / An admin portal template based on Element UI 2.x\nvue-element-admin - A magical vue admin based on Element UI 2.x\nD2 Admin - An elegant backstage template build by vue Online Demo\nrest-admin - Restful Admin Panel Based on Vue and Bootstrap 4 Online Demo\nShards Dashboard Lite Vue - \u2728 Modern admin template featuring dozens of custom components and templates.\nVue Material Admin - A vue material design admin template\nelement-admin - A dead simple but powerful vue admin with Vue CLI 3 and element-ui.\n\nServer-side rendering\n\nNuxt.js - Versatile Vue.js Framework.\nReam - A minimalistic framework for building server-rendered and static websites.\nUniversal vue - Vue CLI plugin to create universal Vue applications with ease\n\nStatic website generator\n\nVuePress - Minimalistic Vue-powered static site generator.\nPeco - A static website generator for humans. UNMAINTAINED\nSaber - A static website generator for building blazing fast websites with Vue.js.\nGridsome - Build super fast, modern websites with Vue.js\n\nOther\n\napp-framework - IOS and Android Apps with HTML & JavaScript - develop, build and deploy - free and open source.\nMyfirebase - A decoupled Single page application Framework which is highly compatible with google firebase.\nVue-Access-Control Frontend access control framework based Vue.js 2.\nBasys Toolbox for building full-stack Vue.js apps\nCabloyJS The Ultimate NodeJS Full Stack Business Development Platform, based on KoaJS & EggJS & VueJS & Framework7\n\nUI Utilities\nEvent Handling\nHandling of user events (scroll, click, key strike, ...)\n\nvue-shortkey - Vue-ShortKey - plugin for Vue.js.\nvue-throttle-event - Throttle events based on requestAnimationFrame.\nvue-waypoint - Waypoint component for Vue, this is the easiest way to trigger a function when you scroll.\nvue-clickaway - Reusable clickaway directive for reusable Vue.js components.\nvue-scrollfire - Fires an event on a specific scroll position.\nvue-resize-directive - Vue directive to detect resize events with deboucing and throttling capacity.\nv-click-outside - Vue directive to react on clicks outside of an element without stopping the event propagation.\nvue-outside-events - Vue 2.x directive to help a specified element listen for specific events occurring outside of itself.\nvue-selectable - Vue 1.x/2.x directive to make items selectable by mouse.\nvue-click-helper - Vue2.x directive to handle click event and dblclick event on same element.\nv-hotkey - Vue 2.x directive for binding hotkeys to components.\nvue-resize - Vue 2.x component to detect DOM elements resizing (event based/no window.onresize)\nvue-observe-visibility - Vue 2.x directive using Intersection Observer API that detects if the element is visible (in the viewport and not hidden by CSS).\nv-dragged - Vue 2.x directive plugin for drag event detection.\nvue-esc - Vue.js directive to add a document event listener on escape keyup.\nvue-global-events \u2013 A component to handle global events (like shortcuts) using Vue\u2019s event modifiers\nvue-edge-check \u2013 Check browser edge to prevent transition effect triggered oddly when swipe edge with vue-router\nvue-mutation-observer \u2013 A simple and tiny directive to observe changes in DOM use MutationObserver API\nvue-scroll-show \u2013 Showing the element if the user reached it after scroll\nvue-tabevents \u2013 Easy communication between other opened tabs\nvue-visibility-trigger - \ud83d\udc40 Declaratively trigger methods when scrolled into view\n\nResponsive Design\n\nvue-viewports - Define your custom viewports and use them in your components.\nvue-responsive: Vue.js(2.x) directive to hide/show HTML-elements with the Bootstrap 4, 3 or self defined breakpoints.\nvue-match-media - Vue 2.x-compatible plugin that offers a consistent, semantic approach to making components media query-aware.\nvue-media-query-mixin - Vue 2 media query mixin that can be used in both component js and component template. Compatible with bootstrap and vuetify viewports. wXS returns if screen width is xs, wSM returns true if screen width is sm, etc...\nvue-breakpoints - Vue 2 minimal components to show and hide elements based on breakpoints. Inspired by Airbnb.\nvue-mq - Offer some useful tools to quickly setup responsive design with a semantic and mobile-first API (Vue 2.x)\nVueResizeSensor - A container that supports resize event.\nvue-breakpoint-component - A render-less component for\ncomposing CSS breakpoint state.\nfine-mq - A fine API to manage media queries in JS with ease and first-class integration with VueJS as a plugin.\nvue-responsive-components - Create responsive components with ResizeObserver.\nvue-screen-size - Get easy and reactive access to the width and height of your screen.\n\nForm\n\nvue-formly - JavaScript powered forms for Vue.js.\nvue-focus - A reusable focus directive for reusable Vue.js components.\nvue-form-generator - A schema-based form generator component for Vue.js.\nFormSchema Native - Generate a form using JSON Schema and Vue.js\nic-formly - Simple form component powered by vue-formly.\nForm Builder - Json template based form builder, based on Vue and Laravel.\nvue-autofocus-directive - Vue autofocus directive.\nvue-awesome-form - A vue.js component just like json-editor\nvue-form-components - Clean & minimal vue form elements with validation\nncform - a very nice configuration generation way to develop form\n\nValidation\n\nvee-validate - Simple Vue.js input validation plugin.\nvue-rawmodel - RawModel.js plugin for Vue.js v2. Form validation has never been easier.\nvuelidate - Simple, lightweight model-based validation for Vue.js.\nsimple-vue-validator - A simple yet flexible validator library for vue.js.\nvue-vform - Vue.js 2 form component that integrates jQuery Validation and Axios.\nvue-form - Comprehensive form validation for Vue.js.\nvuelidation - simple, powerful, vuejs validation.\nlaravel-vue-validator - Display errors from laravel validation rules\nvue-daval - Super vue data validator. Easiness, simplicity, accurate.\nwillvalidate - Validation Forms for Vue.js.\nvue-m-validator - Model data validation library, for VueJs.\nvue-isyourpasswordsafe - A small utility written in Vue that checks if the given password has been leaked against the Have I Been Pwned API.\nvue-form-send - A Vue.js directive for sending data from form and primitive validation\nFormVuelar - Vue form components with server side validation in mind\nvue-final-validate - Vue validation solution from my development experience, support nested, async.\nvform - A simple way to handle Laravel back-end validation in Vue.\n\nResize\n\nvue-not-visible - Vue directive for removing from dom (like v-if) element on screen smaller than breakpoints.\nvue-window-size - Provides reactivity window size properties.\nvue-responsive-text - \u2194 Component that scales its child node in relation to its parent node's width\n\nScroll\nSet window scroll position\n\nvue-chat-scroll - Automatic scroll-to-bottom directive for Vue.js 2.0.\nvue-scrollto - Adds a directive that listens for click events and scrolls to elements.\nvue-next-level-scroll - A component based and SSR ready approach to smooth scrolling using the modern Scroll behavior API\nvue-scroll-sync - A component that synchronizes containers\u2019 scroll positions\nv-scroll-lock - A Vue.js directive for body scroll locking without breaking scrolling of a target element\nvue2-perfect-scrollbar - PerfectScrollbar minimalistic wrapper\nvue-scroll-to - Adds a directive that listens for click events and scrolls to elements.\nvue-scroll-progressbar - A customizable component that indicates the scroll relative position in a progressbar.\nvue-backtotop - A Back-to-top component for Vue.js, which scroll page to the top when clicked.\n\nVirtual scrollbar\n\nVBar - The virtual responsive cross-browser scrollbar component for Vue.js 2x.\nVuebar - Vue 2 directive for custom scrollbar that uses native scroll behavior. Lightweight, performant, customizable and without dependencies.\nvue-detached-scrollbar - A simple scrollbar that can be detached from the container it is scrolling.\nvuescroll - A scrolling plugin based on Vue.js for uniforming the scrolling in PC and mobile.\nvue-simplebar - Vue.js wrapper for simplebar plugin.\nsmooth-vuebar - Vue directive wrapper for smooth-scrollbar\n\nDetect when components enter viewport\n\nvue-scrollview - A component utilizing scoped slots to detect when a vue component enters and leaves the viewport.\nvue-scrollactive - Adds an active class in a menu item based on the current section in viewport, also scrolling to the section when clicking the menu item.\nvue-intersect - A Vue component to add intersection-observer to a Vue component or HTML element.\nvue-scrollmonitor - A Vue plugin to watch visibility state of elements inside viewport with a wide range of browsers supported (use provide/inject so compat vue@2.2.x)\nvue-stroll - An Awesome CSS3 list scroll effects component for Vue.js 2.x.\nnavscroll-js - Highlights menu items as you scroll, and also scrolls to a section when a menu item clicked. Use as a vue component, a vue directive or with vanilla js.\nvue-scrollwatch - A light plugin detecting scroll event,customize callback when element enter viewport,expose 'scrollTo' api to scroll to specific  element .Using vue directive.\nvue-check-view - A plugin that checks if element is in viewport. Fast, small, has no dependencies, live demo.\nvue-stickto - A vue directive that support multiple DOM nodes stick to top automatically\nvue2-scrollspy - A scrollspy plugin and animated scroll-to.\n\nCustomize the scroll behavior\n\nvue-scroll-behavior - Customize the scroll behavior on route navigation. Especially hash mode.\nvue-scroll-stop - Stops propagation scroll when edge reached.\n\nSeamless scrolling\n\nvue-seamless-scroll - A simple, Seamless scrolling for Vue.js.\n\nRouting\n\nvue-router - The official router for Vue.js.\nvue-router-storage - Router storage & resolve solution for Vue.js 2 & vue-router 2\nvue-tidyroutes - Decentralized vue-router routes definitions\nvue-routisan - Elegant route definitions for Vue Router based on Laravel routing system\nvue-error-page - Provides a wrapper for router-view that allows you to show error pages without changing the URL\nvue-router-sitemap - Generate sitemap.xml by vue-router configuration\nvue-smart-route - Smart route directive to make intelligent looking apps with Vue.js.\nvue-router-lite - A component-based, declarative router for Vue.js 2.\n\nLazy Load\n\nvue-lazyload - A Vue.js plugin for lazyload your Image or Component in your application.\nvue-lazy-background-images - Lazy load background images for Vue 2.\nvue-progressive-image - Vue progressive image loading plugin.\nvue-l-lazyload - A lazyload plugin for Vue.js v2.x+.\nvue-lazyload-img - Especially optimized for mobile browser. support V2 & v1.\nvue-lazy-images - A plugin of lazyload images for Vue 2.x.\nv-lazy-img - Tiny (<0.6kb) directive for progressive image loading for Vue 2.\nvue-clazy-load - Lightweight transitionable image lazy loading component using IntersecionObserver for Vue 2.\nvue-lazy-this - Lazyloading component using Intersection Observer API.\nv2-lazy-list - A simple lazy-load list component based Vue 2.x\npimg - A Simple Progressive Image Component used for lazy loading images.\nvue-tiny-lazyload-img - A small size Vue.js v.2+ directive for lazy loading images\nvue-lazy-youtube-video - A simple Vue.js component for lazy loading YouTube videos.\nlazyload-vue- Vue Plugin for vanilla-lazyload.\n\nPagination\n\nvue-paginate - A simple vue.js plugin to paginate data.\nvue-pagination-2 - Vue.js 2 pagination component.\nvuejs-uib-pagination - Best and complete pagination plugin for Vue.js. Inspired in Angular Bootstrap Pagination.\nvuejs-paginate - A Vue.js(v2.x+) component for creating pagination.\nvue-pagination-bootstrap - A Vue.js (1.x & 2.x) server-side paging component with a template based on Bootstrap\nlaravel-vue-semantic-ui-pagination - A Vue.js 2.x pagination used with Laravel & Semantic-UI.\nvue-paginate-al - Vue paginate with return your data.\nvue-tiny-pagination - A Vue component for create a tiny pagination.\nlaravel-vue-pagination - A Vue.js pagination component for Laravel paginators that works with Bootstrap.\nvue-lpage - Low-level Vue pagination component.\nv-page - A simple pagination bar, including length Menu, i18n support, based on Vue2.x.\nvue-smart-pagination - Smart pagination of any data with a lot of nice settings.\nvue-paginatron - Pagination component built with scoped-slot props for maximum flexibility.\nvue-ads-pagination - A vue pagination component build with the css framework tailwindcss\n\nAnimation\n\nvue2-animate - A Vue.js 2.0 port of Animate.css. For use with Vue's built-in transitions.\nanimated-vue - A Vue.js 2.x plugin to easily use Animate.css animations as transitions. As easy as <animated-tada>!\nvue-lottie - A Vue.js 2.x plugin to render after effects animations based on bodymovin\nVueg - Make vue-router have a transition effect / \u4e3a webApp \u63d0\u4f9b\u8f6c\u573a\u7279\u6548\u7684\u5f00\u6e90 Vue \u63d2\u4ef6\nv-animate-css - The easiest to implement Vue 2 directive for Animate.css\nvue-mixin-tween - Mixin factory that adds tweened values to component context for animations\nv-odometer - Smoothly transitions numbers with ease. Use this library to give your application a smooth animation, only applicable on numbers.\nvue2-transitions \u2728 Reusable Vue 2 transition components\nvue-overdrive Super easy magic-move transitions for Vue apps \ud83c\udfa9\nanimated-number-vue Super easy way to animate numbers.\nvue-typed-js Typed.js integration to easily create typying animations.\nvue-parent-change-transition Enable a child components to animate when it changes the parent.\nvue-smooth-reflow Transition an elements reflow in response to data changes.\nVueTween Allows components to tween their properties.\nvue-slide-up-down Like jQuery's slideUp / slideDown, but for Vue!\nvue-animejs Simple anime.js directives for Vue.\nEagle.js Eagle.js is a web-based slideshow framework for Vue.js.\nvue-pose Pose for Vue is a declarative motion system that combines the simplicity of CSS transitions with the power and flexibility of JavaScript.\nvue-slide-up-down-component It is a simple interface but realizes very flexible and powerful slide animation, for Vue!\nfemtoTween A minimalistic (zero-dep, less than 1k) tweening library with first-class Vue support\nvue-sequential-entrance Plugin for creating elegant sequential animation entrances with a list of elements of your page. Zero effort. Simple and lightweight\nvue-animate-scroll Super lightweight way to add CSS animations to elements as they scroll into view.\nvue-svg-transition Create 2-state, SVG-powered transitions\nvue-page-transition Easy route / page transitions for Vue.js\n\nMeta Tags\nManage meta information in the document head\n\nvue-head - Manage the meta information of the head tag, a simple and easy way.\nvue-meta - Manage page meta info in Vue 2.0 components. SSR + Streaming supported.\nvue-headful - Set document <title> and meta tags from within your views.\nvue-simple-headful - Easily set meta-tags with vue.js - a simpler vue-headful alternative with TypeScript support.\n\nPortal\nMove a DOM node to a target DOM node\n\nvue-dom-portal - An escape hatch for DOM Elements in Vue.js components.\nportal-vue - A Vue Plugin to render your component's template anywhere in the DOM (Works on the virtualDOM level, doesn't move nodes within the DOM)\n\nFilters\n\nvue2-filters - A collection of standard filters Vue 1.* adapted for use in Vue 2.*.\nvue-morphling - A collection of standard and custom filters for Vue 2.\nvue-currency-filter - Lightweight and Customizeable Vue 2 Currency Filter.\nvue-trans - A simple filter to provide a similar way of translating to the Symfony trans.\nvue-string-filter - Lightweight Vue 2 String Manipulation Filter.\nvue-units - A collection of handy unit conversion filters for use in Vue 2.\nvue-numeral-filter - A collection of filters that allows Numeral.js to be used inline in the template section of a component.\nvue-filter-date-format - Simple datetime filter for Vue 2.\nvue-filter-pluralize - Simple pluralize filter for Vue 2.\nvue-filter-date-parse - Simple parsing datetime filter for Vue 2.\n\nSVG\n\nvue-svgicon - A tool to create svg icon components. (vue 2.x).\nvue-content-loading - Vue component to easily build (or use presets) SVG loading cards Facebook like.\nvue-annotator - Annotate page using any SVG Element (rect, polygon, and many more, even HTML Element like canvas if wrapped in foreignObject)\nvue-svg-sprite - A directive to simply use SVG sprite (vue 2.x).\nvue-svg-filler - Vue component for custom your svg file \ud83d\udd8d \ud83c\udfa8 (vue 2.x).\n\nMiscellaneous\n\nvue-resource-progressbar-interceptor - Interceptor that ties a progressbar to all requests, that it is clear that something is loading.\nvue-images-loaded - Vue.js 2.0 directive to detect images loading.\nvue-visible - A v-visible directive for VueJS (2.x), like v-show but for visibility.\nvue-resize-sensor - Component to detect container resizing (event-based)\nv-blur - Vue directive to blur an element dynamically\nvue-async-methods - Helper utilities for promise based methods\nvue-openseadragon - OpenSeaDragon component for Vue.js (zoom and pan)\nvue-match-heights - Directive to set heights of elements to be the same.\nvue-conditional-attrs - A Vue.js component for conditional rendering attributes and directives\nvue-cbsc - A Vue.js 2.x component for programmatically blender, shader and convert colors.\nvue-spatialnavigation - Vue directive (Vue.js 2.x) for spatial navigation (keyboard navigation)\nvue-lifecycle - A Vue.js lifecycle directives.\nvue-aspect-ratio - Aspect ratio directive for vue.\n@kooljay82/vue-m-camera - To avoid changing orientation of photo automatically which taken via camera of user's device.\n\nWebGL\n\nvue-3d-model - A 3D model viewer in Vue component.\nvue-pano - A panorama viewer in Vue component.\nvue-threejs - Vue bindings for Three.js.\nVueGL - Vue.js components rendering 3D graphics reactively via three.js\nvue-vr - A framework for building VR applications with Vue\nbased on threejs and Panolens, inspired by react-vr\nvue-displacement-slideshow - A Vue.js component that makes Webgl image displacement transitions easier.\n\nFullscreen\n\nvue-fullscreen - A simple Vue component for fullscreen.\n\nPage visibility\n\nvue-page-visibility-awesome - A Vue 2.x component of easy-to-config page visibility api.\nvue-authplugin - an elegant view auth control plugin, support directive and prototype methods.\n\nPrinting\n\nvue-html-to-paper - Vue mixin for paper printing html elements to paper.\n\nUtilities\nUtilities not directly related to the UI\n\nvue-underscore - simple vue plugin to implement underscore\nvue-lazy-calc - A simple calculation plugin in lazy && chaining way with strong typed.\n\nTypescript\n\nvue-typed - Sets of ECMAScript / Typescript decorators that helps you write Vue component easily.\nvue-typescript - Typescript decorators to make vue feel more typescripty.\nvue-property-decorator - Vue.js and Property Decorator.\nvue-typescript-component - Decorators to use TypeScript classes as Vue.js 2.0 components.\nvue-typescript-import-dts - TypeScript declaration file that allows using 'import' with .vue files.\nvue-ts-loader - Type-check your script in your vue-loader.\nvue-mixin-decorator - Typescript decorator for strongly typed Mixins.\nvue-ts-component-generator - A simple cli tool for generating vue typescript components.\nvue-local-storage-decorator - Persist data by using local stoarge in decorator format\nvuex-module-decorators - Typescript/ES7 Decorators to make Vuex modules a breeze\nvuex-class-modules - Introduce a simple type-safe class style syntax for your vuex modules, inspired by vue-class-component.\n\nHTTP Requests\nRetrieve data over HTTP\n\nvue-resource - The HTTP client for Vue.js.\nvue-async-computed - Async computed properties for Vue.js.\nvue-jsonp - A tiny library for handling JSONP request.\nv-model - V-Model is a model plugin for Vue.js, like ng-resource.\nvue-resource-mock - A helper to mock your http response, based on vue-resource's interceptor.\nvue-async-data-2 - Async data loading plugin for Vue.js.\nvue-api-request - A plugin that provides full control on your APIs, making your request simple, fast and easy to implement.\nvue-fast-axios - Make requests with validations in a simple and beautiful way.\nvue-async-properties - An asyncData and asyncComputed plugin with support for debouncing, transforming results, error handlers, loading/pending flags, lazy/eager requests.\nvue-axios-plugin - A plugin that combines axios with Vuejs, making http request more easier.\nvuex-api - A vuex plugin for effortlessly handle api calls.\nzipkin-instrumentation-vue-resource - An interceptor for vue-resource that instruments outgoing HTTP requests with Zipkin\nvue-api-query - Elegant and simple way to build requests for REST API.\nvue-chimera - A full-featured RESTful resource based client, compatible with Nuxt.js and allows server side fetch.\nvue-google-api - A wrapper for easy integration of the Google's APIs client in any vue.js 2 project, based on promises, with built-in Oauth2 \"Sign In with Google\" facilities.\nvue-apis - A vue plug-in integrated with axios that chain-builds API instances. Available from the context of a vue instance (eg: this.$apis.apiName()).\n\ni18n\nInternationalization / L10n / localization / translation\n\nvue-i18n - Internationalization plugin for Vue.js.\nvue-translate-plugin - VueJS plugin for translations.\nvuex-i18n - Localization plugin for vue.js 2.0 using vuex as store.\nvue-gettext - Translate your Vue.js applications with gettext.\nvue-i18n - A small plugin for implementing translations in Vue.js.\nvue-multilanguage - Support many languages in Vue.js 2.\nvue-ts-locale - A plugin for implementing translations using Intl in Vue.js 2 with typescript support.\nvue-i18next - A i18next wrapper to support translations in Vue.js 2.\nvue-polyglot - Basic translation plugin for Vue.js 2 with async loading.\nv-localize - Simple localization plugin for\nthe amazing Vue.js.\nvue-simple-i18n - Probably the thinnest library to end all Vue i18n solutions within 1kb\ntemplate-string-i18n - I18n using template strings with auto save/load translate documents.\nvue-translations - Translate your vuejs application easy with it.\nvue-i18n-service -  Export and import @kazupon/vue-i18n's SFC translations simply using npx vue-i18n-service export|import.\nvue-i18n-filter -  Vue filter extend for Vue-i18n, simply using {{ hello world | t }}.\nvue-translation-manager - Interactively find and translate strings in your Vue.js application. Works well with vue-18n and vuex-i18n.\nvue-t9n - Simplest way to translate your applications\nvue-simple-inline-translation - A Vue component that simplifies the way text is translated: by translating it inline.\nvue-i18n-extract - Manage vue-i18n localization with static analysis. Make reports about missing and unused i18n entries.\nvscode-vue-i18n-ally - VSCode extension for better Vue-i18n experiences.\n\nCustom Events\n\nvue-events - Simple event handling for Vue.js.\nvue-event-handler - Event handling plugin for VueJS.\nvue-event-manager - The global event manager for Vue.js.\nvue-geb - A global event bus using Observables.\nvue-bus - Tiny simple central event bus plugin for Vue.js 2.\nvue-simple-events - Yet another event management plugin, but WITHOUT Vue instance\nvue-option-events - Bring Vue.js 1 events option and $emit to Vue.js 2.\n\nPersistence\nLocalStorage etc.\n\nvue-localstorage - Vue.js localStorage plugin with types support.\nvue-ls - Vue plugin for work with LocalStorage from Vue context.\nvue-pouch - Live and reactive bindings for PouchDB. Persist data in IndexedDB and sync with CouchDB.\nvue-idb - Lists and huge lists management with IndexedDB (Dexie.js) only or automatically created and extendible vuex modules\nvuejs-storage - Vue.js and vuex plugin to persistence data with localStorage/sessionStorage.\nvue-browserstore - Browser storage wrapper.\nVueStorage - Allows components to save and load their data across browser sessions.\nvue-web-storage Another Vue.js plugin for localStorage and sessionStorage\nvue-universal-cookies Isomorphic cookies plugin for Vue.js / Nuxt.js supports Browser, Express, http (node).\nvue2-storage Browser storage for Vue.js app\nvue-warehouse A Cross-browser storage for Vue.js and Nuxt.js, with plugins support and easy extensibility based on Store.js.\nvue-storage-watcher - A reactive localStorage/sessionStorage plugin for Vue.js with strong typed.\n\nState Management\n\nvuex - Centralized State Management for Vue.js.\nvue-sync - Synchronize Vue State with the Browser URL, Server Backend, and other endpoints.\nvuelm - Lightweight state management inspired by Elm architecture.\nvuez - A simple but powerful State Management for Vue.js, with only 2 APIs.\nvuet - Vue.js state management model for Agile Development\nvue-ya-stash - Yet Another stash storage with update/patch event emitters simillar with v-bind.sync\nvue-assign-model - Automatically assign elements value to model for Vue.js.\nvue-stash - Easily share reactive data between your Vue components.\nvue-mc - Models and Collections for Vue.js\nvue-model - Model component for Vue.js\ntuex - A mostly reasonable alternative to Vuex.\nrevuejs - A tiny, light and handy state management for vuejs 2, writing less verbose code.\nlue - Vue and vuex based library, writing less verbose code.\nvuex-lite - A 1KB Vuex with just state and mutations.\nVuenut - is a component to develop faster and more fluently.\nvue-shared - A light and simple alternative to vuex\nvuex-module-generator - It allows you to create a vuex module easily.\nvuex-declaration - Declare state like props, make state inject to vuex dynamically when component created.\nvuex-up - Brings mixing and services injector features to module vuex.\neffector \u2014 Fast and powerful reactive state manager. Effector lets you write simple, fast and type safe code and manage reactive state with ease.\nnano-state-vue - Efficient, effective, and extensible state management: less is more\n\nRedux\n\nvuedeux - Binding Solutions for Vue & Redux.\n\nredux-store-mixin - Mixin for integrate action creators in methods of vue-component\nvue-redux-prepare-props - Helper for use props of Redux with Vue.js using Vuex and Vuedeux\n\n\nvuejs-redux - High order component facilities for Vue and Redux.\nvuex-coolstory - Plugin for vuex to run redux-saga.\n\nMobx\n\nmovue - Mobx integration for Vue.js.\nvue-mobx - Mobx binding for Vuejs 2.x.\n\nAuthentication/Authorization\n\nvue-kindergarten\nvue-authenticate - Simple Vue.js authentication library for login/register and OAuth (1.0/2.0) authentication\nvue-facebook-account-kit - Simple vue wrapper to the fb account kit library.\ncasl-vue - Restricts what resources a given user is allowed to access\nvue-google-api - A wrapper for easy integration of the Google's APIs client in any vue.js 2 project, based on promises, with built-in Oauth2 \"Sign In with Google\" facilities.\nvue-auth - A simple light-weight authentication library for Vue.js\nvue-auth-plugin - A simple authentication and authorization library for Vue.js using typescript\nvue-google-signin-button - A simple Vue plugin to include a Google sign-in button into your web app\nvue-facebook-signin-button - A simple plugin to include a custom Facebook sign-in button into your web app\nvue-auth-href - A VueJS directive for downloading files that are under a protected route schema\n\nVuex Utilities\n\nvuex-persistedstate - Persist Vuex state with localStorage.\nvuex-plugin-jsdata - A plugin for syncing Vuex store with js-data.\nvuex-local - Local state management within Vuex.\nvuex-action - Utilities for vuex to easily create and manage actions.\nvuex-rest-api - A Helper utility to simplify the usage of REST APIs with Vuex. Based on axios.\nvuex-cache - A Vuex plugin utility to cache action those will make remote request.\nvuex-persist - A Typescript-ready Vuex plugin to help save the store to localStorage or any custom Storage (that you can configure).\nvuex-local-state - Add 'localState/sessionState' options to vuex. Keep the Vuex state with localStorage.\nvuex-cli-scaffold - Scaffold vuex actions, mutations, getters and the state.\nvuex-action-reload - A vuex plugin that reloads actions when a condition is met.\nvuejs-storage - Vue.js and vuex plugin to persistence data with localStorage/sessionStorage.\nvuex-orm - The Vuex plugin to enable Object-Relational Mapping access to the Vuex Store.\nvuex-async-module - Reduce async boilerplate code generating Vuex modules. Compatible with Vue 2.x.\nvuex-api - A vuex plugin for effortlessly handle api calls.\nvuex-queries - Vuex-Queries helps you write query functions in Vuex\nvuex-microservice - Define microservice URLs at a dedicated place and use them inside your Vuex actions.\nvuex-iframe-sync - Vuex state synchronization between iframe/window.\nvuex-aspect - Bind remote data of any kind to the vuex store.\nVuenut - is a component to develop faster and more fluently.\nvuex-map-fields - Enable two-way data binding for form fields.\nvuex-search - Vuex binding for client-side search with indexers and Web Workers.\nvuex-dry - helps keep your vuex codes DRY.\nvuex-pathify - provides a unified path syntax to Vuex stores (such as foo/bar@a.b.c)\nvuex-loading - Simplify vuex loading state management\nvuex-module-builder - Vuex module builder is a wrapper for writing vuex stores efficiently with some common methods built-in.\nvuex-pagination - Easily work with paginated resources in your Vue/Vuex application. Works well with most of the Vue pagination components.\nvuex-easy-firestore - Easy coupling of Firebase Cloud Firestore and Vuex. 2-way sync with 0 boilerplate!\nvuex-listener - A global Vuex action and mutation listener plugin\njsonapi-vuex - Use a JSONAPI api with a Vuex store, with client-side restructuring/normalization of records.\n\nSync Between Tabs\n\nvuex-basement - Vuex state persistence and synchronization between tabs/windows.\nvuex-shared-mutations - Share vuex mutations between tabs/windows.\n\nGraphQL\n\nvue-apollo - Apollo/GraphQL integration for VueJS.\nvue-relay - A framework for building GraphQL-driven Vue.js applications.\nvuex-orm-apollo - Apollo/GraphQL integration for Vuex-ORM.\n\nConcurrency Management\n\nvuency - Concurrency management for Vue.js.\n\nCode Style\nImprove readability of code\n\nvue-types - Vue Prop Types definitions.\nvue-factory - A simple factory/provider extension for Vue.js, like services in Angular.\neslint-plugin-vue - Eslint plugin for Vue.js projects.\nvue-decorators - Decorators for Vue.js (beta).\nvue-computed-helpers - Computed helpers for Vue.js apps\nvert - Library to build Vue applications in OOP.\nvue-slot-checker - Provide the function to check slot like checking props.\n\nCSS\n\nvue-bem-cn - Simple BEM class name generator for Vue.JS.\nvue-css - Vue.js plugin that allows you to bundle CSS with your components.\nvue-mods-names - Adding modificators to class names for all components in app.\nvue-styler - Simple, performant styler for vue.\nvue-css-modules - Seamless mapping of class names to CSS Modules inside of Vue components.\nvue-simple-bem - Directive with succint syntax for adding BEM class names to elements.\nfela-vue - CSS-IN-JS mixin for Vue designed for flexibility yet team-oriented.\nj-vue\n\nAsset Management\nUtilities for building / compiling / bundling / loading assets\n\nvue-script2 - Standardized, designer-friendly script tag behavior for your Single Page App.\nvue-loader - Webpack loader for Vue.js components.\nvueify - Browserify transform for single-file Vue components.\nvue-compiler - A simple cli wrapper around the vue-component-compiler.\nvue-brunch - Adds support to Brunch for pre-compiling single file Vue components.\npoi - Start writing an app with a single .js file, Poi could handle all the development setups for you, no more configuration hell.\nhttp-vue-loader - Load .vue files directly from your html/js without node.js environment nor build step.\nvue-jsx-hot-loader - Enable HMR for Vue.js components with JSX render functions.\nVueInBrowserLoader - Loads a .vue file from the given URL and compiles it to a component directly in the browser.\nvue-separate-files-webpack-loader - Webpack loader for separated Vue components parts\nvue-svg-loader - webpack loader that lets you use SVG files as Vue components\nvue-registrar - \u2618\ufe0f A package that dynamically registers your components and vuex modules - Makes your code a lot readable!\n\nPage Navigation\n\nvue-navigation - A page navigation library, record routes and cache pages, like native app navigation. \u4e00\u4e2a\u9875\u9762\u5bfc\u822a\u5e93\uff0c\u8bb0\u5f55\u8def\u7531\u5e76\u7f13\u5b58\u9875\u9762\uff0c\u50cf\u539f\u751fAPP\u5bfc\u822a\u4e00\u6837\u3002\nvue-acl - Access Control List for VueJS 2.\nvue-breadcrumbs - Implements simple breadcrumb functionality with vue-router for both Vue 1.x and Vue 2.x.\nvue-2-breadcrumbs - breadcrumb together with vue-router for Vue 2.x. and Bootstrap 4\nvs-crumbs - Vue breadcrumbs in 40 lines of code that allows nested paths without child views.\nvue-nav - Page navigation manager, support all navigation function of native mobile app. \u9875\u9762\u5bfc\u822a\u7ba1\u7406\u5668\uff0c\u652f\u6301\u624b\u673a\u539f\u751f\u5e94\u7528\u7684\u6240\u6709\u5bfc\u822a\u529f\u80fd\u3002\nvue-2-crumbs - Breadcrumbs plugin for Vue.js 2 framework that allows to select parent route in route meta object with no need of sub-routing. Also allows using dynamic data.\nvue-pesdk Vue.js wrapper for the PhotoEditorSDK\nvue-resolve\nResolve routes data before entering / rendering the component for that route.\nvue-page-stack - Routing and navigation for your Vue SPA. Vue \u5355\u9875\u5e94\u7528\u5bfc\u822a\u7ba1\u7406\u5668\n\nMiscellaneous\n\nvue-container - A simple dependency injection library for Vue 2.\nvue-super - A simple plugin to call methods on parent components.\n@skyrpex/props-to-local - Vue mixin that maps props to local data.\nvue-inject - Dependency injection for Vue 2.x Components\nvue-deepset - Interact with deeply nested fields in Vue/Vuex objects/state with v-model in Vue 1.x and 2.x\nvue-gaspard - DOM helpers plugin for Vue.js\nvue-configuration - A static configuration object for Vue.js\nvue-lodash - A simple wrapper for integrating lodash to Vue 2.\nvue-ramda - Vue Wrapper for ramda\nvue-router-user-roles - Protects routes based on user roles. Add your own authentication.\nvue-messenger - A series of useful enhancements to Vue component props: Transform, Enum-type, Numeric-type, Two-way data bindings.\nvue-uuid-v4 - Plugin Vue2 to easy get UUIDv4\nvue-async-operations - Managing async operations statuses in your Vue components\nvue-direction - \ud83d\udc4b Direction aware hover in Vuejs\nvue-unique-id - Generates unique component ids and component-scoped HTML ids.\nstfalcon-vue-di - \u2b50\ufe0f  Lightweight DI for vue components\ufe0f \u2764\ufe0f\n\nWeb Workers\n\nvue-worker - A Vue.js plugin to use webworkers in a simply way.\nvue-log-worker - A Vue.js plugin to log error and vuex mutations to your backend through a web worker\n\nJSX\n\njsx-vue-functional - A Babel plugin that brings syntactic sugar for Vue functional components.\njsx-event-modifiers - A Babel plugin that adds event modifiers similar to Vue templates to JSX.\njsx-v-model - A Babel plugin that brings v-model to JSX.\nvue-jsx-sync - A Babel plugin that brings vue sync modifier to JSX.\n\nMigration\n\nvue-backbone - Vue.js Plugin to facilitate Backbone integration.\n\nWeb Sockets\n\nvue-socket.io - Socket.io implementation for vuejs.\nvue-websocket - Simple websocket (socket.io) plugin for Vue.js.\nvue-echo - Integrates Laravel Echo into Vue, allows for easy registration of socket events.\nvue-socket-cluster - Web Sockets for vue with uws(Micro web sockets) through socket cluster\nvue-native-websocket - Native websocket implementation for Vuejs 2 and Vuex\nvue-socket.io-extended - Socket.io bindings for Vue.js and Vuex\nvue-phoenix - Elixir Phoenix Web Socket implmentation for vuejs. Also provides typescript decorator for better use.\n\nPayment\nPayment utilities.\nStripe\n\nvue-stripe-checkout A simple vue plugin for Stripe checkout.\nvue-stripe-payment Vue wrapper for jquery.payment by Stripe.\n\nPaypal\n\nvue-paypal-checkout A simple Vue.js wrapper component for paypal-checkout.\n\nPlaid\n\nvue-plaid-link Easy to use Vue component for Plaid Link.\n\nIntegrations\nIntegrate with services or other frameworks\n\nvue-disqus - Vue component to integrate Disqus comments in your application, with support for SPA.\nvue-youtube-embed - Vue.js and YouTube.\nvue-add-to-calendar - A Vue.js component that provides \"Add to Calendar\" functionality, works with Vue 2.X.\nVue + Meteor - Vue first-class integration in Meteor.\nav-ts - A modern, type-safe, idiomatic Vue binding library.\nNeutronium - Build .NET desktop applications using HTML, CSS and javascript.\nvue-typescript-jest - Jest preprocessor.js for Vue.js components (supporting html, pug, and babel) and TypeScript.\nvue-jest-utils - Utilities for testing Vue.js components using Jest.\nvue-custom-element - Vue Custom Element - Custom Elements for Vue.js.\nvue-cordova - Vue.js plugin for Cordova.\nvue-wamp - AutobahnJS wrapper library fo Vue.js.\nexpress-vue - Vue rendering engine for Express.js. Use .Vue files as templates using res.render().\nvue-grecaptcha - Google reCAPTCHA for VueJS 2\nvue-recaptcha - Google reCAPTCHA component for Vue.js\nrequire-vuejs - RequireJS plugin to async and dynamic load and parse .vue components.\nfacebook-login-vuejs - Vue Component for Authenticating your Facebook App and get the benefits of Facebook Login.\nvuejs/vuefire - Official Firebase Integration for VueJS\nvuefire - Firebase for VueJS and Vuex\nvue-runkit - RunKit Embed for Vue.js\nvue-youtube - Provides a simple layer for you to use your imagination while over the YouTube IFrame Player API. (Compatible with SSR)\nvue-introjs - Integrates intro.js step-by-step guide and feature introduction with Vue.js http://introjs.com/.\nvue-loopback - Loopback and Vue application template\nvue-laroute - Integrate Laravel routes into your VueJS application using laroute.\nvue-raven - Automatically reports uncaught JavaScript exceptions triggered from vue component.\nvue-telegram-login - Vue Component for Telegram Login by @vchaptsev\nvuexpress - Vue + Express.js = VueXpress / A server side rendering engine for Express.js. Use .vue files as your express.js templates.\nvue-fixer - A simple vue component for the fixer API.\namazon-cognito-vuex-module - Vuex module for Amazon Cognito.\nvue-web3 - Web3 blockchain bindings for Vue.js (inspired by Vuefire and Drizzle)\nsbt-vuefy - Vue.js integration for Playframework\nloopback-vue-starter - LoopBack and Vue starter template with easy plugin management through vue-cli and vue ui.\nvue.py - Write Vue.js Components in Python\nvue-telegram-passport - Vue Component for Telegram Passport by @vchaptsev\nvue-facebook-login-component - A fully customizable component for integrating Facebook login.\nvue-programmatic-invisible-google-recaptcha - A simple invisible Google reCAPTCHA component focused solely on programmatic invocation.\nvbuild - Its main purpose is to let you use components (.vue files) in your vuejs app, without a full nodejs stack. Since 0.6 versions : you can create your component in pure python !\nfeathers-vuex - is a first class integration of the Feathers Client and Vuex. It implements many Redux best practices under the hood, eliminates a lot of boilerplate code, and still allows you to easily customize the Vuex store.\nvue-nocaptcha - Aliyun noCAPTCHA component for Vue.js\nionic-vue - Vue.js integration for Ionic v4\nvue-0xcert - Vue.js integration for 0xcert Framework - an open-source library that provides tools for building powerful decentralized applications\nvue-zdog Vue wrapper for zDog - a minimalist 3D engine for the browser\n\nVue CLI 3 Plugins\n\nvue-cli-plugin-cordova - Vue CLI 3 Plugin to add Cordova easily to your project\nvue-cli-plugin-component - Vue CLI 3 Plugin to create component\nvue-cli-plugin-modular-vuex - Vue CLI 3 Plugin to create modular Vuex store files\nvue-cli-plugin-modular-router - Vue CLI Plugin to create modular route files\nvue-cli-plugin-docker-nginx - Vue CLI Plugin to add a docker deployment using a minimal nginx server\nvue-cli-plugin-element - Vue CLI 3 Plugin to build an enterprise application with element-ui in seconds\nvue-cli-plugin-electron-builder - Vue CLI 3 Plugin for Electron with no required configuration that uses Electron Builder.\n\nGoogle Analytics\n\nvue-ua - Google Universal Analytics support in Vue.js.\nvue-analytics - Vue plugin for Google Analytics.\nvue-gtm - Vue plugin for Google Tag Manager\n\nYandex Metrika\n\nvue-ya-metrica - Vue plugin for Yandex.Metrica\nvue-yandex-metrika - Vue plugin for Yandex Metrika with router integration, plugin options by @vchaptsev\n\nDev Tools\n\nvue-dev-server - A small development server for building vue components.\nvuepack.org - A simple page that allows you to select Vue components and download them as a single minified JS file.\nStorybook - The UI Development Environment. works with v3.2+ later.\nFont Awesome Finder - Chrome extension to search, preview and choose Font Awesome icons and copy the selected icon HTML code & Unicode to clipboard.\nvue-dummy - Placeholder Text and Dummy Images as a simple v-dummy directive.\nBit - Manage and reuse vue components between projects. Easily isolate and share components from any project without changing its source code, organize curated collections and install in different projects.\nVuenut - is a component to develop faster and more fluently.\nComponentFixture - is a component design to develop and test other components, automatically binding their props.\nvue-cli-template-dev-server - A development server for building vue-cli custom templates.\n\nInspect\nInspecting & debugging\n\nVue.js devtools - Chrome devtools extension for debugging Vue.js applications.\nDejaVue - Visualization and debugging tool built for Vue.js.\nvue-clicky - Right click any component to show info about it in the console.\nvuejs-logger - Provides customizable logging functionality for Vue.js.\nbugsnag-vue - Official Vue.js plugin for bugsnag error reporting\nvue-inspector - Vue.js Inspector for Mobile Devices\nVue Performance Devtool - Vue Performance Devtool is a browser extension for inspecting the performance of Vue Components\nVueSource - Global Vue mixin which identifies components in source code by adding HTML comments\nNW-Vue-DevTools - DevDependency for adding Vue DevTools into NW.js\nbruit-io - Collect feedbacks with screenshot and technical data and post them to an API like bruit.io.\n\nDocs\nCreate documentation\n\nvue-markdown-loader - Convert Markdown file to Vue Component.\nvue-play - A minimalistic framework for demonstrating your Vue components.\nvue-styleguide-generator - React inspired style guide generator for Vue.js.\nCheatSheet - Complete Interactive API.\nVuex CheatSheet - Complete Interactive Vuex API.\nvue-styleguidist - A style guide generator for Vue components with a living style guide.\nvue-elucidate - A component that generates beautiful documentation for your living styleguide / design system.\nvue-md-loader - Markdown files to ALIVE Vue components.\n@vuedoc/parser - Generate a JSON documentation for a Vue file component.\n@vuedoc/md - Generate a Markdown Documentation for a Vue file.\njsdoc-vue-component - A jsodc3 plugin that extract vue SFC info(name, props, events...) to document.\njsdoc-vuedoc - A jsdoc3 plugin use @vuedoc/md.\nvue-storybook \u2013  Add <story> blocks to your Vue single file components for tighter integration of Vue + Storybook\nvue-patterns - Useful Vue patterns, techniques, tips and tricks and helpful curated links.\nvuese - One-stop solution for vue component documentation.\n\nTest\n\nvue-container - A simple dependency injection library for Vue 2.\nvuenit - Utilities for testing Vue components and directives.\nvue-unit - A library for Vue.js that makes it easier to create and unit test components.\nvue-a2b - A library for Split Testing with Vue.js. Highly configurable and tiny (1.2k gzipped).\nvue-test-utils - Official utilities for testing Vue components.\nvue-test-actions - Unit testing Vuex actions with Jest mocks.\njest-vue-matcher - Additional jest matchers for vue\nvue-hubble - A better way to select elements for UI testing in Vue.\nVue Testing Library - Simple and complete testing utilities that encourage good testing practices. Based on DOM Testing Library and built upon the official Vue Test Utils.\n\nBrowser-less require\nLoad Vue components without browser\n\nvuegister - Vuegister (a portmanteau of vue & register) is a require hook for loading of the Vue.js single-file components (or .vue files).\nvue-node - Load vue components in node.\n\nSource Code Editing\nText editor plugins\nAtom\n\nlanguage-vue@atom.io - Vue component file syntax for Atom.\nlanguage-vue-component@atom.io - Adds syntax highlighting to Vue Component files in Atom.\nvue-snippets@atom.io - Atom snippets for Vue component files.\nvue-autocompile@atom.io - Auto compile vue file on save.\nlint-sass-vue@atom.io - Atom.io package to lint Sass/SCSS in .vue files.\nvuejs2-snippets@atom.io - Atom snippets for javascript and components, including lifecycle hooks, directives, properties, vuex, vue-router, vue-i18n support.\nvue2-autocomplete@atom.io - Vue.js 2.0+ autocomplete for Atom.\n\nSublime Text\n\nVue Syntax Highlight - Sublime Text syntax highlighting for single-file Vue components.\nVUEFormatter - Sublime Text code format\nvuejs-sublime-complete - Sublime Text code complete\nVue Next Formatter - Sublime Text Vue formatter, Supported ES5/6/7, Less/Sass and Pug/Html template.\n\nVim\n\nVim Vue - Syntax Highlight for Vue.js components.\nvim-vue-plugin - Vim syntax and indent plugin for .vue files.\n\nVisual Studio Code\n\nVetur - Vue tooling for VSCode.\n\nVisual Studio\n\nVuePack - Contains HTML Intellisense and code snippets for the Vue.js JavaScript library.\n\nBrackets\n\nBrackets Vue - Brackets extension for Vue.js.\n\nIntellij\n\nVue.js support for WebStorm, IntelliJ IDEA, PhpStorm, PyCharm & RubyMine \u2013 official Vue.js support by JetBrains\n\nEmacs\n\nVue Mode - Emacs major mode for vue.js.\n\nKate\n\nKate Syntax Files - Syntax files (modified or original) for katepart (kate, kwrite, kdevelop).\n\nScaffold\nScaffold / boilerplate / seed / starter kits / stack ensemble / Yeoman generator\n\nvue-cli - Simple CLI for scaffolding Vue.js projects.\nVue-Django - A boilerplate to set you up in bringing the awesomeness of VueJS into a Django (Python) app.\npython-vuejs - Gluing Python web frameworks and Vue.js with a set of scripts. Basically a vue-cli wrapper.\ngenerator-vue-plugin - Yeoman generator generating vue plugin.\nvue-seed - vue-seed is minimal seed for those looking to get up-and-running with Vue\nnuxt-seed - nuxt-seed is minimal seed for those looking to get up-and-running with Vue and Nuxt\nrails_vue_melt - Rails view with webpack=vue optimizer.\nvue-starter - A Vue.js starter kit that lets you focus on more programming and less configuration.\nvue-standalone-component - A standalone component generator with documentation support using jsdoc and vue-styleguidist\nvuejs-wordpress-theme-starter - A WordPress theme with the guts ripped out and replaced with Vue\nCordovue - A sample Apache Cordova application using Vue.\nCookiecutter-Django-Vue - Django+VueJS+Docker customizable project generator with a large number of settings/integrations by @vchaptsev\niBiu   A visual CLI for scaffolding large Vue projects in 2 seconds.\nwp-vue - A simple Vue blog template that displays posts from a WordPress REST API endpoint.\nvue-cli-template-nativescript - Template for starting new nativescript+vue projects with rollup+babel+eslint\nvue-element-ui-scaffold - Online and visual Vue 2 with Element-UI CRUD scaffold/generator.\nvue-firebase-element-ui-scaffold - Online and visual Vue 2, Element-UI and Firebase scaffold/generator with CRUDs, authentication, file/image upload, activity log and more.\nvuesion - The most complete boilerplate for production-ready PWAs. With focus on performance, development speed, and best practices\nvue-vuex-typescript-webpack-seed - A seed project with Vue, Vuex, Typescript, Scss & Webpack with hot reloading\nVueCharged Template - A highly opinionated, feature-first Vue 2 template with CLI scaffolding. Uses Vue 2, Vuex, Vue Router and Vue I18n.\nHuncwot - Vue.js boilerplate with Node.js for building modern JavaScript applications with \u00ab batteries included \u00bb approach.\nwemake-vue-template - Bleeding edge vue template focused on code quality and developer happiness. Featuring: nuxt, flow, and jest.\nvue-lib-template - \ud83d\udee0 A simple template for building and publishing Vue component/library as a opensource.\nAwesome Vue Boilerplate - \ud83d\ude0d Awesome Vue, \ud83e\udd70 Vuex, Vuex-pathify, element-ui, tailwindcss\nScaffoldHub.io - Generate full Vue applications with SQL, MongoDB or Firebase Firestore databases.\nVuePlay - Generate disposable Vue playgrounds in seconds. Allows you to test things quickly.\nMevn-CLI - Light speed setup for MEVN stack based apps.\nvue-cli-template-registry - A solution for installing vue-cli custom templates hosted on private/enterprise repositories.\nvue-enterprise-boilerplate -  An ever-evolving, very opinionated architecture and dev environment for new Vue SPA projects using Vue CLI 3.\n\nClient\nRender Vue application in the browser only\n\nVue Plugin Boilerplate - Boilerplate for Vue.js plugin.\nBourgeon - Bourgeon is an opinionated-featured VueJS 2.0 setup for Webpack.\nVuePack - A modern starter which uses Vue 2, Vuex, Vue-router and Webpack 2 (and even Electron).\nVue Settler - An opinionated Vue 2.0 SPA Starter.\nvue-build - Ultra Simple, Development, Testing and Production Build Cli.\nVue Element Starter - Robust Vue 2 starter with Element-UI.\nvue-multiple-pages - A modern Vue.js multiple pages starter which uses Vue 2, Webpack2, and Element-UI\nvue-typescript-boilerplate - A Vue.js typescript SPA starter with Vue 2, Vue Typed, Vuex, Vue Router and localization\nvue-tachyons-template - A Vue 2 project starter template w/ Tachyons, Webpack, and ESLint\nVuets - A Vue, TypeScript ready boilerplate using class-style components, vue plugin options, webpack & vue-cli.\nMMF-FE/vue-typescript - A vue2.x typescript template.\nFriendly Vue Starter - A full featured Vue.js starter project with GraphQL support via Apollo-client (Vuex, Vue-router, Vue-i18n, Webpack 3, Eslint, Prettier, ...)\nvue-webpack-typescript - A Vue 2.2 Webpack 2 and Typescript 2 setup with hot reload, unit testing, code coverage, sass and bundling/minification.\nvue-ts-amd - A full-featured Vue.js 2 boilerplate using AMD pattern (RequireJS) and Typescript.\nvue-2-boilerplate - Vue 2 boilerplate for developing medium to large single page applications by petervmeijgaard\nlayout - A full-featured Webpack + Vue Extend layout\nlayout-simple - A simple Webpack + Vue Extend layout\nvue-cli-template-library - Template for developing open-source vue.js libraries with Rollup + Jest + Babel + Storybook + TravisCI + SemanticRelease.\nvue-cli-template-github-pages - A full-featured Webpack + vue-loader setup for Github Pages Deployment with travisCI.\nvue-webpack-chrome-extension-template - Template for quick creation of Chrome extension on Vuejs hot reloading when developing.\nbuildless-vue - Quickly use Vue without a build step.\nvue-component-template - Webpack setup for building & publishing a Vue component/library (with docs/demo site).\nvue-auth-boilerplate - Vue SPA boilerplate with Router/Vuex/CLI3 and auth functions (cool looking register and login). Works with minimal setup out of the box with laravel-api-boilerplate-jwt.\nvue-atomic-design - Vue front-end boilerplate based on atomic design methodology.\n\nUniversal\nRender Vue application to HTML on the server and to the DOM in the browser\n\nSPA Starter Kit - A highly opinionated starter kit for building Single Page Applications with Laravel and Vue.js.\nSSR Boilerplate - Vue.js Server Side Rendering Boilerplate without Polluting Vuex.\nneutrino-preset-vue-static - A minimalistic starter kit for building static sites using Vue.js.\nVueniverse - A fully featured, universal Vue template for user-based applications, powered by Nuxt.js and Express.\nvue-preload - A plugin Vue for adding <link rel=\"preload\" capabilities\nVue.js/Nuxt.js full featured boilerplate professional agency frontend template for building fast, robust, and adaptable web apps or sites by vuejs/nuxtjs.\n\nServer\nIncludes a backend boilerplate\n\nVuetober - Single page apps with Laravel, Vue.js, and October CMS.\nToucan - Boilerplate for building single page apps. Server is multi-project .Net Core solution designed around SOLID principles. Client is TypeScript 2, Vuejs 2, Vuex 2.\nvue-server-demo - Writing koa server in Vue.\nvue-apollo-connector-kit - JWT authentication with 2 different strategies (localStorage and httpOnly cookies). Authorization using custom directives (apollo).\nDotVue - Implement .vue file handler in .NET with server ViewModel postback. Single-file components with server-side ViewModel. Use all power of VueJS with simple C# server side data access.\nisomor-vue-app - Setup a working environment with Vue and isomor, to unify the frontend and the backend by generating automatically the API.\n\nElectron\n\nElectron Vue - An Electron & Vue.js quick start boilerplate with vue-cli scaffolding, common Vue plugins, electron-packager/electron-builder, unit/e2e testing, vue-devtools, and webpack.\nVuePack - A modern starter which uses Vue 2, Vuex, Vue-router and Webpack 2 (and even Electron).\nvue-flexible-link - Tiny Vue component for Electron to open links in a browser. Ideal for cross environment apps (Web & Native)\nvuelectron - electronjs starter kits for vue.\nvue-design - the best website visualization builder with Vue and Electron.\nvue-cli-plugin-electron-builder - A Vue Cli 3 plugin for Electron with no required configuration that uses Electron Builder and Electron Webpack.\ndapp - Boilerplate for stack of Vue/Parcel/Electron.\nvue-electron-template - An Electron & Vue.js boilerplate with Hot-reloading enabled and common Vue plugins, dev and build scripts configured using webpack-4\n\nParts\nScaffold parts of the app\n\nvue-generator - A CLI generator for Vue components, views and store modules.\nvue-component-generator - A generator for vue component, supports Vue1.X and Vue2.X.\nrapydml_cmp - Vue-component pythonic generator, built on top of RapydML & RapydScript.\nvue-authoring-template - Template for authoring also publishing Vue component and their use case in story-scenario (storybook) format in easy way.\nvue-component-boilerplate - Template for generating the boilerplate code for a VueJS components, with build scripts and testing pre-installed.\nvue-generate-component-typescript - A typescript code generator for vue, it can generate components, directives, filters.\n\nRuntime\nCommand Line / Terminal\n\nblessed-vue - A VueJS runtime to let you write command line UI in Vue Edit\n\nPrerendering\n\nreact-snap - A zero-configuration static pre-renderer for SPA\nprerender-plugin - A Node.js/ webpack plugin to prerender static HTML in a single-page application (SPA).\nvue-prerender - A Vue.js tailored plugin which implements three strategies for prerendering Vue.js pages using headless chrome.\nRendora - dynamic SSR (server-side rendering) using headless Chrome to effortlessly solve the SEO problem for modern javascript websites\n\n\n\n\n\n\n"}, {"repo": "atom/atom", "language": "JavaScript", "readme": "\nAtom\n\n\n\nAtom is a hackable text editor for the 21st century, built on Electron, and based on everything we love about our favorite editors. We designed it to be deeply customizable, but still approachable using the default configuration.\n\n\nVisit atom.io to learn more or visit the Atom forum.\nFollow @AtomEditor on Twitter for important\nannouncements.\nThis project adheres to the Contributor Covenant code of conduct.\nBy participating, you are expected to uphold this code. Please report unacceptable behavior to atom@github.com.\nDocumentation\nIf you want to read about using Atom or developing packages in Atom, the Atom Flight Manual is free and available online. You can find the source to the manual in atom/flight-manual.atom.io.\nThe API reference for developing packages is also documented on Atom.io.\nInstalling\nPrerequisites\n\nGit\n\nmacOS\nDownload the latest Atom release.\nAtom will automatically update when a new release is available.\nWindows\nDownload the latest Atom installer. AtomSetup.exe is 32-bit. For 64-bit systems, download AtomSetup-x64.exe.\nAtom will automatically update when a new release is available.\nYou can also download atom-windows.zip (32-bit) or atom-x64-windows.zip (64-bit) from the releases page.\nThe .zip version will not automatically update.\nUsing Chocolatey? Run cinst Atom to install the latest version of Atom.\nLinux\nAtom is only available for 64-bit Linux systems.\nConfigure your distribution's package manager to install and update Atom by following the Linux installation instructions in the Flight Manual.  You will also find instructions on how to install Atom's official Linux packages without using a package repository, though you will not get automatic updates after installing Atom this way.\nArchive extraction\nAn archive is available for people who don't want to install atom as root.\nThis version enables you to install multiple Atom versions in parallel. It has been built on Ubuntu 64-bit,\nbut should be compatible with other Linux distributions.\n\nInstall dependencies (on Ubuntu): sudo apt install git gconf2 gconf-service libgtk2.0-0 libudev1 libgcrypt20 libnotify4 libxtst6 libnss3 python gvfs-bin xdg-utils libcap2\nDownload atom-amd64.tar.gz from the Atom releases page.\nRun tar xf atom-amd64.tar.gz in the directory where you want to extract the Atom folder.\nLaunch Atom using the installed atom command from the newly extracted directory.\n\nThe Linux version does not currently automatically update so you will need to\nrepeat these steps to upgrade to future releases.\nBuilding\n\nLinux\nmacOS\nWindows\n\nDiscussion\n\nDiscuss Atom on our forums\nChat about Atom on our Slack team -- instructions for joining\n\nLicense\nMIT\nWhen using the Atom or other GitHub logos, be sure to follow the GitHub logo guidelines.\n\n"}, {"repo": "avelino/awesome-go", "language": "Go", "readme": "\nAwesome Go\n   \n financial support to Awesome Go\nA curated list of awesome Go frameworks, libraries and software. Inspired by awesome-python.\nContributing\nPlease take a quick gander at the contribution guidelines first. Thanks to all contributors; you rock!\nIf you see a package or project here that is no longer maintained or is not a good fit, please submit a pull request to improve this file. Thank you!\nContents\n\n\nAwesome Go\n\nAudio and Music\nAuthentication and OAuth\nBot Building\nCommand Line\nConfiguration\nContinuous Integration\nCSS Preprocessors\nData Structures\nDatabase\nDatabase Drivers\nDate and Time\nDistributed Systems\nEmail\nEmbeddable Scripting Languages\nError Handling\nFiles\nFinancial\nForms\nFunctional\nGame Development\nGeneration and Generics\nGeographic\nGo Compilers\nGoroutines\nGUI\nHardware\nImages\nIoT\nJob Scheduler\nJSON\nLogging\nMachine Learning\nMessaging\nMicrosoft Office\n\nMicrosoft Excel\n\n\nMiscellaneous\n\nDependency Injection\nProject Layout\nStrings\n\n\nNatural Language Processing\nNetworking\n\nHTTP Clients\n\n\nOpenGL\nORM\nPackage Management\nPerformance\nQuery Language\nResource Embedding\nScience and Data Analysis\nSecurity\nSerialization\nServer Applications\nStream Processing\nTemplate Engines\nTesting\nText Processing\nThird-party APIs\nUtilities\nUUID\nValidation\nVersion Control\nVideo\nWeb Frameworks\n\nMiddlewares\n\nActual middlewares\nLibraries for creating HTTP middlewares\n\n\nRouters\n\n\nWindows\nXML\n\n\n\nTools\n\nCode Analysis\nEditor Plugins\nGo Generate Tools\nGo Tools\nSoftware Packages\n\nDevOps Tools\nOther Software\n\n\n\n\n\nResources\n\nBenchmarks\nConferences\nE-Books\nGophers\nMeetups\nTwitter\nWebsites\n\nTutorials\n\n\n\n\n\nAudio and Music\nLibraries for manipulating audio.\n\nEasyMIDI - EasyMidi is a simple and reliable library for working with standard midi file (SMF).\nflac - Native Go FLAC encoder/decoder with support for FLAC streams.\ngaad - Native Go AAC bitstream parser.\ngo-sox - libsox bindings for go.\ngo_mediainfo - libmediainfo bindings for go.\ngosamplerate - libsamplerate bindings for go.\nid3v2 - Fast and stable ID3 parsing and writing library for Go.\nmalgo - Mini audio library.\nminimp3 - Lightweight MP3 decoder library.\nmix - Sequence-based Go-native audio mixer for music apps.\nmp3 - Native Go MP3 decoder.\nmusic-theory - Music theory models in Go.\nOto - A low-level library to play sound on multiple platforms.\nPortAudio - Go bindings for the PortAudio audio I/O library.\nportmidi - Go bindings for PortMidi.\ntaglib - Go bindings for taglib.\nvorbis - \"Native\" Go Vorbis decoder (uses CGO, but has no dependencies).\nwaveform - Go package capable of generating waveform images from audio streams.\n\nAuthentication and OAuth\nLibraries for implementing authentications schemes.\n\nauthboss - Modular authentication system for the web. It tries to remove as much boilerplate and \"hard things\" as possible so that each time you start a new web project in Go, you can plug it in, configure, and start building your app without having to build an authentication system each time.\nbranca - Golang implementation of Branca Tokens.\ncasbin - Authorization library that supports access control models like ACL, RBAC, ABAC.\ncookiestxt - provides parser of cookies.txt file format.\ngo-jose - Fairly complete implementation of the JOSE working group's JSON Web Token, JSON Web Signatures, and JSON Web Encryption specs.\ngo-oauth2-server - Standalone, specification-compliant,  OAuth2 server written in Golang.\ngologin - chainable handlers for login with OAuth1 and OAuth2 authentication providers.\ngorbac - provides a lightweight role-based access control (RBAC) implementation in Golang.\ngoth - provides a simple, clean, and idiomatic way to use OAuth and OAuth2. Handles multiple providers out of the box.\nhttpauth - HTTP Authentication middleware.\njeff - Simple, flexible, secure and idiomatic web session management with pluggable backends.\njwt - Clean and easy to use implementation of JSON Web Tokens (JWT).\njwt - Lightweight JSON Web Token (JWT) library.\njwt-auth - JWT middleware for Golang http servers with many configuration options.\njwt-go - Golang implementation of JSON Web Tokens (JWT).\nloginsrv - JWT login microservice with plugable backends such as OAuth2 (Github), htpasswd, osiam.\noauth2 - Successor of goauth2. Generic OAuth 2.0 package that comes with JWT, Google APIs, Compute Engine and App Engine support.\nosin - Golang OAuth2 server library.\npaseto - Golang implementation of Platform-Agnostic Security Tokens (PASETO).\npermissions2 - Library for keeping track of users, login states and permissions. Uses secure cookies and bcrypt.\nrbac - Minimalistic RBAC package for Go applications.\nscope - Easily Manage OAuth2 Scopes In Go.\nscs - Session Manager for HTTP servers.\nsecurecookie - Efficient secure cookie encoding/decoding.\nsession - Go session management for web servers (including support for Google App Engine - GAE).\nsessiongate-go - Go session management using the SessionGate Redis module.\nsessions - Dead simple, highly performant, highly customizable sessions service for go http servers.\nsessionup - Simple, yet effective HTTP session management and identification package.\nsignedvalue - Signed and timestamped strings compatible with Tornado's create_signed_value, decode_signed_value, and therefore set_secure_cookie and get_secure_cookie.\nsjwt - Simple jwt generator and parser.\n\nBot Building\nLibraries for building and working with bots.\n\ngo-chat-bot - IRC, Slack & Telegram bot written in Go.\ngo-sarah - Framework to build bot for desired chat services including LINE, Slack, Gitter and more.\ngo-tgbot - Pure Golang Telegram Bot API wrapper, generated from swagger file, session-based router and middleware.\nGolang CryptoTrading Bot - A golang implementation of a console-based trading bot for cryptocurrency exchanges.\ngovkbot - Simple Go VK bot library.\nhanu - Framework for writing Slack bots.\nKelp - official trading and market-making bot for the Stellar DEX. Works out-of-the-box, written in Golang, compatible with centralized exchanges and custom trading strategies.\nmargelet - Framework for building Telegram bots.\nmicha - Go Library for Telegram bot api.\nslacker - Easy to use framework to create Slack bots.\nslackscot - Another framework for building Slack bots.\ntbot - Telegram bot server with API similar to net/http.\ntelebot - Telegram bot framework written in Go.\ntelegram-bot-api - Simple and clean Telegram bot client.\nTenyks - Service oriented IRC bot using Redis and JSON for messaging.\n\nCommand Line\nStandard CLI\nLibraries for building standard or basic Command Line applications.\n\n1build - Command line tool to frictionlessly manage project-specific commands.\nargparse - Command line argument parser inspired by Python's argparse module.\nargv - Go library to split command line string as arguments array using the bash syntax.\ncli - Feature-rich and easy to use command-line package based on golang struct tags.\ncli - Simple and complete API for building command line interfaces in Go.\ncli-init - The easy way to start building Golang command line applications.\nclimax - Alternative CLI with \"human face\", in spirit of Go command.\ncl\u00eer - A Simple and Clear CLI library. Dependency free.\ncmd - Extends the standard flag package to support sub commands and more in idomatic way.\ncmdr - A POSIX/GNU style, getopt-like command-line UI Go library.\ncobra - Commander for modern Go CLI interactions.\ncommandeer - Dev-friendly CLI apps: sets up flags, defaults, and usage based on struct fields and tags.\ncomplete - Write bash completions in Go + Go command bash completion.\nDnote - A simple and end-to-end encrypted notebook for developers.\ndocopt.go - Command-line arguments parser that will make you smile.\nenv - Tag-based environment configuration for structs.\nflag - Simple but powerful command line option parsing library for Go supporting subcommand.\nflaggy - A robust and idiomatic flags package with excellent subcommand support.\nflagvar - A collection of flag argument types for Go's standard flag package.\ngo-arg - Struct-based argument parsing in Go.\ngo-commander - Go library to simplify CLI workflow.\ngo-flags - go command line option parser.\ngo-getoptions - Go option parser inspired on the flexibility of Perl\u2019s GetOpt::Long.\ngocmd - Go library for building command line applications.\nhiboot cli - cli application framework with auto configuration and dependency injection.\njob - JOB, make your short-term command as a long-term job.\nkingpin - Command line and flag parser supporting sub commands.\nliner - Go readline-like library for command-line interfaces.\nmitchellh/cli - Go library for implementing command-line interfaces.\nmow.cli - Go library for building CLI applications with sophisticated flag and argument parsing and validation.\nops - Unikernel Builder/Orchestrator.\npflag - Drop-in replacement for Go's flag package, implementing POSIX/GNU-style --flags.\nreadline - Pure golang implementation that provides most features in GNU-Readline under MIT license.\nsand - Simple API for creating interpreters and so much more.\nsflags - Struct based flags generator for flag, urfave/cli, pflag, cobra, kingpin and other libraries.\nstrumt - Library to create prompt chain.\nts - Timestamp convert & compare tool.\nukautz/clif - Small command line interface framework.\nurfave/cli - Simple, fast, and fun package for building command line apps in Go (formerly codegangsta/cli).\nwlog - Simple logging interface that supports cross-platform color and concurrency.\nwmenu - Easy to use menu structure for cli applications that prompts users to make choices.\n\nAdvanced Console UIs\nLibraries for building Console Applications and Console User Interfaces.\n\nasciigraph - Go package to make lightweight ASCII line graph \u256d\u2508\u256f in command line apps with no other dependencies.\naurora - ANSI terminal colors that supports fmt.Printf/Sprintf.\ncfmt - Contextual fmt inspired by bootstrap color classes.\nchalk - Intuitive package for prettifying terminal/console output.\ncolourize - Go library for ANSI colour text in terminals.\nctc - The non-invasive cross-platform terminal color library does not need to modify the Print method.\ngo-ataman - Go library for rendering ANSI colored text templates in terminals.\ngo-colorable - Colorable writer for windows.\ngo-colortext - Go library for color output in terminals.\ngo-isatty - isatty for golang.\ngo-prompt - Library for building a powerful interactive prompt, inspired by python-prompt-toolkit.\ngocui - Minimalist Go library aimed at creating Console User Interfaces.\ngommon/color - Style terminal text.\ngookit/color - Terminal color rendering tool library, support 16 colors, 256 colors, RGB color rendering output, compatible with Windows.\nmpb - Multi progress bar for terminal applications.\nprogressbar - Basic thread-safe progress bar that works in every OS.\nsimpletable - Simple tables in terminal with Go.\ntabby - A tiny library for super simple Golang tables.\ntabular - Print ASCII tables from command line utilities without the need to pass large sets of data to the API.\ntermbox-go - Termbox is a library for creating cross-platform text-based interfaces.\ntermdash - Go terminal dashboard based on termbox-go and inspired by termui.\ntermui - Go terminal dashboard based on termbox-go and inspired by blessed-contrib.\nuilive - Library for updating terminal output in realtime.\nuiprogress - Flexible library to render progress bars in terminal applications.\nuitable - Library to improve readability in terminal apps using tabular data.\n\nConfiguration\nLibraries for configuration parsing.\n\nconfig - A lightweight yet powerful config package for Go projects.\nconfig - Cloud native application configuration. Bind ENV to structs in only two lines.\nconfig - JSON or YAML configuration wrapper with environment variables and flags parsing.\nconfigure - Provides configuration through multiple sources, including JSON, flags and environment variables.\nconfita - Load configuration in cascade from multiple backends into a struct.\nconflate - Library/tool to merge multiple JSON/YAML/TOML files from arbitrary URLs, validation against a JSON schema, and application of default values defined in the schema.\nenv - Parse environment variables to Go structs (with defaults).\nenvcfg - Un-marshaling environment variables to Go structs.\nenvconf - Configuration from environment.\nenvconfig - Read your configuration from environment variables.\nenvh - Helpers to manage environment variables.\ngcfg - read INI-style configuration files into Go structs; supports user-defined types and subsections.\ngenv - Read environment variables easily with dotenv support.\ngo-up - A simple configuration library with recursive placeholders resolution and no magic.\ngoConfig - Parses a struct as input and populates the fields of this struct with parameters from command line, environment variables and configuration file.\ngodotenv - Go port of Ruby's dotenv library (Loads environment variables from .env).\ngofigure - Go application configuration made easy.\ngone/jconf - Modular JSON configuration. Keep you config structs along with the code they configure and delegate parsing to submodules without sacrificing full config serialization.\ngookit/config - application config manage(load,get,set). support JSON, YAML, TOML, INI, HCL. multi file load, data override merge.\nharvester - Harvester, a easy to use static and dynamic configuration package supportig seeding, env vars and Consul integration.\nhjson - Human JSON, a configuration file format for humans. Relaxed syntax, fewer mistakes, more comments.\ningo - Flags persisted in an ini-like config file.\nini - Go package to read and write INI files.\njoshbetz/config - Small configuration library for Go that parses environment variables, JSON files, and reloads automatically on SIGHUP.\nkelseyhightower/envconfig - Go library for managing configuration data from environment variables.\nkoanf - Light weight, extensible library for reading config in Go applications. Built in support for JSON, TOML, YAML, env, command line.\nkonfig - Composable, observable and performant config handling for Go for the distributed processing era.\nmini - Golang package for parsing ini-style configuration files.\nnasermirzaei89/env - Simple useful package for read environment variables.\nonion - Layer based configuration for Go, Supports JSON, TOML, YAML, properties, etcd, env, and encryption using PGP.\nsprbox - Build-environment aware toolbox factory and agnostic config parser (YAML, TOML, JSON and Environment vars).\nstore - Lightweight configuration manager for Go.\nviper - Go configuration with fangs.\nxdg - Cross platform package that follows the XDG Standard.\n\nContinuous Integration\nTools for help with continuous integration.\n\nCDS - Enterprise-Grade CI/CD and DevOps Automation Open Source Platform.\ndrone - Drone is a Continuous Integration platform built on Docker, written in Go.\nduci - A simple ci server no needs domain specific languages.\ngomason - Test, Build, Sign, and Publish your go binaries from a clean workspace.\ngoveralls - Go integration for Coveralls.io continuous code coverage tracking system.\noveralls - Multi-Package go project coverprofile for tools like goveralls.\nroveralls - Recursive coverage testing tool.\n\nCSS Preprocessors\nLibraries for preprocessing CSS files.\n\ngcss - Pure Go CSS Preprocessor.\ngo-libsass - Go wrapper to the 100% Sass compatible libsass project.\n\nData Structures\nGeneric datastructures and algorithms in Go.\n\nalgorithms - Algorithms and data structures.CLRS study.\nbinpacker - Binary packer and unpacker helps user build custom binary stream.\nbit - Golang set data structure with bonus bit-twiddling functions.\nbitset - Go package implementing bitsets.\nbloom - Bloom filters implemented in Go.\nbloom - Golang Bloom filter implementation.\nboomfilters - Probabilistic data structures for processing continuous, unbounded streams.\nconcurrent-writer - Highly concurrent drop-in replacement for bufio.Writer.\nconjungo - A small, powerful and flexible merge library.\ncount-min-log - Go implementation Count-Min-Log sketch: Approximately counting with approximate counters (Like Count-Min sketch but using less memory).\ncrunch - Go package implementing buffers for handling various datatypes easily.\ncuckoofilter - Cuckoo filter: a good alternative to a counting bloom filter implemented in Go.\ndeque - A highly optimized double-ended queue.\ndeque - Fast ring-buffer deque (double-ended queue).\ndict - Python-like dictionaries (dict) for Go.\nencoding - Integer Compression Libraries for Go.\ngo-adaptive-radix-tree - Go implementation of Adaptive Radix Tree.\ngo-datastructures - Collection of useful, performant, and thread-safe data structures.\ngo-ef - A Go implementation of the Elias-Fano encoding.\ngo-geoindex - In-memory geo index.\ngo-mcache - Fast in-memory key:value store/cache library. Pointer caches.\ngo-rquad - Region quadtrees with efficient point location and neighbour finding.\ngocache - A complete Go cache library with mutiple stores (memory, memcache, redis, ...), chainable, loadable, metrics cache and more.\ngoconcurrentqueue - Concurrent FIFO queue.\ngods - Go Data Structures. Containers, Sets, Lists, Stacks, Maps, BidiMaps, Trees, HashSet etc.\ngofal - fractional api for Go.\ngolang-set - Thread-Safe and Non-Thread-Safe high-performance sets for Go.\ngoset - A useful Set collection implementation for Go.\ngoskiplist - Skip list implementation in Go.\ngota - Implementation of dataframes, series, and data wrangling methods for Go.\nhide - ID type with marshalling to/from hash to prevent sending IDs to clients.\nhilbert - Go package for mapping values to and from space-filling curves, such as Hilbert and Peano curves.\nhyperloglog - HyperLogLog implementation with Sparse, LogLog-Beta bias correction and TailCut space reduction.\nlevenshtein - Levenshtein distance and similarity metrics with customizable edit costs and Winkler-like bonus for common prefix.\nlevenshtein - Implementation to calculate levenshtein distance in Go.\nmafsa - MA-FSA implementation with Minimal Perfect Hashing.\nmerkletree - Implementation of a merkle tree providing an efficient and secure verification of the contents of data structures.\nmspm - Multi-String Pattern Matching Algorithm for information retrieval.\nnull - Nullable Go types that can be marshalled/unmarshalled to/from JSON.\nparsefields - Tools for parse JSON-like logs for collecting unique fields and events.\npipeline - An implementation of pipelines with fan-in and fan-out.\nptrie - An implementation of prefix tree.\nremember-go - A universal interface for caching slow database queries (backed by redis, memcached, ristretto, or in-memory).\nring - Go implementation of a high performance, thread safe bloom filter.\nroaring - Go package implementing compressed bitsets.\nset - Simple set data structure implementation in Go using LinkedHashMap.\nskiplist - Very fast Go Skiplist implementation.\nskiplist - Skiplist implementation in Go.\ntimedmap - Map with expiring key-value pairs.\ntreap - Persistent, fast ordered map using tree heaps.\ntrie - Trie implementation in Go.\nttlcache - In-memory LRU string-interface{} map with expiration for golang.\ntyp - Null Types, Safe primitive type conversion and fetching value from complex structures.\nwillf/bloom - Go package implementing Bloom filters.\n\nDatabase\nDatabases implemented in Go.\n\nbadger - Fast key-value store in Go.\nbcache - Eventually consistent distributed in-memory  cache Go library.\nBigCache - Efficient key/value cache for gigabytes of data.\nBitcask - Bitcask is an embeddable, persistent and fast key-value (KV) database written in pure Go with predictable read/write performance, low latency and high throughput thanks to the bitcask on-disk layout (LSM+WAL).\nbolt - Low-level key/value database for Go.\nbuntdb - Fast, embeddable, in-memory key/value database for Go with custom indexing and spatial support.\ncache - In-memory key:value store with expiration time, 0 dependencies, <100 LoC, 100% coverage.\ncache2go - In-memory key:value cache which supports automatic invalidation based on timeouts.\nclusteredBigCache - BigCache with clustering support and individual item expiration.\ncockroach - Scalable, Geo-Replicated, Transactional Datastore.\nCoffer - Simple ACID key-value database that supports transactions.\ncouchcache - RESTful caching micro-service backed by Couchbase server.\nCovenantSQL - CovenantSQL is a SQL database on blockchain.\ndgraph - Scalable, Distributed, Low Latency, High Throughput Graph Database.\ndiskv - Home-grown disk-backed key-value store.\neliasdb - Dependency-free, transactional graph database with REST API, phrase search and SQL-like query language.\nfastcache - fast thread-safe inmemory cache for big number of entries. Minimizes GC overhead.\nGCache - Cache library with support for expirable Cache, LFU, LRU and ARC.\ngo-cache - In-memory key:value store/cache (similar to Memcached) library for Go, suitable for single-machine applications.\ngoleveldb - Implementation of the LevelDB key/value database in Go.\ngorocksdb - Gorocksdb is a wrapper for RocksDB written in Go.\ngroupcache - Groupcache is a caching and cache-filling library, intended as a replacement for memcached in many cases.\ninfluxdb - Scalable datastore for metrics, events, and real-time analytics.\nKivik - Kivik provides a common Go and GopherJS client library for CouchDB, PouchDB, and similar databases.\nledisdb - Ledisdb is a high performance NoSQL like Redis based on LevelDB.\nlevigo - Levigo is a Go wrapper for LevelDB.\nmoss - Moss is a simple LSM key-value storage engine written in 100% Go.\nnutsdb - Nutsdb is a simple, fast, embeddable, persistent key/value store written in pure Go. It supports fully serializable transactions and many data structures such as  list, set, sorted set.\npiladb - Lightweight RESTful database engine based on stack data structures.\nprometheus - Monitoring system and time series database.\npudge - Fast and simple  key/value store written using Go's standard library.\nrqlite - The lightweight, distributed, relational database built on SQLite.\nScribble - Tiny flat file JSON store.\nslowpoke - Key-value store with persistence.\ntempdb - Key-value store for temporary items.\ntidb - TiDB is a distributed SQL database. Inspired by the design of Google F1.\ntiedot - Your NoSQL database powered by Golang.\nVasto - A distributed high-performance key-value store. On Disk. Eventual consistent. HA. Able to grow or shrink without service interruption.\nVictoriaMetrics - fast, resource-effective and scalable open source time series database. May be used as long-term remote storage for Prometheus. Supports PromQL.\n\nDatabase schema migration.\n\navro - Discover SQL schemas and convert them to AVRO schemas. Query SQL records into AVRO bytes.\ndarwin - Database schema evolution library for Go.\ngo-fixtures - Django style fixtures for Golang's excellent built-in database/sql library.\ngo-pg-migrations - A Go package to help write migrations with go-pg/pg.\ngondolier - Database migration library using struct decorators.\ngoose - Database migration tool. You can manage your database's evolution by creating incremental SQL or Go scripts.\ngormigrate - Database schema migration helper for Gorm ORM.\nmigrate - Database migrations. CLI and Golang library.\nmigrator - Dead simple Go database migration library.\npravasan - Simple Migration tool - currently for MySQL but planning to soon support Postgres, SQLite, MongoDB, etc.\nschema - Library to embed schema migrations for database/sql-compatible databases inside your Go binaries.\nskeema - Pure-SQL schema management system for MySQL, with support for sharding and external online schema change tools.\nsoda - Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite.\nsql-migrate - Database migration tool. Allows embedding migrations into the application using go-bindata.\n\nDatabase tools.\n\nbucket - Optimized data structure framework for Couchbase specialized on one bucket usage.\nchproxy - HTTP proxy for ClickHouse database.\nclickhouse-bulk - Collects small insterts and sends big requests to ClickHouse servers.\ndatagen - A fast data generator that's multi-table aware and supports multi-row DML.\ndbbench - Database benchmarking tool with support for several databases and scripts.\ngo-mysql - Go toolset to handle MySQL protocol and replication.\ngo-mysql-elasticsearch - Sync your MySQL data into Elasticsearch automatically.\nkingshard - kingshard is a high performance proxy for MySQL powered by Golang.\nmyreplication - MySql binary log replication listener. Supports statement and row based replication.\noctillery - Go package for sharding databases ( Supports every ORM or raw SQL ).\norchestrator - MySQL replication topology manager & visualizer.\npgweb - Web-based PostgreSQL database browser.\nprep - Use prepared SQL statements without changing your code.\npREST - Serve a RESTful API from any PostgreSQL database.\nrwdb - rwdb provides read replica capability for multiple database servers setup.\nvitess - vitess provides servers and tools which facilitate scaling of MySQL databases for large scale web services.\n\nSQL query builder, libraries for building and using SQL.\n\ndbq - Zero boilerplate database operations for Go.\nDotsql - Go library that helps you keep sql files in one place and use them with ease.\ngendry - Non-invasive SQL builder and powerful data binder.\ngodbal - Database Abstraction Layer (dbal) for go. Support SQL builder and get result easily.\ngoqu - Idiomatic SQL builder and query library.\nigor - Abstraction layer for PostgreSQL that supports advanced functionality and uses gorm-like syntax.\njet - Framework for writing type-safe SQL queries in Go, with ability to easily convert database query result into desired arbitrary object structure.\normlite - Lightweight package containing some ORM-like features and helpers for sqlite databases.\nozzo-dbx - Powerful data retrieval methods as well as DB-agnostic query building capabilities.\nqry - Tool that generates constants from files with raw SQL queries.\nscaneo - Generate Go code to convert database rows into arbitrary structs.\nsqlf - Fast SQL query builder.\nsqrl - SQL query builder, fork of Squirrel with improved performance.\nSqualus - Thin layer over the Go SQL package that makes it easier to perform queries.\nSquirrel - Go library that helps you build SQL queries.\nxo - Generate idiomatic Go code for databases based on existing schema definitions or custom queries supporting PostgreSQL, MySQL, SQLite, Oracle, and Microsoft SQL Server.\n\nDatabase Drivers\nLibraries for connecting and operating databases.\n\n\nRelational Databases\n\navatica - Apache Avatica/Phoenix SQL driver for database/sql.\nbgc - Datastore Connectivity for BigQuery for go.\nfirebirdsql - Firebird RDBMS SQL driver for Go.\ngo-adodb - Microsoft ActiveX Object DataBase driver for go that uses database/sql.\ngo-mssqldb - Microsoft MSSQL driver for Go.\ngo-oci8 - Oracle driver for go that uses database/sql.\ngo-sql-driver/mysql - MySQL driver for Go.\ngo-sqlite3 - SQLite3 driver for go that uses database/sql.\ngofreetds - Microsoft MSSQL driver. Go wrapper over FreeTDS.\ngoracle - Oracle driver for Go, using the ODPI-C driver.\npgx - PostgreSQL driver supporting features beyond those exposed by database/sql.\npq - Pure Go Postgres driver for database/sql.\n\n\n\nNoSQL Databases\n\naerospike-client-go - Aerospike client in Go language.\narangolite - Lightweight golang driver for ArangoDB.\nasc - Datastore Connectivity for Aerospike for go.\ndynago - Dynago is a principle of least surprise client for DynamoDB.\nforestdb - Go bindings for ForestDB.\ngo-couchbase - Couchbase client in Go.\ngo-pilosa - Go client library for Pilosa.\ngo-rejson - Golang client for redislabs' ReJSON module using Redigo golang client. Store and manipulate structs as JSON objects in redis with ease.\ngocb - Official Couchbase Go SDK.\ngocql - Go language driver for Apache Cassandra.\ngodis - redis client implement by golang, inspired by jedis.\ngodscache - A wrapper for the Google Cloud Platform Go Datastore package that adds caching using memcached.\ngomemcache - memcache client library for the Go programming language.\ngorethink - Go language driver for RethinkDB.\ngoriak - Go language driver for Riak KV.\nmgo - (unmaintained) MongoDB driver for the Go language that implements a rich and well tested selection of features under a very simple API following standard Go idioms.\nmongo-go-driver - Official MongoDB driver for the Go language.\nneo4j - Neo4j Rest API Bindings for Golang.\nNeo4j-GO - Neo4j REST Client in golang.\nneoism - Neo4j client for Golang.\nredeo - Redis-protocol compatible TCP servers/services.\nredigo - Redigo is a Go client for the Redis database.\nredis - Redis client for Golang.\nxredis - Typesafe, customizable, clean & easy to use Redis client.\n\n\n\nSearch and Analytic Databases.\n\nbleve - Modern text indexing library for go.\nelastic - Elasticsearch client for Go.\nelasticsql - Convert sql to elasticsearch dsl in Go.\nelastigo - Elasticsearch client library.\ngo-elasticsearch - Official Elasticsearch client for Go.\ngoes - Library to interact with Elasticsearch.\nriot - Go Open Source, Distributed, Simple and efficient Search Engine.\nskizze - probabilistic data-structures service and storage.\n\n\n\nMultiple Backends.\n\ncachego - Golang Cache component for multiple drivers.\ncayley - Graph database with support for multiple backends.\ndsc - Datastore connectivity for SQL, NoSQL, structured files.\ngokv - Simple key-value store abstraction and implementations for Go (Redis, Consul, etcd, bbolt, BadgerDB, LevelDB, Memcached, DynamoDB, S3, PostgreSQL, MongoDB, CockroachDB and many more).\n\n\n\nDate and Time\nLibraries for working with dates and times.\n\ncarbon - Simple Time extension with a lot of util methods, ported from PHP Carbon library.\ncronrange - Parses Cron-style time range expressions, checks if the given time is within any ranges.\ndate - Augments Time for working with dates, date ranges, time spans, periods, and time-of-day.\ndateparse - Parse date's without knowing format in advance.\ndurafmt - Time duration formatting library for Go.\nfeiertage - Set of functions to calculate public holidays in Germany, incl. specialization on the states of Germany (Bundesl\u00e4nder). Things like Easter, Pentecost, Thanksgiving...\ngo-persian-calendar - The implementation of the Persian (Solar Hijri) Calendar in Go (golang).\ngo-sunrise - Calculate the sunrise and sunset times for a given location.\ngo-week - An efficient package to work with ISO8601 week dates.\niso8601 - Efficiently parse ISO8601 date-times without regex.\nkair - Date and Time - Golang Formatting Library.\nnow - Now is a time toolkit for golang.\nNullTime - Nullable time.Time.\nstrftime - C99-compatible strftime formatter.\ntimespan - For interacting with intervals of time, defined as a start time and a duration.\ntimeutil - Useful extensions (Timedelta, Strftime, ...) to the golang's time package.\ntuesday - Ruby-compatible Strftime function.\n\nDistributed Systems\nPackages that help with building Distributed Systems.\n\nceleriac - Library for adding support for interacting and monitoring Celery workers, tasks and events in Go.\nconsistent - Consistent hashing with bounded loads.\ndht - BitTorrent Kademlia DHT implementation.\ndigota - grpc ecommerce microservice.\ndot - distributed sync using operational transformation/OT.\ndoublejump - A revamped Google's jump consistent hash.\ndragonboat - A feature complete and high performance multi-group Raft library in Go.\ndrmaa - Job submission library for cluster schedulers based on the DRMAA standard.\ndynamolock - DynamoDB-backed distributed locking implementation.\ndynatomic - A library for using DynamoDB as an atomic counter.\nemitter-io - High performance, distributed, secure and low latency publish-subscribe platform built with MQTT, Websockets and love.\nflowgraph - flow-based programming package.\ngleam - Fast and scalable distributed map/reduce system written in pure Go and Luajit, combining Go's high concurrency with Luajit's high performance, runs standalone or distributed.\nglow - Easy-to-Use scalable distributed big data processing, Map-Reduce, DAG execution, all in pure Go.\ngo-health - Library for enabling asynchronous dependency health checks in your service.\ngo-jump - Port of Google's \"Jump\" Consistent Hash function.\ngo-kit - Microservice toolkit with support for service discovery, load balancing, pluggable transports, request tracking, etc.\ngo-sundheit - A library built to provide support for defining async service health checks for golang services.\ngorpc - Simple, fast and scalable RPC library for high load.\ngrpc-go - The Go language implementation of gRPC. HTTP/2 based RPC.\nhprose - Very newbility RPC Library, support 25+ languages now.\njsonrpc - The jsonrpc package helps implement of JSON-RPC 2.0.\njsonrpc - JSON-RPC 2.0 HTTP client implementation.\nKrakenD - Ultra performant API Gateway framework with middlewares.\nliftbridge - Lightweight, fault-tolerant message streams for NATS.\nmicro - Pluggable microservice toolkit and distributed systems platform.\nNATS - Lightweight, high performance messaging system for microservices, IoT, and cloud native systems.\noutboxer - Outboxer is a go library that implements the outbox pattern.\npglock - PostgreSQL-backed distributed locking implementation.\nraft - Golang implementation of the Raft consensus protocol, by HashiCorp.\nraft - Go implementation of the Raft consensus protocol, by CoreOS.\nrain - BitTorrent client and library.\nredis-lock - Simplified distributed locking implementation using Redis.\nresgate - Realtime API Gateway for building REST, real time, and RPC APIs, where all clients are synchronized seamlessly.\nringpop-go - Scalable, fault-tolerant application-layer sharding for Go applications.\nrpcx - Distributed pluggable RPC service framework like alibaba Dubbo.\nsleuth - Library for master-less p2p auto-discovery and RPC between HTTP services (using ZeroMQ).\ntendermint - High-performance middleware for transforming a state machine written in any programming language into a Byzantine Fault Tolerant replicated state machine using the Tendermint consensus and blockchain protocols.\ntorrent - BitTorrent client package.\n\nEmail\nLibraries and tools that implement email creation and sending.\n\nchasquid - SMTP server written in Go.\ndouceur - CSS inliner for your HTML emails.\nemail - A robust and flexible email library for Go.\ngo-dkim - DKIM library, to sign & verify email.\ngo-imap - IMAP library for clients and servers.\ngo-message - Streaming library for the Internet Message Format and mail messages.\ngo-premailer - Inline styling for HTML mail in Go.\ngo-simple-mail - Very simple package to send emails with SMTP Keep Alive and two timeouts: Connect and Send.\nHectane - Lightweight SMTP client providing an HTTP API.\nhermes - Golang package that generates clean, responsive HTML e-mails.\nmailchain - Send encrypted emails to blockchain addresses written in Go.\nmailgun-go - Go library for sending mail with the Mailgun API.\nMailHog - Email and SMTP testing with web and API interface.\nSendGrid - SendGrid's Go library for sending email.\nsmtp - SMTP server protocol state machine.\n\nEmbeddable Scripting Languages\nEmbedding other languages inside your go code.\n\nanko - Scriptable interpreter written in Go.\nbinder - Go to Lua binding library, based on gopher-lua.\ncel-go - Fast, portable, non-Turing complete expression evaluation with gradual typing.\nexpr - an engine that can evaluate expressions.\ngentee - Embeddable scripting programming language.\ngisp - Simple LISP in Go.\ngo-duktape - Duktape JavaScript engine bindings for Go.\ngo-lua - Port of the Lua 5.2 VM to pure Go.\ngo-php - PHP bindings for Go.\ngo-python - naive go bindings to the CPython C-API.\ngolua - Go bindings for Lua C API.\ngopher-lua - Lua 5.1 VM and compiler written in Go.\ngval - A highly customizable expression language written in Go.\nngaro - Embeddable Ngaro VM implementation enabling scripting in Retro.\notto - JavaScript interpreter written in Go.\npurl - Perl 5.18.2 embedded in Go.\ntengo - Bytecode compiled script language for Go.\n\nError Handling\nLibraries for handling errors.\n\nemperror - Error handling tools and best practices for Go libraries and applications.\nerrlog - Hackable package that determines responsible source code for an error (and some other fast-debugging features). Pluggable to any logger in-place.\nerrors - Drop-in replacement for the standard library errors package and github.com/pkg/errors. Provides various error handling primitives.\nerrors - Package that provides simple error handling primitives.\nerrors - Simple golang error handling with classification primitives.\nerrorx - A feature rich error package with stack traces, composition of errors and more.\nFalcon - A Simple Yet Highly Powerful Package For Error Handling.\ngo-multierror - Go (golang) package for representing a list of errors as a single error.\ntracerr - Golang errors with stack trace and source fragments.\nwerr - Error Wrapper creates an wrapper for the error type in Go which captures the File, Line and Stack of where it was called.\n\nFiles\nLibraries for handling files and file systems.\n\nafero - FileSystem Abstraction System for Go.\nafs - Abstract File Storage (mem, scp, zip, tar, cloud: s3, gs) for Go.\nbigfile - A file transfer system, support to manage files with http api, rpc call and ftp client.\nchecksum - Compute message digest, like MD5 and SHA256, for large files.\nflop - File operations library which aims to mirror feature parity with GNU cp.\ngo-csv-tag - Load csv file using tag.\ngo-decent-copy - Copy files for humans.\ngo-exiftool - Go bindings for ExifTool, the well-known library used to extract as much metadata as possible (EXIF, IPTC, ...) from files (pictures, PDF, office, ...).\ngo-gtfs - Load gtfs files in go.\nnotify - File system event notification library with simple API, similar to os/signal.\nopc - Load Open Packaging Conventions (OPC) files for Go.\nparquet - Read and write parquet files.\npdfcpu - PDF processor.\nskywalker - Package to allow one to concurrently go through a filesystem with ease.\nstl - Modules to read and write STL (stereolithography) files.  Concurrent algorithm for reading.\ntarfs - Implementation of the FileSystem interface for tar files.\nvfs - A pluggable, extensible, and opinionated set of filesystem functionality for Go across a number of filesystem types such as os, S3, and GCS.\n\nFinancial\nPackages for accounting and finance.\n\naccounting - money and currency formatting for golang.\ncurrency - High performant & accurate currency computation package.\ndecimal - Arbitrary-precision fixed-point decimal numbers.\ngo-finance - Comprehensive financial markets data in Go.\ngo-finance - Library of financial functions for time value of money (annuities), cash flow, interest rate conversions, bonds and depreciation calculations.\ngo-finance - Module to fetch exchange rates, check VAT numbers via VIES and check IBAN bank account numbers.\ngo-money - Implementation of Fowler's Money pattern.\nofxgo - Query OFX servers and/or parse the responses (with example command-line client).\norderbook - Matching Engine for Limit Order Book in Golang.\ntechan - Technical analysis library with advanced market analysis and trading strategies.\ntransaction - Embedded transactional database of accounts, running in multithreaded mode.\nvat - VAT number validation & EU VAT rates.\n\nForms\nLibraries for working with forms.\n\nbind - Bind form data to any Go values.\nbinding - Binds form and JSON data from net/http Request to struct.\nconform - Keeps user input in check. Trims, sanitizes & scrubs data based on struct tags.\nform - Decodes url.Values into Go value(s) and Encodes Go value(s) into url.Values. Dual Array and Full map support.\nformam - decode form's values into a struct.\nforms - Framework-agnostic library for parsing and validating form/JSON data which supports multipart forms and files.\ngorilla/csrf - CSRF protection for Go web applications & services.\nnosurf - CSRF protection middleware for Go.\n\nFunctional\nPackages to support functional programming in Go.\n\nfpGo - Monad, Functional Programming features for Golang.\nfuego - Functional Experiment in Go.\ngo-underscore - Useful collection of helpfully functional Go collection utilities.\n\nGame Development\nAwesome game development libraries.\n\nAzul3D - 3D game engine written in Go.\nEbiten - dead simple 2D game library in Go.\nengo - Engo is an open-source 2D game engine written in Go. It follows the Entity-Component-System paradigm.\ng3n - Go 3D Game Engine.\nGarageEngine - 2d game engine written in Go working on OpenGL.\nglop - Glop (Game Library Of Power) is a fairly simple cross-platform game library.\ngo-astar - Go implementation of the A* path finding algorithm.\ngo-collada - Go package for working with the Collada file format.\ngo-sdl2 - Go bindings for the Simple DirectMedia Layer.\ngo3d - Performance oriented 2D/3D math package for Go.\ngonet - Game server skeleton implemented with golang.\ngoworld - Scalable game server engine, featuring space-entity framework and hot-swapping.\nLeaf - Lightweight game server framework.\nnano - Lightweight, facility, high performance golang based game server framework.\nOak - Pure Go game engine.\nPitaya - Scalable game server framework with clustering support and client libraries for iOS, Android, Unity and others through the C SDK.\nPixel - Hand-crafted 2D game library in Go.\nraylib-go - Go bindings for raylib, a simple and easy-to-use library to learn videogames programming.\ntermloop - Terminal-based game engine for Go, built on top of Termbox.\n\nGeneration and Generics\nTools to enhance the language with features like generics via code generation.\n\nefaceconv - Code generation tool for high performance conversion from interface{} to immutable type without allocations.\ngen - Code generation tool for \u2018generics\u2019-like functionality.\ngeneris - Code generation tool providing generics, free-form macros, conditional compilation and HTML templating.\ngo-enum - Code generation for enums from code comments.\ngo-linq - .NET LINQ-like query methods for Go.\ngo-xray - Helpers for making the use of reflection easier.\ngoderive - Derives functions from input types.\ngotype - Golang source code parsing, usage like reflect package.\nGoWrap - Generate decorators for Go interfaces using simple templates.\ninterfaces - Command line tool for generating interface definitions.\njennifer - Generate arbitrary Go code without templates.\npkgreflect - Go preprocessor for package scoped reflection.\n\nGeographic\nGeographic tools and servers\n\ngeocache - In-memory cache that is suitable for geolocation based applications.\ngeoserver - geoserver Is a Go Package For Manipulating a GeoServer Instance via the GeoServer REST API.\ngismanager - Publish Your GIS Data(Vector Data) to PostGIS and Geoserver.\nosm - Library for reading, writing and working with OpenStreetMap data and APIs.\npbf - OpenStreetMap PBF golang encoder/decoder.\nS2 geometry - S2 geometry library in Go.\nTile38 - Geolocation DB with spatial index and realtime geofencing.\nWGS84 - Library for Coordinate Conversion and Transformation (ETRS89, OSGB36, NAD83, RGF93, Web Mercator, UTM).\n\nGo Compilers\nTools for compiling Go to other languages.\n\nc4go - Transpile C code to Go code.\nf4go - Transpile FORTRAN 77 code to Go code.\ngopherjs - Compiler from Go to JavaScript.\nllgo - LLVM-based compiler for Go.\ntardisgo - Golang to Haxe to CPP/CSharp/Java/JavaScript transpiler.\n\nGoroutines\nTools for managing and working with Goroutines.\n\nants - A high-performance goroutine pool for golang.\nartifex - Simple in-memory job queue for Golang using worker-based dispatching.\nasync - A safe way to execute functions asynchronously, recovering them in case of panic.\nbreaker - Flexible mechanism to make execution flow interruptible.\ncyclicbarrier - CyclicBarrier for golang.\ngo-floc - Orchestrate goroutines with ease.\ngo-flow - Control goroutines execution order.\ngo-tools/multithreading - Manage a pool of goroutines using this lightweight library with a simple API.\ngo-trylock - TryLock support on read-write lock for Golang.\ngo-waitgroup - Like sync.WaitGroup with error handling and concurrency control.\ngohive - A highly performant and easy to use Goroutine pool for Go.\ngollback - asynchronous simple function utilities, for managing execution of closures and callbacks.\nGoSlaves - Simple and Asynchronous Goroutine pool library.\ngoworker - goworker is a Go-based background worker.\ngowp - gowp is concurrency limiting goroutine pool.\ngpool - manages a resizeable pool of context-aware goroutines to bound concurrency.\ngrpool - Lightweight Goroutine pool.\nHunch - Hunch provides functions like: All, First, Retry, Waterfall etc., that makes asynchronous flow control more intuitive.\noversight - Oversight is a complete implementation of the Erlang supervision trees.\nparallel-fn - Run functions in parallel.\npool - Limited consumer goroutine or unlimited goroutine pool for easier goroutine handling and cancellation.\nqueue - Gives you a sync.WaitGroup like queue group accessibility. Helps you to throttle and limit goroutines, wait for the end of the all goroutines and much more.\nroutine - go routine control with context, support: Main, Go, Pool and some useful Executors.\nsemaphore - Semaphore pattern implementation with timeout of lock/unlock operations based on channel and context.\nsemaphore - Fast resizable semaphore implementation based on CAS (faster than channel-based semaphore implementations).\nstl - Software transactional locks based on Software Transactional Memory (STM) concurrency control mechanism.\nthreadpool - Golang threadpool implementation.\ntunny - Goroutine pool for golang.\nworker-pool - goworker is a Go simple async worker pool.\nworkerpool - Goroutine pool that limits the concurrency of task execution, not the number of tasks queued.\n\nGUI\nLibraries for building GUI Applications.\nToolkits\n\napp - Package to create apps with GO, HTML and CSS. Supports: MacOS, Windows in progress.\nfyne - Cross platform native GUIs designed for Go, rendered using EFL. Supports: Linux, macOS, Windows.\ngo-astilectron - Build cross platform GUI apps with GO and HTML/JS/CSS (powered by Electron).\ngo-gtk - Go bindings for GTK.\ngo-sciter - Go bindings for Sciter: the Embeddable HTML/CSS/script engine for modern desktop UI development. Cross platform.\ngotk3 - Go bindings for GTK3.\ngowd - Rapid and simple desktop UI development with GO, HTML, CSS and NW.js. Cross platform.\nqt - Qt binding for Go (support for Windows / macOS / Linux / Android / iOS / Sailfish OS / Raspberry Pi).\nui - Platform-native GUI library for Go. Cross platform.\nWails - Mac, Windows, Linux desktop apps with HTML UI using built-in OS HTML renderer.\nwalk - Windows application library kit for Go.\nwebview - Cross-platform webview window with simple two-way JavaScript bindings (Windows / macOS / Linux).\n\nInteraction\n\ngo-appindicator - Go bindings for libappindicator3 C library.\ngosx-notifier - OSX Desktop Notifications library for Go.\nmac-activity-tracker - OSX library to notify about any (pluggable) activity on your machine.\nmac-sleep-notifier - OSX Sleep/Wake notifications in golang.\nrobotgo - Go Native cross-platform GUI system automation. Control the mouse, keyboard and other.\nsystray - Cross platform Go library to place an icon and menu in the notification area.\ntrayhost - Cross-platform Go library to place an icon in the host operating system's taskbar.\n\nHardware\nLibraries, tools, and tutorials for interacting with hardware.\nSee go-hardware for a comprehensive list.\nImages\nLibraries for manipulating images.\n\nbild - Collection of image processing algorithms in pure Go.\nbimg - Small package for fast and efficient image processing using libvips.\ncameron - An avatar generator for Go.\ncanvas - Vector graphics to PDF, SVG or rasterized image.\ndarkroom - An image proxy with changeable storage backends and image processing engines with focus on speed and resiliency.\ngeopattern - Create beautiful generative image patterns from a string.\ngg - 2D rendering in pure Go.\ngift - Package of image processing filters.\ngltf - Efficient and robust glTF 2.0 reader, writer and validator.\ngo-cairo - Go binding for the cairo graphics library.\ngo-gd - Go binding for GD library.\ngo-nude - Nudity detection with Go.\ngo-opencv - Go bindings for OpenCV.\ngo-webcolors - Port of webcolors library from Python to Go.\ngocv - Go package for computer vision using OpenCV 3.3+.\ngoimagehash - Go Perceptual image hashing package.\ngoimghdr - The imghdr module determines the type of image contained in a file for Go.\ngovatar - Library and CMD tool for generating funny avatars.\nimage2ascii - Convert image to ASCII.\nimagick - Go binding to ImageMagick's MagickWand C API.\nimaginary - Fast and simple HTTP microservice for image resizing.\nimaging - Simple Go image processing package.\nimg - Selection of image manipulation tools.\nln - 3D line art rendering in Go.\nmergi - Tool & Go library for image manipulation (Merge, Crop, Resize, Watermark, Animate).\nmort - Storage and image processing server written in Go.\nmpo - Decoder and conversion tool for MPO 3D Photos.\npicfit - An image resizing server written in Go.\npt - Path tracing engine written in Go.\nresize - Image resizing for Go with common interpolation methods.\nrez - Image resizing in pure Go and SIMD.\nsmartcrop - Finds good crops for arbitrary images and crop sizes.\nsteganography - Pure Go Library for LSB steganography.\nstegify - Go tool for LSB steganography, capable of hiding any file within an image.\nsvgo - Go Language Library for SVG generation.\ntga - Package tga is a TARGA image format decoder/encoder.\n\nIoT (Internet of Things)\nLibraries for programming devices of the IoT.\n\nconnectordb - Open-Source Platform for Quantified Self & IoT.\ndevices - Suite of libraries for IoT devices, experimental for x/exp/io.\neywa - Project Eywa is essentially a connection manager that keeps track of connected devices.\nflogo - Project Flogo is an Open Source Framework for IoT Edge Apps & Integration.\ngatt - Gatt is a Go package for building Bluetooth Low Energy peripherals.\ngobot - Gobot is a framework for robotics, physical computing, and the Internet of Things.\nhuego - An extensive Philips Hue client library for Go.\niot - IoT is a simple framework for implementing a Google IoT Core device.\nmainflux - Industrial IoT Messaging and Device Management Server.\nperiph - Peripherals I/O to interface with low-level board facilities.\nsensorbee - Lightweight stream processing engine for IoT.\n\nJob Scheduler\nLibraries for scheduling jobs.\n\nclockwerk - Go package to schedule periodic jobs using a simple, fluent syntax.\nclockwork - Simple and intuitive job scheduling library in Go.\ngo-cron - Simple Cron library for go that can execute closures or functions at varying intervals, from once a second to once a year on a specific date and time. Primarily for web applications and long running daemons.\ngron - Define time-based tasks using a simple Go API and Gron\u2019s scheduler will run them accordingly.\nJobRunner - Smart and featureful cron job scheduler with job queuing and live monitoring built in.\njobs - Persistent and flexible background jobs library.\nleprechaun - Job scheduler that supports webhooks, crons and classic scheduling.\nscheduler - Cronjobs scheduling made easy.\n\nJSON\nLibraries for working with JSON.\n\najson - Abstract JSON for golang with JSONPath support.\ngjo - Small utility to create JSON objects.\nGJSON - Get a JSON value with one line of code.\ngo-jsonerror - Go-JsonError is ment to allow us to easily create json response errors that follow the JsonApi spec.\ngo-respond - Go package for handling common HTTP JSON responses.\ngojq - JSON query in Golang.\ngojson - Automatically generate Go (golang) struct definitions from example JSON.\nJayDiff - JSON diff utility written in Go.\njettison - High performance, reflection-less JSON encoder for Go.\nJSON-to-Go - Convert JSON to Go struct.\njson2go - Advanced JSON to Go struct conversion. Provides package that can parse multiple JSON documents and create struct to fit them all.\njsonapi-errors - Go bindings based on the JSON API errors reference.\njsonf - Console tool for highlighted formatting and struct query fetching JSON.\njsongo - Fluent API to make it easier to create Json objects.\njsonhal - Simple Go package to make custom structs marshal into HAL compatible JSON responses.\nkazaam - API for arbitrary transformation of JSON documents.\nmp - Simple cli email parser. It currently takes stdin and outputs JSON.\n\nLogging\nLibraries for generating and working with log files.\n\ndistillog - distilled levelled logging (think of it as stdlib + log levels).\nglg - glg is simple and fast leveled logging library for Go.\nglo - PHP Monolog inspired logging facility with identical severity levels.\nglog - Leveled execution logs for Go.\ngo-cronowriter - Simple writer that rotate log files automatically based on current date and time, like cronolog.\ngo-log - A logging library with strack traces, object dumping and optional timestamps.\ngo-log - Simple and configurable Logging in Go, with level, formatters and writers.\ngo-log - Log lib supports level and multi handlers.\ngo-log - Log4j implementation in Go.\ngo-logger - Simple logger of Go Programs, with level handlers.\ngologger - Simple easy to use log lib for go, logs in Colored Console, Simple Console, File or Elasticsearch.\ngomol - Multiple-output, structured logging for Go with extensible logging outputs.\ngone/log - Fast, extendable, full-featured, std-lib source compatible log library.\njournald - Go implementation of systemd Journal's native API for logging.\nlog - An O(1) logging system that allows you to connect one log to multiple writers (e.g. stdout, a file and a TCP connection).\nlog - Structured logging package for Go.\nlog - Simple, configurable and scalable Structured Logging for Go.\nlog - Structured log interface for Go cleanly separates logging facade from its implementation.\nlog-voyage - Full-featured logging saas written in golang.\nlog15 - Simple, powerful logging for Go.\nlogdump - Package for multi-level logging.\nlogex - Golang log lib, supports tracking and level, wrap by standard log lib.\nlogger - Minimalistic logging library for Go.\nlogmatic - Colorized logger for Golang with dynamic log level configuration.\nlogo - Golang logger to different configurable writers.\nlogrus - Structured logger for Go.\nlogrusiowriter - io.Writer implementation using logrus logger.\nlogrusly - logrus plug-in to send errors to a Loggly.\nlogutils - Utilities for slightly better logging in Go (Golang) extending the standard logger.\nlogxi - 12-factor app logger that is fast and makes you happy.\nlumberjack - Simple rolling logger, implements io.WriteCloser.\nmlog - Simple logging module for go, with 5 levels, an optional rotating logfile feature and stdout/stderr output.\nonelog - Onelog is a dead simple but very efficient JSON logger. It is the fastest JSON logger out there in all scenario. Also, it is one of the logger with the lowest allocation.\nozzo-log - High performance logging supporting log severity, categorization, and filtering. Can send filtered log messages to various targets (e.g. console, network, mail).\nrollingwriter - RollingWriter is an auto-rotate io.Writer implementation with multi policies to provide log file rotation.\nseelog - Logging functionality with flexible dispatching, filtering, and formatting.\nspew - Implements a deep pretty printer for Go data structures to aid in debugging.\nstdlog - Stdlog is an object-oriented library providing leveled logging. It is very useful for cron jobs.\ntail - Go package striving to emulate the features of the BSD tail program.\nxlog - Plugin architecture and flexible log system for Go, with level ctrl, multiple log target and custom log format.\nxlog - Structured logger for net/context aware HTTP handlers with flexible dispatching.\nzap - Fast, structured, leveled logging in Go.\nzerolog - Zero-allocation JSON logger.\n\nMachine Learning\nLibraries for Machine Learning.\n\nbayesian - Naive Bayesian Classification for Golang.\nCloudForest - Fast, flexible, multi-threaded ensembles of decision trees for machine learning in pure Go.\neaopt - An evolutionary optimization library.\nevoli - Genetic Algorithm and Particle Swarm Optimization library.\nfonet - A Deep Neural Network library written in Go.\ngo-cluster - Go implementation of the k-modes and k-prototypes clustering algorithms.\ngo-deep - A feature-rich neural network library in Go.\ngo-fann - Go bindings for Fast Artificial Neural Networks(FANN) library.\ngo-galib - Genetic Algorithms library written in Go / golang.\ngo-pr - Pattern recognition package in Go lang.\ngobrain - Neural Networks written in go.\ngodist - Various probability distributions, and associated methods.\ngoga - Genetic algorithm library for Go.\nGoLearn - General Machine Learning library for Go.\ngolinear - liblinear bindings for Go.\nGoMind - A simplistic Neural Network Library in Go.\ngoml - On-line Machine Learning in Go.\nGoptuna - Bayesian optimization framework for black-box functions written in Go. Everything will be optimized.\ngoRecommend - Recommendation Algorithms library written in Go.\ngorgonia - graph-based computational library like Theano for Go that provides primitives for building various machine learning and neural network algorithms.\ngorse - An offline recommender system backend based on collaborative filtering written in Go.\ngoscore - Go Scoring API for PMML.\ngosseract - Go package for OCR (Optical Character Recognition), by using Tesseract C++ library.\nlibsvm - libsvm golang version derived work based on LIBSVM 3.14.\nneat - Plug-and-play, parallel Go framework for NeuroEvolution of Augmenting Topologies (NEAT).\nneural-go - Multilayer perceptron network implemented in Go, with training via backpropagation.\nocrserver - A simple OCR API server, seriously easy to be deployed by Docker and Heroku.\nonnx-go - Go Interface to Open Neural Network Exchange (ONNX).\nprobab - Probability distribution functions. Bayesian inference. Written in pure Go.\nregommend - Recommendation & collaborative filtering engine.\nshield - Bayesian text classifier with flexible tokenizers and storage backends for Go.\ntfgo - Easy to use Tensorflow bindings: simplifies the usage of the official Tensorflow Go bindings. Define computational graphs in Go, load and execute models trained in Python.\nVaris - Golang Neural Network.\n\nMessaging\nLibraries that implement messaging systems.\n\nAPNs2 - HTTP/2 Apple Push Notification provider for Go \u2014 Send push notifications to iOS, tvOS, Safari and OSX apps.\nBeaver - A real time messaging server to build a scalable in-app notifications, multiplayer games, chat apps in web and mobile apps.\nBenthos - A message streaming bridge between a range of protocols.\nBus - Minimalist message bus implementation for internal communication.\nCentrifugo - Real-time messaging (Websockets or SockJS) server in Go.\nCommander - A high-level event driven consumer/producer supporting various \"dialects\" such as Apache Kafka.\ndbus - Native Go bindings for D-Bus.\ndrone-line - Sending Line notifications using a binary, docker or Drone CI.\nemitter - Emits events using Go way, with wildcard, predicates, cancellation possibilities and many other good wins.\nevent - Implementation of the pattern observer.\nEventBus - The lightweight event bus with async compatibility.\ngaurun-client - Gaurun Client written in Go.\nGlue - Robust Go and Javascript Socket Library (Alternative to Socket.io).\ngo-notify - Native implementation of the freedesktop notification spec.\ngo-nsq - the official Go package for NSQ.\ngo-socket.io - socket.io library for golang, a realtime application framework.\ngo-vitotrol - Client library to Viessmann Vitotrol web service.\nGollum - A n:m multiplexer that gathers messages from different sources and broadcasts them to a set of destinations.\ngolongpoll - HTTP longpoll server library that makes web pub-sub simple.\ngopush-cluster - gopush-cluster is a go push server cluster.\ngorush - Push notification server using APNs2 and google GCM.\nguble - Messaging server using push notifications (Google Firebase Cloud Messaging, Apple Push Notification services, SMS) as well as websockets, a REST API, featuring distributed operation and message-persistence.\nhub - A Message/Event Hub for Go applications, using publish/subscribe pattern with support for alias like rabbitMQ exchanges.\njazz - A simple RabbitMQ abstraction layer for queue administration and publishing and consuming of messages.\nmachinery - Asynchronous task queue/job queue based on distributed message passing.\nmangos - Pure go implementation of the Nanomsg (\"Scalable Protocols\") with transport interoperability.\nmelody - Minimalist framework for dealing with websocket sessions, includes broadcasting and automatic ping/pong handling.\nMercure - Server and library to dispatch server-sent updates using the Mercure protocol (built on top of Server-Sent Events).\nmessagebus - messagebus is a Go simple async message bus, perfect for using as event bus when doing event sourcing, CQRS, DDD.\nNATS Go Client - Lightweight and high performance publish-subscribe and distributed queueing messaging system - this is the Go library.\nnsq-event-bus - A tiny wrapper around NSQ topic and channel.\noplog - Generic oplog/replication system for REST APIs.\npubsub - Simple pubsub package for go.\nrabbus - A tiny wrapper over amqp exchanges and queues.\nrabtap - RabbitMQ swiss army knife cli app.\nRapidMQ - RapidMQ is a lightweight and reliable library for managing of the local messages queue.\nredisqueue - redisqueue provides a producer and consumer of a queue that uses Redis streams.\nrmqconn - RabbitMQ Reconnection. Wrapper over amqp.Connection and amqp.Dial. Allowing to do a reconnection when the connection is broken before forcing the call to the Close () method to be closed.\nsarama - Go library for Apache Kafka.\nUniqush-Push - Redis backed unified push service for server-side notifications to mobile devices.\nzmq4 - Go interface to ZeroMQ version 4. Also available for version 3 and version 2.\n\nMicrosoft Office\n\nunioffice - Pure go library for creating and processing Office Word (.docx), Excel (.xlsx) and Powerpoint (.pptx) documents.\n\nMicrosoft Excel\nLibraries for working with Microsoft Excel.\n\nexcelize - Golang library for reading and writing Microsoft Excel\u2122 (XLSX) files.\ngo-excel - A simple and light reader to read a relate-db-like excel as a table.\ngoxlsxwriter - Golang bindings for libxlsxwriter for writing XLSX (Microsoft Excel) files.\nxlsx - Library to simplify reading the XML format used by recent version of Microsoft Excel in Go programs.\nxlsx - Fast and safe way to read/update your existing Microsoft Excel files in Go programs.\n\nMiscellaneous\nDependency Injection\nLibraries for working with dependency injection.\n\nalice - Additive dependency injection container for Golang.\ncontainer - A powerful IoC Container with fluent and easy-to-use interface.\ndig - A reflection based dependency injection toolkit for Go.\nfx - A dependency injection based application framework for Go (built on top of dig).\ngocontainer - Simple Dependency Injection Container.\ninject - A reflection based dependency injection container with simple interface.\nlinker - A reflection based dependency injection and inversion of control library with components lifecycle support.\nwire - Strict Runtime Dependency Injection for Golang.\n\nProject Layout\nUnofficial set of patterns for structuring projects.\n\ngo-sample - A sample layout for Go application projects with the real code.\ngolang-standards/project-layout - Set of common historical and emerging project layout patterns in the Go ecosystem.\nmodern-go-application - Go application boilerplate and example applying modern practices.\nscaffold - Scaffold generates starter Go project layout. Lets you focus on business logic implemeted.\n\nStrings\nLibraries for working with strings.\n\nstrutil - String utilities.\nxstrings - Collection of useful string functions ported from other languages.\n\nThese libraries were placed here because none of the other categories seemed to fit.\n\nanagent - Minimalistic, pluggable Golang evloop/timer handler with dependency-injection.\nantch - A fast, powerful and extensible web crawling & scraping framework.\narchiver - Library and command for making and extracting .zip and .tar.gz archives.\nautoflags - Go package to automatically define command line flags from struct fields.\navgRating - Calculate average score and rating based on Wilson Score Equation.\nbanner - Add beautiful banners into your Go applications.\nbase64Captcha - Base64captch supports digit, number, alphabet, arithmetic, audio and digit-alphabet captcha.\nbattery - Cross-platform, normalized battery information library.\nbitio - Highly optimized bit-level Reader and Writer for Go.\nbrowscap_go - GoLang Library for Browser Capabilities Project.\ncaptcha - Package captcha provides an easy to use, unopinionated API for captcha generation.\nconv - Package conv provides fast and intuitive conversions across Go types.\ndatacounter - Go counters for readers/writer/http.ResponseWriter.\nffmt - Beautify data display for Humans.\nghorg - Quickly clone an entire org/users repositories into one directory - Supports GitHub, GitLab, and Bitbucket.\ngo-commons-pool - Generic object pool for Golang.\ngo-openapi - Collection of packages to parse and utilize open-api schemas.\ngo-resiliency - Resiliency patterns for golang.\ngo-unarr - Decompression library for RAR, TAR, ZIP and 7z archives.\ngofakeit - Random data generator written in go.\ngommit - Analyze git commit messages to ensure they follow defined patterns.\ngopsutil - Cross-platform library for retrieving process and system utilization(CPU, Memory, Disks, etc).\ngosh - Provide Go Statistics Handler, Struct, Measure Method.\ngosms - Your own local SMS gateway in Go that can be used to send SMS.\ngotoprom - Type-safe metrics builder wrapper library for the official Prometheus client.\ngountries - Package that exposes country and subdivision data.\nhealth - Easy to use, extensible health check library.\nhealthcheck - An opinionated and concurrent health-check HTTP handler for RESTful services.\nhostutils - A golang library for packing and unpacking FQDNs list.\nindigo - Distributed unique ID generator of using Sonyflake and encoded by Base58.\nlk - A simple licensing library for golang.\nllvm - Library for interacting with LLVM IR in pure Go.\nmetrics - Library for metrics instrumentation and Prometheus exposition.\nmorse - Library to convert to and from morse code.\nnuma - NUMA is a utility library, which is written in go. It help us to write some NUMA-AWARED code.\npdfgen - HTTP service to generate PDF from Json requests.\npersian - Some utilities for Persian language in go.\nsandid - Every grain of sand on earth has its own ID.\nshellwords - A Golang library to manipulate strings according to the word parsing rules of the UNIX Bourne shell.\nshortid - Distributed generation of super short, unique, non-sequential, URL friendly IDs.\nstateless - A fluent library for creating state machines.\nstats - Monitors Go MemStats + System stats such as Memory, Swap and CPU and sends via UDP anywhere you want for logging etc...\nturtle - Emojis for Go.\nurl-shortener - A modern, powerful, and robust URL shortener microservice with mysql support.\nVarHandler - Generate boilerplate http input and output handling.\nxdg - FreeDesktop.org (xdg) Specs implemented in Go.\nxkg - X Keyboard Grabber.\n\nNatural Language Processing\nLibraries for working with human languages.\n\ngetlang - Fast natural language detection package.\ngo-i18n - Package and an accompanying tool to work with localized text.\ngo-mystem - CGo bindings to Yandex.Mystem - russian morphology analyzer.\ngo-nlp - Utilities for working with discrete probability distributions and other tools useful for doing NLP work.\ngo-pinyin - CN Hanzi to Hanyu Pinyin converter.\ngo-stem - Implementation of the porter stemming algorithm.\ngo-unidecode - ASCII transliterations of Unicode text.\ngo2vec - Reader and utility functions for word2vec embeddings.\ngojieba - This is a Go implementation of jieba which a Chinese word splitting algorithm.\ngolibstemmer - Go bindings for the snowball libstemmer library including porter 2.\ngotokenizer - A tokenizer based on the dictionary and Bigram language models for Golang. (Now only support chinese segmentation)\ngounidecode - Unicode transliterator (also known as unidecode) for Go.\ngse - Go efficient text segmentation; support english, chinese, japanese and other.\nicu - Cgo binding for icu4c C library detection and conversion functions. Guaranteed compatibility with version 50.1.\nkagome - JP morphological analyzer written in pure Go.\nlibtextcat - Cgo binding for libtextcat C library. Guaranteed compatibility with version 2.2.\nMMSEGO - This is a GO implementation of MMSEG which a Chinese word splitting algorithm.\nnlp - Extract values from strings and fill your structs with nlp.\nnlp - Go Natural Language Processing library supporting LSA (Latent Semantic Analysis).\npaicehusk - Golang implementation of the Paice/Husk Stemming Algorithm.\npetrovich - Petrovich is the library which inflects Russian names to given grammatical case.\nporter - This is a fairly straightforward port of Martin Porter's C implementation of the Porter stemming algorithm.\nporter2 - Really fast Porter 2 stemmer.\nprose - Library for text processing that supports tokenization, part-of-speech tagging, named-entity extraction, and more. English only.\nRAKE.go - Go port of the Rapid Automatic Keyword Extraction Algorithm (RAKE).\nsegment - Go library for performing Unicode Text Segmentation as described in Unicode Standard Annex #29\nsentences - Sentence tokenizer:  converts text into a list of sentences.\nshamoji - The shamoji is word filtering package written in Go.\nsnowball - Snowball stemmer port (cgo wrapper) for Go. Provides word stem extraction functionality Snowball native.\nstemmer - Stemmer packages for Go programming language. Includes English and German stemmers.\ntextcat - Go package for n-gram based text categorization, with support for utf-8 and raw text.\nwhatlanggo - Natural language detection package for Go. Supports 84 languages and 24 scripts (writing systems e.g. Latin, Cyrillic, etc).\nwhen - Natural EN and RU language date/time parser with pluggable rules.\n\nNetworking\nLibraries for working with various layers of the network.\n\narp - Package arp implements the ARP protocol, as described in RFC 826.\nbuffstreams - Streaming protocolbuffer data over TCP made easy.\ncanopus - CoAP Client/Server implementation (RFC 7252).\ncidranger - Fast IP to CIDR lookup for Go.\ndhcp6 - Package dhcp6 implements a DHCPv6 server, as described in RFC 3315.\ndns - Go library for working with DNS.\nether - Cross-platform Go package for sending and receiving ethernet frames.\nethernet - Package ethernet implements marshaling and unmarshaling of IEEE 802.3 Ethernet II frames and IEEE 802.1Q VLAN tags.\nfasthttp - Package fasthttp is a fast HTTP implementation for Go, up to 10 times faster than net/http.\nfortio - Load testing library and command line tool, advanced echo server and web UI. Allows to specify a set query-per-second load and record latency histograms and other useful stats and graph them. Tcp, Http, gRPC.\nftp - Package ftp implements a FTP client as described in RFC 959.\ngev - gev is a lightweight, fast non-blocking TCP network library based on Reactor mode.\ngmqtt - Gmqtt is a flexible, high-performance MQTT broker library that fully implements the MQTT protocol V3.1.1.\ngnet - gnet is a high-performance, lightweight, nonblocking, event-loop networking library written in pure Go.\ngNxI - A collection of tools for Network Management that use the gNMI and gNOI protocols.\ngo-getter - Go library for downloading files or directories from various sources using a URL.\ngo-powerdns - PowerDNS API bindings for Golang.\ngo-stun - Go implementation of the STUN client (RFC 3489 and RFC 5389).\ngobgp - BGP implemented in the Go Programming Language.\ngolibwireshark - Package golibwireshark use libwireshark library to decode pcap file and analyse dissection data.\ngopacket - Go library for packet processing with libpcap bindings.\ngopcap - Go wrapper for libpcap.\ngoshark - Package goshark use tshark to decode IP packet and create data struct to analyse packet.\ngosnmp - Native Go library for performing SNMP actions.\ngosocsvr - Socket server made simple.\ngotcp - Go package for quickly writing tcp applications.\ngrab - Go package for managing file downloads.\ngraval - Experimental FTP server framework.\nHTTPLab - HTTPLabs let you inspect HTTP requests and forge responses.\niplib - Library for working with IP addresses (net.IP, net.IPNet), inspired by python ipaddress and ruby ipaddr\njazigo - Jazigo is a tool written in Go for retrieving configuration for multiple network devices.\nkcp-go - KCP - Fast and Reliable ARQ Protocol.\nkcptun - Extremely simple & fast udp tunnel based on KCP protocol.\nlhttp - Powerful websocket framework, build your IM server more easily.\nlinkio - Network link speed simulation for Reader/Writer interfaces.\nllb - It's a very simple but quick backend for proxy servers. Can be useful for fast redirection to predefined domain with zero memory allocation and fast response.\nmdns - Simple mDNS (Multicast DNS) client/server library in Golang.\nmqttPaho - The Paho Go Client provides an MQTT client library for connection to MQTT brokers via TCP, TLS or WebSockets.\nNFF-Go - Framework for rapid development of performant network functions for cloud and bare-metal (former YANFF).\npacket - Send packets over TCP and UDP. It can buffer messages and hot-swap connections if needed.\npeerdiscovery - Pure Go library for cross-platform local peer discovery using UDP multicast.\nportproxy - Simple TCP proxy which adds CORS support to API's which don't support it.\npublicip - Package publicip returns your public facing IPv4 address (internet egress).\nquic-go - An implementation of the QUIC protocol in pure Go.\nraw - Package raw enables reading and writing data at the device driver level for a network interface.\nsftp - Package sftp implements the SSH File Transfer Protocol as described in https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt.\nssh - Higher-level API for building SSH servers (wraps crypto/ssh).\nsslb - It's a Super Simples Load Balancer, just a little project to achieve some kind of performance.\nstun - Go implementation of RFC 5389 STUN protocol.\ntcp_server - Go library for building tcp servers faster.\ntspool - A TCP Library use worker pool to improve performance and protect your server.\nutp - Go uTP micro transport protocol implementation.\nwater - Simple TUN/TAP library.\nwebrtc - A pure Go implementation of the WebRTC API.\nwinrm - Go WinRM client to remotely execute commands on Windows machines.\nxtcp - TCP Server Framework with simultaneous full duplex communication,graceful shutdown,custom protocol.\n\nHTTP Clients\nLibraries for making HTTP requests.\n\ngentleman - Full-featured plugin-driven HTTP client library.\ngrequests - A Go \"clone\" of the great and famous Requests library.\nheimdall - An enchanced http client with retry and hystrix capabilities.\npester - Go HTTP client calls with retries, backoff, and concurrency.\nresty - Simple HTTP and REST client for Go inspired by Ruby rest-client.\nrq - A nicer interface for golang stdlib HTTP client.\nsling - Sling is a Go HTTP client library for creating and sending API requests.\nsreq - A simple, user-friendly and concurrent safe HTTP request library for Go.\n\nOpenGL\nLibraries for using OpenGL in Go.\n\ngl - Go bindings for OpenGL (generated via glow).\nglfw - Go bindings for GLFW 3.\ngoxjs/gl - Go cross-platform OpenGL bindings (OS X, Linux, Windows, browsers, iOS, Android).\ngoxjs/glfw - Go cross-platform glfw library for creating an OpenGL context and receiving events.\nmathgl - Pure Go math package specialized for 3D math, with inspiration from GLM.\n\nORM\nLibraries that implement Object-Relational Mapping or datamapping techniques.\n\nbeego orm - Powerful orm framework for go. Support: pq/mysql/sqlite3.\ngo-firestorm - A simple ORM for Google/Firebase Cloud Firestore.\ngo-pg - PostgreSQL ORM with focus on PostgreSQL specific features and performance.\ngo-queryset - 100% type-safe ORM with code generation and MySQL, PostgreSQL, Sqlite3, SQL Server support based on GORM.\ngo-sqlbuilder - A flexible and powerful SQL string builder library plus a zero-config ORM.\ngo-store - Simple and fast Redis backed key-value store library for Go.\nGORM - The fantastic ORM library for Golang, aims to be developer friendly.\ngorp - Go Relational Persistence, ORM-ish library for Go.\ngrimoire - Grimoire is a database access layer and validation for golang. (Support: MySQL, PostgreSQL and SQLite3).\nlore - Simple and lightweight pseudo-ORM/pseudo-struct-mapping environment for Go.\nMarlow - Generated ORM from project structs for compile time safety assurances.\npop/soda - Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite.\nQBS - Stands for Query By Struct. A Go ORM.\nreform - Better ORM for Go, based on non-empty interfaces and code generation.\nSQLBoiler - ORM generator. Generate a featureful and blazing-fast ORM tailored to your database schema.\nupper.io/db - Single interface for interacting with different data sources through the use of adapters that wrap mature database drivers.\nXorm - Simple and powerful ORM for Go.\nZoom - Blazing-fast datastore and querying engine built on Redis.\n\nPackage Management\nOfficial tooling for dependency and package management\n\ngo modules - Modules are the unit of source code interchange and versioning. The go command has direct support for working with modules, including recording and resolving dependencies on other modules.\n\nOfficial experimental tooling for package management\n\ndep - Go dependency tool.\nvgo - Versioned Go.\n\nUnofficial libraries for package and dependency management.\n\ngigo - PIP-like dependency tool for golang, with support for private repositories and hashes.\nglide - Manage your golang vendor and vendored packages with ease. Inspired by tools like Maven, Bundler, and Pip.\ngodep - dependency tool for go, godep helps build packages reproducibly by fixing their dependencies.\ngom - Go Manager - bundle for go.\ngoop - Simple dependency manager for Go (golang), inspired by Bundler.\ngop - Build and manage your Go applications out of GOPATH.\ngopm - Go Package Manager.\ngovendor - Go Package Manager. Go vendor tool that works with the standard vendor file.\ngpm - Barebones dependency manager for Go.\njohnny-deps - Minimal dependency version using Git.\nmvn-golang - plugin that provides way for auto-loading of Golang SDK, dependency management and start build environment in Maven project infrastructure.\nnut - Vendor Go dependencies.\nVenGO - create and manage exportable isolated go virtual environments.\n\nPerformance\n\njaeger - A distributed tracing system.\nprofile - Simple profiling support package for Go.\ntracer - Simple, lightweight tracing.\n\nQuery Language\n\ngojsonq - A simple Go package to Query over JSON Data.\ngraphql - graphql parser + utilities.\ngraphql - GraphQL server with a focus on ease of use.\ngraphql-go - Implementation of GraphQL for Go.\njsonql - JSON query expression library in Golang.\njsonslice - Jsonpath queries with advanced filters.\nrql - Resource Query Language for REST API.\nstraf - Easily Convert Golang structs to GraphQL objects.\n\nResource Embedding\n\nesc - Embeds files into Go programs and provides http.FileSystem interfaces to them.\nfileb0x - Simple tool to embed files in go with focus on \"customization\" and ease to use.\ngo-embed - Generates go code to embed resource files into your library or executable.\ngo-resources - Unfancy resources embedding with Go.\ngo.rice - go.rice is a Go package that makes working with resources such as html,js,css,images and templates very easy.\npackr - The simple and easy way to embed static files into Go binaries.\nstatics - Embeds static resources into go files for single binary compilation + works with http.FileSystem + symlinks.\nstatik - Embeds static files into a Go executable.\ntemplify - Embed external template files into Go code to create single file binaries.\nvfsgen - Generates a vfsdata.go file that statically implements the given virtual filesystem.\n\nScience and Data Analysis\nLibraries for scientific computing and data analyzing.\n\nassocentity - Package assocentity returns the average distance from words to a given entity.\nbradleyterry - Provides a Bradley-Terry Model for pairwise comparisons.\nchart - Simple Chart Plotting library for Go. Supports many graphs types.\ndataframe-go - Dataframes for machine-learning and statistics (similar to pandas).\nevaler - Simple floating point arithmetic expression evaluator.\newma - Exponentially-weighted moving averages.\ngeom - 2D geometry for golang.\ngo-dsp - Digital Signal Processing for Go.\ngo-gt - Graph theory algorithms written in \"Go\" language.\ngoent - GO Implementation of Entropy Measures.\ngohistogram - Approximate histograms for data streams.\ngonum - Gonum is a set of numeric libraries for the Go programming language. It contains libraries for matrices, statistics, optimization, and more.\ngonum/plot - gonum/plot provides an API for building and drawing plots in Go.\ngoraph - Pure Go graph theory library(data structure, algorith visualization).\ngosl - Go scientific library for linear algebra, FFT, geometry, NURBS, numerical methods, probabilities, optimisation, differential equations, and more.\nGoStats - GoStats is an Open Source GoLang library for math statistics mostly used in Machine Learning domains, it covers most of the Statistical measures functions.\ngraph - Library of basic graph algorithms.\node - Ordinary differential equation (ODE) solver which supports extended states and channel-based iteration stop conditions.\norb - 2D geometry types with clipping, GeoJSON and Mapbox Vector Tile support.\npagerank - Weighted PageRank algorithm implemented in Go.\npiecewiselinear - Tiny linear interpolation library.\nPiHex - Implementation of the \"Bailey-Borwein-Plouffe\" algorithm for the hexadecimal number Pi.\nrootfinding - root-finding algorithms library for finding roots of quadratic functions.\nsparse - Go Sparse matrix formats for linear algebra supporting scientific and machine learning applications, compatible with gonum matrix libraries.\nstats - Statistics package with common functions missing from the Golang standard library.\nstreamtools - general purpose, graphical tool for dealing with streams of data.\nTextRank - TextRank implementation in Golang with extendable features (summarization, weighting, phrase extraction) and multithreading (goroutine) support.\ntriangolatte - 2D triangulation library. Allows translating lines and polygons (both based on points) to the language of GPUs.\n\nSecurity\nLibraries that are used to help make your application more secure.\n\nacmetool - ACME (Let's Encrypt) client tool with automatic renewal.\nacra - Network encryption proxy to protect database-based applications from data leaks: strong selective encryption, SQL injections prevention, intrusion detection system.\nargon2pw - Argon2 password hash generation with constant-time password comparison.\nautocert - Auto provision Let's Encrypt certificates and start a TLS server.\nBadActor - In-memory, application-driven jailer built in the spirit of fail2ban.\nCameradar - Tool and library to remotely hack RTSP streams from surveillance cameras.\ncertificates - An opinionated tool for generating tls certificates.\ngo-yara - Go Bindings for YARA, the \"pattern matching swiss knife for malware researchers (and everyone else)\".\ngoArgonPass - Argon2 password hash and verification designed to be compatible with existing Python and PHP implementations.\ngoSecretBoxPassword - A probably paranoid package for securely hashing and encrypting passwords.\nInterpol - Rule-based data generator for fuzzing and penetration testing.\nlego - Pure Go ACME client library and CLI tool (for use with Let's Encrypt).\nmemguard - A pure Go library for handling sensitive values in memory.\nnacl - Go implementation of the NaCL set of API's.\npasslib - Futureproof password hashing library.\nsecure - HTTP middleware for Go that facilitates some quick security wins.\nsimple-scrypt - Scrypt package with a simple, obvious API and automatic cost calibration built-in.\nssh-vault - encrypt/decrypt using ssh keys.\nsslmgr - SSL certificates made easy with a high level wrapper around acme/autocert.\n\nSerialization\nLibraries and tools for binary serialization.\n\nasn1 - Asn.1 BER and DER encoding library for golang.\nbambam - generator for Cap'n Proto schemas from go.\nbel - Generate TypeScript interfaces from Go structs/interfaces. Useful for JSON RPC.\nbinstruct - Golang binary decoder for mapping data into the structure.\ncbor - Small, safe, and easy CBOR encoding and decoding library.\ncolfer - Code generation for the Colfer binary format.\ncsvutil - High Performance, idiomatic CSV record encoding and decoding to native Go structures.\nfwencoder - Fixed width file parser (encoding and decoding library) for Go.\ngo-capnproto - Cap'n Proto library and parser for go.\ngo-codec - High Performance, feature-Rich, idiomatic encode, decode and rpc library for msgpack, cbor and json, with runtime-based OR code-generation support.\ngogoprotobuf - Protocol Buffers for Go with Gadgets.\ngoprotobuf - Go support, in the form of a library and protocol compiler plugin, for Google's protocol buffers.\njsoniter - High-performance 100% compatible drop-in replacement of \"encoding/json\".\nmapstructure - Go library for decoding generic map values into native Go structures.\nphp_session_decoder - GoLang library for working with PHP session format and PHP Serialize/Unserialize functions.\npletter - A standard way to wrap a proto message for message brokers.\nstructomap - Library to easily and dynamically generate maps from static structures.\n\nServer Applications\n\nalgernon - HTTP/2 web server with built-in support for Lua, Markdown, GCSS and Amber.\nCaddy - Caddy is an alternative, HTTP/2 web server that's easy to configure and use.\nconsul - Consul is a tool for service discovery, monitoring and configuration.\ndevd - Local webserver for developers.\ndiscovery - A registry for resilient mid-tier load balancing and failover.\ndudeldu - A simple SHOUTcast server.\netcd - Highly-available key value store for shared configuration and service discovery.\nFider - Fider is an open platform to collect and organize customer feedback.\nFlagr - Flagr is an open-source feature flagging and A/B testing service.\nflipt - A self contained feature flag solution written in Go and Vue.js\njackal - An XMPP server written in Go.\nminio - Minio is a distributed object storage server.\nnginx-prometheus - Nginx log parser and exporter to Prometheus.\nnsq - A realtime distributed messaging platform.\npsql-streamer - Stream database events from PostgreSQL to Kafka.\nriemann-relay - Relay to load-balance Riemann events and/or convert them to Carbon.\nRoadRunner - High-performance PHP application server, load-balancer and process manager.\nSFTPGo - Full featured and highly configurable SFTP server software.\nyakvs - Small, networked, in-memory key-value store.\n\nStream Processing\nLibraries and tools for stream processing and reactive programming.\n\ngo-streams - Go stream processing library.\n\nTemplate Engines\nLibraries and tools for templating and lexing.\n\nace - Ace is an HTML template engine for Go, inspired by Slim and Jade. Ace is a refinement of Gold.\namber - Amber is an elegant templating engine for Go Programming Language It is inspired from HAML and Jade.\ndamsel - Markup language featuring html outlining via css-selectors, extensible via pkg html/template and others.\nego - Lightweight templating language that lets you write templates in Go. Templates are translated into Go and compiled.\nextemplate - Tiny wrapper around html/template to allow for easy file-based template inheritance.\nfasttemplate - Simple and fast template engine. Substitutes template placeholders up to 10x faster than text/template.\ngofpdf - PDF document generator with high level support for text, drawing and images.\ngospin - Article spinning and spintax/spinning syntax engine, useful for A/B, testing pieces of text/articles and creating more natural conversations.\ngoview - Goview is a lightweight, minimalist and idiomatic template library based on golang html/template for building Go web application.\nhero - Hero is a handy, fast and powerful go template engine.\njet - Jet template engine.\nkasia.go - Templating system for HTML and other text documents - go implementation.\nliquid - Go implementation of Shopify Liquid templates.\nmaroto - A maroto way to create PDFs. Maroto is inspired in Bootstrap and uses gofpdf. Fast and simple.\nmustache - Go implementation of the Mustache template language.\npongo2 - Django-like template-engine for Go.\nquicktemplate - Fast, powerful, yet easy to use template engine. Converts templates into Go code and then compiles it.\nraymond - Complete handlebars implementation in Go.\nRazor - Razor view engine for Golang.\nSoy - Closure templates (aka Soy templates) for Go, following the official spec.\nvelvet - Complete handlebars implementation in Go.\n\nTesting\nLibraries for testing codebases and generating test data.\n\n\nTesting Frameworks\n\napitest - Simple and extensible behavioural testing library for REST based services or HTTP handlers that supports mocking external http calls and rendering of sequence diagrams.\nassert - Basic Assertion Library used along side native go testing, with building blocks for custom assertions.\nbadio - Extensions to Go's testing/iotest package.\nbaloo - Expressive and versatile end-to-end HTTP API testing made easy.\nbiff - Bifurcation testing framework, BDD compatible.\ncharlatan - Tool to generate fake interface implementations for tests.\ncommander - Tool for testing cli applications on windows, linux and osx.\ncupaloy - Simple snapshot testing addon for your test framework.\ndbcleaner - Clean database for testing purpose, inspired by database_cleaner in Ruby.\ndsunit - Datastore testing for SQL, NoSQL, structured files.\nendly - Declarative end to end functional testing.\nflute - HTTP client testing framework.\nfrisby - REST API testing framework.\nginkgo - BDD Testing Framework for Go.\ngo-carpet - Tool for viewing test coverage in terminal.\ngo-cmp - Package for comparing Go values in tests.\ngo-mutesting - Mutation testing for Go source code.\ngo-testdeep - Extremely flexible golang deep comparison, extends the go testing package.\ngo-vcr - Record and replay your HTTP interactions for fast, deterministic and accurate tests.\ngoblin - Mocha like testing framework fo Go.\ngocheck - More advanced testing framework alternative to gotest.\nGoConvey - BDD-style framework with web UI and live reload.\ngocrest - Composable hamcrest-like matchers for Go assertions.\ngodog - Cucumber or Behat like BDD framework for Go.\ngofight - API Handler Testing for Golang Router framework.\ngogiven - YATSPEC-like BDD testing framework for Go.\ngomatch - library created for testing JSON against patterns.\ngomega - Rspec like matcher/assertion library.\nGoSpec - BDD-style testing framework for the Go programming language.\ngospecify - This provides a BDD syntax for testing your Go code. It should be familiar to anybody who has used libraries such as rspec.\ngosuite - Brings lightweight test suites with setup/teardown facilities to testing by leveraging Go1.7's Subtests.\ngotest.tools - A collection of packages to augment the go testing package and support common patterns.\nHamcrest - fluent framework for declarative Matcher objects that, when applied to input values, produce self-describing results.\nhttpexpect - Concise, declarative, and easy to use end-to-end HTTP and REST API testing.\njsonassert - Package for verifying that your JSON payloads are serialized correctly.\nrestit - Go micro framework to help writing RESTful API integration test.\nschema - Quick and easy expression matching for JSON schemas used in requests and responses.\ntestcase - Idiomatic testing framework for Behavior Driven Development.\ntestfixtures - A helper for Rails' like test fixtures to test database applications.\nTestify - Sacred extension to the standard go testing package.\ntestmd - Convert markdown snippets into testable go code.\ntestsql - Generate test data from SQL files before testing and clear it after finished.\ntrial - Quick and easy extendable assertions without introducing much boilerplate.\nTt - Simple and colorful test tools.\nwstest - Websocket client for unit-testing a websocket http.Handler.\n\n\n\nMock\n\ncounterfeiter - Tool for generating self-contained mock objects.\ngo-sqlmock - Mock SQL driver for testing database interactions.\ngo-txdb - Single transaction based database driver mainly for testing purposes.\ngock - Versatile HTTP mocking made easy.\ngomock - Mocking framework for the Go programming language.\ngovcr - HTTP mock for Golang: record and replay HTTP interactions for offline testing.\nhoverfly - HTTP(S) proxy for recording and simulating REST/SOAP APIs with extensible middleware and easy-to-use CLI.\nhttpmock - Easy mocking of HTTP responses from external resources.\nminimock - Mock generator for Go interfaces.\nmockhttp - Mock object for Go http.ResponseWriter.\n\n\n\nFuzzing and delta-debugging/reducing/shrinking.\n\ngo-fuzz - Randomized testing system.\ngofuzz - Library for populating go objects with random values.\nTavor - Generic fuzzing and delta-debugging framework.\n\n\n\nSelenium and browser control tools.\n\ncdp - Type-safe bindings for the Chrome Debugging Protocol that can be used with browsers or other debug targets that implement it.\nchromedp - a way to drive/test Chrome, Safari, Edge, Android Webviews, and other browsers supporting the Chrome Debugging Protocol.\nggr - a lightweight server that routes and proxies Selenium WebDriver requests to multiple Selenium hubs.\nselenoid - alternative Selenium hub server that launches browsers within containers.\n\n\n\nFail injection\n\nfailpoint - An implementation of failpoints for Golang.\n\n\n\nText Processing\nLibraries for parsing and manipulating texts.\n\nSpecific Formats\n\nalign - A general purpose application that aligns text.\nallot - Placeholder and wildcard text parsing for CLI tools and bots.\nbbConvert - Converts bbCode to HTML that allows you to add support for custom bbCode tags.\nblackfriday - Markdown processor in Go.\nbluemonday - HTML Sanitizer.\ncodetree - Parses indented code (python, pixy, scarlet, etc.) and returns a tree structure.\ncolly - Fast and Elegant Scraping Framework for Gophers.\ncommonregex - A collection of common regular expressions for Go.\ndataflowkit - Web scraping Framework to turn websites into structured data.\ndid - DID (Decentralized Identifiers) Parser and Stringer in Go.\ndoi - Document object identifier (doi) parser in Go.\neditorconfig-core-go - Editorconfig file parser and manipulator for Go.\nenca - Minimal cgo bindings for libenca.\nencdec - Package provides a generic interface to encoders and decodersa.\ngenex - Count and expand Regular Expressions into all matching Strings.\ngithub_flavored_markdown - GitHub Flavored Markdown renderer (using blackfriday) with fenced code block highlighting, clickable header anchor links.\ngo-fixedwidth - Fixed-width text formatting (encoder/decoder with reflection).\ngo-humanize - Formatters for time, numbers, and memory size to human readable format.\ngo-nmea - NMEA parser library for the Go language.\ngo-runewidth - Functions to get fixed width of the character or string.\ngo-slugify - Make pretty slug with multiple languages support.\ngo-toml - Go library for the TOML format with query support and handy cli tools.\ngo-vcard - Parse and format vCard.\ngo-zero-width - Zero-width character detection and removal for Go.\ngofeed - Parse RSS and Atom feeds in Go.\ngographviz - Parses the Graphviz DOT language.\ngommon/bytes - Format bytes to string.\ngonameparts - Parses human names into individual name parts.\ngoq - Declarative unmarshaling of HTML using struct tags with jQuery syntax (uses GoQuery).\nGoQuery - GoQuery brings a syntax and a set of features similar to jQuery to the Go language.\ngoregen - Library for generating random strings from regular expressions.\ngoribot - A simple golang spider/scraping framework,build a spider in 3 lines.\ngotext - GNU gettext utilities for Go.\nguesslanguage - Functions to determine the natural language of a unicode text.\nhtmlquery - An XPath query package for HTML, lets you extract data or evaluate from HTML documents by an XPath expression.\ninject - Package inject provides a reflect based injector.\nltsv - High performance LTSV (Labeled Tab Separeted Value) reader for Go.\nmxj - Encode / decode XML as JSON or map[string]interface{}; extract values with dot-notation paths and wildcards. Replaces x2j and j2x packages.\nsdp - SDP: Session Description Protocol [RFC 4566].\nsh - Shell parser and formatter.\nslug - URL-friendly slugify with multiple languages support.\nSlugify - Go slugify application that handles string.\nsyndfeed - A syndication feed for Atom 1.0 and RSS 2.0.\ntoml - TOML configuration format (encoder/decoder with reflection).\n\n\nUtility\n\ngofuckyourself - A sanitization-based swear filter for Go.\ngotabulate - Easily pretty-print your tabular data with Go.\nkace - Common case conversions covering common initialisms.\nparseargs-go - string argument parser that understands quotes and backslashes.\nparth - URL path segmentation parsing.\nradix - fast string sorting algorithm.\nTagify - Produces a set of tags from given source.\ntextwrap - Implementation of textwrap module from Python.\nTySug - Alternative suggestions with respect to keyboard layouts.\nxj2go - Convert xml or json to go struct.\nxurls - Extract urls from text.\n\n\n\nThird-party APIs\nLibraries for accessing third party APIs.\n\namazon-product-advertising-api - Go Client Library for Amazon Product Advertising API.\nanaconda - Go client library for the Twitter 1.1 API.\naws-sdk-go - The official AWS SDK for the Go programming language.\nbrewerydb - Go library for accessing the BreweryDB API.\ncachet - Go client library for Cachet (open source status page system).\ncircleci - Go client library for interacting with CircleCI's API.\nclarifai - Go client library for interfacing with the Clarifai API.\ncodeship-go - Go client library for interacting with Codeship's API v2.\ncoinpaprika-go - Go client library for interacting with Coinpaprika's API.\ndiscordgo - Go bindings for the Discord Chat API.\nethrpc - Go bindings for Ethereum JSON RPC API.\nfacebook - Go Library that supports the Facebook Graph API.\nfcm - Go library for Firebase Cloud Messaging.\ngads - Google Adwords Unofficial API.\ngami - Go library for Asterisk Manager Interface.\ngcm - Go library for Google Cloud Messaging.\ngeo-golang - Go Library to access Google Maps, MapQuest, Nominatim, OpenCage, Bing, Mapbox, and OpenStreetMap geocoding / reverse geocoding APIs.\ngithub - Go library for accessing the GitHub REST API v3.\ngithubql - Go library for accessing the GitHub GraphQL API v4.\ngo-chronos - Go library for interacting with the Chronos Job Scheduler\ngo-hacknews - Tiny Go client for HackerNews API.\ngo-here - Go client library around the HERE location based APIs.\ngo-imgur - Go client library for imgur\ngo-jira - Go client library for Atlassian JIRA\ngo-marathon - Go library for interacting with Mesosphere's Marathon PAAS.\ngo-myanimelist - Go client library for accessing the MyAnimeList API.\ngo-sophos - Go client library for the Sophos UTM REST API with zero dependencies.\ngo-sptrans - Go client library for the SPTrans Olho Vivo API.\ngo-telegraph - Telegraph publishing platform API client.\ngo-trending - Go library for accessing trending repositories and developers at Github.\ngo-twitch - Go client for interacting with the Twitch v3 API.\ngo-twitter - Go client library for the Twitter v1.1 APIs.\ngo-unsplash - Go client library for the Unsplash.com API.\ngo-xkcd - Go client for the xkcd API.\ngolyrics - Golyrics is a Go library to fetch music lyrics data from the Wikia website.\ngomalshare - Go library MalShare API malshare.com\nGoMusicBrainz - Go MusicBrainz WS2 client library.\ngoogle - Auto-generated Google APIs for Go.\ngoogle-analytics - Simple wrapper for easy google analytics reporting.\ngoogle-cloud - Google Cloud APIs Go Client Library.\ngoogle-email-audit-api - Go client library for Google G Suite Email Audit API.\ngostorm - GoStorm is a Go library that implements the communications protocol required to write Storm spouts and Bolts in Go that communicate with the Storm shells.\nhipchat - This project implements a golang client library for the Hipchat API.\nhipchat (xmpp) - A golang package to communicate with HipChat over XMPP.\nigdb - Go client for the Internet Game Database API.\nlastpass-go - Go client library for the LastPass API.\nlibgoffi - Library adapter toolbox for native libffi integration\nMedium - Golang SDK for Medium's OAuth2 API.\nmegos - Client library for accessing an Apache Mesos cluster.\nminio-go - Minio Go Library for Amazon S3 compatible cloud storage.\nmixpanel - Mixpanel is a library for tracking events and sending Mixpanel profile updates to Mixpanel from your go applications.\npatreon-go - Go library for Patreon API.\npaypal - Wrapper for PayPal payment API.\nplaylyfe - The Playlyfe Rest API Go SDK.\npushover - Go wrapper for the Pushover API.\nrrdaclient - Go Library to access statdns.com API, which is in turn RRDA API. DNS Queries over HTTP.\nshopify - Go Library to make CRUD request to the Shopify API.\nsimples3 - Simple no frills AWS S3 Library using REST with V4 Signing written in Go.\nslack - Slack API in Go.\nsmite - Go package to wraps access to the Smite game API.\nspotify - Go Library to access Spotify WEB API.\nsteam - Go Library to interact with Steam game servers.\nstripe - Go client for the Stripe API.\ntextbelt - Go client for the textbelt.com txt messaging API.\ntranslate - Go online translation package.\nTrello - Go wrapper for the Trello API.\nTripAdvisor - Go wrapper for the TripAdvisor API.\ntumblr - Go wrapper for the Tumblr v2 API.\nuptimerobot - Go wrapper and command-line client for the Uptime Robot v2 API.\nvl-go - Go client library around the VerifID identity verification layer API.\nwebhooks - Webhook receiver for GitHub and Bitbucket.\nwit-go - Go client for wit.ai HTTP API.\nynab - Go wrapper for the YNAB API.\nzooz - Go client for the Zooz API.\n\nUtilities\nGeneral utilities and tools to make your life easier.\n\napm - Process manager for Golang applications with an HTTP API.\nbackscanner - A scanner similar to bufio.Scanner, but it reads and returns lines in reverse order, starting at a given position and going backward.\nbeyond - The Go tool that will drive you to the AOP world!\nblank - Verify or remove blanks and whitespace from strings.\nboilr - Blazingly fast CLI tool for creating projects from boilerplate templates.\nchyle - Changelog generator using a git repository with multiple configuration possibilities.\ncircuit - An efficient and feature complete Hystrix like Go implementation of the circuit breaker pattern.\ncircuitbreaker - Circuit Breakers in Go.\nclockwork - A simple fake clock for golang.\ncmd - Library for executing shell commands on osx, windows and linux.\ncommand - Command pattern for Go with thread safe serial and parallel dispatcher.\ncopy-pasta - Universal multi-workstation clipboard that uses S3 like backend for the storage.\nctop - Top-like interface (e.g. htop) for container metrics.\nctxutil - A collection of utility functions for contexts.\ndbt - A framework for running self-updating signed binaries from a central, trusted repository.\nDeath - Managing go application shutdown with signals.\nDeepcopier - Simple struct copying for Go.\ndelve - Go debugger.\ndlog - Compile-time controlled logger to make your release smaller without removing debug calls.\nergo - The management of multiple local services running over different ports made easy.\nevaluator - Evaluate an expression dynamicly based on s-expression. It's simple and easy to extend.\nfiletype - Small package to infer the file type checking the magic numbers signature.\nfiller - small utility to fill structs using \"fill\" tag.\nfilter - provide filtering, sanitizing, and conversion of Go data.\nfzf - Command-line fuzzy finder written in Go.\ngaper - Builds and restarts a Go project when it crashes or some watched file changes.\ngenerate - runs go generate recursively on a specified path or environment variable and can filter by regex.\nghokin - Parallelized formatter with no external dependencies for gherkin (cucumber, behat...).\ngit-time-metric - Simple, seamless, lightweight time tracking for Git.\ngo-astitodo - Parse TODOs in your GO code.\ngo-bind-plugin - go:generate tool for wrapping symbols exported by golang plugins (1.8 only).\ngo-bsdiff - Pure Go bsdiff and bspatch libraries and CLI tools.\ngo-dry - DRY (don't repeat yourself) package for Go.\ngo-funk - Modern Go utility library which provides helpers (map, find, contains, filter, chunk, reverse, ...).\ngo-health - Health package simplifies the way you add health check to your services.\ngo-httpheader - Go library for encoding structs into Header fields.\ngo-problemdetails - Go package for working with Problem Details.\ngo-rate - Timed rate limiter for Go.\ngo-sitemap-generator - XML Sitemap generator written in Go.\ngo-trigger - Go-lang global event triggerer, Register Events with an id and trigger the event from anywhere from your project.\ngoback - Go simple exponential backoff package.\ngodaemon - Utility to write daemons.\ngodropbox - Common libraries for writing Go services/applications from Dropbox.\ngohper - Various tools/modules help for development.\ngolarm - Fire alarms with system events.\ngolog - Easy and lightweight CLI tool to time track your tasks.\ngopencils - Small and simple package to easily consume REST APIs.\ngoplaceholder - a small golang lib to generate placeholder images.\ngoreadability - Webpage summary extractor using Facebook Open Graph and arc90's readability.\ngoreleaser - Deliver Go binaries as fast and easily as possible.\ngoreporter - Golang tool that does static analysis, unit testing, code review and generate code quality report.\ngoseaweedfs - SeaweedFS client library with almost full features.\ngostrutils - Collections of string manipulation and conversion functions.\ngotenv - Load environment variables from .env or any io.Reader in Go.\ngpath - Library to simplify access struct fields with Go's expression in reflection.\ngubrak - Golang utility library with syntactic sugar. It's like lodash, but for golang.\nhandy - Many utilities and helpers like string handlers/formatters and validators.\nhtcat - Parallel and Pipelined HTTP GET Utility.\nhub - wrap git commands with additional functionality to interact with github from the terminal.\nhystrix-go - Implements Hystrix patterns of programmer-defined fallbacks aka circuit breaker.\nimmortal - *nix cross-platform (OS agnostic) supervisor.\nintrinsic - Use x86 SIMD without writing any assembly code.\njump - Jump helps you navigate faster by learning your habits.\nkoazee - Library inspired in Lazy evaluation and functional programming that takes the hassle out of working with arrays.\nlimiters - Rate limiters for distributed applications in Golang with configurable back-ends and distributed locks.\nlrserver - LiveReload server for Go.\nmc - Minio Client provides minimal tools to work with Amazon S3 compatible cloud storage and filesystems.\nmergo - Helper to merge structs and maps in Golang. Useful for configuration default values, avoiding messy if-statements.\nmimemagic - Pure Go ultra performant MIME sniffing library/utility.\nmimesniffer - A MIME type sniffer for Go.\nmimetype - Package for MIME type detection based on magic numbers.\nminify - Fast minifiers for HTML, CSS, JS, XML, JSON and SVG file formats.\nminquery - MongoDB / mgo.v2 query that supports efficient pagination (cursors to continue listing documents where we left off).\nmmake - Modern Make.\nmoldova - Utility for generating random data based on an input template.\nmole - cli app to easily create ssh tunnels.\nmssqlx - Database client library, proxy for any master slave, master master structures. Lightweight and auto balancing in mind.\nmultitick - Multiplexor for aligned tickers.\nmyhttp - Simple API to make HTTP GET requests with timeout support.\nokrun - go run error steamroller.\nolaf - Twitter Snowflake implemented in Go.\nonecache - Caching library with support for multiple backend stores (Redis, Memcached, filesystem etc).\npanicparse - Groups similar goroutines and colorizes stack dump.\npeco - Simplistic interactive filtering tool.\npgo - Convenient functions for PHP community.\npm - Process (i.e. goroutine) manager with an HTTP API.\nrclient - Readable, flexible, simple-to-use client for REST APIs.\nrealize - Go build system with file watchers and live reload. Run, build and watch file changes with custom paths.\nrepeat - Go implementation of different backoff strategies useful for retrying operations and heartbeating.\nrequest - Go HTTP Requests for Humans\u2122.\nrerate - Redis-based rate counter and rate limiter for Go.\nrerun - Recompiling and rerunning go apps when source changes.\nrest-go - A package that provide many helpful methods for working with rest api.\nretry - The most advanced functional mechanism to perform actions repetitively until successful.\nretry - A simple but highly configurable retry package for Go.\nretry - Simple and easy retry mechanism package for Go.\nretry - A pretty simple library to ensure your work to be done.\nretry-go - Retrying made simple and easy for golang.\nrobustly - Runs functions resiliently, catching and restarting panics.\nscan - Scan golang sql.Rows directly to structs, slices, or primitive types.\nserve - A static http server anywhere you need.\nshutdown - App shutdown hooks for os.Signal handling.\nsilk - Read silk netflow files.\nslice - Type-safe functions for common Go slice operations.\nsliceconv - Slice conversion between primitive types.\nslicer - Makes working with slices easier.\nspinner - Go package to easily provide a terminal spinner with options.\nsqlx - provides a set of extensions on top of the excellent built-in database/sql package.\nsslice - Create a slice which is always sorted.\nStorm - Simple and powerful toolkit for BoltDB.\nstructs - Implement simple functions to manipulate structs.\nTask - simple \"Make\" alternative.\ntoolbox - Slice, map, multimap, struct, function, data conversion utilities. Service router, macro evaluator, tokenizer.\nugo - ugo is slice toolbox with concise syntax for Go.\nUNIS - Common Architecture\u2122 for String Utilities in Go.\nusql - usql is a universal command-line interface for SQL databases.\nutil - Collection of useful utility functions. (strings, concurrency, manipulations, ...).\nwuzz - Interactive cli tool for HTTP inspection.\nxferspdy - Xferspdy provides binary diff and patch library in golang.\n\nUUID\nLibraries for working with UUIDs.\n\ngoid - Generate and Parse RFC4122 compliant V4 UUIDs.\nnanoid - A tiny and efficient Go unique string ID generator.\nsno - Compact, sortable and fast unique IDs with embedded metadata.\nulid - Go implementation of ULID (Universally Unique Lexicographically Sortable Identifier).\nuniq - No hassle safe, fast unique identifiers with commands.\nuuid - Generate, encode, and decode UUIDs v1 with fast or cryptographic-quality random node identifier.\nuuid - Implementation of Universally Unique Identifier (UUID). Supports both creation and parsing of UUIDs. Actively maintained fork of satori uuid.\nwuid - An extremely fast unique number generator, 10-135 times faster than UUID.\n\nValidation\nLibraries for validation.\n\ncheckdigit - Provide check digit algorithms (Luhn, Verhoeff, Damm) and calculators (ISBN, EAN, JAN, UPC, etc.).\ngovalidator - Validators and sanitizers for strings, numerics, slices and structs.\ngovalidator - Validate Golang request data with simple rules. Highly inspired by Laravel's request validation.\njio - jio is a json schema validator similar to joi.\nozzo-validation - Supports validation of various data types (structs, strings, maps, slices, etc.) with configurable and extensible validation rules specified in usual code constructs instead of struct tags.\nterraform-validator - A norms and conventions validator for Terraform.\nvalidate - Go package for data validation and filtering. support validate Map, Struct, Request(Form, JSON, url.Values, Uploaded Files) data and more features.\nvalidate - This package provides a framework for writing validations for Go applications.\nvalidator - Go Struct and Field validation, including Cross Field, Cross Struct, Map, Slice and Array diving.\n\nVersion Control\nLibraries for version control.\n\ngh - Scriptable server and net/http middleware for GitHub Webhooks.\ngit2go - Go bindings for libgit2.\ngo-git - highly extensible Git implementation in pure Go.\ngo-vcs - manipulate and inspect VCS repositories in Go.\nhercules - gaining advanced insights from Git repository history.\nhgo - Hgo is a collection of Go packages providing read-access to local Mercurial repositories.\n\nVideo\nLibraries for manipulating video.\n\ngmf - Go bindings for FFmpeg av* libraries.\ngo-astisub - Manipulate subtitles in GO (.srt, .stl, .ttml, .webvtt, .ssa/.ass, teletext, .smi, etc.).\ngo-astits - Parse and demux MPEG Transport Streams (.ts) natively in GO.\ngo-m3u8 - Parser and generator library for Apple m3u8 playlists.\ngoav - Comphrensive Go bindings for FFmpeg.\ngst - Go bindings for GStreamer.\nlibgosubs - Subtitle format support for go. Supports .srt, .ttml, and .ass.\nlibvlc-go - Go bindings for libvlc 2.X/3.X/4.X (used by the VLC media player).\nm3u8 - Parser and generator library of M3U8 playlists for Apple HLS.\nv4l - Video capture library for Linux, written in Go.\n\nWeb Frameworks\nFull stack web frameworks.\n\naah - Scalable, performant, rapid development Web framework for Go.\nAero - High-performance web framework for Go, reaches top scores in Lighthouse.\nAir - An ideally refined web framework for Go.\nBanjo - Very simple and fast web framework for Go.\nBeego - beego is an open-source, high-performance web framework for the Go programming language.\nBuffalo - Bringing the productivity of Rails to Go!\nEcho - High performance, minimalist Go web framework.\nFireball - More \"natural\" feeling web framework.\nFlamingo - Framework for pluggable web projects. Including a concept for modules and offering features for DI, Configareas, i18n, template engines, graphql, observability, security, events, routing & reverse routing etc.\nGin - Gin is a web framework written in Go! It features a martini-like API with much better performance, up to 40 times faster. If you need performance and good productivity.\nGinrpc - Gin parameter automatic binding tool,gin rpc tools.\nGizmo - Microservice toolkit used by the New York Times.\ngo-json-rest - Quick and easy way to setup a RESTful JSON API.\ngo-rest - Small and evil REST framework for Go.\nGoa - Goa provides a holistic approach for developing remote APIs and microservices in Go.\ngoa - goa is just like koajs for golang, it is a flexible, light, high-performance and extensible web framework based on middleware.\nGolax - A non Sinatra fast HTTP framework with support for Google custom methods, deep interceptors, recursion and more.\nGolf - Golf is a fast, simple and lightweight micro-web framework for Go. It comes with powerful features and has no dependencies other than the Go Standard Library.\nGondola - The web framework for writing faster sites, faster.\ngongular - Fast Go web framework with input mapping/validation and (DI) Dependency Injection.\nhiboot - hiboot is a high performance web application framework with auto configuration and dependency injection support.\nMacaron - Macaron is a high productive and modular design web framework in Go.\nmango - Mango is a modular web-application framework for Go, inspired by Rack, and PEP333.\nMicroservice - The framework for the creation of microservices, written in Golang.\nneo - Neo is minimal and fast Go Web Framework with extremely simple API.\npatron - Patron is a microservice framework following best cloud practices with a focus on productivity.\nResoursea - REST framework for quickly writing resource based services.\nREST Layer - Framework to build REST/GraphQL API on top of databases with mostly configuration over code.\nRevel - High-productivity web framework for the Go language.\nrex - Rex is a library for modular development built upon gorilla/mux, fully compatible with net/http.\nrux - Simple and fast web framework for build golang HTTP applications.\ntango - Micro & pluggable web framework for Go.\ntigertonic - Go framework for building JSON web services inspired by Dropwizard.\nuAdmin - Fully featured web framework for Golang, inspired by Django.\nutron - Lightweight MVC framework for Go(Golang).\nvox - A golang web framework for humans, inspired by Koa heavily.\nWebGo - A micro-framework to build web apps; with handler chaining, middleware and context injection. With standard library compliant HTTP handlers(i.e. http.HandlerFunc).\nYARF - Fast micro-framework designed to build REST APIs and web services in a fast and simple way.\n\nMiddlewares\nActual middlewares\n\nclient-timing - An HTTP client for Server-Timing header.\nCORS - Easily add CORS capabilities to your API.\nformjson - Transparently handle JSON input as a standard form POST.\ngo-server-timing - Add/parse Server-Timing header.\nLimiter - Dead simple rate limit middleware for Go.\nln-paywall - Go middleware for monetizing APIs on a per-request basis with the Lightning Network (Bitcoin).\nTollbooth - Rate limit HTTP request handler.\nXFF - Handle X-Forwarded-For header and friends.\n\nLibraries for creating HTTP middlewares\n\nalice - Painless middleware chaining for Go.\ncatena - http.Handler wrapper catenation (same API as \"chain\").\nchain - Handler wrapper chaining with scoped data (net/context-based \"middleware\").\ngo-wrap - Small middlewares package for net/http.\ngores - Go package that handles HTML, JSON, XML and etc. responses. Useful for RESTful APIs.\ninterpose - Minimalist net/http middleware for golang.\nmuxchain - Lightweight middleware for net/http.\nnegroni - Idiomatic HTTP middleware for Golang.\nrender - Go package for easily rendering JSON, XML, and HTML template responses.\nrenderer - Simple, lightweight and faster response (JSON, JSONP, XML, YAML, HTML, File) rendering package for Go.\nrye - Tiny Go middleware library (with canned Middlewares) that supports JWT, CORS, Statsd, and Go 1.7 context.\nstats - Go middleware that stores various information about your web application.\n\nRouters\n\nalien - Lightweight and fast http router from outer space.\nbellt - A simple Go HTTP router.\nBone - Lightning Fast HTTP Multiplexer.\nBxog - Simple and fast HTTP router for Go. It works with routes of varying difficulty, length and nesting. And he knows how to create a URL from the received parameters.\nchi - Small, fast and expressive HTTP router built on net/context.\nfasthttprouter - High performance router forked from httprouter. The first router fit for fasthttp.\nFastRouter - a fast, flexible HTTP router written in Go.\ngocraft/web - Mux and middleware package in Go.\nGoji - Goji is a minimalistic and flexible HTTP request multiplexer with support for net/context.\ngoroute - Simple yet powerful HTTP request multiplexer.\nGoRouter - GoRouter is a Server/API micro framwework, HTTP request router, multiplexer, mux that provides request router with middleware supporting net/context.\ngowww/router - Lightning fast HTTP router fully compatible with the net/http.Handler interface.\nhttprouter - High performance router. Use this and the standard http handlers to form a very high performance web framework.\nhttptreemux - High-speed, flexible tree-based HTTP router for Go. Inspiration from httprouter.\nlars - Is a lightweight, fast and extensible zero allocation HTTP router for Go used to create customizable frameworks.\nmux - Powerful URL router and dispatcher for golang.\nozzo-routing - An extremely fast Go (golang) HTTP router that supports regular expression route matching. Comes with full support for building RESTful APIs.\npure - Is a lightweight HTTP router that sticks to the std \"net/http\" implementation.\nSiesta - Composable framework to write middleware and handlers.\nvestigo - Performant, stand-alone, HTTP compliant URL Router for go web applications.\nvioletear - Go HTTP router.\nxmux - High performance muxer based on httprouter with net/context support.\nxujiajun/gorouter - A simple and fast HTTP router for Go.\n\nWindows\n\nd3d9 - Go bindings for Direct3D9.\ngo-ole - Win32 OLE implementation for golang.\ngosddl - Converter from SDDL-string to user-friendly JSON. SDDL consist of four part: Owner, Primary Group, DACL, SACL.\n\nXML\nLibraries and tools for manipulating XML.\n\nXML-Comp - Simple command line XML comparer that generates diffs of folders, files and tags.\nxml2map - XML to MAP converter written Golang.\nxmlwriter - Procedural XML generation API based on libxml2's xmlwriter module.\nxpath - XPath package for Go.\nxquery - XQuery lets you extract data from HTML/XML documents using XPath expression.\nzek - Generate a Go struct from XML.\n\nTools\nGo software and plugins.\nCode Analysis\n\napicompat - Checks recent changes to a Go project for backwards incompatible changes.\ndupl - Tool for code clone detection.\nerrcheck - Errcheck is a program for checking for unchecked errors in Go programs.\ngcvis - Visualise Go program GC trace data in real time.\ngo-checkstyle - checkstyle is a style check tool like java checkstyle. This tool inspired by java checkstyle, golint. The style referred to some points in Go Code Review Comments.\ngo-cleanarch - go-cleanarch was created to validate Clean Architecture rules, like a The Dependency Rule and interaction between packages in your Go projects.\ngo-critic - source code linter that brings checks that are currently not implemented in other linters.\ngo-mod-outdated - An easy way to find outdated dependencies of your Go projects.\ngo-outdated - Console application that displays outdated packages.\ngoast-viewer - Web based Golang AST visualizer.\nGoCover.io - GoCover.io offers the code coverage of any golang package as a service.\ngoimports - Tool to fix (add, remove) your Go imports automatically.\nGolangCI - GolangCI is an automated Golang code review service for GitHub pull requests. Service is open source and it's free for open source projects.\nGoLint - Golint is a linter for Go source code.\nGolint online - Lints online Go source files on GitHub, Bitbucket and Google Project Hosting using the golint package.\nGoPlantUML - Library and CLI that generates text plantump class diagram containing information about structures and interfaces with the relationship among them.\ngoreturns - Adds zero-value return statements to match the func return types.\ngosimple - gosimple is a linter for Go source code that specialises on simplifying code.\ngostatus - Command line tool, shows the status of repositories that contain Go packages.\nlint - Run linters as part of go test.\nphp-parser - A Parser for PHP written in Go.\nstaticcheck - staticcheck is go vet on steroids, applying a ton of static analysis checks you might be used to from tools like ReSharper for C#.\ntarp - tarp finds functions and methods without direct unit tests in Go source code.\nunconvert - Remove unnecessary type conversions from Go source.\nunused - unused checks Go code for unused constants, variables, functions and types.\nvalidate - Automatically validates struct fields with tags.\n\nEditor Plugins\n\nGo plugin for JetBrains IDEs - Go plugin for JetBrains IDEs.\ngo-language-server - A wrapper to turn the VSCode go extension into a language server supporting the language-server-protocol.\ngo-mode - Go mode for GNU/Emacs.\ngo-plus - Go (Golang) Package For Atom That Adds Autocomplete, Formatting, Syntax Checking, Linting and Vetting.\ngocode - Autocompletion daemon for the Go programming language.\ngoprofiling - This extension adds benchmark profiling support for the Go language to VS Code.\nGoSublime - Golang plugin collection for the text editor SublimeText 3 providing code completion and other IDE-like features.\ngounit-vim - Vim plugin for generating Go tests based on the function's or method's signature.\ntheia-go-extension - Go language support for the Theia IDE.\nvim-compiler-go - Vim plugin to highlight syntax errors on save.\nvim-go - Go development plugin for Vim.\nvscode-go - Extension for Visual Studio Code (VS Code) which provides support for the Go language.\nWatch - Runs a command in an acme win on file changes.\n\nGo Generate Tools\n\ngeneric - flexible data type for Go.\ngenny - Elegant generics for Go.\ngocontracts - brings design-by-contract to Go by synchronizing the code with the documentation.\ngonerics - Idiomatic Generics in Go.\ngotests - Generate Go tests from your source code.\ngounit - Generate Go tests using your own templates.\nhasgo - Generate Haskell inspired functions for your slices.\nre2dfa - Transform regular expressions into finite state machines and output Go source code.\nTOML-to-Go - Translates TOML into a Go type in the browser instantly.\n\nGo Tools\n\ncolorgo - Wrapper around go command for colorized go build output.\ndepth - Visualize dependency trees of any package by analyzing imports.\ngb - An easy to use project based build tool for the Go programming language.\ngenerator-go-lang - A Yeoman generator to get new Go projects started.\ngilbert - Build system and task runner for Go projects.\ngo-callvis - Visualize call graph of your Go program using dot format.\ngo-james - Go project skeleton creator, builds and tests your projects without the manual setup.\ngo-pkg-complete - Bash completion for go and wgo.\ngo-swagger - Swagger 2.0 implementation for go. Swagger is a simple yet powerful representation of your RESTful API.\ngodbg - Implementation of Rusts dbg! macro for quick and easy debugging during development.\ngothanks - GoThanks automatically stars your go.mod github dependencies, sending this way some love to their maintainers.\nOctoLinker - Navigate through go files efficiently with the OctoLinker browser extension for GitHub.\nrichgo - Enrich go test outputs with text decorations.\nrts - RTS: response to struct. Generates Go structs from server responses.\n\nSoftware Packages\nSoftware written in Go.\nDevOps Tools\n\naptly - aptly is a Debian repository management tool.\naurora - Cross-platform web-based Beanstalkd queue server console.\nawsenv - Small binary that loads Amazon (AWS) environment variables for a profile.\nBlast - A simple tool for API load testing and batch jobs.\nbombardier - Fast cross-platform HTTP benchmarking tool.\nbosun - Time Series Alerting Framework.\nDepCharge - Helps orchestrating the execution of commands across the many dependencies in larger projects.\nDockerfile-Generator - A go library and an executable that produces valid Dockerfiles using various input channels.\ndogo - Monitoring changes in the source file and automatically compile and run (restart).\ndrone-jenkins - Trigger downstream Jenkins jobs using a binary, docker or Drone CI.\ndrone-scp - Copy files and artifacts via SSH using a binary, docker or Drone CI.\nDropship - Tool for deploying code via cdn.\neasyssh-proxy - Golang package for easy remote execution through SSH and SCP downloading via ProxyCommand.\nfac - Command-line user interface to fix git merge conflicts.\ngaia - Build powerful pipelines in any programming language.\nGitea - Fork of Gogs, entirely community driven.\ngitea-github-migrator - Migrate all your GitHub repositories, issues, milestones and labels to your Gitea instance.\ngo-furnace - Hosting solution written in Go. Deploy your Application with ease on AWS, GCP or DigitalOcean.\ngo-selfupdate - Enable your Go applications to self update.\ngobrew - gobrew lets you easily switch between multiple versions of go.\ngodbg - Web-based gdb front-end application.\nGogs - A Self Hosted Git Service in the Go Programming Language.\ngonative - Tool which creates a build of Go that can cross compile to all platforms while still using the Cgo-enabled versions of the stdlib packages.\ngovvv - \u201cgo build\u201d wrapper to easily add version information into Go binaries.\ngox - Dead simple, no frills Go cross compile tool.\ngoxc - build tool for Go, with a focus on cross-compiling and packaging.\ngrapes - Lightweight tool designed to distribute commands over ssh with ease.\nGVM - GVM provides an interface to manage Go versions.\nHey - Hey is a tiny program that sends some load to a web application.\njcli - Jenkins CLI allows you manage your Jenkins as an easy way.\nkala - Simplistic, modern, and performant job scheduler.\nkcli - Command line tool for inspecting kafka topics/partitions/messages.\nkubernetes - Container Cluster Manager from Google.\nlstags - Tool and API to sync Docker images across different registries.\nlwc - A live-updating version of the UNIX wc command.\nmanssh - manssh is a command line tool for managing your ssh alias config easily.\nMoby - Collaborative project for the container ecosystem to assemble container-based systems.\nMora - REST server for accessing MongoDB documents and meta data.\nostent - collects and displays system metrics and optionally relays to Graphite and/or InfluxDB.\nPacker - Packer is a tool for creating identical machine images for multiple platforms from a single source configuration.\nPewpew - Flexible HTTP command line stress tester.\nPomerium - Pomerium is an identity-aware access proxy.\nRodent - Rodent helps you manage Go versions, projects and track dependencies.\ns3gof3r - Small utility/library optimized for high speed transfer of large objects into and out of Amazon S3.\nScaleway-cli - Manage BareMetal Servers from Command Line (as easily as with Docker).\nscript - Making it easy to write shell-like scripts in Go for DevOps and system administration tasks.\nsg - Benchmarks a set of HTTP endpoints (like ab), with possibility to use the response code and data between each call for specific server stress based on its previous response.\nskm - SKM is a simple and powerful SSH Keys Manager, it helps you to manage your multiple SSH keys easily!\nStatusOK - Monitor your Website and REST APIs.Get Notified through Slack, E-mail when your server is down or response time is more than expected.\nterraform-provider-openapi - Terraform provider plugin that dynamically configures itself at runtime based on an OpenAPI document (formerly known as swagger file) containing the definitions of the APIs exposed.\ntraefik - Reverse proxy and load balancer with support for multiple backends.\nuTask - Automation engine that models and executes business processes declared in yaml.\nVegeta - HTTP load testing tool and library. It's over 9000!\nwebhook - Tool which allows user to create HTTP endpoints (hooks) that execute commands on the server.\nWide - Web-based IDE for Teams using Golang.\nwinrm-cli - Cli tool to remotely execute commands on Windows machines.\n\nOther Software\n\nborg - Terminal based search engine for bash snippets.\nboxed - Dropbox based blog engine.\nCherry - Tiny webchat server in Go.\nCircuit - Circuit is a programmable platform-as-a-service (PaaS) and/or Infrastructure-as-a-Service (IaaS), for management, discovery, synchronization and orchestration of services and hosts comprising cloud applications.\nComcast - Simulate bad network connections.\nconfd - Manage local application configuration files using templates and data from etcd or consul.\ncroc - Easily and securely send files or folders from one computer to another.\nDDNS - Personal DDNS client with Digital Ocean Networking DNS as backend.\nDocker - Open platform for distributed applications for developers and sysadmins.\nDocumize - Modern wiki software that integrates data from SaaS tools.\ndrive - Google Drive client for the commandline.\nDuplicacy - A cross-platform network and cloud backup tool based on the idea of lock-free deduplication.\ngfile - Securely transfer files between two computers, without any third party, over WebRTC.\nGo Package Store - App that displays updates for the Go packages in your GOPATH.\ngo-peerflix - Video streaming torrent client.\nGoBoy - Nintendo Game Boy Color emulator written in Go.\ngocc - Gocc is a compiler kit for Go written in Go.\nGoDNS - A dynamic DNS client tool, supports DNSPod & HE.net, written in Go.\nGoDocTooltip - Chrome extension for Go Doc sites, which shows function description as tooltip at function list.\nGoLand - Full featured cross-platform Go IDE.\nGor - Http traffic replication tool, for replaying traffic from production to stage/dev environments in real-time.\nhugo - Fast and Modern Static Website Engine.\nide - Browser accessible IDE. Designed for Go with Go.\nipe - Open source Pusher server implementation compatible with Pusher client libraries written in GO.\njoincap - Command-line utility for merging multiple pcap files together.\nJuju - Cloud-agnostic service deployment and orchestration - supports EC2, Azure, Openstack, MAAS and more.\nLeaps - Pair programming service using Operational Transforms.\nlgo - Interactive Go programming with Jupyter. It supports code completion, code inspection and 100% Go compatibility.\nlimetext - Lime Text is a powerful and elegant text editor primarily developed in Go that aims to be a Free and open-source software successor to Sublime Text.\nLiteIDE - LiteIDE is a simple, open source, cross-platform Go IDE.\nmockingjay - Fake HTTP servers and consumer driven contracts from one configuration file. You can also make the server randomly misbehave to help do more realistic performance tests.\nmyLG - Command Line Network Diagnostic tool written in Go.\nnaclpipe - Simple NaCL EC25519 based crypto pipe tool written in Go.\nnes - Nintendo Entertainment System (NES) emulator written in Go.\norange-cat - Markdown previewer written in Go.\nOrbit - A simple tool for running commands and generating files from templates.\npeg - Peg, Parsing Expression Grammar, is an implementation of a Packrat parser generator.\nPipe - A small and beautiful blogging platform.\nrestic - De-duplicating backup program.\nscc - Sloc Cloc and Code, a very fast accurate code counter with complexity calculations and COCOMO estimates.\nSeaweed File System - Fast, Simple and Scalable Distributed File System with O(1) disk seek.\nshell2http - Executing shell commands via http server (for prototyping or remote control).\nsnap - Powerful telemetry framework.\nSnitch - Simple way to notify your team and many tools when someone has deployed any application via Tsuru.\nStack Up - Stack Up, a super simple deployment tool - just Unix - think of it like 'make' for a network of servers.\nsyncthing - Open, decentralized file synchronization tool and protocol.\nterm-quiz - Quizzes for your terminal.\ntoxiproxy - Proxy to simulate network and system conditions for automated tests.\ntsuru - Extensible and open source Platform as a Service software.\nvFlow - High-performance, scalable and reliable IPFIX, sFlow and Netflow collector.\nwellington - Sass project management tool, extends the language with sprite functions (like Compass).\n\nResources\nWhere to discover new Go libraries.\nBenchmarks\n\nautobench - Framework to compare the performance between different Go versions.\ngo-benchmark-app - Powerful HTTP-benchmark tool mixed with \u0410b, Wrk, Siege tools. Gathering statistics and various parameters for benchmarks and comparison results.\ngo-benchmarks - Few miscellaneous Go microbenchmarks. Compare some language features to alternative approaches.\ngo-http-routing-benchmark - Go HTTP request router benchmark and comparison.\ngo-web-framework-benchmark - Go web framework benchmark.\ngo_serialization_benchmarks - Benchmarks of Go serialization methods.\ngocostmodel - Benchmarks of common basic operations for the Go language.\ngolang-sql-benchmark - Collection of benchmarks for popular Go database/SQL utilities.\ngospeed - Go micro-benchmarks for calculating the speed of language constructs.\nkvbench - Key/Value database benchmark.\nskynet - Skynet 1M threads microbenchmark.\nspeedtest-resize - Compare various Image resize algorithms for the Go language.\n\nConferences\n\nCapital Go - Washington, D.C., USA.\ndotGo - Paris, France.\nGoCon - Tokyo, Japan.\nGoDays - Berlin, Germany.\nGoLab - Florence, Italy.\nGolangUK - London, UK.\nGopherChina - Shanghai, China.\nGopherCon - Denver, USA.\nGopherCon Australia - Sydney, Australia.\nGopherCon Brazil - Florian\u00f3polis, BR.\nGopherCon Europe - Berlin, Germany.\nGopherCon India - Pune, India.\nGopherCon Israel - Tel Aviv, Israel.\nGopherCon Russia - Moscow, Russia.\nGopherCon Singapore - Mapletree Business City, Singapore.\nGopherCon Vietnam - Ho Chi Minh City, Vietnam.\nGothamGo - New York City, USA.\nGoWayFest - Minsk, Belarus.\n\nE-Books\n\nA Go Developer's Notebook\nAn Introduction to Programming in Go\nBuild Web Application with Golang\nBuilding Web Apps With Go\nGo 101 - A book focusing on Go syntax/semantics and all kinds of details.\nGo Bootcamp\nGo Succinctly - in Persian.\nGoBooks - A curated list of Go books.\nLearning Go\nNetwork Programming With Go\nThe Go Programming Language\nThe Golang Standard Library by Example (Chinese)\nWeb Application with Go the Anti-Textbook\nWriting A Compiler In Go\nWriting An Interpreter In Go\n\nGophers\n\nFree Gophers Pack - Gopher graphics pack by Maria Letta with illustrations and emotional characters in vector and raster.\nGo-gopher-Vector - Go gopher Vector Data [.ai, .svg].\ngopher-logos - adorable gopher logos.\ngopher-stickers\ngopher-vector\ngophericons\ngopherize.me - Gopherize yourself.\ngophers - Gopher artworks by Ashley McNamara.\ngophers - Free gophers.\ngophers - random gopher graphics.\ngophers - Gopher amigurumi toy pattern.\n\nMeetups\n\nBasel Go Meetup\nBerlin Golang\nBrisbane Gophers\nCanberra Gophers\nGo Language NYC\nGo London User Group\nGo Toronto\nGo User Group Atlanta\nGoBridge, San Francisco, CA\nGoJakarta\nGolang Amsterdam\nGolang Argentina\nGolang Baltimore, MD\nGolang Bangalore\nGolang Belo Horizonte - Brazil\nGolang Boston\nGolang Bulgaria\nGolang Cardiff, UK\nGolang Copenhagen\nGolang DC, Arlington, VA\nGolang Dorset, UK\nGolang Gurgaon, India\nGolang Hamburg - Germany\nGolang Israel\nGolang Joinville - Brazil\nGolang Korea\nGolang Lima - Peru\nGolang Lyon\nGolang Marseille\nGolang Melbourne\nGolang Mountain View\nGolang New York\nGolang Paris\nGolang Pune\nGolang Singapore\nGolang Stockholm\nGolang Sydney, AU\nGolang S\u00e3o Paulo - Brazil\nGolang Taipei\nGolang Vancouver, BC\nGolang \u041a\u0430\u0437\u0430\u043d\u044c\nGolang \u041c\u043e\u0441\u043a\u0432\u0430\nGolang \u041f\u0438\u0442\u0435\u0440\nGoSF - San Francisco, CA\nIstanbul Golang\nSeattle Go Programmers\nUkrainian Golang User Groups\nUtah Go User Group\nWomen Who Go - San Francisco, CA\n\nAdd the group of your city/country here (send PR)\nTwitter\n\n@golang\n@golang_news\n@golangch\n@golangflow\n@golangweekly\n\nWebsites\n\nAwesome Go @LibHunt - Your go-to Go Toolbox.\nAwesome Remote Job - Curated list of awesome remote jobs. A lot of them are looking for Go hackers.\nawesome-awesomeness - List of other amazingly awesome lists.\nCodinGame - Learn Go by solving interactive tasks using small games as practical examples.\nGo Blog - The official Go blog.\nGo Challenge - Learn Go by solving problems and getting feedback from Go experts.\nGo Community on Hashnode - Community of Gophers on Hashnode.\nGo Forum - Forum to discuss Go.\nGo In 5 Minutes - 5 minute screencasts focused on getting one thing done.\nGo Projects - List of projects on the Go community wiki.\nGo Report Card - A report card for your Go package.\ngo.dev - A hub for Go developers.\ngocryforhelp - Collection of Go projects that needs help. Good place to start your open-source way in Go.\ngodoc.org - Documentation for open source Go packages.\nGolang Developer Jobs - Developer Jobs exclusivly for Golang related Roles.\nGolang Flow - Post Updates, News, Packages and more.\nGolang News - Links and news about Go programming.\ngolang-graphics - Collection of Go images, graphics, and art.\ngolang-nuts - Go mailing list.\nGoogle Plus Community - The Google+ community for #golang enthusiasts.\nGopher Community Chat - Join Our New Slack Community For Gophers (Understand how it came).\nGophercises - Free coding exercises for budding gophers.\ngowalker.org - Go Project API documentation.\njson2go - Advanced JSON to Go struct conversion - online tool.\njustforfunc - Youtube channel dedicated to Go programming language tips and tricks, hosted by  Francesc Campoy @francesc.\nMade with Golang\nr/Golang - News about Go.\nstudygolang - The community of studygolang in China.\nTrending Go repositories on GitHub today - Good place to find new Go libraries.\nTutorialEdge - Golang\n\nTutorials\n\n50 Shades of Go - Traps, Gotchas, and Common Mistakes for New Golang Devs.\nA Guide to Golang E-Commerce - Building a Golang site for e-commerce (demo included).\nA Tour of Go - Interactive tour of Go.\nBuild web application with Golang - Golang ebook intro how to build a web app with golang.\nBuilding Go Web Applications and Microservices Using Gin - Get familiar with Gin and find out how it can help you reduce boilerplate code and build a request handling pipeline.\nCaching Slow Database Queries - How to cache slow database queries.\nCanceling MySQL - How to cancel MySQL queries.\nEthereum Development with Go - A little e-book on Ethereum Development with Go.\nGames With Go - A video series teaching programming and game development.\nGo By Example - Hands-on introduction to Go using annotated example programs.\nGo Cheat Sheet - Go's reference card.\nGo database/sql tutorial - Introduction to database/sql.\nGo Playground for iOS - Interactively edit & play Go snippets on your mobile device.\nGo WebAssembly Tutorial - Building a Simple Calculator\ngo-patterns - Curated list of Go design patterns, recipes and idioms.\nGolang for Node.js Developers - Examples of Golang compared to Node.js for learning.\nGolangbot - Tutorials to get started with programming in Go.\nGolangCode - Collection of code snippets and tutorials to help tackle every day issues.\nHackr.io - Learn Go from the best online golang tutorials submitted & voted by the golang programming community.\nHow to Use Godog for Behavior-driven Development in Go - Get started with Godog \u2014 a Behavior-driven development framework for building and testing Go applications.\nLearn Go with TDD - Learn Go with test-driven development.\nLearning Golang - From zero to hero - Getting started with golang for beginner.\npackage main - YouTube channel about Programming in Go.\nProgramming with Google Go - Coursera Specialization to learn about Go from scratch.\nThe world\u2019s easiest introduction to WebAssembly with Golang\nWorking with Go - Intro to go for experienced programmers.\nYour basic Go - Huge collection of tutorials and how to's.\n\n\n"}, {"repo": "apple/swift", "language": "C++", "readme": "\n\nSwift Programming Language\n\n\n\n\nArchitecture\nMaster\nPackage\n\n\n\n\nmacOS\nx86_64\n\n\n\n\nUbuntu 16.04\nx86_64\n\n\n\n\nUbuntu 18.04\nx86_64\n\n\n\n\n\nSwift Community-Hosted CI Platforms\n\n\n\nOS\nArchitecture\nBuild\n\n\n\n\nUbuntu 16.04 \nPPC64LE\n\n\n\nUbuntu 16.04 \nAArch64\n\n\n\nAndroid\nARMv7\n\n\n\nAndroid\nAArch64\n\n\n\nWindows 2019\nx86_64\n\n\n\n\nSwift TensorFlow Community-Hosted CI Platforms\n\n\n\nOS\nArchitecture\nBuild\n\n\n\n\nUbuntu 16.04\nx86_64\n\n\n\nmacOS 10.13\nx86_64\n\n\n\nUbuntu 16.04 (GPU)\nx86_64\n\n\n\n\nWelcome to Swift\nSwift is a high-performance system programming language.  It has a clean\nand modern syntax, offers seamless access to existing C and Objective-C code\nand frameworks, and is memory safe by default.\nAlthough inspired by Objective-C and many other languages, Swift is not itself a\nC-derived language. As a complete and independent language, Swift packages core\nfeatures like flow control, data structures, and functions, with high-level\nconstructs like objects, protocols, closures, and generics. Swift embraces\nmodules, eliminating the need for headers and the code duplication they entail.\nTo learn more about the programming language, visit swift.org.\n\nContributing to Swift\nGetting Started\n\nSystem Requirements\nGetting Sources for Swift and Related Projects\nBuilding Swift\nSwift Toolchains\nBuild Failures\n\n\nTesting Swift\nLearning More\nBuild Dependencies\n\nContributing to Swift\nContributions to Swift are welcomed and encouraged! Please see the\nContributing to Swift guide.\nTo be a truly great community, Swift.org needs to welcome\ndevelopers from all walks of life, with different backgrounds, and with a wide\nrange of experience. A diverse and friendly community will have more great\nideas, more unique perspectives, and produce more great code. We will work\ndiligently to make the Swift community welcoming to everyone.\nTo give clarity of what is expected of our members, Swift has adopted the\ncode of conduct defined by the Contributor Covenant. This document is used\nacross many open source communities, and we think it articulates our values\nwell. For more, see the Code of Conduct.\nGetting Started\nThese instructions give the most direct path to a working Swift development\nenvironment. To build from source you will need about 2 GB of disk space for the\nsource code and up to 70 GB of disk space for the build artifacts with full\ndebugging. Depending on your machine, a clean build can take a few minutes to\nseveral hours. Naturally, incremental builds are much faster.\nSystem Requirements\nmacOS, Ubuntu Linux LTS, and the latest Ubuntu Linux release are currently\nsupported as host development operating systems.\nPlease make sure you use Python 2.x. Python 3.x is not supported currently.\nmacOS\nTo build for macOS, you need Xcode 11.2.\nThe required version of Xcode changes frequently, and is often a beta release.\nCheck this document or the host information on https://ci.swift.org for the\ncurrent required version.\nYou will also need CMake and Ninja,\nwhich can be installed via a package manager:\nHomebrew\nbrew install cmake ninja\n\nMacPorts\nsudo port install cmake ninja\n\nInstructions for installing CMake and Ninja directly can be found below.\nLinux\nFor Ubuntu, you'll need the following development dependencies:\nsudo apt-get install git cmake ninja-build clang python uuid-dev libicu-dev icu-devtools libedit-dev libxml2-dev libsqlite3-dev swig libpython-dev libncurses5-dev pkg-config libcurl4-openssl-dev systemtap-sdt-dev tzdata rsync\n\nNote: LLDB currently requires at least swig-1.3.40 but will successfully build\nwith version 2 shipped with Ubuntu.\nBuild instructions for Ubuntu 14.04 LTS can be found here.\nGetting Sources for Swift and Related Projects\nFirst create a directory for all of the Swift sources:\nmkdir swift-source\ncd swift-source\n\nNote: This is important since update-checkout (see below) checks out\nrepositories next to the Swift source directory. This means that if one clones\nSwift and has other unrelated repositories, update-checkout may not clone those\nrepositories and will update them instead.\nVia HTTPS  For those checking out sources as read-only, HTTPS works best:\ngit clone https://github.com/apple/swift.git\n./swift/utils/update-checkout --clone\n\nVia SSH  For those who plan on regularly making direct commits,\ncloning over SSH may provide a better experience (which requires\nuploading SSH keys to GitHub):\ngit clone git@github.com:apple/swift.git\n./swift/utils/update-checkout --clone-with-ssh\n\nBuilding Swift\nThe build-script is a high-level build automation script that supports basic\noptions such as building a Swift-compatible LLDB, building the Swift Package\nManager, building for various platforms, running tests after builds, and more.\nThere are two primary build systems to use: Xcode and Ninja. The Xcode build\nsystem allows you to work in Xcode, but Ninja is a bit faster and supports\nmore environments.\nFirst, make sure that you're in the swift directory:\ncd swift\n\nTo build using Ninja, run:\nutils/build-script --release-debuginfo\n\nWhen developing Swift, it helps to build what you're working on in a debug\nconfiguration while building the rest of the project with optimizations. Below\nare some examples of using debug variants:\nutils/build-script --release-debuginfo --debug-swift # Swift frontend built in debug\nutils/build-script --release-debuginfo --debug-swift-stdlib # Standard library built in debug\nutils/build-script --release-debuginfo --debug-swift --force-optimized-typechecker # Swift frontend sans type checker built in debug\n\nLimiting the amount of debug code in the compiler has a very large impact on\nSwift compile times, and in turn the test execution time. If you want to build\nthe entire project in debug, you can run:\nutils/build-script --debug\n\nFor documentation of all available arguments, as well as additional usage\ninformation, see the inline help:\nutils/build-script -h\n\nXcode\nTo build using Xcode, specify the --xcode argument on any of the above commands.\nXcode can be used to edit the Swift source code, but it is not currently\nfully supported as a build environment for SDKs other than macOS. The generated\nXcode project does not integrate with the test runner, but the tests can be run\nwith the 'check-swift' target.\nBuild Products\nAll of the build products are placed in swift-source/build/${TOOL}-${MODE}/${PRODUCT}-${PLATFORM}/.\nIf macOS Swift with Ninja in DebugAssert mode was built, all of the products\nwould be in swift-source/build/Ninja-DebugAssert/swift-macosx-x86_64/. It\nhelps to save this directory as an environment variable for future use.\nexport SWIFT_BUILD_DIR=\"~/swift-source/build/Ninja-DebugAssert/swift-macosx-x86_64\"\n\nNinja\nOnce the first build has completed, Ninja can perform fast incremental builds of\nvarious products. These incremental builds are a big timesaver when developing\nand debugging.\ncd ${SWIFT_BUILD_DIR}\nninja swift\n\nThis will build the Swift compiler, but will not rebuild the standard library or\nany other target. Building the swift-stdlib target as an additional layer of\ntesting from time to time is also a good idea. To build just the standard\nlibrary, run:\nninja swift-stdlib\n\nIt is always a good idea to do a full build after using update-checkout.\nUsing Xcode\nTo open the Swift project in Xcode, open ${SWIFT_BUILD_DIR}/Swift.xcodeproj.\nIt will auto-create a lot of schemes for all of the available targets. A\ncommon debug flow would involve:\n\nSelect the 'swift' scheme.\nPull up the scheme editor (\u2318\u21e7<).\nSelect the 'Arguments' tab and click the '+'.\nAdd the command line options.\nClose the scheme editor.\nBuild and run.\n\nAnother option is to change the scheme to \"Wait for executable to be launched\",\nthen run the build product in Terminal.\nSwift Toolchains\nBuilding\nSwift toolchains are created using the script\nbuild-toolchain. This\nscript is used by swift.org's CI to produce snapshots and can allow for one to\nlocally reproduce such builds for development or distribution purposes. A typical\ninvocation looks like the following:\n  $ ./swift/utils/build-toolchain $BUNDLE_PREFIX\n\nwhere $BUNDLE_PREFIX is a string that will be prepended to the build\ndate to give the bundle identifier of the toolchain's Info.plist. For\ninstance, if $BUNDLE_PREFIX was com.example, the toolchain\nproduced will have the bundle identifier com.example.YYYYMMDD. It\nwill be created in the directory you run the script with a filename\nof the form: swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz.\nBeyond building the toolchain, build-toolchain also supports the\nfollowing (non-exhaustive) set of useful options::\n\n--dry-run: Perform a dry run build. This is off by default.\n--test: Test the toolchain after it has been compiled. This is off by default.\n--distcc: Use distcc to speed up the build by distributing the c++ part of\nthe swift build. This is off by default.\n\nMore options may be added over time. Please pass --help to\nbuild-toolchain to see the full set of options.\nInstalling into Xcode\nOn macOS if one wants to install such a toolchain into Xcode:\n\nUntar and copy the toolchain to one of /Library/Developer/Toolchains/ or\n~/Library/Developer/Toolchains/. E.x.:\n\n  $ sudo tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz -C /\n  $ tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz -C ~/\n\nThe script also generates an archive containing debug symbols which\ncan be installed over the main archive allowing symbolication of any\ncompiler crashes.\n  $ sudo tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx-symbols.tar.gz -C /\n  $ tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx-symbols.tar.gz -C ~/\n\n\nSpecify the local toolchain for Xcode's use via Xcode->Toolchains.\n\nBuild Failures\nMake sure you are using the correct release of Xcode.\nIf you have changed Xcode versions but still encounter errors that appear to\nbe related to the Xcode version, try passing --clean to build-script.\nWhen a new version of Xcode is released, you can update your build without\nrecompiling the entire project by passing the --reconfigure option.\nMake sure all repositories are up to date with the update-checkout command\ndescribed above.\nTesting Swift\nSee docs/Testing.md, in particular the section on lit.py.\nLearning More\nBe sure to look through the docs\ndirectory for more information about the compiler. In particular, the documents\ntitled Debugging the Swift Compiler and\nContinuous Integration for Swift are very\nhelpful to understand before submitting your first PR.\nBuilding Documentation\nTo read the compiler documentation, start by installing the\nSphinx documentation generator tool by running the\ncommand:\neasy_install -U \"Sphinx < 2.0\"\n\nOnce complete, you can build the Swift documentation by changing directory into\ndocs and typing make. This\ncompiles the .rst files in the docs\ndirectory into HTML in the docs/_build/html directory.\nMany of the docs are out of date, but you can see some historical design\ndocuments in the docs directory.\nAnother source of documentation is the standard library itself, located in\nstdlib. Much of the language is actually implemented in the library\n(including Int), and the standard library gives some examples of what can be\nexpressed today.\nBuild Dependencies\nCMake\nCMake is the core infrastructure used to configure builds of\nSwift and its companion projects; at least version 3.4.3 is required.\nOn macOS, you can download the CMake Binary Distribution,\nbundled as an application, copy it to /Applications, and add the embedded\ncommand line tools to your PATH:\nexport PATH=/Applications/CMake.app/Contents/bin:$PATH\n\nOn Linux, if you have not already installed Swift's development\ndependencies, you can download and install the CMake\npackage separately using the following command:\nsudo apt-get install cmake\n\nNinja\nNinja is the current recommended build system\nfor building Swift and is the default configuration generated by CMake. Pre-built\npackages\nare available for macOS and Linux distributions. You can also clone Ninja\nnext to the other projects and it will be bootstrapped automatically:\nVia HTTPS\ngit clone https://github.com/ninja-build/ninja.git && cd ninja\ngit checkout release\ncat README\n\nVia SSH\ngit clone git@github.com:ninja-build/ninja.git && cd ninja\ngit checkout release\ncat README\n\n\n"}, {"repo": "hakimel/reveal.js", "language": "JavaScript", "readme": "\nreveal.js  \nA framework for easily creating beautiful presentations using HTML. Check out the live demo.\nreveal.js comes with a broad range of features including nested slides, Markdown contents, PDF export, speaker notes and a JavaScript API. There's also a fully featured visual editor and platform for sharing reveal.js presentations at slides.com.\nTable of contents\n\nOnline Editor\nInstallation\n\nBasic setup\nFull setup\nFolder Structure\n\n\nInstructions\n\nMarkup\nMarkdown\nElement Attributes\nSlide Attributes\n\n\nConfiguration\nPresentation Size\nDependencies\nReady Event\nAuto-sliding\nKeyboard Bindings\nVertical Slide Navigation\nTouch Navigation\nLazy Loading\nAPI\n\nSlide Changed Event\nPresentation State\nSlide States\nSlide Backgrounds\nParallax Background\nSlide Transitions\nInternal links\nFragments\nFragment events\nCode syntax highlighting\nSlide number\nOverview mode\nFullscreen mode\nEmbedded media\nStretching elements\nResize Event\npostMessage API\n\n\nPDF Export\nTheming\nSpeaker Notes\n\nShare and Print Speaker Notes\nServer Side Speaker Notes\n\n\nPlugins\nMultiplexing\n\nMaster presentation\nClient presentation\nSocket.io server\n\n\nMathJax\nLicense\n\nMore reading\n\nChangelog: Up-to-date version history.\nExamples: Presentations created with reveal.js, add your own!\nBrowser Support: Explanation of browser support and fallbacks.\nPlugins: A list of plugins that can be used to extend reveal.js.\n\nOnline Editor\nPresentations are written using HTML or Markdown but there's also an online editor for those of you who prefer a graphical interface. Give it a try at https://slides.com.\nInstallation\nThe basic setup is for authoring presentations only. The full setup gives you access to all reveal.js features and plugins such as speaker notes as well as the development tasks needed to make changes to the source.\nBasic setup\nThe core of reveal.js is very easy to install. You'll simply need to download a copy of this repository and open the index.html file directly in your browser.\n\nDownload the latest version of reveal.js from https://github.com/hakimel/reveal.js/releases\nUnzip and replace the example contents in index.html with your own\nOpen index.html in a browser to view it\n\nFull setup\nSome reveal.js features, like external Markdown and speaker notes, require that presentations run from a local web server. The following instructions will set up such a server as well as all of the development tasks needed to make edits to the reveal.js source code.\n\n\nInstall Node.js (4.0.0 or later)\n\n\nClone the reveal.js repository\n$ git clone https://github.com/hakimel/reveal.js.git\n\n\nNavigate to the reveal.js folder\n$ cd reveal.js\n\n\nInstall dependencies\n$ npm install\n\n\nServe the presentation and monitor source files for changes\n$ npm start\n\n\nOpen http://localhost:8000 to view your presentation\nYou can change the port by using npm start -- --port=8001.\n\n\nFolder Structure\n\ncss/ Core styles without which the project does not function\njs/ Like above but for JavaScript\nplugin/ Components that have been developed as extensions to reveal.js\nlib/ All other third party assets (JavaScript, CSS, fonts)\n\nInstructions\nMarkup\nHere's a barebones example of a fully working reveal.js presentation:\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"css/reveal.css\">\n\t\t<link rel=\"stylesheet\" href=\"css/theme/white.css\">\n\t</head>\n\t<body>\n\t\t<div class=\"reveal\">\n\t\t\t<div class=\"slides\">\n\t\t\t\t<section>Slide 1</section>\n\t\t\t\t<section>Slide 2</section>\n\t\t\t</div>\n\t\t</div>\n\t\t<script src=\"js/reveal.js\"></script>\n\t\t<script>\n\t\t\tReveal.initialize();\n\t\t</script>\n\t</body>\n</html>\nThe presentation markup hierarchy needs to be .reveal > .slides > section where the section represents one slide and can be repeated indefinitely. If you place multiple section elements inside of another section they will be shown as vertical slides. The first of the vertical slides is the \"root\" of the others (at the top), and will be included in the horizontal sequence. For example:\n<div class=\"reveal\">\n\t<div class=\"slides\">\n\t\t<section>Single Horizontal Slide</section>\n\t\t<section>\n\t\t\t<section>Vertical Slide 1</section>\n\t\t\t<section>Vertical Slide 2</section>\n\t\t</section>\n\t</div>\n</div>\nMarkdown\nIt's possible to write your slides using Markdown. To enable Markdown, add the data-markdown attribute to your <section> elements and wrap the contents in a <textarea data-template> like the example below. You'll also need to add the plugin/markdown/marked.js and plugin/markdown/markdown.js scripts (in that order) to your HTML file.\nThis is based on data-markdown from Paul Irish modified to use marked to support GitHub Flavored Markdown. Sensitive to indentation (avoid mixing tabs and spaces) and line breaks (avoid consecutive breaks).\n<section data-markdown>\n\t<textarea data-template>\n\t\t## Page title\n\n\t\tA paragraph with some text and a [link](http://hakim.se).\n\t</textarea>\n</section>\nExternal Markdown\nYou can write your content as a separate file and have reveal.js load it at runtime. Note the separator arguments which determine how slides are delimited in the external file: the data-separator attribute defines a regular expression for horizontal slides (defaults to ^\\r?\\n---\\r?\\n$, a newline-bounded horizontal rule)  and data-separator-vertical defines vertical slides (disabled by default). The data-separator-notes attribute is a regular expression for specifying the beginning of the current slide's speaker notes (defaults to notes?:, so it will match both \"note:\" and \"notes:\"). The data-charset attribute is optional and specifies which charset to use when loading the external file.\nWhen used locally, this feature requires that reveal.js runs from a local web server.  The following example customises all available options:\n<section data-markdown=\"example.md\"\n         data-separator=\"^\\n\\n\\n\"\n         data-separator-vertical=\"^\\n\\n\"\n         data-separator-notes=\"^Note:\"\n         data-charset=\"iso-8859-15\">\n    <!--\n        Note that Windows uses `\\r\\n` instead of `\\n` as its linefeed character.\n        For a regex that supports all operating systems, use `\\r?\\n` instead of `\\n`.\n    -->\n</section>\nElement Attributes\nSpecial syntax (through HTML comments) is available for adding attributes to Markdown elements. This is useful for fragments, amongst other things.\n<section data-markdown>\n\t<script type=\"text/template\">\n\t\t- Item 1 <!-- .element: class=\"fragment\" data-fragment-index=\"2\" -->\n\t\t- Item 2 <!-- .element: class=\"fragment\" data-fragment-index=\"1\" -->\n\t</script>\n</section>\nSlide Attributes\nSpecial syntax (through HTML comments) is available for adding attributes to the slide <section> elements generated by your Markdown.\n<section data-markdown>\n\t<script type=\"text/template\">\n\t<!-- .slide: data-background=\"#ff0000\" -->\n\t\tMarkdown content\n\t</script>\n</section>\nConfiguring marked\nWe use marked to parse Markdown. To customise marked's rendering, you can pass in options when configuring Reveal:\nReveal.initialize({\n\t// Options which are passed into marked\n\t// See https://marked.js.org/#/USING_ADVANCED.md#options\n\tmarkdown: {\n\t\tsmartypants: true\n\t}\n});\nConfiguration\nAt the end of your page you need to initialize reveal by running the following code. Note that all configuration values are optional and will default to the values specified below.\nReveal.initialize({\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\tslideNumber: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Push each slide change to the browser history. Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// See https://github.com/hakimel/reveal.js/#navigation-mode\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: false,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the questionmark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null: Media will only autoplay if data-autoplay is present\n\t// - true: All media will autoplay, regardless of individual setting\n\t// - false: No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null: Iframes with data-src AND data-preload will be loaded when within\n\t//   the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true: All iframes with data-src will be loaded when within the viewDistance\n\t// - false: All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Number of milliseconds between automatically proceeding to the\n\t// next slide, disabled when set to 0, this value can be overwritten\n\t// by using a data-autoslide attribute on your slides\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding\n\tautoSlideMethod: Reveal.navigateNext,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: 120,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Hides the address bar on mobile devices\n\thideAddressBar: true,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // e.g. \"'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg'\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"2100px 900px\"\n\n\t// Number of pixels to move the parallax background per slide\n\t// - Calculated automatically unless specified\n\t// - Set to 0 to disable movement along an axis\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block'\n\n});\nThe configuration can be updated after initialization using the configure method:\n// Turn autoSlide off\nReveal.configure({ autoSlide: 0 });\n\n// Start auto-sliding every 5s\nReveal.configure({ autoSlide: 5000 });\nPresentation Size\nAll presentations have a normal size, that is, the resolution at which they are authored. The framework will automatically scale presentations uniformly based on this size to ensure that everything fits on any given display or viewport.\nSee below for a list of configuration options related to sizing, including default values:\nReveal.initialize({\n\n\t// ...\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions. Can be\n\t// specified using percentage units.\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.1,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 1.5\n\n});\nIf you wish to disable this behavior and do your own scaling (e.g. using media queries), try these settings:\nReveal.initialize({\n\n\t// ...\n\n\twidth: \"100%\",\n\theight: \"100%\",\n\tmargin: 0,\n\tminScale: 1,\n\tmaxScale: 1\n});\nDependencies\nReveal.js doesn't rely on any third party scripts to work but a few optional libraries are included by default. These libraries are loaded as dependencies in the order they appear, for example:\nReveal.initialize({\n\tdependencies: [\n\t\t// Interpret Markdown in <section> elements\n\t\t{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },\n\t\t{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },\n\n\t\t// Syntax highlight for <code> elements\n\t\t{ src: 'plugin/highlight/highlight.js', async: true },\n\n\t\t// Zoom in and out with Alt+click\n\t\t{ src: 'plugin/zoom-js/zoom.js', async: true },\n\n\t\t// Speaker notes\n\t\t{ src: 'plugin/notes/notes.js', async: true },\n\n\t\t// MathJax\n\t\t{ src: 'plugin/math/math.js', async: true }\n\t]\n});\nYou can add your own extensions using the same syntax. The following properties are available for each dependency object:\n\nsrc: Path to the script to load\nasync: [optional] Flags if the script should load after reveal.js has started, defaults to false\ncallback: [optional] Function to execute when the script has loaded\ncondition: [optional] Function which must return true for the script to be loaded\n\nReady Event\nA ready event is fired when reveal.js has loaded all non-async dependencies and is ready to start navigating. To check if reveal.js is already 'ready' you can call Reveal.isReady().\nReveal.addEventListener( 'ready', function( event ) {\n\t// event.currentSlide, event.indexh, event.indexv\n} );\nNote that we also add a .ready class to the .reveal element so that you can hook into this with CSS.\nAuto-sliding\nPresentations can be configured to progress through slides automatically, without any user input. To enable this you will need to tell the framework how many milliseconds it should wait between slides:\n// Slide every five seconds\nReveal.configure({\n  autoSlide: 5000\n});\nWhen this is turned on a control element will appear that enables users to pause and resume auto-sliding. Alternatively, sliding can be paused or resumed by pressing \u00bbA\u00ab on the keyboard. Sliding is paused automatically as soon as the user starts navigating. You can disable these controls by specifying autoSlideStoppable: false in your reveal.js config.\nYou can also override the slide duration for individual slides and fragments by using the data-autoslide attribute:\n<section data-autoslide=\"2000\">\n\t<p>After 2 seconds the first fragment will be shown.</p>\n\t<p class=\"fragment\" data-autoslide=\"10000\">After 10 seconds the next fragment will be shown.</p>\n\t<p class=\"fragment\">Now, the fragment is displayed for 2 seconds before the next slide is shown.</p>\n</section>\nTo override the method used for navigation when auto-sliding, you can specify the autoSlideMethod setting. To only navigate along the top layer and ignore vertical slides, set this to Reveal.navigateRight.\nWhenever the auto-slide mode is resumed or paused the autoslideresumed and autoslidepaused events are fired.\nKeyboard Bindings\nIf you're unhappy with any of the default keyboard bindings you can override them using the keyboard config option:\nReveal.configure({\n  keyboard: {\n    13: 'next', // go to the next slide when the ENTER key is pressed\n    27: function() {}, // do something custom when ESC is pressed\n    32: null // don't do anything when SPACE is pressed (i.e. disable a reveal.js default binding)\n  }\n});\nVertical Slide Navigation\nSlides can be nested within other slides to create vertical stacks (see Markup). When presenting, you use the left/right arrows to step through the main (horizontal) slides. When you arrive at a vertical stack you can optionally press the up/down arrows to view the vertical slides or skip past them by pressing the right arrow. Here's an example showing a bird's-eye view of what this looks like in action:\n\nNavigation Mode\nYou can finetune the reveal.js navigation behavior by using the navigationMode config option. Note that these options are only useful for presnetations that use a mix of horizontal and vertical slides. The following navigation modes are available:\n\n\n\nValue\nDescription\n\n\n\n\ndefault\nLeft/right arrow keys step between horizontal slides. Up/down arrow keys step between vertical slides. Space key steps through all slides (both horizontal and vertical).\n\n\nlinear\nRemoves the up/down arrows. Left/right arrows step through all slides (both horizontal and vertical).\n\n\ngrid\nWhen this is enabled, stepping left/right from a vertical stack to an adjacent vertical stack will land you at the same vertical index.Consider a deck with six slides ordered in two vertical stacks:1.1\u00a0\u00a0\u00a0\u00a02.11.2\u00a0\u00a0\u00a0\u00a02.21.3\u00a0\u00a0\u00a0\u00a02.3If you're on slide 1.3 and navigate right, you will normally move from 1.3 -> 2.1. With navigationMode set to \"grid\" the same navigation takes you from 1.3 -> 2.3.\n\n\n\nTouch Navigation\nYou can swipe to navigate through a presentation on any touch-enabled device. Horizontal swipes change between horizontal slides, vertical swipes change between vertical slides. If you wish to disable this you can set the touch config option to false when initializing reveal.js.\nIf there's some part of your content that needs to remain accessible to touch events you'll need to highlight this by adding a data-prevent-swipe attribute to the element. One common example where this is useful is elements that need to be scrolled.\nLazy Loading\nWhen working on presentation with a lot of media or iframe content it's important to load lazily. Lazy loading means that reveal.js will only load content for the few slides nearest to the current slide. The number of slides that are preloaded is determined by the viewDistance configuration option.\nTo enable lazy loading all you need to do is change your src attributes to data-src as shown below. This is supported for image, video, audio and iframe elements.\n<section>\n  <img data-src=\"image.png\">\n  <iframe data-src=\"http://hakim.se\"></iframe>\n  <video>\n    <source data-src=\"video.webm\" type=\"video/webm\" />\n    <source data-src=\"video.mp4\" type=\"video/mp4\" />\n  </video>\n</section>\nLazy Loading Iframes\nNote that lazy loaded iframes ignore the viewDistance configuration and will only load when their containing slide becomes visible. Iframes are also unloaded as soon as the slide is hidden.\nWhen we lazy load a video or audio element, reveal.js won't start playing that content until the slide becomes visible. However there is no way to control this for an iframe since that could contain any kind of content. That means if we loaded an iframe before the slide is visible on screen it could begin playing media and sound in the background.\nYou can override this behavior with the data-preload attribute. The iframe below will be loaded\naccording to the viewDistance.\n<section>\n\t<iframe data-src=\"http://hakim.se\" data-preload></iframe>\n</section>\nYou can also change the default globally with the preloadIframes configuration option. If set to\ntrue ALL iframes with a data-src attribute will be preloaded when within the viewDistance\nregardless of individual data-preload attributes. If set to false, all iframes will only be\nloaded when they become visible.\nAPI\nThe Reveal object exposes a JavaScript API for controlling navigation and reading state:\n// Navigation\nReveal.slide( indexh, indexv, indexf );\nReveal.left();\nReveal.right();\nReveal.up();\nReveal.down();\nReveal.prev();\nReveal.next();\nReveal.prevFragment();\nReveal.nextFragment();\n\n// Randomize the order of slides\nReveal.shuffle();\n\n// Toggle presentation states, optionally pass true/false to force on/off\nReveal.toggleOverview();\nReveal.togglePause();\nReveal.toggleAutoSlide();\n\n// Shows a help overlay with keyboard shortcuts, optionally pass true/false\n// to force on/off\nReveal.toggleHelp();\n\n// Change a config value at runtime\nReveal.configure({ controls: true });\n\n// Returns the present configuration options\nReveal.getConfig();\n\n// Fetch the current scale of the presentation\nReveal.getScale();\n\n// Retrieves the previous and current slide elements\nReveal.getPreviousSlide();\nReveal.getCurrentSlide();\n\nReveal.getIndices();        // { h: 0, v: 0, f: 0 }\nReveal.getSlidePastCount();\nReveal.getProgress();       // (0 == first slide, 1 == last slide)\nReveal.getSlides();         // Array of all slides\nReveal.getTotalSlides();    // Total number of slides\n\n// Returns the speaker notes for the current slide\nReveal.getSlideNotes();\n\n// State checks\nReveal.isFirstSlide();\nReveal.isLastSlide();\nReveal.isOverview();\nReveal.isPaused();\nReveal.isAutoSliding();\n\n// Returns the top-level DOM element\ngetRevealElement(); // <div class=\"reveal\">...</div>\nCustom Key Bindings\nCustom key bindings can be added and removed using the following Javascript API. Custom key bindings will override the default keyboard bindings, but will in turn be overridden by the user defined bindings in the keyboard config option.\nReveal.addKeyBinding( binding, callback );\nReveal.removeKeyBinding( keyCode );\nFor example\n// The binding parameter provides the following properties\n//      keyCode: the keycode for binding to the callback\n//          key: the key label to show in the help overlay\n//  description: the description of the action to show in the help overlay\nReveal.addKeyBinding( { keyCode: 84, key: 'T', description: 'Start timer' }, function() {\n\t// start timer\n} )\n\n// The binding parameter can also be a direct keycode without providing the help description\nReveal.addKeyBinding( 82, function() {\n\t// reset timer\n} )\nThis allows plugins to add key bindings directly to Reveal so they can\n\nmake use of Reveal's pre-processing logic for key handling (for example, ignoring key presses when paused); and\nbe included in the help overlay (optional)\n\nSlide Changed Event\nA slidechanged event is fired each time the slide is changed (regardless of state). The event object holds the index values of the current slide as well as a reference to the previous and current slide HTML nodes.\nSome libraries, like MathJax (see #226), get confused by the transforms and display states of slides. Often times, this can be fixed by calling their update or render function from this callback.\nReveal.addEventListener( 'slidechanged', function( event ) {\n\t// event.previousSlide, event.currentSlide, event.indexh, event.indexv\n} );\nPresentation State\nThe presentation's current state can be fetched by using the getState method. A state object contains all of the information required to put the presentation back as it was when getState was first called. Sort of like a snapshot. It's a simple object that can easily be stringified and persisted or sent over the wire.\nReveal.slide( 1 );\n// we're on slide 1\n\nvar state = Reveal.getState();\n\nReveal.slide( 3 );\n// we're on slide 3\n\nReveal.setState( state );\n// we're back on slide 1\nSlide States\nIf you set data-state=\"somestate\" on a slide <section>, \"somestate\" will be applied as a class on the document element when that slide is opened. This allows you to apply broad style changes to the page based on the active slide.\nFurthermore you can also listen to these changes in state via JavaScript:\nReveal.addEventListener( 'somestate', function() {\n\t// TODO: Sprinkle magic\n}, false );\nSlide Backgrounds\nSlides are contained within a limited portion of the screen by default to allow them to fit any display and scale uniformly. You can apply full page backgrounds outside of the slide area by adding a data-background attribute to your <section> elements. Four different types of backgrounds are supported: color, image, video and iframe.\nColor Backgrounds\nAll CSS color formats are supported, including hex values, keywords, rgba() or hsl().\n<section data-background-color=\"#ff0000\">\n\t<h2>Color</h2>\n</section>\nImage Backgrounds\nBy default, background images are resized to cover the full page. Available options:\n\n\n\nAttribute\nDefault\nDescription\n\n\n\n\ndata-background-image\n\nURL of the image to show. GIFs restart when the slide opens.\n\n\ndata-background-size\ncover\nSee background-size on MDN.\n\n\ndata-background-position\ncenter\nSee background-position on MDN.\n\n\ndata-background-repeat\nno-repeat\nSee background-repeat on MDN.\n\n\ndata-background-opacity\n1\nOpacity of the background image on a 0-1 scale. 0 is transparent and 1 is fully opaque.\n\n\n\n<section data-background-image=\"http://example.com/image.png\">\n\t<h2>Image</h2>\n</section>\n<section data-background-image=\"http://example.com/image.png\" data-background-size=\"100px\" data-background-repeat=\"repeat\">\n\t<h2>This background image will be sized to 100px and repeated</h2>\n</section>\nVideo Backgrounds\nAutomatically plays a full size video behind the slide.\n\n\n\nAttribute\nDefault\nDescription\n\n\n\n\ndata-background-video\n\nA single video source, or a comma separated list of video sources.\n\n\ndata-background-video-loop\nfalse\nFlags if the video should play repeatedly.\n\n\ndata-background-video-muted\nfalse\nFlags if the audio should be muted.\n\n\ndata-background-size\ncover\nUse cover for full screen and some cropping or contain for letterboxing.\n\n\ndata-background-opacity\n1\nOpacity of the background video on a 0-1 scale. 0 is transparent and 1 is fully opaque.\n\n\n\n<section data-background-video=\"https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.mp4,https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.webm\" data-background-video-loop data-background-video-muted>\n\t<h2>Video</h2>\n</section>\nIframe Backgrounds\nEmbeds a web page as a slide background that covers 100% of the reveal.js width and height. The iframe is in the background layer, behind your slides, and as such it's not possible to interact with it by default. To make your background interactive, you can add the data-background-interactive attribute.\n<section data-background-iframe=\"https://slides.com\" data-background-interactive>\n\t<h2>Iframe</h2>\n</section>\nBackground Transitions\nBackgrounds transition using a fade animation by default. This can be changed to a linear sliding transition by passing backgroundTransition: 'slide' to the Reveal.initialize() call. Alternatively you can set data-background-transition on any section with a background to override that specific transition.\nParallax Background\nIf you want to use a parallax scrolling background, set the first two properties below when initializing reveal.js (the other two are optional).\nReveal.initialize({\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // e.g. \"https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"2100px 900px\" - currently only pixels are supported (don't use % or auto)\n\n\t// Number of pixels to move the parallax background per slide\n\t// - Calculated automatically unless specified\n\t// - Set to 0 to disable movement along an axis\n\tparallaxBackgroundHorizontal: 200,\n\tparallaxBackgroundVertical: 50\n\n});\nMake sure that the background size is much bigger than screen size to allow for some scrolling. View example.\nSlide Transitions\nThe global presentation transition is set using the transition config value. You can override the global transition for a specific slide by using the data-transition attribute:\n<section data-transition=\"zoom\">\n\t<h2>This slide will override the presentation transition and zoom!</h2>\n</section>\n\n<section data-transition-speed=\"fast\">\n\t<h2>Choose from three transition speeds: default, fast or slow!</h2>\n</section>\nYou can also use different in and out transitions for the same slide:\n<section data-transition=\"slide\">\n    The train goes on \u2026\n</section>\n<section data-transition=\"slide\">\n    and on \u2026\n</section>\n<section data-transition=\"slide-in fade-out\">\n    and stops.\n</section>\n<section data-transition=\"fade-in slide-out\">\n    (Passengers entering and leaving)\n</section>\n<section data-transition=\"slide\">\n    And it starts again.\n</section>\nYou can choose from none, fade, slide, convex, concave and zoom.\nInternal links\nIt's easy to link between slides. The first example below targets the index of another slide whereas the second targets a slide with an ID attribute (<section id=\"some-slide\">):\n<a href=\"#/2/2\">Link</a>\n<a href=\"#/some-slide\">Link</a>\nYou can also add relative navigation links, similar to the built in reveal.js controls, by appending one of the following classes on any element. Note that each element is automatically given an enabled class when it's a valid navigation route based on the current slide.\n<a href=\"#\" class=\"navigate-left\">\n<a href=\"#\" class=\"navigate-right\">\n<a href=\"#\" class=\"navigate-up\">\n<a href=\"#\" class=\"navigate-down\">\n<a href=\"#\" class=\"navigate-prev\"> <!-- Previous vertical or horizontal slide -->\n<a href=\"#\" class=\"navigate-next\"> <!-- Next vertical or horizontal slide -->\nFragments\nFragments are used to highlight individual elements on a slide. Every element with the class fragment will be stepped through before moving on to the next slide. Here's an example: http://revealjs.com/#/fragments\nThe default fragment style is to start out invisible and fade in. This style can be changed by appending a different class to the fragment:\n<section>\n\t<p class=\"fragment grow\">grow</p>\n\t<p class=\"fragment shrink\">shrink</p>\n\t<p class=\"fragment fade-out\">fade-out</p>\n\t<p class=\"fragment fade-up\">fade-up (also down, left and right!)</p>\n\t<p class=\"fragment fade-in-then-out\">fades in, then out when we move to the next step</p>\n\t<p class=\"fragment fade-in-then-semi-out\">fades in, then obfuscate when we move to the next step</p>\n\t<p class=\"fragment highlight-current-blue\">blue only once</p>\n\t<p class=\"fragment highlight-red\">highlight-red</p>\n\t<p class=\"fragment highlight-green\">highlight-green</p>\n\t<p class=\"fragment highlight-blue\">highlight-blue</p>\n</section>\nMultiple fragments can be applied to the same element sequentially by wrapping it, this will fade in the text on the first step and fade it back out on the second.\n<section>\n\t<span class=\"fragment fade-in\">\n\t\t<span class=\"fragment fade-out\">I'll fade in, then out</span>\n\t</span>\n</section>\nThe display order of fragments can be controlled using the data-fragment-index attribute.\n<section>\n\t<p class=\"fragment\" data-fragment-index=\"3\">Appears last</p>\n\t<p class=\"fragment\" data-fragment-index=\"1\">Appears first</p>\n\t<p class=\"fragment\" data-fragment-index=\"2\">Appears second</p>\n</section>\nFragment events\nWhen a slide fragment is either shown or hidden reveal.js will dispatch an event.\nSome libraries, like MathJax (see #505), get confused by the initially hidden fragment elements. Often times this can be fixed by calling their update or render function from this callback.\nReveal.addEventListener( 'fragmentshown', function( event ) {\n\t// event.fragment = the fragment DOM element\n} );\nReveal.addEventListener( 'fragmenthidden', function( event ) {\n\t// event.fragment = the fragment DOM element\n} );\nCode Syntax Highlighting\nBy default, Reveal is configured with highlight.js for code syntax highlighting. To enable syntax highlighting, you'll have to load the highlight plugin (plugin/highlight/highlight.js) and a highlight.js CSS theme (Reveal comes packaged with the Monokai themes: lib/css/monokai.css).\nReveal.initialize({\n\t// More info https://github.com/hakimel/reveal.js#dependencies\n\tdependencies: [\n\t\t{ src: 'plugin/highlight/highlight.js', async: true },\n\t]\n});\nBelow is an example with clojure code that will be syntax highlighted. When the data-trim attribute is present, surrounding whitespace is automatically removed.  HTML will be escaped by default. To avoid this, for example if you are using <mark> to call out a line of code, add the data-noescape attribute to the <code> element.\n<section>\n\t<pre><code data-trim data-noescape>\n(def lazy-fib\n  (concat\n   [0 1]\n   <mark>((fn rfib [a b]</mark>\n        (lazy-cons (+ a b) (rfib b (+ a b)))) 0 1)))\n\t</code></pre>\n</section>\nLine Numbers & Highlights\nTo enable line numbers, add data-line-numbers to your <code> tags. If you want to highlight specific lines you can provide a comma separated list of line numbers using the same attribute. For example, in the following example lines 4 and 8-11 are highlighted:\n<pre><code class=\"hljs\" data-line-numbers=\"4,8-11\">\nimport React, { useState } from 'react';\n \nfunction Example() {\n  const [count, setCount] = useState(0);\n \n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n</code></pre>\n\nSlide number\nIf you would like to display the page number of the current slide you can do so using the slideNumber and showSlideNumber configuration values.\n// Shows the slide number using default formatting\nReveal.configure({ slideNumber: true });\n\n// Slide number formatting can be configured using these variables:\n//  \"h.v\": \thorizontal . vertical slide number (default)\n//  \"h/v\": \thorizontal / vertical slide number\n//    \"c\": \tflattened slide number\n//  \"c/t\": \tflattened slide number / total slides\nReveal.configure({ slideNumber: 'c/t' });\n\n// You can provide a function to fully customize the number:\nReveal.configure({ slideNumber: function() {\n    // Ignore numbering of vertical slides\n    return [ Reveal.getIndices().h ];\n}});\n\n// Control which views the slide number displays on using the \"showSlideNumber\" value:\n//     \"all\": show on all views (default)\n// \"speaker\": only show slide numbers on speaker notes view\n//   \"print\": only show slide numbers when printing to PDF\nReveal.configure({ showSlideNumber: 'speaker' });\nOverview mode\nPress \u00bbESC\u00ab or \u00bbO\u00ab keys to toggle the overview mode on and off. While you're in this mode, you can still navigate between slides,\nas if you were at 1,000 feet above your presentation. The overview mode comes with a few API hooks:\nReveal.addEventListener( 'overviewshown', function( event ) { /* ... */ } );\nReveal.addEventListener( 'overviewhidden', function( event ) { /* ... */ } );\n\n// Toggle the overview mode programmatically\nReveal.toggleOverview();\nFullscreen mode\nJust press \u00bbF\u00ab on your keyboard to show your presentation in fullscreen mode. Press the \u00bbESC\u00ab key to exit fullscreen mode.\nEmbedded media\nAdd data-autoplay to your media element if you want it to automatically start playing when the slide is shown:\n<video data-autoplay src=\"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\"></video>\nIf you want to enable or disable autoplay globally, for all embedded media, you can use the autoPlayMedia configuration option. If you set this to true ALL media will autoplay regardless of individual data-autoplay attributes. If you initialize with autoPlayMedia: false NO media will autoplay.\nNote that embedded HTML5 <video>/<audio> and YouTube/Vimeo iframes are automatically paused when you navigate away from a slide. This can be disabled by decorating your element with a data-ignore attribute.\nEmbedded iframes\nreveal.js automatically pushes two post messages to embedded iframes. slide:start when the slide containing the iframe is made visible and slide:stop when it is hidden.\nStretching elements\nSometimes it's desirable to have an element, like an image or video, stretch to consume as much space as possible within a given slide. This can be done by adding the .stretch class to an element as seen below:\n<section>\n\t<h2>This video will use up the remaining space on the slide</h2>\n    <video class=\"stretch\" src=\"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\"></video>\n</section>\nLimitations:\n\nOnly direct descendants of a slide section can be stretched\nOnly one descendant per slide section can be stretched\n\nResize Event\nWhen reveal.js changes the scale of the slides it fires a resize event. You can subscribe to the event to resize your elements accordingly.\nReveal.addEventListener( 'resize', function( event ) {\n\t// event.scale, event.oldScale, event.size\n} );\npostMessage API\nThe framework has a built-in postMessage API that can be used when communicating with a presentation inside of another window. Here's an example showing how you'd make a reveal.js instance in the given window proceed to slide 2:\n<window>.postMessage( JSON.stringify({ method: 'slide', args: [ 2 ] }), '*' );\nWhen reveal.js runs inside of an iframe it can optionally bubble all of its events to the parent. Bubbled events are stringified JSON with three fields: namespace, eventName and state. Here's how you subscribe to them from the parent window:\nwindow.addEventListener( 'message', function( event ) {\n\tvar data = JSON.parse( event.data );\n\tif( data.namespace === 'reveal' && data.eventName ==='slidechanged' ) {\n\t\t// Slide changed, see data.state for slide number\n\t}\n} );\nThis cross-window messaging can be toggled on or off using configuration flags.\nReveal.initialize({\n\t// ...\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false\n});\nPDF Export\nPresentations can be exported to PDF via a special print stylesheet. This feature requires that you use Google Chrome or Chromium and to be serving the presentation from a web server.\nHere's an example of an exported presentation that's been uploaded to SlideShare: http://www.slideshare.net/hakimel/revealjs-300.\nSeparate pages for fragments\nFragments are printed on separate slides by default. Meaning if you have a slide with three fragment steps, it will generate three separate slides where the fragments appear incrementally.\nIf you prefer printing all fragments in their visible states on the same slide you can set the pdfSeparateFragments config option to false.\nPage size\nExport dimensions are inferred from the configured presentation size. Slides that are too tall to fit within a single page will expand onto multiple pages. You can limit how many pages a slide may expand onto using the pdfMaxPagesPerSlide config option, for example Reveal.configure({ pdfMaxPagesPerSlide: 1 }) ensures that no slide ever grows to more than one printed page.\nPrint stylesheet\nTo enable the PDF print capability in your presentation, the special print stylesheet at /css/print/pdf.css must be loaded. The default index.html file handles this for you when print-pdf is included in the query string. If you're using a different HTML template, you can add this to your HEAD:\n<script>\n\tvar link = document.createElement( 'link' );\n\tlink.rel = 'stylesheet';\n\tlink.type = 'text/css';\n\tlink.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';\n\tdocument.getElementsByTagName( 'head' )[0].appendChild( link );\n</script>\nInstructions\n\nOpen your presentation with print-pdf included in the query string i.e. http://localhost:8000/?print-pdf. You can test this with revealjs.com?print-pdf.\n\n\nIf you want to include speaker notes in your export, you can append showNotes=true to the query string: http://localhost:8000/?print-pdf&showNotes=true\n\n\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\n\nAlternatively you can use the decktape project.\nTheming\nThe framework comes with a few different themes included:\n\nblack: Black background, white text, blue links (default theme)\nwhite: White background, black text, blue links\nleague: Gray background, white text, blue links (default theme for reveal.js < 3.0.0)\nbeige: Beige background, dark text, brown links\nsky: Blue background, thin dark text, blue links\nnight: Black background, thick white text, orange links\nserif: Cappuccino background, gray text, brown links\nsimple: White background, black text, blue links\nsolarized: Cream-colored background, dark green text, blue links\n\nEach theme is available as a separate stylesheet. To change theme you will need to replace black below with your desired theme name in index.html:\n<link rel=\"stylesheet\" href=\"css/theme/black.css\" id=\"theme\">\nIf you want to add a theme of your own see the instructions here: /css/theme/README.md.\nSpeaker Notes\nreveal.js comes with a speaker notes plugin which can be used to present per-slide notes in a separate browser window. The notes window also gives you a preview of the next upcoming slide so it may be helpful even if you haven't written any notes. Press the \u00bbS\u00ab key on your keyboard to open the notes window.\nA speaker timer starts as soon as the speaker view is opened. You can reset it to 00:00:00 at any time by simply clicking/tapping on it.\nNotes are defined by appending an <aside> element to a slide as seen below. You can add the data-markdown attribute to the aside element if you prefer writing notes using Markdown.\nAlternatively you can add your notes in a data-notes attribute on the slide. Like <section data-notes=\"Something important\"></section>.\nWhen used locally, this feature requires that reveal.js runs from a local web server.\n<section>\n\t<h2>Some Slide</h2>\n\n\t<aside class=\"notes\">\n\t\tOh hey, these are some notes. They'll be hidden in your presentation, but you can see them if you open the speaker notes window (hit \u00bbS\u00ab on your keyboard).\n\t</aside>\n</section>\nIf you're using the external Markdown plugin, you can add notes with the help of a special delimiter:\n<section data-markdown=\"example.md\" data-separator=\"^\\n\\n\\n\" data-separator-vertical=\"^\\n\\n\" data-separator-notes=\"^Note:\"></section>\n\n# Title\n## Sub-title\n\nHere is some content...\n\nNote:\nThis will only display in the notes window.\nShare and Print Speaker Notes\nNotes are only visible to the speaker inside of the speaker view. If you wish to share your notes with others you can initialize reveal.js with the showNotes configuration value set to true. Notes will appear along the bottom of the presentations.\nWhen showNotes is enabled notes are also included when you export to PDF. By default, notes are printed in a box on top of the slide. If you'd rather print them on a separate page, after the slide, set showNotes: \"separate-page\".\nSpeaker notes clock and timers\nThe speaker notes window will also show:\n\nTime elapsed since the beginning of the presentation.  If you hover the mouse above this section, a timer reset button will appear.\nCurrent wall-clock time\n(Optionally) a pacing timer which indicates whether the current pace of the presentation is on track for the right timing (shown in green), and if not, whether the presenter should speed up (shown in red) or has the luxury of slowing down (blue).\n\nThe pacing timer can be enabled by configuring by the defaultTiming parameter in the Reveal configuration block, which specifies the number of seconds per slide.  120 can be a reasonable rule of thumb.  Timings can also be given per slide <section> by setting the data-timing attribute.  Both values are in numbers of seconds.\nServer Side Speaker Notes\nIn some cases it can be desirable to run notes on a separate device from the one you're presenting on. The Node.js-based notes plugin lets you do this using the same note definitions as its client side counterpart. Include the required scripts by adding the following dependencies:\nReveal.initialize({\n\t// ...\n\n\tdependencies: [\n\t\t{ src: 'socket.io/socket.io.js', async: true },\n\t\t{ src: 'plugin/notes-server/client.js', async: true }\n\t]\n});\nThen:\n\nInstall Node.js (4.0.0 or later)\nRun npm install\nRun node plugin/notes-server\n\nPlugins\nPlugins should register themselves with reveal.js by calling Reveal.registerPlugin( 'myPluginID', MyPlugin ). Registered plugin instances can optionally expose an \"init\" function that reveal.js will call to initialize them.\nWhen reveal.js is booted up via Reveal.initialize(), it will go through all registered plugins and invoke their \"init\" methods. If the \"init\" method returns a Promise, reveal.js will wait for that promise to be fullfilled before finshing the startup sequence and firing the ready event. Here's an example of a plugin that does some asynchronous work before reveal.js can proceed:\nlet MyPlugin = {\n\tinit: () =>  new Promise( resolve => setTimeout( resolve, 3000 ) )\n};\nReveal.registerPlugin( 'myPlugin', MyPlugin );\nReveal.addEventListener( 'ready', () => console.log( 'Three seconds later...' ) );\nReveal.initialize();\nIf the init method does not return a Promise, the plugin is considered ready right away and will not hold up the reveal.js startup sequence.\nRetrieving Plugins\nIf you want to check if a specific plugin is registered you can use the Reveal.hasPlugin method and pass in a plugin ID, for example: Reveal.hasPlugin( 'myPlugin' ). If you want to retrieve a plugin instance you can use Reveal.getPlugin( 'myPlugin' ).\nMultiplexing\nThe multiplex plugin allows your audience to view the slides of the presentation you are controlling on their own phone, tablet or laptop. As the master presentation navigates the slides, all client presentations will update in real time. See a demo at https://reveal-js-multiplex-ccjbegmaii.now.sh/.\nThe multiplex plugin needs the following 3 things to operate:\n\nMaster presentation that has control\nClient presentations that follow the master\nSocket.io server to broadcast events from the master to the clients\n\nMaster presentation\nServed from a static file server accessible (preferably) only to the presenter. This need only be on your (the presenter's) computer. (It's safer to run the master presentation from your own computer, so if the venue's Internet goes down it doesn't stop the show.) An example would be to execute the following commands in the directory of your master presentation:\n\nnpm install node-static\nstatic\n\nIf you want to use the speaker notes plugin with your master presentation then make sure you have the speaker notes plugin configured correctly along with the configuration shown below, then execute node plugin/notes-server in the directory of your master presentation. The configuration below will cause it to connect to the socket.io server as a master, as well as launch your speaker-notes/static-file server.\nYou can then access your master presentation at http://localhost:1947\nExample configuration:\nReveal.initialize({\n\t// other options...\n\n\tmultiplex: {\n\t\t// Example values. To generate your own, see the socket.io server instructions.\n\t\tsecret: '13652805320794272084', // Obtained from the socket.io server. Gives this (the master) control of the presentation\n\t\tid: '1ea875674b17ca76', // Obtained from socket.io server\n\t\turl: 'https://reveal-js-multiplex-ccjbegmaii.now.sh' // Location of socket.io server\n\t},\n\n\t// Don't forget to add the dependencies\n\tdependencies: [\n\t\t{ src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true },\n\t\t{ src: 'plugin/multiplex/master.js', async: true },\n\n\t\t// and if you want speaker notes\n\t\t{ src: 'plugin/notes-server/client.js', async: true }\n\n\t\t// other dependencies...\n\t]\n});\nClient presentation\nServed from a publicly accessible static file server. Examples include: GitHub Pages, Amazon S3, Dreamhost, Akamai, etc. The more reliable, the better. Your audience can then access the client presentation via http://example.com/path/to/presentation/client/index.html, with the configuration below causing them to connect to the socket.io server as clients.\nExample configuration:\nReveal.initialize({\n\t// other options...\n\n\tmultiplex: {\n\t\t// Example values. To generate your own, see the socket.io server instructions.\n\t\tsecret: null, // null so the clients do not have control of the master presentation\n\t\tid: '1ea875674b17ca76', // id, obtained from socket.io server\n\t\turl: 'https://reveal-js-multiplex-ccjbegmaii.now.sh' // Location of socket.io server\n\t},\n\n\t// Don't forget to add the dependencies\n\tdependencies: [\n\t\t{ src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true },\n\t\t{ src: 'plugin/multiplex/client.js', async: true }\n\n\t\t// other dependencies...\n\t]\n});\nSocket.io server\nServer that receives the slideChanged events from the master presentation and broadcasts them out to the connected client presentations. This needs to be publicly accessible. You can run your own socket.io server with the commands:\n\nnpm install\nnode plugin/multiplex\n\nOr you can use the socket.io server at https://reveal-js-multiplex-ccjbegmaii.now.sh/.\nYou'll need to generate a unique secret and token pair for your master and client presentations. To do so, visit http://example.com/token, where http://example.com is the location of your socket.io server. Or if you're going to use the socket.io server at https://reveal-js-multiplex-ccjbegmaii.now.sh/, visit https://reveal-js-multiplex-ccjbegmaii.now.sh/token.\nYou are very welcome to point your presentations at the Socket.io server running at https://reveal-js-multiplex-ccjbegmaii.now.sh/, but availability and stability are not guaranteed.\nFor anything mission critical I recommend you run your own server. The easiest way to do this is by installing now. With that installed, deploying your own Multiplex server is as easy running the following command from the reveal.js folder: now plugin/multiplex.\nsocket.io server as file static server\nThe socket.io server can play the role of static file server for your client presentation, as in the example at https://reveal-js-multiplex-ccjbegmaii.now.sh/. (Open https://reveal-js-multiplex-ccjbegmaii.now.sh/ in two browsers. Navigate through the slides on one, and the other will update to match.)\nExample configuration:\nReveal.initialize({\n\t// other options...\n\n\tmultiplex: {\n\t\t// Example values. To generate your own, see the socket.io server instructions.\n\t\tsecret: null, // null so the clients do not have control of the master presentation\n\t\tid: '1ea875674b17ca76', // id, obtained from socket.io server\n\t\turl: 'example.com:80' // Location of your socket.io server\n\t},\n\n\t// Don't forget to add the dependencies\n\tdependencies: [\n\t\t{ src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true },\n\t\t{ src: 'plugin/multiplex/client.js', async: true }\n\n\t\t// other dependencies...\n\t]\nIt can also play the role of static file server for your master presentation and client presentations at the same time (as long as you don't want to use speaker notes). (Open https://reveal-js-multiplex-ccjbegmaii.now.sh/ in two browsers. Navigate through the slides on one, and the other will update to match. Navigate through the slides on the second, and the first will update to match.) This is probably not desirable, because you don't want your audience to mess with your slides while you're presenting. ;)\nExample configuration:\nReveal.initialize({\n\t// other options...\n\n\tmultiplex: {\n\t\t// Example values. To generate your own, see the socket.io server instructions.\n\t\tsecret: '13652805320794272084', // Obtained from the socket.io server. Gives this (the master) control of the presentation\n\t\tid: '1ea875674b17ca76', // Obtained from socket.io server\n\t\turl: 'example.com:80' // Location of your socket.io server\n\t},\n\n\t// Don't forget to add the dependencies\n\tdependencies: [\n\t\t{ src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true },\n\t\t{ src: 'plugin/multiplex/master.js', async: true },\n\t\t{ src: 'plugin/multiplex/client.js', async: true }\n\n\t\t// other dependencies...\n\t]\n});\nMathJax\nIf you want to display math equations in your presentation you can easily do so by including this plugin. The plugin is a very thin wrapper around the MathJax library. To use it you'll need to include it as a reveal.js dependency, find our more about dependencies here.\nThe plugin defaults to using LaTeX but that can be adjusted through the math configuration object. Note that MathJax is loaded from a remote server. If you want to use it offline you'll need to download a copy of the library and adjust the mathjax configuration value.\nBelow is an example of how the plugin can be configured. If you don't intend to change these values you do not need to include the math config object at all.\nReveal.initialize({\n\t// other options ...\n\n\tmath: {\n\t\tmathjax: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js',\n\t\tconfig: 'TeX-AMS_HTML-full'  // See http://docs.mathjax.org/en/latest/config-files.html\n\t\t// pass other options into `MathJax.Hub.Config()`\n\t\tTeX: { Macros: macros }\n\t},\n\n\tdependencies: [\n\t\t{ src: 'plugin/math/math.js', async: true }\n\t]\n});\nRead MathJax's documentation if you need HTTPS delivery or serving of specific versions for stability.\nMathJax in Markdown\nIf you want to include math inside of a presentation written in Markdown you need to wrap the formula in backticks. This prevents syntax conflicts between LaTeX and Markdown. For example:\n`$$ J(\\theta_0,\\theta_1) = \\sum_{i=0} $$`\n\nLicense\nMIT licensed\nCopyright (C) 2019 Hakim El Hattab, http://hakim.se\n\n"}, {"repo": "socketio/socket.io", "language": "JavaScript", "readme": "\nsocket.io\n \n\n\n\n\n\n\nFeatures\nSocket.IO enables real-time bidirectional event-based communication. It consists of:\n\na Node.js server (this repository)\na Javascript client library for the browser (or a Node.js client)\n\nSome implementations in other languages are also available:\n\nJava\nC++\nSwift\nDart\n\nIts main features are:\nReliability\nConnections are established even in the presence of:\n\nproxies and load balancers.\npersonal firewall and antivirus software.\n\nFor this purpose, it relies on Engine.IO, which first establishes a long-polling connection, then tries to upgrade to better transports that are \"tested\" on the side, like WebSocket. Please see the Goals section for more information.\nAuto-reconnection support\nUnless instructed otherwise a disconnected client will try to reconnect forever, until the server is available again. Please see the available reconnection options here.\nDisconnection detection\nA heartbeat mechanism is implemented at the Engine.IO level, allowing both the server and the client to know when the other one is not responding anymore.\nThat functionality is achieved with timers set on both the server and the client, with timeout values (the pingInterval and pingTimeout parameters) shared during the connection handshake. Those timers require any subsequent client calls to be directed to the same server, hence the sticky-session requirement when using multiples nodes.\nBinary support\nAny serializable data structures can be emitted, including:\n\nArrayBuffer and Blob in the browser\nArrayBuffer and Buffer in Node.js\n\nSimple and convenient API\nSample code:\nio.on('connection', socket => {\n  socket.emit('request', /* \u2026 */); // emit an event to the socket\n  io.emit('broadcast', /* \u2026 */); // emit an event to all connected sockets\n  socket.on('reply', () => { /* \u2026 */ }); // listen to the event\n});\nCross-browser\nBrowser support is tested in Saucelabs:\n\nMultiplexing support\nIn order to create separation of concerns within your application (for example per module, or based on permissions), Socket.IO allows you to create several Namespaces, which will act as separate communication channels but will share the same underlying connection.\nRoom support\nWithin each Namespace, you can define arbitrary channels, called Rooms, that sockets can join and leave. You can then broadcast to any given room, reaching every socket that has joined it.\nThis is a useful feature to send notifications to a group of users, or to a given user connected on several devices for example.\nNote: Socket.IO is not a WebSocket implementation. Although Socket.IO indeed uses WebSocket as a transport when possible, it adds some metadata to each packet: the packet type, the namespace and the ack id when a message acknowledgement is needed. That is why a WebSocket client will not be able to successfully connect to a Socket.IO server, and a Socket.IO client will not be able to connect to a WebSocket server (like ws://echo.websocket.org) either. Please see the protocol specification here.\nInstallation\nnpm install socket.io\nHow to use\nThe following example attaches socket.io to a plain Node.JS\nHTTP server listening on port 3000.\nconst server = require('http').createServer();\nconst io = require('socket.io')(server);\nio.on('connection', client => {\n  client.on('event', data => { /* \u2026 */ });\n  client.on('disconnect', () => { /* \u2026 */ });\n});\nserver.listen(3000);\nStandalone\nconst io = require('socket.io')();\nio.on('connection', client => { ... });\nio.listen(3000);\nIn conjunction with Express\nStarting with 3.0, express applications have become request handler\nfunctions that you pass to http or http Server instances. You need\nto pass the Server to socket.io, and not the express application\nfunction. Also make sure to call .listen on the server, not the app.\nconst app = require('express')();\nconst server = require('http').createServer(app);\nconst io = require('socket.io')(server);\nio.on('connection', () => { /* \u2026 */ });\nserver.listen(3000);\nIn conjunction with Koa\nLike Express.JS, Koa works by exposing an application as a request\nhandler function, but only by calling the callback method.\nconst app = require('koa')();\nconst server = require('http').createServer(app.callback());\nconst io = require('socket.io')(server);\nio.on('connection', () => { /* \u2026 */ });\nserver.listen(3000);\nDocumentation\nPlease see the documentation here. Contributions are welcome!\nDebug / logging\nSocket.IO is powered by debug.\nIn order to see all the debug output, run your app with the environment variable\nDEBUG including the desired scope.\nTo see the output from all of Socket.IO's debugging scopes you can use:\nDEBUG=socket.io* node myapp\n\nTesting\nnpm test\n\nThis runs the gulp task test. By default the test will be run with the source code in lib directory.\nSet the environmental variable TEST_VERSION to compat to test the transpiled es5-compat version of the code.\nThe gulp task test will always transpile the source code into es5 and export to dist first before running the test.\nBackers\nSupport us with a monthly donation and help us continue our activities. [Become a backer]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLicense\nMIT\n\n"}, {"repo": "pallets/flask", "language": "Python", "readme": "\nFlask\nFlask is a lightweight WSGI web application framework. It is designed\nto make getting started quick and easy, with the ability to scale up to\ncomplex applications. It began as a simple wrapper around Werkzeug\nand Jinja and has become one of the most popular Python web\napplication frameworks.\nFlask offers suggestions, but doesn't enforce any dependencies or\nproject layout. It is up to the developer to choose the tools and\nlibraries they want to use. There are many extensions provided by the\ncommunity that make adding new functionality easy.\n\nInstalling\nInstall and update using pip:\npip install -U Flask\n\n\nA Simple Example\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    return \"Hello, World!\"\n$ env FLASK_APP=hello.py flask run\n * Serving Flask app \"hello\"\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n\n\nContributing\nFor guidance on setting up a development environment and how to make a\ncontribution to Flask, see the contributing guidelines.\n\nDonate\nThe Pallets organization develops and supports Flask and the libraries\nit uses. In order to grow the community of contributors and users, and\nallow the maintainers to devote more time to the projects, please\ndonate today.\n\nLinks\n\nWebsite: https://palletsprojects.com/p/flask/\nDocumentation: https://flask.palletsprojects.com/\nReleases: https://pypi.org/project/Flask/\nCode: https://github.com/pallets/flask\nIssue tracker: https://github.com/pallets/flask/issues\nTest status: https://dev.azure.com/pallets/flask/_build\nOfficial chat: https://discord.gg/t6rrQZH\n\n\n"}, {"repo": "Semantic-Org/Semantic-UI", "language": "JavaScript", "readme": "\n\nSemantic UI\n\n\nSemantic is a UI framework designed for theming.\nKey Features\n\n50+ UI elements\n3000 + CSS variables\n3 Levels of variable inheritance (similar to SublimeText)\nBuilt with EM values for responsive design\nFlexbox friendly\n\nSemantic allows developers to build beautiful websites fast, with concise HTML, intuitive javascript, and simplified debugging, helping make front-end development a delightful experience. Semantic is responsively designed allowing your website to scale on multiple devices. Semantic is production ready and partnered with frameworks such as React, Angular, Meteor, and Ember, which means you can integrate it with any of these frameworks to organize your UI layer alongside your application logic.\n2.4.0 Release (Sep 17th, 2018)\nSemantic UI 2.4 is now available. Read up on what's new in the docs.\nMigration info from 1.x can be found in the 2.0 release notes\nUser Support\nPlease help us keep the issue tracker organized. For technical questions that do not include a specific JSFiddle test case (bug reports), or feature request please use StackOverflow to find a solution.\nVisit our contributing guide for more on what should be posted to GitHub Issues.\nInstall\nRecommended Install\nnpm install semantic-ui  # Use themes, import build/watch tasks into your own gulpfile.\nSemantic UI includes an interactive installer to help setup your project.\n\nFor more details on setup visit our getting started guide.\nTo learn more about theming please read our theming guide\n\nAdditional Versions\n\n\n\nEnvironment\nInstall Script\nRepo\n\n\n\n\nCSS Only\nnpm install semantic-ui-css\nCSS Repo\n\n\nLESS Only\nnpm install semantic-ui-less\nLESS Repo\n\n\nLESS plugin\nnpm install less-plugin-semantic-ui\nLESS Plugin Repo\n\n\nEmberJS\nember install:addon semantic-ui-ember\nEmber Repo\n\n\nMeteor - LESS\nmeteor add semantic:ui\nMeteor Repo\n\n\nMeteor - CSS\nmeteor add semantic:ui-css\nCSS Repo\n\n\nBower\nbower install semantic-ui\n\n\n\n\nCheck out our integration wiki for more options.\nBrowser Support\n\nLast 2 Versions FF, Chrome, Safari Mac\nIE 11+\nAndroid 4.4+, Chrome for Android 44+\niOS Safari 7+\nMicrosoft Edge 12+\n\nAlthough some components will work in IE9, grids and other flexbox components are not supported by IE9 and may not appear correctly.\nCommunity\nGetting Help\nPlease do not post usage questions to GitHub Issues. For these types of questions use our [Gitter chatroom] or StackOverflow.\nSubmitting Bugs and Enhancements\nGitHub Issues is for suggesting enhancements and reporting bugs. Before submiting a bug make sure you do the following:\n\nCheck out our contributing guide for info on our release cycle.\nFork this boilerplate JSFiddle to create a test case for your bug. If a bug is apparent in the docs, that's ok as a test case, just make it clear exactly how to reproduce the issue. Only bugs that include a test case can be triaged.\n\nPull Requests\nWhen adding pull requests, be sure to merge into the next branch. If you need to demonstrate a fix in next release, you can use this JSFiddle\nInternational\n\nChinese A Chinese mirror site is available at http://www.semantic-ui.cn.\nRight-to-Left (RTL) An RTL version can be created using our build tools by selecting rtl from the install script.\nTranslation To help translate see the Wiki Guide for translations.\n\nResources\n\n\n\nResource\nDescription\n\n\n\n\nBugs & Feature Requests\nAll bug submission require a link to a test case, and a set of steps to reproduce the issue. You can make a test case by forking this JSFiddle, then submit your bug report on GitHub Issues\n\n\nLive Chat\nJoin our Gitter.im Room\n\n\nNewsletter Updates\nSign up for updates at semantic-ui.com\n\n\nAdditional Resources\nSubmit a question on StackOverflow or ask our Google Group\n\n\n\nPlaces to Help\n\n\n\nProject\nHow To Help\nNext Step\n\n\n\n\nLocalization\nHelp us translate Semantic UI into your language\nJoin our Translation Community\n\n\nSCSS\nSASS needs PR to support variables inside @import\nAdd Pull Request for #739\n\n\nAngular\nHelp develop angular bindings\nReach Out on GitHub Issues\n\n\nGuides & Tutorials\nHelp write guides and tutorials\nJoin the discussion\n\n\n\nReaching Out\nIf you'd like to start a conversation about Semantic feel free to e-mail me at jack@semantic-ui.com\n\n\n\n"}, {"repo": "expressjs/express", "language": "JavaScript", "readme": "\n\nFast, unopinionated, minimalist web framework for node.\n\n\n\n\n\nconst express = require('express')\nconst app = express()\n\napp.get('/', function (req, res) {\n  res.send('Hello World')\n})\n\napp.listen(3000)\nInstallation\nThis is a Node.js module available through the\nnpm registry.\nBefore installing, download and install Node.js.\nNode.js 0.10 or higher is required.\nInstallation is done using the\nnpm install command:\n$ npm install express\nFollow our installing guide\nfor more information.\nFeatures\n\nRobust routing\nFocus on high performance\nSuper-high test coverage\nHTTP helpers (redirection, caching, etc)\nView system supporting 14+ template engines\nContent negotiation\nExecutable for generating applications quickly\n\nDocs & Community\n\nWebsite and Documentation - [website repo]\n#express on freenode IRC\nGitHub Organization for Official Middleware & Modules\nVisit the Wiki\nGoogle Group for discussion\nGitter for support and discussion\n\nPROTIP Be sure to read Migrating from 3.x to 4.x as well as New features in 4.x.\nSecurity Issues\nIf you discover a security vulnerability in Express, please see Security Policies and Procedures.\nQuick Start\nThe quickest way to get started with express is to utilize the executable express(1) to generate an application as shown below:\nInstall the executable. The executable's major version will match Express's:\n$ npm install -g express-generator@4\nCreate the app:\n$ express /tmp/foo && cd /tmp/foo\nInstall dependencies:\n$ npm install\nStart the server:\n$ npm start\nView the website at: http://localhost:3000\nPhilosophy\nThe Express philosophy is to provide small, robust tooling for HTTP servers, making\nit a great solution for single page applications, web sites, hybrids, or public\nHTTP APIs.\nExpress does not force you to use any specific ORM or template engine. With support for over\n14 template engines via Consolidate.js,\nyou can quickly craft your perfect framework.\nExamples\nTo view the examples, clone the Express repo and install the dependencies:\n$ git clone git://github.com/expressjs/express.git --depth 1\n$ cd express\n$ npm install\nThen run whichever example you want:\n$ node examples/content-negotiation\nTests\nTo run the test suite, first install the dependencies, then run npm test:\n$ npm install\n$ npm test\nContributing\nContributing Guide\nPeople\nThe original author of Express is TJ Holowaychuk\nThe current lead maintainer is Douglas Christopher Wilson\nList of all contributors\nLicense\nMIT\n\n"}, {"repo": "chartjs/Chart.js", "language": "JavaScript", "readme": "\n\n\n    Simple yet flexible JavaScript charting for designers & developers\n\n\n\n\n\n\n\n\nDocumentation\n\nIntroduction\nGetting Started\nGeneral\nConfiguration\nCharts\nAxes\nDevelopers\nPopular Extensions\nSamples\n\nContributing\nInstructions on building and testing Chart.js can be found in the documentation. Before submitting an issue or a pull request, please take a moment to look over the contributing guidelines first. For support, please post questions on Stack Overflow with the chartjs tag.\nLicense\nChart.js is available under the MIT license.\n\n"}, {"repo": "PanJiaChen/vue-element-admin", "language": "Vue", "readme": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnglish | \u7b80\u4f53\u4e2d\u6587 | \u65e5\u672c\u8a9e | Spanish\nIntroduction\nvue-element-admin is a production-ready front-end solution for admin interfaces. It is based on vue and uses the UI Toolkit element-ui.\nvue-element-admin is based on the newest development stack of vue and it has a built-in i18n solution, typical templates for enterprise applications, and lots of awesome features. It helps you build large and complex Single-Page Applications. I believe whatever your needs are, this project will help you.\n\n\nPreview\n\n\nDocumentation\n\n\nGitter\n\n\nDonate\n\n\nWiki\n\n\nGitee \u56fd\u5185\u7528\u6237\u53ef\u8bbf\u95ee\u8be5\u5730\u5740\u5728\u7ebf\u9884\u89c8\n\n\nBase template recommends using: vue-admin-template\n\n\nDesktop: electron-vue-admin\n\n\nTypescript: vue-typescript-admin-template (Credits: @Armour)\n\n\nawesome-project\n\n\nAfter the v4.1.0+ version, the default master branch will not support i18n. Please use i18n Branch, it will keep up with the master update\nThe current version is v4.0+ build on vue-cli. If you find a problem, please put issue. If you want to use the old version , you can switch branch to tag/3.11.0, it does not rely on vue-cli\nThis project does not support low version browsers (e.g. IE). Please add polyfill by yourself.\nPreparation\nYou need to install node and git locally. The project is based on ES2015+, vue, vuex, vue-router, vue-cli , axios and element-ui, all request data is simulated using Mock.js.\nUnderstanding and learning this knowledge in advance will greatly help the use of this project.\n\n\n\nSponsors\nBecome a sponsor and get your logo on our README on GitHub with a link to your site. [Become a sponsor]\nAdmin Dashboard Templates made with Vue, React and Angular.\nFeatures\n- Login / Logout\n\n- Permission Authentication\n  - Page permission\n  - Directive permission\n  - Permission configuration page\n  - Two-step login\n\n- Multi-environment build\n  - dev sit stage prod\n\n- Global Features\n  - I18n\n  - Multiple dynamic themes\n  - Dynamic sidebar (supports multi-level routing)\n  - Dynamic breadcrumb\n  - Tags-view (Tab page Support right-click operation)\n  - Svg Sprite\n  - Mock data\n  - Screenfull\n  - Responsive Sidebar\n\n- Editor\n  - Rich Text Editor\n  - Markdown Editor\n  - JSON Editor\n\n- Excel\n  - Export Excel\n  - Upload Excel\n  - Visualization Excel\n  - Export zip\n\n- Table\n  - Dynamic Table\n  - Drag And Drop Table\n  - Inline Edit Table\n\n- Error Page\n  - 401\n  - 404\n\n- Components\n  - Avatar Upload\n  - Back To Top\n  - Drag Dialog\n  - Drag Select\n  - Drag Kanban\n  - Drag List\n  - SplitPane\n  - Dropzone\n  - Sticky\n  - CountTo\n\n- Advanced Example\n- Error Log\n- Dashboard\n- Guide Page\n- ECharts\n- Clipboard\n- Markdown to html\n\nGetting started\n# clone the project\ngit clone https://github.com/PanJiaChen/vue-element-admin.git\n\n# enter the project directory\ncd vue-element-admin\n\n# install dependency\nnpm install\n\n# develop\nnpm run dev\nThis will automatically open http://localhost:9527\nBuild\n# build for test environment\nnpm run build:stage\n\n# build for production environment\nnpm run build:prod\nAdvanced\n# preview the release environment effect\nnpm run preview\n\n# preview the release environment effect + static resource analysis\nnpm run preview -- --report\n\n# code format check\nnpm run lint\n\n# code format check and auto fix\nnpm run lint -- --fix\nRefer to Documentation for more information\nChangelog\nDetailed changes for each release are documented in the release notes.\nOnline Demo\nPreview\nDonate\nIf you find this project useful, you can buy author a glass of juice \ud83c\udf79\n\nPaypal Me\nBuy me a coffee\nBrowsers support\nModern browsers and Internet Explorer 10+.\n\n\n\nIE / Edge\nFirefox\nChrome\nSafari\n\n\n\n\nIE10, IE11, Edge\nlast 2 versions\nlast 2 versions\nlast 2 versions\n\n\n\nLicense\nMIT\nCopyright (c) 2017-present PanJiaChen\n\n"}, {"repo": "elastic/elasticsearch", "language": "Java", "readme": "\nElasticsearch\nA Distributed RESTful Search Engine\nhttps://www.elastic.co/products/elasticsearch\nElasticsearch is a distributed RESTful search engine built for the cloud. Features include:\n\nDistributed and Highly Available Search Engine.\n\t\nEach index is fully sharded with a configurable number of shards.\nEach shard can have one or more replicas.\nRead / Search operations performed on any of the replica shards.\n\nMulti Tenant.\n\t\nSupport for more than one index.\nIndex level configuration (number of shards, index storage, \u2026).\n\nVarious set of APIs\n\t\nHTTP RESTful API\nNative Java API.\nAll APIs perform automatic node operation rerouting.\n\nDocument oriented\n\t\nNo need for upfront schema definition.\nSchema can be defined for customization of the indexing process.\n\nReliable, Asynchronous Write Behind for long term persistency.\n(Near) Real Time Search.\nBuilt on top of Lucene\n\t\nEach shard is a fully functional Lucene index\nAll the power of Lucene easily exposed through simple configuration / plugins.\n\nPer operation consistency\n\t\nSingle document level operations are atomic, consistent, isolated and durable.\n\n\nGetting Started\nFirst of all, DON\u2019T PANIC. It will take 5 minutes to get the gist of what Elasticsearch is all about.\nRequirements\nYou need to have a recent version of Java installed. See the Setup page for more information.\nInstallation\n\nDownload and unzip the Elasticsearch official distribution.\nRun bin/elasticsearch on unix, or bin\\elasticsearch.bat on windows.\nRun curl -X GET http://localhost:9200/.\nStart more servers \u2026\n\nIndexing\nLet\u2019s try and index some twitter like information. First, let\u2019s index some tweets (the twitter index will be created automatically):\ncurl -XPUT 'http://localhost:9200/twitter/_doc/1?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T13:12:00\",\n    \"message\": \"Trying out Elasticsearch, so far so good?\"\n}'\n\ncurl -XPUT 'http://localhost:9200/twitter/_doc/2?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T14:12:12\",\n    \"message\": \"Another tweet, will it be indexed?\"\n}'\n\ncurl -XPUT 'http://localhost:9200/twitter/_doc/3?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"elastic\",\n    \"post_date\": \"2010-01-15T01:46:38\",\n    \"message\": \"Building the site, should be kewl\"\n}'\n\nNow, let\u2019s see if the information was added by GETting it:\ncurl -XGET 'http://localhost:9200/twitter/_doc/1?pretty=true'\ncurl -XGET 'http://localhost:9200/twitter/_doc/2?pretty=true'\ncurl -XGET 'http://localhost:9200/twitter/_doc/3?pretty=true'\n\nSearching\nMmm search\u2026, shouldn\u2019t it be elastic?\nLet\u2019s find all the tweets that kimchy posted:\ncurl -XGET 'http://localhost:9200/twitter/_search?q=user:kimchy&pretty=true'\n\nWe can also use the JSON query language Elasticsearch provides instead of a query string:\ncurl -XGET 'http://localhost:9200/twitter/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"match\" : { \"user\": \"kimchy\" }\n    }\n}'\n\nJust for kicks, let\u2019s get all the documents stored (we should see the tweet from elastic as well):\ncurl -XGET 'http://localhost:9200/twitter/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"match_all\" : {}\n    }\n}'\n\nWe can also do range search (the post_date was automatically identified as date)\ncurl -XGET 'http://localhost:9200/twitter/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"range\" : {\n            \"post_date\" : { \"from\" : \"2009-11-15T13:00:00\", \"to\" : \"2009-11-15T14:00:00\" }\n        }\n    }\n}'\n\nThere are many more options to perform search, after all, it\u2019s a search product no? All the familiar Lucene queries are available through the JSON query language, or through the query parser.\nMulti Tenant and Indices\nMan, that twitter index might get big (in this case, index size == valuation). Let\u2019s see if we can structure our twitter system a bit differently in order to support such large amounts of data.\nElasticsearch supports multiple indices. In the previous example we used an index called twitter that stored tweets for every user.\nAnother way to define our simple twitter system is to have a different index per user (note, though that each index has an overhead). Here is the indexing curl\u2019s in this case:\ncurl -XPUT 'http://localhost:9200/kimchy/_doc/1?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T13:12:00\",\n    \"message\": \"Trying out Elasticsearch, so far so good?\"\n}'\n\ncurl -XPUT 'http://localhost:9200/kimchy/_doc/2?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T14:12:12\",\n    \"message\": \"Another tweet, will it be indexed?\"\n}'\n\nThe above will index information into the kimchy index. Each user will get their own special index.\nComplete control on the index level is allowed. As an example, in the above case, we might want to change from the default 1 shard with 1 replica per index, to 2 shards with 1 replica per index (because this user tweets a lot). Here is how this can be done (the configuration can be in yaml as well):\ncurl -XPUT http://localhost:9200/another_user?pretty -H 'Content-Type: application/json' -d '\n{\n    \"settings\" : {\n        \"index.number_of_shards\" : 2,\n        \"index.number_of_replicas\" : 1\n    }\n}'\n\nSearch (and similar operations) are multi index aware. This means that we can easily search on more than one\nindex (twitter user), for example:\ncurl -XGET 'http://localhost:9200/kimchy,another_user/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"match_all\" : {}\n    }\n}'\n\nOr on all the indices:\ncurl -XGET 'http://localhost:9200/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"match_all\" : {}\n    }\n}'\n\n{One liner teaser}: And the cool part about that? You can easily search on multiple twitter users (indices), with different boost levels per user (index), making social search so much simpler (results from my friends rank higher than results from friends of my friends).\nDistributed, Highly Available\nLet\u2019s face it, things will fail\u2026.\nElasticsearch is a highly available and distributed search engine. Each index is broken down into shards, and each shard can have one or more replicas. By default, an index is created with 1 shards and 1 replica per shard (1/1). There are many topologies that can be used, including 1/10 (improve search performance), or 20/1 (improve indexing performance, with search executed in a map reduce fashion across shards).\nIn order to play with the distributed nature of Elasticsearch, simply bring more nodes up and shut down nodes. The system will continue to serve requests (make sure you use the correct http port) with the latest data indexed.\nWhere to go from here?\nWe have just covered a very small portion of what Elasticsearch is all about. For more information, please refer to the elastic.co website. General questions can be asked on the Elastic Discourse forum or on IRC on Freenode at #elasticsearch. The Elasticsearch GitHub repository is reserved for bug reports and feature requests only.\nBuilding from Source\nElasticsearch uses Gradle for its build system.\nIn order to create a distribution, simply run the ./gradlew assemble command in the cloned directory.\nThe distribution for each project will be created under the build/distributions directory in that project.\nSee the TESTING file for more information about running the Elasticsearch test suite.\nUpgrading from older Elasticsearch versions\nIn order to ensure a smooth upgrade process from earlier versions of Elasticsearch, please see our upgrade documentation for more details on the upgrade process.\n"}, {"repo": "keras-team/keras", "language": "Python", "readme": "\nKeras: Deep Learning for humans\n\n\n\nYou have just found Keras.\nKeras is a high-level neural networks API, written in Python and capable of running on top of TensorFlow, CNTK, or Theano. It was developed with a focus on enabling fast experimentation. Being able to go from idea to result with the least possible delay is key to doing good research.\nUse Keras if you need a deep learning library that:\n\nAllows for easy and fast prototyping (through user friendliness, modularity, and extensibility).\nSupports both convolutional networks and recurrent networks, as well as combinations of the two.\nRuns seamlessly on CPU and GPU.\n\nRead the documentation at Keras.io.\nKeras is compatible with: Python 2.7-3.6.\n\nMulti-backend Keras and tf.keras:\nAt this time, we recommend that Keras users who use multi-backend Keras with the TensorFlow backend switch to tf.keras in TensorFlow 2.0. tf.keras is better maintained and has better integration with TensorFlow features (eager execution, distribution support and other).\nKeras 2.2.5 was the last release of Keras implementing the 2.2.* API. It was the last release to only support TensorFlow 1 (as well as Theano and CNTK).\nThe current release is Keras 2.3.0, which makes significant API changes and add support for TensorFlow 2.0. The 2.3.0 release will be the last major release of multi-backend Keras. Multi-backend Keras is superseded by tf.keras.\nBugs present in multi-backend Keras will only be fixed until April 2020 (as part of minor releases).\nFor more information about the future of Keras, see the Keras meeting notes.\n\nGuiding principles\n\n\nUser friendliness. Keras is an API designed for human beings, not machines. It puts user experience front and center. Keras follows best practices for reducing cognitive load: it offers consistent & simple APIs, it minimizes the number of user actions required for common use cases, and it provides clear and actionable feedback upon user error.\n\n\nModularity. A model is understood as a sequence or a graph of standalone, fully configurable modules that can be plugged together with as few restrictions as possible. In particular, neural layers, cost functions, optimizers, initialization schemes, activation functions and regularization schemes are all standalone modules that you can combine to create new models.\n\n\nEasy extensibility. New modules are simple to add (as new classes and functions), and existing modules provide ample examples. To be able to easily create new modules allows for total expressiveness, making Keras suitable for advanced research.\n\n\nWork with Python. No separate models configuration files in a declarative format. Models are described in Python code, which is compact, easier to debug, and allows for ease of extensibility.\n\n\n\nGetting started: 30 seconds to Keras\nThe core data structure of Keras is a model, a way to organize layers. The simplest type of model is the Sequential model, a linear stack of layers. For more complex architectures, you should use the Keras functional API, which allows to build arbitrary graphs of layers.\nHere is the Sequential model:\nfrom keras.models import Sequential\n\nmodel = Sequential()\nStacking layers is as easy as .add():\nfrom keras.layers import Dense\n\nmodel.add(Dense(units=64, activation='relu', input_dim=100))\nmodel.add(Dense(units=10, activation='softmax'))\nOnce your model looks good, configure its learning process with .compile():\nmodel.compile(loss='categorical_crossentropy',\n              optimizer='sgd',\n              metrics=['accuracy'])\nIf you need to, you can further configure your optimizer. A core principle of Keras is to make things reasonably simple, while allowing the user to be fully in control when they need to (the ultimate control being the easy extensibility of the source code).\nmodel.compile(loss=keras.losses.categorical_crossentropy,\n              optimizer=keras.optimizers.SGD(lr=0.01, momentum=0.9, nesterov=True))\nYou can now iterate on your training data in batches:\n# x_train and y_train are Numpy arrays --just like in the Scikit-Learn API.\nmodel.fit(x_train, y_train, epochs=5, batch_size=32)\nAlternatively, you can feed batches to your model manually:\nmodel.train_on_batch(x_batch, y_batch)\nEvaluate your performance in one line:\nloss_and_metrics = model.evaluate(x_test, y_test, batch_size=128)\nOr generate predictions on new data:\nclasses = model.predict(x_test, batch_size=128)\nBuilding a question answering system, an image classification model, a Neural Turing Machine, or any other model is just as fast. The ideas behind deep learning are simple, so why should their implementation be painful?\nFor a more in-depth tutorial about Keras, you can check out:\n\nGetting started with the Sequential model\nGetting started with the functional API\n\nIn the examples folder of the repository, you will find more advanced models: question-answering with memory networks, text generation with stacked LSTMs, etc.\n\nInstallation\nBefore installing Keras, please install one of its backend engines: TensorFlow, Theano, or CNTK. We recommend the TensorFlow backend.\n\nTensorFlow installation instructions.\nTheano installation instructions.\nCNTK installation instructions.\n\nYou may also consider installing the following optional dependencies:\n\ncuDNN (recommended if you plan on running Keras on GPU).\nHDF5 and h5py (required if you plan on saving Keras models to disk).\ngraphviz and pydot (used by visualization utilities to plot model graphs).\n\nThen, you can install Keras itself. There are two ways to install Keras:\n\nInstall Keras from PyPI (recommended):\n\nNote: These installation steps assume that you are on a Linux or Mac environment.\nIf you are on Windows, you will need to remove sudo to run the commands below.\nsudo pip install keras\nIf you are using a virtualenv, you may want to avoid using sudo:\npip install keras\n\nAlternatively: install Keras from the GitHub source:\n\nFirst, clone Keras using git:\ngit clone https://github.com/keras-team/keras.git\nThen, cd to the Keras folder and run the install command:\ncd keras\nsudo python setup.py install\n\nConfiguring your Keras backend\nBy default, Keras will use TensorFlow as its tensor manipulation library. Follow these instructions to configure the Keras backend.\n\nSupport\nYou can ask questions and join the development discussion:\n\nOn the Keras Google group.\nOn the Keras Slack channel. Use this link to request an invitation to the channel.\n\nYou can also post bug reports and feature requests (only) in GitHub issues. Make sure to read our guidelines first.\n\nWhy this name, Keras?\nKeras (\u03ba\u03ad\u03c1\u03b1\u03c2) means horn in Greek. It is a reference to a literary image from ancient Greek and Latin literature, first found in the Odyssey, where dream spirits (Oneiroi, singular Oneiros) are divided between those who deceive men with false visions, who arrive to Earth through a gate of ivory, and those who announce a future that will come to pass, who arrive through a gate of horn. It's a play on the words \u03ba\u03ad\u03c1\u03b1\u03c2 (horn) / \u03ba\u03c1\u03b1\u03af\u03bd\u03c9 (fulfill), and \u1f10\u03bb\u03ad\u03c6\u03b1\u03c2 (ivory) / \u1f10\u03bb\u03b5\u03c6\u03b1\u03af\u03c1\u03bf\u03bc\u03b1\u03b9 (deceive).\nKeras was initially developed as part of the research effort of project ONEIROS (Open-ended Neuro-Electronic Intelligent Robot Operating System).\n\n\"Oneiroi are beyond our unravelling --who can be sure what tale they tell? Not all that men look for comes to pass. Two gates there are that give passage to fleeting Oneiroi; one is made of horn, one of ivory. The Oneiroi that pass through sawn ivory are deceitful, bearing a message that will not be fulfilled; those that come out through polished horn have truth behind them, to be accomplished for men who see them.\" Homer, Odyssey 19. 562 ff (Shewring translation).\n\n\n\n"}, {"repo": "django/django", "language": "Python", "readme": "\nDjango\nDjango is a high-level Python Web framework that encourages rapid development\nand clean, pragmatic design. Thanks for checking it out.\nAll documentation is in the \"docs\" directory and online at\nhttps://docs.djangoproject.com/en/stable/. If you're just getting started,\nhere's how we recommend you read the docs:\n\nFirst, read docs/intro/install.txt for instructions on installing Django.\nNext, work through the tutorials in order (docs/intro/tutorial01.txt,\ndocs/intro/tutorial02.txt, etc.).\nIf you want to set up an actual deployment server, read\ndocs/howto/deployment/index.txt for instructions.\nYou'll probably want to read through the topical guides (in docs/topics)\nnext; from there you can jump to the HOWTOs (in docs/howto) for specific\nproblems, and check out the reference (docs/ref) for gory details.\nSee docs/README for instructions on building an HTML version of the docs.\n\nDocs are updated rigorously. If you find any problems in the docs, or think\nthey should be clarified in any way, please take 30 seconds to fill out a\nticket here: https://code.djangoproject.com/newticket\nTo get more help:\n\nJoin the #django channel on irc.freenode.net. Lots of helpful people hang\nout there. See https://en.wikipedia.org/wiki/Wikipedia:IRC/Tutorial if you're\nnew to IRC.\nJoin the django-users mailing list, or read the archives, at\nhttps://groups.google.com/group/django-users.\n\nTo contribute to Django:\n\nCheck out https://docs.djangoproject.com/en/dev/internals/contributing/ for\ninformation about getting involved.\n\nTo run Django's test suite:\n\nFollow the instructions in the \"Unit tests\" section of\ndocs/internals/contributing/writing-code/unit-tests.txt, published online at\nhttps://docs.djangoproject.com/en/dev/internals/contributing/writing-code/unit-tests/#running-the-unit-tests\n\n\n"}, {"repo": "MisterBooo/LeetCodeAnimation", "language": "Java", "readme": "\n\n\n\nThere is an English version of README here. just click it\uff01\n\u6211\u4f1a\u5c3d\u529b\u5c06 LeetCode \u4e0a\u6240\u6709\u7684\u9898\u76ee\u90fd\u7528\u52a8\u753b\u7684\u5f62\u5f0f\u6f14\u793a\u51fa\u6765\uff0c\u8ba1\u5212\u7528 3 \u5230 4 \u5e74\u65f6\u95f4\u53bb\u5b8c\u6210\u5b83\uff0c\u671f\u5f85\u4e0e\u4f60\u89c1\u8bc1\u8fd9\u4e00\u5929\uff01\n\u6587\u7ae0\u6700\u65b0\u9996\u53d1\u4e8e\u5fae\u4fe1\u516c\u4f17\u53f7 \u4e94\u5206\u949f\u5b66\u7b97\u6cd5 \uff0c\u60a8\u53ef\u4ee5\u5173\u6ce8\u83b7\u53d6\u6700\u65b0\u7684\u6587\u7ae0\u3002\n\u6211\u5df2\u7ecf\u5c06\u6240\u6709\u6587\u7ae0\u540c\u6b65\u5230\u4e86\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u5982\u679c\u56fd\u5185\u8bbf\u95ee GitHub \u8f83\u6162\uff08\u56fe\u7247\u88c2\u5f00\uff09\uff0c\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u5730\u5740\uff1ahttps://www.cxyxiaowu.com/likou/leetcode\u3002\n\u6c47\u603b\n\n\n\n\u5e8f\u53f7\n\u9898\u76ee&\u9898\u89e3\n\u52a8\u753b\n\n\n\n\n0\n\u5341\u5927\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5\u52a8\u753b\u4e0e\u89e3\u6790\uff0c\u770b\u6211\u5c31\u591f\u4e86\uff01\uff08\u914d\u4ee3\u7801\u5b8c\u5168\u7248\uff09\n\n\n\n1\n\u4e24\u6570\u4e4b\u548c\n\n\n\n2\n\u4e24\u6570\u76f8\u52a0\n\n\n\n3\n\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\n\n\n\n4\n\u5bfb\u627e\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570\n\n\n\n9\n\u56de\u6587\u6570\n\n\n\n10\n\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\n\n\n\n11\n\u76db\u6700\u591a\u6c34\u7684\u5bb9\u5668\n\n\n\n15\n\u4e09\u6570\u4e4b\u548c\n\n\n\n19\n\u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c N \u4e2a\u8282\u70b9\n\n\n\n20\n\u6709\u6548\u7684\u62ec\u53f7\n\n\n\n21\n\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868\n\n\n\n23\n\u5408\u5e76 K \u4e2a\u6392\u5e8f\u94fe\u8868\n\n\n\n24\n\u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9\n\n\n\n25\nK \u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868\n\n\n\n26\n\u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879\n\n\n\n38\n\u62a5\u6570\n\n\n\n41\n\u7f3a\u5931\u7684\u7b2c\u4e00\u4e2a\u6b63\u6570\n\n\n\n66\n\u52a0\u4e00\n\n\n\n75\n\u989c\u8272\u5206\u7c7b\n\n\n\n86\n\u5206\u5272\u94fe\u8868\n\n\n\n92\n\u53cd\u8f6c\u94fe\u8868 II\n\n\n\n94\n\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\n\n\n\n101\n\u5bf9\u79f0\u4e8c\u53c9\u6811\n\n\n\n102\n\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386\n\n\n\n103\n\u4e8c\u53c9\u6811\u7684\u952f\u9f7f\u5f62\u5c42\u6b21\u904d\u5386\n\n\n\n107\n\u4e8c\u53c9\u6811\u7684\u5c42\u6b21\u904d\u5386 II\n\n\n\n118\n\u6768\u8f89\u4e09\u89d2\n\n\n\n119\n\u6768\u8f89\u4e09\u89d2II\n\n\n\n110\n\u5e73\u8861\u4e8c\u53c9\u6811\n\n\n\n121\n\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a\n\n\n\n122\n\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673aII\n\n\n\n123\n\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673aIII\n\n\n\n125\n\u9a8c\u8bc1\u56de\u6587\u4e32\n\n\n\n131\n\u5206\u5272\u56de\u6587\u4e32\n\n\n\n136\n\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\n\n\n\n138\n\u590d\u5236\u5e26\u968f\u673a\u6307\u9488\n\n\n\n139\n\u5355\u8bcd\u62c6\u5206\n\n\n\n141\n\u73af\u5f62\u94fe\u8868\n\n\n\n144\n\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386\n\n\n\n145\n\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386\n\n\n\n146\nLRU\u7f13\u5b58\u673a\u5236\n\n\n\n150\n\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u6c42\u503c\n\n\n\n153\n\u5bfb\u627e\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u6700\u5c0f\u503c\n\n\n\n164\n\u6700\u5927\u95f4\u8ddd\n\n\n\n167\n\u4e24\u6570\u4e4b\u548c II - \u8f93\u5165\u6709\u5e8f\u6570\u7ec4\n\n\n\n169\n\u6c42\u4f17\u6570\n\n\n\n172\n\u9636\u4e58\u540e\u7684\u96f6\n\n\n\n187\n\u91cd\u590d\u7684 DNA \u5e8f\u5217\n\n\n\n191\n\u4f4d1\u7684\u4e2a\u6570\n\n\n\n199\n\u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe\n\n\n\n201\n\u6570\u5b57\u8303\u56f4\u6309\u4f4d\u4e0e\n\n\n\n203\n\u79fb\u9664\u94fe\u8868\u5143\u7d20\n\n\n\n206\n\u53cd\u8f6c\u94fe\u8868\n\n\n\n209\n\u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4\n\n\n\n219\n\u5b58\u5728\u91cd\u590d\u5143\u7d20 II\n\n\n\n231\n2\u7684\u5e42\n\n\n\n237\n\u5220\u9664\u94fe\u8868\u4e2d\u7684\u8282\u70b9\n\n\n\n239\n\u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c\n\n\n\n242\n\u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\n\n\n\n268\n\u7f3a\u5931\u6570\u5b57\n\n\n\n279\n\u5b8c\u5168\u5e73\u65b9\u6570\n\n\n\n283\n\u79fb\u52a8\u96f6\n\n\n\n295\n\u6570\u636e\u6d41\u7684\u4e2d\u4f4d\u6570\n\n\n\n301\n\u5220\u9664\u65e0\u6548\u7684\u62ec\u53f7\n\n\n\n319\n\u706f\u6ce1\u5f00\u5173\n\n\n\n326\n3 \u7684\u5e42\n\n\n\n328\n\u5947\u5076\u94fe\u8868\n\n\n\n342\n4\u7684\u5e42\n\n\n\n344\n\u53cd\u8f6c\u5b57\u7b26\u4e32\n\n\n\n347\n\u524dK\u4e2a\u9ad8\u9891\u5143\u7d20\n\n\n\n349\n\u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6\n\n\n\n350\n\u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 II\n\n\n\n445\n\u4e24\u6570\u76f8\u52a0 II\n\n\n\n447\n\u56de\u65cb\u9556\u7684\u6570\u91cf\n\n\n\n454\n\u56db\u6570\u76f8\u52a0 II\n\n\n\n642\n\u8bbe\u8ba1\u4e00\u4e2a\u641c\u7d22\u81ea\u52a8\u5b8c\u6210\u7cfb\u7edf\n\n\n\n690\n\u5458\u5de5\u7684\u91cd\u8981\u6027\n\n\n\n877\n\u77f3\u5b50\u6e38\u620f\n\n\n\n1025\n\u9664\u6570\u535a\u5f08\n\n\n\n1099\n\u5c0f\u4e8e K \u7684\u4e24\u6570\u4e4b\u548c\n\n\n\n\n\u51e0\u7bc7\u5b66\u4e60\u7b97\u6cd5\u7684\u7ecf\u9a8c\u8d34\n\u516d\u5343\u5b57\u5e72\u8d27\u6587\uff1a\u5230\u5e95\u8981\u600e\u4e48\u53bb\u5b66\u7b97\u6cd5\uff1f\n\u5fae\u4fe1\u5927\u4f6c\u603b\u7ed3\u7684\u7b97\u6cd5\u5b66\u4e60\u7ecf\u9a8c\nLeetCode \u5237 500 \u9053\u9898\uff0c\u7b14\u8bd5/\u9762\u8bd5\u7a33\u5417\uff1f\u8c08\u8c08\u7b97\u6cd5\u7684\u5b66\u4e60\n\u90ae\u7bb1\uff1amisterbigbooo@gmail.com\n\u559c\u6b22\u5c31 star\u2764\ufe0f \u4e00\u4e0b\u5427\uff01\n\u548c\u6211\u4ea4\u6d41\n\n\n"}, {"repo": "shadowsocks/shadowsocks-windows", "language": "C#", "readme": "\n Shadowsocks for Windows\n\n\u4e2d\u6587\u8bf4\u660e\nFeatures\n\nSystem proxy configuration\nPAC mode and global mode\nGFWList and user rules\nSupports HTTP proxy\nSupports server auto switching\nSupports UDP relay (see Usage)\nSupports plugins\n\nDownload\nDownload the latest release from release page.\nRequirements\nMicrosoft .NET Framework 4.7.2 or higher, Microsoft Visual C++ 2015 Redistributable (x86) .\nBasic\n\nFind Shadowsocks icon in the notification tray\nYou can add multiple servers in servers menu\nSelect Enable System Proxy menu to enable system proxy. Please disable other\nproxy addons in your browser, or set them to use system proxy\nYou can also configure your browser proxy manually if you don't want to enable\nsystem proxy. Set Socks5 or HTTP proxy to 127.0.0.1:1080. You can change this\nport in Servers -> Edit Servers\n\nPAC\n\nYou can change PAC rules by editing the PAC file. When you save the PAC file\nwith any editor, Shadowsocks will notify browsers about the change automatically\nYou can also update PAC file from GFWList (maintained by 3rd party)\nYou can also use online PAC URL\n\nFor Windows10 Store and related applications, please execute the following command under Admin privilege:\nnetsh winhttp import proxy source=ie\n\nServer Auto Switching\n\nLoad balance: choosing server randomly\nHigh availability: choosing the best server (low latency and packet loss)\nChoose By Total Package Loss: ping and choose. Please also enable\nAvailability Statistics in the menu if you want to use this\nWrite your own strategy by implement IStrategy interface and send us a pull request!\n\nUDP\nFor UDP, you need to use SocksCap or ProxyCap to force programs you want\nto be proxied to tunnel over Shadowsocks\nMultiple Instances\nIf you want to manage multiple servers using other tools like SwitchyOmega,\nyou can start multiple Shadowsocks instances. To avoid configuration conflicts,\ncopy Shadowsocks to a new directory and choose a different local port.\nPlugins\nIf you would like to connect to server via a plugin, please set the plugin's\npath (relative or absolute) on Edit Servers form.\nNote: Forward Proxy will not be used while a plugin is enabled.\nDetails:\nWorking with non SIP003 standard Plugin.\nGlobal hotkeys\nHotkeys could be registered automatically on startup.\nIf you are using multiple instances of Shadowsocks,\nyou must set different key combination for each instance.\nHow to input?\n\nPut focus in the corresponding textbox.\nPress the key combination that you want to use.\nRelease all keys when you think it is ready.\nYour input appears in the textbox.\n\nHow to change?\n\nPut focus in the corresponding textbox.\nPress BackSpace key to clear content.\nRe-input new key combination.\n\nHow to deactivate?\n\nClear content in the textbox that you want to deactivate,\nif you want to deactivate all, please clear all textboxes.\nPress OK button to confirm.\n\nMeaning of label color\n\nGreen: This key combination is not occupied by other programs and register successfully.\nYellow: This key combination is occupied by other programs and you have to change to another one.\nTransparent without color: The initial status.\n\nServer Configuration\nPlease visit Servers for more information.\nExperimental\nExperimental Features\nDevelopment\n\nVisual Studio 2017 & .NET Framework 4.7.2 Developer Pack are required.\nIt is recommended to share your idea on the Issue Board before you start to work,\nespecially for feature development.\n\nLicense\nGPLv3\nOpen Source Components / Libraries\nCaseless.Fody (MIT)    https://github.com/Fody/Caseless\nCostura.Fody (MIT)     https://github.com/Fody/Costura\nFody (MIT)             https://github.com/Fody/Fody\nGlobalHotKey (GPLv3)   https://github.com/kirmir/GlobalHotKey\nNewtonsoft.Json (MIT)  https://www.newtonsoft.com/json\nStringEx.CS ()         https://github.com/LazyMode/StringEx\nZXing.Net (Apache 2.0) https://github.com/micjahn/ZXing.Net\n\nlibsscrypto (GPLv2)    https://github.com/shadowsocks/libsscrypto\nPrivoxy (GPLv2)        https://www.privoxy.org\nSysproxy ()            https://github.com/Noisyfox/sysproxy\n\n\n"}, {"repo": "chrislgarry/Apollo-11", "language": "Assembly", "readme": "\nApollo-11\n\n\ud83c\udf8c\nBahasa Indonesia,\nCatal\u00e0,\nDeutsch,\nEnglish,\nEspa\u00f1ol,\nFran\u00e7ais,\nItaliano,\nPolski,\nPortugu\u00eas,\n\u0420\u0443\u0441\u0441\u043a\u0438\u0439,\nT\u00fcrk\u00e7e,\nRom\u00e2n\u0103,\n\u0627\u0644\u0639\u0631\u0628\u064a\u0629,\n\u0939\u093f\u0902\u0926\u0940,\n\u6b63\u9ad4\u4e2d\u6587,\n\u7b80\u4f53\u4e2d\u6587,\n\ud55c\uad6d\uc5b4,\n\u65e5\u672c\nOriginal Apollo 11 guidance computer (AGC) source code for Command\nModule (Comanche055) and Lunar Module (Luminary099). Digitized by\nthe folks at Virtual AGC and MIT Museum. The goal is to be\na repo for the original Apollo 11 source code. As such, PRs are\nwelcome for any issues identified between the transcriptions in this\nrepository and the original source scans for Luminary 099 and\nComanche 055, as well as any files I may have missed.\nContributing\nPlease read CONTRIBUTING.md before opening a pull request.\nCompiling\nIf you are interested in compiling the original source code, check\nout Virtual AGC.\nAttribution\n\n\n\n\u00a0\n\u00a0\n\n\n\n\nCopyright\nPublic domain\n\n\nComanche055\nPart of the source code for Colossus 2A, the Command Module's (CM) Apollo Guidance Computer (AGC) for Apollo 11Assemble revision 055 of AGC program Comanche by NASA2021113-051. 10:28 APR. 1, 1969\n\n\nLuminary099\nPart of the source code for Luminary 1A, the Lunar Module's (LM) Apollo Guidance Computer (AGC) for Apollo 11Assemble revision 001 of AGC program LYM99 by NASA2021112-061. 16:27 JUL. 14, 1969\n\n\nAssembler\nyaYUL\n\n\nContact\nRon Burkey info@sandroid.org\n\n\nWebsite\nwww.ibiblio.org/apollo\n\n\nDigitalization\nThis source code has been transcribed or otherwise adapted from digitized images of a hardcopy from the MIT Museum. The digitization was performed by Paul Fjeld, and arranged for by Deborah Douglas of the Museum. Many thanks to both.\n\n\n\nContract and Approvals\nDerived from CONTRACT_AND_APPROVALS.agc\nThis AGC program shall also be referred to as Colossus 2A.\nThis program is intended for use in the CM as specified in report R-577. This program was prepared under DSR project 55-23870, sponsored by the Manned Spacecraft Center of The National Aeronautics and Space Administration through contract NAS 9-4065 with the Instrumentation Laboratory, Massachusetts Institute of Technology, Cambridge, Mass.\n\n\n\nSubmitted by\nRole\nDate\n\n\n\n\nMargaret H. Hamilton\nColossus Programming LeaderApollo Guidance and Navigation\n28 Mar 69\n\n\n\n\n\n\nApproved by\nRole\nDate\n\n\n\n\nDaniel J. Lickly\nDirector, Mission Program DevelopmentApollo Guidance and Navigation Program\n28 Mar 69\n\n\nFred H. Martin\nColossus Project ManagerApollo Guidance and Navigation Program\n28 Mar 69\n\n\nNorman E. Sears\nDirector, Mission DevelopmentApollo Guidance and Navigation Program\n28 Mar 69\n\n\nRichard H. Battin\nDirector, Mission DevelopmentApollo Guidance and Navigation Program\n28 Mar 69\n\n\nDavid G. Hoag\nDirectorApollo Guidance and Navigation Program\n28 Mar 69\n\n\nRalph R. Ragan\nDeputy DirectorInstrumentation Laboratory\n28 Mar 69\n\n\n\n\n"}, {"repo": "jakubroztocil/httpie", "language": "Python", "readme": "\nHTTPie: a CLI, cURL-like tool for humans\nHTTPie (pronounced aitch-tee-tee-pie) is a command line HTTP client.\nIts goal is to make CLI interaction with web services as human-friendly\nas possible. It provides a simple http command that allows for sending\narbitrary HTTP requests using a simple and natural syntax, and displays\ncolorized output. HTTPie can be used for testing, debugging, and\ngenerally interacting with HTTP servers.\n \n   \n\n\nContents\n\n1\u00a0\u00a0\u00a0Main features\n2\u00a0\u00a0\u00a0Installation\n2.1\u00a0\u00a0\u00a0macOS\n2.2\u00a0\u00a0\u00a0Linux\n2.3\u00a0\u00a0\u00a0Windows, etc.\n2.4\u00a0\u00a0\u00a0Python version\n2.5\u00a0\u00a0\u00a0Unstable version\n\n\n3\u00a0\u00a0\u00a0Usage\n3.1\u00a0\u00a0\u00a0Examples\n\n\n4\u00a0\u00a0\u00a0HTTP method\n5\u00a0\u00a0\u00a0Request URL\n5.1\u00a0\u00a0\u00a0Querystring parameters\n5.2\u00a0\u00a0\u00a0URL shortcuts for localhost\n5.3\u00a0\u00a0\u00a0Other default schemes\n\n\n6\u00a0\u00a0\u00a0Request items\n6.1\u00a0\u00a0\u00a0Escaping rules\n\n\n7\u00a0\u00a0\u00a0JSON\n7.1\u00a0\u00a0\u00a0Default behaviour\n7.2\u00a0\u00a0\u00a0Explicit JSON\n7.3\u00a0\u00a0\u00a0Non-string JSON fields\n\n\n8\u00a0\u00a0\u00a0Forms\n8.1\u00a0\u00a0\u00a0Regular forms\n8.2\u00a0\u00a0\u00a0File upload forms\n\n\n9\u00a0\u00a0\u00a0HTTP headers\n9.1\u00a0\u00a0\u00a0Default request headers\n9.2\u00a0\u00a0\u00a0Empty headers and header un-setting\n9.3\u00a0\u00a0\u00a0Limiting response headers\n\n\n10\u00a0\u00a0\u00a0Cookies\n11\u00a0\u00a0\u00a0Authentication\n11.1\u00a0\u00a0\u00a0Basic auth\n11.2\u00a0\u00a0\u00a0Digest auth\n11.3\u00a0\u00a0\u00a0Password prompt\n11.4\u00a0\u00a0\u00a0.netrc\n11.5\u00a0\u00a0\u00a0Auth plugins\n\n\n12\u00a0\u00a0\u00a0HTTP redirects\n12.1\u00a0\u00a0\u00a0Follow Location\n12.2\u00a0\u00a0\u00a0Showing intermediary redirect responses\n12.3\u00a0\u00a0\u00a0Limiting maximum redirects followed\n\n\n13\u00a0\u00a0\u00a0Proxies\n13.1\u00a0\u00a0\u00a0Environment variables\n13.2\u00a0\u00a0\u00a0SOCKS\n\n\n14\u00a0\u00a0\u00a0HTTPS\n14.1\u00a0\u00a0\u00a0Server SSL certificate verification\n14.2\u00a0\u00a0\u00a0Custom CA bundle\n14.3\u00a0\u00a0\u00a0Client side SSL certificate\n14.4\u00a0\u00a0\u00a0SSL version\n\n\n15\u00a0\u00a0\u00a0Output options\n15.1\u00a0\u00a0\u00a0What parts of the HTTP exchange should be printed\n15.2\u00a0\u00a0\u00a0Viewing intermediary requests/responses\n15.3\u00a0\u00a0\u00a0Conditional body download\n\n\n16\u00a0\u00a0\u00a0Redirected Input\n16.1\u00a0\u00a0\u00a0Request data from a filename\n\n\n17\u00a0\u00a0\u00a0Terminal output\n17.1\u00a0\u00a0\u00a0Colors and formatting\n17.2\u00a0\u00a0\u00a0Binary data\n\n\n18\u00a0\u00a0\u00a0Redirected output\n19\u00a0\u00a0\u00a0Download mode\n19.1\u00a0\u00a0\u00a0Downloaded filename\n19.2\u00a0\u00a0\u00a0Piping while downloading\n19.3\u00a0\u00a0\u00a0Resuming downloads\n19.4\u00a0\u00a0\u00a0Other notes\n\n\n20\u00a0\u00a0\u00a0Streamed responses\n20.1\u00a0\u00a0\u00a0Disabling buffering\n20.2\u00a0\u00a0\u00a0Examples use cases\n\n\n21\u00a0\u00a0\u00a0Sessions\n21.1\u00a0\u00a0\u00a0Named sessions\n21.2\u00a0\u00a0\u00a0Anonymous sessions\n21.3\u00a0\u00a0\u00a0Readonly session\n\n\n22\u00a0\u00a0\u00a0Config\n22.1\u00a0\u00a0\u00a0Config file directory\n22.2\u00a0\u00a0\u00a0Configurable options\n22.2.1\u00a0\u00a0\u00a0default_options\n\n\n22.3\u00a0\u00a0\u00a0Un-setting previously specified options\n\n\n23\u00a0\u00a0\u00a0Scripting\n23.1\u00a0\u00a0\u00a0Best practices\n\n\n24\u00a0\u00a0\u00a0Meta\n24.1\u00a0\u00a0\u00a0Interface design\n24.2\u00a0\u00a0\u00a0User support\n24.3\u00a0\u00a0\u00a0Related projects\n24.3.1\u00a0\u00a0\u00a0Dependencies\n24.3.2\u00a0\u00a0\u00a0HTTPie friends\n24.3.3\u00a0\u00a0\u00a0Alternatives\n\n\n24.4\u00a0\u00a0\u00a0Contributing\n24.5\u00a0\u00a0\u00a0Change log\n24.6\u00a0\u00a0\u00a0Artwork\n24.7\u00a0\u00a0\u00a0Licence\n24.8\u00a0\u00a0\u00a0Authors\n\n\n\n\n\n1\u00a0\u00a0\u00a0Main features\n\nExpressive and intuitive syntax\nFormatted and colorized terminal output\nBuilt-in JSON support\nForms and file uploads\nHTTPS, proxies, and authentication\nArbitrary request data\nCustom headers\nPersistent sessions\nWget-like downloads\nLinux, macOS and Windows support\nPlugins\nDocumentation\nTest coverage\n\n\n\n2\u00a0\u00a0\u00a0Installation\n\n2.1\u00a0\u00a0\u00a0macOS\nOn macOS, HTTPie can be installed via Homebrew\n(recommended):\n$ brew install httpie\nA MacPorts port is also available:\n$ port install httpie\n\n2.2\u00a0\u00a0\u00a0Linux\nMost Linux distributions provide a package that can be installed using the\nsystem package manager, for example:\n# Debian, Ubuntu, etc.\n$ apt-get install httpie\n# Fedora\n$ dnf install httpie\n# CentOS, RHEL, ...\n$ yum install httpie\n# Arch Linux\n$ pacman -S httpie\n\n2.3\u00a0\u00a0\u00a0Windows, etc.\nA universal installation method (that works on Windows, Mac OS X, Linux, \u2026,\nand always provides the latest version) is to use pip:\n# Make sure we have an up-to-date version of pip and setuptools:\n$ pip install --upgrade pip setuptools\n\n$ pip install --upgrade httpie\n(If pip installation fails for some reason, you can try\neasy_install httpie as a fallback.)\n\n2.4\u00a0\u00a0\u00a0Python version\nStarting with version 2.0.0 (currently under development) Python 3.6+ is required.\n\n2.5\u00a0\u00a0\u00a0Unstable version\nYou can also install the latest unreleased development version directly from\nthe master branch on GitHub.  It is a work-in-progress of a future stable\nrelease so the experience might be not as smooth.\n\n\nOn macOS you can install it with Homebrew:\n$ brew install httpie --HEAD\nOtherwise with pip:\n$ pip install --upgrade https://github.com/jakubroztocil/httpie/archive/master.tar.gz\nVerify that now we have the\ncurrent development version identifier\nwith the -dev suffix, for example:\n$ http --version\n1.0.0-dev\n\n3\u00a0\u00a0\u00a0Usage\nHello World:\n$ http httpie.org\nSynopsis:\n$ http [flags] [METHOD] URL [ITEM [ITEM]]\nSee also http --help.\n\n3.1\u00a0\u00a0\u00a0Examples\nCustom HTTP method, HTTP headers and JSON data:\n$ http PUT example.org X-API-Token:123 name=John\nSubmitting forms:\n$ http -f POST example.org hello=World\nSee the request that is being sent using one of the output options:\n$ http -v example.org\nUse Github API to post a comment on an\nissue\nwith authentication:\n$ http -a USERNAME POST https://api.github.com/repos/jakubroztocil/httpie/issues/83/comments body='HTTPie is awesome! :heart:'\nUpload a file using redirected input:\n$ http example.org < file.json\nDownload a file and save it via redirected output:\n$ http example.org/file > file\nDownload a file wget style:\n$ http --download example.org/file\nUse named sessions to make certain aspects or the communication persistent\nbetween requests to the same host:\n$ http --session=logged-in -a username:password httpbin.org/get API-Key:123\n\n$ http --session=logged-in httpbin.org/headers\nSet a custom Host header to work around missing DNS records:\n$ http localhost:8000 Host:example.com\n\n4\u00a0\u00a0\u00a0HTTP method\nThe name of the HTTP method comes right before the URL argument:\n$ http DELETE example.org/todos/7\nWhich looks similar to the actual Request-Line that is sent:\nDELETE /todos/7 HTTP/1.1\nWhen the METHOD argument is omitted from the command, HTTPie defaults to\neither GET (with no request data) or POST (with request data).\n\n5\u00a0\u00a0\u00a0Request URL\nThe only information HTTPie needs to perform a request is a URL.\nThe default scheme is, somewhat unsurprisingly, http://,\nand can be omitted from the argument \u2013 http example.org works just fine.\n\n5.1\u00a0\u00a0\u00a0Querystring parameters\nIf you find yourself manually constructing URLs with querystring parameters\non the terminal, you may appreciate the param==value syntax for appending\nURL parameters.\nWith that, you don't have to worry about escaping the &\nseparators for your shell. Additionally, any special characters in the\nparameter name or value get automatically URL-escaped\n(as opposed to parameters specified in the full URL, which HTTPie doesn\u2019t\nmodify).\n$ http https://api.github.com/search/repositories q==httpie per_page==1\nGET /search/repositories?q=httpie&per_page=1 HTTP/1.1\n\n5.2\u00a0\u00a0\u00a0URL shortcuts for localhost\nAdditionally, curl-like shorthand for localhost is supported.\nThis means that, for example :3000 would expand to http://localhost:3000\nIf the port is omitted, then port 80 is assumed.\n$ http :/foo\nGET /foo HTTP/1.1\nHost: localhost\n$ http :3000/bar\nGET /bar HTTP/1.1\nHost: localhost:3000\n$ http :\nGET / HTTP/1.1\nHost: localhost\n\n5.3\u00a0\u00a0\u00a0Other default schemes\nWhen HTTPie is invoked as https then the default scheme is https://\n($ https example.org will make a request to https://example.org).\nYou can also use the --default-scheme <URL_SCHEME> option to create\nshortcuts for other protocols than HTTP (possibly supported via plugins).\nExample for the httpie-unixsocket plugin:\n# Before\n$ http http+unix://%2Fvar%2Frun%2Fdocker.sock/info\n# Create an alias\n$ alias http-unix='http --default-scheme=\"http+unix\"'\n# Now the scheme can be omitted\n$ http-unix %2Fvar%2Frun%2Fdocker.sock/info\n\n6\u00a0\u00a0\u00a0Request items\nThere are a few different request item types that provide a\nconvenient mechanism for specifying HTTP headers, simple JSON and\nform data, files, and URL parameters.\nThey are key/value pairs specified after the URL. All have in\ncommon that they become part of the actual request that is sent and that\ntheir type is distinguished only by the separator used:\n:, =, :=, ==, @, =@, and :=@. The ones with an\n@ expect a file path as value.\n\n\nItem Type\nDescription\n\n\n\nHTTP Headers\nName:Value\nArbitrary HTTP header, e.g. X-API-Token:123.\n\nURL parameters\nname==value\nAppends the given name/value pair as a query\nstring parameter to the URL.\nThe == separator is used.\n\nData Fields\nfield=value,\nfield=@file.txt\nRequest data fields to be serialized as a JSON\nobject (default), or to be form-encoded\n(--form, -f).\n\nRaw JSON fields\nfield:=json,\nfield:=@file.json\nUseful when sending JSON and one or\nmore fields need to be a Boolean, Number,\nnested Object, or an Array,  e.g.,\nmeals:='[\"ham\",\"spam\"]' or pies:=[1,2,3]\n(note the quotes).\n\nForm File Fields\nfield@/dir/file\nOnly available with --form, -f.\nFor example screenshot@~/Pictures/img.png.\nThe presence of a file field results\nin a multipart/form-data request.\n\n\n\nNote that data fields aren't the only way to specify request data:\nRedirected input is a mechanism for passing arbitrary request data.\n\n6.1\u00a0\u00a0\u00a0Escaping rules\nYou can use \\ to escape characters that shouldn't be used as separators\n(or parts thereof). For instance, foo\\==bar will become a data key/value\npair (foo= and bar) instead of a URL parameter.\nOften it is necessary to quote the values, e.g. foo='bar baz'.\nIf any of the field names or headers starts with a minus\n(e.g., -fieldname), you need to place all such items after the special\ntoken -- to prevent confusion with --arguments:\n$ http httpbin.org/post  --  -name-starting-with-dash=foo -Unusual-Header:bar\nPOST /post HTTP/1.1\n-Unusual-Header: bar\nContent-Type: application/json\n\n{\n    \"-name-starting-with-dash\": \"foo\"\n}\n\n7\u00a0\u00a0\u00a0JSON\nJSON is the lingua franca of modern web services and it is also the\nimplicit content type HTTPie uses by default.\nSimple example:\n$ http PUT example.org name=John email=john@example.org\nPUT / HTTP/1.1\nAccept: application/json, */*\nAccept-Encoding: gzip, deflate\nContent-Type: application/json\nHost: example.org\n\n{\n    \"name\": \"John\",\n    \"email\": \"john@example.org\"\n}\n\n7.1\u00a0\u00a0\u00a0Default behaviour\nIf your command includes some data request items, they are serialized as a JSON\nobject by default. HTTPie also automatically sets the following headers,\nboth of which can be overwritten:\n\n\nContent-Type\napplication/json\n\nAccept\napplication/json, */*\n\n\n\n\n7.2\u00a0\u00a0\u00a0Explicit JSON\nYou can use --json, -j to explicitly set Accept\nto application/json regardless of whether you are sending data\n(it's a shortcut for setting the header via the usual header notation:\nhttp url Accept:'application/json, */*'). Additionally,\nHTTPie will try to detect JSON responses even when the\nContent-Type is incorrectly text/plain or unknown.\n\n7.3\u00a0\u00a0\u00a0Non-string JSON fields\nNon-string fields use the := separator, which allows you to embed raw JSON\ninto the resulting object. Text and raw JSON files can also be embedded into\nfields using =@ and :=@:\n$ http PUT api.example.com/person/1 \\\n    name=John \\\n    age:=29 married:=false hobbies:='[\"http\", \"pies\"]' \\  # Raw JSON\n    description=@about-john.txt \\   # Embed text file\n    bookmarks:=@bookmarks.json      # Embed JSON file\nPUT /person/1 HTTP/1.1\nAccept: application/json, */*\nContent-Type: application/json\nHost: api.example.com\n\n{\n    \"age\": 29,\n    \"hobbies\": [\n        \"http\",\n        \"pies\"\n    ],\n    \"description\": \"John is a nice guy who likes pies.\",\n    \"married\": false,\n    \"name\": \"John\",\n    \"bookmarks\": {\n        \"HTTPie\": \"https://httpie.org\",\n    }\n}\nPlease note that with this syntax the command gets unwieldy when sending\ncomplex data. In that case it's always better to use redirected input:\n$ http POST api.example.com/person/1 < person.json\n\n8\u00a0\u00a0\u00a0Forms\nSubmitting forms is very similar to sending JSON requests. Often the only\ndifference is in adding the --form, -f option, which ensures that\ndata fields are serialized as, and Content-Type is set to,\napplication/x-www-form-urlencoded; charset=utf-8. It is possible to make\nform data the implicit content type instead of JSON\nvia the config file.\n\n8.1\u00a0\u00a0\u00a0Regular forms\n$ http --form POST api.example.org/person/1 name='John Smith'\nPOST /person/1 HTTP/1.1\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\n\nname=John+Smith\n\n8.2\u00a0\u00a0\u00a0File upload forms\nIf one or more file fields is present, the serialization and content type is\nmultipart/form-data:\n$ http -f POST example.com/jobs name='John Smith' cv@~/Documents/cv.pdf\nThe request above is the same as if the following HTML form were\nsubmitted:\n<form enctype=\"multipart/form-data\" method=\"post\" action=\"http://example.com/jobs\">\n    <input type=\"text\" name=\"name\" />\n    <input type=\"file\" name=\"cv\" />\n</form>\nNote that @ is used to simulate a file upload form field, whereas\n=@ just embeds the file content as a regular text field value.\n\n9\u00a0\u00a0\u00a0HTTP headers\nTo set custom headers you can use the Header:Value notation:\n$ http example.org  User-Agent:Bacon/1.0  'Cookie:valued-visitor=yes;foo=bar'  \\\n    X-Foo:Bar  Referer:https://httpie.org/\nGET / HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nCookie: valued-visitor=yes;foo=bar\nHost: example.org\nReferer: https://httpie.org/\nUser-Agent: Bacon/1.0\nX-Foo: Bar\n\n9.1\u00a0\u00a0\u00a0Default request headers\nThere are a couple of default headers that HTTPie sets:\nGET / HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nUser-Agent: HTTPie/<version>\nHost: <taken-from-URL>\nAny of these except Host can be overwritten and some of them unset.\n\n9.2\u00a0\u00a0\u00a0Empty headers and header un-setting\nTo unset a previously specified header\n(such a one of the default headers), use Header::\n$ http httpbin.org/headers Accept: User-Agent:\nTo send a header with an empty value, use Header;:\n$ http httpbin.org/headers 'Header;'\n\n9.3\u00a0\u00a0\u00a0Limiting response headers\nThe --max-headers=n options allows you to control the number of headers\nHTTPie reads before giving up (the default 0, i.e., there\u2019s no limit).\n$ http --max-headers=100 httpbin.org/get\n\n10\u00a0\u00a0\u00a0Cookies\nHTTP clients send cookies to the server as regular HTTP headers. That means,\nHTTPie does not offer any special syntax for specifying cookies \u2014 the usual\nHeader:Value notation is used:\nSend a single cookie:\n$ http example.org Cookie:sessionid=foo\nGET / HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nCookie: sessionid=foo\nHost: example.org\nUser-Agent: HTTPie/0.9.9\nSend multiple cookies\n(note the header is quoted to prevent the shell from interpreting the ;):\n$ http example.org 'Cookie:sessionid=foo;another-cookie=bar'\nGET / HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nCookie: sessionid=foo;another-cookie=bar\nHost: example.org\nUser-Agent: HTTPie/0.9.9\nIf you often deal with cookies in your requests, then chances are you'd appreciate\nthe sessions feature.\n\n11\u00a0\u00a0\u00a0Authentication\nThe currently supported authentication schemes are Basic and Digest\n(see auth plugins for more). There are two flags that control authentication:\n\n\n--auth, -a\nPass a username:password pair as\nthe argument. Or, if you only specify a username\n(-a username), you'll be prompted for\nthe password before the request is sent.\nTo send an empty password, pass username:.\nThe username:password@hostname URL syntax is\nsupported as well (but credentials passed via -a\nhave higher priority).\n\n--auth-type, -A\nSpecify the auth mechanism. Possible values are\nbasic and digest. The default value is\nbasic so it can often be omitted.\n\n\n\n\n11.1\u00a0\u00a0\u00a0Basic auth\n$ http -a username:password example.org\n\n11.2\u00a0\u00a0\u00a0Digest auth\n$ http -A digest -a username:password example.org\n\n11.3\u00a0\u00a0\u00a0Password prompt\n$ http -a username example.org\n\n11.4\u00a0\u00a0\u00a0.netrc\nAuthentication information from your ~/.netrc\nfile is by default honored as well.\nFor example:\n$ cat ~/.netrc\nmachine httpbin.org\nlogin httpie\npassword test\n$ http httpbin.org/basic-auth/httpie/test\nHTTP/1.1 200 OK\n[...]\nThis can be disabled with the --ignore-netrc option:\n$ http --ignore-netrc httpbin.org/basic-auth/httpie/test\nHTTP/1.1 401 UNAUTHORIZED\n[...]\n\n11.5\u00a0\u00a0\u00a0Auth plugins\nAdditional authentication mechanism can be installed as plugins.\nThey can be found on the Python Package Index.\nHere's a few picks:\n\nhttpie-api-auth: ApiAuth\nhttpie-aws-auth: AWS / Amazon S3\nhttpie-edgegrid: EdgeGrid\nhttpie-hmac-auth: HMAC\nhttpie-jwt-auth: JWTAuth (JSON Web Tokens)\nhttpie-negotiate: SPNEGO (GSS Negotiate)\nhttpie-ntlm: NTLM (NT LAN Manager)\nhttpie-oauth: OAuth\nrequests-hawk: Hawk\n\n\n12\u00a0\u00a0\u00a0HTTP redirects\nBy default, HTTP redirects are not followed and only the first\nresponse is shown:\n$ http httpbin.org/redirect/3\n\n12.1\u00a0\u00a0\u00a0Follow Location\nTo instruct HTTPie to follow the Location header of 30x responses\nand show the final response instead, use the --follow, -F option:\n$ http --follow httpbin.org/redirect/3\n\n12.2\u00a0\u00a0\u00a0Showing intermediary redirect responses\nIf you additionally wish to see the intermediary requests/responses,\nthen use the --all option as well:\n$ http --follow --all httpbin.org/redirect/3\n\n12.3\u00a0\u00a0\u00a0Limiting maximum redirects followed\nTo change the default limit of maximum 30 redirects, use the\n--max-redirects=<limit> option:\n$ http --follow --all --max-redirects=5 httpbin.org/redirect/3\n\n13\u00a0\u00a0\u00a0Proxies\nYou can specify proxies to be used through the --proxy argument for each\nprotocol (which is included in the value in case of redirects across protocols):\n$ http --proxy=http:http://10.10.1.10:3128 --proxy=https:https://10.10.1.10:1080 example.org\nWith Basic authentication:\n$ http --proxy=http:http://user:pass@10.10.1.10:3128 example.org\n\n13.1\u00a0\u00a0\u00a0Environment variables\nYou can also configure proxies by environment variables ALL_PROXY,\nHTTP_PROXY and HTTPS_PROXY, and the underlying Requests library will\npick them up as well. If you want to disable proxies configured through\nthe environment variables for certain hosts, you can specify them in NO_PROXY.\nIn your ~/.bash_profile:\nexport HTTP_PROXY=http://10.10.1.10:3128\nexport HTTPS_PROXY=https://10.10.1.10:1080\nexport NO_PROXY=localhost,example.com\n\n13.2\u00a0\u00a0\u00a0SOCKS\nHomebrew-installed HTTPie comes with SOCKS proxy support out of the box.\nTo enable SOCKS proxy support for non-Homebrew  installations, you'll\nmight need to install requests[socks] manually using pip:\n$ pip install -U requests[socks]\nUsage is the same as for other types of proxies:\n$ http --proxy=http:socks5://user:pass@host:port --proxy=https:socks5://user:pass@host:port example.org\n\n14\u00a0\u00a0\u00a0HTTPS\n\n14.1\u00a0\u00a0\u00a0Server SSL certificate verification\nTo skip the host's SSL certificate verification, you can pass --verify=no\n(default is yes):\n$ http --verify=no https://example.org\n\n14.2\u00a0\u00a0\u00a0Custom CA bundle\nYou can also use --verify=<CA_BUNDLE_PATH> to set a custom CA bundle path:\n$ http --verify=/ssl/custom_ca_bundle https://example.org\n\n14.3\u00a0\u00a0\u00a0Client side SSL certificate\nTo use a client side certificate for the SSL communication, you can pass\nthe path of the cert file with --cert:\n$ http --cert=client.pem https://example.org\nIf the private key is not contained in the cert file you may pass the\npath of the key file with --cert-key:\n$ http --cert=client.crt --cert-key=client.key https://example.org\n\n14.4\u00a0\u00a0\u00a0SSL version\nUse the --ssl=<PROTOCOL> to specify the desired protocol version to use.\nThis will default to SSL v2.3 which will negotiate the highest protocol that both\nthe server and your installation of OpenSSL support. The available protocols\nare ssl2.3, ssl3, tls1, tls1.1, tls1.2, tls1.3. (The actually\navailable set of protocols may vary depending on your OpenSSL installation.)\n# Specify the vulnerable SSL v3 protocol to talk to an outdated server:\n$ http --ssl=ssl3 https://vulnerable.example.org\n\n15\u00a0\u00a0\u00a0Output options\nBy default, HTTPie only outputs the final response and the whole response\nmessage is printed (headers as well as the body). You can control what should\nbe printed via several options:\n\n\n--headers, -h\nOnly the response headers are printed.\n\n--body, -b\nOnly the response body is printed.\n\n--verbose, -v\nPrint the whole HTTP exchange (request and response).\nThis option also enables --all (see below).\n\n--print, -p\nSelects parts of the HTTP exchange.\n\n\n\n--verbose can often be useful for debugging the request and generating\ndocumentation examples:\n$ http --verbose PUT httpbin.org/put hello=world\nPUT /put HTTP/1.1\nAccept: application/json, */*\nAccept-Encoding: gzip, deflate\nContent-Type: application/json\nHost: httpbin.org\nUser-Agent: HTTPie/0.2.7dev\n\n{\n    \"hello\": \"world\"\n}\n\n\nHTTP/1.1 200 OK\nConnection: keep-alive\nContent-Length: 477\nContent-Type: application/json\nDate: Sun, 05 Aug 2012 00:25:23 GMT\nServer: gunicorn/0.13.4\n\n{\n    [\u2026]\n}\n\n15.1\u00a0\u00a0\u00a0What parts of the HTTP exchange should be printed\nAll the other output options are under the hood just shortcuts for\nthe more powerful --print, -p. It accepts a string of characters each\nof which represents a specific part of the HTTP exchange:\n\n\nCharacter\nStands for\n\n\n\nH\nrequest headers\n\nB\nrequest body\n\nh\nresponse headers\n\nb\nresponse body\n\n\n\nPrint request and response headers:\n$ http --print=Hh PUT httpbin.org/put hello=world\n\n15.2\u00a0\u00a0\u00a0Viewing intermediary requests/responses\nTo see all the HTTP communication, i.e. the final request/response as\nwell as any possible  intermediary requests/responses, use the --all\noption. The intermediary HTTP communication include followed redirects\n(with --follow), the first unauthorized request when HTTP digest\nauthentication is used (--auth=digest), etc.\n# Include all responses that lead to the final one:\n$ http --all --follow httpbin.org/redirect/3\nThe intermediary requests/response are by default formatted according to\n--print, -p (and its shortcuts described above). If you'd like to change\nthat, use the --history-print, -P option. It takes the same\narguments as --print, -p but applies to the intermediary requests only.\n# Print the intermediary requests/responses differently than the final one:\n$ http -A digest -a foo:bar --all -p Hh -P H httpbin.org/digest-auth/auth/foo/bar\n\n15.3\u00a0\u00a0\u00a0Conditional body download\nAs an optimization, the response body is downloaded from the server\nonly if it's part of the output. This is similar to performing a HEAD\nrequest, except that it applies to any HTTP method you use.\nLet's say that there is an API that returns the whole resource when it is\nupdated, but you are only interested in the response headers to see the\nstatus code after an update:\n$ http --headers PATCH example.org/Really-Huge-Resource name='New Name'\nSince we are only printing the HTTP headers here, the connection to the server\nis closed as soon as all the response headers have been received.\nTherefore, bandwidth and time isn't wasted downloading the body\nwhich you don't care about. The response headers are downloaded always,\neven if they are not part of the output\n\n16\u00a0\u00a0\u00a0Redirected Input\nThe universal method for passing request data is through redirected stdin\n(standard input)\u2014piping. Such data is buffered and then with no further\nprocessing used as the request body. There are multiple useful ways to use\npiping:\nRedirect from a file:\n$ http PUT example.com/person/1 X-API-Token:123 < person.json\nOr the output of another program:\n$ grep '401 Unauthorized' /var/log/httpd/error_log | http POST example.org/intruders\nYou can use echo for simple data:\n$ echo '{\"name\": \"John\"}' | http PATCH example.com/person/1 X-API-Token:123\nYou can also use a Bash here string:\n$ http example.com/ <<<'{\"name\": \"John\"}'\nYou can even pipe web services together using HTTPie:\n$ http GET https://api.github.com/repos/jakubroztocil/httpie | http POST httpbin.org/post\nYou can use cat to enter multiline data on the terminal:\n$ cat | http POST example.com\n<paste>\n^D\n$ cat | http POST example.com/todos Content-Type:text/plain\n- buy milk\n- call parents\n^D\nOn OS X, you can send the contents of the clipboard with pbpaste:\n$ pbpaste | http PUT example.com\nPassing data through stdin cannot be combined with data fields specified\non the command line:\n$ echo 'data' | http POST example.org more=data   # This is invalid\nTo prevent HTTPie from reading stdin data you can use the\n--ignore-stdin option.\n\n16.1\u00a0\u00a0\u00a0Request data from a filename\nAn alternative to redirected stdin is specifying a filename (as\n@/path/to/file) whose content is used as if it came from stdin.\nIt has the advantage that the Content-Type\nheader is automatically set to the appropriate value based on the\nfilename extension. For example, the following request sends the\nverbatim contents of that XML file with Content-Type: application/xml:\n$ http PUT httpbin.org/put @/data/file.xml\n\n17\u00a0\u00a0\u00a0Terminal output\nHTTPie does several things by default in order to make its terminal output\neasy to read.\n\n17.1\u00a0\u00a0\u00a0Colors and formatting\nSyntax highlighting is applied to HTTP headers and bodies (where it makes\nsense). You can choose your preferred color scheme via the --style option\nif you don't like the default one (see $ http --help for the possible\nvalues).\nAlso, the following formatting is applied:\n\nHTTP headers are sorted by name.\nJSON data is indented, sorted by keys, and unicode escapes are converted\nto the characters they represent.\n\nOne of these options can be used to control output processing:\n\n\n--pretty=all\nApply both colors and formatting.\nDefault for terminal output.\n\n--pretty=colors\nApply colors.\n\n--pretty=format\nApply formatting.\n\n--pretty=none\nDisables output processing.\nDefault for redirected output.\n\n\n\n\n17.2\u00a0\u00a0\u00a0Binary data\nBinary data is suppressed for terminal output, which makes it safe to perform\nrequests to URLs that send back binary data. Binary data is suppressed also in\nredirected, but prettified output. The connection is closed as soon as we know\nthat the response body is binary,\n$ http example.org/Movie.mov\nYou will nearly instantly see something like this:\nHTTP/1.1 200 OK\nAccept-Ranges: bytes\nContent-Encoding: gzip\nContent-Type: video/quicktime\nTransfer-Encoding: chunked\n\n+-----------------------------------------+\n| NOTE: binary data not shown in terminal |\n+-----------------------------------------+\n\n18\u00a0\u00a0\u00a0Redirected output\nHTTPie uses a different set of defaults for redirected output than for\nterminal output. The differences being:\n\nFormatting and colors aren't applied (unless --pretty is specified).\nOnly the response body is printed (unless one of the output options is set).\nAlso, binary data isn't suppressed.\n\nThe reason is to make piping HTTPie's output to another programs and\ndownloading files work with no extra flags. Most of the time, only the raw\nresponse body is of an interest when the output is redirected.\nDownload a file:\n$ http example.org/Movie.mov > Movie.mov\nDownload an image of Octocat, resize it using ImageMagick, upload it elsewhere:\n$ http octodex.github.com/images/original.jpg | convert - -resize 25% -  | http example.org/Octocats\nForce colorizing and formatting, and show both the request and the response in\nless pager:\n$ http --pretty=all --verbose example.org | less -R\nThe -R flag tells less to interpret color escape sequences included\nHTTPie`s output.\nYou can create a shortcut for invoking HTTPie with colorized and paged output\nby adding the following to your ~/.bash_profile:\nfunction httpless {\n    # `httpless example.org'\n    http --pretty=all --print=hb \"$@\" | less -R;\n}\n\n19\u00a0\u00a0\u00a0Download mode\nHTTPie features a download mode in which it acts similarly to wget.\nWhen enabled using the --download, -d flag, response headers are printed to\nthe terminal (stderr), and a progress bar is shown while the response body\nis being saved to a file.\n$ http --download https://github.com/jakubroztocil/httpie/archive/master.tar.gz\nHTTP/1.1 200 OK\nContent-Disposition: attachment; filename=httpie-master.tar.gz\nContent-Length: 257336\nContent-Type: application/x-gzip\n\nDownloading 251.30 kB to \"httpie-master.tar.gz\"\nDone. 251.30 kB in 2.73862s (91.76 kB/s)\n\n19.1\u00a0\u00a0\u00a0Downloaded filename\nThere are three mutually exclusive ways through which HTTPie determines\nthe output filename (with decreasing priority):\n\nYou can explicitly provide it via --output, -o.\nThe file gets overwritten if it already exists\n(or appended to with --continue, -c).\nThe server may specify the filename in the optional Content-Disposition\nresponse header. Any leading dots are stripped from a server-provided filename.\nThe last resort HTTPie uses is to generate the filename from a combination\nof the request URL and the response Content-Type.\nThe initial URL is always used as the basis for\nthe generated filename \u2014 even if there has been one or more redirects.\n\nTo prevent data loss by overwriting, HTTPie adds a unique numerical suffix to the\nfilename when necessary (unless specified with --output, -o).\n\n19.2\u00a0\u00a0\u00a0Piping while downloading\nYou can also redirect the response body to another program while the response\nheaders and progress are still shown in the terminal:\n$ http -d https://github.com/jakubroztocil/httpie/archive/master.tar.gz |  tar zxf -\n\n19.3\u00a0\u00a0\u00a0Resuming downloads\nIf --output, -o is specified, you can resume a partial download using the\n--continue, -c option. This only works with servers that support\nRange requests and 206 Partial Content responses. If the server doesn't\nsupport that, the whole file will simply be downloaded:\n$ http -dco file.zip example.org/file\n\n19.4\u00a0\u00a0\u00a0Other notes\n\nThe --download option only changes how the response body is treated.\nYou can still set custom headers, use sessions, --verbose, -v, etc.\n--download always implies --follow (redirects are followed).\nHTTPie exits with status code 1 (error) if the body hasn't been fully\ndownloaded.\nAccept-Encoding cannot be set with --download.\n\n\n20\u00a0\u00a0\u00a0Streamed responses\nResponses are downloaded and printed in chunks which allows for streaming\nand large file downloads without using too much memory. However, when\ncolors and formatting is applied, the whole response is buffered and only\nthen processed at once.\n\n20.1\u00a0\u00a0\u00a0Disabling buffering\nYou can use the --stream, -S flag to make two things happen:\n\nThe output is flushed in much smaller chunks without any buffering,\nwhich makes HTTPie behave kind of like tail -f for URLs.\nStreaming becomes enabled even when the output is prettified: It will be\napplied to each line of the response and flushed immediately. This makes\nit possible to have a nice output for long-lived requests, such as one\nto the Twitter streaming API.\n\n\n20.2\u00a0\u00a0\u00a0Examples use cases\nPrettified streamed response:\n$ http --stream -f -a YOUR-TWITTER-NAME https://stream.twitter.com/1/statuses/filter.json track='Justin Bieber'\nStreamed output by small chunks al\u00e1 tail -f:\n# Send each new tweet (JSON object) mentioning \"Apple\" to another\n# server as soon as it arrives from the Twitter streaming API:\n$ http --stream -f -a YOUR-TWITTER-NAME https://stream.twitter.com/1/statuses/filter.json track=Apple \\\n| while read tweet; do echo \"$tweet\" | http POST example.org/tweets ; done\n\n21\u00a0\u00a0\u00a0Sessions\nBy default, every request HTTPie makes is completely independent of any\nprevious ones to the same host.\nHowever, HTTPie also supports persistent\nsessions via the --session=SESSION_NAME_OR_PATH option. In a session,\ncustom HTTP headers (except for the ones starting with Content- or If-),\nauthentication, and cookies\n(manually specified or sent by the server) persist between requests\nto the same host.\n# Create a new session\n$ http --session=/tmp/session.json example.org API-Token:123\n\n# Re-use an existing session \u2014 API-Token will be set:\n$ http --session=/tmp/session.json example.org\nAll session data, including credentials, cookie data,\nand custom headers are stored in plain text.\nThat means session files can also be created and edited manually in a text\neditor\u2014they are regular JSON. It also means that they can be read by anyone\nwho has access to the session file.\n\n21.1\u00a0\u00a0\u00a0Named sessions\nYou can create one or more named session per host. For example, this is how\nyou can create a new session named user1 for example.org:\n$ http --session=user1 -a user1:password example.org X-Foo:Bar\nFrom now on, you can refer to the session by its name. When you choose to\nuse the session again, any previously specified authentication or HTTP headers\nwill automatically be set:\n$ http --session=user1 example.org\nTo create or reuse a different session, simple specify a different name:\n$ http --session=user2 -a user2:password example.org X-Bar:Foo\nNamed sessions\u2019s data is stored in JSON files in the the sessions\nsubdirectory of the config directory:\n~/.httpie/sessions/<host>/<name>.json\n(%APPDATA%\\httpie\\sessions\\<host>\\<name>.json on Windows).\n\n21.2\u00a0\u00a0\u00a0Anonymous sessions\nInstead of a name, you can also directly specify a path to a session file. This\nallows for sessions to be re-used across multiple hosts:\n$ http --session=/tmp/session.json example.org\n$ http --session=/tmp/session.json admin.example.org\n$ http --session=~/.httpie/sessions/another.example.org/test.json example.org\n$ http --session-read-only=/tmp/session.json example.org\n\n21.3\u00a0\u00a0\u00a0Readonly session\nTo use an existing session file without updating it from the request/response\nexchange once it is created, specify the session name via\n--session-read-only=SESSION_NAME_OR_PATH instead.\n\n22\u00a0\u00a0\u00a0Config\nHTTPie uses a simple config.json file. The file doesn\u2019t exist by default\nbut you can create it manually.\n\n22.1\u00a0\u00a0\u00a0Config file directory\nThe default location of the configuration file is ~/.httpie/config.json\n(or %APPDATA%\\httpie\\config.json on Windows).\nThe config directory can be changed by setting the $HTTPIE_CONFIG_DIR\nenvironment variable:\n$ export HTTPIE_CONFIG_DIR=/tmp/httpie\n$ http example.org\nTo view the exact location run http --debug.\n\n22.2\u00a0\u00a0\u00a0Configurable options\nCurrently HTTPie offers a single configurable option:\n\n22.2.1\u00a0\u00a0\u00a0default_options\nAn Array (by default empty) of default options that should be applied to\nevery invocation of HTTPie.\nFor instance, you can use this config option to change your default color theme:\n$ cat ~/.httpie/config.json\n{\n    \"default_options\": [\n      \"--style=fruity\"\n    ]\n}\nEven though it is technically possible to include there any of HTTPie\u2019s\noptions, it is not recommended to modify the default behaviour in a way\nthat would break your compatibility with the wider world as that can\ngenerate a lot of confusion.\n\n22.3\u00a0\u00a0\u00a0Un-setting previously specified options\nDefault options from the config file, or specified any other way,\ncan be unset for a particular invocation via --no-OPTION arguments passed\non the command line (e.g., --no-style or --no-session).\n\n23\u00a0\u00a0\u00a0Scripting\nWhen using HTTPie from shell scripts, it can be handy to set the\n--check-status flag. It instructs HTTPie to exit with an error if the\nHTTP status is one of 3xx, 4xx, or 5xx. The exit status will\nbe 3 (unless --follow is set), 4, or 5,\nrespectively.\n#!/bin/bash\n\nif http --check-status --ignore-stdin --timeout=2.5 HEAD example.org/health &> /dev/null; then\n    echo 'OK!'\nelse\n    case $? in\n        2) echo 'Request timed out!' ;;\n        3) echo 'Unexpected HTTP 3xx Redirection!' ;;\n        4) echo 'HTTP 4xx Client Error!' ;;\n        5) echo 'HTTP 5xx Server Error!' ;;\n        6) echo 'Exceeded --max-redirects=<n> redirects!' ;;\n        *) echo 'Other Error!' ;;\n    esac\nfi\n\n23.1\u00a0\u00a0\u00a0Best practices\nThe default behaviour of automatically reading stdin is typically not\ndesirable during non-interactive invocations. You most likely want to\nuse the --ignore-stdin option to disable it.\nIt is a common gotcha that without this option HTTPie seemingly hangs.\nWhat happens is that when HTTPie is invoked for example from a cron job,\nstdin is not connected to a terminal.\nTherefore, rules for redirected input apply, i.e., HTTPie starts to read it\nexpecting that the request body will be passed through.\nAnd since there's no data nor EOF, it will be stuck. So unless you're\npiping some data to HTTPie, this flag should be used in scripts.\nAlso, it might be good to set a connection --timeout limit to prevent\nyour program from hanging if the server never responds.\n\n24\u00a0\u00a0\u00a0Meta\n\n24.1\u00a0\u00a0\u00a0Interface design\nThe syntax of the command arguments closely corresponds to the actual HTTP\nrequests sent over the wire. It has the advantage  that it's easy to remember\nand read. It is often possible to translate an HTTP request to an HTTPie\nargument list just by inlining the request elements. For example, compare this\nHTTP request:\nPOST /collection HTTP/1.1\nX-API-Key: 123\nUser-Agent: Bacon/1.0\nContent-Type: application/x-www-form-urlencoded\n\nname=value&name2=value2\nwith the HTTPie command that sends it:\n$ http -f POST example.org/collection \\\n  X-API-Key:123 \\\n  User-Agent:Bacon/1.0 \\\n  name=value \\\n  name2=value2\nNotice that both the order of elements and the syntax is very similar,\nand that only a small portion of the command is used to control HTTPie and\ndoesn't directly correspond to any part of the request (here it's only -f\nasking HTTPie to send a form request).\nThe two modes, --pretty=all (default for terminal) and --pretty=none\n(default for redirected output), allow for both user-friendly interactive use\nand usage from scripts, where HTTPie serves as a generic HTTP client.\nAs HTTPie is still under heavy development, the existing command line\nsyntax and some of the --OPTIONS may change slightly before\nHTTPie reaches its final version 1.0. All changes are recorded in the\nchange log.\n\n24.2\u00a0\u00a0\u00a0User support\nPlease use the following support channels:\n\nGitHub issues\nfor bug reports and feature requests.\nOur Gitter chat room\nto ask questions, discuss features, and for general discussion.\nStackOverflow\nto ask questions (please make sure to use the\nhttpie tag).\nTweet directly to @clihttp.\nYou can also tweet directly to @jakubroztocil.\n\n\n24.3\u00a0\u00a0\u00a0Related projects\n\n24.3.1\u00a0\u00a0\u00a0Dependencies\nUnder the hood, HTTPie uses these two amazing libraries:\n\nRequests\n\u2014 Python HTTP library for humans\nPygments\n\u2014 Python syntax highlighter\n\n\n24.3.2\u00a0\u00a0\u00a0HTTPie friends\nHTTPie plays exceptionally well with the following tools:\n\njq\n\u2014 CLI JSON processor that\nworks great in conjunction with HTTPie\nhttp-prompt\n\u2014  interactive shell for HTTPie featuring autocomplete\nand command syntax highlighting\n\n\n24.3.3\u00a0\u00a0\u00a0Alternatives\n\nhttpcat \u2014 a lower-level sister utility\nof HTTPie for constructing raw HTTP requests on the command line.\ncurl \u2014 a \"Swiss knife\" command line tool and\nan exceptional library for transferring data with URLs.\n\n\n24.4\u00a0\u00a0\u00a0Contributing\nSee CONTRIBUTING.rst.\n\n24.5\u00a0\u00a0\u00a0Change log\nSee CHANGELOG.\n\n24.6\u00a0\u00a0\u00a0Artwork\n\nLogo by Cl\u00e1udia Delgado.\nAnimation by Allen Smith of GitHub.\n\n\n24.7\u00a0\u00a0\u00a0Licence\nBSD-3-Clause: LICENSE.\n\n24.8\u00a0\u00a0\u00a0Authors\nJakub Roztocil  (@jakubroztocil) created HTTPie and these fine people\nhave contributed.\n\n"}, {"repo": "rails/rails", "language": "Ruby", "readme": "\nWelcome to Rails\nWhat's Rails?\nRails is a web-application framework that includes everything needed to\ncreate database-backed web applications according to the\nModel-View-Controller (MVC)\npattern.\nUnderstanding the MVC pattern is key to understanding Rails. MVC divides your\napplication into three layers: Model, View, and Controller, each with a specific responsibility.\nModel layer\nThe Model layer represents the domain model (such as Account, Product,\nPerson, Post, etc.) and encapsulates the business logic specific to\nyour application. In Rails, database-backed model classes are derived from\nActiveRecord::Base. Active Record allows you to present the data from\ndatabase rows as objects and embellish these data objects with business logic\nmethods.\nAlthough most Rails models are backed by a database, models can also be ordinary\nRuby classes, or Ruby classes that implement a set of interfaces as provided by\nthe Active Model module.\nController layer\nThe Controller layer is responsible for handling incoming HTTP requests and\nproviding a suitable response. Usually, this means returning HTML, but Rails controllers\ncan also generate XML, JSON, PDFs, mobile-specific views, and more. Controllers load and\nmanipulate models, and render view templates in order to generate the appropriate HTTP response.\nIn Rails, incoming requests are routed by Action Dispatch to an appropriate controller, and\ncontroller classes are derived from ActionController::Base. Action Dispatch and Action Controller\nare bundled together in Action Pack.\nView layer\nThe View layer is composed of \"templates\" that are responsible for providing\nappropriate representations of your application's resources. Templates can\ncome in a variety of formats, but most view templates are HTML with embedded\nRuby code (ERB files). Views are typically rendered to generate a controller response\nor to generate the body of an email. In Rails, View generation is handled by Action View.\nFrameworks and libraries\nActive Record, Active Model, Action Pack, and Action View can each be used independently outside Rails.\nIn addition to that, Rails also comes with Action Mailer, a library\nto generate and send emails; Action Mailbox, a library to receive emails within a Rails application;\nActive Job, a framework for declaring jobs and making them run on a variety of queuing\nbackends; Action Cable, a framework to\nintegrate WebSockets with a Rails application; Active Storage, a library to attach cloud\nand local files to Rails applications; Action Text, a library to handle rich text content;\nand Active Support, a collection\nof utility classes and standard library extensions that are useful for Rails,\nand may also be used independently outside Rails.\nGetting Started\n\n\nInstall Rails at the command prompt if you haven't yet:\n $ gem install rails\n\n\n\nAt the command prompt, create a new Rails application:\n $ rails new myapp\n\nwhere \"myapp\" is the application name.\n\n\nChange directory to myapp and start the web server:\n $ cd myapp\n $ rails server\n\nRun with --help or -h for options.\n\n\nGo to http://localhost:3000 and you'll see:\n\"Yay! You\u2019re on Rails!\"\n\n\nFollow the guidelines to start developing your application. You may find\nthe following resources handy:\n\nGetting Started with Rails\nRuby on Rails Guides\nThe API Documentation\n\n\n\nContributing\n\nWe encourage you to contribute to Ruby on Rails! Please check out the\nContributing to Ruby on Rails guide for guidelines about how to proceed. Join us!\nTrying to report a possible security vulnerability in Rails? Please\ncheck out our security policy for\nguidelines about how to proceed.\nEveryone interacting in Rails and its sub-projects' codebases, issue trackers, chat rooms, and mailing lists is expected to follow the Rails code of conduct.\nCode Status\n\nLicense\nRuby on Rails is released under the MIT License.\n\n"}, {"repo": "typicode/json-server", "language": "JavaScript", "readme": "\nJSON Server  \nGet a full fake REST API with zero coding in less than 30 seconds (seriously)\nCreated with <3 for front-end developers who need a quick back-end for prototyping and mocking.\n\nEgghead.io free video tutorial - Creating demo APIs with json-server\nJSONPlaceholder - Live running version\nMy JSON Server - no installation required, use your own data\n\nSee also:\n\n\ud83d\udc36 husky - Git hooks made easy\n\ud83c\udfe8 hotel - developer tool with local .localhost domain and https out of the box\n\n\u00a0\nGold sponsors \ud83e\udd47\n\u00a0\n\n\n\n\n\n\u00a0\nBronze sponsors \ud83e\udd49\n\u00a0\n\n\n\n\n\n\u00a0\nBecome a sponsor and have your company logo here\nTable of contents\n\nGetting started\nRoutes\n\nPlural routes\nSingular routes\nFilter\nPaginate\nSort\nSlice\nOperators\nFull-text search\nRelationships\nDatabase\nHomepage\n\n\nExtras\n\nStatic file server\nAlternative port\nAccess from anywhere\nRemote schema\nGenerate random data\nHTTPS\nAdd custom routes\nAdd middlewares\nCLI usage\nModule\n\nSimple example\nCustom routes example\nAccess control example\nCustom output example\nRewriter example\nMounting JSON Server on another endpoint example\nAPI\n\n\nDeployment\n\n\nLinks\n\nVideo\nArticles\nThird-party tools\n\n\nLicense\n\nGetting started\nInstall JSON Server\nnpm install -g json-server\n\nCreate a db.json file with some data\n{\n  \"posts\": [\n    { \"id\": 1, \"title\": \"json-server\", \"author\": \"typicode\" }\n  ],\n  \"comments\": [\n    { \"id\": 1, \"body\": \"some comment\", \"postId\": 1 }\n  ],\n  \"profile\": { \"name\": \"typicode\" }\n}\nStart JSON Server\njson-server --watch db.json\nNow if you go to http://localhost:3000/posts/1, you'll get\n{ \"id\": 1, \"title\": \"json-server\", \"author\": \"typicode\" }\nAlso when doing requests, it's good to know that:\n\nIf you make POST, PUT, PATCH or DELETE requests, changes will be automatically and safely saved to db.json using lowdb.\nYour request body JSON should be object enclosed, just like the GET output. (for example {\"name\": \"Foobar\"})\nId values are not mutable. Any id value in the body of your PUT or PATCH request will be ignored. Only a value set in a POST request will be respected, but only if not already taken.\nA POST, PUT or PATCH request should include a Content-Type: application/json header to use the JSON in the request body. Otherwise it will result in a 200 OK but without changes being made to the data.\n\nRoutes\nBased on the previous db.json file, here are all the default routes. You can also add other routes using --routes.\nPlural routes\nGET    /posts\nGET    /posts/1\nPOST   /posts\nPUT    /posts/1\nPATCH  /posts/1\nDELETE /posts/1\n\nSingular routes\nGET    /profile\nPOST   /profile\nPUT    /profile\nPATCH  /profile\n\nFilter\nUse . to access deep properties\nGET /posts?title=json-server&author=typicode\nGET /posts?id=1&id=2\nGET /comments?author.name=typicode\n\nPaginate\nUse _page and optionally _limit to paginate returned data.\nIn the Link header you'll get first, prev, next and last links.\nGET /posts?_page=7\nGET /posts?_page=7&_limit=20\n\n10 items are returned by default\nSort\nAdd _sort and _order (ascending order by default)\nGET /posts?_sort=views&_order=asc\nGET /posts/1/comments?_sort=votes&_order=asc\n\nFor multiple fields, use the following format:\nGET /posts?_sort=user,views&_order=desc,asc\n\nSlice\nAdd _start and _end or _limit (an X-Total-Count header is included in the response)\nGET /posts?_start=20&_end=30\nGET /posts/1/comments?_start=20&_end=30\nGET /posts/1/comments?_start=20&_limit=10\n\nWorks exactly as Array.slice (i.e. _start is inclusive and _end exclusive)\nOperators\nAdd _gte or _lte for getting a range\nGET /posts?views_gte=10&views_lte=20\n\nAdd _ne to exclude a value\nGET /posts?id_ne=1\n\nAdd _like to filter (RegExp supported)\nGET /posts?title_like=server\n\nFull-text search\nAdd q\nGET /posts?q=internet\n\nRelationships\nTo include children resources, add _embed\nGET /posts?_embed=comments\nGET /posts/1?_embed=comments\n\nTo include parent resource, add _expand\nGET /comments?_expand=post\nGET /comments/1?_expand=post\n\nTo get or create nested resources (by default one level, add custom routes for more)\nGET  /posts/1/comments\nPOST /posts/1/comments\n\nDatabase\nGET /db\n\nHomepage\nReturns default index file or serves ./public directory\nGET /\n\nExtras\nStatic file server\nYou can use JSON Server to serve your HTML, JS and CSS, simply create a ./public directory\nor use --static to set a different static files directory.\nmkdir public\necho 'hello world' > public/index.html\njson-server db.json\njson-server db.json --static ./some-other-dir\nAlternative port\nYou can start JSON Server on other ports with the --port flag:\n$ json-server --watch db.json --port 3004\nAccess from anywhere\nYou can access your fake API from anywhere using CORS and JSONP.\nRemote schema\nYou can load remote schemas.\n$ json-server http://example.com/file.json\n$ json-server http://jsonplaceholder.typicode.com/db\nGenerate random data\nUsing JS instead of a JSON file, you can create data programmatically.\n// index.js\nmodule.exports = () => {\n  const data = { users: [] }\n  // Create 1000 users\n  for (let i = 0; i < 1000; i++) {\n    data.users.push({ id: i, name: `user${i}` })\n  }\n  return data\n}\n$ json-server index.js\nTip use modules like Faker, Casual, Chance or JSON Schema Faker.\nHTTPS\nThere are many ways to set up SSL in development. One simple way is to use hotel.\nAdd custom routes\nCreate a routes.json file. Pay attention to start every route with /.\n{\n  \"/api/*\": \"/$1\",\n  \"/:resource/:id/show\": \"/:resource/:id\",\n  \"/posts/:category\": \"/posts?category=:category\",\n  \"/articles\\\\?id=:id\": \"/posts/:id\"\n}\nStart JSON Server with --routes option.\njson-server db.json --routes routes.json\nNow you can access resources using additional routes.\n/api/posts # \u2192 /posts\n/api/posts/1  # \u2192 /posts/1\n/posts/1/show # \u2192 /posts/1\n/posts/javascript # \u2192 /posts?category=javascript\n/articles?id=1 # \u2192 /posts/1\nAdd middlewares\nYou can add your middlewares from the CLI using --middlewares option:\n// hello.js\nmodule.exports = (req, res, next) => {\n  res.header('X-Hello', 'World')\n  next()\n}\njson-server db.json --middlewares ./hello.js\njson-server db.json --middlewares ./first.js ./second.js\nCLI usage\njson-server [options] <source>\n\nOptions:\n  --config, -c       Path to config file           [default: \"json-server.json\"]\n  --port, -p         Set port                                    [default: 3000]\n  --host, -H         Set host                             [default: \"localhost\"]\n  --watch, -w        Watch file(s)                                     [boolean]\n  --routes, -r       Path to routes file\n  --middlewares, -m  Paths to middleware files                           [array]\n  --static, -s       Set static files directory\n  --read-only, --ro  Allow only GET requests                           [boolean]\n  --no-cors, --nc    Disable Cross-Origin Resource Sharing             [boolean]\n  --no-gzip, --ng    Disable GZIP Content-Encoding                     [boolean]\n  --snapshots, -S    Set snapshots directory                      [default: \".\"]\n  --delay, -d        Add delay to responses (ms)\n  --id, -i           Set database id property (e.g. _id)         [default: \"id\"]\n  --foreignKeySuffix, --fks  Set foreign key suffix, (e.g. _id as in post_id)\n                                                                 [default: \"Id\"]\n  --quiet, -q        Suppress log messages from output                 [boolean]\n  --help, -h         Show help                                         [boolean]\n  --version, -v      Show version number                               [boolean]\n\nExamples:\n  json-server db.json\n  json-server file.js\n  json-server http://example.com/db.json\n\nhttps://github.com/typicode/json-server\n\nYou can also set options in a json-server.json configuration file.\n{\n  \"port\": 3000\n}\nModule\nIf you need to add authentication, validation, or any behavior, you can use the project as a module in combination with other Express middlewares.\nSimple example\n$ npm install json-server --save-dev\n// server.js\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\nserver.use(middlewares)\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\n$ node server.js\nThe path you provide to the jsonServer.router function  is relative to the directory from where you launch your node process. If you run the above code from another directory, it\u2019s better to use an absolute path:\nconst path = require('path')\nconst router = jsonServer.router(path.join(__dirname, 'db.json'))\nFor an in-memory database, simply pass an object to jsonServer.router().\nPlease note also that jsonServer.router() can be used in existing Express projects.\nCustom routes example\nLet's say you want a route that echoes query parameters and another one that set a timestamp on every resource created.\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\n// Set default middlewares (logger, static, cors and no-cache)\nserver.use(middlewares)\n\n// Add custom routes before JSON Server router\nserver.get('/echo', (req, res) => {\n  res.jsonp(req.query)\n})\n\n// To handle POST, PUT and PATCH you need to use a body-parser\n// You can use the one used by JSON Server\nserver.use(jsonServer.bodyParser)\nserver.use((req, res, next) => {\n  if (req.method === 'POST') {\n    req.body.createdAt = Date.now()\n  }\n  // Continue to JSON Server router\n  next()\n})\n\n// Use default router\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\nAccess control example\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\nserver.use(middlewares)\nserver.use((req, res, next) => {\n if (isAuthorized(req)) { // add your authorization logic here\n   next() // continue to JSON Server router\n } else {\n   res.sendStatus(401)\n }\n})\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\nCustom output example\nTo modify responses, overwrite router.render method:\n// In this example, returned resources will be wrapped in a body property\nrouter.render = (req, res) => {\n  res.jsonp({\n    body: res.locals.data\n  })\n}\nYou can set your own status code for the response:\n// In this example we simulate a server side error response\nrouter.render = (req, res) => {\n  res.status(500).jsonp({\n    error: \"error message here\"\n  })\n}\nRewriter example\nTo add rewrite rules, use jsonServer.rewriter():\n// Add this before server.use(router)\nserver.use(jsonServer.rewriter({\n  '/api/*': '/$1',\n  '/blog/:resource/:id/show': '/:resource/:id'\n}))\nMounting JSON Server on another endpoint example\nAlternatively, you can also mount the router on /api.\nserver.use('/api', router)\nAPI\njsonServer.create()\nReturns an Express server.\njsonServer.defaults([options])\nReturns middlewares used by JSON Server.\n\noptions\n\nstatic path to static files\nlogger enable logger middleware (default: true)\nbodyParser enable body-parser middleware (default: true)\nnoCors disable CORS (default: false)\nreadOnly accept only GET requests (default: false)\n\n\n\njsonServer.router([path|object])\nReturns JSON Server router.\nDeployment\nYou can deploy JSON Server. For example, JSONPlaceholder is an online fake API powered by JSON Server and running on Heroku.\nLinks\nVideo\n\nCreating Demo APIs with json-server on egghead.io\n\nArticles\n\nNode Module Of The Week - json-server\nMock up your REST API with JSON Server\nng-admin: Add an AngularJS admin GUI to any RESTful API\nFast prototyping using Restangular and Json-server\nCreate a Mock REST API in Seconds for Prototyping your Frontend\nNo API? No Problem! Rapid Development via Mock APIs\nZero Code REST With json-server\n\nThird-party tools\n\nGrunt JSON Server\nDocker JSON Server\nJSON Server GUI\nJSON file generator\nJSON Server extension\n\nLicense\nMIT\nSupporters \u2728\n\n"}, {"repo": "spring-projects/spring-boot", "language": "Java", "readme": "\nSpring Boot  \n\n\n\nSpring Boot makes it easy to create Spring-powered, production-grade applications and\nservices with absolute minimum fuss. It takes an opinionated view of the Spring platform\nso that new and existing users can quickly get to the bits they need.\n\n\nYou can use Spring Boot to create stand-alone Java applications that can be started using\njava -jar or more traditional WAR deployments. We also provide a command line tool\nthat runs spring scripts.\n\n\nOur primary goals are:\n\n\n\n\nProvide a radically faster and widely accessible getting started experience for all\nSpring development\n\n\nBe opinionated out of the box, but get out of the way quickly as requirements start to\ndiverge from the defaults\n\n\nProvide a range of non-functional features that are common to large classes of projects\n(e.g. embedded servers, security, metrics, health checks, externalized configuration)\n\n\nAbsolutely no code generation and no requirement for XML configuration\n\n\n\n\n\n\nInstallation and Getting Started\n\n\nThe reference documentation includes detailed\ninstallation\ninstructions as well as a comprehensive\ngetting started\nguide.\n\n\nHere is a quick teaser of a complete Spring Boot application in Java:\n\n\n\nimport org.springframework.boot.*;\nimport org.springframework.boot.autoconfigure.*;\nimport org.springframework.web.bind.annotation.*;\n\n@RestController\n@SpringBootApplication\npublic class Example {\n\n\t@RequestMapping(\"/\")\n\tString home() {\n\t\treturn \"Hello World!\";\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(Example.class, args);\n\t}\n\n}\n\n\n\n\n\nGetting help\n\n\nHaving trouble with Spring Boot? We\u2019d like to help!\n\n\n\n\nCheck the reference documentation, especially the\nHow-to\u2019s\u2009\u2014\u2009they provide solutions to the most common\nquestions.\n\n\nLearn the Spring basics\u2009\u2014\u2009Spring Boot builds on many other Spring projects, check\nthe spring.io web-site for a wealth of reference documentation. If\nyou are just starting out with Spring, try one of the guides.\n\n\nIf you are upgrading, read the release notes for upgrade instructions and\n\"new and noteworthy\" features.\n\n\nAsk a question - we monitor stackoverflow.com for questions\ntagged with spring-boot. You can also chat\nwith the community on Gitter.\n\n\nReport bugs with Spring Boot at github.com/spring-projects/spring-boot/issues.\n\n\n\n\n\n\nReporting Issues\n\n\nSpring Boot uses GitHub\u2019s integrated issue tracking system to record bugs and feature\nrequests. If you want to raise an issue, please follow the recommendations below:\n\n\n\n\nBefore you log a bug, please search the issue tracker to see if someone\nhas already reported the problem.\n\n\nIf the issue doesn\u2019t already exist, create a new issue.\n\n\nPlease provide as much information as possible with the issue report, we like to know\nthe version of Spring Boot that you are using, as well as your Operating System and\nJVM version.\n\n\nIf you need to paste code, or include a stack trace use Markdown ``` escapes\nbefore and after your text.\n\n\nIf possible try to create a test-case or project that replicates the problem and attach\nit to the issue.\n\n\n\n\n\n\nBuilding from Source\n\n\nYou don\u2019t need to build from source to use Spring Boot (binaries in\nrepo.spring.io), but if you want to try out the latest and\ngreatest, Spring Boot can be easily built with the\nmaven wrapper. You also need JDK 1.8.\n\n\n\n$ ./mvnw clean install\n\n\n\nIf you want to build with the regular mvn command, you will need\nMaven v3.5.0 or above.\n\n\n\n\n\nNote\n\n\nYou may need to increase the amount of memory available to Maven by setting\na MAVEN_OPTS environment variable with the value -Xmx512m. Remember\nto set the corresponding property in your IDE as well if you are building and running\ntests there (e.g. in Eclipse go to Preferences\u2192Java\u2192Installed JREs and edit the\nJRE definition so that all processes are launched with those arguments). This property\nis automatically set if you use the maven wrapper.\n\n\n\n\n\nAlso see CONTRIBUTING.adoc if you wish to submit pull requests,\nand in particular please fill out the\nContributor\u2019s Agreement\nbefore your first change, however trivial.\n\n\nBuilding reference documentation\n\nFirst of all, make sure you have built the project:\n\n\n\n$ ./mvnw clean install\n\n\n\nThe reference documentation requires the documentation of the Maven plugin to be\navailable so you need to build that first since it\u2019s not generated by default.\n\n\n\n$ ./mvnw clean install -pl spring-boot-project/spring-boot-tools/spring-boot-maven-plugin -Pdefault,full\n\n\n\nThe documentation also includes auto-generated information about the starters. You might\nhave that in your local repository already (per the first step) but if you want to refresh\nit:\n\n\n\n$ ./mvnw clean install -f spring-boot-project/spring-boot-starters\n\n\n\nOnce this is done, you can build the reference documentation with the command below:\n\n\n\n$ ./mvnw clean prepare-package -pl spring-boot-project/spring-boot-docs -Pdefault,full\n\n\n\n\n\n\nTip\n\n\nThe generated documentation is available from spring-boot-project/spring-boot-docs/target/generated-docs/reference/html\n\n\n\n\n\n\n\n\nModules\n\n\nThere are a number of modules in Spring Boot, here is a quick overview:\n\n\nspring-boot\n\nThe main library providing features that support the other parts of Spring Boot,\nthese include:\n\n\n\n\nThe SpringApplication class, providing static convenience methods that make it easy\nto write a stand-alone Spring Application. Its sole job is to create and refresh an\nappropriate Spring ApplicationContext\n\n\nEmbedded web applications with a choice of container (Tomcat, Jetty or Undertow)\n\n\nFirst class externalized configuration support\n\n\nConvenience ApplicationContext initializers, including support for sensible logging\ndefaults\n\n\n\n\n\nspring-boot-autoconfigure\n\nSpring Boot can configure large parts of common applications based on the content\nof their classpath. A single @EnableAutoConfiguration annotation triggers\nauto-configuration of the Spring context.\n\n\nAuto-configuration attempts to deduce which beans a user might need. For example, if\nHSQLDB is on the classpath, and the user has not configured any database connections,\nthen they probably want an in-memory database to be defined. Auto-configuration will\nalways back away as the user starts to define their own beans.\n\n\n\nspring-boot-starters\n\nStarters are a set of convenient dependency descriptors that you can include in\nyour application. You get a one-stop-shop for all the Spring and related technology\nthat you need without having to hunt through sample code and copy paste loads of\ndependency descriptors. For example, if you want to get started using Spring and JPA for\ndatabase access just include the spring-boot-starter-data-jpa dependency in your\nproject, and you are good to go.\n\n\n\nspring-boot-cli\n\nThe Spring command line application compiles and runs Groovy source, making it super\neasy to write the absolute minimum of code to get an application running. Spring CLI\ncan also watch files, automatically recompiling and restarting when they change.\n\n\n\nspring-boot-actuator\n\nActuator endpoints let you monitor and interact with your application.\nSpring Boot Actuator provides the infrastructure required for actuator endpoints. It contains\nannotation support for actuator endpoints. Out of the box, this module provides a number of endpoints\nincluding the HealthEndpoint, EnvironmentEndpoint, BeansEndpoint and many more.\n\n\n\nspring-boot-actuator-autoconfigure\n\nThis provides auto-configuration for actuator endpoints based on the content of the classpath and a set of properties.\nFor instance, if Micrometer is on the classpath, it will auto-configure the MetricsEndpoint.\nIt contains configuration to expose endpoints over HTTP or JMX.\nJust like Spring Boot AutoConfigure, this will back away as the user starts to define their own beans.\n\n\n\nspring-boot-test\n\nThis module contains core items and annotations that can be helpful when testing your application.\n\n\n\nspring-boot-test-autoconfigure\n\nLike other Spring Boot auto-configuration modules, spring-boot-test-autoconfigure, provides auto-configuration\nfor tests based on the classpath. It includes a number of annotations that can be used to automatically\nconfigure a slice of your application that needs to be tested.\n\n\n\nspring-boot-loader\n\nSpring Boot Loader provides the secret sauce that allows you to build a single jar file\nthat can be launched using java -jar. Generally you will not need to use\nspring-boot-loader directly, but instead work with the\nGradle or\nMaven plugin.\n\n\n\nspring-boot-devtools\n\nThe spring-boot-devtools module provides additional development-time features such as automatic restarts,\nfor a smoother application development experience. Developer tools are automatically disabled when\nrunning a fully packaged application.\n\n\n\n\n\nSamples\n\n\nGroovy samples for use with the command line application are available in\nspring-boot-cli/samples. To run the CLI samples type\nspring run <sample>.groovy from samples directory.\n\n\n\n\nGuides\n\n\nThe spring.io site contains several guides that show how to use Spring\nBoot step-by-step:\n\n\n\n\nBuilding an Application with Spring Boot is a\nvery basic guide that shows you how to create a simple application, run it and add some\nmanagement services.\n\n\nBuilding a RESTful Web Service with Spring\nBoot Actuator is a guide to creating a REST web service and also shows how the server\ncan be configured.\n\n\nConverting a Spring Boot JAR Application\nto a WAR shows you how to run applications in a web server as a WAR file.\n\n\n\n\n\n\nLicense\n\n\nSpring Boot is Open Source software released under the\nApache 2.0 license.\n\n\n\n"}, {"repo": "storybookjs/storybook", "language": "TypeScript", "readme": "\n\n\n\n\n\nBuild bulletproof UI components faster\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStorybook is a development environment for UI components.\nIt allows you to browse a component library, view the different states of each component, and interactively develop and test components.\n\n\n  View README for:\n\n\n\nIntro\nStorybook runs outside of your app. This allows you to develop UI components in isolation, which can improve component reuse, testability, and development speed. You can build quickly without having to worry about application-specific dependencies.\nHere are some featured examples that you can reference to see how Storybook works: https://storybook.js.org/examples/\nStorybook comes with a lot of addons for component design, documentation, testing, interactivity, and so on. Storybook's API makes it possible to configure and extend in various ways. It has even been extended to support React Native development for mobile.\nTable of contents\n\n\ud83d\ude80Getting Started\n\ud83d\udcd2Projects\n\n\ud83d\udee0Supported Frameworks & Examples\n\ud83d\ude87Sub Projects\n\ud83d\udd17Addons\n\n\n\ud83c\udfc5Badges & Presentation materials\n\ud83d\udc65Community\n\ud83d\udc4fContributing\n\n\ud83d\udc68\u200d\ud83d\udcbbDevelopment scripts\n\ud83d\udcb5Backers\n\ud83d\udcb8Sponsors\n\n\n\ud83d\udcddLicense\n\nGetting Started\nFirst install storybook:\ncd my-react-app\nnpx -p @storybook/cli sb init\nIf you'd rather set up your project manually, take a look at our Slow Start Guide.\nOnce it's installed, you can npm run storybook and it will run the development server on your local machine, and give you a URL to browse some sample stories.\nStorybook v2.x migration note:\nIf you're using Storybook v2.x and want to shift to 4.x version the easiest way is:\ncd my-storybook-v2-app\nnpx -p @storybook/cli sb init\nIt runs a codemod to update all package names. Read all migration details in our Migration Guide\nFor full documentation on using Storybook visit: storybook.js.org\nFor additional help, join us in our Discord or Slack\nProjects\nSupported Frameworks\n\n\n\nFramework\nDemo\n\n\n\n\n\nReact\nv5.1.0\n\n\n\nReact Native\n-\n\n\n\nVue\nv5.1.0\n\n\n\nAngular\nv5.1.0\n\n\n\nPolymer\nv5.1.0\n\n\n\nMithril\nv5.1.0\n\n\n\nMarko\nv5.1.0\n\n\n\nHTML\nv5.1.0\n\n\n\nSvelte\nv5.1.0\n\n\n\nRiot\nv5.1.0\n\n\n\nEmber\nv5.1.0\n\n\n\nPreact\nv5.1.0\n\n\n\n\nSub Projects\n\nCLI - Streamlined installation for a variety of app types\nexamples - Code examples to illustrate different Storybook use cases\n\nAddons\n\n\n\nAddons\n\n\n\n\n\na11y\nTest components for user accessibility in Storybook\n\n\nactions\nLog actions as users interact with components in the Storybook UI\n\n\nbackgrounds\nLet users choose backgrounds in the Storybook UI\n\n\ncentered\nCenter the alignment of your components within the Storybook UI\n\n\ncontexts\nInteractively inject component contexts for stories in the Storybook UI\n\n\ncssresources\nDynamically add/remove css resources to the component iframe\n\n\ndesign assets\nView images, videos, weblinks alongside your story\n\n\nevents\nInteractively fire events to components that respond to EventEmitter\n\n\ngraphql\nQuery a GraphQL server within Storybook stories\n\n\ngoogle-analytics\nReports google analytics on stories\n\n\ninfo\nAnnotate stories with extra component usage information\n\n\njest\nView the results of components' unit tests in Storybook\n\n\nknobs\nInteractively edit component prop data in the Storybook UI\n\n\nlinks\nCreate links between stories\n\n\nnotes\nAnnotate Storybook stories with notes\n\n\noptions\nCustomize the Storybook UI in code\n\n\nstoryshots\nSnapshot testing for components in Storybook\n\n\nstorysource\nView the code of your stories within the Storybook UI\n\n\nviewport\nChange display sizes and layouts for responsive components using Storybook\n\n\n\nSee Addon / Framework Support Table\nBadges & Presentation materials\nWe have a badge! Link it to your live Storybook example.\n\n[![Storybook](https://cdn.jsdelivr.net/gh/storybookjs/brand@master/badge/badge-storybook.svg)](link to site)\nIf you're looking for material to use in your presentation about storybook, like logo's video material and the colors we use etc, you can find all of that at our brand repo.\nCommunity\n\nTweeting via @storybookjs\nBlogging at Medium\nChatting on Slack\nDiscussions on Discord\nStreaming saved at Youtube\n\nContributing\nWe welcome contributions to Storybook!\n\n\ud83d\udce5 Pull requests and \ud83c\udf1f Stars are always welcome.\nRead our contributing guide to get started.\nor find us on Discord, we're will take the time to guide you\n\nLooking for a first issue to tackle?\n\nWe tag issues with  when we think they are well suited for people who are new to the codebase or OSS in general.\nTalk to us, we'll find something to suits your skills and learning interest.\n\nDevelopment scripts\nStorybook is organized as a monorepo using Lerna. Useful scripts include:\nyarn bootstrap\n\nInstalls package dependencies and links packages together - using lerna\n\nyarn run publish\n\nPush a release to git and npm\nwill ask for version in interactive mode - using lerna.\n\nyarn lint\n\nboolean check if code conforms to linting rules - uses remark & eslint\n\n\n\nyarn lint:js - will check js\n\n\nyarn lint:md - will check markdown + code samples\n\n\nyarn lint:js --fix - will automatically fix js\n\n\nyarn test\n\nboolean check if unit tests all pass - uses jest\n\n\nyarn run test --core --watch - will run core tests in watch-mode\n\nSponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBackers\nSupport us with a monthly donation and help us continue our activities. [Become a backer]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLicense\nMIT\n-the end-\n\n"}, {"repo": "h5bp/html5-boilerplate", "language": "JavaScript", "readme": "\nHTML5 Boilerplate\n\n\n\n\n\nHTML5 Boilerplate is a professional front-end template for building\nfast, robust, and adaptable web apps or sites.\nThis project is the product of years of iterative development and\ncommunity knowledge. It does not impose a specific development\nphilosophy or framework, so you're free to architect your code in the\nway that you want.\n\nHomepage: https://html5boilerplate.com/\nSource: https://github.com/h5bp/html5-boilerplate\nTwitter: @h5bp\n\nQuick start\nChoose one of the following options:\n\n\nDownload the latest stable release from\nhtml5boilerplate.com. This zip file is a snapshot of the dist folder. On Windows, Mac and from the file manager on Linux unzipping this folder will output to a folder named something like html5-boilerplate_v7.3.0. From the command line will need to create a folder and unzip the contents into that folder.\nmkdir html5-boilerplate\nunzip html5-boilerplate*.zip -d html5-boilerplate\n\n\nClone the git repo \u2014 git clone https://github.com/h5bp/html5-boilerplate.git - and checkout the\ntagged release\nyou'd like to use. The dist folder represents the latest version of the project for end users.\n\n\nInstall with npm: npm install html5-boilerplate or yarn: yarn add html5-boilerplate. The resulting node_modules/html5-boilerplate/dist folder represents the latest version of the project for end users. Depending on what you want to use and how you want to use it, you may have to copy and paste the contents of that folder into your project directory.\n\n\nFeatures\n\nHTML5 ready. Use the new elements with confidence.\nDesigned with progressive enhancement in mind.\nIncludes:\n\nNormalize.css\nfor CSS normalizations and common bug fixes\njQuery via CDN with SRI Hash and a local fallback\nA custom build of Modernizr for feature\ndetection\nApache Server Configs\nthat, among other, improve the web site's performance and security\n\n\nPlaceholder CSS Media Queries.\nUseful CSS helper classes.\nDefault print styles, performance optimized.\nAn optimized version of the Google Universal Analytics snippet.\nProtection against any stray console statements causing JavaScript\nerrors in older browsers.\n\"Delete-key friendly.\" Easy to strip out parts you don't need.\nExtensive inline and accompanying documentation.\n\nBrowser support\n\nChrome (latest 2)\nEdge (latest 2)\nFirefox (latest 2)\nInternet Explorer 11\nOpera (latest 2)\nSafari (latest 2)\n\nThis doesn't mean that HTML5 Boilerplate cannot be used in older browsers,\njust that we'll ensure compatibility with the ones mentioned above.\nIf you need legacy browser support you can use HTML5 Boilerplate v6 (IE9/IE10)\nor HTML5 Boilerplate v5 (IE 8). They are no longer actively developed.\nDocumentation\nTake a look at the documentation table of contents.\nThis documentation is bundled with the project which makes it\navailable for offline reading and provides a useful starting point for\nany documentation you want to write about your project.\nContributing\nHundreds of developers have helped to make the HTML5 Boilerplate. Anyone is welcome to contribute,\nhowever, if you decide to get involved, please take a moment to review\nthe guidelines:\n\nBug reports\nFeature requests\nPull requests\n\nLicense\nThe code is available under the MIT license.\n\n"}, {"repo": "netdata/netdata", "language": "C", "readme": "\nNetdata    \n    \n\nNetdata is distributed, real-time, performance and health monitoring for systems and applications. It is a highly optimized monitoring agent you install on all your systems and containers.\nNetdata provides unparalleled insights, in real-time, of everything happening on the systems it runs (including web servers, databases, applications), using highly interactive web dashboards. It can run autonomously, without any third party components, or it can be integrated to existing monitoring tool chains (Prometheus, Graphite, OpenTSDB, Kafka, Grafana, etc).\nNetdata is fast and efficient, designed to permanently run on all systems (physical & virtual servers, containers, IoT devices), without disrupting their core function.\nNetdata is free, open-source software and it currently runs on Linux, FreeBSD, and MacOS.\nNetdata is not hosted by the CNCF but is the 3rd most starred open-source project in the Cloud Native Computing Foundation (CNCF) landscape.\n\nPeople get addicted to Netdata.\nOnce you use it on your systems, there is no going back! You have been warned...\n\n\nContents\n\nHow it looks - have a quick look at it\nUser base - who uses Netdata?\nQuick Start - try it now on your systems\nWhy Netdata - why people love Netdata, how it compares with other solutions\nNews - latest news about Netdata\nHow it works - high level diagram of how Netdata works\ninfographic - everything about Netdata, in a page\nFeatures - what features does it have\nVisualization - unique visualization features\nWhat does it monitor - which metrics it collects\nDocumentation - read the docs\nCommunity - discuss with others and get support\nLicense - check the license of Netdata\nIs it any good? - Yes\nIs it awesome? - Yes\n\nHow it looks\nThe following animated image, shows the top part of a typical Netdata dashboard.\n\nA typical Netdata dashboard, in 1:1 timing. Charts can be panned by dragging them, zoomed in/out with SHIFT + mouse wheel, an area can be selected for zoom-in with SHIFT + mouse selection. Netdata is highly interactive and real-time, optimized to get the work done!\n\nWe have a few online demos to experience it live: https://www.netdata.cloud\n\nUser base\nNetdata is used by hundreds of thousands of users all over the world.\nCheck our GitHub watchers list.\nYou will find people working for Amazon, Atos, Baidu, Cisco Systems, Citrix, Deutsche Telekom, DigitalOcean,\nElastic, EPAM Systems, Ericsson, Google, Groupon, Hortonworks, HP, Huawei,\nIBM, Microsoft, NewRelic, Nvidia, Red Hat, SAP, Selectel, TicketMaster,\nVimeo, and many more!\nDocker pulls\nWe provide docker images for the most common architectures. These are statistics reported by docker hub:\n  \nRegistry\nWhen you install multiple Netdata, they are integrated into one distributed application, via a Netdata registry. This is a web browser feature and it allows us to count the number of unique users and unique Netdata servers installed. The following information comes from the global public Netdata registry we run:\n  \nin the last 24 hours:   \nQuick Start\n \nTo install Netdata from source on any Linux system (physical, virtual, container, IoT, edge) and keep it up to date with our nightly releases automatically, run the following:\n# make sure you run `bash` for your shell\nbash\n\n# install Netdata directly from GitHub source\nbash <(curl -Ss https://my-netdata.io/kickstart.sh)\nTo learn more about the pros and cons of using nightly vs. stable releases, see our notice about the two options.\nThe above command will:\n\nInstall any required packages on your system (it will ask you to confirm before doing so)\nCompile it, install it, and start it.\n\nMore installation methods and additional options can be found at the installation page.\nTo try Netdata in a docker container, run this:\ndocker run -d --name=netdata \\\n  -p 19999:19999 \\\n  -v /etc/passwd:/host/etc/passwd:ro \\\n  -v /etc/group:/host/etc/group:ro \\\n  -v /proc:/host/proc:ro \\\n  -v /sys:/host/sys:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  --cap-add SYS_PTRACE \\\n  --security-opt apparmor=unconfined \\\n  netdata/netdata\nFor more information about running Netdata in docker, check the docker installation page.\n\nFrom Netdata v1.12 and above, anonymous usage information is collected by default and sent to Google Analytics. To read more about the information collected and how to opt-out, check the anonymous statistics page.\nWhy Netdata\nNetdata has a quite different approach to monitoring.\nNetdata is a monitoring agent you install on all your systems. It is:\n\na metrics collector - for system and application metrics (including web servers, databases, containers, etc)\na time-series database - all stored in memory (does not touch the disks while it runs)\na metrics visualizer - super fast, interactive, modern, optimized for anomaly detection\nan alarms notification engine - an advanced watchdog for detecting performance and availability issues\n\nAll the above, are packaged together in a very flexible, extremely modular, distributed application.\nThis is how Netdata compares to other monitoring solutions:\n\n\n\nNetdata\nothers (open-source and commercial)\n\n\n\n\nHigh resolution metrics (1s granularity)\nLow resolution metrics (10s granularity at best)\n\n\nMonitors everything, thousands of metrics per node\nMonitor just a few metrics\n\n\nUI is super fast, optimized for anomaly detection\nUI is good for just an abstract view\n\n\nMeaningful presentation, to help you understand the metrics\nYou have to know the metrics before you start\n\n\nInstall and get results immediately\nLong preparation is required to get any useful results\n\n\nUse it for troubleshooting performance problems\nUse them to get statistics of past performance\n\n\nKills the console for tracing performance issues\nThe console is always required for troubleshooting\n\n\nRequires zero dedicated resources\nRequire large dedicated resources\n\n\n\nNetdata is open-source, free, super fast, very easy, completely open, extremely efficient,\nflexible and integrate-able.\nIt has been designed by SysAdmins, DevOps and Developers for troubleshooting performance problems,\nnot just visualize metrics.\nNews\nNov 27th, 2019 - Netdata v1.19.0 released!\nRelease v1.19.0 contains 2 new collectors, 19 bug fixes, 17 improvements, and 19 documentation updates.\nWe completed a major rewrite of our web log collector to dramatically improve its flexibility and performance. The new collector, written entirely in Go, can parse and chart logs from Nginx and Apache servers, and combines numerous improvements. Netdata now supports the LTSV log format, creates charts for TLS and cipher usage, and is amazingly fast. In a test using SSD storage, the collector parsed the logs for 200,000 requests in about 200ms, using 30% of a single core.\nThis Go-based collector also has powerful custom log parsing capabilities, which means we're one step closer to a generic application log parser for Netdata. We're continuing to work on this parser to support more application log formatting in the future.\nWe have a new tutorial on enabling the Go web log collector and using it with Nginx and/or Apache access logs with minimal configuration. Thanks to Wing924 for starting the Go rewrite!\nWe introduced more cmocka unit testing to Netdata. In this release, we're testing how Netdata's internal web server processes HTTP requests\u2014the first step to improve the quality of code throughout, reduce bugs, and make refactoring easier. We wanted to validate the web server's behavior but needed to build a layer of parametric testing on top of the CMocka test runner. Read all about our process of testing and selecting cmocka on our blog post: Building an agile team's 'safety harness' with cmocka and FOSS.\nNetdata's Unbound collector was also completely rewritten in Go to improve how it collects and displays metrics. This new version can get dozens of metrics, including details on queries, cache, uptime, and even show per-thread metrics. See our tutorial on enabling the new collector via Netdata's amazing auto-detection feature.\nWe fixed an error where invalid spikes appeared on certain charts by improving the incremental counter reset/wraparound detection algorithm.\nNetdata can now send health alarm notifications to IRC channels thanks to Strykar!\nAnd, Netdata can now monitor AM2320 sensors, thanks to hard work from Tom Buck.\n\nOct 18th, 2019 - Netdata v1.18.1 released!\nRelease v1.18.1 contains 17 bug fixes, 5 improvements, and 5 documentation updates.\nThe patch has several bug fixes, mainly related to FreeBSD and the binary package generation process.\nNetdata can now send notifications to Google Hangouts Chat!\nOn certain systems, the slabinfo plugin introduced in v1.18.0 added thousands of new metrics. We decided the collector's usefulness to most users didn't justify the increase in resource requirements. This release disables the collector by default.\nFinally, we added a chart under Netdata Monitoring to present a better view of the RAM used by the database engine (dbengine). The chart doesn't currently take into consideration the RAM used for slave nodes, so we intend to add more related charts in the future.\n\nOct 10th, 2019 - Netdata v1.18.0 released!\nRelease v1.18.0 contains 5 new collectors, 16 bug fixes, 27 improvements, and 20 documentation updates.\nThe database engine is now the default method of storing metrics in Netdata. You immediately get more efficient and configurable long-term metrics storage without any work on your part. By saving recent metrics in RAM and \"spilling\" historical metrics to disk for long-term storage, the database engine is laying the foundation for many more improvements to distributed metrics.\nWe even have a tutorial on switching to the database engine and getting the most from it. Or, just read up on how performant the database engine really is.\nBoth our python.d and go.d plugins now have more intelligent auto-detection by periodically dump a list of active modules to disk. When Netdata starts, such as after a reboot, the plugins use this list of known services to re-establish metrics collection much more reliably. No more worrying if the service or application you need to monitor starts up minutes after Netdata.\nTwo of our new collectors will help those with Hadoop big data infrastructures. The HDFS and Zookeeper collection modules come with essential alarms requested by our community and Netdata's auto-detection capabilities to keep the required configuration to an absolute minimum. Read up on the process via our HDFS and Zookeeper tutorial.\nSpeaking of new collectors\u2014we also added the ability to collect metrics from SLAB cache, Gearman, and vCenter Server Appliances.\nBefore v1.18, if you wanted to create alarms for each dimension in a single chart, you need to write separate entities for each dimension\u2014not very efficient or user-friendly. New dimension templates fix that hassle. Now, a single entity can automatically generate alarms for any number of dimensions in a chart, even those you weren't aware of! Our tutorial on dimension templates has all the details.\nv1.18 brings support for installing Netdata on offline or air-gapped systems. To help users comply with strict security policies, our installation scripts can now install Netdata using previously-downloaded tarball and checksums instead of downloading them at runtime. We have guides for installing offline via kickstart.sh or kickstart-static64.sh in our installation documentation. We're excited to bring real-time monitoring to once-inaccessible systems!\n\nSep 12th, 2019 - Netdata v1.17.1 released!\nRelease v1.17.1 contains 2 bug fixes, 6 improvements, and 2 documentation updates.\nThe main reason for the patch release is an essential fix to the repeating alarm notifications we introduced in v1.17.0. If you enabled repeating notifications, Netdata would not then send CLEAR notifications for the selected alarms.\nThe release also includes a significant improvement to Netdata's auto-detection capabilities, especially after a system restart. Netdata now remembers which python.d plugin jobs were successfully collecting data the last time it was running, and retries to run those jobs for 5 minutes before giving up. As a result, you no longer have to worry if your system starts Netdata before the monitored services have had a chance to start properly. We will complete the same improvement for go.d plugins in v1.18.0.\nWe also made some improvements to our binary packages and added a neat sample custom dashboard that can show charts from multiple Netdata agents.\n\nSep 3rd, 2019 - Netdata v1.17.0 released!\nRelease v1.17.0 contains 38 bug fixes, 33 improvements, and 20 documentation updates.\nYou can now change the data collection frequency at will, without losing previously collected values. A major improvement to the new database engine allows you not only to store metrics at variable granularity, but also to autoscale the time axis of the charts, depending on the data collection frequencies used during the presented time.\nYou can also now monitor VM performance from one or more vCenter servers with a new VSphere collector. In addition, the proc plugin now also collects ZRAM device performance metrics and the apps plugin monitors process uptime for the defined process groups.\nContinuing our efforts to integrate with as many existing solutions as possible, you can now directly archive metrics from Netdata to MongoDB via a new backend.\nNetdata badges now support international (UTF8) characters! We also made our URL parser smarter, not only for international character support, but also for other strange API queries.\nWe also added .DEB packages to our binary distribution repositories at Packagecloud, a new collector for Linux zram device metrics, and support for plain text email notifications.\nThis release includes several fixes and improvements to the TLS encryption feature we introduced in v1.16.0. First, encryption slave-to-master streaming connections wasn't working as intended. And second, our community helped us discover cases where HTTP requests were not correctly redirected to HTTPS with TLS enabled. This release mitigates those issues and improves TLS support overall.\nFinally, we improved the way Netdata displays charts with no metrics. By default, Netdata displays charts for disks, memory, and networks only when the associated metrics are not zero. Users could enable these charts permanently using the corresponding configuration options, but they would need to change more than 200 options. With this new improvement, users can enable all charts with zero values using a single, global configuration parameter.\n\nJul 9th, 2019 - Netdata v1.16.0 released!\nRelease v1.16.0 contains 40 bug fixes, 31 improvements and 20 documentation updates\nBinary distributions. To improve the security, speed and reliability of new Netdata installations, we are delivering our own, industry standard installation method, with binary package distributions. The RPM binaries for the most common OSs are already available on packagecloud and we\u2019ll have the DEB ones available very soon. All distributions are considered in Beta and, as always, we depend on our amazing community for feedback on improvements.\n\nOur stable distributions are at netdata/netdata @ packagecloud.io\nThe nightly builds are at netdata/netdata-edge @ packagecloud.io\n\nNetdata now supports TLS encryption! You can secure the communication to the web server, the streaming connections from slaves to the master and the connection to an openTSDB backend.\nThis version also brings two long-awaited features to Netdata\u2019s health monitoring:\n\nThe health management API introduced in v1.12 allowed you to easily disable alarms and/or notifications while Netdata was running. However, those changes were not persisted across Netdata restarts. Since part of routine maintenance activities may involve completely restarting a monitoring node, Netdata now saves these configurations to disk, every time you issue a command to change the silencer settings. The new LIST command of the API allows you to view at any time which alarms are currently disabled or silenced.\nA way for Netdata to repeatedly send alarm notifications for some, or all active alarms, at a frequency of your choosing. As a result, you will no longer have to worry about missing a notification, forgetting about a raised alarm. The default is still to only send a single notification, so that existing users are not surprised by a different behavior.\n\nAs always, we\u2019ve introduced new collectors, 5 of them this time:\n\nOf special interest to people with Windows servers in their infrastructure is the WMI collector, though we are fully aware that we need to continue our efforts to do a proper port to Windows.\nThe new perf plugin collects system-wide CPU performance statistics from Performance Monitoring Units (PMU) using the perf_event_open() system call. You can read a wonderful article on why this is useful here.\nThe other three are collectors to monitor Dnsmasq DHCP leases, Riak KV servers and Pihole instances.\n\nFinally, the DB Engine introduced in v1.15.0 now uses much less memory and is more robust than before.\n\nMay 21st, 2019 - Netdata v1.15.0 released!\nRelease v1.15.0 contains 11 bug fixes and 30 improvements.\nWe are very happy and proud to be able to include two major improvements in this release: The aggregated node view and the new database engine.\nAggregated node view\nThe No. 1 request from our community has been a better way to view and manage their Netdata installations, via an aggregated view. The node menu with the simple list of hosts on the agent UI just didn't do it for people with hundreds, or thousands of instances. This release introduces the node view, which uses the power of Netdata Cloud to deliver powerful views of a Netdata-based monitoring infrastructure. You can read more about Netdata Cloud and the future of Netdata here.\nNew database engine\nHistorically, Netdata has required a lot of memory for long-term metrics storage. To mitigate this we've been building a new DB engine for several months and will continue improving until it can become the default memory mode for new Netdata installations. The version included in release v1.15.0 already permits longer-term storage of compressed data and we'll continue reducing the required memory in following releases.\nOther major additions\nWe have added support for the AWS Kinesis backend and new collectors for OpenVPN, the Tengine web server, ScaleIO (VxFlex OS), ioping-like latency metrics and Energi Core node instances.\nWe now have a new, \"text-only\" chart type, cpu limits for v2 cgroups, docker swarm metrics and improved documentation.\nWe continued improving the Kubernetes helmchart with liveness probes for slaves, persistence options, a fix for a Cannot allocate memory issue and easy configuration for the kubelet, kube-proxy and coredns collectors.\nFinally, we built a process to quickly replace any problematic nightly builds and added more automated CI tests to prevent such builds from being published in the first place.\n\nApr 26th, 2019 - Netdata v1.14.0 released!\nRelease 1.14 contains 14 bug fixes and 24 improvements.\nThe release introduces major additions to Kubernetes monitoring, with tens of new charts for Kubelet, kube-proxy and coredns metrics, as well as significant improvements to the Netdata helm chart.\nTwo new collectors were added, to monitor Docker hub and Docker engine metrics.\nFinally, v1.14  adds support for version 2 cgroups, OpenLDAP over TLS, NVIDIA SMI free and per process memory and configurable syslog facilities.\n\nMar 14th, 2019 - Netdata v1.13.0 released!\nRelease 1.13.0 contains 14 bug fixes and 8 improvements.\nNetdata has taken the first step into the world of Kubernetes, with a beta version of a Helm chart for deployment to a k8s cluster and proper naming of the cgroup containers. We have big plans for Kubernetes, so stay tuned!\nA major refactoring of the python.d plugin has resulted in a dramatic decrease of the required memory, making Netdata even more resource efficient.\nWe also added charts for IPC shared memory segments and total memory used.\n\nFeb 28th, 2019 - Netdata v1.12.2 released!\nPatch release 1.12.2 contains 7 bug fixes and 4 improvements.\nThe main motivation behind a new patch release is the introduction of a stable release channel.\nA \"stable\" installation and update channel was always on our roadmap, but it became a necessity when we realized that our users in China could not use the nightly releases published on Google Cloud. The \"stable\" channel is based on our official GitHub releases and uses assets hosted on GitHub.\nWe are also introducing a new Oracle DB collector module, implemented in Python.\n\nFeb 21st, 2019 - Netdata v1.12.1 released!\nPatch release 1.12.1 contains 22 bug fixes and 8 improvements.\n\nFeb 14th, 2019 - Netdata v1.12.0 released!\nRelease 1.12 is made out of 211 pull requests and 22 bug fixes.\nThe key improvements are:\n\nIntroducing netdata.cloud, the free Netdata service for all Netdata users\nHigh performance plugins with go.d.plugin (data collection orchestrator written in Go)\n7 new data collectors and 11 rewrites of existing data collectors for improved performance\nA new management API for all Netdata servers\nBind different functions of the Netdata APIs to different ports\nImproved installation and updates\n\n\nNov 22nd, 2018 - Netdata v1.11.1 released!\n\nImproved internal database to support values above 64bit.\nNew data collection plugins: openldap, tor, nvidia_smi.\nImproved data collection plugins: Netdata now supports monitoring network interface aliases, smartd_log, cpufreq, sensors.\nHealth monitoring improvements: network interface congestion alarm restored, alerta.io, conntrack_max.\nmy-netdatamenu has been refactored.\nPackaging: openrc service definition got a few improvements.\n\n\nSep 18, 2018 - Netdata has its own organization\nNetdata used to be a firehol.org project, accessible as firehol/netdata.\nNetdata now has its own github organization netdata, so all github URLs are now netdata/netdata. The old github URLs, repo clones, forks, etc redirect automatically to the new repo.\nHow it works\nNetdata is a highly efficient, highly modular, metrics management engine. Its lockless design makes it ideal for concurrent operations on the metrics.\n\nThis is how it works:\n\n\n\nFunction\nDescription\nDocumentation\n\n\n\n\nCollect\nMultiple independent data collection workers are collecting metrics from their sources using the optimal protocol for each application and push the metrics to the database. Each data collection worker has lockless write access to the metrics it collects.\ncollectors\n\n\nStore\nMetrics are stored in RAM in a round robin database (ring buffer), using a custom made floating point number for minimal footprint.\ndatabase\n\n\nCheck\nA lockless independent watchdog is evaluating health checks on the collected metrics, triggers alarms, maintains a health transaction log and dispatches alarm notifications.\nhealth\n\n\nStream\nAn lockless independent worker is streaming metrics, in full detail and in real-time, to remote Netdata servers, as soon as they are collected.\nstreaming\n\n\nArchive\nA lockless independent worker is down-sampling the metrics and pushes them to backend time-series databases.\nbackends\n\n\nQuery\nMultiple independent workers are attached to the internal web server, servicing API requests, including data queries.\nweb/api\n\n\n\nThe result is a highly efficient, low latency system, supporting multiple readers and one writer on each metric.\nInfographic\nThis is a high level overview of Netdata feature set and architecture.\nClick it to to interact with it (it has direct links to documentation).\n\nFeatures\n\nThis is what you should expect from Netdata:\nGeneral\n\n1s granularity - the highest possible resolution for all metrics.\nUnlimited metrics - collects all the available metrics, the more the better.\n1% CPU utilization of a single core - it is super fast, unbelievably optimized.\nA few MB of RAM - by default it uses 25MB RAM. You size it.\nZero disk I/O - while it runs, it does not load or save anything (except error and access logs).\nZero configuration - auto-detects everything, it can collect up to 10000 metrics per server out of the box.\nZero maintenance - You just run it, it does the rest.\nZero dependencies - it is even its own web server, for its static web files and its web API (though its plugins may require additional libraries, depending on the applications monitored).\nScales to infinity - you can install it on all your servers, containers, VMs and IoTs. Metrics are not centralized by default, so there is no limit.\nSeveral operating modes - Autonomous host monitoring (the default), headless data collector, forwarding proxy, store and forward proxy, central multi-host monitoring, in all possible configurations. Each node may have different metrics retention policy and run with or without health monitoring.\n\nHealth Monitoring & Alarms\n\nSophisticated alerting - comes with hundreds of alarms, out of the box! Supports dynamic thresholds, hysteresis, alarm templates, multiple role-based notification methods.\nNotifications: alerta.io, amazon sns, discordapp.com, email, flock.com, hangouts, irc, kavenegar.com, messagebird.com, pagerduty.com, prowl, pushbullet.com, pushover.net, rocket.chat, slack.com, smstools3, syslog, telegram.org, twilio.com, web and custom notifications.\n\nIntegrations\n\ntime-series dbs - can archive its metrics to Graphite, OpenTSDB, Prometheus, AWS Kinesis, MongoDB, JSON document DBs, in the same or lower resolution (lower: to prevent it from congesting these servers due to the amount of data collected). Netdata also supports Prometheus remote write API which allows storing metrics to Elasticsearch, Gnocchi, InfluxDB, Kafka, PostgreSQL/TimescaleDB, Splunk, VictoriaMetrics, and a lot of other storage providers.\n\nVisualization\n\nStunning interactive dashboards - mouse, touchpad and touch-screen friendly in 2 themes: slate (dark) and white.\nAmazingly fast visualization - responds to all queries in less than 1 ms per metric, even on low-end hardware.\nVisual anomaly detection - the dashboards are optimized for detecting anomalies visually.\nEmbeddable - its charts can be embedded on your web pages, wikis and blogs. You can even use Atlassian's Confluence as a monitoring dashboard.\nCustomizable - custom dashboards can be built using simple HTML (no javascript necessary).\n\nPositive and negative values\nTo improve clarity on charts, Netdata dashboards present positive values for metrics representing read, input, inbound, received and negative values for metrics representing write, output, outbound, sent.\n\nNetdata charts showing the bandwidth and packets of a network interface. received is positive and sent is negative.\nAutoscaled y-axis\nNetdata charts automatically zoom vertically, to visualize the variation of each metric within the visible time-frame.\n\nA zero based stacked chart, automatically switches to an auto-scaled area chart when a single dimension is selected.\nCharts are synchronized\nCharts on Netdata dashboards are synchronized to each other. There is no master chart. Any chart can be panned or zoomed at any time, and all other charts will follow.\n\nCharts are panned by dragging them with the mouse. Charts can be zoomed in/out withSHIFT + mouse wheel while the mouse pointer is over a chart.\n\nThe visible time-frame (pan and zoom) is propagated from Netdata server to Netdata server, when navigating via the node menu.\n\nHighlighted time-frame\nTo improve visual anomaly detection across charts, the user can highlight a time-frame (by pressing ALT + mouse selection) on all charts.\n\nA highlighted time-frame can be given by pressing ALT + mouse selection on any chart. Netdata will highlight the same range on all charts.\n\nHighlighted ranges are propagated from Netdata server to Netdata server, when navigating via the node menu.\n\nWhat does it monitor\nNetdata data collection is extensible - you can monitor anything you can get a metric for.\nIts Plugin API supports all programing languages (anything can be a Netdata plugin, BASH, python, perl, node.js, java, Go, ruby, etc).\n\nFor better performance, most system related plugins (cpu, memory, disks, filesystems, networking, etc) have been written in C.\nFor faster development and easier contributions, most application related plugins (databases, web servers, etc) have been written in python.\n\nAPM (Application Performance Monitoring)\n\nstatsd - Netdata is a fully featured statsd server.\nGo expvar - collects metrics exposed by applications written in the Go programming language using the expvar package.\nSpring Boot - monitors running Java Spring Boot applications that expose their metrics with the use of the Spring Boot Actuator included in Spring Boot library.\nuWSGI - collects performance metrics from uWSGI applications.\n\nSystem Resources\n\nCPU Utilization - total and per core CPU usage.\nInterrupts - total and per core CPU interrupts.\nSoftIRQs - total and per core SoftIRQs.\nSoftNet - total and per core SoftIRQs related to network activity.\nCPU Throttling - collects per core CPU throttling.\nCPU Frequency - collects the current CPU frequency.\nCPU Idle - collects the time spent per processor state.\nIdleJitter - measures CPU latency.\nEntropy - random numbers pool, using in cryptography.\nInterprocess Communication - IPC - such as semaphores and semaphores arrays.\n\nMemory\n\nram - collects info about RAM usage.\nswap - collects info about swap memory usage.\navailable memory - collects the amount of RAM available for userspace processes.\ncommitted memory - collects the amount of RAM committed to userspace processes.\nPage Faults - collects the system page faults (major and minor).\nwriteback memory - collects the system dirty memory and writeback activity.\nhuge pages - collects the amount of RAM used for huge pages.\nKSM - collects info about Kernel Same Merging (memory dedupper).\nNuma - collects Numa info on systems that support it.\nslab - collects info about the Linux kernel memory usage.\n\nDisks\n\nblock devices - per disk: I/O, operations, backlog, utilization, space, etc.\nBCACHE - detailed performance of SSD caching devices.\nDiskSpace - monitors disk space usage.\nmdstat - software RAID.\nhddtemp - disk temperatures.\nsmartd - disk S.M.A.R.T. values.\ndevice mapper - naming disks.\nVeritas Volume Manager - naming disks.\nmegacli - adapter, physical drives and battery stats.\nadaptec_raid -  logical and physical devices health metrics.\nioping - to measure disk read/write latency.\n\nFilesystems\n\nBTRFS - detailed disk space allocation and usage.\nCeph - OSD usage, Pool usage, number of objects, etc.\nNFS file servers and clients - NFS v2, v3, v4: I/O, cache, read ahead, RPC calls\nSamba - performance metrics of Samba SMB2 file sharing.\nZFS - detailed performance and resource usage.\n\nNetworking\n\nNetwork Stack - everything about the networking stack (both IPv4 and IPv6 for all protocols: TCP, UDP, SCTP, UDPLite, ICMP, Multicast, Broadcast, etc), and all network interfaces (per interface: bandwidth, packets, errors, drops).\nNetfilter - everything about the netfilter connection tracker.\nSynProxy - collects performance data about the linux SYNPROXY (DDoS).\nNFacct - collects accounting data from iptables.\nNetwork QoS - the only tool that visualizes network tc classes in real-time.\nFPing - to measure latency and packet loss between any number of hosts.\nISC dhcpd - pools utilization, leases, etc.\nAP - collects Linux access point performance data (hostapd).\nSNMP - SNMP devices can be monitored too (although you will need to configure these).\nport_check - checks TCP ports for availability and response time.\n\nVirtual Private Networks\n\nOpenVPN - collects status per tunnel.\nLibreSwan - collects metrics per IPSEC tunnel.\nTor - collects Tor traffic statistics.\n\nProcesses\n\nSystem Processes - running, blocked, forks, active.\nApplications - by grouping the process tree and reporting CPU, memory, disk reads, disk writes, swap, threads, pipes, sockets - per process group.\nsystemd - monitors systemd services using CGROUPS.\n\nUsers\n\nUsers and User Groups resource usage - by summarizing the process tree per user and group, reporting: CPU, memory, disk reads, disk writes, swap, threads, pipes, sockets.\nlogind - collects sessions, users and seats connected.\n\nContainers and VMs\n\nContainers - collects resource usage for all kinds of containers, using CGROUPS (systemd-nspawn, lxc, lxd, docker, kubernetes, etc).\nlibvirt VMs - collects resource usage for all kinds of VMs, using CGROUPS.\ndockerd - collects docker health metrics.\n\nWeb Servers\n\nApache and lighttpd - mod-status (v2.2, v2.4) and cache log statistics, for multiple servers.\nIPFS - bandwidth, peers.\nLiteSpeed - reads the litespeed rtreport files to collect metrics.\nNginx - stub-status, for multiple servers.\nNginx+ - connects to multiple nginx_plus servers (local or remote) to collect real-time performance metrics.\nPHP-FPM - multiple instances, each reporting connections, requests, performance, etc.\nTomcat - accesses, threads, free memory, volume, etc.\nweb server access.log files - extracting in real-time, web server and proxy performance metrics and applying several health checks, etc.\nHTTP check - checks one or more web servers for HTTP status code and returned content.\n\nProxies, Balancers, Accelerators\n\nHAproxy - bandwidth, sessions, backends, etc.\nSquid - multiple servers, each showing: clients bandwidth and requests, servers bandwidth and requests.\nTraefik - connects to multiple traefik instances (local or remote) to collect API metrics (response status code, response time, average response time and server uptime).\nVarnish - threads, sessions, hits, objects, backends, etc.\nIPVS - collects metrics from the Linux IPVS load balancer.\n\nDatabase Servers\n\nCouchDB - reads/writes, request methods, status codes, tasks, replication, per-db, etc.\nMemCached - multiple servers, each showing: bandwidth, connections, items, etc.\nMongoDB - operations, clients, transactions, cursors, connections, asserts, locks, etc.\nMySQL and mariadb - multiple servers, each showing: bandwidth, queries/s, handlers, locks, issues, tmp operations, connections, binlog metrics, threads, innodb metrics, and more.\nPostgreSQL - multiple servers, each showing: per database statistics (connections, tuples read - written - returned, transactions, locks), backend processes, indexes, tables, write ahead, background writer and more.\nProxy SQL - collects Proxy SQL backend and frontend performance metrics.\nRedis - multiple servers, each showing: operations, hit rate, memory, keys, clients, slaves.\nRethinkDB - connects to multiple rethinkdb servers (local or remote) to collect real-time metrics.\n\nMessage Brokers\n\nbeanstalkd - global and per tube monitoring.\nRabbitMQ - performance and health metrics.\n\nSearch and Indexing\n\nElasticSearch - search and index performance, latency, timings, cluster statistics, threads statistics, etc.\n\nDNS Servers\n\nbind_rndc - parses named.stats dump file to collect real-time performance metrics. All versions of bind after 9.6 are supported.\ndnsdist - performance and health metrics.\nISC Bind (named) - multiple servers, each showing: clients, requests, queries, updates, failures and several per view metrics. All versions of bind after 9.9.10 are supported.\nNSD - queries, zones, protocols, query types, transfers, etc.\nPowerDNS - queries, answers, cache, latency, etc.\nunbound - performance and resource usage metrics.\ndns_query_time - DNS query time statistics.\n\nTime Servers\n\nchrony - uses the chronyc command to collect chrony statistics (Frequency, Last offset, RMS offset, Residual freq, Root delay, Root dispersion, Skew, System time).\nntpd - connects to multiple ntpd servers (local or remote) to provide statistics of system variables and optional also peer variables.\n\nMail Servers\n\nDovecot - POP3/IMAP servers.\nExim - message queue (emails queued).\nPostfix - message queue (entries, size).\n\nHardware Sensors\n\nIPMI - enterprise hardware sensors and events.\nlm-sensors - temperature, voltage, fans, power, humidity, etc.\nNvidia - collects information for Nvidia GPUs.\nRPi - Raspberry Pi temperature sensors.\nw1sensor - collects data from connected 1-Wire sensors.\n\nUPSes\n\napcupsd - load, charge, battery voltage, temperature, utility metrics, output metrics.\nNUT - load, charge, battery voltage, temperature, utility metrics, output metrics.\nLinux Power Supply - collects metrics reported by power supply drivers on Linux.\n\nSocial Sharing Servers\n\nRetroShare - connects to multiple retroshare servers (local or remote) to collect real-time performance metrics.\n\nSecurity\n\nFail2Ban - monitors the fail2ban log file to check all bans for all active jails.\n\nAuthentication, Authorization, Accounting (AAA, RADIUS, LDAP) Servers\n\nFreeRadius - uses the radclient command to provide freeradius statistics (authentication, accounting, proxy-authentication, proxy-accounting).\n\nTelephony Servers\n\nopensips - connects to an opensips server (localhost only) to collect real-time performance metrics.\n\nHousehold Appliances\n\nSMA webbox - connects to multiple remote SMA webboxes to collect real-time performance metrics of the photovoltaic (solar) power generation.\nFronius - connects to multiple remote Fronius Symo servers to collect real-time performance metrics of the photovoltaic (solar) power generation.\nStiebelEltron - collects the temperatures and other metrics from your Stiebel Eltron heating system using their Internet Service Gateway (ISG web).\n\nGame Servers\n\nSpigotMC - monitors Spigot Minecraft server ticks per second and number of online players using the Minecraft remote console.\n\nDistributed Computing\n\nBOINC - monitors task states for local and remote BOINC client software using the remote GUI RPC interface. Also provides alarms for a handful of error conditions.\n\nMedia Streaming Servers\n\nIceCast - collects the number of listeners for active sources.\n\nMonitoring Systems\n\nMonit - collects metrics about monit targets (filesystems, applications, networks).\n\nProvisioning Systems\n\nPuppet - connects to multiple Puppet Server and Puppet DB instances (local or remote) to collect real-time status metrics.\n\nYou can easily extend Netdata, by writing plugins that collect data from any source, using any computer language.\n\nDocumentation\nThe Netdata documentation is at https://docs.netdata.cloud. But you can also find it inside the repo, so by just navigating the repo on github you can find all the documentation.\nHere is a quick list:\n\n\n\nDirectory\nDescription\n\n\n\n\ninstaller\nInstructions to install Netdata on your systems.\n\n\ndocker\nInstructions to install Netdata using docker.\n\n\ndaemon\nInformation about the Netdata daemon and its configuration.\n\n\ncollectors\nInformation about data collection plugins.\n\n\nhealth\nHow Netdata's health monitoring works, how to create your own alarms and how to configure alarm notification methods.\n\n\nstreaming\nHow to build hierarchies of Netdata servers, by streaming metrics between them.\n\n\nbackends\nLong term archiving of metrics to industry standard time-series databases, like prometheus, graphite, opentsdb.\n\n\nweb/api\nLearn how to query the Netdata API and the queries it supports.\n\n\nweb/api/badges\nLearn how to generate badges (SVG images) from live data.\n\n\nweb/gui/custom\nLearn how to create custom Netdata dashboards.\n\n\nweb/gui/confluence\nLearn how to create Netdata dashboards on Atlassian's Confluence.\n\n\n\nYou can also check all the other directories. Most of them have plenty of documentation.\nCommunity\nWe welcome contributions. So, feel free to join the team.\nTo report bugs, or get help, use GitHub Issues.\nYou can also find Netdata on:\n\nFacebook\nTwitter\nOpenHub\nRepology\nStackShare\n\nLicense\nNetdata is GPLv3+.\nNetdata re-distributes other open-source tools and libraries. Please check the third party licenses.\nIs it any good?\nYes.\nWhen people first hear about a new product, they frequently ask if it is any good. A Hacker News user remarked:\n\nNote to self: Starting immediately, all raganwald projects will have a \u201cIs it any good?\u201d section in the readme, and the answer shall be \u201cyes.\".\n\nSo, we follow the tradition...\nIs it awesome?\nThese people seem to like it.\n\n"}, {"repo": "zeit/next.js", "language": "JavaScript", "readme": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Visit https://nextjs.org/learn to get started with Next.js.\n  \n\n\nThe below readme is the documentation for the canary (prerelease) branch. To view the documentation for the latest stable Next.js version visit nextjs.org/docs.\n\n\nHow to use\n\nSetup\n\nQuick Start\nManual Setup\n\n\nAutomatic code splitting\nCSS\n\nBuilt-in CSS support\nCSS-in-JS\nImporting CSS / Sass / Less / Stylus files\n\n\nStatic file serving (e.g.: images)\nDynamic Routing\nPopulating <head>\nFetching data and component lifecycle\nRouting\n\nWith <Link>\n\nWith URL object\nReplace instead of push url\nUsing a component that supports onClick\nForcing the Link to expose href to its child\nDisabling the scroll changes to top on page\n\n\nImperatively\nIntercepting popstate\n\nWith URL object\nRouter Events\nShallow Routing\n\n\nuseRouter\nUsing a Higher Order Component\n\n\nPrefetching Pages\n\nWith <Link>\nImperatively\n\n\nAPI Routes\n\nDynamic routes support\nAPI Middlewares\nHelper Functions\n\n\nCustom server and routing\n\nDisabling file-system routing\nDynamic assetPrefix\nChanging x-powered-by\n\n\nDynamic Import\n\nBasic Usage (Also does SSR)\nWith named exports\nWith Custom Loading Component\nWith No SSR\n\n\nCustom <App>\nCustom <Document>\n\nCustomizing renderPage\n\n\nCustom error handling\nReusing the built-in error page\nCustom configuration\n\nSetting a custom build directory\nDisabling etag generation\nConfiguring the onDemandEntries\nConfiguring extensions looked for when resolving pages in pages\nConfiguring the build ID\nConfiguring next process script\n\n\nCustomizing webpack config\nCustomizing babel config\nExposing configuration to the server / client side\n\nBuild-time configuration\nRuntime configuration\n\n\nStarting the server on alternative hostname\nCDN support with Asset Prefix\n\n\nAutomatic Static Optimization\nAutomatic Static Optimization Indicator\nProduction deployment\n\nCompression\nServerless deployment\n\nOne Level Lower\nSummary\n\n\n\n\nBrowser support\nTypeScript\n\nExported types\n\n\nAMP Support\n\nEnabling AMP Support\nAMP First Page\nHybrid AMP Page\nAMP Page Modes\nAMP Behavior with next export\nAdding AMP Components\nAMP Validation\nTypeScript Support\n\n\nStatic HTML export\n\nUsage\nLimitation\n\n\nMulti Zones\n\nHow to define a zone\nHow to merge them\n\n\nFAQ\nContributing\nAuthors\n\nHow to use\nSetup\nQuick Start\nnpx create-next-app\n(npx comes with npm 5.2+ and higher, see instructions for older npm versions)\nManual Setup\nInstall it in your project:\nnpm install --save next react react-dom\nand add a script to your package.json like this:\n{\n  \"scripts\": {\n    \"dev\": \"next\",\n    \"build\": \"next build\",\n    \"start\": \"next start\"\n  }\n}\nAfter that, the file-system is the main API. Every .js file becomes a route that gets automatically processed and rendered.\nPopulate ./pages/index.js inside your project:\nfunction Home() {\n  return <div>Welcome to Next.js!</div>\n}\n\nexport default Home\nand then just run npm run dev and go to http://localhost:3000. To use another port, you can run npm run dev -- -p <your port here>.\nSo far, we get:\n\nAutomatic transpilation and bundling (with webpack and babel)\nHot code reloading\nServer rendering and indexing of ./pages/\nStatic file serving. ./public/ is mapped to / (given you create a ./public/ directory inside your project)\n\nAutomatic code splitting\nEvery import you declare gets bundled and served with each page. That means pages never load unnecessary code!\nimport cowsay from 'cowsay-browser'\n\nfunction CowsayHi() {\n  return <pre>{cowsay.say({ text: 'hi there!' })}</pre>\n}\n\nexport default CowsayHi\nCSS\nBuilt-in CSS support\n\nExamples\n\nBasic css\n\n\nWe bundle styled-jsx to provide support for isolated scoped CSS. The aim is to support \"shadow CSS\" similar to Web Components, which unfortunately do not support server-rendering and are JS-only.\nfunction HelloWorld() {\n  return (\n    <div>\n      Hello world\n      <p>scoped!</p>\n      <style jsx>{`\n        p {\n          color: blue;\n        }\n        div {\n          background: red;\n        }\n        @media (max-width: 600px) {\n          div {\n            background: blue;\n          }\n        }\n      `}</style>\n      <style global jsx>{`\n        body {\n          background: black;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nexport default HelloWorld\nPlease see the styled-jsx documentation for more examples.\nCSS-in-JS\n\n\nExamples\n\n\nStyled components\nStyletron\nGlamor\nCxs\nAphrodite\nFela\n\n\nIt's possible to use any existing CSS-in-JS solution. The simplest one is inline styles:\nfunction HiThere() {\n  return <p style={{ color: 'red' }}>hi there</p>\n}\n\nexport default HiThere\nTo use more sophisticated CSS-in-JS solutions, you typically have to implement style flushing for server-side rendering. We enable this by allowing you to define your own custom <Document> component that wraps each page.\nImporting CSS / Sass / Less / Stylus files\nTo support importing .css, .scss, .less or .styl files you can use these modules, which configure sensible defaults for server rendered applications.\n\n@zeit/next-css\n@zeit/next-sass\n@zeit/next-less\n@zeit/next-stylus\n\nStatic file serving (e.g.: images)\nCreate a folder called public in your project root directory. From your code you can then reference those files starting from the baseURL /\nfunction MyImage() {\n  return <img src=\"/my-image.png\" alt=\"my image\" />\n}\n\nexport default MyImage\nNote: Don't name the public directory anything else. The name can't be changed and is the only directory that Next.js uses for serving static assets.\nDynamic Routing\n\nExamples\n\nDynamic routing\n\n\nDefining routes by using predefined paths is not always enough for complex applications, in Next.js you can add brackets to a page ([param]) to create a dynamic route (a.k.a. url slugs, pretty urls, et al).\nConsider the following page pages/post/[pid].js:\nimport { useRouter } from 'next/router'\n\nconst Post = () => {\n  const router = useRouter()\n  const { pid } = router.query\n\n  return <p>Post: {pid}</p>\n}\n\nexport default Post\nAny route like /post/1, /post/abc, etc will be matched by pages/post/[pid].js.\nThe matched path parameter will be sent as a query parameter to the page.\nFor example, the route /post/abc will have the following query object: { pid: 'abc' }.\nSimilarly, the route /post/abc?foo=bar will have the query object: { foo: 'bar', pid: 'abc' }.\n\nNote: Multiple dynamic route segments work the same way.\nFor example, pages/post/[pid]/[comment].js would match /post/1/a-comment.\nIts query object would be: { pid: '1', comment: 'a-comment' }.\n\nA <Link> for /post/abc looks like so:\n<Link href=\"/post/[pid]\" as=\"/post/abc\">\n  <a>First Post</a>\n</Link>\n\nhref: the path inside pages directory.\nas: the path that will be rendered in the browser URL bar.\n\nAs href is a filesystem path, it shouldn't change at runtime, instead, you will probably need to change as\ndynamically according to your needs. Here's an example to create a list of links:\nconst pids = ['id1', 'id2', 'id3']\n{\n  pids.map(pid => (\n    <Link href=\"/post/[pid]\" as={`/post/${pid}`}>\n      <a>Post {pid}</a>\n    </Link>\n  ))\n}\n\nYou can read more about <Link> here.\n\nHowever, if a query and route param name are the same, route parameters will override the matching query params.\nFor example, /post/abc?pid=bcd will have the query object: { pid: 'abc' }.\n\nNote: Predefined routes take precedence over dynamic routes.\nFor example, if you have pages/post/[pid].js and pages/post/create.js, the route /post/create will be matched by pages/post/create.js instead of the dynamic route ([pid]).\n\n\nNote: Pages that are statically optimized by automatic static optimization will be hydrated without their route parameters provided (query will be empty, i.e. {}).\nAfter hydration, Next.js will trigger an update to your application to provide the route parameters in the query object.\nIf your application cannot tolerate this behavior, you can opt-out of static optimization by capturing the query parameter in getInitialProps.\n\n\nNote: If deploying to ZEIT Now dynamic routes will work out-of-the-box.\nYou do not need to configure custom routes in a now.json file.\nIf you are new to ZEIT Now, you can learn how to deploy a Next.js app to it in the Deploying a Next.js App Learn section.\n\nPopulating <head>\n\nExamples\n\nHead elements\nLayout component\n\n\nWe expose a built-in component for appending elements to the <head> of the page.\nimport Head from 'next/head'\n\nfunction IndexPage() {\n  return (\n    <div>\n      <Head>\n        <title>My page title</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n      </Head>\n      <p>Hello world!</p>\n    </div>\n  )\n}\n\nexport default IndexPage\nTo avoid duplicate tags in your <head> you can use the key property, which will make sure the tag is only rendered once:\nimport Head from 'next/head'\n\nfunction IndexPage() {\n  return (\n    <div>\n      <Head>\n        <title>My page title</title>\n        <meta\n          name=\"viewport\"\n          content=\"initial-scale=1.0, width=device-width\"\n          key=\"viewport\"\n        />\n      </Head>\n      <Head>\n        <meta\n          name=\"viewport\"\n          content=\"initial-scale=1.2, width=device-width\"\n          key=\"viewport\"\n        />\n      </Head>\n      <p>Hello world!</p>\n    </div>\n  )\n}\n\nexport default IndexPage\nIn this case only the second <meta name=\"viewport\" /> is rendered.\nNote: The contents of <head> get cleared upon unmounting the component, so make sure each page completely defines what it needs in <head>, without making assumptions about what other pages added.\nNote: <title> and <meta> elements need to be contained as direct children of the <Head> element, or wrapped into maximum one level of <React.Fragment>, otherwise the metatags won't be correctly picked up on clientside navigation.\nFetching data and component lifecycle\n\nExamples\n\nData fetch\n\n\nWhen you need state, lifecycle hooks or initial data population you can export a function component that uses Hooks or a class component.\nUsing a function component:\nimport fetch from 'isomorphic-unfetch'\n\nfunction Page({ stars }) {\n  return <div>Next stars: {stars}</div>\n}\n\nPage.getInitialProps = async ({ req }) => {\n  const res = await fetch('https://api.github.com/repos/zeit/next.js')\n  const json = await res.json()\n  return { stars: json.stargazers_count }\n}\n\nexport default Page\nUsing a class component:\nimport React from 'react'\n\nclass HelloUA extends React.Component {\n  static async getInitialProps({ req }) {\n    const userAgent = req ? req.headers['user-agent'] : navigator.userAgent\n    return { userAgent }\n  }\n\n  render() {\n    return <div>Hello World {this.props.userAgent}</div>\n  }\n}\n\nexport default HelloUA\nNotice that to load data when the page loads, we use getInitialProps which is an async static method. It can asynchronously fetch anything that resolves to a JavaScript plain Object, which populates props.\nData returned from getInitialProps is serialized when server rendering, similar to a JSON.stringify. Make sure the returned object from getInitialProps is a plain Object and not using Date, Map or Set.\nFor the initial page load, getInitialProps will execute on the server only. getInitialProps will only be executed on the client when navigating to a different route via the Link component or using the routing APIs.\n\n\n\ngetInitialProps can not be used in children components. Only in pages.\nIf you are using some server only modules inside getInitialProps, make sure to import them properly, otherwise, it'll slow down your app.\n\n\n\ngetInitialProps receives a context object with the following properties:\n\npathname - path section of URL\nquery - query string section of URL parsed as an object\nasPath - String of the actual path (including the query) shows in the browser\nreq - HTTP request object (server only)\nres - HTTP response object (server only)\nerr - Error object if any error is encountered during the rendering\n\nRouting\nNext.js does not ship a routes manifest with every possible route in the application, so the current page is not aware of any other pages on the client side. All subsequent routes get lazy-loaded, for scalability sake.\nWith <Link>\n\nExamples\n\nHello World\n\n\nClient-side transitions between routes can be enabled via a <Link> component.\n\nThis component is not required for navigations to static pages that require a hard refresh, like when using AMP.\n\nBasic Example\nConsider these two pages:\n// pages/index.js\nimport Link from 'next/link'\n\nfunction Home() {\n  return (\n    <>\n      <ul>\n        <li>Home</li>\n        <li>\n          <Link href=\"/about\">\n            <a>About Us</a>\n          </Link>\n        </li>\n      </ul>\n\n      <h1>This is our homepage.</h1>\n    </>\n  )\n}\n\nexport default Home\n// pages/about.js\nimport Link from 'next/link'\n\nfunction About() {\n  return (\n    <>\n      <ul>\n        <li>\n          <Link href=\"/\">\n            <a>Home</a>\n          </Link>\n        </li>\n        <li>About Us</li>\n      </ul>\n\n      <h1>About</h1>\n      <p>We are a cool company.</p>\n    </>\n  )\n}\n\nexport default About\nNote: if passing a functional component as a child of <Link> you will need to wrap it in React.forwardRef\nExample with React.forwardRef\nimport React from 'react'\nimport Link from 'next/link'\n\n// `onClick`, `href`, and `ref` need to be passed to the DOM element\n// for proper handling\nconst MyButton = React.forwardRef(({ onClick, href }, ref) => (\n  <a href={href} onClick={onClick} ref={ref}>\n    Click Me\n  </a>\n))\n\nexport default () => (\n  <>\n    <Link href=\"/another\">\n      <MyButton />\n    </Link>\n  </>\n)\nCustom routes (using props from URL)\nIf you find that your use case is not covered by Dynamic Routing then you can create a custom server and manually add dynamic routes.\nExample:\n\n\nConsider you have the URL /post/:slug.\n\n\nYou created pages/post.js:\nimport { useRouter } from 'next/router'\n\nconst Post = () => {\n  const router = useRouter()\n  const { slug } = router.query\n\n  return <p>My Blog Post: {slug}</p>\n}\n\nexport default Post\n\n\nYou add the route to express (or any other server) on server.js file (this is only for SSR). This will route the url /post/:slug to pages/post.js and provide slug as part of the query object to the page.\nserver.get('/post/:slug', (req, res) => {\n  return app.render(req, res, '/post', { slug: req.params.slug })\n})\n\n\nFor client side routing, use next/link:\n<Link href=\"/post?slug=something\" as=\"/post/something\">\n\nhref: the path inside pages directory\nas: the path used by your server routes\n\n\n\nClient-side routing behaves exactly like the browser:\n\nThe component is fetched.\nIf it defines getInitialProps, data is fetched. If an error occurs, _error.js is rendered.\nAfter 1 and 2 complete, pushState is performed and the new component is rendered.\n\nTo inject the pathname, query or asPath in your component, you can use the useRouter hook, or withRouter for class components.\nWith URL object\n\nExamples\n\nWith URL Object Routing\n\n\nThe component <Link> can also receive a URL object and it will automatically format it to create the URL string.\n// pages/index.js\nimport Link from 'next/link'\n\nfunction Home() {\n  return (\n    <div>\n      Click{' '}\n      <Link href={{ pathname: '/about', query: { name: 'Zeit' } }}>\n        <a>here</a>\n      </Link>{' '}\n      to read more\n    </div>\n  )\n}\n\nexport default Home\nThat will generate the URL string /about?name=Zeit, you can use every property as defined in the Node.js URL module documentation.\nReplace instead of push url\nThe default behaviour for the <Link> component is to push a new url into the stack. You can use the replace prop to prevent adding a new entry.\n// pages/index.js\nimport Link from 'next/link'\n\nfunction Home() {\n  return (\n    <div>\n      Click{' '}\n      <Link href=\"/about\" replace>\n        <a>here</a>\n      </Link>{' '}\n      to read more\n    </div>\n  )\n}\n\nexport default Home\nUsing a component that supports onClick\n<Link> supports any component that supports the onClick event. In case you don't provide an <a> tag, it will only add the onClick event handler and won't pass the href property.\n// pages/index.js\nimport Link from 'next/link'\n\nfunction Home() {\n  return (\n    <div>\n      Click{' '}\n      <Link href=\"/about\">\n        <img src=\"/static/image.png\" alt=\"image\" />\n      </Link>\n    </div>\n  )\n}\n\nexport default Home\nForcing the Link to expose href to its child\nIf child is an <a> tag and doesn't have a href attribute we specify it so that the repetition is not needed by the user. However, sometimes, you\u2019ll want to pass an <a> tag inside of a wrapper and the Link won\u2019t recognize it as a hyperlink, and, consequently, won\u2019t transfer its href to the child. In cases like that, you should define a boolean passHref property to the Link, forcing it to expose its href property to the child.\nPlease note: using a tag other than a and failing to pass passHref may result in links that appear to navigate correctly, but, when being crawled by search engines, will not be recognized as links (owing to the lack of href attribute). This may result in negative effects on your site\u2019s SEO.\nimport Link from 'next/link'\nimport Unexpected_A from 'third-library'\n\nfunction NavLink({ href, name }) {\n  return (\n    <Link href={href} passHref>\n      <Unexpected_A>{name}</Unexpected_A>\n    </Link>\n  )\n}\n\nexport default NavLink\nDisabling the scroll changes to top on page\nThe default behaviour of <Link> is to scroll to the top of the page. When there is a hash defined it will scroll to the specific id, just like a normal <a> tag. To prevent scrolling to the top / hash scroll={false} can be added to <Link>:\n<Link scroll={false} href=\"/?counter=10\"><a>Disables scrolling</a></Link>\n<Link href=\"/?counter=10\"><a>Changes with scrolling to top</a></Link>\nImperatively\n\nExamples\n\nBasic routing\nWith a page loading indicator\n\n\nYou can also do client-side page transitions using next/router:\nimport Router from 'next/router'\n\nfunction ReadMore() {\n  return (\n    <div>\n      Click <span onClick={() => Router.push('/about')}>here</span> to read more\n    </div>\n  )\n}\n\nexport default ReadMore\nIntercepting popstate\nIn some cases (for example, if using a custom router), you may wish\nto listen to popstate and react before the router acts on it.\nFor example, you could use this to manipulate the request, or force an SSR refresh.\nimport Router from 'next/router'\n\nRouter.beforePopState(({ url, as, options }) => {\n  // I only want to allow these two routes!\n  if (as !== '/' && as !== '/other') {\n    // Have SSR render bad routes as a 404.\n    window.location.href = as\n    return false\n  }\n\n  return true\n})\nIf the function you pass into beforePopState returns false, Router will not handle popstate;\nyou'll be responsible for handling it, in that case.\nSee Disabling File-System Routing.\nAbove Router object comes with the following API:\n\nroute - String of the current route\npathname - String of the current path excluding the query string\nquery - Object with the parsed query string. Defaults to {}.\nasPath - String of the actual path (including the query) shows in the browser\npush(url, as=url) - performs a pushState call with the given url\nreplace(url, as=url) - performs a replaceState call with the given url\nbeforePopState(cb=function) - intercept popstate before router processes the event\n\nThe second as parameter for push and replace is an optional decoration of the URL. Useful if you configured custom routes on the server.\nWith URL object\nYou can use a URL object the same way you use it in a <Link> component to push and replace a URL.\nimport Router from 'next/router'\n\nconst handler = () => {\n  Router.push({\n    pathname: '/about',\n    query: { name: 'Zeit' },\n  })\n}\n\nfunction ReadMore() {\n  return (\n    <div>\n      Click <span onClick={handler}>here</span> to read more\n    </div>\n  )\n}\n\nexport default ReadMore\nThis uses the same exact parameters as in the <Link> component. The first parameter maps to href while the second parameter maps to as in the <Link> component as documented here.\nRouter Events\nYou can also listen to different events happening inside the Router.\nHere's a list of supported events:\n\nrouteChangeStart(url) - Fires when a route starts to change\nrouteChangeComplete(url) - Fires when a route changed completely\nrouteChangeError(err, url) - Fires when there's an error when changing routes, or a route load is cancelled\nbeforeHistoryChange(url) - Fires just before changing the browser's history\nhashChangeStart(url) - Fires when the hash will change but not the page\nhashChangeComplete(url) - Fires when the hash has changed but not the page\n\n\nHere url is the URL shown in the browser. If you call Router.push(url, as) (or similar), then the value of url will be as.\n\nHere's how to properly listen to the router event routeChangeStart:\nconst handleRouteChange = url => {\n  console.log('App is changing to: ', url)\n}\n\nRouter.events.on('routeChangeStart', handleRouteChange)\nIf you no longer want to listen to that event, you can unsubscribe with the off method:\nRouter.events.off('routeChangeStart', handleRouteChange)\nIf a route load is cancelled (for example by clicking two links rapidly in succession), routeChangeError will fire. The passed err will contain a cancelled property set to true.\nRouter.events.on('routeChangeError', (err, url) => {\n  if (err.cancelled) {\n    console.log(`Route to ${url} was cancelled!`)\n  }\n})\n\nNote: Using router events in getInitialProps is discouraged as it may result in unexpected behavior.\nRouter events should be registered when a component mounts (useEffect or componentDidMount/componentWillUnmount) or imperatively when an event happens.\nuseEffect(() => {\n  const handleRouteChange = url => {\n    console.log('App is changing to: ', url)\n  }\n\n  Router.events.on('routeChangeStart', handleRouteChange)\n  return () => {\n    Router.events.off('routeChangeStart', handleRouteChange)\n  }\n}, [])\n\nShallow Routing\n\nExamples\n\nShallow Routing\n\n\nShallow routing allows you to change the URL without running getInitialProps. You'll receive the updated pathname and the query via the router prop (injected by using useRouter or withRouter), without losing state.\nYou can do this by invoking either Router.push or Router.replace with the shallow: true option. Here's an example:\n// Current URL is \"/\"\nconst href = '/?counter=10'\nconst as = href\nRouter.push(href, as, { shallow: true })\nNow, the URL is updated to /?counter=10. You can see the updated URL with this.props.router.query inside the Component (make sure you are using withRouter around your Component to inject the router prop).\nYou can watch for URL changes via componentDidUpdate hook as shown below:\ncomponentDidUpdate(prevProps) {\n  const { pathname, query } = this.props.router\n  // verify props have changed to avoid an infinite loop\n  if (query.id !== prevProps.router.query.id) {\n    // fetch data based on the new query\n  }\n}\n\nNOTES:\nShallow routing works only for same page URL changes. For an example, let's assume we have another page called about, and you run this:\nRouter.push('/?counter=10', '/about?counter=10', { shallow: true })\nSince that's a new page, it'll unload the current page, load the new one and call getInitialProps even though we asked to do shallow routing.\n\nuseRouter\n\nExamples\n\nDynamic routing\n\n\nIf you want to access the router object inside any functional component in your app, you can use the useRouter hook, here's how to use it:\nimport { useRouter } from 'next/router'\n\nexport default function ActiveLink({ children, href }) {\n  const router = useRouter()\n  const style = {\n    marginRight: 10,\n    color: router.pathname === href ? 'red' : 'black',\n  }\n\n  const handleClick = e => {\n    e.preventDefault()\n    router.push(href)\n  }\n\n  return (\n    <a href={href} onClick={handleClick} style={style}>\n      {children}\n    </a>\n  )\n}\n\nNote: useRouter is a React hook, meaning it cannot be used with classes.\nYou can either use withRouter (a higher order component) or wrap your class in a functional component.\n\nThe above router object comes with an API similar to next/router.\nUsing a Higher Order Component\n\nExamples\n\nUsing the `withRouter` utility\n\n\nIf useRouter is not the best fit for you, withRouter can also add the same router object to any component, here's how to use it:\nimport { withRouter } from 'next/router'\n\nfunction Page({ router }) {\n  return <p>{router.pathname}</p>\n}\n\nexport default withRouter(Page)\nPrefetching Pages\n\u26a0\ufe0f This is a production only feature \u26a0\ufe0f\n\nExamples\n\nPrefetching\n\n\nNext.js has an API which allows you to prefetch pages.\nSince Next.js server-renders your pages, this allows all the future interaction paths of your app to be instant. Effectively Next.js gives you the great initial download performance of a website, with the ahead-of-time download capabilities of an app. Read more.\n\nWith prefetching Next.js only downloads JS code. When the page is getting rendered, you may need to wait for the data.\n\n\nAutomatic prefetching is disabled if your device is connected with 2G network or Save-Data header is on.\n\n\n<link rel=\"preload\"> is used for prefetching. Sometimes browsers will show a warning if the resource is not used within 3 seconds, these warnings can be ignored as per https://github.com/zeit/next.js/issues/6517#issuecomment-469063892.\n\nWith <Link>\n<Link> will automatically prefetch pages in the background as they appear in the view. If certain pages are rarely visited you can manually set prefetch to false, here's how:\n<Link href=\"/about\" prefetch={false}>\n  <a>About</a>\n</Link>\nImperatively\nMost prefetching needs are addressed by <Link />, but we also expose an imperative API for advanced usage:\nimport { useRouter } from 'next/router'\n\nexport default function MyLink() {\n  const router = useRouter()\n\n  return (\n    <>\n      <a onClick={() => setTimeout(() => router.push('/dynamic'), 100)}>\n        A route transition will happen after 100ms\n      </a>\n      {// and we can prefetch it!\n      router.prefetch('/dynamic')}\n    </>\n  )\n}\nrouter methods should be only used inside the client side of your app though. In order to prevent any error regarding this subject use the imperatively prefetch method in the useEffect() hook:\nimport { useRouter } from 'next/router'\n\nexport default function MyLink() {\n  const router = useRouter()\n\n  useEffect(() => {\n    router.prefetch('/dynamic')\n  })\n\n  return (\n    <a onClick={() => setTimeout(() => router.push('/dynamic'), 100)}>\n      A route transition will happen after 100ms\n    </a>\n  )\n}\nYou can also add it to the componentDidMount() lifecycle method when using React.Component:\nimport React from 'react'\nimport { withRouter } from 'next/router'\n\nclass MyLink extends React.Component {\n  componentDidMount() {\n    const { router } = this.props\n    router.prefetch('/dynamic')\n  }\n\n  render() {\n    const { router } = this.props\n\n    return (\n      <a onClick={() => setTimeout(() => router.push('/dynamic'), 100)}>\n        A route transition will happen after 100ms\n      </a>\n    )\n  }\n}\n\nexport default withRouter(MyLink)\nAPI Routes\n\nExamples\n\nBasic API routes\nAPI routes with micro\nAPI routes with middleware\nAPI routes with GraphQL server\nAPI routes with REST\n\n\nAPI routes provide a straightforward solution to build your API with Next.js.\nStart by creating the api/ folder inside the ./pages/ folder.\nEvery file inside ./pages/api is mapped to /api/*.\nFor example, ./pages/api/posts.js is mapped to the route /api/posts.\nHere's an example API route file:\nexport default (req, res) => {\n  res.setHeader('Content-Type', 'application/json')\n  res.statusCode = 200\n  res.end(JSON.stringify({ name: 'Nextjs' }))\n}\n\n\nreq refers to NextApiRequest which extends http.IncomingMessage\n\n\nres refers to NextApiResponse which extends http.ServerResponse\n\n\nFor API routes there are built-in types NextApiRequest and NextApiResponse, which extend the Node.js request and response objects.\nimport { NextApiRequest, NextApiResponse } from 'next'\n\nexport default (req: NextApiRequest, res: NextApiResponse) => {\n  res.status(200).json({ title: 'Next.js' })\n}\nTo handle different HTTP methods for API calls you can access req.method in your resolver function:\nexport default (req, res) => {\n  if (req.method === 'POST') {\n    // Process your POST request\n  } else {\n    // Handle the rest of your HTTP methods\n  }\n}\n\nNote: API Routes do not specify CORS headers, so they'll be same-origin only by default.\nYou can customize this behavior by wrapping your export with CORS middleware.\nWe provide an example of this below.\n\nAPI Routes do not increase your client-side bundle size. They are server-side only bundles.\nDynamic routes support\nAPI pages support dynamic routing, so you can use all benefits mentioned already above.\nConsider the following page ./pages/api/post/[pid].js, here is how you get parameters inside the resolver method:\nexport default (req, res) => {\n  const {\n    query: { pid },\n  } = req\n\n  res.end(`Post: ${pid}`)\n}\nAPI Middlewares\nAPI routes provides built in middlewares which parse the incoming req.\nThose middlewares are:\n\nreq.cookies - an object containing the cookies sent by the request. Defaults to {}\nreq.query - an object containing the query string. Defaults to {}\nreq.body - an object containing the body parsed by content-type, or null if no body is sent\n\nBody parsing is enabled by default with a size limit of 1mb for the parsed body.\nYou can opt-out of automatic body parsing if you need to consume it as a Stream:\n// ./pages/api/my-endpoint.js\nexport default (req, res) => {\n  // ...\n}\n\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n}\nYou can adjust size of parsed body by adding sizeLimit key to bodyParser, supported values are by bytes library.\n// ./pages/api/my-endpoint.js\nexport default (req, res) => {\n  // ...\n}\n\nexport const config = {\n  api: {\n    bodyParser: {\n      sizeLimit: '1mb',\n    },\n  },\n}\nAs an added bonus, you can also use any Micro compatible middleware!\nFor example, configuring CORS for your API endpoint can be done leveraging micro-cors.\nFirst, install micro-cors:\nnpm i micro-cors\n# or\nyarn add micro-cors\nThen, import micro-cors and configure it. Finally, wrap your exported function in the middleware:\nimport Cors from 'micro-cors'\n\nconst cors = Cors({\n  allowMethods: ['GET', 'HEAD'],\n})\n\nfunction Endpoint(req, res) {\n  res.json({ message: 'Hello Everyone!' })\n}\n\nexport default cors(Endpoint)\nHelper Functions\nWe're providing a set of Express.js-like methods to improve the developer experience and increase the speed of creating new API endpoints:\nexport default (req, res) => {\n  res.status(200).json({ name: 'Next.js' })\n}\n\nres.status(code) - a function to set the status code. code must be a valid HTTP status code\nres.json(json) - Sends a JSON response. json must be a valid JSON object\nres.send(body) - Sends the HTTP response. body can be a string, an object or a Buffer\n\nCustom server and routing\n\nExamples\n\nBasic custom server\nExpress integration\nHapi integration\nKoa integration\nSSR caching\n\n\nTypically you start your next server with next start. It's possible, however, to start a server 100% programmatically in order to customize routes, use route patterns, etc.\nWhen using a custom server with a server file, for example called server.js, make sure you update the scripts key in package.json to:\n{\n  \"scripts\": {\n    \"dev\": \"node server.js\",\n    \"build\": \"next build\",\n    \"start\": \"NODE_ENV=production node server.js\"\n  }\n}\nThis example makes /a resolve to ./pages/b, and /b resolve to ./pages/a:\n// This file doesn't go through babel or webpack transformation.\n// Make sure the syntax and sources this file requires are compatible with the current node version you are running\n// See https://github.com/zeit/next.js/issues/1245 for discussions on Universal Webpack or universal Babel\nconst { createServer } = require('http')\nconst { parse } = require('url')\nconst next = require('next')\n\nconst dev = process.env.NODE_ENV !== 'production'\nconst app = next({ dev })\nconst handle = app.getRequestHandler()\n\napp.prepare().then(() => {\n  createServer((req, res) => {\n    // Be sure to pass `true` as the second argument to `url.parse`.\n    // This tells it to parse the query portion of the URL.\n    const parsedUrl = parse(req.url, true)\n    const { pathname, query } = parsedUrl\n\n    if (pathname === '/a') {\n      app.render(req, res, '/b', query)\n    } else if (pathname === '/b') {\n      app.render(req, res, '/a', query)\n    } else {\n      handle(req, res, parsedUrl)\n    }\n  }).listen(3000, err => {\n    if (err) throw err\n    console.log('> Ready on http://localhost:3000')\n  })\n})\nThe next API is as follows:\n\nnext(opts: object)\n\nSupported options:\n\ndev (bool) whether to launch Next.js in dev mode - default false\ndir (string) where the Next project is located - default '.'\nquiet (bool) Hide error messages containing server information - default false\nconf (object) the same object you would use in next.config.js - default {}\n\nThen, change your start script to NODE_ENV=production node server.js.\nDisabling file-system routing\nBy default, Next will serve each file in /pages under a pathname matching the filename (eg, /pages/some-file.js is served at site.com/some-file.\nIf your project uses custom routing, this behavior may result in the same content being served from multiple paths, which can present problems with SEO and UX.\nTo disable this behavior & prevent routing based on files in /pages, simply set the following option in your next.config.js:\n// next.config.js\nmodule.exports = {\n  useFileSystemPublicRoutes: false,\n}\nNote that useFileSystemPublicRoutes simply disables filename routes from SSR; client-side routing may still access those paths. If using this option, you should guard against navigation to routes you do not want programmatically.\nYou may also wish to configure the client-side Router to disallow client-side redirects to filename routes; please refer to Intercepting popstate.\nDynamic assetPrefix\nSometimes we need to set the assetPrefix dynamically. This is useful when changing the assetPrefix based on incoming requests.\nFor that, we can use app.setAssetPrefix.\nHere's an example usage of it:\nconst next = require('next')\nconst http = require('http')\n\nconst dev = process.env.NODE_ENV !== 'production'\nconst app = next({ dev })\nconst handleNextRequests = app.getRequestHandler()\n\napp.prepare().then(() => {\n  const server = new http.Server((req, res) => {\n    // Add assetPrefix support based on the hostname\n    if (req.headers.host === 'my-app.com') {\n      app.setAssetPrefix('http://cdn.com/myapp')\n    } else {\n      app.setAssetPrefix('')\n    }\n\n    handleNextRequests(req, res)\n  })\n\n  server.listen(port, err => {\n    if (err) {\n      throw err\n    }\n\n    console.log(`> Ready on http://localhost:${port}`)\n  })\n})\nChanging x-powered-by\nBy default Next.js will add x-powered-by to the request headers. There's an optional way to opt-out of this:\n// next.config.js\nmodule.exports = {\n  poweredByHeader: false,\n}\nDynamic Import\n\nExamples\n\nWith Dynamic Import\n\n\nNext.js supports ES2020 dynamic import() for JavaScript.\nWith that, you could import JavaScript modules (inc. React Components) dynamically and work with them.\nYou can think dynamic imports as another way to split your code into manageable chunks.\nSince Next.js supports dynamic imports with SSR, you could do amazing things with it.\nHere are a few ways to use dynamic imports.\nBasic Usage (Also does SSR)\nimport dynamic from 'next/dynamic'\n\nconst DynamicComponent = dynamic(() => import('../components/hello'))\n\nfunction Home() {\n  return (\n    <div>\n      <Header />\n      <DynamicComponent />\n      <p>HOME PAGE is here!</p>\n    </div>\n  )\n}\n\nexport default Home\nWith named exports\n// components/hello.js\nexport function Hello() {\n  return <p>Hello!</p>\n}\nimport dynamic from 'next/dynamic'\n\nconst DynamicComponent = dynamic(() =>\n  import('../components/hello').then(mod => mod.Hello)\n)\n\nfunction Home() {\n  return (\n    <div>\n      <Header />\n      <DynamicComponent />\n      <p>HOME PAGE is here!</p>\n    </div>\n  )\n}\n\nexport default Home\nWith Custom Loading Component\nimport dynamic from 'next/dynamic'\n\nconst DynamicComponentWithCustomLoading = dynamic(\n  () => import('../components/hello2'),\n  { loading: () => <p>...</p> }\n)\n\nfunction Home() {\n  return (\n    <div>\n      <Header />\n      <DynamicComponentWithCustomLoading />\n      <p>HOME PAGE is here!</p>\n    </div>\n  )\n}\n\nexport default Home\nWith No SSR\nimport dynamic from 'next/dynamic'\n\nconst DynamicComponentWithNoSSR = dynamic(\n  () => import('../components/hello3'),\n  { ssr: false }\n)\n\nfunction Home() {\n  return (\n    <div>\n      <Header />\n      <DynamicComponentWithNoSSR />\n      <p>HOME PAGE is here!</p>\n    </div>\n  )\n}\n\nexport default Home\nCustom <App>\n\nExamples\n\nUsing `_app.js` for layout\nUsing `_app.js` to override `componentDidCatch`\n\n\nNext.js uses the App component to initialize pages. You can override it and control the page initialization. Which allows you to do amazing things like:\n\nPersisting layout between page changes\nKeeping state when navigating pages\nInject additional data into pages (for example by processing GraphQL queries)\n\nTo override, create the ./pages/_app.js file and override the App class as shown below:\nfunction MyApp({ Component, pageProps }) {\n  return <Component {...pageProps} />\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\nexport default MyApp\n\nNote: Adding a custom getInitialProps in App will affect Automatic Static Optimization\n\nCustom <Document>\n\nExamples\n\nStyled components custom document\n\n\nA custom <Document> is commonly used to augment your application's <html> and <body> tags.\nThis is necessary because Next.js pages skip the definition of the surrounding document's markup.\nThis allows you to support Server-Side Rendering for CSS-in-JS libraries like\nstyled-components or emotion.\nNote, styled-jsx is included in Next.js by default.\nA custom <Document> can also include getInitialProps for expressing asynchronous server-rendering data requirements.\n\nNote: <Document>'s getInitialProps function is not called during client-side transitions,\nnor when a page is automatically statically optimized.\n\n\nNote: Make sure to check if ctx.req / ctx.res are defined in getInitialProps.\nThese variables will be undefined when a page is being statically exported for next export or automatic static optimization.\n\nTo use a custom <Document>, you must create a file at ./pages/_document.js and extend the Document class:\n// _document is only rendered on the server side and not on the client side\n// Event handlers like onClick can't be added to this file\n\n// ./pages/_document.js\nimport Document, { Html, Head, Main, NextScript } from 'next/document'\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const initialProps = await Document.getInitialProps(ctx)\n    return { ...initialProps }\n  }\n\n  render() {\n    return (\n      <Html>\n        <Head />\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    )\n  }\n}\n\nexport default MyDocument\nAll of <Html>, <Head />, <Main /> and <NextScript /> are required for page to be properly rendered.\nNote: React-components outside of <Main /> will not be initialised by the browser. Do not add application logic here. If you need shared components in all your pages (like a menu or a toolbar), take a look at the <App> component instead.\nThe ctx object is equivalent to the one received in all getInitialProps hooks, with one addition:\n\nrenderPage (Function) a callback that executes the actual React rendering logic (synchronously). It's useful to decorate this function in order to support server-rendering wrappers like Aphrodite's renderStatic.\n\nCustomizing renderPage\n\ud83d\udea7 It should be noted that the only reason you should be customizing renderPage is for usage with css-in-js libraries\nthat need to wrap the application to properly work with server-rendering. \ud83d\udea7\n\nIt takes as argument an options object for further customization:\n\nimport Document from 'next/document'\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const originalRenderPage = ctx.renderPage\n\n    ctx.renderPage = () =>\n      originalRenderPage({\n        // useful for wrapping the whole react tree\n        enhanceApp: App => App,\n        // useful for wrapping in a per-page basis\n        enhanceComponent: Component => Component,\n      })\n\n    // Run the parent `getInitialProps` using `ctx` that now includes our custom `renderPage`\n    const initialProps = await Document.getInitialProps(ctx)\n\n    return initialProps\n  }\n}\n\nexport default MyDocument\nCustom error handling\n404 or 500 errors are handled both client and server side by a default component error.js. If you wish to override it, define a _error.js in the pages folder:\n\u26a0\ufe0f The pages/_error.js component is only used in production. In development you get an error with call stack to know where the error originated from. \u26a0\ufe0f\nimport React from 'react'\n\nfunction Error({ statusCode }) {\n  return (\n    <p>\n      {statusCode\n        ? `An error ${statusCode} occurred on server`\n        : 'An error occurred on client'}\n    </p>\n  )\n}\n\nError.getInitialProps = ({ res, err }) => {\n  const statusCode = res ? res.statusCode : err ? err.statusCode : 404\n  return { statusCode }\n}\n\nexport default Error\nReusing the built-in error page\nIf you want to render the built-in error page you can by using next/error:\nimport React from 'react'\nimport Error from 'next/error'\nimport fetch from 'isomorphic-unfetch'\n\nconst Page = ({ errorCode, stars }) => {\n  if (errorCode) {\n    return <Error statusCode={errorCode} />\n  }\n\n  return <div>Next stars: {stars}</div>\n}\n\nPage.getInitialProps = async () => {\n  const res = await fetch('https://api.github.com/repos/zeit/next.js')\n  const errorCode = res.statusCode > 200 ? res.statusCode : false\n  const json = await res.json()\n\n  return { errorCode, stars: json.stargazers_count }\n}\n\nexport default Page\n\nIf you have created a custom error page you have to import your own _error component from ./_error instead of next/error.\n\nThe Error component also takes title as a property if you want to pass in a text message along with a statusCode.\nCustom configuration\nFor custom advanced behavior of Next.js, you can create a next.config.js in the root of your project directory (next to pages/ and package.json).\nNote: next.config.js is a regular Node.js module, not a JSON file. It gets used by the Next server and build phases, and not included in the browser build.\n// next.config.js\nmodule.exports = {\n  /* config options here */\n}\nOr use a function:\nmodule.exports = (phase, { defaultConfig }) => {\n  return {\n    /* config options here */\n  }\n}\nphase is the current context in which the configuration is loaded. You can see all phases here: constants\nPhases can be imported from next/constants:\nconst { PHASE_DEVELOPMENT_SERVER } = require('next/constants')\nmodule.exports = (phase, { defaultConfig }) => {\n  if (phase === PHASE_DEVELOPMENT_SERVER) {\n    return {\n      /* development only config options here */\n    }\n  }\n\n  return {\n    /* config options for all phases except development here */\n  }\n}\nSetting a custom build directory\nYou can specify a name to use for a custom build directory. For example, the following config will create a build folder instead of a .next folder. If no configuration is specified then next will create a .next folder.\n// next.config.js\nmodule.exports = {\n  distDir: 'build',\n}\nDisabling etag generation\nYou can disable etag generation for HTML pages depending on your cache strategy. If no configuration is specified then Next will generate etags for every page.\n// next.config.js\nmodule.exports = {\n  generateEtags: false,\n}\nConfiguring the onDemandEntries\nNext exposes some options that give you some control over how the server will dispose or keep in memories pages built:\nmodule.exports = {\n  onDemandEntries: {\n    // period (in ms) where the server will keep pages in the buffer\n    maxInactiveAge: 25 * 1000,\n    // number of pages that should be kept simultaneously without being disposed\n    pagesBufferLength: 2,\n  },\n}\nThis is development-only feature. If you want to cache SSR pages in production, please see SSR-caching example.\nConfiguring extensions looked for when resolving pages in pages\nAimed at modules like @next/mdx, that add support for pages ending with .mdx. pageExtensions allows you to configure the extensions looked for in the pages directory when resolving pages.\n// next.config.js\nmodule.exports = {\n  pageExtensions: ['mdx', 'jsx', 'js'],\n}\nConfiguring the build ID\nNext.js uses a constant generated at build time to identify which version of your application is being served. This can cause problems in multi-server deployments when next build is ran on every server. In order to keep a static build id between builds you can provide the generateBuildId function:\n// next.config.js\nmodule.exports = {\n  generateBuildId: async () => {\n    // For example get the latest git commit hash here\n    return 'my-build-id'\n  },\n}\nTo fall back to the default of generating a unique id return null from the function:\nmodule.exports = {\n  generateBuildId: async () => {\n    // When process.env.YOUR_BUILD_ID is undefined we fall back to the default\n    if (process.env.YOUR_BUILD_ID) {\n      return process.env.YOUR_BUILD_ID\n    }\n\n    return null\n  },\n}\nConfiguring next process script\nYou can pass any node arguments to next CLI command.\nNODE_OPTIONS=\"--throw-deprecation\" next\nNODE_OPTIONS=\"-r esm\" next\nNODE_OPTIONS=\"--inspect\" next\nCustomizing webpack config\n\nExamples\n\nCustom webpack bundle analyzer\n\n\nSome commonly asked for features are available as modules:\n\n@zeit/next-css\n@zeit/next-sass\n@zeit/next-less\n@zeit/next-preact\n@next/mdx\n\n\nWarning: The webpack function is executed twice, once for the server and once for the client. This allows you to distinguish between client and server configuration using the isServer property.\n\nMultiple configurations can be combined together with function composition. For example:\nconst withMDX = require('@next/mdx')\nconst withSass = require('@zeit/next-sass')\n\nmodule.exports = withMDX(\n  withSass({\n    webpack(config, options) {\n      // Further custom configuration here\n      return config\n    },\n  })\n)\nIn order to extend our usage of webpack, you can define a function that extends its config via next.config.js.\n// next.config.js is not transformed by Babel. So you can only use javascript features supported by your version of Node.js.\n\nmodule.exports = {\n  webpack: (config, { buildId, dev, isServer, defaultLoaders, webpack }) => {\n    // Note: we provide webpack above so you should not `require` it\n    // Perform customizations to webpack config\n    // Important: return the modified config\n\n    // Example using webpack option\n    config.plugins.push(new webpack.IgnorePlugin(/\\/__tests__\\//))\n    return config\n  },\n  webpackDevMiddleware: config => {\n    // Perform customizations to webpack dev middleware config\n    // Important: return the modified config\n    return config\n  },\n}\nThe second argument to webpack is an object containing properties useful when customizing its configuration:\n\nbuildId - String the build id used as a unique identifier between builds\ndev - Boolean shows if the compilation is done in development mode\nisServer - Boolean shows if the resulting configuration will be used for server side (true), or client side compilation (false)\ndefaultLoaders - Object Holds loader objects Next.js uses internally, so that you can use them in custom configuration\n\nbabel - Object the babel-loader configuration for Next.js\n\n\n\nExample usage of defaultLoaders.babel:\n// Example next.config.js for adding a loader that depends on babel-loader\n// This source was taken from the @next/mdx plugin source:\n// https://github.com/zeit/next.js/tree/canary/packages/next-mdx\nmodule.exports = {\n  webpack: (config, options) => {\n    config.module.rules.push({\n      test: /\\.mdx/,\n      use: [\n        options.defaultLoaders.babel,\n        {\n          loader: '@mdx-js/loader',\n          options: pluginOptions.options,\n        },\n      ],\n    })\n\n    return config\n  },\n}\nCustomizing babel config\n\nExamples\n\nCustom babel configuration\n\n\nIn order to extend our usage of babel, you can simply define a .babelrc file at the root of your app. This file is optional.\nIf found, we're going to consider it the source of truth, therefore it needs to define what next needs as well, which is the next/babel preset.\nThis is designed so that you are not surprised by modifications we could make to the babel configurations.\nHere's an example .babelrc file:\n{\n  \"presets\": [\"next/babel\"],\n  \"plugins\": []\n}\nThe next/babel preset includes everything needed to transpile React applications. This includes:\n\npreset-env\npreset-react\npreset-typescript\nplugin-proposal-class-properties\nplugin-proposal-object-rest-spread\nplugin-transform-runtime\nstyled-jsx\n\nThese presets / plugins should not be added to your custom .babelrc. Instead, you can configure them on the next/babel preset:\n{\n  \"presets\": [\n    [\n      \"next/babel\",\n      {\n        \"preset-env\": {},\n        \"transform-runtime\": {},\n        \"styled-jsx\": {},\n        \"class-properties\": {}\n      }\n    ]\n  ],\n  \"plugins\": []\n}\nThe modules option on \"preset-env\" should be kept to false otherwise webpack code splitting is disabled.\nExposing configuration to the server / client side\nThere is a common need in applications to provide configuration values.\nNext.js supports 2 ways of providing configuration:\n\nBuild-time configuration\nRuntime configuration\n\nBuild-time configuration\nThe way build-time configuration works is by inlining the provided values into the Javascript bundle.\nYou can add the env key in next.config.js:\n// next.config.js\nmodule.exports = {\n  env: {\n    customKey: 'value',\n  },\n}\nThis will allow you to use process.env.customKey in your code. For example:\n// pages/index.js\nfunction Index() {\n  return <h1>The value of customKey is: {process.env.customKey}</h1>\n}\n\nexport default Index\n\nWarning: Note that it is not possible to destructure process.env variables due to the webpack DefinePlugin replacing process.env.XXXX inline at build time.\n\n// Will not work\nconst { CUSTOM_KEY, CUSTOM_SECRET } = process.env\nAuthMethod({ key: CUSTOM_KEY, secret: CUSTOM_SECRET })\n\n// Will work as replaced inline\nAuthMethod({ key: process.env.CUSTOM_KEY, secret: process.env.CUSTOM_SECRET })\nRuntime configuration\n\nWarning: Note that these options are not available when using target: 'serverless'\n\n\nWarning: Generally you want to use build-time configuration to provide your configuration.\nThe reason for this is that runtime configuration adds rendering / initialization overhead and is incompatible with automatic static optimization.\n\nThe next/config module gives your app access to the publicRuntimeConfig and serverRuntimeConfig stored in your next.config.js.\nPlace any server-only runtime config under a serverRuntimeConfig property.\nAnything accessible to both client and server-side code should be under publicRuntimeConfig.\n\nNote: A page that relies on publicRuntimeConfig must use getInitialProps to opt-out of automatic static optimization.\nYou can also de-optimize your entire application by creating a Custom <App> with getInitialProps.\n\n// next.config.js\nmodule.exports = {\n  serverRuntimeConfig: {\n    // Will only be available on the server side\n    mySecret: 'secret',\n    secondSecret: process.env.SECOND_SECRET, // Pass through env variables\n  },\n  publicRuntimeConfig: {\n    // Will be available on both server and client\n    staticFolder: '/static',\n  },\n}\n// pages/index.js\nimport getConfig from 'next/config'\n// Only holds serverRuntimeConfig and publicRuntimeConfig from next.config.js nothing else.\nconst { serverRuntimeConfig, publicRuntimeConfig } = getConfig()\n\nconsole.log(serverRuntimeConfig.mySecret) // Will only be available on the server side\nconsole.log(publicRuntimeConfig.staticFolder) // Will be available on both server and client\n\nfunction MyImage() {\n  return (\n    <div>\n      <img src={`${publicRuntimeConfig.staticFolder}/logo.png`} alt=\"logo\" />\n    </div>\n  )\n}\n\nexport default MyImage\nStarting the server on alternative hostname\nTo start the development server using a different default hostname you can use --hostname hostname_here or -H hostname_here option with next dev. This will start a TCP server listening for connections on the provided host.\nCDN support with Asset Prefix\nTo set up a CDN, you can set up the assetPrefix setting and configure your CDN's origin to resolve to the domain that Next.js is hosted on.\nconst isProd = process.env.NODE_ENV === 'production'\nmodule.exports = {\n  // You may only need to add assetPrefix in the production.\n  assetPrefix: isProd ? 'https://cdn.mydomain.com' : '',\n}\nNote: Next.js will automatically use that prefix in the scripts it loads, but this has no effect whatsoever on /static. If you want to serve those assets over the CDN, you'll have to introduce the prefix yourself. One way of introducing a prefix that works inside your components and varies by environment is documented in this example.\nIf your CDN is on a separate domain and you would like assets to be requested using a CORS aware request you can set a config option for that.\n// next.config.js\nmodule.exports = {\n  crossOrigin: 'anonymous',\n}\nAutomatic Static Optimization\nNext.js automatically determines that a page is static (can be prerendered) if it has no blocking data requirements.\nThis determination is made by the absence of getInitialProps in the page.\nIf getInitialProps is present, Next.js will not statically optimize the page.\nInstead, Next.js will use its default behavior and render the page on-demand, per-request (meaning Server-Side Rendering).\nIf getInitialProps is absent, Next.js will statically optimize your page automatically by prerendering it to static HTML. During prerendering, the router's query object will be empty since we do not have query information to provide during this phase. Any query values will be populated client side after hydration.\nThis feature allows Next.js to emit hybrid applications that contain both server-rendered and statically generated pages.\nThis ensures Next.js always emits applications that are fast by default.\n\nNote: Statically generated pages are still reactive: Next.js will hydrate your application client-side to give it full interactivity.\n\nThis feature provides many benefits.\nFor example, optimized pages require no server-side computation and can be instantly streamed to the end-user from CDN locations.\nThe result is an ultra fast loading experience for your users.\nnext build will emit .html files for statically optimized pages.\nThe result will be a file named .next/server/static/${BUILD_ID}/about.html instead of .next/server/static/${BUILD_ID}/about.js.\nThis behavior is similar for target: 'serverless'.\nThe built-in Next.js server (next start) and programmatic API (app.getRequestHandler()) both support this build output transparently.\nThere is no configuration or special handling required.\n\nNote: If you have a custom <App> with getInitialProps then this optimization will be disabled.\n\n\nNote: If you have a custom <Document> with getInitialProps be sure you check if ctx.req is defined before assuming the page is server-side rendered.\nctx.req will be undefined for pages that are prerendered.\n\nAutomatic Static Optimization Indicator\nWhen a page qualifies for automatic static optimization we show an indicator to let you know.\nThis is helpful since the automatic static optimization can be very beneficial and knowing immediately in development if it qualifies can be useful.\nSee above for information on the benefits of this optimization.\nIn some cases this indicator might not be as useful like when working on electron applications. For these cases you can disable the indicator in your next.config.js by setting\nmodule.exports = {\n  devIndicators: {\n    autoPrerender: false,\n  },\n}\nProduction deployment\nTo deploy, instead of running next, you want to build for production usage ahead of time. Therefore, building and starting are separate commands:\nnext build\nnext start\nTo deploy Next.js with ZEIT Now see the ZEIT Guide for Deploying Next.js or the Next.js Learn section about deploying on ZEIT Now.\nNext.js can be deployed to other hosting solutions too. Please have a look at the 'Deployment' section of the wiki.\nNote: NODE_ENV is properly configured by the next subcommands, if absent, to maximize performance. if you\u2019re using Next.js programmatically, it\u2019s your responsibility to set NODE_ENV=production manually!\nNote: we recommend putting .next, or your custom dist folder, in .gitignore or .npmignore. Otherwise, use files or now.files to opt-into a whitelist of files you want to deploy, excluding .next or your custom dist folder.\nCompression\nNext.js provides gzip compression to compress rendered content and static files. Compression only works with the server target. In general you will want to enable compression on a HTTP proxy like nginx, to offload load from the Node.js process.\nTo disable compression in Next.js, set compress to false in next.config.js:\n// next.config.js\nmodule.exports = {\n  compress: false,\n}\nServerless deployment\n\nExamples\n\nnow.sh\nanna-artemov.now.sh\nWe encourage contributing more examples to this section\n\n\nServerless deployment dramatically improves reliability and scalability by splitting your application into smaller parts (also called lambdas).\nIn the case of Next.js, each page in the pages directory becomes a serverless lambda.\nThere are a number of benefits to serverless.\nThe referenced link talks about some of them in the context of Express, but the principles apply universally:\nserverless allows for distributed points of failure, infinite scalability, and is incredibly affordable with a \"pay for what you use\" model.\nTo enable serverless mode in Next.js, add the serverless build target in next.config.js:\n// next.config.js\nmodule.exports = {\n  target: 'serverless',\n}\nThe serverless target will output a single lambda or HTML file per page.\nThis file is completely standalone and doesn't require any dependencies to run:\n\npages/index.js => .next/serverless/pages/index.js\npages/about.js => .next/serverless/pages/about.js\npages/blog.js => .next/serverless/pages/blog.html\n\nThe signature of the Next.js Serverless function is similar to the Node.js HTTP server callback:\nexport function render(req: http.IncomingMessage, res: http.ServerResponse) => void\n\nhttp.IncomingMessage\nhttp.ServerResponse\nvoid refers to the function not having a return value and is equivalent to JavaScript's undefined. Calling the function will finish the request.\n\nThe static HTML files are ready to be served as-is.\nYou can read more about this feature, including how to opt-out, in the Automatic Static Optimization section.\nUsing the serverless target, you can deploy Next.js to ZEIT Now with all of the benefits and added ease of control like for example; custom routes and caching headers. See the ZEIT Guide for Deploying Next.js with Now for more information.\nOne Level Lower\nNext.js provides low-level APIs for serverless deployments as hosting platforms have different function signatures. In general you will want to wrap the output of a Next.js serverless build with a compatibility layer.\nFor example if the platform supports the Node.js http.Server class:\nconst http = require('http')\nconst page = require('./.next/serverless/pages/about.js')\nconst server = new http.Server((req, res) => page.render(req, res))\nserver.listen(3000, () => console.log('Listening on http://localhost:3000'))\nFor specific platform examples see the examples section above.\nSummary\n\nLow-level API for implementing serverless deployment\nEvery page in the pages directory becomes a serverless function (lambda)\nCreates the smallest possible serverless function (50Kb base zip size)\nOptimized for fast cold start of the function\nThe serverless function has 0 dependencies (they are included in the function bundle)\nUses the http.IncomingMessage and http.ServerResponse from Node.js\nopt-in using target: 'serverless' in next.config.js\nDoes not load next.config.js when executing the function, note that this means publicRuntimeConfig / serverRuntimeConfig are not supported\n\nBrowser support\nNext.js supports IE11 and all modern browsers out of the box using @babel/preset-env. In order to support IE11 Next.js adds a global Promise polyfill. In cases where your own code or any external NPM dependencies you are using requires features not supported by your target browsers you will need to implement polyfills.\nThe polyfills example demonstrates the recommended approach to implement polyfills.\nTypeScript\nNext.js provides an integrated TypeScript experience out of the box, similar to an IDE.\nTo get started, create a empty tsconfig.json file in the root of your project:\ntouch tsconfig.json\nNext.js will automatically configure this file with default values (providing your own tsconfig.json is also supported).\nThen, run next dev (normally npm run dev) and Next.js will guide you through installing the necessary packages to complete setup.\nnpm run dev\n\n# You'll see instructions like these:\n#\n# Please install typescript, @types/react, and @types/node by running:\n#\n#         yarn add --dev typescript @types/react @types/node\n#\n# ...\nYou're now ready to start converting files from .js to .tsx and leveraging the benefits TypeScript provides!\nTo learn more about TypeScript checkout its documentation.\n\nNote: Next.js will create a file named next-env.d.ts in the root of your project.\nThis file ensures Next.js' types are picked up by the TypeScript compiler.\nYou cannot remove this file, however, you can edit it (but don't need to).\n\n\nNote: Next.js does not enable TypeScript's strict mode by default.\nWhen you feel comfortable with TypeScript, you may turn this option on in your tsconfig.json.\n\n\nNote: By default, Next.js reports TypeScript errors during development for pages you are actively working on.\nTypeScript errors for inactive pages do not block the development process.\nIf you don't want to leverage this behavior and instead, e.g. prefer your editor's integration, you can set the following option in next.config.js:\n// next.config.js\nmodule.exports = {\n  typescript: {\n    ignoreDevErrors: true,\n  },\n}\nNext.js will still fail your production build (next build) when TypeScript errors are present in your project.\nIf you'd like Next.js to dangerously produce production code even when your application is broken, you can set the following option in your next.config.js.\nBe sure you are running type checks as part of your build or deploy process!\n// next.config.js\nmodule.exports = {\n  typescript: {\n    // !! WARN !!\n    // Dangerously allow production builds to successfully complete even if\n    // your project has type errors.\n    //\n    // This option is rarely needed, and should be reserved for advanced\n    // setups. You may be looking for `ignoreDevErrors` instead.\n    // !! WARN !!\n    ignoreBuildErrors: true,\n  },\n}\n\nExported types\nNext.js provides NextPage type that can be used for pages in the pages directory. NextPage adds definitions for getInitialProps so that it can be used without any extra typing needed.\nimport { NextPage } from 'next'\n\ninterface Props {\n  userAgent?: string\n}\n\nconst Page: NextPage<Props> = ({ userAgent }) => (\n  <main>Your user agent: {userAgent}</main>\n)\n\nPage.getInitialProps = async ({ req }) => {\n  const userAgent = req ? req.headers['user-agent'] : navigator.userAgent\n  return { userAgent }\n}\n\nexport default Page\nFor React.Component you can use NextPageContext:\nimport React from 'react'\nimport { NextPageContext } from 'next'\n\ninterface Props {\n  userAgent?: string\n}\n\nexport default class Page extends React.Component<Props> {\n  static async getInitialProps({ req }: NextPageContext) {\n    const userAgent = req ? req.headers['user-agent'] : navigator.userAgent\n    return { userAgent }\n  }\n\n  render() {\n    const { userAgent } = this.props\n    return <main>Your user agent: {userAgent}</main>\n  }\n}\nAMP Support\n\nExamples\n\namp\n\n\nEnabling AMP Support\nTo enable AMP support for a page, add export const config = { amp: true } to your page.\nAMP First Page\n// pages/about.js\nexport const config = { amp: true }\n\nexport default function AboutPage(props) {\n  return <h3>My AMP About Page!</h3>\n}\nHybrid AMP Page\n// pages/hybrid-about.js\nimport { useAmp } from 'next/amp'\n\nexport const config = { amp: 'hybrid' }\n\nexport default function AboutPage(props) {\n  return (\n    <div>\n      <h3>My AMP Page</h3>\n      {useAmp() ? (\n        <amp-img\n          width=\"300\"\n          height=\"300\"\n          src=\"/my-img.jpg\"\n          alt=\"a cool image\"\n          layout=\"responsive\"\n        />\n      ) : (\n        <img width=\"300\" height=\"300\" src=\"/my-img.jpg\" alt=\"a cool image\" />\n      )}\n    </div>\n  )\n}\nAMP Page Modes\nAMP pages can specify two modes:\n\nAMP-only (default)\n\nPages have no Next.js or React client-side runtime\nPages are automatically optimized with AMP Optimizer, an optimizer that applies the same transformations as AMP caches (improves performance by up to 42%)\nPages have a user-accessible (optimized) version of the page and a search-engine indexable (unoptimized) version of the page\nOpt-in via export const config = { amp: true }\n\n\nHybrid\n\nPages are able to be rendered as traditional HTML (default) and AMP HTML (by adding ?amp=1 to the URL)\nThe AMP version of the page only has valid optimizations applied with AMP Optimizer so that it is indexable by search-engines\nOpt-in via export const config = { amp: 'hybrid' }\nAble to differentiate between modes using useAmp from next/amp\n\n\n\nBoth of these page modes provide a consistently fast experience for users accessing pages through search engines.\nAMP Behavior with next export\nWhen using next export to statically prerender pages Next.js will detect if the page supports AMP and change the exporting behavior based on that.\nHybrid AMP (pages/about.js) would output:\n\nout/about.html - with client-side React runtime\nout/about.amp.html - AMP page\n\nAMP-only (pages/about.js) would output:\n\nout/about.html - Optimized AMP page\n\nDuring export Next.js automatically detects if a page is hybrid AMP and outputs the AMP version to page.amp.html. We also automatically insert the <link rel=\"amphtml\" href=\"/page.amp\" /> and <link rel=\"canonical\" href=\"/\" /> tags for you.\n\nNote: When using exportTrailingSlash: true in next.config.js, output will be different. For Hybrid AMP pages, output will be out/page/index.html and out/page.amp/index.html, and for AMP-only pages, output will be out/page/index.html\n\nAdding AMP Components\nThe AMP community provides many components to make AMP pages more interactive. You can add these components to your page by using next/head:\n// pages/hello.js\nimport Head from 'next/head'\n\nexport const config = { amp: true }\n\nexport default function MyAmpPage() {\n  return (\n    <div>\n      <Head>\n        <script\n          async\n          key=\"amp-timeago\"\n          custom-element=\"amp-timeago\"\n          src=\"https://cdn.ampproject.org/v0/amp-timeago-0.1.js\"\n        />\n      </Head>\n\n      <p>Some time: {date.toJSON()}</p>\n      <amp-timeago\n        width=\"0\"\n        height=\"15\"\n        datetime={date.toJSON()}\n        layout=\"responsive\"\n      >\n        .\n      </amp-timeago>\n    </div>\n  )\n}\nAMP Validation\nAMP pages are automatically validated with amphtml-validator during development. Errors and warnings will appear in the terminal where you started Next.js.\nPages are also validated during next export and any warnings / errors will be printed to the terminal.\nAny AMP errors will cause next export to exit with status code 1 because the export is not valid AMP.\nTypeScript Support\nAMP currently doesn't have built-in types for TypeScript, but it's in their roadmap (#13791). As a workaround you can manually add the types to amp.d.ts like here.\nStatic HTML export\n\nExamples\n\nStatic export\n\n\nnext export is a way to run your Next.js app as a standalone static app without the need for a Node.js server.\nThe exported app supports almost every feature of Next.js, including dynamic urls, prefetching, preloading and dynamic imports.\nThe way next export works is by prerendering all pages possible to HTML. It does so based on a mapping of pathname key to page object. This mapping is called the exportPathMap.\nThe page object has 2 values:\n\npage - String the page inside the pages directory to render\nquery - Object the query object passed to getInitialProps when prerendering. Defaults to {}\n\nUsage\nSimply develop your app as you normally do with Next.js. Then run:\nnext build\nnext export\n\nBy default next export doesn't require any configuration. It will generate a default exportPathMap containing the routes to pages inside the pages directory. This default mapping is available as defaultPathMap in the example below.\nIf your application has dynamic routes you can add a dynamic exportPathMap in next.config.js.\nThis function is asynchronous and gets the default exportPathMap as a parameter.\n// next.config.js\nmodule.exports = {\n  exportPathMap: async function(\n    defaultPathMap,\n    { dev, dir, outDir, distDir, buildId }\n  ) {\n    return {\n      '/': { page: '/' },\n      '/about': { page: '/about' },\n      '/readme.md': { page: '/readme' },\n      '/p/hello-nextjs': { page: '/post', query: { title: 'hello-nextjs' } },\n      '/p/learn-nextjs': { page: '/post', query: { title: 'learn-nextjs' } },\n      '/p/deploy-nextjs': { page: '/post', query: { title: 'deploy-nextjs' } },\n    }\n  },\n}\nThe pages will be exported as html files, i.e. /about will become /about.html.\nIt is possible to configure Next.js to export pages as index.html files and require trailing slashes, i.e. /about becomes /about/index.html and is routable via /about/.\nThis was the default behavior prior to Next.js 9.\nYou can use the following next.config.js to switch back to this behavior:\n// next.config.js\nmodule.exports = {\n  exportTrailingSlash: true,\n}\n\nNote: If the export path is a filename (e.g. /readme.md) and is different than .html, you may need to set the Content-Type header to text/html when serving this content.\n\nThe second argument is an object with:\n\ndev - true when exportPathMap is being called in development. false when running next export. In development exportPathMap is used to define routes.\ndir - Absolute path to the project directory\noutDir - Absolute path to the out/ directory (configurable with -o or --outdir). When dev is true the value of outDir will be null.\ndistDir - Absolute path to the .next/ directory (configurable using the distDir config key)\nbuildId - The buildId the export is running for\n\nThen simply run these commands:\nnext build\nnext export\nFor that you may need to add a NPM script to package.json like this:\n{\n  \"scripts\": {\n    \"build\": \"next build\",\n    \"export\": \"npm run build && next export\"\n  }\n}\nAnd run it at once with:\nnpm run export\nThen you have a static version of your app in the out directory.\n\nYou can also customize the output directory. For that run next export -h for the help.\n\nNow you can deploy the out directory to any static hosting service. Note that there is an additional step for deploying to GitHub Pages, documented here.\nFor an example, simply visit the out directory and run following command to deploy your app to ZEIT Now.\nnow\nLimitation\nWith next export, we build a HTML version of your app. At export time we will run getInitialProps of your pages.\nThe req and res fields of the context object passed to getInitialProps are empty objects during export as there is no server running.\n\nNote: If your pages don't have getInitialProps you may not need next export at all, next build is already enough thanks to automatic static optimization.\n\n\nYou won't be able to render HTML dynamically when static exporting, as we pre-build the HTML files. If you want to do dynamic rendering use next start or the custom server API\n\nMulti Zones\n\nExamples\n\nWith Zones\n\n\nA zone is a single deployment of a Next.js app. Just like that, you can have multiple zones and then you can merge them as a single app.\nFor an example, you can have two zones like this:\n\nAn app for serving /blog/**\nAnother app for serving all other pages\n\nWith multi zones support, you can merge both these apps into a single one allowing your customers to browse it using a single URL, but you can develop and deploy both apps independently.\n\nThis is exactly the same concept of microservices, but for frontend apps.\n\nHow to define a zone\nThere are no special zones related APIs. You only need to do following:\n\nMake sure to keep only the pages you need in your app, meaning that an app can't have pages from another app, if app A has /blog then app B shouldn't have it too.\nMake sure to add an assetPrefix to avoid conflicts with static files.\n\nHow to merge them\nYou can merge zones using any HTTP proxy.\nYou can use now dev as your local development server. It allows you to easily define routing routes for multiple apps like below:\n{\n  \"version\": 2,\n  \"builds\": [\n    { \"src\": \"docs/next.config.js\", \"use\": \"@now/next\" },\n    { \"src\": \"home/next.config.js\", \"use\": \"@now/next\" }\n  ],\n  \"routes\": [\n    { \"src\": \"/docs(.*)\", \"dest\": \"docs$1\", \"continue\": true },\n    { \"src\": \"(?!/?docs)(.*)\", \"dest\": \"home$1\", \"continue\": true }\n  ]\n}\nFor the production deployment, you can use the same configuration and run now to do the deployment with ZEIT Now. Otherwise you can also configure a proxy server to route using a set of routes like the ones above, e.g deploy the docs app to https://docs.example.com and the home app to https://home.example.com and then add a proxy server for both apps in https://example.com.\nFAQ\n\nIs this production ready?\n  Next.js has been powering https://zeit.co since its inception.\nWe\u2019re ecstatic about both the developer experience and end-user performance, so we decided to share it with the community.\n\n\nHow big is it?\nThe client side bundle size should be measured in a per-app basis.\nA small Next main bundle is around 65kb gzipped.\n\n\nIs this like `create-react-app`?\nYes and No.\nYes in that both make your life easier.\nNo in that it enforces a structure so that we can do more advanced things like:\n\nServer side rendering\nAutomatic code splitting\n\nIn addition, Next.js provides two built-in features that are critical for every single website:\n\nRouting with lazy component loading: <Link> (by importing next/link)\nA way for components to alter <head>: <Head> (by importing next/head)\n\nIf you want to create re-usable React components that you can embed in your Next.js app or other React applications, using create-react-app is a great idea. You can later import it and keep your codebase clean!\n\n\nHow do I use CSS-in-JS solutions?\nNext.js bundles styled-jsx supporting scoped css. However you can use any CSS-in-JS solution in your Next app by just including your favorite library as mentioned before in the document.\n\n\nWhat syntactic features are transpiled? How do I change them?\nWe track V8. Since V8 has wide support for ES6 and async and await, we transpile those. Since V8 doesn\u2019t support class decorators, we don\u2019t transpile those.\nSee the documentation about customizing the babel config and next/preset for more information.\n\n\nWhy a new Router?\nNext.js is special in that:\n\nRoutes don\u2019t need to be known ahead of time\nRoutes are always lazy-loadable\nTop-level components can define getInitialProps that should block the loading of the route (either when server-rendering or lazy-loading)\n\nAs a result, we were able to introduce a very simple approach to routing that consists of two pieces:\n\nEvery top level component receives a url object to inspect the url or perform modifications to the history\nA <Link /> component is used to wrap elements like anchors (<a/>) to perform client-side transitions\n\n\n\nHow do I define a custom fancy route?\nNext.js provide dynamic routing solution out of the box. This allows to use pretty links in url.\nYou can check an example to see how it works.\n\n\nHow do I fetch data?\nIt\u2019s up to you. getInitialProps is an async function (or a regular function that returns a Promise). It can retrieve data from anywhere.\n\n\nCan I use it with GraphQL?\nYes! Here's an example with Apollo.\n\n\nCan I use it with Redux and thunk?\nYes! Here's an example.\n\n\nCan I use it with Redux?\nYes! Here's an example.\n\n\nCan I use Next with my favorite Javascript library or toolkit?\nSince our first release we've had many example contributions, you can check them out in the examples directory.\n\n\nWhat is this inspired by?\nMany of the goals we set out to accomplish were the ones listed in The 7 principles of Rich Web Applications by Guillermo Rauch.\nThe ease-of-use of PHP is a great inspiration. We feel Next.js is a suitable replacement for many scenarios where you otherwise would use PHP to output HTML.\nUnlike PHP, we benefit from the ES6 module system and every file exports a component or function that can be easily imported for lazy evaluation or testing.\nAs we were researching options for server-rendering React that didn\u2019t involve a large number of steps, we came across react-page (now deprecated), a similar approach to Next.js by the creator of React Jordan Walke.\n\nContributing\nPlease see our contributing.md.\nAuthors\n\nArunoda Susiripala (@arunoda) \u2013 ZEIT\nTim Neutkens (@timneutkens) \u2013 ZEIT\nNaoyuki Kanezawa (@nkzawa) \u2013 ZEIT\nTony Kovanen (@tonykovanen) \u2013 ZEIT\nGuillermo Rauch (@rauchg) \u2013 ZEIT\nDan Zajdband (@impronunciable) \u2013 Knight-Mozilla / Coral Project\n\n\n"}, {"repo": "h5bp/Front-end-Developer-Interview-Questions", "language": "HTML", "readme": "\nFront-end Job Interview Questions\nThis repository contains a number of front-end interview questions that can be used when vetting potential candidates. It is by no means recommended to use every single question here on the same candidate (that would take hours). Choosing a few items from this list should help you vet the intended skills you require.\nNote: Keep in mind that many of these questions are open-ended and could lead to interesting discussions that tell you more about the person's capabilities than a straight answer would.\nYou can read more about this project & its history here.\nTable of Contents\n\nGeneral Questions\nHTML Questions\nCSS Questions\nJS Questions\nAccessibility Questions (external link)\nTesting Questions\nPerformance Questions\nNetwork Questions\nCoding Questions\nFun Questions\n\nGetting Involved\n\nContributors\nHow to Contribute\nLicense\n\nThe project is currently maintained by:\n\n@roblarsen\n@vvscode\n\nContributors\nFeeling inspired? Check our Contributing guide to get started!\n\n\nDarcy Clarke\ud83e\udd14 \ud83d\udcd6 \ud83d\ude87 \ud83d\udc40 \ud83d\udcac \ud83d\udce2 \ud83d\udea7\nBo-Yi Wu\ud83d\udcd6 \ud83d\udc40\nNikolay Kostov\ud83c\udf0d\nJan Hancic\ud83c\udf0d\nRich Gilbank\ud83d\udcd6 \ud83d\udc40\nMattias Wallander\ud83c\udf0d\n\n\nSonghun\ud83d\udcd6 \ud83c\udf0d\nGiulia Alfonsi\ud83c\udf0d\nMike Myat Min Han\ud83c\udf0d\nSunLn\ud83c\udf0d\nYi, Hangehee\ud83c\udf0d\nshawnqiang\ud83c\udf0d\n\n\nGuilherme Pontes\ud83c\udf0d\nlufeihaidao\ud83c\udf0d\nDonald Zhan\ud83c\udf0d\nMina Markham\ud83d\udcd6\nPaul Irish\ud83d\udcd6\nMathieu Hays\ud83c\udf0d\n\n\nYong Yin\ud83d\udcd6\nDale Sande / @anotheruiguy\ud83d\udcd6 \ud83d\ude87 \ud83d\udc40\nMarco Biedermann\ud83d\ude87\nVictor Coulon\ud83c\udf0d \ud83d\udc40\nPaulo \u00c1vila\ud83d\udcd6\nEkrem Karaca\ud83c\udf0d\n\n\nAchal Varma\ud83d\udcd6\nAurelio De Rosa\ud83d\udcd6\nMin Zhao\ud83c\udf0d\nC\u0103t\u0103lin Mari\u0219\ud83d\udcd6 \ud83c\udf0d\nSimon Owen\ud83d\udcd6\nMaxim Khlobystov\ud83d\udcd6 \ud83d\udc40\n\n\nSara\ud83d\udcd6 \ud83c\udf0d\nJason Hummel\ud83d\udcd6\nKunal Sachdeva\ud83d\udcd6\nAJ Jordan\ud83d\udcd6\npaulalexandru\ud83d\udcd6 \ud83c\udf0d\ndot\ud83d\ude87 \ud83c\udf0d\n\n\nEverardo Medina\ud83c\udf0d\nGaurav Nanda\ud83d\udcd6\nAndrii Malaman\ud83d\udcd6\nDaniele Zanni\ud83c\udf0d\nFernando Freitas Alves\ud83c\udf0d\nJohn Wu\ud83d\udcd6\n\n\nPablo Nevares\ud83d\udcd6 \ud83c\udf0d\nFelipe Ramos\ud83d\udcd6\nArthur Verschaeve\ud83d\udcd6 \ud83d\udc40 \ud83c\udf0d\nRichard Denton\ud83d\udcd6\nAndrey Fadeyev\ud83c\udf0d\nrimager\ud83d\udcd6\n\n\nRishabh Jain\ud83d\udcd6\nKaijun Chen\ud83c\udf0d\nNithya\ud83d\udcd6\nErwan Jegouzo\ud83d\udcd6\nTieme van Veen\ud83d\udcd6\nHsun\ud83c\udf0d\n\n\nAdrien CHRETIEN\ud83c\udf0d\nAlan Rodr\u00edguez\ud83c\udf0d\nAdam Haris\ud83c\udf0d\nToshimaru\ud83c\udf0d\nShankar Cabus\ud83c\udf0d\nAsh\ud83c\udf0d\n\n\nHank Wang\ud83c\udf0d\nKILLHAPPY.\ud83d\udcd6\nMarko \u0160valjek\ud83c\udf0d\nAntonio Laguna\ud83d\udcd6 \ud83c\udf0d\nMithun Dhiman\ud83c\udf0d\nK\u00e9vin Rocher / @Darklg\ud83c\udf0d\n\n\nDmitry Pashkevich\ud83c\udf0d\nkarmeljuk\ud83c\udf0d\nDirk Sch\u00fcrjohann\ud83c\udf0d\nBj\u00f6rn S\u00f6derqvist\ud83c\udf0d\nNitin Hayaran\ud83d\udcd6\nPeter Galiba\ud83d\udcd6\n\n\nNeil Heinrich\ud83d\udcd6\nOhgyun Ahn\ud83c\udf0d\nnerdog\ud83c\udf0d\nLeo Picado\ud83c\udf0d\nRomain Dardour\ud83c\udf0d\nAlex Seville\ud83d\udcd6\n\n\n\u80e1\u5c10\u777f\u4e36\ud83c\udf0d\nVitalii Petrychuk\ud83c\udf0d\nTairraos\ud83d\udcd6 \ud83c\udf0d\nDmitrii Raev\ud83c\udf0d\nBartek\ud83c\udf0d\nVitor Balocco\ud83d\udcd6\n\n\nJonathan Neal\ud83d\udcd6\nChristoffer Lans\ud83c\udf0d\nFelipe Fialho\ud83c\udf0d\nPiotrek Mierzejewski\ud83c\udf0d\nPatrik Wibron\ud83c\udf0d\nDmitry Vislov\ud83c\udf0d\n\n\nKrzysztof Romanowski\ud83d\udcd6\nAlbert Yu\ud83c\udf0d\nSebastian Lara Menares\ud83c\udf0d\nsunnylost\ud83c\udf0d\nDaniel Yang\ud83d\udcd6\nMichael P. Pfeiffer\ud83c\udf0d\n\n\nTyll Wei\u00df\ud83c\udf0d\nAndrei Sebastian C\u00eempean\ud83c\udf0d\nDenis Sokolov\ud83d\udcd6\nHarijs Deksnis\ud83c\udf0d\nRob Larsen\ud83e\udd14 \ud83d\udc40 \ud83d\udea7\nCezar Augusto\ud83e\udd14 \ud83d\ude87 \ud83d\udc40 \ud83d\udea7\n\n\nVasiliy Vanchuk\ud83e\udd14 \ud83d\udc40 \ud83d\udea7\n\n\nLicense\nCopyright (c) Contributors of the Front-end Developer Interview Questions\n\n"}, {"repo": "moment/moment", "language": "JavaScript", "readme": "\n\n   \n\n\n\nA lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\nDocumentation\nPort to ECMAScript 6 (version 2.10.0)\nMoment 2.10.0 does not bring any new features, but the code is now written in\nECMAScript 6 modules and placed inside src/. Previously moment.js, locale/*.js and\ntest/moment/*.js, test/locale/*.js contained the source of the project. Now\nthe source is in src/, temporary build (ECMAScript 5) files are placed under\nbuild/umd/ (for running tests during development), and the moment.js and\nlocale/*.js files are updated only on release.\nIf you want to use a particular revision of the code, make sure to run\ngrunt transpile update-index, so moment.js and locales/*.js are synced\nwith src/*. We might place that in a commit hook in the future.\nUpgrading to 2.0.0\nThere are a number of small backwards incompatible changes with version 2.0.0. See the full descriptions here\n\n\nChanged language ordinal method to return the number + ordinal instead of just the ordinal.\n\n\nChanged two digit year parsing cutoff to match strptime.\n\n\nRemoved moment#sod and moment#eod in favor of moment#startOf and moment#endOf.\n\n\nRemoved moment.humanizeDuration() in favor of moment.duration().humanize().\n\n\nRemoved the lang data objects from the top level namespace.\n\n\nDuplicate Date passed to moment() instead of referencing it.\n\n\nChangelog\nContributing \nWe're looking for co-maintainers! If you want to become a master of time please\nwrite to ichernev.\nIn addition to contributing code, you can help to triage issues. This can include reproducing bug reports, or asking for vital information such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to subscribe to moment/moment on CodeTriage.\nLicense\nMoment.js is freely distributable under the terms of the MIT license.\n\n\n"}, {"repo": "josephmisiti/awesome-machine-learning", "language": "Python", "readme": "\nAwesome Machine Learning \nA curated list of awesome machine learning frameworks, libraries and software (by language). Inspired by awesome-php.\nIf you want to contribute to this list (please do), send me a pull request or contact me @josephmisiti.\nAlso, a listed repository should be deprecated if:\n\nRepository's owner explicitly say that \"this library is not maintained\".\nNot committed for long time (2~3 years).\n\nFurther resources:\n\n\nFor a list of free machine learning books available for download, go here.\n\n\nFor a list of (mostly) free machine learning courses available online, go here.\n\n\nFor a list of blogs and newsletters on data science and machine learning, go here.\n\n\nFor a list of free-to-attend meetups and local events, go here.\n\n\nTable of Contents\nFrameworks and Libraries\n\nAwesome Machine Learning \n\nTable of Contents\n\nFrameworks and Libraries\nTools\n\n\nAPL\n\nGeneral-Purpose Machine Learning\n\n\nC\n\nGeneral-Purpose Machine Learning\nComputer Vision\n\n\nC++\n\nComputer Vision\nGeneral-Purpose Machine Learning\nNatural Language Processing\nSpeech Recognition\nSequence Analysis\nGesture Detection\n\n\nCommon Lisp\n\nGeneral-Purpose Machine Learning\n\n\nClojure\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\n\n\nCrystal\n\nGeneral-Purpose Machine Learning\n\n\nElixir\n\nGeneral-Purpose Machine Learning\nNatural Language Processing\n\n\nErlang\n\nGeneral-Purpose Machine Learning\n\n\nGo\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\nSpatial analysis and geometry\nData Analysis / Data Visualization\nComputer vision\n\n\nHaskell\n\nGeneral-Purpose Machine Learning\n\n\nJava\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\nSpeech Recognition\nData Analysis / Data Visualization\nDeep Learning\n\n\nJavascript\n\nNatural Language Processing\nData Analysis / Data Visualization\nGeneral-Purpose Machine Learning\nMisc\nDemos and Scripts\n\n\nJulia\n\nGeneral-Purpose Machine Learning\nNatural Language Processing\nData Analysis / Data Visualization\nMisc Stuff / Presentations\n\n\nLua\n\nGeneral-Purpose Machine Learning\nDemos and Scripts\n\n\nMatlab\n\nComputer Vision\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\n\n\n.NET\n\nComputer Vision\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\n\n\nObjective C\n\nGeneral-Purpose Machine Learning\n\n\nOCaml\n\nGeneral-Purpose Machine Learning\n\n\nPerl\n\nData Analysis / Data Visualization\nGeneral-Purpose Machine Learning\n\n\nPerl 6\n\nData Analysis / Data Visualization\nGeneral-Purpose Machine Learning\n\n\nPHP\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\n\n\nPython\n\nComputer Vision\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\nMisc Scripts / iPython Notebooks / Codebases\nNeural Networks\nKaggle Competition Source Code\nReinforcement Learning\n\n\nRuby\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\nMisc\n\n\nRust\n\nGeneral-Purpose Machine Learning\n\n\nR\n\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\n\n\nSAS\n\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\nNatural Language Processing\nDemos and Scripts\n\n\nScala\n\nNatural Language Processing\nData Analysis / Data Visualization\nGeneral-Purpose Machine Learning\n\n\nScheme\n\nNeural Networks\n\n\nSwift\n\nGeneral-Purpose Machine Learning\n\n\nTensorFlow\n\nGeneral-Purpose Machine Learning\n\n\nTools\n\nNeural Networks\nMisc\n\n\nCredits\n\u5199\u4e2a\u811a\u672c\u628a\u5b83\u4eec\u722c\u4e0b\u6765 - Demos and Scripts\n\n\nScala\n\nNatural Language Processing\nData Analysis / Data Visualization\nGeneral-Purpose Machine Learning\n\n\nScheme\n\nNeural Networks\n\n\nSwift\n\nGeneral-Purpose Machine Learning\n\n\nTensorFlow\n\nGeneral-Purpose Machine Learning\n\n\n\nTools\n\nNeural Networks\nMisc\n\nCredits\n\nAPL\n\nGeneral-Purpose Machine Learning\n\nnaive-apl - Naive Bayesian Classifier implementation in APL. [Deprecated]\n\n\nC\n\nGeneral-Purpose Machine Learning\n\nDarknet - Darknet is an open source neural network framework written in C and CUDA. It is fast, easy to install, and supports CPU and GPU computation.\nRecommender - A C library for product recommendations/suggestions using collaborative filtering (CF).\nHybrid Recommender System - A hybrid recommender system based upon scikit-learn algorithms. [Deprecated]\nneonrvm - neonrvm is an open source machine learning library based on RVM technique. It's written in C programming language and comes with Python programming language bindings.\n\n\nComputer Vision\n\nCCV - C-based/Cached/Core Computer Vision Library, A Modern Computer Vision Library.\nVLFeat - VLFeat is an open and portable library of computer vision algorithms, which has Matlab toolbox.\n\n\nC++\n\nComputer Vision\n\nDLib - DLib has C++ and Python interfaces for face detection and training general object detectors.\nEBLearn - Eblearn is an object-oriented C++ library that implements various machine learning models [Deprecated]\nOpenCV - OpenCV has C++, C, Python, Java and MATLAB interfaces and supports Windows, Linux, Android and Mac OS.\nVIGRA - VIGRA is a generic cross-platform C++ computer vision and machine learning library for volumes of arbitrary dimensionality with Python bindings.\n\n\nGeneral-Purpose Machine Learning\n\nBanditLib - A simple Multi-armed Bandit library. [Deprecated]\nCaffe - A deep learning framework developed with cleanliness, readability, and speed in mind. [DEEP LEARNING]\nCatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box. It is easy to install, contains fast inference implementation and supports CPU and GPU (even multi-GPU) computation.\nCNTK - The Computational Network Toolkit (CNTK) by Microsoft Research, is a unified deep-learning toolkit that describes neural networks as a series of computational steps via a directed graph.\nCUDA - This is a fast C++/CUDA implementation of convolutional [DEEP LEARNING]\nDeepDetect - A machine learning API and server written in C++11. It makes state of the art machine learning easy to work with and integrate into existing applications.\nDistributed Machine learning Tool Kit (DMTK) - A distributed machine learning (parameter server) framework by Microsoft. Enables training models on large data sets across multiple machines. Current tools bundled with it include: LightLDA and Distributed (Multisense) Word Embedding.\nDLib - A suite of ML tools designed to be easy to imbed in other applications.\nDSSTNE - A software library created by Amazon for training and deploying deep neural networks using GPUs which emphasizes speed and scale over experimental flexibility.\nDyNet - A dynamic neural network library working well with networks that have dynamic structures that change for every training instance. Written in C++ with bindings in Python.\nFido - A highly-modular C++ machine learning library for embedded electronics and robotics.\nigraph - General purpose graph library.\nIntel(R) DAAL - A high performance software library developed by Intel and optimized for Intel's architectures. Library provides algorithmic building blocks for all stages of data analytics and allows to process data in batch, online and distributed modes.\nLightGBM - Microsoft's fast, distributed, high performance gradient boosting (GBDT, GBRT, GBM or MART) framework based on decision tree algorithms, used for ranking, classification and many other machine learning tasks.\nlibfm - A generic approach that allows to mimic most factorization models by feature engineering.\nMLDB - The Machine Learning Database is a database designed for machine learning. Send it commands over a RESTful API to store data, explore it using SQL, then train machine learning models and expose them as APIs.\nmlpack - A scalable C++ machine learning library.\nMXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nproNet-core - A general-purpose network embedding framework: pair-wise representations optimization Network Edit.\nPyCUDA - Python interface to CUDA\nROOT - A modular scientific software framework. It provides all the functionalities needed to deal with big data processing, statistical analysis, visualization and storage.\nshark - A fast, modular, feature-rich open-source C++ machine learning library.\nShogun - The Shogun Machine Learning Toolbox.\nsofia-ml - Suite of fast incremental algorithms.\nStan - A probabilistic programming language implementing full Bayesian statistical inference with Hamiltonian Monte Carlo sampling.\nTimbl - A software package/C++ library implementing several memory-based learning algorithms, among which IB1-IG, an implementation of k-nearest neighbor classification, and IGTree, a decision-tree approximation of IB1-IG. Commonly used for NLP.\nVowpal Wabbit (VW) - A fast out-of-core learning system.\nWarp-CTC - A fast parallel implementation of Connectionist Temporal Classification (CTC), on both CPU and GPU.\nXGBoost - A parallelized optimized general purpose gradient boosting library.\nThunderGBM - A fast library for GBDTs and Random Forests on GPUs.\nThunderSVM - A fast SVM library on GPUs and CPUs.\nLKYDeepNN - A header-only C++11 Neural Network library. Low dependency, native traditional chinese document.\nxLearn - A high performance, easy-to-use, and scalable machine learning package, which can be used to solve large-scale machine learning problems. xLearn is especially useful for solving machine learning problems on large-scale sparse data, which is very common in Internet services such as online advertisement and recommender systems.\nFeaturetools - A library for automated feature engineering. It excels at transforming transactional and relational datasets into feature matrices for machine learning using reusable feature engineering \"primitives\".\nskynet - A library for learning neural network, has C-interface, net set in JSON. Written in C++ with bindings in Python, C++ and C#.\nFeast - A feature store for the management, discovery, and access of machine learning features. Feast provides a consistent view of feature data for both model training and model serving.\nPolyaxon - A platform for reproducible and scalable machine learning and deep learning.\n\n\nNatural Language Processing\n\nBLLIP Parser - BLLIP Natural Language Parser (also known as the Charniak-Johnson parser).\ncolibri-core - C++ library, command line tools, and Python binding for extracting and working with basic linguistic constructions such as n-grams and skipgrams in a quick and memory-efficient way.\nCRF++ - Open source implementation of Conditional Random Fields (CRFs) for segmenting/labeling sequential data & other Natural Language Processing tasks. [Deprecated]\nCRFsuite - CRFsuite is an implementation of Conditional Random Fields (CRFs) for labeling sequential data. [Deprecated]\nfrog - Memory-based NLP suite developed for Dutch: PoS tagger, lemmatiser, dependency parser, NER, shallow parser, morphological analyzer.\nlibfolia - C++ library for the FoLiA format\nMeTA - MeTA : ModErn Text Analysis is a C++ Data Sciences Toolkit that facilitates mining big text data.\nMIT Information Extraction Toolkit - C, C++, and Python tools for named entity recognition and relation extraction\nucto - Unicode-aware regular-expression based tokenizer for various languages. Tool and C++ library. Supports FoLiA format.\n\n\nSpeech Recognition\n\nKaldi - Kaldi is a toolkit for speech recognition written in C++ and licensed under the Apache License v2.0. Kaldi is intended for use by speech recognition researchers.\n\n\nSequence Analysis\n\nToPS - This is an objected-oriented framework that facilitates the integration of probabilistic models for sequences over a user defined alphabet. [Deprecated]\n\n\nGesture Detection\n\ngrt - The Gesture Recognition Toolkit (GRT) is a cross-platform, open-source, C++ machine learning library designed for real-time gesture recognition.\n\n\nCommon Lisp\n\nGeneral-Purpose Machine Learning\n\nmgl - Neural networks (boltzmann machines, feed-forward and recurrent nets), Gaussian Processes.\nmgl-gpr - Evolutionary algorithms. [Deprecated]\ncl-libsvm - Wrapper for the libsvm support vector machine library. [Deprecated]\ncl-online-learning - Online learning algorithms (Perceptron, AROW, SCW, Logistic Regression).\ncl-random-forest - Implementation of Random Forest in Common Lisp.\n\n\nClojure\n\nNatural Language Processing\n\nClojure-openNLP - Natural Language Processing in Clojure (opennlp).\nInfections-clj - Rails-like inflection library for Clojure and ClojureScript.\n\n\nGeneral-Purpose Machine Learning\n\nTouchstone - Clojure A/B testing library. [Deprecated]\nClojush - The Push programming language and the PushGP genetic programming system implemented in Clojure.\nInfer - Inference and machine learning in Clojure. [Deprecated]\nClj-ML - A machine learning library for Clojure built on top of Weka and friends. [Deprecated]\nDL4CLJ - Clojure wrapper for Deeplearning4j.\nEncog - Clojure wrapper for Encog (v3) (Machine-Learning framework that specializes in neural-nets). [Deprecated]\nFungp - A genetic programming library for Clojure. [Deprecated]\nStatistiker - Basic Machine Learning algorithms in Clojure. [Deprecated]\nclortex - General Machine Learning library using Numenta\u2019s Cortical Learning Algorithm. [Deprecated]\ncomportex - Functionally composable Machine Learning library using Numenta\u2019s Cortical Learning Algorithm. [Deprecated]\ncortex - Neural networks, regression and feature learning in Clojure.\nlambda-ml - Simple, concise implementations of machine learning techniques and utilities in Clojure.\n\n\nData Analysis / Data Visualization\n\nIncanter - Incanter is a Clojure-based, R-like platform for statistical computing and graphics.\nPigPen - Map-Reduce for Clojure.\nEnvision - Clojure Data Visualisation library, based on Statistiker and D3.\n\n\nCrystal\n\nGeneral-Purpose Machine Learning\n\nmachine - Simple machine learning algorithm.\ncrystal-fann - FANN (Fast Artificial Neural Network) binding.\n\n\nElixir\n\nGeneral-Purpose Machine Learning\n\nSimple Bayes - A Simple Bayes / Naive Bayes implementation in Elixir.\nemel - A simple and functional machine learning library written in Elixir.\nTensorflex - Tensorflow bindings for the Elixir programming language.\n\n\nNatural Language Processing\n\nStemmer - An English (Porter2) stemming implementation in Elixir.\n\n\nErlang\n\nGeneral-Purpose Machine Learning\n\nDisco - Map Reduce in Erlang. [Deprecated]\nYanni - ANN neural networks using Erlangs leightweight processes.\n\n\nGo\n\nNatural Language Processing\n\nsnowball - Snowball Stemmer for Go.\nword-embedding - Word Embeddings: the full implementation of word2vec, GloVe in Go.\nsentences - Golang implementation of Punkt sentence tokenizer.\ngo-ngram - In-memory n-gram index with compression. [Deprecated]\npaicehusk - Golang implementation of the Paice/Husk Stemming Algorithm. [Deprecated]\ngo-porterstemmer - A native Go clean room implementation of the Porter Stemming algorithm. [Deprecated]\n\n\nGeneral-Purpose Machine Learning\n\nbirdland - A recommendation library in Go.\neaopt - An evolutionary optimization library.\nleaves - A pure Go implementation of the prediction part of GBRTs, including XGBoost and LightGBM.\ngobrain - Neural Networks written in Go.\ngo-mxnet-predictor - Go binding for MXNet c_predict_api to do inference with pre-trained model.\ngo-ml-transpiler - An open source Go transpiler for machine learning models.\ngolearn - Machine learning for Go.\ngoml - Machine learning library written in pure Go.\ngorgonia - Deep learning in Go.\ngorse - An offline recommender system backend based on collaborative filtering written in Go.\ntherfoo - An embedded deep learning library for Go.\nneat - Plug-and-play, parallel Go framework for NeuroEvolution of Augmenting Topologies (NEAT). [Deprecated]\ngo-pr - Pattern recognition package in Go lang. [Deprecated]\ngo-ml - Linear / Logistic regression, Neural Networks, Collaborative Filtering and Gaussian Multivariate Distribution. [Deprecated]\nGoNN - GoNN is an implementation of Neural Network in Go Language, which includes BPNN, RBF, PCN. [Deprecated]\nbayesian - Naive Bayesian Classification for Golang. [Deprecated]\ngo-galib - Genetic Algorithms library written in Go / Golang. [Deprecated]\nCloudforest - Ensembles of decision trees in Go/Golang. [Deprecated]\ngo-dnn - Deep Neural Networks for Golang (powered by MXNet)\n\n\nSpatial analysis and geometry\n\ngo-geom - Go library to handle geometries.\ngogeo - Spherical geometry in Go.\n\n\nData Analysis / Data Visualization\n\ngota - Dataframes.\ngonum/mat - A linear algebra package for Go.\ngonum/optimize - Implementations of optimization algorithms.\ngonum/plot - A plotting library.\ngonum/stat - A statistics library.\nSVGo - The Go Language library for SVG generation.\nglot - Glot is a plotting library for Golang built on top of gnuplot.\nglobe - Globe wireframe visualization.\ngonum/graph - General-purpose graph library.\ngo-graph - Graph library for Go/Golang language. [Deprecated]\nRF - Random forests implementation in Go. [Deprecated]\n\n\nComputer vision\n\nGoCV - Package for computer vision using OpenCV 4 and beyond.\n\n\nHaskell\n\nGeneral-Purpose Machine Learning\n\nhaskell-ml - Haskell implementations of various ML algorithms. [Deprecated]\nHLearn - a suite of libraries for interpreting machine learning models according to their algebraic structure. [Deprecated]\nhnn - Haskell Neural Network library.\nhopfield-networks - Hopfield Networks for unsupervised learning in Haskell. [Deprecated]\nDNNGraph - A DSL for deep neural networks. [Deprecated]\nLambdaNet - Configurable Neural Networks in Haskell. [Deprecated]\n\n\nJava\n\nNatural Language Processing\n\nCortical.io - Retina: an API performing complex NLP operations (disambiguation, classification, streaming text filtering, etc...) as quickly and intuitively as the brain.\nIRIS - Cortical.io's FREE NLP, Retina API Analysis Tool (written in JavaFX!) - See the Tutorial Video.\nCoreNLP - Stanford CoreNLP provides a set of natural language analysis tools which can take raw English language text input and give the base forms of words.\nStanford Parser - A natural language parser is a program that works out the grammatical structure of sentences.\nStanford POS Tagger - A Part-Of-Speech Tagger (POS Tagger).\nStanford Name Entity Recognizer - Stanford NER is a Java implementation of a Named Entity Recognizer.\nStanford Word Segmenter - Tokenization of raw text is a standard pre-processing step for many NLP tasks.\nTregex, Tsurgeon and Semgrex - Tregex is a utility for matching patterns in trees, based on tree relationships and regular expression matches on nodes (the name is short for \"tree regular expressions\").\nStanford Phrasal: A Phrase-Based Translation System\nStanford English Tokenizer - Stanford Phrasal is a state-of-the-art statistical phrase-based machine translation system, written in Java.\nStanford Tokens Regex - A tokenizer divides text into a sequence of tokens, which roughly correspond to \"words\".\nStanford Temporal Tagger - SUTime is a library for recognizing and normalizing time expressions.\nStanford SPIED - Learning entities from unlabeled text starting with seed sets using patterns in an iterative fashion.\nStanford Topic Modeling Toolbox - Topic modeling tools to social scientists and others who wish to perform analysis on datasets.\nTwitter Text Java - A Java implementation of Twitter's text processing library.\nMALLET - A Java-based package for statistical natural language processing, document classification, clustering, topic modeling, information extraction, and other machine learning applications to text.\nOpenNLP - a machine learning based toolkit for the processing of natural language text.\nLingPipe - A tool kit for processing text using computational linguistics.\nClearTK - ClearTK provides a framework for developing statistical natural language processing (NLP) components in Java and is built on top of Apache UIMA. [Deprecated]\nApache cTAKES - Apache clinical Text Analysis and Knowledge Extraction System (cTAKES) is an open-source natural language processing system for information extraction from electronic medical record clinical free-text.\nNLP4J - The NLP4J project provides software and resources for natural language processing. The project started at the Center for Computational Language and EducAtion Research, and is currently developed by the Center for Language and Information Research at Emory University. [Deprecated]\nCogcompNLP - This project collects a number of core libraries for Natural Language Processing (NLP) developed in the University of Illinois' Cognitive Computation Group, for example illinois-core-utilities which provides a set of NLP-friendly data structures and a number of NLP-related utilities that support writing NLP applications, running experiments, etc, illinois-edison a library for feature extraction from illinois-core-utilities data structures and many other packages.\n\n\nGeneral-Purpose Machine Learning\n\naerosolve - A machine learning library by Airbnb designed from the ground up to be human friendly.\nAMIDST Toolbox - A Java Toolbox for Scalable Probabilistic Machine Learning.\nDatumbox - Machine Learning framework for rapid development of Machine Learning and Statistical applications.\nELKI - Java toolkit for data mining. (unsupervised: clustering, outlier detection etc.)\nEncog - An advanced neural network and machine learning framework. Encog contains classes to create a wide variety of networks, as well as support classes to normalize and process data for these neural networks. Encog trains using multithreaded resilient propagation. Encog can also make use of a GPU to further speed processing time. A GUI based workbench is also provided to help model and train neural networks.\nFlinkML in Apache Flink - Distributed machine learning library in Flink.\nH2O - ML engine that supports distributed learning on Hadoop, Spark or your laptop via APIs in R, Python, Scala, REST/JSON.\nhtm.java - General Machine Learning library using Numenta\u2019s Cortical Learning Algorithm.\nliblinear-java - Java version of liblinear.\nMahout - Distributed machine learning.\nMeka - An open source implementation of methods for multi-label classification and evaluation (extension to Weka).\nMLlib in Apache Spark - Distributed machine learning library in Spark\nHydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.\nNeuroph - Neuroph is lightweight Java neural network framework\nORYX - Lambda Architecture Framework using Apache Spark and Apache Kafka with a specialization for real-time large-scale machine learning.\nSamoa SAMOA is a framework that includes distributed machine learning for data streams with an interface to plug-in different stream processing platforms.\nRankLib - RankLib is a library of learning to rank algorithms. [Deprecated]\nrapaio - statistics, data mining and machine learning toolbox in Java.\nRapidMiner - RapidMiner integration into Java code.\nStanford Classifier - A classifier is a machine learning tool that will take data items and place them into one of k classes.\nSmileMiner - Statistical Machine Intelligence & Learning Engine.\nSystemML - flexible, scalable machine learning (ML) language.\nWeka - Weka is a collection of machine learning algorithms for data mining tasks.\nLBJava - Learning Based Java is a modeling language for the rapid development of software systems, offers a convenient, declarative syntax for classifier and constraint definition directly in terms of the objects in the programmer's application.\n\n\nSpeech Recognition\n\nCMU Sphinx - Open Source Toolkit For Speech Recognition purely based on Java speech recognition library.\n\n\nData Analysis / Data Visualization\n\nFlink - Open source platform for distributed stream and batch data processing.\nHadoop - Hadoop/HDFS.\nOnyx - Distributed, masterless, high performance, fault tolerant data processing. Written entirely in Clojure.\nSpark - Spark is a fast and general engine for large-scale data processing.\nStorm - Storm is a distributed realtime computation system.\nImpala - Real-time Query for Hadoop.\nDataMelt - Mathematics software for numeric computation, statistics, symbolic calculations, data analysis and data visualization.\nDr. Michael Thomas Flanagan's Java Scientific Library [Deprecated]\n\n\nDeep Learning\n\nDeeplearning4j - Scalable deep learning for industry with parallel GPUs.\nKeras Beginner Tutorial - Friendly guide on using Keras to implement a simple Neural Network in Python\n\n\nJavascript\n\nNatural Language Processing\n\nTwitter-text - A JavaScript implementation of Twitter's text processing library.\nnatural - General natural language facilities for node.\nKnwl.js - A Natural Language Processor in JS.\nRetext - Extensible system for analyzing and manipulating natural language.\nNLP Compromise - Natural Language processing in the browser.\nnlp.js - An NLP library built in node over Natural, with entity extraction, sentiment analysis, automatic language identify, and so more\n\n\nData Analysis / Data Visualization\n\nD3.js\nHigh Charts\nNVD3.js\ndc.js\nchartjs\ndimple\namCharts\nD3xter - Straight forward plotting built on D3. [Deprecated]\nstatkit - Statistics kit for JavaScript. [Deprecated]\ndatakit - A lightweight framework for data analysis in JavaScript\nscience.js - Scientific and statistical computing in JavaScript. [Deprecated]\nZ3d - Easily make interactive 3d plots built on Three.js [Deprecated]\nSigma.js - JavaScript library dedicated to graph drawing.\nC3.js - customizable library based on D3.js for easy chart drawing.\nDatamaps - Customizable SVG map/geo visualizations using D3.js. [Deprecated]\nZingChart - library written on Vanilla JS for big data visualization.\ncheminfo - Platform for data visualization and analysis, using the visualizer project.\nLearn JS Data\nAnyChart\nFusionCharts\nNivo - built on top of the awesome d3 and Reactjs libraries\n\n\nGeneral-Purpose Machine Learning\n\nAuto ML - Automated machine learning, data formatting, ensembling, and hyperparameter optimization for competitions and exploration- just give it a .csv file!\nConvnet.js - ConvNetJS is a Javascript library for training Deep Learning models[DEEP LEARNING] [Deprecated]\nClusterfck - Agglomerative hierarchical clustering implemented in Javascript for Node.js and the browser. [Deprecated]\nClustering.js - Clustering algorithms implemented in Javascript for Node.js and the browser. [Deprecated]\nDecision Trees - NodeJS Implementation of Decision Tree using ID3 Algorithm. [Deprecated]\nDN2A - Digital Neural Networks Architecture. [Deprecated]\nfigue - K-means, fuzzy c-means and agglomerative clustering.\nGaussian Mixture Model - Unsupervised machine learning with multivariate Gaussian mixture model.\nNode-fann - FANN (Fast Artificial Neural Network Library) bindings for Node.js [Deprecated]\nKeras.js - Run Keras models in the browser, with GPU support provided by WebGL 2.\nKmeans.js - Simple Javascript implementation of the k-means algorithm, for node.js and the browser. [Deprecated]\nLDA.js - LDA topic modeling for Node.js\nLearning.js - Javascript implementation of logistic regression/c4.5 decision tree [Deprecated]\nmachinelearn.js - Machine Learning library for the web, Node.js and developers\nmil-tokyo - List of several machine learning libraries.\nNode-SVM - Support Vector Machine for Node.js\nBrain - Neural networks in JavaScript [Deprecated]\nBrain.js - Neural networks in JavaScript - continued community fork of Brain.\nBayesian-Bandit - Bayesian bandit implementation for Node and the browser. [Deprecated]\nSynaptic - Architecture-free neural network library for Node.js and the browser.\nkNear - JavaScript implementation of the k nearest neighbors algorithm for supervised learning.\nNeuralN - C++ Neural Network library for Node.js. It has advantage on large dataset and multi-threaded training. [Deprecated]\nkalman - Kalman filter for Javascript. [Deprecated]\nshaman - Node.js library with support for both simple and multiple linear regression. [Deprecated]\nml.js - Machine learning and numerical analysis tools for Node.js and the Browser!\nml5 - Friendly machine learning for the web!\nPavlov.js - Reinforcement learning using Markov Decision Processes.\nMXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nTensorFlow.js - A WebGL accelerated, browser based JavaScript library for training and deploying ML models.\nJSMLT - Machine learning toolkit with classification and clustering for Node.js; supports visualization (see visualml.io).\nxgboost-node - Run XGBoost model and make predictions in Node.js.\nNetron - Visualizer for machine learning models.\nWebDNN - Fast Deep Neural Network Javascript Framework. WebDNN uses next generation JavaScript API, WebGPU for GPU execution, and WebAssembly for CPU execution.\n\n\nMisc\n\nstdlib - A standard library for JavaScript and Node.js, with an emphasis on numeric computing. The library provides a collection of robust, high performance libraries for mathematics, statistics, streams, utilities, and more.\nsylvester - Vector and Matrix math for JavaScript. [Deprecated]\nsimple-statistics - A JavaScript implementation of descriptive, regression, and inference statistics. Implemented in literate JavaScript with no dependencies, designed to work in all modern browsers (including IE) as well as in Node.js.\nregression-js - A javascript library containing a collection of least squares fitting methods for finding a trend in a set of data.\nLyric - Linear Regression library. [Deprecated]\nGreatCircle - Library for calculating great circle distance.\nMLPleaseHelp - MLPleaseHelp is a simple ML resource search engine. You can use this search engine right now at https://jgreenemi.github.io/MLPleaseHelp/, provided via Github Pages.\n\n\nDemos and Scripts\n\nThe Bot - Example of how the neural network learns to predict the angle between two points created with Synaptic.\nHalf Beer - Beer glass classifier created with Synaptic.\nNSFWJS - Indecent content checker with TensorFlow.js\nRock Paper Scissors - Rock Paper Scissors trained in the browser with TensorFlow.js\n\n\nJulia\n\nGeneral-Purpose Machine Learning\n\nMachineLearning - Julia Machine Learning library. [Deprecated]\nMLBase - A set of functions to support the development of machine learning algorithms.\nPGM - A Julia framework for probabilistic graphical models.\nDA - Julia package for Regularized Discriminant Analysis.\nRegression - Algorithms for regression analysis (e.g. linear regression and logistic regression). [Deprecated]\nLocal Regression - Local regression, so smooooth!\nNaive Bayes - Simple Naive Bayes implementation in Julia. [Deprecated]\nMixed Models - A Julia package for fitting (statistical) mixed-effects models.\nSimple MCMC - basic mcmc sampler implemented in Julia. [Deprecated]\nDistances - Julia module for Distance evaluation.\nDecision Tree - Decision Tree Classifier and Regressor.\nNeural - A neural network in Julia.\nMCMC - MCMC tools for Julia. [Deprecated]\nMamba - Markov chain Monte Carlo (MCMC) for Bayesian analysis in Julia.\nGLM - Generalized linear models in Julia.\nGaussian Processes - Julia package for Gaussian processes.\nOnline Learning [Deprecated]\nGLMNet - Julia wrapper for fitting Lasso/ElasticNet GLM models using glmnet.\nClustering - Basic functions for clustering data: k-means, dp-means, etc.\nSVM - SVM's for Julia. [Deprecated]\nKernel Density - Kernel density estimators for julia.\nMultivariateStats - Methods for dimensionality reduction.\nNMF - A Julia package for non-negative matrix factorization.\nANN - Julia artificial neural networks. [Deprecated]\nMocha - Deep Learning framework for Julia inspired by Caffe. [Deprecated]\nXGBoost - eXtreme Gradient Boosting Package in Julia.\nManifoldLearning - A Julia package for manifold learning and nonlinear dimensionality reduction.\nMXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nMerlin - Flexible Deep Learning Framework in Julia.\nROCAnalysis - Receiver Operating Characteristics and functions for evaluation probabilistic binary classifiers.\nGaussianMixtures - Large scale Gaussian Mixture Models.\nScikitLearn - Julia implementation of the scikit-learn API.\nKnet - Ko\u00e7 University Deep Learning Framework.\nFlux - Relax! Flux is the ML library that doesn't make you tensor\n\n\nNatural Language Processing\n\nTopic Models - TopicModels for Julia. [Deprecated]\nText Analysis - Julia package for text analysis.\nWord Tokenizers - Tokenizers for Natural Language Processing in Julia\nCorpus Loaders - A julia package providing a variety of loaders for various NLP corpora.\nEmbeddings - Functions and data dependencies for loading various word embeddings\nLanguages - Julia package for working with various human languages\nWordNet - A Julia package for Princeton's WordNet\n\n\nData Analysis / Data Visualization\n\nGraph Layout - Graph layout algorithms in pure Julia.\nLightGraphs - Graph modeling and analysis.\nData Frames Meta - Metaprogramming tools for DataFrames.\nJulia Data - library for working with tabular data in Julia. [Deprecated]\nData Read - Read files from Stata, SAS, and SPSS.\nHypothesis Tests - Hypothesis tests for Julia.\nGadfly - Crafty statistical graphics for Julia.\nStats - Statistical tests for Julia.\nRDataSets - Julia package for loading many of the data sets available in R.\nDataFrames - library for working with tabular data in Julia.\nDistributions - A Julia package for probability distributions and associated functions.\nData Arrays - Data structures that allow missing values. [Deprecated]\nTime Series - Time series toolkit for Julia.\nSampling - Basic sampling algorithms for Julia.\n\n\nMisc Stuff / Presentations\n\nDSP - Digital Signal Processing (filtering, periodograms, spectrograms, window functions).\nJuliaCon Presentations - Presentations for JuliaCon.\nSignalProcessing - Signal Processing tools for Julia.\nImages - An image library for Julia.\nDataDeps - Reproducible data setup for reproducible science.\n\n\nLua\n\nGeneral-Purpose Machine Learning\n\nTorch7\n\ncephes - Cephes mathematical functions library, wrapped for Torch. Provides and wraps the 180+ special mathematical functions from the Cephes mathematical library, developed by Stephen L. Moshier. It is used, among many other places, at the heart of SciPy. [Deprecated]\nautograd - Autograd automatically differentiates native Torch code. Inspired by the original Python version.\ngraph - Graph package for Torch. [Deprecated]\nrandomkit - Numpy's randomkit, wrapped for Torch. [Deprecated]\nsignal - A signal processing toolbox for Torch-7. FFT, DCT, Hilbert, cepstrums, stft.\nnn - Neural Network package for Torch.\ntorchnet - framework for torch which provides a set of abstractions aiming at encouraging code re-use as well as encouraging modular programming.\nnngraph - This package provides graphical computation for nn library in Torch7.\nnnx - A completely unstable and experimental package that extends Torch's builtin nn library.\nrnn - A Recurrent Neural Network library that extends Torch's nn. RNNs, LSTMs, GRUs, BRNNs, BLSTMs, etc.\ndpnn - Many useful features that aren't part of the main nn package.\ndp - A deep learning library designed for streamlining research and development using the Torch7 distribution. It emphasizes flexibility through the elegant use of object-oriented design patterns. [Deprecated]\noptim - An optimization library for Torch. SGD, Adagrad, Conjugate-Gradient, LBFGS, RProp and more.\nunsup - A package for unsupervised learning in Torch. Provides modules that are compatible with nn (LinearPsd, ConvPsd, AutoEncoder, ...), and self-contained algorithms (k-means, PCA). [Deprecated]\nmanifold - A package to manipulate manifolds.\nsvm - Torch-SVM library. [Deprecated]\nlbfgs - FFI Wrapper for liblbfgs. [Deprecated]\nvowpalwabbit - An old vowpalwabbit interface to torch. [Deprecated]\nOpenGM - OpenGM is a C++ library for graphical modeling, and inference. The Lua bindings provide a simple way of describing graphs, from Lua, and then optimizing them with OpenGM. [Deprecated]\nspaghetti - Spaghetti (sparse linear) module for torch7 by @MichaelMathieu [Deprecated]\nLuaSHKit - A lua wrapper around the Locality sensitive hashing library SHKit [Deprecated]\nkernel smoothing - KNN, kernel-weighted average, local linear regression smoothers. [Deprecated]\ncutorch - Torch CUDA Implementation.\ncunn - Torch CUDA Neural Network Implementation.\nimgraph - An image/graph library for Torch. This package provides routines to construct graphs on images, segment them, build trees out of them, and convert them back to images. [Deprecated]\nvideograph - A video/graph library for Torch. This package provides routines to construct graphs on videos, segment them, build trees out of them, and convert them back to videos. [Deprecated]\nsaliency - code and tools around integral images. A library for finding interest points based on fast integral histograms. [Deprecated]\nstitch - allows us to use hugin to stitch images and apply same stitching to a video sequence. [Deprecated]\nsfm - A bundle adjustment/structure from motion package. [Deprecated]\nfex - A package for feature extraction in Torch. Provides SIFT and dSIFT modules. [Deprecated]\nOverFeat - A state-of-the-art generic dense feature extractor. [Deprecated]\nwav2letter - a simple and efficient end-to-end Automatic Speech Recognition (ASR) system from Facebook AI Research.\n\n\nNumeric Lua\nLunatic Python\nSciLua\nLua - Numerical Algorithms [Deprecated]\nLunum [Deprecated]\n\n\nDemos and Scripts\n\nCore torch7 demos repository.\n\nlinear-regression, logistic-regression\nface detector (training and detection as separate demos)\nmst-based-segmenter\ntrain-a-digit-classifier\ntrain-autoencoder\noptical flow demo\ntrain-on-housenumbers\ntrain-on-cifar\ntracking with deep nets\nkinect demo\nfilter-bank visualization\nsaliency-networks\n\n\nTraining a Convnet for the Galaxy-Zoo Kaggle challenge(CUDA demo)\nMusic Tagging - Music Tagging scripts for torch7.\ntorch-datasets - Scripts to load several popular datasets including:\n\nBSR 500\nCIFAR-10\nCOIL\nStreet View House Numbers\nMNIST\nNORB\n\n\nAtari2600 - Scripts to generate a dataset with static frames from the Arcade Learning Environment.\n\n\nMatlab\n\nComputer Vision\n\nContourlets - MATLAB source code that implements the contourlet transform and its utility functions.\nShearlets - MATLAB code for shearlet transform.\nCurvelets - The Curvelet transform is a higher dimensional generalization of the Wavelet transform designed to represent images at different scales and different angles.\nBandlets - MATLAB code for bandlet transform.\nmexopencv - Collection and a development kit of MATLAB mex functions for OpenCV library.\n\n\nNatural Language Processing\n\nNLP - An NLP library for Matlab.\n\n\nGeneral-Purpose Machine Learning\n\nTraining a deep autoencoder or a classifier\non MNIST digits - Training a deep autoencoder or a classifier\non MNIST digits[DEEP LEARNING].\nConvolutional-Recursive Deep Learning for 3D Object Classification - Convolutional-Recursive Deep Learning for 3D Object Classification[DEEP LEARNING].\nSpider - The spider is intended to be a complete object orientated environment for machine learning in Matlab.\nLibSVM - A Library for Support Vector Machines.\nThunderSVM - An Open-Source SVM Library on GPUs and CPUs\nLibLinear - A Library for Large Linear Classification.\nMachine Learning Module - Class on machine w/ PDF, lectures, code\nCaffe - A deep learning framework developed with cleanliness, readability, and speed in mind.\nPattern Recognition Toolbox - A complete object-oriented environment for machine learning in Matlab.\nPattern Recognition and Machine Learning - This package contains the matlab implementation of the algorithms described in the book Pattern Recognition and Machine Learning by C. Bishop.\nOptunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search. Optunity is written in Python but interfaces seamlessly with MATLAB.\nMXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nMachine Learning in MatLab/Octave - examples of popular machine learning algorithms (neural networks, linear/logistic regressions, K-Means, etc.) with code examples and mathematics behind them being explained.\n\n\nData Analysis / Data Visualization\n\nmatlab_bgl - MatlabBGL is a Matlab package for working with graphs.\ngaimc - Efficient pure-Matlab implementations of graph algorithms to complement MatlabBGL's mex functions.\n\n\n.NET\n\nComputer Vision\n\nOpenCVDotNet - A wrapper for the OpenCV project to be used with .NET applications.\nEmgu CV - Cross platform wrapper of OpenCV which can be compiled in Mono to be run on Windows, Linus, Mac OS X, iOS, and Android.\nAForge.NET - Open source C# framework for developers and researchers in the fields of Computer Vision and Artificial Intelligence. Development has now shifted to GitHub.\nAccord.NET - Together with AForge.NET, this library can provide image processing and computer vision algorithms to Windows, Windows RT and Windows Phone. Some components are also available for Java and Android.\n\n\nNatural Language Processing\n\nStanford.NLP for .NET - A full port of Stanford NLP packages to .NET and also available precompiled as a NuGet package.\n\n\nGeneral-Purpose Machine Learning\n\nAccord-Framework -The Accord.NET Framework is a complete framework for building machine learning, computer vision, computer audition, signal processing and statistical applications.\nAccord.MachineLearning - Support Vector Machines, Decision Trees, Naive Bayesian models, K-means, Gaussian Mixture models and general algorithms such as Ransac, Cross-validation and Grid-Search for machine-learning applications. This package is part of the Accord.NET Framework.\nDiffSharp - An automatic differentiation (AD) library providing exact and efficient derivatives (gradients, Hessians, Jacobians, directional derivatives, and matrix-free Hessian- and Jacobian-vector products) for machine learning and optimization applications. Operations can be nested to any level, meaning that you can compute exact higher-order derivatives and differentiate functions that are internally making use of differentiation, for applications such as hyperparameter optimization.\nEncog - An advanced neural network and machine learning framework. Encog contains classes to create a wide variety of networks, as well as support classes to normalize and process data for these neural networks. Encog trains using multithreaded resilient propagation. Encog can also make use of a GPU to further speed processing time. A GUI based workbench is also provided to help model and train neural networks.\nGeneticSharp - Multi-platform genetic algorithm library for .NET Core and .NET Framework. The library has several implementations of GA operators, like: selection, crossover, mutation, reinsertion and termination.\nInfer.NET - Infer.NET is a framework for running Bayesian inference in graphical models. One can use Infer.NET to solve many different kinds of machine learning problems, from standard problems like classification, recommendation or clustering through to customised solutions to domain-specific problems. Infer.NET has been used in a wide variety of domains including information retrieval, bioinformatics, epidemiology, vision, and many others.\nML.NET - ML.NET is a cross-platform open-source machine learning framework which makes machine learning accessible to .NET developers. ML.NET was originally developed in Microsoft Research and evolved into a significant framework over the last decade and is used across many product groups in Microsoft like Windows, Bing, PowerPoint, Excel and more.\nNeural Network Designer - DBMS management system and designer for neural networks. The designer application is developed using WPF, and is a user interface which allows you to design your neural network, query the network, create and configure chat bots that are capable of asking questions and learning from your feed back. The chat bots can even scrape the internet for information to return in their output as well as to use for learning.\nSynapses - Neural network library in F#.\nVulpes - Deep belief and deep learning implementation written in F# and leverages CUDA GPU execution with Alea.cuBase.\n\n\nData Analysis / Data Visualization\n\nnuml - numl is a machine learning library intended to ease the use of using standard modeling techniques for both prediction and clustering.\nMath.NET Numerics - Numerical foundation of the Math.NET project, aiming to provide methods and algorithms for numerical computations in science, engineering and every day use. Supports .Net 4.0, .Net 3.5 and Mono on Windows, Linux and Mac; Silverlight 5, WindowsPhone/SL 8, WindowsPhone 8.1 and Windows 8 with PCL Portable Profiles 47 and 344; Android/iOS with Xamarin.\nSho - Sho is an interactive environment for data analysis and scientific computing that lets you seamlessly connect scripts (in IronPython) with compiled code (in .NET) to enable fast and flexible prototyping. The environment includes powerful and efficient libraries for linear algebra as well as data visualization that can be used from any .NET language, as well as a feature-rich interactive shell for rapid development.\n\n\nObjective C\n\nGeneral-Purpose Machine Learning\n\nYCML - A Machine Learning framework for Objective-C and Swift (OS X / iOS).\nMLPNeuralNet - Fast multilayer perceptron neural network library for iOS and Mac OS X. MLPNeuralNet predicts new examples by trained neural network. It is built on top of the Apple's Accelerate Framework, using vectorized operations and hardware acceleration if available. [Deprecated]\nMAChineLearning - An Objective-C multilayer perceptron library, with full support for training through backpropagation. Implemented using vDSP and vecLib, it's 20 times faster than its Java equivalent. Includes sample code for use from Swift.\nBPN-NeuralNetwork - It implemented 3 layers neural network ( Input Layer, Hidden Layer and Output Layer ) and it named Back Propagation Neural Network (BPN). This network can be used in products recommendation, user behavior analysis, data mining and data analysis. [Deprecated]\nMulti-Perceptron-NeuralNetwork - it implemented multi-perceptrons neural network (\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af) based on Back Propagation Neural Network (BPN) and designed unlimited-hidden-layers.\nKRHebbian-Algorithm - It is a non-supervisor and self-learning algorithm (adjust the weights) in neural network of Machine Learning. [Deprecated]\nKRKmeans-Algorithm - It implemented K-Means the clustering and classification algorithm. It could be used in data mining and image compression. [Deprecated]\nKRFuzzyCMeans-Algorithm - It implemented Fuzzy C-Means (FCM) the fuzzy clustering / classification algorithm on Machine Learning. It could be used in data mining and image compression. [Deprecated]\n\n\nOCaml\n\nGeneral-Purpose Machine Learning\n\nOml - A general statistics and machine learning library.\nGPR - Efficient Gaussian Process Regression in OCaml.\nLibra-Tk - Algorithms for learning and inference with discrete probabilistic models.\nTensorFlow - OCaml bindings for TensorFlow.\n\n\nPerl\n\nData Analysis / Data Visualization\n\nPerl Data Language, a pluggable architecture for data and image processing, which can\nbe used for machine learning.\n\n\nGeneral-Purpose Machine Learning\n\nMXnet for Deep Learning, in Perl,\nalso released in CPAN.\nPerl Data Language,\nusing AWS machine learning platform from Perl.\nAlgorithm::SVMLight,\nimplementation of Support Vector Machines with SVMLight under it. [Deprecated]\nSeveral machine learning and artificial intelligence models are\nincluded in the AI\nnamespace. For instance, you can\nfind Na\u00efve Bayes.\n\n\nPerl 6\n\nSupport Vector Machines\nNa\u00efve Bayes\n\nData Analysis / Data Visualization\n\nPerl Data Language,\na pluggable architecture for data and image processing, which can\nbe\nused for machine learning.\n\nGeneral-Purpose Machine Learning\n\nPHP\n\nNatural Language Processing\n\njieba-php - Chinese Words Segmentation Utilities.\n\n\nGeneral-Purpose Machine Learning\n\nPHP-ML - Machine Learning library for PHP. Algorithms, Cross Validation, Neural Network, Preprocessing, Feature Extraction and much more in one library.\nPredictionBuilder - A library for machine learning that builds predictions using a linear regression.\nRubix ML - A high-level machine learning (ML) library that lets you build programs that learn from data using the PHP language.\n19 Questions - A machine learning / bayesian inference assigning attributes to objects.\n\n\nPython\n\nComputer Vision\n\nScikit-Image - A collection of algorithms for image processing in Python.\nSimpleCV - An open source computer vision framework that gives access to several high-powered computer vision libraries, such as OpenCV. Written on Python and runs on Mac, Windows, and Ubuntu Linux.\nVigranumpy - Python bindings for the VIGRA C++ computer vision library.\nOpenFace - Free and open source face recognition with deep neural networks.\nPCV - Open source Python module for computer vision. [Deprecated]\nface_recognition - Face recognition library that recognize and manipulate faces from Python or from the command line.\ndockerface - Easy to install and use deep learning Faster R-CNN face detection for images and video in a docker container.\nDetectron - FAIR's software system that implements state-of-the-art object detection algorithms, including Mask R-CNN. It is written in Python and powered by the Caffe2 deep learning framework.\nalbumentations - \u0410 fast and framework agnostic image augmentation library that implements a diverse set of augmentation techniques. Supports classification, segmentation, detection out of the box. Was used to win a number of Deep Learning competitions at Kaggle, Topcoder and those that were a part of the CVPR workshops.\npytessarct - Python-tesseract is an optical character recognition (OCR) tool for python. That is, it will recognize and \"read\" the text embedded in images.Python-tesseract is a wrapper for Google's Tesseract-OCR Engine>.\nimutils - A library containg Convenience functions to make basic image processing operations such as translation, rotation, resizing, skeletonization, and displaying Matplotlib images easier with OpenCV and Python.\nPyTorchCV - A PyTorch-Based Framework for Deep Learning in Computer Vision.\nneural-style-pt - A PyTorch implementation of Justin Johnson's neural-style (neural style transfer).\n\n\nNatural Language Processing\n\npkuseg-python - A better version of Jieba, developed by Peking University.\nNLTK - A leading platform for building Python programs to work with human language data.\nPattern - A web mining module for the Python programming language. It has tools for natural language processing, machine learning, among others.\nQuepy - A python framework to transform natural language questions to queries in a database query language.\nTextBlob - Providing a consistent API for diving into common natural language processing (NLP) tasks. Stands on the giant shoulders of NLTK and Pattern, and plays nicely with both.\nYAlign - A sentence aligner, a friendly tool for extracting parallel sentences from comparable corpora. [Deprecated]\njieba - Chinese Words Segmentation Utilities.\nSnowNLP - A library for processing Chinese text.\nspammy - A library for email Spam filtering built on top of nltk\nloso - Another Chinese segmentation library. [Deprecated]\ngenius - A Chinese segment base on Conditional Random Field.\nKoNLPy - A Python package for Korean natural language processing.\nnut - Natural language Understanding Toolkit. [Deprecated]\nRosetta - Text processing tools and wrappers (e.g. Vowpal Wabbit)\nBLLIP Parser - Python bindings for the BLLIP Natural Language Parser (also known as the Charniak-Johnson parser). [Deprecated]\nPyNLPl - Python Natural Language Processing Library. General purpose NLP library for Python. Also contains some specific modules for parsing common NLP formats, most notably for FoLiA, but also ARPA language models, Moses phrasetables, GIZA++ alignments.\npython-ucto - Python binding to ucto (a unicode-aware rule-based tokenizer for various languages).\npython-frog - Python binding to Frog, an NLP suite for Dutch. (pos tagging, lemmatisation, dependency parsing, NER)\npython-zpar - Python bindings for ZPar, a statistical part-of-speech-tagger, constiuency parser, and dependency parser for English.\ncolibri-core - Python binding to C++ library for extracting and working with with basic linguistic constructions such as n-grams and skipgrams in a quick and memory-efficient way.\nspaCy - Industrial strength NLP with Python and Cython.\nPyStanfordDependencies - Python interface for converting Penn Treebank trees to Stanford Dependencies.\nDistance - Levenshtein and Hamming distance computation. [Deprecated]\nFuzzy Wuzzy - Fuzzy String Matching in Python.\njellyfish - a python library for doing approximate and phonetic matching of strings.\neditdistance - fast implementation of edit distance.\ntextacy - higher-level NLP built on Spacy.\nstanford-corenlp-python - Python wrapper for Stanford CoreNLP [Deprecated]\nCLTK - The Classical Language Toolkit.\nrasa_nlu - turn natural language into structured data.\nyase - Transcode sentence (or other sequence) to list of word vector .\nPolyglot - Multilingual text (NLP) processing toolkit.\nDrQA - Reading Wikipedia to answer open-domain questions.\nDedupe - A python library for accurate and scalable fuzzy matching, record deduplication and entity-resolution.\nSnips NLU - Natural Language Understanding library for intent classification and entity extraction\nNeuroNER - Named-entity recognition using neural networks providing state-of-the-art-results\nDeepPavlov - conversational AI library with many pretrained Russian NLP models.\nBigARTM - topic modelling platform.\n\n\nGeneral-Purpose Machine Learning\n\nPyOD -> Python Outlier Detection, comprehensive and scalable Python toolkit for detecting outlying objects in multivariate data. Featured for Advanced models, including Neural Networks/Deep Learning and Outlier Ensembles.\nsteppy -> Lightweight, Python library for fast and reproducible machine learning experimentation. Introduces very simple interface that enables clean machine learning pipeline design.\nsteppy-toolkit -> Curated collection of the neural networks, transformers and models that make your machine learning work faster and more effective.\nCNTK - Microsoft Cognitive Toolkit (CNTK), an open source deep-learning toolkit. Documentation can be found here.\nauto_ml - Automated machine learning for production and analytics. Lets you focus on the fun parts of ML, while outputting production-ready code, and detailed analytics of your dataset and results. Includes support for NLP, XGBoost, CatBoost, LightGBM, and soon, deep learning.\nmachine learning - automated build consisting of a web-interface, and set of programmatic-interface API, for support vector machines. Corresponding dataset(s) are stored into a SQL database, then generated model(s) used for prediction(s), are stored into a NoSQL datastore.\nXGBoost - Python bindings for eXtreme Gradient Boosting (Tree) Library.\nApache SINGA - An Apache Incubating project for developing an open source machine learning library.\nBayesian Methods for Hackers - Book/iPython notebooks on Probabilistic Programming in Python.\nFeatureforge A set of tools for creating and testing machine learning features, with a scikit-learn compatible API.\nMLlib in Apache Spark - Distributed machine learning library in Spark\nHydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.\nscikit-learn - A Python module for machine learning built on top of SciPy.\nmetric-learn - A Python module for metric learning.\nSimpleAI Python implementation of many of the artificial intelligence algorithms described on the book \"Artificial Intelligence, a Modern Approach\". It focuses on providing an easy to use, well documented and tested library.\nastroML - Machine Learning and Data Mining for Astronomy.\ngraphlab-create - A library with various machine learning models (regression, clustering, recommender systems, graph analytics, etc.) implemented on top of a disk-backed DataFrame.\nBigML - A library that contacts external servers.\npattern - Web mining module for Python.\nNuPIC - Numenta Platform for Intelligent Computing.\nPylearn2 - A Machine Learning library based on Theano. [Deprecated]\nkeras - High-level neural networks frontend for TensorFlow, CNTK and Theano.\nLasagne - Lightweight library to build and train neural networks in Theano.\nhebel - GPU-Accelerated Deep Learning Library in Python. [Deprecated]\nChainer - Flexible neural network framework.\nprophet - Fast and automated time series forecasting framework by Facebook.\ngensim - Topic Modelling for Humans.\ntopik - Topic modelling toolkit. [Deprecated]\nPyBrain - Another Python Machine Learning Library.\nBrainstorm - Fast, flexible and fun neural networks. This is the successor of PyBrain.\nSurprise - A scikit for building and analyzing recommender systems.\nCrab - A flexible, fast recommender engine. [Deprecated]\npython-recsys - A Python library for implementing a Recommender System.\nthinking bayes - Book on Bayesian Analysis.\nImage-to-Image Translation with Conditional Adversarial Networks - Implementation of image to image (pix2pix) translation from the paper by isola et al.[DEEP LEARNING]\nRestricted Boltzmann Machines -Restricted Boltzmann Machines in Python. [DEEP LEARNING]\nBolt - Bolt Online Learning Toolbox. [Deprecated]\nCoverTree - Python implementation of cover trees, near-drop-in replacement for scipy.spatial.kdtree [Deprecated]\nnilearn - Machine learning for NeuroImaging in Python.\nneuropredict - Aimed at novice machine learners and non-expert programmers, this package offers easy (no coding needed) and comprehensive machine learning (evaluation and full report of predictive performance WITHOUT requiring you to code) in Python for NeuroImaging and any other type of features. This is aimed at absorbing the much of the ML workflow, unlike other packages like nilearn and pymvpa, which require you to learn their API and code to produce anything useful.\nimbalanced-learn - Python module to perform under sampling and over sampling with various techniques.\nShogun - The Shogun Machine Learning Toolbox.\nPyevolve - Genetic algorithm framework. [Deprecated]\nCaffe - A deep learning framework developed with cleanliness, readability, and speed in mind.\nbreze - Theano based library for deep and recurrent neural networks.\nCortex - Open source platform for deploying machine learning models in production.\npyhsmm - library for approximate unsupervised inference in Bayesian Hidden Markov Models (HMMs) and explicit-duration Hidden semi-Markov Models (HSMMs), focusing on the Bayesian Nonparametric extensions, the HDP-HMM and HDP-HSMM, mostly with weak-limit approximations.\nmrjob - A library to let Python program run on Hadoop.\nSKLL - A wrapper around scikit-learn that makes it simpler to conduct experiments.\nneurolab\nSpearmint - Spearmint is a package to perform Bayesian optimization according to the algorithms outlined in the paper: Practical Bayesian Optimization of Machine Learning Algorithms. Jasper Snoek, Hugo Larochelle and Ryan P. Adams. Advances in Neural Information Processing Systems, 2012. [Deprecated]\nPebl - Python Environment for Bayesian Learning. [Deprecated]\nTheano - Optimizing GPU-meta-programming code generating array oriented optimizing math compiler in Python.\nTensorFlow - Open source software library for numerical computation using data flow graphs.\npomegranate - Hidden Markov Models for Python, implemented in Cython for speed and efficiency.\npython-timbl - A Python extension module wrapping the full TiMBL C++ programming interface. Timbl is an elaborate k-Nearest Neighbours machine learning toolkit.\ndeap - Evolutionary algorithm framework.\npydeep - Deep Learning In Python. [Deprecated]\nmlxtend - A library consisting of useful tools for data science and machine learning tasks.\nneon - Nervana's high-performance Python-based Deep Learning framework [DEEP LEARNING].\nOptunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search.\nNeural Networks and Deep Learning - Code samples for my book \"Neural Networks and Deep Learning\" [DEEP LEARNING].\nAnnoy - Approximate nearest neighbours implementation.\nTPOT - Tool that automatically creates and optimizes machine learning pipelines using genetic programming. Consider it your personal data science assistant, automating a tedious part of machine learning.\npgmpy A python library for working with Probabilistic Graphical Models.\nDIGITS - The Deep Learning GPU Training System (DIGITS) is a web application for training deep learning models.\nOrange - Open source data visualization and data analysis for novices and experts.\nMXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nmilk - Machine learning toolkit focused on supervised classification. [Deprecated]\nTFLearn - Deep learning library featuring a higher-level API for TensorFlow.\nREP - an IPython-based environment for conducting data-driven research in a consistent and reproducible way. REP is not trying to substitute scikit-learn, but extends it and provides better user experience. [Deprecated]\nrgf_python - Python bindings for Regularized Greedy Forest (Tree) Library.\nskbayes - Python package for Bayesian Machine Learning with scikit-learn API.\nfuku-ml - Simple machine learning library, including Perceptron, Regression, Support Vector Machine, Decision Tree and more, it's easy to use and easy to learn for beginners.\nXcessiv - A web-based application for quick, scalable, and automated hyperparameter tuning and stacked ensembling.\nPyTorch - Tensors and Dynamic neural networks in Python with strong GPU acceleration\nML-From-Scratch - Implementations of Machine Learning models from scratch in Python with a focus on transparency. Aims to showcase the nuts and bolts of ML in an accessible way.\nEdward - A library for probabilistic modeling, inference, and criticism. Built on top of TensorFlow.\nxRBM - A library for Restricted Boltzmann Machine (RBM) and its conditional variants in Tensorflow.\nCatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box. It is easy to install, well documented and supports CPU and GPU (even multi-GPU) computation.\nstacked_generalization - Implementation of machine learning stacking technic as handy library in Python.\nmodAL - A modular active learning framework for Python, built on top of scikit-learn.\nCogitare: A Modern, Fast, and Modular Deep Learning and Machine Learning framework for Python.\nParris - Parris, the automated infrastructure setup tool for machine learning algorithms.\nneonrvm - neonrvm is an open source machine learning library based on RVM technique. It's written in C programming language and comes with Python programming language bindings.\nTuri Create - Machine learning from Apple. Turi Create simplifies the development of custom machine learning models. You don't have to be a machine learning expert to add recommendations, object detection, image classification, image similarity or activity classification to your app.\nxLearn - A high performance, easy-to-use, and scalable machine learning package, which can be used to solve large-scale machine learning problems. xLearn is especially useful for solving machine learning problems on large-scale sparse data, which is very common in Internet services such as online advertisement and recommender systems.\nmlens - A high performance, memory efficient, maximally parallelized ensemble learning, integrated with scikit-learn.\nNetron - Visualizer for machine learning models.\nThampi - Machine Learning Prediction System on AWS Lambda\nMindsDB - Open Source framework to streamline use of neural networks.\nMicrosoft Recommenders: Examples and best practices for building recommendation systems, provided as Jupyter notebooks. The repo contains some of the latest state of the art algorithms from Microsoft Research as well as from other companies and institutions.\nStellarGraph: Machine Learning on Graphs, a Python library for machine learning on graph-structured (network-structured) data.\nBentoML: Toolkit for package and deploy machine learning models for serving in production\nMiraiML: An asynchronous engine for continuous & autonomous machine learning, built for real-time usage.\nnumpy-ML: Reference implementations of ML models written in numpy\ncreme: A framework for online machine learning.\nNeuraxle: A framework providing the right abstractions to ease research, development, and deployment of your ML pipelines.\nCornac - A comparative framework for multimodal recommender systems with a focus on models leveraging auxiliary data.\nJAX - JAX is Autograd and XLA, brought together for high-performance machine learning research.\nfast.ai - A library simplifies training fast and accurate neural nets using modern best practices and already supports  vision, text, tabular, and collab (collaborative filtering) models \"out of the box\"\nCatalyst - High-level utils for PyTorch DL & RL research. It was developed with a focus on reproducibility, fast experimentation and code/ideas reusing. Being able to research/develop something new, rather than write another regular train loop.\nFastai - High-level wrapper built on the top of Pytorch which supports vision, text, tabular data and collaborative filtering.\n\n\nData Analysis / Data Visualization\n\nSciPy - A Python-based ecosystem of open-source software for mathematics, science, and engineering.\nNumPy - A fundamental package for scientific computing with Python.\nNumba - Python JIT (just in time) compiler to LLVM aimed at scientific Python by the developers of Cython and NumPy.\nMars - A tensor-based framework for large-scale data computation which often regarded as a parallel and distributed version of NumPy.\nNetworkX - A high-productivity software for complex networks.\nigraph - binding to igraph library - General purpose graph library.\nPandas - A library providing high-performance, easy-to-use data structures and data analysis tools.\nOpen Mining - Business Intelligence (BI) in Python (Pandas web interface) [Deprecated]\nPyMC - Markov Chain Monte Carlo sampling toolkit.\nzipline - A Pythonic algorithmic trading library.\nPyDy - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion based around NumPy, SciPy, IPython, and matplotlib.\nSymPy - A Python library for symbolic mathematics.\nstatsmodels - Statistical modeling and econometrics in Python.\nastropy - A community Python library for Astronomy.\nmatplotlib - A Python 2D plotting library.\nbokeh - Interactive Web Plotting for Python.\nplotly - Collaborative web plotting for Python and matplotlib.\naltair - A Python to Vega translator.\nd3py - A plotting library for Python, based on D3.js.\nPyDexter - Simple plotting for Python. Wrapper for D3xterjs; easily render charts in-browser.\nggplot - Same API as ggplot2 for R. [Deprecated]\nggfortify - Unified interface to ggplot2 popular R packages.\nKartograph.py - Rendering beautiful SVG maps in Python.\npygal - A Python SVG Charts Creator.\nPyQtGraph - A pure-python graphics and GUI library built on PyQt4 / PySide and NumPy.\npycascading [Deprecated]\nPetrel - Tools for writing, submitting, debugging, and monitoring Storm topologies in pure Python.\nBlaze - NumPy and Pandas interface to Big Data.\nemcee - The Python ensemble sampling toolkit for affine-invariant MCMC.\nwindML - A Python Framework for Wind Energy Analysis and Prediction.\nvispy - GPU-based high-performance interactive OpenGL 2D/3D data visualization library.\ncerebro2 A web-based visualization and debugging platform for NuPIC. [Deprecated]\nNuPIC Studio An all-in-one NuPIC Hierarchical Temporal Memory visualization and debugging super-tool! [Deprecated]\nSparklingPandas Pandas on PySpark (POPS).\nSeaborn - A python visualization library based on matplotlib.\nbqplot - An API for plotting in Jupyter (IPython).\npastalog - Simple, realtime visualization of neural network training performance.\nSuperset - A data exploration platform designed to be visual, intuitive, and interactive.\nDora - Tools for exploratory data analysis in Python.\nRuffus - Computation Pipeline library for python.\nSOMPY - Self Organizing Map written in Python (Uses neural networks for data analysis).\nsomoclu Massively parallel self-organizing maps: accelerate training on multicore CPUs, GPUs, and clusters, has python API.\nHDBScan - implementation of the hdbscan algorithm in Python - used for clustering\nvisualize_ML - A python package for data exploration and data analysis. [Deprecated]\nscikit-plot - A visualization library for quick and easy generation of common plots in data analysis and machine learning.\nBowtie - A dashboard library for interactive visualizations using flask socketio and react.\nlime - Lime is about explaining what machine learning classifiers (or models) are doing. It is able to explain any black box classifier, with two or more classes.\nPyCM - PyCM is a multi-class confusion matrix library written in Python that supports both input data vectors and direct matrix, and a proper tool for post-classification model evaluation that supports most classes and overall statistics parameters\nDash - A framework for creating analytical web applications built on top of Plotly.js, React, and Flask\nLambdo - A workflow engine for solving machine learning problems by combining in one analysis pipeline (i) feature engineering and machine learning (ii) model training and prediction (iii) table population and column evaluation via user-defined (Python) functions.\nTensorWatch - Debugging and visualization tool for machine learning and data science. It extensively leverages Jupyter Notebook to show real-time visualizations of data in running processes such as machine learning training.\ndowel - A little logger for machine learning research. Output any object to the terminal, CSV, TensorBoard, text logs on disk, and more with just one call to logger.log().\n\n\nMisc Scripts / iPython Notebooks / Codebases\n\nMap/Reduce implementations of common ML algorithms: Jupyter notebooks that cover how to implement from scratch different ML algorithms (ordinary least squares, gradient descent, k-means, alternating least squares), using Python NumPy, and how to then make these implementations scalable using Map/Reduce and Spark.\nBioPy - Biologically-Inspired and Machine Learning Algorithms in Python. [Deprecated]\nSVM Explorer - Interactive SVM Explorer, using Dash and scikit-learn\npattern_classification\nthinking stats 2\nhyperopt\nnumpic\n2012-paper-diginorm\nA gallery of interesting IPython notebooks\nipython-notebooks\ndata-science-ipython-notebooks - Continually updated Data Science Python Notebooks: Spark, Hadoop MapReduce, HDFS, AWS, Kaggle, scikit-learn, matplotlib, pandas, NumPy, SciPy, and various command lines.\ndecision-weights\nSarah Palin LDA - Topic Modeling the Sarah Palin emails.\nDiffusion Segmentation - A collection of image segmentation algorithms based on diffusion methods.\nScipy Tutorials - SciPy tutorials. This is outdated, check out scipy-lecture-notes.\nCrab - A recommendation engine library for Python.\nBayesPy - Bayesian Inference Tools in Python.\nscikit-learn tutorials - Series of notebooks for learning scikit-learn.\nsentiment-analyzer - Tweets Sentiment Analyzer\nsentiment_classifier - Sentiment classifier using word sense disambiguation.\ngroup-lasso - Some experiments with the coordinate descent algorithm used in the (Sparse) Group Lasso model.\njProcessing - Kanji / Hiragana / Katakana to Romaji Converter. Edict Dictionary & parallel sentences Search. Sentence Similarity between two JP Sentences. Sentiment Analysis of Japanese Text. Run Cabocha(ISO--8859-1 configured) in Python.\nmne-python-notebooks - IPython notebooks for EEG/MEG data processing using mne-python.\nNeon Course - IPython notebooks for a complete course around understanding Nervana's Neon.\npandas cookbook - Recipes for using Python's pandas library.\nclimin - Optimization library focused on machine learning, pythonic implementations of gradient descent, LBFGS, rmsprop, adadelta and others.\nAllen Downey\u2019s Data Science Course - Code for Data Science at Olin College, Spring 2014.\nAllen Downey\u2019s Think Bayes Code - Code repository for Think Bayes.\nAllen Downey\u2019s Think Complexity Code - Code for Allen Downey's book Think Complexity.\nAllen Downey\u2019s Think OS Code - Text and supporting code for Think OS: A Brief Introduction to Operating Systems.\nPython Programming for the Humanities - Course for Python programming for the Humanities, assuming no prior knowledge. Heavy focus on text processing / NLP.\nGreatCircle - Library for calculating great circle distance.\nOptunity examples - Examples demonstrating how to use Optunity in synergy with machine learning libraries.\nDive into Machine Learning  with Python Jupyter notebook and scikit-learn - \"I learned Python by hacking first, and getting serious later. I wanted to do this with Machine Learning. If this is your style, join me in getting a bit ahead of yourself.\"\nTDB - TensorDebugger (TDB) is a visual debugger for deep learning. It features interactive, node-by-node debugging and visualization for TensorFlow.\nSuiron - Machine Learning for RC Cars.\nIntroduction to machine learning with scikit-learn - IPython notebooks from Data School's video tutorials on scikit-learn.\nPractical XGBoost in Python - comprehensive online course about using XGBoost in Python.\nIntroduction to Machine Learning with Python - Notebooks and code for the book \"Introduction to Machine Learning with Python\"\nPydata book - Materials and IPython notebooks for \"Python for Data Analysis\" by Wes McKinney, published by O'Reilly Media\nHomemade Machine Learning - Python examples of popular machine learning algorithms with interactive Jupyter demos and math being explained\nProdmodel - Build tool for data science pipelines.\nthe-elements-of-statistical-learning - This repository contains Jupyter notebooks implementing the algorithms found in the book and summary of the textbook.\n\n\nNeural Networks\n\nnn_builder - nn_builder is a python package that lets you build neural networks in 1 line\nNeuralTalk - NeuralTalk is a Python+numpy project for learning Multimodal Recurrent Neural Networks that describe images with sentences.\nNeuron - Neuron is simple class for time series predictions. It's utilize LNU (Linear Neural Unit), QNU (Quadratic Neural Unit), RBF (Radial Basis Function), MLP (Multi Layer Perceptron), MLP-ELM (Multi Layer Perceptron - Extreme Learning Machine) neural networks learned with Gradient descent or LeLevenberg\u2013Marquardt algorithm.\n=======\nNeuralTalk - NeuralTalk is a Python+numpy project for learning Multimodal Recurrent Neural Networks that describe images with sentences. [Deprecated]\nNeuron - Neuron is simple class for time series predictions. It's utilize LNU (Linear Neural Unit), QNU (Quadratic Neural Unit), RBF (Radial Basis Function), MLP (Multi Layer Perceptron), MLP-ELM (Multi Layer Perceptron - Extreme Learning Machine) neural networks learned with Gradient descent or LeLevenberg\u2013Marquardt algorithm. [Deprecated]\nData Driven Code - Very simple implementation of neural networks for dummies in python without using any libraries, with detailed comments.\nMachine Learning, Data Science and Deep Learning with Python - LiveVideo course that covers machine learning, Tensorflow, artificial intelligence, and neural networks.\n\n\nKaggle Competition Source Code\n\nopen-solution-home-credit -> source code and experiments results for Home Credit Default Risk.\nopen-solution-googleai-object-detection -> source code and experiments results for Google AI Open Images - Object Detection Track.\nopen-solution-salt-identification -> source code and experiments results for TGS Salt Identification Challenge.\nopen-solution-ship-detection -> source code and experiments results for Airbus Ship Detection Challenge.\nopen-solution-data-science-bowl-2018 -> source code and experiments results for 2018 Data Science Bowl.\nopen-solution-value-prediction -> source code and experiments results for Santander Value Prediction Challenge.\nopen-solution-toxic-comments -> source code for Toxic Comment Classification Challenge.\nwiki challenge - An implementation of Dell Zhang's solution to Wikipedia's Participation Challenge on Kaggle.\nkaggle insults - Kaggle Submission for \"Detecting Insults in Social Commentary\".\nkaggle_acquire-valued-shoppers-challenge - Code for the Kaggle acquire valued shoppers challenge.\nkaggle-cifar - Code for the CIFAR-10 competition at Kaggle, uses cuda-convnet.\nkaggle-blackbox - Deep learning made easy.\nkaggle-accelerometer - Code for Accelerometer Biometric Competition at Kaggle.\nkaggle-advertised-salaries - Predicting job salaries from ads - a Kaggle competition.\nkaggle amazon - Amazon access control challenge.\nkaggle-bestbuy_big - Code for the Best Buy competition at Kaggle.\nkaggle-bestbuy_small\nKaggle Dogs vs. Cats - Code for Kaggle Dogs vs. Cats competition.\nKaggle Galaxy Challenge - Winning solution for the Galaxy Challenge on Kaggle.\nKaggle Gender - A Kaggle competition: discriminate gender based on handwriting.\nKaggle Merck - Merck challenge at Kaggle.\nKaggle Stackoverflow - Predicting closed questions on Stack Overflow.\nkaggle_acquire-valued-shoppers-challenge - Code for the Kaggle acquire valued shoppers challenge.\nwine-quality - Predicting wine quality.\n\n\nReinforcement Learning\n\nDeepMind Lab - DeepMind Lab is a 3D learning environment based on id Software's Quake III Arena via ioquake3 and other open source software. Its primary purpose is to act as a testbed for research in artificial intelligence, especially deep reinforcement learning.\nGym - OpenAI Gym is a toolkit for developing and comparing reinforcement learning algorithms.\nSerpent.AI - Serpent.AI is a game agent framework that allows you to turn any video game you own into a sandbox to develop AI and machine learning experiments. For both researchers and hobbyists.\nViZDoom - ViZDoom allows developing AI bots that play Doom using only the visual information (the screen buffer). It is primarily intended for research in machine visual learning, and deep reinforcement learning, in particular.\nRoboschool - Open-source software for robot simulation, integrated with OpenAI Gym.\nRetro - Retro Games in Gym\nSLM Lab - Modular Deep Reinforcement Learning framework in PyTorch.\nCoach - Reinforcement Learning Coach by Intel\u00ae AI Lab enables easy experimentation with state of the art Reinforcement Learning algorithms\ngarage - A toolkit for reproducible reinforcement learning research\nmetaworld - An open source robotics benchmark for meta- and multi-task reinforcement learning\n\n\nRuby\n\nNatural Language Processing\n\nAwesome NLP with Ruby - Curated link list for practical natural language processing in Ruby.\nTreat - Text REtrieval and Annotation Toolkit, definitely the most comprehensive toolkit I\u2019ve encountered so far for Ruby.\nStemmer - Expose libstemmer_c to Ruby. [Deprecated]\nRaspel - raspell is an interface binding for ruby. [Deprecated]\nUEA Stemmer - Ruby port of UEALite Stemmer - a conservative stemmer for search and indexing.\nTwitter-text-rb - A library that does auto linking and extraction of usernames, lists and hashtags in tweets.\n\n\nGeneral-Purpose Machine Learning\n\nAwesome Machine Learning with Ruby - Curated list of ML related resources for Ruby.\nRuby Machine Learning - Some Machine Learning algorithms, implemented in Ruby. [Deprecated]\nMachine Learning Ruby [Deprecated]\njRuby Mahout - JRuby Mahout is a gem that unleashes the power of Apache Mahout in the world of JRuby. [Deprecated]\nCardMagic-Classifier - A general classifier module to allow Bayesian and other types of classifications.\nrb-libsvm - Ruby language bindings for LIBSVM which is a Library for Support Vector Machines.\nScoruby - Creates Random Forest classifiers from PMML files.\n\n\nData Analysis / Data Visualization\n\nrsruby - Ruby - R bridge.\ndata-visualization-ruby - Source code and supporting content for my Ruby Manor presentation on Data Visualisation with Ruby. [Deprecated]\nruby-plot - gnuplot wrapper for Ruby, especially for plotting ROC curves into SVG files. [Deprecated]\nplot-rb - A plotting library in Ruby built on top of Vega and D3. [Deprecated]\nscruffy - A beautiful graphing toolkit for Ruby.\nSciRuby\nGlean - A data management tool for humans. [Deprecated]\nBioruby\nArel [Deprecated]\n\n\nMisc\n\nBig Data For Chimps\nListof - Community based data collection, packed in gem. Get list of pretty much anything (stop words, countries, non words) in txt, json or hash. Demo/Search for a list\n\n\nRust\n\nGeneral-Purpose Machine Learning\n\ndeeplearn-rs - deeplearn-rs provides simple networks that use matrix multiplication, addition, and ReLU under the MIT license.\nrustlearn - a machine learning framework featuring logistic regression, support vector machines, decision trees and random forests.\nrusty-machine - a pure-rust machine learning library.\nleaf - open source framework for machine intelligence, sharing concepts from TensorFlow and Caffe. Available under the MIT license. [Deprecated]\nRustNN - RustNN is a feedforward neural network library. [Deprecated]\nRusticSOM - A Rust library for Self Organising Maps (SOM).\n\n\nR\n\nGeneral-Purpose Machine Learning\n\nahaz - ahaz: Regularization for semiparametric additive hazards regression. [Deprecated]\narules - arules: Mining Association Rules and Frequent Itemsets\nbiglasso - biglasso: Extending Lasso Model Fitting to Big Data in R.\nbmrm - bmrm: Bundle Methods for Regularized Risk Minimization Package.\nBoruta - Boruta: A wrapper algorithm for all-relevant feature selection.\nbst - bst: Gradient Boosting.\nC50 - C50: C5.0 Decision Trees and Rule-Based Models.\ncaret - Classification and Regression Training: Unified interface to ~150 ML algorithms in R.\ncaretEnsemble - caretEnsemble: Framework for fitting multiple caret models as well as creating ensembles of such models. [Deprecated]\nCatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box for R.\nClever Algorithms For Machine Learning\nCORElearn - CORElearn: Classification, regression, feature evaluation and ordinal evaluation.\nCoxBoost - CoxBoost: Cox models by likelihood based boosting for a single survival endpoint or competing risks [Deprecated]\nCubist - Cubist: Rule- and Instance-Based Regression Modeling.\ne1071 - e1071: Misc Functions of the Department of Statistics (e1071), TU Wien\nearth - earth: Multivariate Adaptive Regression Spline Models\nelasticnet - elasticnet: Elastic-Net for Sparse Estimation and Sparse PCA.\nElemStatLearn - ElemStatLearn: Data sets, functions and examples from the book: \"The Elements of Statistical Learning, Data Mining, Inference, and Prediction\" by Trevor Hastie, Robert Tibshirani and Jerome Friedman Prediction\" by Trevor Hastie, Robert Tibshirani and Jerome Friedman.\nevtree - evtree: Evolutionary Learning of Globally Optimal Trees.\nforecast - forecast: Timeseries forecasting using ARIMA, ETS, STLM, TBATS, and neural network models.\nforecastHybrid - forecastHybrid: Automatic ensemble and cross validation of ARIMA, ETS, STLM, TBATS, and neural network models from the \"forecast\" package.\nfpc - fpc: Flexible procedures for clustering.\nfrbs - frbs: Fuzzy Rule-based Systems for Classification and Regression Tasks. [Deprecated]\nGAMBoost - GAMBoost: Generalized linear and additive models by likelihood based boosting. [Deprecated]\ngamboostLSS - gamboostLSS: Boosting Methods for GAMLSS.\ngbm - gbm: Generalized Boosted Regression Models.\nglmnet - glmnet: Lasso and elastic-net regularized generalized linear models.\nglmpath - glmpath: L1 Regularization Path for Generalized Linear Models and Cox Proportional Hazards Model.\nGMMBoost - GMMBoost: Likelihood-based Boosting for Generalized mixed models. [Deprecated]\ngrplasso - grplasso: Fitting user specified models with Group Lasso penalty.\ngrpreg - grpreg: Regularization paths for regression models with grouped covariates.\nh2o - A framework for fast, parallel, and distributed machine learning algorithms at scale -- Deeplearning, Random forests, GBM, KMeans, PCA, GLM.\nhda - hda: Heteroscedastic Discriminant Analysis. [Deprecated]\nIntroduction to Statistical Learning\nipred - ipred: Improved Predictors.\nkernlab - kernlab: Kernel-based Machine Learning Lab.\nklaR - klaR: Classification and visualization.\nL0Learn - L0Learn: Fast algorithms for best subset selection.\nlars - lars: Least Angle Regression, Lasso and Forward Stagewise. [Deprecated]\nlasso2 - lasso2: L1 constrained estimation aka \u2018lasso\u2019.\nLiblineaR - LiblineaR: Linear Predictive Models Based On The Liblinear C/C++ Library.\nLogicReg - LogicReg: Logic Regression.\nMachine Learning For Hackers\nmaptree - maptree: Mapping, pruning, and graphing tree models. [Deprecated]\nmboost - mboost: Model-Based Boosting.\nmedley - medley: Blending regression models, using a greedy stepwise approach.\nmlr - mlr: Machine Learning in R.\nncvreg - ncvreg: Regularization paths for SCAD- and MCP-penalized regression models.\nnnet - nnet: Feed-forward Neural Networks and Multinomial Log-Linear Models. [Deprecated]\npamr - pamr: Pam: prediction analysis for microarrays. [Deprecated]\nparty - party: A Laboratory for Recursive Partytioning.\npartykit - partykit: A Toolkit for Recursive Partytioning.\npenalized - penalized: L1 (lasso and fused lasso) and L2 (ridge) penalized estimation in GLMs and in the Cox model.\npenalizedLDA - penalizedLDA: Penalized classification using Fisher's linear discriminant. [Deprecated]\npenalizedSVM - penalizedSVM: Feature Selection SVM using penalty functions.\nquantregForest - quantregForest: Quantile Regression Forests.\nrandomForest - randomForest: Breiman and Cutler's random forests for classification and regression.\nrandomForestSRC - randomForestSRC: Random Forests for Survival, Regression and Classification (RF-SRC).\nrattle - rattle: Graphical user interface for data mining in R.\nrda - rda: Shrunken Centroids Regularized Discriminant Analysis.\nrdetools - rdetools: Relevant Dimension Estimation (RDE) in Feature Spaces. [Deprecated]\nREEMtree - REEMtree: Regression Trees with Random Effects for Longitudinal (Panel) Data. [Deprecated]\nrelaxo - relaxo: Relaxed Lasso. [Deprecated]\nrgenoud - rgenoud: R version of GENetic Optimization Using Derivatives\nRmalschains - Rmalschains: Continuous Optimization using Memetic Algorithms with Local Search Chains (MA-LS-Chains) in R.\nrminer - rminer: Simpler use of data mining methods (e.g. NN and SVM) in classification and regression. [Deprecated]\nROCR - ROCR: Visualizing the performance of scoring classifiers. [Deprecated]\nRoughSets - RoughSets: Data Analysis Using Rough Set and Fuzzy Rough Set Theories. [Deprecated]\nrpart - rpart: Recursive Partitioning and Regression Trees.\nRPMM - RPMM: Recursively Partitioned Mixture Model.\nRSNNS - RSNNS: Neural Networks in R using the Stuttgart Neural Network Simulator (SNNS).\nRWeka - RWeka: R/Weka interface.\nRXshrink - RXshrink: Maximum Likelihood Shrinkage via Generalized Ridge or Least Angle Regression.\nsda - sda: Shrinkage Discriminant Analysis and CAT Score Variable Selection. [Deprecated]\nspectralGraphTopology - spectralGraphTopology: Learning Graphs from Data via Spectral Constraints.\nSuperLearner - Multi-algorithm ensemble learning packages.\nsvmpath - svmpath: svmpath: the SVM Path algorithm. [Deprecated]\ntgp - tgp: Bayesian treed Gaussian process models. [Deprecated]\ntree - tree: Classification and regression trees.\nvarSelRF - varSelRF: Variable selection using random forests.\nXGBoost.R - R binding for eXtreme Gradient Boosting (Tree) Library.\nOptunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search. Optunity is written in Python but interfaces seamlessly to R.\nigraph - binding to igraph library - General purpose graph library.\nMXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nTDSP-Utilities - Two data science utilities in R from Microsoft: 1) Interactive Data Exploration, Analysis, and Reporting (IDEAR) ; 2) Automated Modeling and Reporting (AMR).\n\n\nData Analysis / Data Visualization\n\nggplot2 - A data visualization package based on the grammar of graphics.\ntmap for visualizing geospatial data with static maps and leaflet for interactive maps\ntm and quanteda are the main packages for managing,  analyzing, and visualizing textual data.\nshiny is the basis for truly interactive displays and dashboards in R. However, some measure of interactivity can be achieved with htmlwidgets bringing javascript libraries to R. These include, plotly, dygraphs, highcharter, and several others.\n\n\nSAS\n\nGeneral-Purpose Machine Learning\n\nVisual Data Mining and Machine Learning - Interactive, automated, and programmatic modeling with the latest machine learning algorithms in and end-to-end analytics environment, from data prep to deployment. Free trial available.\nEnterprise Miner - Data mining and machine learning that creates deployable models using a GUI or code.\nFactory Miner - Automatically creates deployable machine learning models across numerous market or customer segments using a GUI.\n\n\nData Analysis / Data Visualization\n\nSAS/STAT - For conducting advanced statistical analysis.\nUniversity Edition - FREE! Includes all SAS packages necessary for data analysis and visualization, and includes online SAS courses.\n\n\nNatural Language Processing\n\nContextual Analysis - Add structure to unstructured text using a GUI.\nSentiment Analysis - Extract sentiment from text using a GUI.\nText Miner - Text mining using a GUI or code.\n\n\nDemos and Scripts\n\nML_Tables - Concise cheat sheets containing machine learning best practices.\nenlighten-apply - Example code and materials that illustrate applications of SAS machine learning techniques.\nenlighten-integration - Example code and materials that illustrate techniques for integrating SAS with other analytics technologies in Java, PMML, Python and R.\nenlighten-deep - Example code and materials that illustrate using neural networks with several hidden layers in SAS.\ndm-flow - Library of SAS Enterprise Miner process flow diagrams to help you learn by example about specific data mining topics.\n\n\nScala\n\nNatural Language Processing\n\nScalaNLP - ScalaNLP is a suite of machine learning and numerical computing libraries.\nBreeze - Breeze is a numerical processing library for Scala.\nChalk - Chalk is a natural language processing library. [Deprecated]\nFACTORIE - FACTORIE is a toolkit for deployable probabilistic modeling, implemented as a software library in Scala. It provides its users with a succinct language for creating relational factor graphs, estimating parameters and performing inference.\nMontague - Montague is a semantic parsing library for Scala with an easy-to-use DSL.\nSpark NLP - Natural language processing library built on top of Apache Spark ML to provide simple, performant, and accurate NLP annotations for machine learning pipelines, that scale easily in a distributed environment.\n\n\nData Analysis / Data Visualization\n\nMLlib in Apache Spark - Distributed machine learning library in Spark\nHydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.\nScalding - A Scala API for Cascading.\nSumming Bird - Streaming MapReduce with Scalding and Storm.\nAlgebird - Abstract Algebra for Scala.\nxerial - Data management utilities for Scala. [Deprecated]\nPredictionIO - PredictionIO, a machine learning server for software developers and data engineers.\nBIDMat - CPU and GPU-accelerated matrix library intended to support large-scale exploratory data analysis.\nFlink - Open source platform for distributed stream and batch data processing.\nSpark Notebook - Interactive and Reactive Data Science using Scala and Spark.\n\n\nGeneral-Purpose Machine Learning\n\nDeepLearning.scala - Creating statically typed dynamic neural networks from object-oriented & functional programming constructs.\nConjecture - Scalable Machine Learning in Scalding.\nbrushfire - Distributed decision tree ensemble learning in Scala.\nganitha - Scalding powered machine learning. [Deprecated]\nadam - A genomics processing engine and specialized file format built using Apache Avro, Apache Spark and Parquet. Apache 2 licensed.\nbioscala - Bioinformatics for the Scala programming language\nBIDMach - CPU and GPU-accelerated Machine Learning Library.\nFigaro - a Scala library for constructing probabilistic models.\nH2O Sparkling Water - H2O and Spark interoperability.\nFlinkML in Apache Flink - Distributed machine learning library in Flink.\nDynaML - Scala Library/REPL for Machine Learning Research.\nSaul - Flexible Declarative Learning-Based Programming.\nSwiftLearner - Simply written algorithms to help study ML or write your own implementations.\nSmile - Statistical Machine Intelligence and Learning Engine.\ndoddle-model - An in-memory machine learning library built on top of Breeze. It provides immutable objects and exposes its functionality through a scikit-learn-like API.\nTensorFlow Scala -   Strongly-typed Scala API for TensorFlow.\n\n\nScheme\n\nNeural Networks\n\nlayer - Neural network inference from the command line, implemented in CHICKEN Scheme.\n\n\nSwift\n\nGeneral-Purpose Machine Learning\n\nBender - Fast Neural Networks framework built on top of Metal. Supports TensorFlow models.\nSwift AI - Highly optimized artificial intelligence and machine learning library written in Swift.\nSwift for Tensorflow - a next-generation platform for machine learning, incorporating the latest research across machine learning, compilers, differentiable programming, systems design, and beyond.\nBrainCore - The iOS and OS X neural network framework.\nswix - A bare bones library that includes a general matrix language and wraps some OpenCV for iOS development. [Deprecated]\nAIToolbox - A toolbox framework of AI modules written in Swift: Graphs/Trees, Linear Regression, Support Vector Machines, Neural Networks, PCA, KMeans, Genetic Algorithms, MDP, Mixture of Gaussians.\nMLKit - A simple Machine Learning Framework written in Swift. Currently features Simple Linear Regression, Polynomial Regression, and Ridge Regression.\nSwift Brain - The first neural network / machine learning library written in Swift. This is a project for AI algorithms in Swift for iOS and OS X development. This project includes algorithms focused on Bayes theorem, neural networks, SVMs, Matrices, etc...\nPerfect TensorFlow - Swift Language Bindings of TensorFlow. Using native TensorFlow models on both macOS / Linux.\nPredictionBuilder - A library for machine learning that builds predictions using a linear regression.\nAwesome CoreML - A curated list of pretrained CoreML models.\nAwesome Core ML Models - A curated list of machine learning models in CoreML format.\n\n\nTensorFlow\n\nGeneral-Purpose Machine Learning\n\nAwesome TensorFlow - A list of all things related to TensorFlow.\nGolden TensorFlow - A page of content on TensorFlow, including academic papers and links to related topics.\n\n\nTools\n\nNeural Networks\n\nlayer - Neural network inference from the command line\n\n\nMisc\n\nML Workspace - All-in-one web-based IDE for machine learning and data science. The workspace is deployed as a docker container and is preloaded with a variety of popular data science libraries (e.g., Tensorflow, PyTorch) and dev tools (e.g., Jupyter, VS Code).\nNotebooks - A starter kit for Jupyter notebooks and machine learning. Companion docker images consist of all combinations of python versions, machine learning frameworks (Keras, PyTorch and Tensorflow) and CPU/CUDA versions.\nDVC - Data Science Version Control is an open-source version control system for machine learning projects with pipelines support. It makes ML projects reproducible and shareable.\nKedro - Kedro is a data and development workflow framework that implements best practices for data pipelines with an eye towards productionizing machine learning models.\nguild.ai - Tool to log, analyze, compare and \"optimize\" experiments. It's cross-platform and framework independent, and provided integrated visualizers such as tensorboard.\nSacred - Python tool to help  you configure, organize, log and reproduce experiments. Like a notebook lab in the context of Chemestry/Biology. The community has built multiple add-ons leveraging the proposed standard.\nMLFlow - platform to manage the ML lifecycle, including experimentation, reproducibility and deployment. Framework anf language agnostic, take a look at all the built-in integrations.\nMore tools to improve the ML lifecycle: Catalyst, PachydermIO. The following are Github-alike and targetting teams Weights & Biases, Neptune.Ml, Comet.ml, Valohai.ai.\n\n\nCredits\n\nSome of the python libraries were cut-and-pasted from vinta\nReferences for Go were mostly cut-and-pasted from gopherdata\n\n\n"}, {"repo": "resume/resume.github.com", "language": "JavaScript", "readme": "\nGitHub R\u00e9sum\u00e9\nA service that creates a r\u00e9sum\u00e9 based on your GitHub repos/activity.\nGitHub R\u00e9sum\u00e9 is opt-in. To make your resume visible, just star this project. To view your r\u00e9sum\u00e9, go to https://resume.github.io/?yourusername or follow the instructions on the home page.\nGreat for all the tech-savy bosses who want to have a quick view of person's git/github activity, before the interview.\nDevelopment\nTo run the app in development mode:\n$ rackup config.ru\n\n(You must have Ruby and the rack gem installed.)\n\n"}, {"repo": "ElemeFE/element", "language": "Vue", "readme": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSpecial thanks to the generous sponsorship by:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA Vue.js 2.0 UI Toolkit for Web.\n\nLinks\n\nHomepage and documentation\n\nInternational users\nChinese users\nSpanish users\nFrench users\n\n\nawesome-element\nFAQ\nCustomize theme\nPreview and generate theme online\nElement for React\nElement for Angular\nAtom helper\nVisual Studio Code helper\nStarter kit\n\nelement-starter\nelement-in-laravel-starter\n\n\nDesign resources\nGitter\n\nInternational users\nChinese users\n\n\n\nInstall\nnpm install element-ui -S\nQuick Start\nimport Vue from 'vue'\nimport Element from 'element-ui'\n\nVue.use(Element)\n\n// or\nimport {\n  Select,\n  Button\n  // ...\n} from 'element-ui'\n\nVue.component(Select.name, Select)\nVue.component(Button.name, Button)\nFor more information, please refer to Quick Start in our documentation.\nBrowser Support\nModern browsers and Internet Explorer 10+.\nDevelopment\nSkip this part if you just want to use Element.\nFor those who are interested in contributing to Element, please refer to our contributing guide (\u4e2d\u6587 | English | Espa\u00f1ol | Fran\u00e7ais) to see how to run this project.\nChangelog\nDetailed changes for each release are documented in the release notes.\nFAQ\nWe have collected some frequently asked questions. Before reporting an issue, please search if the FAQ has the answer to your problem.\nContribution\nPlease make sure to read the contributing guide (\u4e2d\u6587 | English | Espa\u00f1ol | Fran\u00e7ais) before making a pull request.\n\nSpecial Thanks\nEnglish documentation is brought to you by SwiftGG Translation Team:\n\nraychenfj\nkevin\n\u66fe\u5c0f\u6d9b\n\u6e7e\u4ed4\u738b\u4e8c\nBlooDLine\n\u9648\u94ed\u5609\n\u5343\u53f6\u77e5\u98ce\n\u6881\u6770\nChanging\nmmoaay\n\nSpanish documentation is made possible by these community developers:\n\nadavie1\ncarmencitaqiu\ncoderdiaz\nfedegar33\nGonzalo2310\nlesterbx\nProgramerGuy\nSantiagoGdaR\nsigfriedCub1990\nthechosenjuan\n\nFrench documentation is made possible by these community developers:\n\nsmalesys\nblombard\n\nDonation\nIf you find Element useful, you can buy us a cup of coffee\n\nBackers\nSupport us with a monthly donation and help us continue our activities. [Become a backer]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nJoin Discussion Group\nScan the QR code using Dingtalk App to join in discussion group :\n\nLICENSE\nMIT\n\n"}, {"repo": "lodash/lodash", "language": "JavaScript", "readme": "\nlodash\nSite |\nDocs |\nFP Guide |\nContributing |\nWiki |\nCode of Conduct |\nTwitter |\nChat\nThe Lodash library exported as a UMD module.\nGenerated using lodash-cli:\n$ npm run build\n$ lodash -o ./dist/lodash.js\n$ lodash core -o ./dist/lodash.core.js\nDownload\n\nCore build (~4 kB gzipped)\nFull build (~24 kB gzipped)\nCDN copies \n\nLodash is released under the MIT license & supports modern environments.\nReview the build differences & pick one that\u2019s right for you.\nInstallation\nIn a browser:\n<script src=\"lodash.js\"></script>\nUsing npm:\n$ npm i -g npm\n$ npm i lodash\nNote: add --save if you are using npm < 5.0.0\nIn Node.js:\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\nLooking for Lodash modules written in ES6 or smaller bundle sizes? Check out lodash-es.\nWhy Lodash?\nLodash makes JavaScript easier by taking the hassle out of working with arrays,\nnumbers, objects, strings, etc. Lodash\u2019s modular methods are great for:\n\nIterating arrays, objects, & strings\nManipulating & testing values\nCreating composite functions\n\nModule Formats\nLodash is available in a variety of builds & module formats.\n\nlodash & per method packages\nlodash-es, babel-plugin-lodash, & lodash-webpack-plugin\nlodash/fp\nlodash-amd\n\n\n"}, {"repo": "adam-p/markdown-here", "language": "JavaScript", "readme": "\n Markdown Here\nVisit the website.\nGet it for Chrome.\nGet it for Firefox.\nGet it for Safari.\nGet it for Thunderbird and Postbox.\nGet it for Opera.\nDiscuss it and ask questions in the Google Group.\nMarkdown Here is a Google Chrome, Firefox, Safari, Opera, and Thunderbird extension that lets you write email\u2020 in Markdown\u2021 and render them before sending. It also supports syntax highlighting (just specify the language in a fenced code block).\nWriting email with code in it is pretty tedious. Writing Markdown with code in it is easy. I found myself writing email in Markdown in the Github in-browser editor, then copying the preview into email. This is a pretty absurd workflow, so I decided create a tool to write and render Markdown right in the email.\nTo discover what can be done with Markdown in Markdown Here, check out the Markdown Here Cheatsheet and the other wiki pages.\n\u2020: And Google Groups posts, and Blogger posts, and Evernote notes, and Wordpress posts! See more.\n\u2021: And TeX mathematical formulae!\n\nTable of Contents\nInstallation Instructions\nUsage Instructions\nTroubleshooting\nCompatibility\nNotes and Miscellaneous\nBuilding the Extension Bundles\nNext Steps, Credits, Feedback, License\nInstallation Instructions\nChrome\nChrome Web Store\nGo to the Chrome Web Store page for Markdown Here and install normally.\nAfter installing, make sure to reload your webmail or restart Chrome!\nManual/Development\n\nClone this repo.\nIn Chrome, open the Extensions settings. (Wrench button, Tools, Extensions.)\nOn the Extensions settings page, click the \"Developer Mode\" checkbox.\nClick the now-visible \"Load unpacked extension\u2026\" button. Navigate to the directory where you cloned the repo, then the src directory under that.\nThe Markdown Here extension should now be visible in your extensions list.\nReload your webmail page (and maybe application) before trying to convert an email.\n\nFirefox and Thunderbird\nMozilla Add-ons site\nGo to the Firefox Add-ons page for Markdown Here and install normally.\nOr go to the \"Tools > Add-ons\" menu and then search for \"Markdown Here\".\nAfter installing, make sure to restart Firefox/Thunderbird!\nNote: It takes up to a month for Mozilla to approve changes to the Firefox/Thunderbird extension, so updates (features, fixes) will lag behind what is shown here. You can manually choose to install the newest version before it's reviewed from the list of versions: https://addons.mozilla.org/en-US/firefox/addon/markdown-here/versions/\nManual/Development\n\nClone this repo.\nFollow the instructions in the MDN \"Setting up an extension development environment\" article.\n\nSafari\nDownload the extension directly. When it has finished downloading, double click it to install.\nPreferences\nTo get to the Markdown Here preferences, open the Safari preferences and then go to the \"Extensions\" tab. Then click the \"Click me to show Markdown Here options\" box.\nOpera\nNote that Markdown Here only works with Opera versions 16 and higher (i.e., the ones that are based on Chromium).\nGo to the Opera Add-ons store page for Markdown Here and install normally.\nAfter installing, make sure to reload your webmail or restart Chrome!\nUsage Instructions\nInstall it, and then\u2026\n\n\nIn Chrome/Safari/Opera, make sure you reload your web mail page before trying to use Markdown Here.\n\n\nIn Chrome/Firefox/Safari/Opera, log into your Gmail, Hotmail, or Yahoo account and start a new email. In Thunderbird, start a new message.\n\n\nMake sure you're using the rich editor.\n\nIn Gmail, click the \"Rich formatting\" link, if it's visible.\nIn Thunderbird, make sure \"Compose messages in HTML format\" is enabled in your \"Account Settings\", \"Composition & Addressing\" pane.\n\n\n\nCompose an email in Markdown. For example:\n**Hello** `world`.\n\n```javascript\nalert('Hello syntax highlighting.');\n```\n\n\n\nRight-click in the compose box and choose the \"Markdown Toggle\" item from the context menu. Or click the button that appears in your address bar. Or use the hotkey (CTRL+ALT+M by default).\n\n\nYou should see your email rendered correctly from Markdown into rich HTML.\n\n\nSend your awesome email to everyone you know. It will appear to them the same way it looks to you.\n\n\nRevert to Markdown\nAfter rendering your Markdown to pretty HTML, you can still get back to your original Markdown. Just right-click anywhere in the newly rendered Markdown and click \"Markdown Toggle\" -- your email compose body will change back to the Markdown you had written.\nNote that any changes you make to the pretty HTML will be lost when you revert to Markdown.\nIn Gmail, you can also use the browser's Undo command (CTRL+Z / CMD+Z, or from the Edit menu). Be warned that you might also lose the last few characters you entered.\nReplies\nIn Gmail, Thunderbird, and Google Groups, you can use \"Markdown Toggle\" normally: just write your reply (top, bottom, inline, wherever) and then convert. The original email that you're replying to will be left alone. (Technically: Existing blockquote blocks will be left intact.)\nIn Hotmail and Yahoo (which don't put the original in a blockquote), and optionally in Gmail, Thunderbird, and Google Groups, you can ensure that only the part of the reply that you wrote gets converted by selecting what you want to convert and then clicking \"Markdown Toggle\" -- see the next section.\nSelection/Piecemeal Conversion\nSometimes you don't want to convert the entire email; sometimes your email isn't entirely Markdown. To convert only part of the email, select the text (with your mouse or keyboard), right-click on it, and click the \"Markdown Toggle\" menu item. Your selection is magically rendered into pretty HTML.\nTo revert back to Markdown, just put your cursor anywhere in the block of converted text, right click, and click the \"Markdown Toggle\" menu item again. Now it's magically back to the original Markdown.\n\nThings to know about converting/reverting a selection\n\n\nIf you select only part of a block of text, only that text will be converted. The converted block will be wrapped in a paragraph element, so the original line will be broken up. You probably don't want to ever do this.\n\n\nYou can select and revert multiple converted blocks at the same time. One upshot of this is that you can select your entire email, click \"Markdown Toggle\", and all portions of it that you had converted will be reverted.\n\n\nIf you don't have anything selected when you click \"Markdown Toggle\", Markdown Here will check if there are converted blocks anywhere in the message and revert them. If there no converted blocks are found, it will convert the entire email.\n\n\nOptions\nThe Markdown Here Options page can be accessed via the Chrome, Firefox, Safari, or Thunderbird extensions list. The available options include:\n\nStyling modifications for the rendered Markdown.\nSyntax highlighting theme selection and modification.\nTeX math formulae processing enabling and customization.\nWhat the hotkey should be.\n\nFor Chrome and Firefox, any changes made in the Markdown Here Options are automatically synchronized between your other installations of that browser (if you have the sync feature enabled in the browser).\n\nTroubleshooting\nSee the Troubleshooting wiki page.\nCompatibility\nSee the Compatibility wiki page.\nNotes and Miscellaneous\n\n\nMarkdown Here uses Github Flavored Markdown, with the limitation that GFM special links are not supported (issue #11); nor will they be, as MDH is not Github-specific.\n\n\nAvailable languages for syntax highlighting (and the way they should be written in the fenced code block) can be seen on the highlight.js demo page.\n\n\nImages embedded inline in your Markdown will be retained when you \"Markdown Toggle\". Gmail allows you to put images inline in your email -- this can be much easier than referencing an external image.\n\n\nEmail signatures are automatically excluded from conversion. Specifically, anything after the semi-standard '-- ' (note the trailing space) is left alone.\n\nNote that Hotmail and Yahoo do not automatically add the '-- ' to signatures, so you have to add it yourself.\n\n\n\nThe \"Markdown Toggle\" menu item shows up for more element types than it can correctly render. This is intended to help people realize that they're not using a rich editor. Otherwise they just don't see the menu item and don't know why.\n\n\nStyling:\n\nThe use of browser-specific styles (-moz-, -webkit-) should be avoided. If used, they may not render correctly for people reading the email in a different browser from the one where the email was sent.\nThe use of state-dependent styles (like a:hover) don't work because they don't match at the time the styles are made explicit. (In email, styles must be explicitly applied to all elements -- stylesheets get stripped.)\n\n\n\nFor more tweaky features, visit the Tips and Tricks section.\n\n\nBuilding the Extension Bundles\ncd utils\nnode build.js\n\nChrome and Opera extension\nCreate a file with a .zip extension containing these files and directories:\nmanifest.json\ncommon/\nchrome/\n\nFirefox/Thunderbird extension\nCreate a file with a .xpi extension containing these files and directories:\nchrome.manifest\ninstall.rdf\ncommon/\nfirefox/\n\nSafari extension\nThe browser-specific code is located in the markdown-here-safari project.\nUse the Safari Extension Builder.\nNext Steps\nSee the issues list and the Notes Wiki. All ideas, bugs, plans, complaints, and dreams will end up in one of those two places.\nFeel free to create a feature request issue if what you want isn't already there. If you'd prefer a less formal approach to floating an idea, post to the \"markdown-here\" Google Group.\nIt also takes a fair bit of work to stay up-to-date with the latest changes in all the applications and web sites where Markdown Here works.\nCredits\nMarkdown Here was coded on the shoulders of giants.\n\nMarkdown-to-HTML: chjj / marked\nSyntax highlighting: isagalaev / highlight.js\nHTML-to-text: mtrimpe / jsHtmlToText\n\nFeedback\nAll bugs, feature requests, pull requests, feedback, etc., are welcome. Create an issue. Or post to the \"markdown-here\" Google Group.\nLicense\nCode\nMIT License: http://adampritchard.mit-license.org/ or see the LICENSE file.\nLogo\nCopyright 2015, Austin Anderson. Licensed to Markdown Here under the MDH contributor license agreement.\nOther images\nCreative Commons Attribution 3.0 Unported (CC BY 3.0) License\n\n\n\n"}, {"repo": "tonsky/FiraCode", "language": "Clojure", "readme": "\nFira Code: monospaced font with programming ligatures\n\nProblem\nProgrammers use a lot of symbols, often encoded with several characters. For the human brain, sequences like ->, <= or := are single logical tokens, even if they take two or three characters on the screen. Your eye spends a non-zero amount of energy to scan, parse and join multiple characters into a single logical one. Ideally, all programming languages should be designed with full-fledged Unicode symbols for operators, but that\u2019s not the case yet.\nSolution\nDownload v.2 \u00b7 How to install \u00b7 Troubleshooting \u00b7 News & updates\n\nFira Code is an extension of the Fira Mono font containing a set of ligatures for common programming multi-character combinations. This is just a font rendering feature: underlying code remains ASCII-compatible. This helps to read and understand code faster. For some frequent sequences like .. or //, ligatures allow us to correct spacing.\n\nCode examples\nRuby:\n\nJavaScript:\n\nPHP:\n\nErlang:\n\nElixir:\n\nGo:\n\nLiveScript:\n\nClojure:\n\nSwift:\n\nStylistic sets\nSee How to enable\n\nTerminal support\n\n\n\nWorks\nDoesn\u2019t work\n\n\n\n\nButterfly\nAlacritty\n\n\ncrosh (ChromeOS, instructions)\nWindows Console (conhost.exe)\n\n\nHyper.app\nCmder\n\n\niTerm 2 (3.1+)\nConEmu\n\n\nKitty\nGNOME Terminal\n\n\nKonsole\nmate-terminal\n\n\nmintty (partial support 2.8.3+)\nPuTTY\n\n\nQTerminal\nrxvt\n\n\nTerminal.app\nxterm\n\n\nTermux\nZOC (Windows)\n\n\nToken2Shell/MD\ngtkterm, guake, LXTerminal, sakura, Terminator, xfce4-terminal, and other libvte-based terminals (bug report)\n\n\nupterm\n\n\n\nWindows Terminal\n\n\n\nZOC (macOS)\n\n\n\n\nEditor support\n\n\n\nWorks\nDoesn\u2019t work\n\n\n\n\nAbricotine\nArduino IDE\n\n\nAndroid Studio (2.3+, instructions)\nAdobe Dreamweaver\n\n\nAnjuta (unless at the EOF)\nDelphi IDE\n\n\nAppCode (2016.2+, instructions)\nEclipse (Windows, vote here)\n\n\nAtom 1.1 or newer (instructions)\nStandalone Emacs (workaround)\n\n\nBBEdit/TextWrangler (v. 11 only, instructions)\nGeany (Windows)\n\n\nBrackets (with this plugin)\ngVim (Windows workaround)\n\n\nChocolat\nIDLE\n\n\nCLion (2016.2+, instructions)\nKDevelop 4\n\n\nCloud9 (instructions)\nMonkey Studio IDE\n\n\nCoda 2\n\n\n\nCodeLite\n\n\n\nEclipse (macOS 4.7+, Linux)\n\n\n\nelementary Code\n\n\n\nGeany (macOS)\n\n\n\ngEdit / Pluma\n\n\n\nGNOME Builder\n\n\n\nGoormIDE (instructions)\n\n\n\nIntelliJ IDEA (2016.2+, instructions)\n\n\n\nKate, KWrite\n\n\n\nKDevelop 5+\n\n\n\nKomodo\n\n\n\nLeafpad\n\n\n\nLibreOffice\n\n\n\nLightTable (instructions)\n\n\n\nLINQPad\n\n\n\nMacVim 7.4 or newer (instructions)\n\n\n\nMancy\n\n\n\nMeld\n\n\n\nMousepad\n\n\n\nNeoVim-gtk\n\n\n\nNetBeans\n\n\n\nNotepad (Windows)\n\n\n\nNotepad++ (with a workaround)\n\n\n\nNotepad3 (instructions)\n\n\n\nPhpStorm (2016.2+, instructions)\n\n\n\nPyCharm (2016.2+, instructions)\n\n\n\nQtCreator\n\n\n\nRider\n\n\n\nRStudio (instructions)\n\n\n\nRubyMine (2016.2+, instructions)\n\n\n\nScratch\n\n\n\nScribus (1.5.3+)\n\n\n\nSublimeText (3146+)\n\n\n\nSpyder IDE (only with Qt5)\n\n\n\nSuperCollider 3\n\n\n\nTextAdept (Linux, macOS)\n\n\n\nTextEdit\n\n\n\nTextMate 2\n\n\n\nVimR (instructions)\n\n\n\nVisual Studio (2015+, instructions)\n\n\n\nVisual Studio Code (instructions)\n\n\n\nWebStorm (2016.2+, instructions)\n\n\n\nXamarin Studio/Monodevelop\n\n\n\nXcode (8.0+, otherwise with plugin)\n\n\n\nProbably work: Smultron, Vico\nUnder question: Code::Blocks IDE\n\n\n\nBrowser support\n<!-- HTML -->\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/tonsky/FiraCode@1.207/distr/fira_code.css\">\n/* CSS */\n@import url(https://cdn.jsdelivr.net/gh/tonsky/FiraCode@1.207/distr/fira_code.css);\n/* Specify in CSS */\ncode { font-family: 'Fira Code', monospace; }\n\n@supports (font-variation-settings: normal) {\n  code { font-family: 'Fira Code VF', monospace; }\n}\n\nIE 10+, Edge: enable with font-feature-settings: \"calt\";\nFirefox\nSafari\nChromium-based browsers (Chrome, Opera)\nACE\nCodeMirror (enable with font-variant-ligatures: contextual;)\n\nProjects using Fira Code\n\nAll JetBrains products\nCodePen\nBlink Shell\nKlipse\nIlyaBirman.net\nEvilMartians.com\nWeb Maker\nFromScratch\nPEP20.org\n\nAlternatives\nOther monospaced fonts with ligatures:\n\nHasklig (free)\nPragmataPro (\u20ac59)\nMonoid (free)\nFixedsys Excelsior (free)\nIosevka (free)\nDejaVu Sans Code (free)\nVictor Mono (free)\nCascadia Code (free)\n\nBuilding Fira Code locally\nIn case you want to alter FiraCode.glyphs and build OTF/TTF/WOFF files yourself, this is setup I use on macOS:\n# install all required build tools\n./script/bootstrap\n\n# build the font files\n./script/build\n\n# install OTFs to ~/Library/Fonts\n./script/install\nCredits\n\nAuthor: Nikita Prokopov @nikitonsky\nBased on: Fira Mono\nInspired by: Hasklig\n\n\n"}, {"repo": "bitcoin/bitcoin", "language": "C++", "readme": "\nBitcoin Core integration/staging tree\nhttps://bitcoincore.org\nWhat is Bitcoin?\nBitcoin is an experimental digital currency that enables instant payments to\nanyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\nwith no central authority: managing transactions and issuing money are carried\nout collectively by the network. Bitcoin Core is the name of open source\nsoftware which enables the use of this currency.\nFor more information, as well as an immediately usable, binary version of\nthe Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the\noriginal whitepaper.\nLicense\nBitcoin Core is released under the terms of the MIT license. See COPYING for more\ninformation or see https://opensource.org/licenses/MIT.\nDevelopment Process\nThe master branch is regularly built and tested, but is not guaranteed to be\ncompletely stable. Tags are created\nregularly to indicate new official, stable release versions of Bitcoin Core.\nThe contribution workflow is described in CONTRIBUTING.md\nand useful hints for developers can be found in doc/developer-notes.md.\nTesting\nTesting and code review is the bottleneck for development; we get more pull\nrequests than we can review and test on short notice. Please be patient and help out by testing\nother people's pull requests, and remember this is a security-critical project where any mistake might cost people\nlots of money.\nAutomated Testing\nDevelopers are strongly encouraged to write unit tests for new code, and to\nsubmit new unit tests for old code. Unit tests can be compiled and run\n(assuming they weren't disabled in configure) with: make check. Further details on running\nand extending unit tests can be found in /src/test/README.md.\nThere are also regression and integration tests, written\nin Python, that are run automatically on the build server.\nThese tests can be run (if the test dependencies are installed) with: test/functional/test_runner.py\nThe Travis CI system makes sure that every pull request is built for Windows, Linux, and macOS, and that unit/sanity tests are run automatically.\nManual Quality Assurance (QA) Testing\nChanges should be tested by somebody other than the developer who wrote the\ncode. This is especially important for large or high-risk changes. It is useful\nto add a test plan to the pull request description if testing the changes is\nnot straightforward.\nTranslations\nChanges to translations as well as new translations can be submitted to\nBitcoin Core's Transifex page.\nTranslations are periodically pulled from Transifex and merged into the git repository. See the\ntranslation process for details on how this works.\nImportant: We do not accept translation changes as GitHub pull requests because the next\npull from Transifex would automatically overwrite them again.\nTranslators should also subscribe to the mailing list.\n\n"}, {"repo": "meteor/meteor", "language": "JavaScript", "readme": "\n\n\n\n\nMeteor is an ultra-simple environment for building modern web\napplications.\nWith Meteor you write apps:\n\nin modern JavaScript\nthat send data over the wire, rather than HTML\nusing your choice of popular open-source libraries\n\nTry a getting started tutorial:\n\nReact\nBlaze\nAngular\n\nNext, read the guide and the documentation.\nQuick Start\nOn Windows, the installer can be found at https://www.meteor.com/install.\nOn Linux/macOS, use this line:\ncurl https://install.meteor.com/ | sh\nCreate a project:\nmeteor create try-meteor\nRun it:\ncd try-meteor\nmeteor\nDeveloper Resources\nBuilding an application with Meteor?\n\nAnnouncement list: sign up at https://www.meteor.com/\nHaving problems? Ask for help at: https://stackoverflow.com/questions/tagged/meteor\nDiscussion forums: https://forums.meteor.com/\n\nInterested in helping or contributing to Meteor?  These resources will help:\n\nCore development guide\nContribution guidelines\nFeature requests\nIssue tracker\n\nWe are hiring!  Visit meteor.io/jobs to\nlearn more about working full-time on the Meteor project.\nUninstalling Meteor\nAside from a short launcher shell script, Meteor installs itself inside your\nhome directory. To uninstall Meteor, run:\nrm -rf ~/.meteor/\nsudo rm /usr/local/bin/meteor\nOn Windows, just run the uninstaller from your Control Panel.\n\n"}, {"repo": "ReactiveX/RxJava", "language": "Java", "readme": "\nRxJava: Reactive Extensions for the JVM\n\n\n\nRxJava is a Java VM implementation of Reactive Extensions: a library for composing asynchronous and event-based programs by using observable sequences.\nIt extends the observer pattern to support sequences of data/events and adds operators that allow you to compose sequences together declaratively while abstracting away concerns about things like low-level threading, synchronization, thread-safety and concurrent data structures.\nVersion 3.x (Javadoc)\n\nsingle dependency: Reactive-Streams\ncontinued support for Java 6+ & Android 2.3+\nfixed API mistakes and many limits of RxJava 2\nintended to be a replacement for RxJava 2 with relatively few binary incompatible changes\nJava 8 lambda-friendly API\nnon-opinionated about the source of concurrency (threads, pools, event loops, fibers, actors, etc.)\nasync or synchronous execution\nvirtual time and schedulers for parameterized concurrency\ntest and diagnostic support via test schedulers, test consumers and plugin hooks\n\nLearn more about RxJava in general on the Wiki Home.\nVersion 2.x\nThe 2.x version will be supported with bugfixes and important documentation updates until\nDecember 31, 2020. No new features will be added to 2.x.\nVersion 1.x\nThe 1.x version is end-of-life as of March 31, 2018. No further development, support, maintenance, PRs and updates will happen. The Javadoc of the very last version, 1.3.8, will remain accessible.\nGetting started\nSetting up the dependency\nThe first step is to include RxJava 3 into your project, for example, as a Gradle compile dependency:\nimplementation \"io.reactivex.rxjava3:rxjava:3.x.y\"\n(Please replace x and y with the latest version numbers: \n)\nHello World\nThe second is to write the Hello World program:\npackage rxjava.examples;\n\nimport io.reactivex.rxjava3.core.*;\n\npublic class HelloWorld {\n    public static void main(String[] args) {\n        Flowable.just(\"Hello world\").subscribe(System.out::println);\n    }\n}\nIf your platform doesn't support Java 8 lambdas (yet), you have to create an inner class of Consumer manually:\nimport io.reactivex.rxjava3.functions.Consumer;\n\nFlowable.just(\"Hello world\")\n  .subscribe(new Consumer<String>() {\n      @Override public void accept(String s) {\n          System.out.println(s);\n      }\n  });\nNote that RxJava 3 components now live under io.reactivex.rxjava3 and the base classes and interfaces live under io.reactivex.rxjava3.core.\nBase classes\nRxJava 3 features several base classes you can discover operators on:\n\nio.reactivex.rxjava3.core.Flowable: 0..N flows, supporting Reactive-Streams and backpressure\nio.reactivex.rxjava3.core.Observable: 0..N flows, no backpressure,\nio.reactivex.rxjava3.core.Single: a flow of exactly 1 item or an error,\nio.reactivex.rxjava3.core.Completable: a flow without items but only a completion or error signal,\nio.reactivex.rxjava3.core.Maybe: a flow with no items, exactly one item or an error.\n\nSome terminology\nUpstream, downstream\nThe dataflows in RxJava consist of a source, zero or more intermediate steps followed by a data consumer or combinator step (where the step is responsible to consume the dataflow by some means):\nsource.operator1().operator2().operator3().subscribe(consumer);\n\nsource.flatMap(value -> source.operator1().operator2().operator3());\nHere, if we imagine ourselves on operator2, looking to the left towards the source is called the upstream. Looking to the right towards the subscriber/consumer is called the downstream. This is often more apparent when each element is written on a separate line:\nsource\n  .operator1()\n  .operator2()\n  .operator3()\n  .subscribe(consumer)\nObjects in motion\nIn RxJava's documentation, emission, emits, item, event, signal, data and message are considered synonyms and represent the object traveling along the dataflow.\nBackpressure\nWhen the dataflow runs through asynchronous steps, each step may perform different things with different speed. To avoid overwhelming such steps, which usually would manifest itself as increased memory usage due to temporary buffering or the need for skipping/dropping data, so-called backpressure is applied, which is a form of flow control where the steps can express how many items are they ready to process. This allows constraining the memory usage of the dataflows in situations where there is generally no way for a step to know how many items the upstream will send to it.\nIn RxJava, the dedicated Flowable class is designated to support backpressure and Observable is dedicated to the non-backpressured operations (short sequences, GUI interactions, etc.). The other types, Single, Maybe and Completable don't support backpressure nor should they; there is always room to store one item temporarily.\nAssembly time\nThe preparation of dataflows by applying various intermediate operators happens in the so-called assembly time:\nFlowable<Integer> flow = Flowable.range(1, 5)\n.map(v -> v * v)\n.filter(v -> v % 3 == 0)\n;\nAt this point, the data is not flowing yet and no side-effects are happening.\nSubscription time\nThis is a temporary state when subscribe() is called on a flow that establishes the chain of processing steps internally:\nflow.subscribe(System.out::println)\nThis is when the subscription side-effects are triggered (see doOnSubscribe). Some sources block or start emitting items right away in this state.\nRuntime\nThis is the state when the flows are actively emitting items, errors or completion signals:\nObservable.create(emitter -> {\n     while (!emitter.isDisposed()) {\n         long time = System.currentTimeMillis();\n         emitter.onNext(time);\n         if (time % 2 != 0) {\n             emitter.onError(new IllegalStateException(\"Odd millisecond!\"));\n             break;\n         }\n     }\n})\n.subscribe(System.out::println, Throwable::printStackTrace);\nPractically, this is when the body of the given example above executes.\nSimple background computation\nOne of the common use cases for RxJava is to run some computation, network request on a background thread and show the results (or error) on the UI thread:\nimport io.reactivex.rxjava3.schedulers.Schedulers;\n\nFlowable.fromCallable(() -> {\n    Thread.sleep(1000); //  imitate expensive computation\n    return \"Done\";\n})\n  .subscribeOn(Schedulers.io())\n  .observeOn(Schedulers.single())\n  .subscribe(System.out::println, Throwable::printStackTrace);\n\nThread.sleep(2000); // <--- wait for the flow to finish\nThis style of chaining methods is called a fluent API which resembles the builder pattern. However, RxJava's reactive types are immutable; each of the method calls returns a new Flowable with added behavior. To illustrate, the example can be rewritten as follows:\nFlowable<String> source = Flowable.fromCallable(() -> {\n    Thread.sleep(1000); //  imitate expensive computation\n    return \"Done\";\n});\n\nFlowable<String> runBackground = source.subscribeOn(Schedulers.io());\n\nFlowable<String> showForeground = runBackground.observeOn(Schedulers.single());\n\nshowForeground.subscribe(System.out::println, Throwable::printStackTrace);\n\nThread.sleep(2000);\nTypically, you can move computations or blocking IO to some other thread via subscribeOn. Once the data is ready, you can make sure they get processed on the foreground or GUI thread via observeOn.\nSchedulers\nRxJava operators don't work with Threads or ExecutorServices directly but with so-called Schedulers that abstract away sources of concurrency behind a uniform API. RxJava 3 features several standard schedulers accessible via Schedulers utility class.\n\nSchedulers.computation(): Run computation intensive work on a fixed number of dedicated threads in the background. Most asynchronous operators use this as their default Scheduler.\nSchedulers.io(): Run I/O-like or blocking operations on a dynamically changing set of threads.\nSchedulers.single(): Run work on a single thread in a sequential and FIFO manner.\nSchedulers.trampoline(): Run work in a sequential and FIFO manner in one of the participating threads, usually for testing purposes.\n\nThese are available on all JVM platforms but some specific platforms, such as Android, have their own typical Schedulers defined: AndroidSchedulers.mainThread(), SwingScheduler.instance() or JavaFXSchedulers.gui().\nIn addition, there is an option to wrap an existing Executor (and its subtypes such as ExecutorService) into a Scheduler via Schedulers.from(Executor). This can be used, for example, to have a larger but still fixed pool of threads (unlike computation() and io() respectively).\nThe Thread.sleep(2000); at the end is no accident. In RxJava the default Schedulers run on daemon threads, which means once the Java main thread exits, they all get stopped and background computations may never happen. Sleeping for some time in this example situations lets you see the output of the flow on the console with time to spare.\nConcurrency within a flow\nFlows in RxJava are sequential in nature split into processing stages that may run concurrently with each other:\nFlowable.range(1, 10)\n  .observeOn(Schedulers.computation())\n  .map(v -> v * v)\n  .blockingSubscribe(System.out::println);\nThis example flow squares the numbers from 1 to 10 on the computation Scheduler and consumes the results on the \"main\" thread (more precisely, the caller thread of blockingSubscribe). However, the lambda v -> v * v doesn't run in parallel for this flow; it receives the values 1 to 10 on the same computation thread one after the other.\nParallel processing\nProcessing the numbers 1 to 10 in parallel is a bit more involved:\nFlowable.range(1, 10)\n  .flatMap(v ->\n      Flowable.just(v)\n        .subscribeOn(Schedulers.computation())\n        .map(w -> w * w)\n  )\n  .blockingSubscribe(System.out::println);\nPractically, parallelism in RxJava means running independent flows and merging their results back into a single flow. The operator flatMap does this by first mapping each number from 1 to 10 into its own individual Flowable, runs them and merges the computed squares.\nNote, however, that flatMap doesn't guarantee any order and the items from the inner flows may end up interleaved. There are alternative operators:\n\nconcatMap that maps and runs one inner flow at a time and\nconcatMapEager which runs all inner flows \"at once\" but the output flow will be in the order those inner flows were created.\n\nAlternatively, the Flowable.parallel() operator and the ParallelFlowable type help achieve the same parallel processing pattern:\nFlowable.range(1, 10)\n  .parallel()\n  .runOn(Schedulers.computation())\n  .map(v -> v * v)\n  .sequential()\n  .blockingSubscribe(System.out::println);\nDependent sub-flows\nflatMap is a powerful operator and helps in a lot of situations. For example, given a service that returns a Flowable, we'd like to call another service with values emitted by the first service:\nFlowable<Inventory> inventorySource = warehouse.getInventoryAsync();\n\ninventorySource\n    .flatMap(inventoryItem -> erp.getDemandAsync(inventoryItem.getId())\n            .map(demand -> \"Item \" + inventoryItem.getName() + \" has demand \" + demand))\n    .subscribe(System.out::println);\nContinuations\nSometimes, when an item has become available, one would like to perform some dependent computations on it. This is sometimes called continuations and, depending on what should happen and what types are involved, may involve various operators to accomplish.\nDependent\nThe most typical scenario is to given a value, invoke another service, await and continue with its result:\nservice.apiCall()\n.flatMap(value -> service.anotherApiCall(value))\n.flatMap(next -> service.finalCall(next))\nIt is often the case also that later sequences would require values from earlier mappings. This can be achieved by moving the outer flatMap into the inner parts of the previous flatMap for example:\nservice.apiCall()\n.flatMap(value ->\n    service.anotherApiCall(value)\n    .flatMap(next -> service.finalCallBoth(value, next))\n)\nHere, the original value will be available inside the inner flatMap, courtesy of lambda variable capture.\nNon-dependent\nIn other scenarios, the result(s) of the first source/dataflow is irrelevant and one would like to continue with a quasi independent another source. Here, flatMap works as well:\nObservable continued = sourceObservable.flatMapSingle(ignored -> someSingleSource)\ncontinued.map(v -> v.toString())\n  .subscribe(System.out::println, Throwable::printStackTrace);\nhowever, the continuation in this case stays Observable instead of the likely more appropriate Single. (This is understandable because\nfrom the perspective of flatMapSingle, sourceObservable is a multi-valued source and thus the mapping may result in multiple values as well).\nOften though there is a way that is somewhat more expressive (and also lower overhead) by using Completable as the mediator and its operator andThen to resume with something else:\nsourceObservable\n  .ignoreElements()           // returns Completable\n  .andThen(someSingleSource)\n  .map(v -> v.toString())\nThe only dependency between the sourceObservable and the someSingleSource is that the former should complete normally in order for the latter to be consumed.\nDeferred-dependent\nSometimes, there is an implicit data dependency between the previous sequence and the new sequence that, for some reason, was not flowing through the \"regular channels\". One would be inclined to write such continuations as follows:\nAtomicInteger count = new AtomicInteger();\n\nObservable.range(1, 10)\n  .doOnNext(ignored -> count.incrementAndGet())\n  .ignoreElements()\n  .andThen(Single.just(count.get()))\n  .subscribe(System.out::println);\nUnfortunately, this prints 0 because Single.just(count.get()) is evaluated at assembly time when the dataflow hasn't even run yet. We need something that defers the evaluation of this Single source until runtime when the main source completes:\nAtomicInteger count = new AtomicInteger();\n\nObservable.range(1, 10)\n  .doOnNext(ignored -> count.incrementAndGet())\n  .ignoreElements()\n  .andThen(Single.defer(() -> Single.just(count.get())))\n  .subscribe(System.out::println);\nor\nAtomicInteger count = new AtomicInteger();\n\nObservable.range(1, 10)\n  .doOnNext(ignored -> count.incrementAndGet())\n  .ignoreElements()\n  .andThen(Single.fromCallable(() -> count.get()))\n  .subscribe(System.out::println);\nType conversions\nSometimes, a source or service returns a different type than the flow that is supposed to work with it. For example, in the inventory example above, getDemandAsync could return a Single<DemandRecord>. If the code example is left unchanged, this will result in a compile-time error (however, often with a misleading error message about lack of overload).\nIn such situations, there are usually two options to fix the transformation: 1) convert to the desired type or 2) find and use an overload of the specific operator supporting the different type.\nConverting to the desired type\nEach reactive base class features operators that can perform such conversions, including the protocol conversions, to match some other type. The following matrix shows the available conversion options:\n\n\n\n\nFlowable\nObservable\nSingle\nMaybe\nCompletable\n\n\n\n\nFlowable\n\ntoObservable\nfirst, firstOrError, single, singleOrError, last, lastOrError1\nfirstElement, singleElement, lastElement\nignoreElements\n\n\nObservable\ntoFlowable2\n\nfirst, firstOrError, single, singleOrError, last, lastOrError1\nfirstElement, singleElement, lastElement\nignoreElements\n\n\nSingle\ntoFlowable3\ntoObservable\n\ntoMaybe\nignoreElement\n\n\nMaybe\ntoFlowable3\ntoObservable\ntoSingle\n\nignoreElement\n\n\nCompletable\ntoFlowable\ntoObservable\ntoSingle\ntoMaybe\n\n\n\n\n1: When turning a multi-valued source into a single-valued source, one should decide which of the many source values should be considered as the result.\n2: Turning an Observable into Flowable requires an additional decision: what to do with the potential unconstrained flow\nof the source Observable? There are several strategies available (such as buffering, dropping, keeping the latest) via the BackpressureStrategy parameter or via standard Flowable operators such as onBackpressureBuffer, onBackpressureDrop, onBackpressureLatest which also\nallow further customization of the backpressure behavior.\n3: When there is only (at most) one source item, there is no problem with backpressure as it can be always stored until the downstream is ready to consume.\nUsing an overload with the desired type\nMany frequently used operator has overloads that can deal with the other types. These are usually named with the suffix of the target type:\n\n\n\nOperator\nOverloads\n\n\n\n\nflatMap\nflatMapSingle, flatMapMaybe, flatMapCompletable, flatMapIterable\n\n\nconcatMap\nconcatMapSingle, concatMapMaybe, concatMapCompletable, concatMapIterable\n\n\nswitchMap\nswitchMapSingle, switchMapMaybe, switchMapCompletable\n\n\n\nThe reason these operators have a suffix instead of simply having the same name with different signature is type erasure. Java doesn't consider signatures such as operator(Function<T, Single<R>>) and operator(Function<T, Maybe<R>>) different (unlike C#) and due to erasure, the two operators would end up as duplicate methods with the same signature.\nOperator naming conventions\nNaming in programming is one of the hardest things as names are expected to be not long, expressive, capturing and easily memorable. Unfortunately, the target language (and pre-existing conventions) may not give too much help in this regard (unusable keywords, type erasure, type ambiguities, etc.).\nUnusable keywords\nIn the original Rx.NET, the operator that emits a single item and then completes is called Return(T). Since the Java convention is to have a lowercase letter start a method name, this would have been return(T) which is a keyword in Java and thus not available. Therefore, RxJava chose to name this operator just(T). The same limitation exists for the operator Switch, which had to be named switchOnNext. Yet another example is Catch which was named onErrorResumeNext.\nType erasure\nMany operators that expect the user to provide some function returning a reactive type can't be overloaded because the type erasure around a Function<T, X> turns such method signatures into duplicates. RxJava chose to name such operators by appending the type as suffix as well:\nFlowable<R> flatMap(Function<? super T, ? extends Publisher<? extends R>> mapper)\n\nFlowable<R> flatMapMaybe(Function<? super T, ? extends MaybeSource<? extends R>> mapper)\nType ambiguities\nEven though certain operators have no problems from type erasure, their signature may turn up being ambiguous, especially if one uses Java 8 and lambdas. For example, there are several overloads of concatWith taking the various other reactive base types as arguments (for providing convenience and performance benefits in the underlying implementation):\nFlowable<T> concatWith(Publisher<? extends T> other);\n\nFlowable<T> concatWith(SingleSource<? extends T> other);\nBoth Publisher and SingleSource appear as functional interfaces (types with one abstract method) and may encourage users to try to provide a lambda expression:\nsomeSource.concatWith(s -> Single.just(2))\n.subscribe(System.out::println, Throwable::printStackTrace);\nUnfortunately, this approach doesn't work and the example does not print 2 at all. In fact, since version 2.1.10, it doesn't\neven compile because at least 4 concatWith overloads exist and the compiler finds the code above ambiguous.\nThe user in such situations probably wanted to defer some computation until the someSource has completed, thus the correct\nunambiguous operator should have been defer:\nsomeSource.concatWith(Single.defer(() -> Single.just(2)))\n.subscribe(System.out::println, Throwable::printStackTrace);\nSometimes, a suffix is added to avoid logical ambiguities that may compile but produce the wrong type in a flow:\nFlowable<T> merge(Publisher<? extends Publisher<? extends T>> sources);\n\nFlowable<T> mergeArray(Publisher<? extends T>... sources);\nThis can get also ambiguous when functional interface types get involved as the type argument T.\nError handling\nDataflows can fail, at which point the error is emitted to the consumer(s). Sometimes though, multiple sources may fail at which point there is a choice whether or not wait for all of them to complete or fail. To indicate this opportunity, many operator names are suffixed with the DelayError words (while others feature a delayError or delayErrors boolean flag in one of their overloads):\nFlowable<T> concat(Publisher<? extends Publisher<? extends T>> sources);\n\nFlowable<T> concatDelayError(Publisher<? extends Publisher<? extends T>> sources);\nOf course, suffixes of various kinds may appear together:\nFlowable<T> concatArrayEagerDelayError(Publisher<? extends T>... sources);\nBase class vs base type\nThe base classes can be considered heavy due to the sheer number of static and instance methods on them. RxJava 3's design was heavily influenced by the Reactive Streams specification, therefore, the library features a class and an interface per each reactive type:\n\n\n\nType\nClass\nInterface\nConsumer\n\n\n\n\n0..N backpressured\nFlowable\nPublisher1\nSubscriber\n\n\n0..N unbounded\nObservable\nObservableSource2\nObserver\n\n\n1 element or error\nSingle\nSingleSource\nSingleObserver\n\n\n0..1 element or error\nMaybe\nMaybeSource\nMaybeObserver\n\n\n0 element or error\nCompletable\nCompletableSource\nCompletableObserver\n\n\n\n1The org.reactivestreams.Publisher is part of the external Reactive Streams library. It is the main type to interact with other reactive libraries through a standardized mechanism governed by the Reactive Streams specification.\n2The naming convention of the interface was to append Source to the semi-traditional class name. There is no FlowableSource since Publisher is provided by the Reactive Streams library (and subtyping it wouldn't have helped with interoperation either). These interfaces are, however, not standard in the sense of the Reactive Streams specification and are currently RxJava specific only.\nR8 and ProGuard settings\nBy default, RxJava itself doesn't require any ProGuard/R8 settings and should work without problems. Unfortunately, the Reactive Streams dependency since version 1.0.3 has embedded Java 9 class files in its JAR that can cause warnings with the plain ProGuard:\nWarning: org.reactivestreams.FlowAdapters$FlowPublisherFromReactive: can't find superclass or interface java.util.concurrent.Flow$Publisher\nWarning: org.reactivestreams.FlowAdapters$FlowToReactiveProcessor: can't find superclass or interface java.util.concurrent.Flow$Processor\nWarning: org.reactivestreams.FlowAdapters$FlowToReactiveSubscriber: can't find superclass or interface java.util.concurrent.Flow$Subscriber\nWarning: org.reactivestreams.FlowAdapters$FlowToReactiveSubscription: can't find superclass or interface java.util.concurrent.Flow$Subscription\nWarning: org.reactivestreams.FlowAdapters: can't find referenced class java.util.concurrent.Flow$Publisher\n\nIt is recommended one sets up the following -dontwarn entry in the application's proguard-ruleset file:\n-dontwarn java.util.concurrent.Flow*\n\nFor R8, the RxJava jar includes the META-INF/proguard/rxjava3.pro with the same no-warning clause and should apply automatically.\nFurther reading\nFor further details, consult the wiki.\nCommunication\n\nGoogle Group: RxJava\nTwitter: @RxJava\nGitHub Issues\nStackOverflow: rx-java and rx-java2\nGitter.im\n\nVersioning\nVersion 3.x is in development. Bugfixes will be applied to both 2.x and 3.x branches, but new features will only be added to 3.x.\nMinor 3.x increments (such as 3.1, 3.2, etc) will occur when non-trivial new functionality is added or significant enhancements or bug fixes occur that may have behavioral changes that may affect some edge cases (such as dependence on behavior resulting from a bug). An example of an enhancement that would classify as this is adding reactive pull backpressure support to an operator that previously did not support it. This should be backwards compatible but does behave differently.\nPatch 3.x.y increments (such as 3.0.0 -> 3.0.1, 3.3.1 -> 3.3.2, etc) will occur for bug fixes and trivial functionality (like adding a method overload). New functionality marked with an @Beta or @Experimental annotation can also be added in the patch releases to allow rapid exploration and iteration of unstable new functionality.\n@Beta\nAPIs marked with the @Beta annotation at the class or method level are subject to change. They can be modified in any way, or even removed, at any time. If your code is a library itself (i.e. it is used on the CLASSPATH of users outside your control), you should not use beta APIs, unless you repackage them (e.g. using ProGuard, shading, etc).\n@Experimental\nAPIs marked with the @Experimental annotation at the class or method level will almost certainly change. They can be modified in any way, or even removed, at any time. You should not use or rely on them in any production code. They are purely to allow broad testing and feedback.\n@Deprecated\nAPIs marked with the @Deprecated annotation at the class or method level will remain supported until the next major release but it is recommended to stop using them.\nio.reactivex.rxjava3.internal.*\nAll code inside the io.reactivex.rxjava3.internal.* packages are considered private API and should not be relied upon at all. It can change at any time.\nFull Documentation\n\nWiki\nJavadoc\nLatest snaphot Javadoc\nJavadoc of a specific release version: http://reactivex.io/RxJava/3.x/javadoc/3.x.y/\n\nBinaries\nBinaries and dependency information for Maven, Ivy, Gradle and others can be found at http://search.maven.org.\nExample for Gradle:\ncompile 'io.reactivex.rxjava3:rxjava:x.y.z'\nand for Maven:\n<dependency>\n    <groupId>io.reactivex.rxjava3</groupId>\n    <artifactId>rxjava</artifactId>\n    <version>x.y.z</version>\n</dependency>\nand for Ivy:\n<dependency org=\"io.reactivex.rxjava3\" name=\"rxjava\" rev=\"x.y.z\" />\nSnapshots are available via https://oss.jfrog.org/libs-snapshot/io/reactivex/rxjava3/rxjava/\nrepositories {\n    maven { url 'https://oss.jfrog.org/libs-snapshot' }\n}\n\ndependencies {\n    compile 'io.reactivex.rxjava3:rxjava:3.0.0-SNAPSHOT'\n}\nBuild\nTo build:\n$ git clone git@github.com:ReactiveX/RxJava.git\n$ cd RxJava/\n$ ./gradlew build\n\nFurther details on building can be found on the Getting Started page of the wiki.\nBugs and Feedback\nFor bugs, questions and discussions please use the Github Issues.\nLICENSE\nCopyright (c) 2016-present, RxJava Contributors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n"}, {"repo": "rust-lang/rust", "language": "Rust", "readme": "\nThe Rust Programming Language\nThis is the main source code repository for Rust. It contains the compiler,\nstandard library, and documentation.\nQuick Start\nRead \"Installation\" from The Book.\nInstalling from Source\nNote: If you wish to contribute to the compiler, you should read this\nchapter of the rustc-guide instead of this section.\nThe Rust build system has a Python script called x.py to bootstrap building\nthe compiler. More information about it may be found by running ./x.py --help\nor reading the rustc guide.\nBuilding on *nix\n\n\nMake sure you have installed the dependencies:\n\ng++ 5.1 or later or clang++ 3.5 or later\npython 2.7 (but not 3.x)\nGNU make 3.81 or later\ncmake 3.4.3 or later\ncurl\ngit\nssl which comes in libssl-dev or openssl-devel\npkg-config if you are compiling on Linux and targeting Linux\n\n\n\nClone the source with git:\n$ git clone https://github.com/rust-lang/rust.git\n$ cd rust\n\n\n\n\nConfigure the build settings:\nThe Rust build system uses a file named config.toml in the root of the\nsource tree to determine various configuration settings for the build.\nCopy the default config.toml.example to config.toml to get started.\n$ cp config.toml.example config.toml\nIt is recommended that if you plan to use the Rust build system to create\nan installation (using ./x.py install) that you set the prefix value\nin the [install] section to a directory that you have write permissions.\nCreate install directory if you are not installing in default directory\n\n\nBuild and install:\n$ ./x.py build && ./x.py install\nWhen complete, ./x.py install will place several programs into\n$PREFIX/bin: rustc, the Rust compiler, and rustdoc, the\nAPI-documentation tool. This install does not include Cargo,\nRust's package manager. To build and install Cargo, you may\nrun ./x.py install cargo or set the build.extended key in\nconfig.toml to true to build and install all tools.\n\n\nBuilding on Windows\nThere are two prominent ABIs in use on Windows: the native (MSVC) ABI used by\nVisual Studio, and the GNU ABI used by the GCC toolchain. Which version of Rust\nyou need depends largely on what C/C++ libraries you want to interoperate with:\nfor interop with software produced by Visual Studio use the MSVC build of Rust;\nfor interop with GNU software built using the MinGW/MSYS2 toolchain use the GNU\nbuild.\nMinGW\nMSYS2 can be used to easily build Rust on Windows:\n\n\nGrab the latest MSYS2 installer and go through the installer.\n\n\nRun mingw32_shell.bat or mingw64_shell.bat from wherever you installed\nMSYS2 (i.e. C:\\msys64), depending on whether you want 32-bit or 64-bit\nRust. (As of the latest version of MSYS2 you have to run msys2_shell.cmd -mingw32 or msys2_shell.cmd -mingw64 from the command line instead)\n\n\nFrom this terminal, install the required tools:\n# Update package mirrors (may be needed if you have a fresh install of MSYS2)\n$ pacman -Sy pacman-mirrors\n\n# Install build tools needed for Rust. If you're building a 32-bit compiler,\n# then replace \"x86_64\" below with \"i686\". If you've already got git, python,\n# or CMake installed and in PATH you can remove them from this list. Note\n# that it is important that you do **not** use the 'python2' and 'cmake'\n# packages from the 'msys2' subsystem. The build has historically been known\n# to fail with these packages.\n$ pacman -S git \\\n            make \\\n            diffutils \\\n            tar \\\n            mingw-w64-x86_64-python2 \\\n            mingw-w64-x86_64-cmake \\\n            mingw-w64-x86_64-gcc\n\n\nNavigate to Rust's source code (or clone it), then build it:\n$ ./x.py build && ./x.py install\n\n\nMSVC\nMSVC builds of Rust additionally require an installation of Visual Studio 2017\n(or later) so rustc can use its linker.  The simplest way is to get the\nVisual Studio, check the \u201cC++ build tools\u201d and \u201cWindows 10 SDK\u201d workload.\n(If you're installing cmake yourself, be careful that \u201cC++ CMake tools for\nWindows\u201d doesn't get included under \u201cIndividual components\u201d.)\nWith these dependencies installed, you can build the compiler in a cmd.exe\nshell with:\n> python x.py build\nCurrently, building Rust only works with some known versions of Visual Studio. If\nyou have a more recent version installed the build system doesn't understand\nthen you may need to force rustbuild to use an older version. This can be done\nby manually calling the appropriate vcvars file before running the bootstrap.\n> CALL \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat\"\n> python x.py build\nBuilding rustc with older host toolchains\nIt is still possible to build Rust with the older toolchain versions listed below, but only if the\nLLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN option is set to true in the config.toml file.\n\nClang 3.1\nApple Clang 3.1\nGCC 4.8\nVisual Studio 2015 (Update 3)\n\nToolchain versions older than what is listed above cannot be used to build rustc.\nSpecifying an ABI\nEach specific ABI can also be used from either environment (for example, using\nthe GNU ABI in PowerShell) by using an explicit build triple. The available\nWindows build triples are:\n\nGNU ABI (using GCC)\n\ni686-pc-windows-gnu\nx86_64-pc-windows-gnu\n\n\nThe MSVC ABI\n\ni686-pc-windows-msvc\nx86_64-pc-windows-msvc\n\n\n\nThe build triple can be specified by either specifying --build=<triple> when\ninvoking x.py commands, or by copying the config.toml file (as described\nin Installing From Source), and modifying the\nbuild option under the [build] section.\nConfigure and Make\nWhile it's not the recommended build system, this project also provides a\nconfigure script and makefile (the latter of which just invokes x.py).\n$ ./configure\n$ make && sudo make install\nWhen using the configure script, the generated config.mk file may override the\nconfig.toml file. To go back to the config.toml file, delete the generated\nconfig.mk file.\nBuilding Documentation\nIf you\u2019d like to build the documentation, it\u2019s almost the same:\n$ ./x.py doc\nThe generated documentation will appear under doc in the build directory for\nthe ABI used. I.e., if the ABI was x86_64-pc-windows-msvc, the directory will be\nbuild\\x86_64-pc-windows-msvc\\doc.\nNotes\nSince the Rust compiler is written in Rust, it must be built by a\nprecompiled \"snapshot\" version of itself (made in an earlier stage of\ndevelopment). As such, source builds require a connection to the Internet, to\nfetch snapshots, and an OS that can execute the available snapshot binaries.\nSnapshot binaries are currently built and tested on several platforms:\n\n\n\nPlatform / Architecture\nx86\nx86_64\n\n\n\n\nWindows (7, 8, 10, ...)\n\u2713\n\u2713\n\n\nLinux (2.6.18 or later)\n\u2713\n\u2713\n\n\nmacOS (10.7 Lion or later)\n\u2713\n\u2713\n\n\n\nYou may find that other platforms work, but these are our officially\nsupported build environments that are most likely to work.\nThere is more advice about hacking on Rust in CONTRIBUTING.md.\nGetting Help\nThe Rust community congregates in a few places:\n\nStack Overflow - Direct questions about using the language.\nusers.rust-lang.org - General discussion and broader questions.\n/r/rust - News and general discussion.\n\nContributing\nTo contribute to Rust, please see CONTRIBUTING.\nMost real-time collaboration happens in a variety of channels on the\nRust Discord server, with channels dedicated for getting help,\ncommunity, documentation, and all major contribution areas in the Rust ecosystem.\nA good place to ask for help would be the #help channel.\nThe rustc guide might be a good place to start if you want to find out how\nvarious parts of the compiler work.\nAlso, you may find the rustdocs for the compiler itself useful.\nLicense\nRust is primarily distributed under the terms of both the MIT license\nand the Apache License (Version 2.0), with portions covered by various\nBSD-like licenses.\nSee LICENSE-APACHE, LICENSE-MIT, and\nCOPYRIGHT for details.\nTrademark\nThe Rust programming language is an open source, community project governed\nby a core team. It is also sponsored by the Mozilla Foundation (\u201cMozilla\u201d),\nwhich owns and protects the Rust and Cargo trademarks and logos\n(the \u201cRust Trademarks\u201d).\nIf you want to use these names or brands, please read the media guide.\nThird-party logos may be subject to third-party copyrights and trademarks. See\nLicenses for details.\n\n"}, {"repo": "psf/requests", "language": "Python", "readme": "\n\n    \n    \n    \n    \n     Python 3.7.4 (default, Sep  7 2019, 18:27:02)\n     >>> import requests\n     >>> r = requests.get('https://api.github.com/repos/psf/requests')\n     >>> r.json()[\"description\"]\n     'A simple, yet elegant HTTP library. Handcrafted, with \u2665, for the Python community.'\n    \n\n    \nThis software has been designed for you, with much joy,\nby Kenneth Reitz & is protected by The Python Software Foundation.\n   \n\n\n\u00a0\u00a0\nRequests is an elegant and simple HTTP library for Python, built with \u2665.\n\u00a0\n>>> import requests\n>>> r = requests.get('https://api.github.com/user', auth=('user', 'pass'))\n>>> r.status_code\n200\n>>> r.headers['content-type']\n'application/json; charset=utf8'\n>>> r.encoding\n'utf-8'\n>>> r.text\nu'{\"type\":\"User\"...'\n>>> r.json()\n{u'disk_usage': 368627, u'private_gists': 484, ...}\n\n\u00a0\nRequests allows you to send HTTP/1.1 requests extremely easily. There\u2019s no need to manually add query strings to your URLs, or to form-encode your PUT & POST data \u2014 but nowadays, just use the json method!\nRequests is the most downloaded Python package today, pulling in around 14M downloads / week\u2014 according to GitHub, Requests is currently depended upon by 367_296 repositories. You may certainly put your trust in this code.\n\u00a0\n\n\n\n\u00a0\nSupported Features & Best\u2013Practices\nRequests is ready for the demands of building robust and reliable HTTP\u2013speak applications, for the needs of today.\n         + International Domains and URLs       + Keep-Alive & Connection Pooling\n         + Sessions with Cookie Persistence     + Browser-style SSL Verification\n         + Basic & Digest Authentication        + Familiar `dict`\u2013like Cookies\n         + Automatic Decompression of Content   + Automatic Content Decoding\n         + Automatic Connection Pooling         + Unicode Response Bodies*\n         + Multi-part File Uploads              + SOCKS Proxy Support\n         + Connection Timeouts                  + Streaming Downloads\n         + Automatic honoring of `.netrc`       + Chunked HTTP Requests\n\n                            &, of course, rock\u2013solid stability!\n\n\n\u2728 \ud83c\udf70 \u2728\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\u00a0\nRequests Module Installation\nThe recommended way to intall the requests module is to simply use pipenv (or pip, of\ncourse):\n$ pipenv install requests\nAdding requests to Pipfile's [packages]\u2026\n\u2714 Installation Succeeded\n\u2026\nRequests officially supports Python 2.7 & 3.4\u20133.8.\n\nP.S. \u2014\u00a0Documentation is Available at //requests.readthedocs.io.\n\n\n\n\n\u00a0\n\n\n\n\u00a0\n\n\n\n\n"}, {"repo": "ansible/ansible", "language": "Python", "readme": "\n\n \n \n  \n \n \n\n\nAnsible\nAnsible is a radically simple IT automation system. It handles\nconfiguration management, application deployment, cloud provisioning,\nad-hoc task execution, network automation, and multi-node orchestration. Ansible makes complex\nchanges like zero-downtime rolling updates with load balancers easy. More information on the Ansible website.\n\nDesign Principles\n\nHave a dead simple setup process and a minimal learning curve.\nManage machines very quickly and in parallel.\nAvoid custom-agents and additional open ports, be agentless by\nleveraging the existing SSH daemon.\nDescribe infrastructure in a language that is both machine and human\nfriendly.\nFocus on security and easy auditability/review/rewriting of content.\nManage new remote machines instantly, without bootstrapping any\nsoftware.\nAllow module development in any dynamic language, not just Python.\nBe usable as non-root.\nBe the easiest IT automation system to use, ever.\n\n\nUse Ansible\nYou can install a released version of Ansible via pip, a package manager, or\nour release repository. See our\ninstallation guide for details on installing Ansible\non a variety of platforms.\nRed Hat offers supported builds of Ansible Engine.\nPower users and developers can run the devel branch, which has the latest\nfeatures and fixes, directly. Although it is reasonably stable, you are more likely to encounter\nbreaking changes when running the devel branch. We recommend getting involved\nin the Ansible community if you want to run the devel branch.\n\nGet Involved\n\nRead Community\nInformation for all\nkinds of ways to contribute to and interact with the project,\nincluding mailing list information and how to submit bug reports and\ncode to Ansible.\nJoin a Working Group, an organized community devoted to a specific technology domain or platform.\nSubmit a proposed code update through a pull request to the devel branch.\nTalk to us before making larger changes\nto avoid duplicate efforts. This not only helps everyone\nknow what is going on, it also helps save time and effort if we decide\nsome changes are needed.\nFor a list of email lists, IRC channels and Working Groups, see the\nCommunication page\n\n\nBranch Info\n\nThe devel branch corresponds to the release actively under development.\nThe stable-2.X branches correspond to stable releases.\nCreate a branch based on devel and set up a dev environment if you want to open a PR.\nSee the Ansible release and maintenance page for information about active branches.\n\n\nRoadmap\nBased on team and community feedback, an initial roadmap will be published for a major or minor version (ex: 2.7, 2.8).\nThe Ansible Roadmap page details what is planned and how to influence the roadmap.\n\nAuthors\nAnsible was created by Michael DeHaan\nand has contributions from over 4700 users (and growing). Thanks everyone!\nAnsible is sponsored by Red Hat, Inc.\n\nLicense\nGNU General Public License v3.0 or later\nSee COPYING to see the full text.\n\n"}, {"repo": "kdn251/interviews", "language": "Java", "readme": "\nInterviews\n\nYour personal guide to Software Engineering technical interviews. Video\nsolutions to the following interview problems with detailed explanations can be found here.\n\nMaintainer - Kevin Naughton Jr.\n\nTranslations\n\n\u7b80\u4f53\u4e2d\u6587\n\nTable of Contents\n\nYouTube\nInstagram\nArticles\nOnline Judges\nLive Coding Practice\nData Structures\nAlgorithms\nGreedy Algorithms\nBitmasks\nRuntime Analysis\nVideo Lectures\nInterview Books\nComputer Science News\nDirectory Tree\n\nYouTube\n\nKevin Naughton Jr.\n\nInstagram\n\nProgrameme\n\nArticles\n\nStarting Work\n\nOnline Judges\n\nLeetCode\nVirtual Judge\nCareerCup\nHackerRank\nCodeFights\nKattis\nHackerEarth\nCodility\nCode Forces\nCode Chef\nSphere Online Judge - SPOJ\nInterviewBit\n\nLive Coding Practice\n\nPramp\nGainlo\nRefdash\nInterviewing.io\n\nData Structures\nLinked List\n\nA Linked List is a linear collection of data elements, called nodes, each\npointing to the next node by means of a pointer. It is a data structure\nconsisting of a group of nodes which together represent a sequence.\nSingly-linked list: linked list in which each node points to the next node and the last node points to null\nDoubly-linked list: linked list in which each node has two pointers, p and n, such that p points to the previous node and n points to the next node; the last node's n pointer points to null\nCircular-linked list: linked list in which each node points to the next node and the last node points back to the first node\nTime Complexity:\n\nAccess: O(n)\nSearch: O(n)\nInsert: O(1)\nRemove: O(1)\n\n\n\nStack\n\nA Stack is a collection of elements, with two principle operations: push, which adds to the collection, and\npop, which removes the most recently added element\nLast in, first out data structure (LIFO): the most recently added object is the first to be removed\nTime Complexity:\n\nAccess: O(n)\nSearch: O(n)\nInsert: O(1)\nRemove: O(1)\n\n\n\nQueue\n\nA Queue is a collection of elements, supporting two principle operations: enqueue, which inserts an element\ninto the queue, and dequeue, which removes an element from the queue\nFirst in, first out data structure (FIFO): the oldest added object is the first to be removed\nTime Complexity:\n\nAccess: O(n)\nSearch: O(n)\nInsert: O(1)\nRemove: O(1)\n\n\n\nTree\n\nA Tree is an undirected, connected, acyclic graph\n\nBinary Tree\n\nA Binary Tree is a tree data structure in which each node has at most two children, which are referred to as\nthe left child and right child\nFull Tree: a tree in which every node has either 0 or 2 children\nPerfect Binary Tree: a binary tree in which all interior nodes have two children and all leave have the same depth\nComplete Tree: a binary tree in which every level except possibly the last is full and all nodes in the last\nlevel are as far left as possible\n\nBinary Search Tree\n\nA binary search tree, sometimes called BST, is a type of binary tree which maintains the property that the value in each\nnode must be greater than or equal to any value stored in the left sub-tree, and less than or equal to any value stored\nin the right sub-tree\nTime Complexity:\n\nAccess: O(log(n))\nSearch: O(log(n))\nInsert: O(log(n))\nRemove: O(log(n))\n\n\n\n\nTrie\n\nA trie, sometimes called a radix or prefix tree, is a kind of search tree that is used to store a dynamic set or associative\narray where the keys are usually Strings. No node in the tree stores the key associated with that node; instead, its position\nin the tree defines the key with which it is associated. All the descendants of a node have a common prefix of the String associated\nwith that node, and the root is associated with the empty String.\n\n\nFenwick Tree\n\nA Fenwick tree, sometimes called a binary indexed tree, is a tree in concept, but in practice is implemented as an implicit data\nstructure using an array. Given an index in the array representing a vertex, the index of a vertex's parent or child is calculated\nthrough bitwise operations on the binary representation of its index. Each element of the array contains the pre-calculated sum of\na range of values, and by combining that sum with additional ranges encountered during an upward traversal to the root, the prefix\nsum is calculated\nTime Complexity:\n\nRange Sum: O(log(n))\nUpdate: O(log(n))\n\n\n\n\nSegment Tree\n\nA Segment tree, is a tree data structure for storing intervals, or segments. It allows querying which of the stored segments contain\na given point\nTime Complexity:\n\nRange Query: O(log(n))\nUpdate: O(log(n))\n\n\n\n\nHeap\n\nA Heap is a specialized tree based structure data structure that satisfies the heap property: if A is a parent node of\nB, then the key (the value) of node A is ordered with respect to the key of node B with the same ordering applying across the entire heap.\nA heap can be classified further as either a \"max heap\" or a \"min heap\". In a max heap, the keys of parent nodes are always greater\nthan or equal to those of the children and the highest key is in the root node. In a min heap, the keys of parent nodes are less than\nor equal to those of the children and the lowest key is in the root node\nTime Complexity:\n\nAccess Max / Min: O(1)\nInsert: O(log(n))\nRemove Max / Min: O(log(n))\n\n\n\n\nHashing\n\nHashing is used to map data of an arbitrary size to data of a fixed size. The values returned by a hash\nfunction are called hash values, hash codes, or simply hashes. If two keys map to the same value, a collision occurs\nHash Map: a hash map is a structure that can map keys to values. A hash map uses a hash function to compute\nan index into an array of buckets or slots, from which the desired value can be found.\nCollision Resolution\nSeparate Chaining: in separate chaining, each bucket is independent, and contains a list of entries for each index. The\ntime for hash map operations is the time to find the bucket (constant time), plus the time to iterate through the list\nOpen Addressing: in open addressing, when a new entry is inserted, the buckets are examined, starting with the\nhashed-to-slot and proceeding in some sequence, until an unoccupied slot is found. The name open addressing refers to\nthe fact that the location of an item is not always determined by its hash value\n\n\nGraph\n\nA Graph is an ordered pair of G = (V, E) comprising a set V of vertices or nodes together with a set E of edges or arcs,\nwhich are 2-element subsets of V (i.e. an edge is associated with two vertices, and that association takes the form of the\nunordered pair comprising those two vertices)\nUndirected Graph: a graph in which the adjacency relation is symmetric. So if there exists an edge from node u to node\nv (u -> v), then it is also the case that there exists an edge from node v to node u (v -> u)\nDirected Graph: a graph in which the adjacency relation is not symmetric. So if there exists an edge from node u to node v\n(u -> v), this does not imply that there exists an edge from node v to node u (v -> u)\n\n\nAlgorithms\nSorting\nQuicksort\n\nStable: No\nTime Complexity:\n\nBest Case: O(nlog(n))\nWorst Case: O(n^2)\nAverage Case: O(nlog(n))\n\n\n\n\nMergesort\n\nMergesort is also a divide and conquer algorithm. It continuously divides an array into two halves, recurses on both the\nleft subarray and right subarray and then merges the two sorted halves\nStable: Yes\nTime Complexity:\n\nBest Case: O(nlog(n))\nWorst Case: O(nlog(n))\nAverage Case: O(nlog(n))\n\n\n\n\nBucket Sort\n\nBucket Sort is a sorting algorithm that works by distributing the elements of an array into a number of buckets. Each bucket\nis then sorted individually, either using a different sorting algorithm, or by recursively applying the bucket sorting algorithm\nTime Complexity:\n\nBest Case: \u03a9(n + k)\nWorst Case: O(n^2)\nAverage Case:\u0398(n + k)\n\n\n\n\nRadix Sort\n\nRadix Sort is a sorting algorithm that like bucket sort, distributes elements of an array into a number of buckets. However, radix\nsort differs from bucket sort by 're-bucketing' the array after the initial pass as opposed to sorting each bucket and merging\nTime Complexity:\n\nBest Case: \u03a9(nk)\nWorst Case: O(nk)\nAverage Case: \u0398(nk)\n\n\n\nGraph Algorithms\nDepth First Search\n\nDepth First Search is a graph traversal algorithm which explores as far as possible along each branch before backtracking\nTime Complexity: O(|V| + |E|)\n\n\nBreadth First Search\n\nBreadth First Search is a graph traversal algorithm which explores the neighbor nodes first, before moving to the next\nlevel neighbors\nTime Complexity: O(|V| + |E|)\n\n\nTopological Sort\n\nTopological Sort is the linear ordering of a directed graph's nodes such that for every edge from node u to node v, u\ncomes before v in the ordering\nTime Complexity: O(|V| + |E|)\n\nDijkstra's Algorithm\n\nDijkstra's Algorithm is an algorithm for finding the shortest path between nodes in a graph\nTime Complexity: O(|V|^2)\n\n\nBellman-Ford Algorithm\n\nBellman-Ford Algorithm is an algorithm that computes the shortest paths from a single source node to all other nodes in a weighted graph\nAlthough it is slower than Dijkstra's, it is more versatile, as it is capable of handling graphs in which some of the edge weights are\nnegative numbers\nTime Complexity:\n\nBest Case: O(|E|)\nWorst Case: O(|V||E|)\n\n\n\n\nFloyd-Warshall Algorithm\n\nFloyd-Warshall Algorithm is an algorithm for finding the shortest paths in a weighted graph with positive or negative edge weights, but\nno negative cycles\nA single execution of the algorithm will find the lengths (summed weights) of the shortest paths between all pairs of nodes\nTime Complexity:\n\nBest Case: O(|V|^3)\nWorst Case: O(|V|^3)\nAverage Case: O(|V|^3)\n\n\n\nPrim's Algorithm\n\nPrim's Algorithm is a greedy algorithm that finds a minimum spanning tree for a weighted undirected graph. In other words, Prim's find a\nsubset of edges that forms a tree that includes every node in the graph\nTime Complexity: O(|V|^2)\n\n\nKruskal's Algorithm\n\nKruskal's Algorithm is also a greedy algorithm that finds a minimum spanning tree in a graph. However, in Kruskal's, the graph does not\nhave to be connected\nTime Complexity: O(|E|log|V|)\n\n\nGreedy Algorithms\n\nGreedy Algorithms are algorithms that make locally optimal choices at each step in the hope of eventually reaching the globally optimal solution\nProblems must exhibit two properties in order to implement a Greedy solution:\nOptimal Substructure\n\nAn optimal solution to the problem contains optimal solutions to the given problem's subproblems\n\n\nThe Greedy Property\n\nAn optimal solution is reached by \"greedily\" choosing the locally optimal choice without ever reconsidering previous choices\n\n\nExample - Coin Change\n\nGiven a target amount V cents and a list of denominations of n coins, i.e. we have coinValue[i] (in cents) for coin types i from [0...n - 1],\nwhat is the minimum number of coins that we must use to represent amount V? Assume that we have an unlimited supply of coins of any type\nCoins - Penny (1 cent), Nickel (5 cents), Dime (10 cents), Quarter (25 cents)\nAssume V = 41. We can use the Greedy algorithm of continuously selecting the largest coin denomination less than or equal to V, subtract that\ncoin's value from V, and repeat.\nV = 41 | 0 coins used\nV = 16 | 1 coin used (41 - 25 = 16)\nV = 6  | 2 coins used (16 - 10 = 6)\nV = 1  | 3 coins used (6 - 5 = 1)\nV = 0  | 4 coins used (1 - 1 = 0)\nUsing this algorithm, we arrive at a total of 4 coins which is optimal\n\n\n\nBitmasks\n\nBitmasking is a technique used to perform operations at the bit level. Leveraging bitmasks often leads to faster runtime complexity and\nhelps limit memory usage\nTest kth bit: s & (1 << k);\nSet kth bit: s |= (1 << k);\nTurn off kth bit: s &= ~(1 << k);\nToggle kth bit: s ^= (1 << k);\nMultiple by 2n: s << n;\nDivide by 2n: s >> n;\nIntersection: s & t;\nUnion: s | t;\nSet Subtraction: s & ~t;\nExtract lowest set bit: s & (-s);\nExtract lowest unset bit: ~s & (s + 1);\nSwap Values:\nx ^= y; y ^= x; x ^= y;\n\nRuntime Analysis\nBig O Notation\n\nBig O Notation is used to describe the upper bound of a particular algorithm. Big O is used to describe worst case scenarios\n\n\nLittle O Notation\n\nLittle O Notation is also used to describe an upper bound of a particular algorithm; however, Little O provides a bound\nthat is not asymptotically tight\n\nBig \u03a9 Omega Notation\n\nBig Omega Notation is used to provide an asymptotic lower bound on a particular algorithm\n\n\nLittle \u03c9 Omega Notation\n\nLittle Omega Notation is used to provide a lower bound on a particular algorithm that is not asymptotically tight\n\nTheta \u0398 Notation\n\nTheta Notation is used to provide a bound on a particular algorithm such that it can be \"sandwiched\" between\ntwo constants (one for an upper limit and one for a lower limit) for sufficiently large values\n\n\nVideo Lectures\n\nData Structures\n\nUC Berkeley Data Structures\nMIT Advanced Data Structures\n\n\nAlgorithms\n\nMIT Introduction to Algorithms\nMIT Advanced Algorithms\nUC Berkeley Algorithms\n\n\n\nInterview Books\n\nCompetitive Programming 3 - Steven Halim & Felix Halim\nCracking The Coding Interview - Gayle Laakmann McDowell\nCracking The PM Interview - Gayle Laakmann McDowell & Jackie Bavaro\nIntroduction to Algorithms -  Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest & Clifford Stein\n\nComputer Science News\n\nHacker News\nLobsters\n\nDirectory Tree\n.\n\u251c\u2500\u2500 Array\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bestTimeToBuyAndSellStock.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 findTheCelebrity.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gameOfLife.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 increasingTripletSubsequence.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 insertInterval.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 longestConsecutiveSequence.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 maximumProductSubarray.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 maximumSubarray.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 mergeIntervals.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 missingRanges.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 productOfArrayExceptSelf.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 rotateImage.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 searchInRotatedSortedArray.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 spiralMatrixII.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 subsetsII.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 subsets.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 summaryRanges.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 wiggleSort.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 wordSearch.java\n\u251c\u2500\u2500 Backtracking\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 androidUnlockPatterns.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 generalizedAbbreviation.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 letterCombinationsOfAPhoneNumber.java\n\u251c\u2500\u2500 BinarySearch\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 closestBinarySearchTreeValue.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 firstBadVersion.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 guessNumberHigherOrLower.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pow(x,n).java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 sqrt(x).java\n\u251c\u2500\u2500 BitManipulation\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 binaryWatch.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 countingBits.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 hammingDistance.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 maximumProductOfWordLengths.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 numberOf1Bits.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sumOfTwoIntegers.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 utf-8Validation.java\n\u251c\u2500\u2500 BreadthFirstSearch\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 binaryTreeLevelOrderTraversal.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 cloneGraph.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pacificAtlanticWaterFlow.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 removeInvalidParentheses.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 shortestDistanceFromAllBuildings.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 symmetricTree.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 wallsAndGates.java\n\u251c\u2500\u2500 DepthFirstSearch\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 balancedBinaryTree.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 battleshipsInABoard.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 convertSortedArrayToBinarySearchTree.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 maximumDepthOfABinaryTree.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 numberOfIslands.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 populatingNextRightPointersInEachNode.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 sameTree.java\n\u251c\u2500\u2500 Design\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 zigzagIterator.java\n\u251c\u2500\u2500 DivideAndConquer\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 expressionAddOperators.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 kthLargestElementInAnArray.java\n\u251c\u2500\u2500 DynamicProgramming\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bombEnemy.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 climbingStairs.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 combinationSumIV.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 countingBits.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 editDistance.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 houseRobber.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 paintFence.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 paintHouseII.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 regularExpressionMatching.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sentenceScreenFitting.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 uniqueBinarySearchTrees.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 wordBreak.java\n\u251c\u2500\u2500 HashTable\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 binaryTreeVerticalOrderTraversal.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 findTheDifference.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 groupAnagrams.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 groupShiftedStrings.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 islandPerimeter.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 loggerRateLimiter.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 maximumSizeSubarraySumEqualsK.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 minimumWindowSubstring.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sparseMatrixMultiplication.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 strobogrammaticNumber.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 twoSum.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 uniqueWordAbbreviation.java\n\u251c\u2500\u2500 LinkedList\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 addTwoNumbers.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 deleteNodeInALinkedList.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 mergeKSortedLists.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 palindromeLinkedList.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 plusOneLinkedList.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 README.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 reverseLinkedList.java\n\u251c\u2500\u2500 Queue\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 movingAverageFromDataStream.java\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 Sort\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 meetingRoomsII.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 meetingRooms.java\n\u251c\u2500\u2500 Stack\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 binarySearchTreeIterator.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 decodeString.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 flattenNestedListIterator.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 trappingRainWater.java\n\u251c\u2500\u2500 String\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 addBinary.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 countAndSay.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 decodeWays.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 editDistance.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 integerToEnglishWords.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 longestPalindrome.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 longestSubstringWithAtMostKDistinctCharacters.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 minimumWindowSubstring.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 multiplyString.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 oneEditDistance.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 palindromePermutation.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 README.md\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 reverseVowelsOfAString.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 romanToInteger.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 validPalindrome.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 validParentheses.java\n\u251c\u2500\u2500 Tree\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 binaryTreeMaximumPathSum.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 binaryTreePaths.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 inorderSuccessorInBST.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 invertBinaryTree.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 lowestCommonAncestorOfABinaryTree.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sumOfLeftLeaves.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 validateBinarySearchTree.java\n\u251c\u2500\u2500 Trie\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 addAndSearchWordDataStructureDesign.java\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 implementTrie.java\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 wordSquares.java\n\u2514\u2500\u2500 TwoPointers\n    \u251c\u2500\u2500 3Sum.java\n    \u251c\u2500\u2500 3SumSmaller.java\n    \u251c\u2500\u2500 mergeSortedArray.java\n    \u251c\u2500\u2500 minimumSizeSubarraySum.java\n    \u251c\u2500\u2500 moveZeros.java\n    \u251c\u2500\u2500 removeDuplicatesFromSortedArray.java\n    \u251c\u2500\u2500 reverseString.java\n    \u2514\u2500\u2500 sortColors.java\n\n18 directories, 124 files\n\n\n"}, {"repo": "gatsbyjs/gatsby", "language": "JavaScript", "readme": "\n\n\n\n\n\n\n  Gatsby v2\n\n\n\u269b\ufe0f \ud83d\udcc4 \ud83d\ude80\n\n\n  Fast in every way that matters\n\n\n  Gatsby is a free and open source framework based on React that helps developers build blazing fast websites and apps\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuickstart\n \u00b7 \nTutorial\n \u00b7 \nPlugins\n \u00b7 \nStarters\n \u00b7 \nShowcase\n \u00b7 \nContribute\n \u00b7 \n  Support: Spectrum\n & \nDiscord\n\nGatsby is a modern web framework for blazing fast websites.\n\n\nGo Beyond Static Websites. Get all the benefits of static websites with none of the\nlimitations. Gatsby sites are fully functional React apps so you can create high-quality,\ndynamic web apps, from blogs to e-commerce sites to user dashboards.\n\n\nUse a Modern Stack for Every Site. No matter where the data comes from, Gatsby sites are\nbuilt using React and GraphQL. Build a uniform workflow for you and your team, regardless of\nwhether the data is coming from the same backend.\n\n\nLoad Data From Anywhere. Gatsby pulls in data from any data source, whether it\u2019s Markdown\nfiles, a headless CMS like Contentful or WordPress, or a REST or GraphQL API. Use source plugins\nto load your data, then develop using Gatsby\u2019s uniform GraphQL interface.\n\n\nPerformance Is Baked In. Ace your performance audits by default. Gatsby automates code\nsplitting, image optimization, inlining critical styles, lazy-loading, and prefetching resources,\nand more to ensure your site is fast \u2014 no manual tuning required.\n\n\nHost at Scale for Pennies. Gatsby sites don\u2019t require servers so you can host your entire\nsite on a CDN for a fraction of the cost of a server-rendered site. Many Gatsby sites can be\nhosted entirely free on services like GitHub Pages and Netlify.\n\n\nLearn how to use Gatsby for your next project.\nWhat\u2019s In This Document\n\nGet Up and Running in 5 Minutes\nLearning Gatsby\nMigration Guides\nHow to Contribute\nLicense\nThanks to Our Contributors and Sponsors\n\n\ud83d\ude80 Get Up and Running in 5 Minutes\nYou can get a new Gatsby site up and running on your local dev environment in 5 minutes with these four steps:\n\n\nInstall the Gatsby CLI.\nnpm install -g gatsby-cli\n\n\n\nCreate a Gatsby site from a Gatsby starter.\nGet your Gatsby blog set up in a single command:\n# create a new Gatsby site using the default starter\ngatsby new my-blazing-fast-site\n\n\nStart the site in develop mode.\nNext, move into your new site\u2019s directory and start it up:\ncd my-blazing-fast-site/\ngatsby develop\n\n\nOpen the source code and start editing!\nYour site is now running at http://localhost:8000. Open the my-blazing-fast-site directory in your code editor of choice and edit src/pages/index.js. Save your changes, and the browser will update in real time!\n\n\nAt this point, you\u2019ve got a fully functional Gatsby website. For additional information on how you can customize your Gatsby site, see our plugins and the official tutorial.\n\ud83c\udf93 Learning Gatsby\nFull documentation for Gatsby lives on the website.\n\n\nFor most developers, we recommend starting with our in-depth tutorial for creating a site with Gatsby. It starts with zero assumptions about your level of ability and walks through every step of the process.\n\n\nTo dive straight into code samples head to our documentation. In particular, check out the \u201cGuides\u201d, \u201cAPI Reference\u201d, and \u201cAdvanced Tutorials\u201d sections in the sidebar.\n\n\nWe welcome suggestions for improving our docs. See the \u201chow to contribute\u201d documentation for more details.\nStart Learning Gatsby: Follow the Tutorial \u00b7 Read the Docs\n\ud83d\udcbc Migration Guides\nAlready have a Gatsby site? These handy guides will help you add the improvements of Gatsby v2 to your site without starting from scratch!\n\nMigrate a Gatsby site from v1 to v2\nStill on v0? Start here: Migrate a Gatsby site from v0 to v1\n\n\u2757 Code of Conduct\nGatsby is dedicated to building a welcoming, diverse, safe community. We expect everyone participating in the Gatsby community to abide by our Code of Conduct. Please read it. Please follow it. In the Gatsby community, we work hard to build each other up and create amazing things together. \ud83d\udcaa\ud83d\udc9c\n\ud83e\udd1d How to Contribute\nWhether you're helping us fix bugs, improve the docs, or spread the word, we'd love to have you as part of the Gatsby community! \ud83d\udcaa\ud83d\udc9c\nCheck out our Contributing Guide for ideas on contributing and setup steps for getting our repositories up and running on your local machine.\nA note on how this repository is organized\nThis repository is a monorepo managed using Lerna. This means there are multiple packages managed in this codebase, even though we publish them to NPM as separate packages.\nContributing to Gatsby v1\nWe are currently only accepting bug fixes for Gatsby v1. No new features will be accepted.\n\ud83d\udcdd License\nLicensed under the MIT License.\n\ud83d\udc9c Thanks\nThanks to our many contributors and to Netlify for hosting gatsbyjs.org and our example sites.\n\n"}, {"repo": "opencv/opencv", "language": "C++", "readme": "\nOpenCV: Open Source Computer Vision Library\nResources\n\nHomepage: https://opencv.org\nDocs: https://docs.opencv.org/master/\nQ&A forum: http://answers.opencv.org\nIssue tracking: https://github.com/opencv/opencv/issues\n\nContributing\nPlease read the contribution guidelines before starting work on a pull request.\nSummary of the guidelines:\n\nOne pull request per issue;\nChoose the right base branch;\nInclude tests and documentation;\nClean up \"oops\" commits before submitting;\nFollow the coding style guide.\n\n\n"}, {"repo": "mtdvio/every-programmer-should-know", "language": "None", "readme": "\n\nJoin our community for professional Software Developers and get more control over your life and career!\n\n\nEvery Programmer Should Know \ud83e\udd14\nA collection of (mostly) technical things every software developer should know.\n\u261d\ufe0f These are resources I can recommend to every programmer regardless of their skill level or tech stack\nHighly opinionated \ud83d\udca3. Not backed by science.\nComes in no particular order \u267b\ufe0f\nU like it? \u2b50\ufe0f it and share with a friendly developer!\nU don't like it? Watch the doggo \ud83d\udc36\nP.S. You don't need to know all of that by heart to be a programmer.\nBut knowing the stuff will help you become better! \ud83d\udcaa\nP.P.S. Contributions are welcome!\n\nIntroduction\n\n\ud83c\udfa5 Map of Computer Science\n\ud83c\udfa5 40 Key Computer Science Concepts Explained In Layman\u2019s Terms\n\nFalsehoods\n\nAwesome Falsehoods\n\ud83d\udc8a Curated list of falsehoods programmers believe in.\nCheck for things you do not know about Strings, Addresses, Names, Numbers, Emails, Timezones and Dates and more.\n\nAlgorithms\n\nBig O Cheatsheet\n\ud83d\udcd6 Grokking Algorithms\nAlgorithms Visualization\n\nData Structures\n\n\ud83c\udfa5 UC Berkeley, Data Structures Course\nFoundations of Data Structures - EDX\nData Structures - Coursera\nMathematics for Computer Science - Eric Lehman\n\nNumbers\n\n\ud83d\udcd6 How to Count\n\ud83d\udcc4 Floating Point Guide\n\ud83d\udcc4 What Every Computer Scientist Should Know About Floating-Point Arithmetic\n\ud83d\udcc4 Basic Number Theory Every Programmer Should Know...\n\nStrings\n\n\ud83d\udcc4 Unicode and Character Sets\nHomoglyphs\nUnicode Common Locale Data Repository\n\ud83c\udfa5 ASCII\n\ud83c\udfa5 UTF-8\n\nLatency\n\nInteractive Latency Infographics\n\ud83d\udcc4 Latency Numbers Every Programmer Should Know\n\nTime\n\n\ud83d\udcc4 Some notes about time\n\ud83c\udfa5 The Problem with Timezones\n\nMemory\n\n\ud83d\udcc4 What every Programmer should know about memory\n\nDistributed Systems\n\n\ud83d\udcd6 Designing Data-Intensive Applications\n\ud83d\udcdc Designs, Lessons and Advice from Building Large Distributed Systems\n\ud83d\udcdc Time, Clocks and the Ordering of Events in a Distributed System\n\ud83d\udcc4 There is No Now\n\ud83d\udcc4 Jepsen: how different databases behave under partition\n\ud83d\udcdc Fallacies of Distributed Computing Explained\n\nRegExp\n\nRegexHQ\nLearn regex the easy way\n\nSecurity\n\n\ud83d\udcd6 Security Programming\n\ud83d\udcc4 Rolling Your Own Crypto\n\ud83d\udcc4 Cryptographic Right Answers\n\ud83d\udcc4 An Open Letter to Developers Everywhere (About Cryptography)\n\ud83d\udcd6 Foundations of Security: What Every Programmer Needs to Know \nOWASP Top 10\nWeb Application Exploits and Defenses\n\ud83d\udcc4 Hashing, Encryption and Encoding\n\nUX/Usability\n\n\ud83d\udcd6 Don't Make Me Think: A Common Sense Approach to Web Usability\n\ud83c\udfa5 Inventing on Principle\n\nSEO\n\n\ud83d\udcc4 What Every Programmer Should Know About SEO\n\nArchitecture\n\n\ud83d\udcdc A Field Guide to Boxology\n\ud83d\udcdc Out of the Tar Pit\n\ud83d\udcdc No Silver Bullet \u2014 Essence and Accidents of Software Engineering\n\ud83c\udfa5 Growing a Language\n\ud83c\udfa5 CQRS and Event Sourcing\n\ud83d\udcd6 Practical Object Oriented Design in Ruby\n\ud83c\udfa5 Evolutionary Software Architectures\nSystem Design: A Primer\n\ud83d\udcc4 How JavaScript works: part-1, 2, 3, 4\n\ud83c\udfa5 Entity-Component-System Architecture with Unity by example\n\nEngineering Philosophy\n\n\ud83c\udfa5 Category Theory in Life\n\ud83c\udfa5 Simple Made Easy\n\ud83d\udcc4 Speed In Software Development\n\ud83c\udfa5 #NoEstimates\n\ud83c\udfa5 The Myth of the Genius Programmer\n\ud83c\udfa5 Making Badass Developers\n\ud83d\udcc4 The Ten Rules of a Zen Programmer\n\ud83d\udcc4 The mythical 10x programmer\n\ud83d\udcc4 The Debugging Mindset\n\ud83c\udfa5 The Future of Programming\n\ud83d\udcc4 The Good Software Development Manifesto\n\nPractices\n\n\ud83d\udcd6 Working Effectively with Legacy Code\n\ud83d\udcd6 Clean Code: A Handbook of Agile Software Craftsmanship\n\ud83d\udcd6 Test Driven Development: By Example\n\u2705 Going To Production Checklist\n\ud83d\udcd6 Release It!\n\ud83d\udcd6 Professor Frisby's Mostly Adequate Guide to Functional Programming\n\ud83d\udcd6 SICP: Structure and Interpretation of Computer Programs\n\ud83d\udcc4 Thirteen Ways of Looking at a Turtle\n\ud83d\udcdc Programming Paradigms for Dummies: What Every Programmer Should Know\nLearn X in Y Minutes\nLearn the basics of a language in a highly condensed way.\nHyperpolyglot\nCompare commonly used features of more or less similar languages side-by-side. Helps you to jump Python<->Ruby, Ocaml<->Haskell, etc.\n\ud83d\udcc4 Pomodoro for Programmers\n\ud83d\udcd6 Site Reliability Engineering\n\nCareer\n\n\ud83d\udcb0 Levels FYI\nSalary stats for various tech companies. Better than Glassdoor.\n\ud83d\udcc4 10 Things Every Programmer Should Know For Their First Job\n\ud83d\udcc4 How Much Do Software Engineers Really Make in Each City?\n\ud83d\udcc4 Software Engineers Tenure in San Francisco\nSoftware Engineering 101\n\ud83d\udcd6 The Passionate Programmer\n\ud83d\udcd6 Soft Skills: The software developer's life manual\n\ud83d\udcd6 The Complete Software Developer's Career Guide\n\ud83d\udcd6 Programming Beyond Practices: Be More Than Just a Code Monkey\nA list of European Investors\n\ud83d\udcc4 Ten Rules for Negotiating a Job Offer\n\ud83d\udcc4 How To Interview As a Developer Candidate\n\ud83d\udcc4 How To Get a Tech Job Abroad Faster\n\ud83d\udcd6 How To Be A STAR Engineer\n\ud83d\udcc4 TL;DR; Stock Options\n\ud83d\udcc4 Equity 101 for Startup Employees\n\ud83d\udcd6 Cracking the Coding Interview: 189 Programming Questions and Solutions\n\ud83d\udd25 Everything you need to know to get the job\n\ud83d\udcd6 Tech Interview Handbook\n\ud83d\udcc4 Teach Yourself Programming in Ten Years\n\ud83d\udcc4 What you should know as a founder of a software company\n\nFine-tune Your Resume\n\n\ud83d\udd28 CV Compiler\n\nOpen Source\n\n\ud83c\udf10 An Intro to Git and GitHub for Beginners\n\nRemote Work\n\n\ud83c\udf10 Remotive.io: Startups hiring remotely\n\ud83c\udf10 Remote Work List for Developers\n\u26a1\ufe0f NomadList\n\ud83d\udcd6 The Ultimate Guide to Remote Work\n\ud83c\udfe0 Awesome Remote Job\n\nProblem Solving\n\n\ud83d\udcd6 The Art and Craft of Problem Solving\n\ud83d\udcd6 How to Solve It: A New Aspect of Mathematical Method\n\nSoft Skills\n\n\ud83d\udcd6 Difficult Conversations\n\ud83d\udcd6 Crucial Conversations\n\ud83d\udcd6 How to Win Friends and Influence People\n\nMental Health\n\nAwesome Mental Health\nA curated list of awesome articles, websites and resources about mental health in the software industry.\n\nPapers on Programming\n\n\u2764\ufe0f Papers We Love\n\ud83d\udcf0 The Morning Paper\n\ud83d\udcdc What Every Programmer Should Know About Memory\n\ud83d\udcdc Go To Statement Considered Harmful\n\nFree Books on Programming\n\n\ud83d\udcda Free Programming Books\n\nServices \u26a1\ufe0f\n\nFree For Dev\nPublic APIs\nThe Noun Project\nWithout Coding\nSimpleicons\nLearn Anything\nrepl.it\n\nLicenses\n\nChoose An Open Source License\nWell-explained Software licenses in TLDR version\n\nWhere To Look For Further Info\n\nfreeCodeCamp Guide\nGeeksForGeeks\nDev.To\nStack Overflow\nDzone\n\nCoding Practice Sites \u26a1\ufe0f\n\n\ud83d\udd17 CodeForces\n\ud83d\udd17 CodeChef\n\ud83d\udd17 Coderbyte\n\ud83d\udd17 CodinGame\n\ud83d\udd17 Cs Academy\n\ud83d\udd17 HackerRank\n\ud83d\udd17 Spoj\n\ud83d\udd17 HackerEarth\n\ud83d\udd17 TopCoder\n\ud83d\udd17 Codewars\n\ud83d\udd17 Exercism\n\ud83d\udd17 CodeSignal\n\ud83d\udd17 Project Euler\n\ud83d\udd17 LeetCode\n\ud83d\udd17 Firecode.io\n\ud83d\udd17 InterviewBit\n\ud83d\udd17 uCoder\n\ud83d\udd17 LintCode\n\ud83d\udd17 CodeCombat\n\ud83d\udd17 InterviewCake\n\ud83d\udd17 At Coder\n\n\n"}]